

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Sep 08 11:41:43 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
    10                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    11                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    14                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    26                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    27                           	psect	text0,global,reloc=2,class=CODE,delta=1
    28                           	psect	text1,global,reloc=2,class=CODE,delta=1
    29                           	psect	text2,global,reloc=2,class=CODE,delta=1
    30                           	psect	text3,global,reloc=2,class=CODE,delta=1
    31                           	psect	text4,global,reloc=2,class=CODE,delta=1
    32                           	psect	text5,global,reloc=2,class=CODE,delta=1
    33                           	psect	text6,global,reloc=2,class=CODE,delta=1
    34                           	psect	text7,global,reloc=2,class=CODE,delta=1
    35                           	psect	text8,global,reloc=2,class=CODE,delta=1
    36                           	psect	text9,global,reloc=2,class=CODE,delta=1
    37                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text12,global,reloc=2,class=CODE,delta=1
    40                           	psect	text13,global,reloc=2,class=CODE,delta=1
    41                           	psect	text14,global,reloc=2,class=CODE,delta=1
    42                           	psect	text15,global,reloc=2,class=CODE,delta=1
    43                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text17,global,reloc=2,class=CODE,delta=1
    45                           	psect	text18,global,reloc=2,class=CODE,delta=1
    46                           	psect	text19,global,reloc=2,class=CODE,delta=1
    47                           	psect	text20,global,reloc=2,class=CODE,delta=1
    48                           	psect	text21,global,reloc=2,class=CODE,delta=1
    49                           	psect	text22,global,reloc=2,class=CODE,delta=1
    50                           	psect	text23,global,reloc=2,class=CODE,delta=1
    51                           	psect	text24,global,reloc=2,class=CODE,delta=1
    52                           	psect	text25,global,reloc=2,class=CODE,delta=1
    53                           	psect	text26,global,reloc=2,class=CODE,delta=1
    54                           	psect	text27,global,reloc=2,class=CODE,delta=1
    55                           	psect	text28,global,reloc=2,class=CODE,delta=1
    56                           	psect	text29,global,reloc=2,class=CODE,delta=1
    57                           	psect	text30,global,reloc=2,class=CODE,delta=1
    58                           	psect	text31,global,reloc=2,class=CODE,delta=1
    59                           	psect	text32,global,reloc=2,class=CODE,delta=1
    60                           	psect	text33,global,reloc=2,class=CODE,delta=1
    61                           	psect	text34,global,reloc=2,class=CODE,delta=1
    62                           	psect	text35,global,reloc=2,class=CODE,delta=1
    63                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text37,global,reloc=2,class=CODE,delta=1
    65                           	psect	text38,global,reloc=2,class=CODE,delta=1
    66                           	psect	text39,global,reloc=2,class=CODE,delta=1
    67                           	psect	text40,global,reloc=2,class=CODE,delta=1
    68                           	psect	text41,global,reloc=2,class=CODE,delta=1
    69                           	psect	text42,global,reloc=2,class=CODE,delta=1
    70                           	psect	text43,global,reloc=2,class=CODE,delta=1
    71                           	psect	text44,global,reloc=2,class=CODE,delta=1
    72                           	psect	text45,global,reloc=2,class=CODE,delta=1
    73                           	psect	text46,global,reloc=2,class=CODE,delta=1
    74                           	psect	text47,global,reloc=2,class=CODE,delta=1
    75                           	psect	text48,global,reloc=2,class=CODE,delta=1
    76                           	psect	text49,global,reloc=2,class=CODE,delta=1
    77                           	psect	text50,global,reloc=2,class=CODE,delta=1
    78                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text52,global,reloc=2,class=CODE,delta=1
    80                           	psect	text53,global,reloc=2,class=CODE,delta=1
    81                           	psect	text54,global,reloc=2,class=CODE,delta=1
    82                           	psect	text55,global,reloc=2,class=CODE,delta=1
    83                           	psect	text56,global,reloc=2,class=CODE,delta=1
    84                           	psect	text57,global,reloc=2,class=CODE,delta=1
    85                           	psect	text58,global,reloc=2,class=CODE,delta=1
    86                           	psect	text59,global,reloc=2,class=CODE,delta=1
    87                           	psect	text60,global,reloc=2,class=CODE,delta=1
    88                           	psect	text61,global,reloc=2,class=CODE,delta=1
    89                           	psect	text62,global,reloc=2,class=CODE,delta=1
    90                           	psect	text63,global,reloc=2,class=CODE,delta=1
    91                           	psect	text64,global,reloc=2,class=CODE,delta=1
    92                           	psect	text65,global,reloc=2,class=CODE,delta=1
    93                           	psect	text66,global,reloc=2,class=CODE,delta=1
    94                           	psect	text67,global,reloc=2,class=CODE,delta=1
    95                           	psect	text68,global,reloc=2,class=CODE,delta=1
    96                           	psect	text69,global,reloc=2,class=CODE,delta=1
    97                           	psect	text70,global,reloc=2,class=CODE,delta=1
    98                           	psect	text71,global,reloc=2,class=CODE,delta=1
    99                           	psect	text72,global,reloc=2,class=CODE,delta=1
   100                           	psect	text73,global,reloc=2,class=CODE,delta=1
   101                           	psect	text74,global,reloc=2,class=CODE,delta=1
   102                           	psect	text75,global,reloc=2,class=CODE,delta=1
   103                           	psect	text76,global,reloc=2,class=CODE,delta=1
   104                           	psect	text77,global,reloc=2,class=CODE,delta=1
   105                           	psect	text78,global,reloc=2,class=CODE,delta=1
   106                           	psect	text79,global,reloc=2,class=CODE,delta=1
   107                           	psect	text80,global,reloc=2,class=CODE,delta=1
   108                           	psect	text81,global,reloc=2,class=CODE,delta=1
   109                           	psect	text82,global,reloc=2,class=CODE,delta=1
   110                           	psect	text83,global,reloc=2,class=CODE,delta=1
   111                           	psect	text84,global,reloc=2,class=CODE,delta=1
   112                           	psect	text85,global,reloc=2,class=CODE,delta=1
   113                           	psect	text86,global,reloc=2,class=CODE,delta=1
   114                           	psect	text87,global,reloc=2,class=CODE,delta=1
   115                           	psect	text88,global,reloc=2,class=CODE,delta=1
   116                           	psect	text89,global,reloc=2,class=CODE,delta=1
   117                           	psect	text90,global,reloc=2,class=CODE,delta=1
   118                           	psect	text91,global,reloc=2,class=CODE,delta=1
   119                           	psect	text92,global,reloc=2,class=CODE,delta=1
   120                           	psect	text93,global,reloc=2,class=CODE,delta=1
   121                           	psect	text94,global,reloc=2,class=CODE,delta=1
   122                           	psect	text95,global,reloc=2,class=CODE,delta=1
   123                           	psect	text96,global,reloc=2,class=CODE,delta=1
   124                           	psect	text97,global,reloc=2,class=CODE,delta=1
   125                           	psect	text98,global,reloc=2,class=CODE,delta=1
   126                           	psect	text99,global,reloc=2,class=CODE,delta=1
   127                           	psect	text100,global,reloc=2,class=CODE,delta=1
   128                           	psect	text101,global,reloc=2,class=CODE,delta=1
   129                           	psect	text102,global,reloc=2,class=CODE,delta=1
   130                           	psect	text103,global,reloc=2,class=CODE,delta=1
   131                           	psect	text104,global,reloc=2,class=CODE,delta=1
   132                           	psect	text105,global,reloc=2,class=CODE,delta=1
   133                           	psect	text106,global,reloc=2,class=CODE,delta=1
   134                           	psect	text107,global,reloc=2,class=CODE,delta=1
   135                           	psect	text108,global,reloc=2,class=CODE,delta=1
   136                           	psect	text109,global,reloc=2,class=CODE,delta=1
   137                           	psect	text110,global,reloc=2,class=CODE,delta=1
   138                           	psect	text111,global,reloc=2,class=CODE,delta=1
   139                           	psect	text112,global,reloc=2,class=CODE,delta=1
   140                           	psect	text113,global,reloc=2,class=CODE,delta=1
   141                           	psect	text114,global,reloc=2,class=CODE,delta=1
   142                           	psect	text115,global,reloc=2,class=CODE,delta=1
   143                           	psect	text116,global,reloc=2,class=CODE,delta=1
   144                           	psect	text117,global,reloc=2,class=CODE,delta=1
   145                           	psect	text118,global,reloc=2,class=CODE,delta=1
   146                           	psect	text119,global,reloc=2,class=CODE,delta=1
   147                           	psect	text120,global,reloc=2,class=CODE,delta=1
   148                           	psect	text121,global,reloc=2,class=CODE,delta=1
   149                           	psect	text122,global,reloc=2,class=CODE,delta=1
   150                           	psect	text123,global,reloc=2,class=CODE,delta=1
   151                           	psect	text124,global,reloc=2,class=CODE,delta=1
   152                           	psect	text125,global,reloc=2,class=CODE,delta=1
   153                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=1
   154                           	psect	text127,global,reloc=2,class=CODE,delta=1
   155                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=1
   156                           	psect	text129,global,reloc=2,class=CODE,delta=1
   157                           	psect	text130,global,reloc=2,class=CODE,delta=1
   158                           	psect	text131,global,reloc=2,class=CODE,delta=1
   159                           	psect	text132,global,reloc=2,class=CODE,delta=1
   160                           	psect	text133,global,reloc=2,class=CODE,delta=1,group=2
   161                           	psect	text134,global,reloc=2,class=CODE,delta=1
   162                           	psect	text135,global,reloc=2,class=CODE,delta=1
   163                           	psect	text136,global,reloc=2,class=CODE,delta=1,inline
   164                           	psect	text137,global,reloc=2,class=CODE,delta=1
   165                           	psect	text138,global,reloc=2,class=CODE,delta=1
   166                           	psect	text139,global,reloc=2,class=CODE,delta=1
   167                           	psect	text140,global,reloc=2,class=CODE,delta=1,inline
   168                           	psect	text141,global,reloc=2,class=CODE,delta=1,inline
   169                           	psect	text142,global,reloc=2,class=CODE,delta=1
   170                           	psect	text143,global,reloc=2,class=CODE,delta=1
   171                           	psect	text144,global,reloc=2,class=CODE,delta=1
   172                           	psect	text145,global,reloc=2,class=CODE,delta=1
   173                           	psect	text146,global,reloc=2,class=CODE,delta=1
   174                           	psect	text147,global,reloc=2,class=CODE,delta=1
   175                           	psect	text148,global,reloc=2,class=CODE,delta=1
   176                           	psect	text149,global,reloc=2,class=CODE,delta=1
   177                           	psect	text150,global,reloc=2,class=CODE,delta=1
   178                           	psect	text151,global,reloc=2,class=CODE,delta=1
   179                           	psect	text152,global,reloc=2,class=CODE,delta=1
   180                           	psect	text153,global,reloc=2,class=CODE,delta=1
   181                           	psect	text154,global,reloc=2,class=CODE,delta=1
   182                           	psect	text155,global,reloc=2,class=CODE,delta=1
   183                           	psect	text156,global,reloc=2,class=CODE,delta=1
   184                           	psect	text157,global,reloc=2,class=CODE,delta=1
   185                           	psect	text158,global,reloc=2,class=CODE,delta=1,inline
   186                           	psect	text159,global,reloc=2,class=CODE,delta=1,inline
   187                           	psect	text160,global,reloc=2,class=CODE,delta=1,inline
   188                           	psect	text161,global,reloc=2,class=CODE,delta=1,inline
   189                           	psect	text162,global,reloc=2,class=CODE,delta=1,inline
   190                           	psect	text163,global,reloc=2,class=CODE,delta=1,inline
   191                           	psect	text164,global,reloc=2,class=CODE,delta=1,inline
   192                           	psect	text165,global,reloc=2,class=CODE,delta=1
   193                           	psect	text166,global,reloc=2,class=CODE,delta=1
   194                           	psect	text167,global,reloc=2,class=CODE,delta=1
   195                           	psect	text168,global,reloc=2,class=CODE,delta=1
   196                           	psect	text169,global,reloc=2,class=CODE,delta=1
   197                           	psect	text170,global,reloc=2,class=CODE,delta=1
   198                           	psect	text171,global,reloc=2,class=CODE,delta=1
   199                           	psect	text172,global,reloc=2,class=CODE,delta=1
   200                           	psect	text173,global,reloc=2,class=CODE,delta=1
   201                           	psect	text174,global,reloc=2,class=CODE,delta=1
   202                           	psect	text175,global,reloc=2,class=CODE,delta=1
   203                           	psect	text176,global,reloc=2,class=CODE,delta=1
   204                           	psect	text177,global,reloc=2,class=CODE,delta=1
   205                           	psect	text178,global,reloc=2,class=CODE,delta=1
   206                           	psect	text179,global,reloc=2,class=CODE,delta=1
   207                           	psect	text180,global,reloc=2,class=CODE,delta=1,inline
   208                           	psect	text181,global,reloc=2,class=CODE,delta=1,inline
   209                           	psect	text182,global,reloc=2,class=CODE,delta=1,inline
   210                           	psect	text183,global,reloc=2,class=CODE,delta=1
   211                           	psect	text184,global,reloc=2,class=CODE,delta=1,inline
   212                           	psect	text185,global,reloc=2,class=CODE,delta=1,inline
   213                           	psect	text186,global,reloc=2,class=CODE,delta=1,inline
   214                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   215                           	psect	text188,global,reloc=2,class=CODE,delta=1
   216                           	psect	text189,global,reloc=2,class=CODE,delta=1
   217                           	psect	text190,global,reloc=2,class=CODE,delta=1
   218                           	psect	text191,global,reloc=2,class=CODE,delta=1
   219                           	psect	text192,global,reloc=2,class=CODE,delta=1
   220                           	psect	text193,global,reloc=2,class=CODE,delta=1
   221                           	psect	text194,global,reloc=2,class=CODE,delta=1
   222                           	psect	text195,global,reloc=2,class=CODE,delta=1
   223                           	psect	text196,global,reloc=2,class=CODE,delta=1
   224                           	psect	text197,global,reloc=2,class=CODE,delta=1
   225                           	psect	text198,global,reloc=2,class=CODE,delta=1
   226                           	psect	text199,global,reloc=2,class=CODE,delta=1
   227                           	psect	text200,global,reloc=2,class=CODE,delta=1
   228                           	psect	text201,global,reloc=2,class=CODE,delta=1
   229                           	psect	text202,global,reloc=2,class=CODE,delta=1
   230                           	psect	text203,global,reloc=2,class=CODE,delta=1
   231                           	psect	text204,global,reloc=2,class=CODE,delta=1
   232                           	psect	text205,global,reloc=2,class=CODE,delta=1
   233                           	psect	text206,global,reloc=2,class=CODE,delta=1
   234                           	psect	text207,global,reloc=2,class=CODE,delta=1
   235                           	psect	text208,global,reloc=2,class=CODE,delta=1
   236                           	psect	text209,global,reloc=2,class=CODE,delta=1
   237                           	psect	text210,global,reloc=2,class=CODE,delta=1
   238                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   239                           	psect	text211,global,reloc=2,class=CODE,delta=1
   240                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   241                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   242                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   243                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   244  0000                     
   245                           ; Version 2.36
   246                           ; Generated 28/01/2022 GMT
   247                           ; 
   248                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   249                           ; All rights reserved.
   250                           ; 
   251                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   252                           ; 
   253                           ; Redistribution and use in source and binary forms, with or without modification, are
   254                           ; permitted provided that the following conditions are met:
   255                           ; 
   256                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   257                           ;        conditions and the following disclaimer.
   258                           ; 
   259                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   260                           ;        of conditions and the following disclaimer in the documentation and/or other
   261                           ;        materials provided with the distribution. Publication is not required when
   262                           ;        this file is used in an embedded application.
   263                           ; 
   264                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   265                           ;        software without specific prior written permission.
   266                           ; 
   267                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   268                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   269                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   270                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   271                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   272                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   273                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   274                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   275                           ; 
   276                           ; 
   277                           ; Code-generator required, PIC18F46K40 Definitions
   278                           ; 
   279                           ; SFR Addresses
   280  0000                     
   281                           	psect	idataBANK0
   282  009C64                     __pidataBANK0:
   283                           	callstack 0
   284                           
   285                           ;initializer for _auxCounter
   286  009C64  03E8               	dw	1000
   287                           
   288                           	psect	idataBANK1
   289  009C6E                     __pidataBANK1:
   290                           	callstack 0
   291                           
   292                           ;initializer for _firstselectflag
   293  009C6E  01                 	db	1
   294                           
   295                           	psect	idataBANK2
   296  009C02                     __pidataBANK2:
   297                           	callstack 0
   298                           
   299                           ;initializer for _tempCounter
   300  009C02  3DDD               	dw	15837
   301  009C04  000F               	dw	15
   302                           
   303                           ;initializer for _zeroCrossingWaitTime
   304  009C06  19                 	db	25
   305  009C07  19                 	db	25
   306                           
   307                           	psect	idataBANK3
   308  009812                     __pidataBANK3:
   309                           	callstack 0
   310                           
   311                           ;initializer for _DispTable
   312  009812  6F                 	db	111
   313  009813  21                 	db	33
   314  009814  76                 	db	118
   315  009815  73                 	db	115
   316  009816  39                 	db	57
   317  009817  5B                 	db	91
   318  009818  5F                 	db	95
   319  009819  61                 	db	97
   320  00981A  7F                 	db	127
   321  00981B  7B                 	db	123
   322  00981C  7D                 	db	125
   323  00981D  7F                 	db	127
   324  00981E  4E                 	db	78
   325  00981F  37                 	db	55
   326  009820  5E                 	db	94
   327  009821  5C                 	db	92
   328  009822  7C                 	db	124
   329  009823  3D                 	db	61
   330  009824  0E                 	db	14
   331  009825  2F                 	db	47
   332  009826  14                 	db	20
   333  009827  1E                 	db	30
   334  009828  07                 	db	7
   335  009829  45                 	db	69
   336  00982A  10                 	db	16
   337  00982B  0C                 	db	12
   338  00982C  40                 	db	64
   339  00982D  20                 	db	32
   340  00982E  01                 	db	1
   341  00982F  02                 	db	2
   342  009830  04                 	db	4
   343  009831  08                 	db	8
   344  009832  00                 	db	0
   345  009833  3B                 	db	59
   346  009834  1F                 	db	31
   347  009835  16                 	db	22
   348  009836  17                 	db	23
   349                           
   350                           	psect	idataBANK4
   351  00744C                     __pidataBANK4:
   352                           	callstack 0
   353                           
   354                           ;initializer for _systemVarAddresses
   355  00744C  A6                 	db	low _var_sys_NVM
   356  00744D  01                 	db	high _var_sys_NVM
   357  00744E  01                 	db	1
   358  00744F  10                 	db	16
   359  007450  00                 	db	0
   360  007451  A7                 	db	low (_var_sys_NVM+1)
   361  007452  01                 	db	high (_var_sys_NVM+1)
   362  007453  00                 	db	0
   363  007454  10                 	db	16
   364  007455  00                 	db	0
   365  007456  A8                 	db	low (_var_sys_NVM+2)
   366  007457  01                 	db	high (_var_sys_NVM+2)
   367  007458  01                 	db	1
   368  007459  11                 	db	17
   369  00745A  00                 	db	0
   370  00745B  A9                 	db	low (_var_sys_NVM+3)
   371  00745C  01                 	db	high (_var_sys_NVM+3)
   372  00745D  00                 	db	0
   373  00745E  11                 	db	17
   374  00745F  00                 	db	0
   375  007460  AA                 	db	low (_var_sys_NVM+4)
   376  007461  01                 	db	high (_var_sys_NVM+4)
   377  007462  00                 	db	0
   378  007463  12                 	db	18
   379  007464  00                 	db	0
   380  007465  AB                 	db	low (_var_sys_NVM+5)
   381  007466  01                 	db	high (_var_sys_NVM+5)
   382  007467  01                 	db	1
   383  007468  13                 	db	19
   384  007469  00                 	db	0
   385  00746A  AC                 	db	low (_var_sys_NVM+6)
   386  00746B  01                 	db	high (_var_sys_NVM+6)
   387  00746C  00                 	db	0
   388  00746D  13                 	db	19
   389  00746E  00                 	db	0
   390  00746F  AD                 	db	low (_var_sys_NVM+7)
   391  007470  01                 	db	high (_var_sys_NVM+7)
   392  007471  01                 	db	1
   393  007472  14                 	db	20
   394  007473  00                 	db	0
   395  007474  AE                 	db	low (_var_sys_NVM+8)
   396  007475  01                 	db	high (_var_sys_NVM+8)
   397  007476  00                 	db	0
   398  007477  14                 	db	20
   399  007478  00                 	db	0
   400  007479  AF                 	db	low (_var_sys_NVM+9)
   401  00747A  01                 	db	high (_var_sys_NVM+9)
   402  00747B  01                 	db	1
   403  00747C  15                 	db	21
   404  00747D  00                 	db	0
   405  00747E  B0                 	db	low (_var_sys_NVM+10)
   406  00747F  01                 	db	high (_var_sys_NVM+10)
   407  007480  00                 	db	0
   408  007481  15                 	db	21
   409  007482  00                 	db	0
   410  007483  B1                 	db	low (_var_sys_NVM+11)
   411  007484  01                 	db	high (_var_sys_NVM+11)
   412  007485  00                 	db	0
   413  007486  16                 	db	22
   414  007487  00                 	db	0
   415  007488  B2                 	db	low (_var_sys_NVM+12)
   416  007489  01                 	db	high (_var_sys_NVM+12)
   417  00748A  00                 	db	0
   418  00748B  17                 	db	23
   419  00748C  00                 	db	0
   420  00748D  B3                 	db	low (_var_sys_NVM+13)
   421  00748E  01                 	db	high (_var_sys_NVM+13)
   422  00748F  00                 	db	0
   423  007490  18                 	db	24
   424  007491  00                 	db	0
   425  007492  B4                 	db	low (_var_sys_NVM+14)
   426  007493  01                 	db	high (_var_sys_NVM+14)
   427  007494  00                 	db	0
   428  007495  19                 	db	25
   429  007496  00                 	db	0
   430  007497  B5                 	db	low (_var_sys_NVM+15)
   431  007498  01                 	db	high (_var_sys_NVM+15)
   432  007499  00                 	db	0
   433  00749A  1A                 	db	26
   434  00749B  00                 	db	0
   435  00749C  B6                 	db	low (_var_sys_NVM+16)
   436  00749D  01                 	db	high (_var_sys_NVM+16)
   437  00749E  00                 	db	0
   438  00749F  1B                 	db	27
   439  0074A0  00                 	db	0
   440  0074A1  B7                 	db	low (_var_sys_NVM+17)
   441  0074A2  01                 	db	high (_var_sys_NVM+17)
   442  0074A3  00                 	db	0
   443  0074A4  1C                 	db	28
   444  0074A5  00                 	db	0
   445  0074A6  B8                 	db	low (_var_sys_NVM+18)
   446  0074A7  01                 	db	high (_var_sys_NVM+18)
   447  0074A8  01                 	db	1
   448  0074A9  1D                 	db	29
   449  0074AA  00                 	db	0
   450  0074AB  B9                 	db	low (_var_sys_NVM+19)
   451  0074AC  01                 	db	high (_var_sys_NVM+19)
   452  0074AD  00                 	db	0
   453  0074AE  1D                 	db	29
   454  0074AF  00                 	db	0
   455  0074B0  BA                 	db	low (_var_sys_NVM+20)
   456  0074B1  01                 	db	high (_var_sys_NVM+20)
   457  0074B2  00                 	db	0
   458  0074B3  1E                 	db	30
   459  0074B4  00                 	db	0
   460  0074B5  BB                 	db	low (_var_sys_NVM+21)
   461  0074B6  01                 	db	high (_var_sys_NVM+21)
   462  0074B7  00                 	db	0
   463  0074B8  1F                 	db	31
   464  0074B9  00                 	db	0
   465  0074BA  BC                 	db	low (_var_sys_NVM+22)
   466  0074BB  01                 	db	high (_var_sys_NVM+22)
   467  0074BC  00                 	db	0
   468  0074BD  20                 	db	32
   469  0074BE  00                 	db	0
   470  0074BF  BD                 	db	low (_var_sys_NVM+23)
   471  0074C0  01                 	db	high (_var_sys_NVM+23)
   472  0074C1  00                 	db	0
   473  0074C2  21                 	db	33
   474  0074C3  00                 	db	0
   475  0074C4  BE                 	db	low (_var_sys_NVM+24)
   476  0074C5  01                 	db	high (_var_sys_NVM+24)
   477  0074C6  00                 	db	0
   478  0074C7  22                 	db	34
   479  0074C8  00                 	db	0
   480  0074C9  BF                 	db	low (_var_sys_NVM+25)
   481  0074CA  01                 	db	high (_var_sys_NVM+25)
   482  0074CB  00                 	db	0
   483  0074CC  23                 	db	35
   484  0074CD  00                 	db	0
   485  0074CE  C1                 	db	low (_var_sys_NVM+27)
   486  0074CF  01                 	db	high (_var_sys_NVM+27)
   487  0074D0  00                 	db	0
   488  0074D1  24                 	db	36
   489  0074D2  00                 	db	0
   490  0074D3  C2                 	db	low (_var_sys_NVM+28)
   491  0074D4  01                 	db	high (_var_sys_NVM+28)
   492  0074D5  00                 	db	0
   493  0074D6  25                 	db	37
   494  0074D7  00                 	db	0
   495  0074D8  C6                 	db	low (_var_sys_NVM+32)
   496  0074D9  01                 	db	high (_var_sys_NVM+32)
   497  0074DA  01                 	db	1
   498  0074DB  26                 	db	38
   499  0074DC  00                 	db	0
   500  0074DD  C7                 	db	low (_var_sys_NVM+33)
   501  0074DE  01                 	db	high (_var_sys_NVM+33)
   502  0074DF  00                 	db	0
   503  0074E0  26                 	db	38
   504  0074E1  00                 	db	0
   505  0074E2  C8                 	db	low (_var_sys_NVM+34)
   506  0074E3  01                 	db	high (_var_sys_NVM+34)
   507  0074E4  00                 	db	0
   508  0074E5  27                 	db	39
   509  0074E6  02                 	db	2
   510  0074E7  CC                 	db	low (_var_sys_NVM+38)
   511  0074E8  01                 	db	high (_var_sys_NVM+38)
   512  0074E9  00                 	db	0
   513  0074EA  29                 	db	41
   514  0074EB  00                 	db	0
   515  0074EC  CE                 	db	low (_var_sys_NVM+40)
   516  0074ED  01                 	db	high (_var_sys_NVM+40)
   517  0074EE  00                 	db	0
   518  0074EF  2A                 	db	42
   519  0074F0  02                 	db	2
   520  0074F1  D2                 	db	low (_var_sys_NVM+44)
   521  0074F2  01                 	db	high (_var_sys_NVM+44)
   522  0074F3  00                 	db	0
   523  0074F4  2C                 	db	44
   524  0074F5  02                 	db	2
   525  0074F6  D6                 	db	low (_var_sys_NVM+48)
   526  0074F7  01                 	db	high (_var_sys_NVM+48)
   527  0074F8  00                 	db	0
   528  0074F9  2E                 	db	46
   529  0074FA  01                 	db	1
   530  0074FB  D8                 	db	low (_var_sys_NVM+50)
   531  0074FC  01                 	db	high (_var_sys_NVM+50)
   532  0074FD  00                 	db	0
   533  0074FE  2F                 	db	47
   534  0074FF  01                 	db	1
   535  007500  DA                 	db	low (_var_sys_NVM+52)
   536  007501  01                 	db	high (_var_sys_NVM+52)
   537  007502  00                 	db	0
   538  007503  30                 	db	48
   539  007504  02                 	db	2
   540  007505  DE                 	db	low (_var_sys_NVM+56)
   541  007506  01                 	db	high (_var_sys_NVM+56)
   542  007507  00                 	db	0
   543  007508  32                 	db	50
   544  007509  02                 	db	2
   545  00750A  D7                 	db	low _RFFull
   546  00750B  00                 	db	0
   547  00750C  00                 	db	0
   548  00750D  34                 	db	52
   549  00750E  00                 	db	0
   550  00750F  56                 	db	low (_var_sys+1)
   551  007510  01                 	db	high (_var_sys+1)
   552  007511  01                 	db	1
   553  007512  35                 	db	53
   554  007513  00                 	db	0
   555  007514  57                 	db	low (_var_sys+2)
   556  007515  01                 	db	high (_var_sys+2)
   557  007516  00                 	db	0
   558  007517  35                 	db	53
   559  007518  00                 	db	0
   560  007519  58                 	db	low (_var_sys+3)
   561  00751A  01                 	db	high (_var_sys+3)
   562  00751B  01                 	db	1
   563  00751C  36                 	db	54
   564  00751D  00                 	db	0
   565  00751E  59                 	db	low (_var_sys+4)
   566  00751F  01                 	db	high (_var_sys+4)
   567  007520  00                 	db	0
   568  007521  36                 	db	54
   569  007522  00                 	db	0
   570  007523  71                 	db	low (_var_sys+28)
   571  007524  01                 	db	high (_var_sys+28)
   572  007525  00                 	db	0
   573  007526  37                 	db	55
   574  007527  00                 	db	0
   575  007528  73                 	db	low (_var_sys+30)
   576  007529  01                 	db	high (_var_sys+30)
   577  00752A  00                 	db	0
   578  00752B  38                 	db	56
   579  00752C  02                 	db	2
   580  00752D  9D                 	db	low (_var_sys+72)
   581  00752E  01                 	db	high (_var_sys+72)
   582  00752F  01                 	db	1
   583  007530  3A                 	db	58
   584  007531  00                 	db	0
   585  007532  9E                 	db	low (_var_sys+73)
   586  007533  01                 	db	high (_var_sys+73)
   587  007534  00                 	db	0
   588  007535  3A                 	db	58
   589  007536  00                 	db	0
   590                           
   591                           	psect	smallconst
   592  000F00                     __psmallconst:
   593                           	callstack 0
   594  000F00  00                 	db	0
   595  000F01                     _i2c1_fsmStateTable:
   596                           	callstack 0
   597  000F01  A8                 	db	low _I2C1_DO_IDLE
   598  000F02  9B                 	db	high _I2C1_DO_IDLE
   599  000F03  14                 	db	low _I2C1_DO_SEND_ADR_READ
   600  000F04  9B                 	db	high _I2C1_DO_SEND_ADR_READ
   601  000F05  06                 	db	low _I2C1_DO_SEND_ADR_WRITE
   602  000F06  9B                 	db	high _I2C1_DO_SEND_ADR_WRITE
   603  000F07  04                 	db	low _I2C1_DO_TX
   604  000F08  80                 	db	high _I2C1_DO_TX
   605  000F09  A2                 	db	low _I2C1_DO_RX
   606  000F0A  84                 	db	high _I2C1_DO_RX
   607  000F0B  9E                 	db	low _I2C1_DO_RCEN
   608  000F0C  9B                 	db	high _I2C1_DO_RCEN
   609  000F0D  72                 	db	low _I2C1_DO_TX_EMPTY
   610  000F0E  8B                 	db	high _I2C1_DO_TX_EMPTY
   611  000F0F  F2                 	db	low _I2C1_DO_SEND_RESTART_READ
   612  000F10  9B                 	db	high _I2C1_DO_SEND_RESTART_READ
   613  000F11  EA                 	db	low _I2C1_DO_SEND_RESTART_WRITE
   614  000F12  9B                 	db	high _I2C1_DO_SEND_RESTART_WRITE
   615  000F13  E2                 	db	low _I2C1_DO_SEND_RESTART
   616  000F14  9B                 	db	high _I2C1_DO_SEND_RESTART
   617  000F15  DA                 	db	low _I2C1_DO_SEND_STOP
   618  000F16  9B                 	db	high _I2C1_DO_SEND_STOP
   619  000F17  D2                 	db	low _I2C1_DO_RX_ACK
   620  000F18  9B                 	db	high _I2C1_DO_RX_ACK
   621  000F19  CA                 	db	low _I2C1_DO_RX_NACK_STOP
   622  000F1A  9B                 	db	high _I2C1_DO_RX_NACK_STOP
   623  000F1B  C2                 	db	low _I2C1_DO_RX_NACK_RESTART
   624  000F1C  9B                 	db	high _I2C1_DO_RX_NACK_RESTART
   625  000F1D  94                 	db	low _I2C1_DO_RESET
   626  000F1E  9B                 	db	high _I2C1_DO_RESET
   627  000F1F  D0                 	db	low _I2C1_DO_ADDRESS_NACK
   628  000F20  8F                 	db	high _I2C1_DO_ADDRESS_NACK
   629  000F21                     __end_of_i2c1_fsmStateTable:
   630                           	callstack 0
   631  0000                     _T2CON	set	4029
   632  0000                     _T1CON	set	4047
   633  0000                     _T1CLK	set	4050
   634  0000                     _T1GATE	set	4049
   635  0000                     _T0CON0	set	4053
   636  0000                     _INLVLD	set	3874
   637  0000                     _SLRCOND	set	3875
   638  0000                     _ODCOND	set	3876
   639  0000                     _WPUD	set	3877
   640  0000                     _TRISD	set	3979
   641  0000                     _TRISC	set	3978
   642  0000                     _TRISB	set	3977
   643  0000                     _TRISA	set	3976
   644  0000                     _TRISE	set	3980
   645  0000                     _LATC	set	3973
   646  0000                     _LATB	set	3972
   647  0000                     _OSCTUNE	set	3805
   648  0000                     _OSCFRQ	set	3806
   649  0000                     _ADERRL	set	3950
   650  0000                     _ADERRH	set	3951
   651  0000                     _ADPREVL	set	3937
   652  0000                     _ADPREVH	set	3938
   653  0000                     _ADFLTRL	set	3954
   654  0000                     _ADFLTRH	set	3955
   655  0000                     _ADACCL	set	3952
   656  0000                     _ADACCH	set	3953
   657  0000                     _ADCNT	set	3943
   658  0000                     _ADRESL	set	3939
   659  0000                     _ADRESH	set	3940
   660  0000                     _ADACQ	set	3932
   661  0000                     _ADCON0	set	3936
   662  0000                     _ADCLK	set	3927
   663  0000                     _ADSTAT	set	3941
   664  0000                     _ADCON3	set	3931
   665  0000                     _ADCON2	set	3930
   666  0000                     _ADPRE	set	3934
   667  0000                     _ADSTPTH	set	3945
   668  0000                     _ADUTHH	set	3949
   669  0000                     _ADUTHL	set	3948
   670  0000                     _ADLTHH	set	3947
   671  0000                     _SP1BRGH	set	3996
   672  0000                     _TX1STA	set	3998
   673  000F21  00                 	db	0	; dummy byte at the end
   674  0000                     
   675                           	psect	nvBANK1
   676  0001FD                     __pnvBANK1:
   677                           	callstack 0
   678  0001FD                     _eusart1TxBufferRemaining:
   679                           	callstack 0
   680  0001FD                     	ds	1
   681                           
   682                           	psect	nvBANK2
   683  0002DD                     __pnvBANK2:
   684                           	callstack 0
   685  0002DD                     _TMR2_InterruptHandler:
   686                           	callstack 0
   687  0002DD                     	ds	2
   688  0002DF                     _TMR1_InterruptHandler:
   689                           	callstack 0
   690  0002DF                     	ds	2
   691  0002E1                     _timer1ReloadVal:
   692                           	callstack 0
   693  0002E1                     	ds	2
   694  0002E3                     _TMR0_InterruptHandler:
   695                           	callstack 0
   696  0002E3                     	ds	2
   697  0002E5                     _EUSART1_ErrorHandler:
   698                           	callstack 0
   699  0002E5                     	ds	2
   700  0002E7                     _EUSART1_OverrunErrorHandler:
   701                           	callstack 0
   702  0002E7                     	ds	2
   703  0002E9                     _EUSART1_FramingErrorHandler:
   704                           	callstack 0
   705  0002E9                     	ds	2
   706  0002EB                     _EUSART1_RxDefaultInterruptHandler:
   707                           	callstack 0
   708  0002EB                     	ds	2
   709  0002ED                     _EUSART1_TxDefaultInterruptHandler:
   710                           	callstack 0
   711  0002ED                     	ds	2
   712  0000                     _WDTCON0bits	set	3794
   713  0000                     _TMR0IE	set	30229
   714  0000                     _TMR0IF	set	30293
   715  0000                     _LATEbits	set	3975
   716  0000                     _LATDbits	set	3974
   717  0000                     _LATAbits	set	3971
   718  0000                     _LATCbits	set	3973
   719  0000                     _PORTB	set	3982
   720  0000                     _T1CONbits	set	4047
   721  0000                     _SSP1CON2bits	set	3991
   722  0000                     _SSP1CON1bits	set	3990
   723  0000                     _ADCON0bits	set	3936
   724  0000                     _RC1STAbits	set	3997
   725  0000                     _GIE	set	32663
   726  0000                     _RX1PPS	set	3765
   727  0000                     _SSP1CLKPPS	set	3767
   728  0000                     _PIE0bits	set	3778
   729  0000                     _PIE3bits	set	3781
   730  0000                     _PIE4bits	set	3782
   731  0000                     _PIR0bits	set	3786
   732  0000                     _PIR3bits	set	3789
   733  0000                     _ADACT	set	3926
   734  0000                     _ADREF	set	3928
   735  0000                     _ADCON1	set	3929
   736  0000                     _ADCAP	set	3933
   737  0000                     _ADPCH	set	3935
   738  0000                     _ADRPT	set	3942
   739  0000                     _ADSTPTL	set	3944
   740  0000                     _ADLTHL	set	3946
   741  0000                     _RC1REG	set	3993
   742  0000                     _TX1REG	set	3994
   743  0000                     _SP1BRGL	set	3995
   744  0000                     _RC1STA	set	3997
   745  0000                     _BAUD1CON	set	3999
   746  0000                     _T2TMR	set	4027
   747  0000                     _T2PR	set	4028
   748  0000                     _T2HLT	set	4030
   749  0000                     _T2CLKCON	set	4031
   750  0000                     _TMR1L	set	4045
   751  0000                     _TMR1H	set	4046
   752  0000                     _T1GCON	set	4048
   753  0000                     _TMR0L	set	4051
   754  0000                     _TMR0H	set	4052
   755  0000                     _T0CON1	set	4054
   756  0000                     _PCON0bits	set	4055
   757  0000                     _INTCONbits	set	4082
   758  0000                     _LATA	set	3971
   759  0000                     _LATD	set	3974
   760  0000                     _LATE	set	3975
   761  0000                     _SSP1BUF	set	3986
   762  0000                     _SSP1ADD	set	3987
   763  0000                     _SSP1STAT	set	3989
   764  0000                     _SSP1CON2	set	3991
   765  0000                     _SSP1CON1	set	3990
   766  0000                     _WDTCON0	set	3794
   767  0000                     _OSCCON1	set	3800
   768  0000                     _PIR4bits	set	3790
   769  0000                     _OSCCON3	set	3802
   770  0000                     _OSCEN	set	3804
   771  0000                     _PMD0	set	3809
   772  0000                     _RC3PPS	set	3834
   773  0000                     _INLVLA	set	3853
   774  0000                     _SLRCONA	set	3854
   775  0000                     _ODCONA	set	3855
   776  0000                     _WPUA	set	3856
   777  0000                     _ANSELA	set	3857
   778  0000                     _ANSELB	set	3865
   779  0000                     _ANSELC	set	3873
   780  0000                     _ANSELD	set	3878
   781  0000                     _PMD5	set	3814
   782  0000                     _PMD4	set	3813
   783  0000                     _PMD3	set	3812
   784  0000                     _PMD2	set	3811
   785  0000                     _PMD1	set	3810
   786  0000                     _WDTCON1	set	3795
   787  0000                     _PORTEbits	set	3985
   788  0000                     _PORTBbits	set	3982
   789  0000                     _PORTAbits	set	3981
   790  0000                     _INLVLE	set	3882
   791  0000                     _SLRCONE	set	3883
   792  0000                     _ODCONE	set	3884
   793  0000                     _WPUE	set	3885
   794  0000                     _ANSELE	set	3886
   795  0000                     _INLVLC	set	3869
   796  0000                     _SLRCONC	set	3870
   797  0000                     _ODCONC	set	3871
   798  0000                     _WPUC	set	3872
   799  0000                     _INLVLB	set	3861
   800  0000                     _SLRCONB	set	3862
   801  0000                     _ODCONB	set	3863
   802  0000                     _WPUB	set	3864
   803  0000                     _IOCBN3	set	30875
   804  0000                     _IOCBP3	set	30883
   805  0000                     _SSP1DATPPS	set	3768
   806  0000                     _RC7PPS	set	3838
   807  0000                     _RC4PPS	set	3835
   808  0000                     _T2RST	set	4032
   809                           
   810                           ; #config settings
   811                           
   812                           	psect	cinit
   813  0076F6                     __pcinit:
   814                           	callstack 0
   815  0076F6                     start_initialization:
   816                           	callstack 0
   817  0076F6                     __initialization:
   818                           	callstack 0
   819                           
   820                           ; Initialize objects allocated to BANK4 (235 bytes)
   821                           ; load TBLPTR registers with __pidataBANK4
   822  0076F6  0E4C               	movlw	low __pidataBANK4
   823  0076F8  6EF6               	movwf	tblptrl,c
   824  0076FA  0E74               	movlw	high __pidataBANK4
   825  0076FC  6EF7               	movwf	tblptrh,c
   826  0076FE  0E00               	movlw	low (__pidataBANK4 shr (0+16))
   827  007700  6EF8               	movwf	tblptru,c
   828  007702  EE04  F000         	lfsr	0,__pdataBANK4
   829  007706  EE10 F0EB          	lfsr	1,235
   830  00770A                     copy_data0:
   831  00770A  0009               	tblrd		*+
   832  00770C  CFF5 FFEE          	movff	tablat,postinc0
   833  007710  50E5               	movf	postdec1,w,c
   834  007712  50E1               	movf	fsr1l,w,c
   835  007714  E1FA               	bnz	copy_data0
   836                           
   837                           ; Initialize objects allocated to BANK3 (37 bytes)
   838                           ; load TBLPTR registers with __pidataBANK3
   839  007716  0E12               	movlw	low __pidataBANK3
   840  007718  6EF6               	movwf	tblptrl,c
   841  00771A  0E98               	movlw	high __pidataBANK3
   842  00771C  6EF7               	movwf	tblptrh,c
   843  00771E  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   844  007720  6EF8               	movwf	tblptru,c
   845  007722  EE03  F0D2         	lfsr	0,__pdataBANK3
   846  007726  EE10 F025          	lfsr	1,37
   847  00772A                     copy_data1:
   848  00772A  0009               	tblrd		*+
   849  00772C  CFF5 FFEE          	movff	tablat,postinc0
   850  007730  50E5               	movf	postdec1,w,c
   851  007732  50E1               	movf	fsr1l,w,c
   852  007734  E1FA               	bnz	copy_data1
   853                           
   854                           ; Initialize objects allocated to BANK2 (6 bytes)
   855                           ; load TBLPTR registers with __pidataBANK2
   856  007736  0E02               	movlw	low __pidataBANK2
   857  007738  6EF6               	movwf	tblptrl,c
   858  00773A  0E9C               	movlw	high __pidataBANK2
   859  00773C  6EF7               	movwf	tblptrh,c
   860  00773E  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   861  007740  6EF8               	movwf	tblptru,c
   862  007742  EE02  F0F6         	lfsr	0,__pdataBANK2
   863  007746  EE10 F006          	lfsr	1,6
   864  00774A                     copy_data2:
   865  00774A  0009               	tblrd		*+
   866  00774C  CFF5 FFEE          	movff	tablat,postinc0
   867  007750  50E5               	movf	postdec1,w,c
   868  007752  50E1               	movf	fsr1l,w,c
   869  007754  E1FA               	bnz	copy_data2
   870                           
   871                           ; Initialize objects allocated to BANK1 (1 bytes)
   872                           ; load TBLPTR registers with __pidataBANK1
   873  007756  0E6E               	movlw	low __pidataBANK1
   874  007758  6EF6               	movwf	tblptrl,c
   875  00775A  0E9C               	movlw	high __pidataBANK1
   876  00775C  6EF7               	movwf	tblptrh,c
   877  00775E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   878  007760  6EF8               	movwf	tblptru,c
   879  007762  0009               	tblrd		*+	;fetch initializer
   880  007764  CFF5 F1FE          	movff	tablat,__pdataBANK1
   881                           
   882                           ; Initialize objects allocated to BANK0 (2 bytes)
   883                           ; load TBLPTR registers with __pidataBANK0
   884  007768  0E64               	movlw	low __pidataBANK0
   885  00776A  6EF6               	movwf	tblptrl,c
   886  00776C  0E9C               	movlw	high __pidataBANK0
   887  00776E  6EF7               	movwf	tblptrh,c
   888  007770  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   889  007772  6EF8               	movwf	tblptru,c
   890  007774  0009               	tblrd		*+	;fetch initializer
   891  007776  CFF5 F0FC          	movff	tablat,__pdataBANK0
   892  00777A  0009               	tblrd		*+	;fetch initializer
   893  00777C  CFF5 F0FD          	movff	tablat,__pdataBANK0+1
   894                           
   895                           ; Clear objects allocated to BANK3 (210 bytes)
   896  007780  EE03  F000         	lfsr	0,__pbssBANK3
   897  007784  0ED2               	movlw	210
   898  007786                     clear_0:
   899  007786  6AEE               	clrf	postinc0,c
   900  007788  06E8               	decf	wreg,f,c
   901  00778A  E1FD               	bnz	clear_0
   902                           
   903                           ; Clear objects allocated to BANK2 (221 bytes)
   904  00778C  EE02  F000         	lfsr	0,__pbssBANK2
   905  007790  0EDD               	movlw	221
   906  007792                     clear_1:
   907  007792  6AEE               	clrf	postinc0,c
   908  007794  06E8               	decf	wreg,f,c
   909  007796  E1FD               	bnz	clear_1
   910                           
   911                           ; Clear objects allocated to BANK1 (253 bytes)
   912  007798  EE01  F000         	lfsr	0,__pbssBANK1
   913  00779C  0EFD               	movlw	253
   914  00779E                     clear_2:
   915  00779E  6AEE               	clrf	postinc0,c
   916  0077A0  06E8               	decf	wreg,f,c
   917  0077A2  E1FD               	bnz	clear_2
   918                           
   919                           ; Clear objects allocated to BANK0 (120 bytes)
   920  0077A4  EE00  F060         	lfsr	0,__pbssBANK0
   921  0077A8  0E78               	movlw	120
   922  0077AA                     clear_3:
   923  0077AA  6AEE               	clrf	postinc0,c
   924  0077AC  06E8               	decf	wreg,f,c
   925  0077AE  E1FD               	bnz	clear_3
   926                           
   927                           ; Clear objects allocated to COMRAM (21 bytes)
   928  0077B0  EE00  F03B         	lfsr	0,__pbssCOMRAM
   929  0077B4  0E15               	movlw	21
   930  0077B6                     clear_4:
   931  0077B6  6AEE               	clrf	postinc0,c
   932  0077B8  06E8               	decf	wreg,f,c
   933  0077BA  E1FD               	bnz	clear_4
   934  0077BC                     end_of_initialization:
   935                           	callstack 0
   936  0077BC                     __end_of__initialization:
   937                           	callstack 0
   938  0077BC  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   939  0077BE  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   940  0077C0  0100               	movlb	0
   941  0077C2  EF1A  F032         	goto	_main	;jump to C main() function
   942                           
   943                           	psect	bssCOMRAM
   944  00003B                     __pbssCOMRAM:
   945                           	callstack 0
   946  00003B                     _rfCMD:
   947                           	callstack 0
   948  00003B                     	ds	11
   949  000046                     _edit_Param:
   950                           	callstack 0
   951  000046                     	ds	6
   952  00004C                     _button_struct:
   953                           	callstack 0
   954  00004C                     	ds	4
   955                           
   956                           	psect	bssBANK0
   957  000060                     __pbssBANK0:
   958                           	callstack 0
   959  000060                     _dispStruct:
   960                           	callstack 0
   961  000060                     	ds	6
   962  000066                     _brakeElectric_st:
   963                           	callstack 0
   964  000066                     	ds	2
   965  000068                     _pointSync:
   966                           	callstack 0
   967  000068                     	ds	2
   968  00006A                     _Hop:
   969                           	callstack 0
   970  00006A                     	ds	2
   971  00006C                     _RFcount:
   972                           	callstack 0
   973  00006C                     	ds	2
   974  00006E                     eusartparser@save_f:
   975                           	callstack 0
   976  00006E                     	ds	1
   977  00006F                     _temp:
   978                           	callstack 0
   979  00006F                     	ds	1
   980  000070                     _control_limit_switch:
   981                           	callstack 0
   982  000070                     	ds	1
   983  000071                     _aux_i:
   984                           	callstack 0
   985  000071                     	ds	1
   986  000072                     _Abertura_pedonal:
   987                           	callstack 0
   988  000072                     	ds	1
   989  000073                     _fullmotorPower:
   990                           	callstack 0
   991  000073                     	ds	1
   992  000074                     _temppower:
   993                           	callstack 0
   994  000074                     	ds	1
   995  000075                     _stateMotor:
   996                           	callstack 0
   997  000075                     	ds	1
   998  000076                     _difTime:
   999                           	callstack 0
  1000  000076                     	ds	1
  1001  000077                     _StateTRIAC:
  1002                           	callstack 0
  1003  000077                     	ds	1
  1004  000078                     _waitZeroPeak:
  1005                           	callstack 0
  1006  000078                     	ds	1
  1007  000079                     _zeroCrossing:
  1008                           	callstack 0
  1009  000079                     	ds	1
  1010  00007A                     _zeroCrossingWaitTimeIdx:
  1011                           	callstack 0
  1012  00007A                     	ds	1
  1013  00007B                     _programmer_enable:
  1014                           	callstack 0
  1015  00007B                     	ds	1
  1016  00007C                     readbutton@key1:
  1017                           	callstack 0
  1018  00007C                     	ds	1
  1019  00007D                     readRFButtons@typeRemote:
  1020                           	callstack 0
  1021  00007D                     	ds	1
  1022  00007E                     readRFButtons@keyType:
  1023                           	callstack 0
  1024  00007E                     	ds	1
  1025  00007F                     readRFButtons@key1:
  1026                           	callstack 0
  1027  00007F                     	ds	1
  1028  000080                     _RFBit:
  1029                           	callstack 0
  1030  000080                     	ds	1
  1031  000081                     _RFFull_12BIT:
  1032                           	callstack 0
  1033  000081                     	ds	1
  1034  000082                     _BitCount:
  1035                           	callstack 0
  1036  000082                     	ds	1
  1037  000083                     _Bptr:
  1038                           	callstack 0
  1039  000083                     	ds	1
  1040  000084                     _RFstate:
  1041                           	callstack 0
  1042  000084                     	ds	1
  1043  000085                     _numberOfErrorCurrent:
  1044                           	callstack 0
  1045  000085                     	ds	1
  1046  000086                     _idxAdcZeroAquisition:
  1047                           	callstack 0
  1048  000086                     	ds	1
  1049  000087                     _idxSaveEnergyADCHist:
  1050                           	callstack 0
  1051  000087                     	ds	1
  1052  000088                     _idxAdcAquisition:
  1053                           	callstack 0
  1054  000088                     	ds	1
  1055  000089                     _Counterchoose:
  1056                           	callstack 0
  1057  000089                     	ds	1
  1058  00008A                     _eusart1RxCount:
  1059                           	callstack 0
  1060  00008A                     	ds	1
  1061  00008B                     _eusart1RxTail:
  1062                           	callstack 0
  1063  00008B                     	ds	1
  1064  00008C                     _eusart1RxHead:
  1065                           	callstack 0
  1066  00008C                     	ds	1
  1067  00008D                     _eusart1TxTail:
  1068                           	callstack 0
  1069  00008D                     	ds	1
  1070  00008E                     _eusart1TxHead:
  1071                           	callstack 0
  1072  00008E                     	ds	1
  1073  00008F                     _ts_system:
  1074                           	callstack 0
  1075  00008F                     	ds	72
  1076  0000D7                     _RFFull:
  1077                           	callstack 0
  1078  0000D7                     	ds	1
  1079                           
  1080                           	psect	dataBANK0
  1081  0000FC                     __pdataBANK0:
  1082                           	callstack 0
  1083  0000FC                     _auxCounter:
  1084                           	callstack 0
  1085  0000FC                     	ds	2
  1086                           
  1087                           	psect	bssBANK1
  1088  000100                     __pbssBANK1:
  1089                           	callstack 0
  1090  000100                     _menu_st:
  1091                           	callstack 0
  1092  000100                     	ds	25
  1093  000119                     _learn_st:
  1094                           	callstack 0
  1095  000119                     	ds	18
  1096  00012B                     _security:
  1097                           	callstack 0
  1098  00012B                     	ds	11
  1099  000136                     _fimdecurso:
  1100                           	callstack 0
  1101  000136                     	ds	6
  1102  00013C                     _powerControl_st:
  1103                           	callstack 0
  1104  00013C                     	ds	6
  1105  000142                     readRFButtons@serial:
  1106                           	callstack 0
  1107  000142                     	ds	4
  1108  000146                     eusartparser@buffer:
  1109                           	callstack 0
  1110  000146                     	ds	2
  1111  000148                     readRFButtons@rollingCode:
  1112                           	callstack 0
  1113  000148                     	ds	2
  1114  00014A                     _BufferRF_12BIT:
  1115                           	callstack 0
  1116  00014A                     	ds	2
  1117  00014C                     _erroranterior:
  1118                           	callstack 0
  1119  00014C                     	ds	2
  1120  00014E                     _done_changes:
  1121                           	callstack 0
  1122  00014E                     	ds	1
  1123  00014F                     _aux_in_auto_close:
  1124                           	callstack 0
  1125  00014F                     	ds	1
  1126  000150                     _zeroCrossingLength:
  1127                           	callstack 0
  1128  000150                     	ds	1
  1129  000151                     _lastKey:
  1130                           	callstack 0
  1131  000151                     	ds	1
  1132  000152                     _F2Chance:
  1133                           	callstack 0
  1134  000152                     	ds	1
  1135  000153                     readbutton@key2:
  1136                           	callstack 0
  1137  000153                     	ds	1
  1138  000154                     _eusart1RxLastError:
  1139                           	callstack 0
  1140  000154                     	ds	1
  1141  000155                     _var_sys:
  1142                           	callstack 0
  1143  000155                     	ds	81
  1144  0001A6                     _var_sys_NVM:
  1145                           	callstack 0
  1146  0001A6                     	ds	64
  1147  0001E6                     _controlGate_stateMachine:
  1148                           	callstack 0
  1149  0001E6                     	ds	11
  1150  0001F1                     _main_stateMachine:
  1151                           	callstack 0
  1152  0001F1                     	ds	11
  1153  0001FC                     setValueToEdit@value:
  1154                           	callstack 0
  1155  0001FC                     	ds	1
  1156                           
  1157                           	psect	dataBANK1
  1158  0001FE                     __pdataBANK1:
  1159                           	callstack 0
  1160  0001FE                     _firstselectflag:
  1161                           	callstack 0
  1162  0001FE                     	ds	1
  1163                           
  1164                           	psect	bssBANK2
  1165  000200                     __pbssBANK2:
  1166                           	callstack 0
  1167  000200                     _ADC_array:
  1168                           	callstack 0
  1169  000200                     	ds	60
  1170  00023C                     _I2C1_Status:
  1171                           	callstack 0
  1172  00023C                     	ds	36
  1173  000260                     _SumEnergyADCHist_array:
  1174                           	callstack 0
  1175  000260                     	ds	20
  1176  000274                     _eusart1RxStatusBuffer:
  1177                           	callstack 0
  1178  000274                     	ds	8
  1179  00027C                     _eusart1RxBuffer:
  1180                           	callstack 0
  1181  00027C                     	ds	8
  1182  000284                     _eusart1TxBuffer:
  1183                           	callstack 0
  1184  000284                     	ds	8
  1185  00028C                     _EHop:
  1186                           	callstack 0
  1187  00028C                     	ds	2
  1188  00028E                     _NextHop:
  1189                           	callstack 0
  1190  00028E                     	ds	2
  1191  000290                     _timer0ReloadVal16bit:
  1192                           	callstack 0
  1193  000290                     	ds	2
  1194  000292                     _classic_data:
  1195                           	callstack 0
  1196  000292                     	ds	16
  1197  0002A2                     _memoryTEMP:
  1198                           	callstack 0
  1199  0002A2                     	ds	16
  1200  0002B2                     _controlLearning_stateMachine:
  1201                           	callstack 0
  1202  0002B2                     	ds	11
  1203  0002BD                     _menuConfiguration_stateMachine:
  1204                           	callstack 0
  1205  0002BD                     	ds	11
  1206  0002C8                     _BufferRF:
  1207                           	callstack 0
  1208  0002C8                     	ds	9
  1209  0002D1                     _DKEY:
  1210                           	callstack 0
  1211  0002D1                     	ds	8
  1212  0002D9                     NormalKeyGen@SEED:
  1213                           	callstack 0
  1214  0002D9                     	ds	4
  1215                           
  1216                           	psect	dataBANK2
  1217  0002F6                     __pdataBANK2:
  1218                           	callstack 0
  1219  0002F6                     _tempCounter:
  1220                           	callstack 0
  1221  0002F6                     	ds	4
  1222  0002FA                     _zeroCrossingWaitTime:
  1223                           	callstack 0
  1224  0002FA                     	ds	2
  1225                           
  1226                           	psect	bssBANK3
  1227  000300                     __pbssBANK3:
  1228                           	callstack 0
  1229  000300                     _listSyncValues:
  1230                           	callstack 0
  1231  000300                     	ds	150
  1232  000396                     _ADC_zero_array:
  1233                           	callstack 0
  1234  000396                     	ds	60
  1235                           
  1236                           	psect	dataBANK3
  1237  0003D2                     __pdataBANK3:
  1238                           	callstack 0
  1239  0003D2                     _DispTable:
  1240                           	callstack 0
  1241  0003D2                     	ds	37
  1242                           
  1243                           	psect	dataBANK4
  1244  000400                     __pdataBANK4:
  1245                           	callstack 0
  1246  000400                     _systemVarAddresses:
  1247                           	callstack 0
  1248  000400                     	ds	235
  1249                           
  1250                           	psect	cstackBANK2
  1251  0002EF                     __pcstackBANK2:
  1252                           	callstack 0
  1253  0002EF                     main@package:
  1254                           	callstack 0
  1255                           
  1256                           ; 7 bytes @ 0x0
  1257  0002EF                     	ds	7
  1258                           
  1259                           	psect	cstackBANK0
  1260  0000D8                     __pcstackBANK0:
  1261                           	callstack 0
  1262  0000D8                     ??_keeloq_classic_decrypt_packet:
  1263  0000D8                     ??_setPositionInvertionInClosing:
  1264  0000D8                     ??_validateRemoteSerialNumber:
  1265  0000D8                     RemoveSerial@position:
  1266                           	callstack 0
  1267  0000D8                     SaveNVM_VarSystem@page:
  1268                           	callstack 0
  1269  0000D8                     getStateOpenPosition@state:
  1270                           	callstack 0
  1271  0000D8                     saveNewSerial@tempSerial:
  1272                           	callstack 0
  1273                           
  1274                           ; 4 bytes @ 0x0
  1275  0000D8                     	ds	1
  1276  0000D9                     ??_RemoveSerial:
  1277  0000D9                     getStateOpenPosition@stateMotor:
  1278                           	callstack 0
  1279  0000D9                     SaveNVM_VarSystem@tempAdd:
  1280                           	callstack 0
  1281                           
  1282                           ; 2 bytes @ 0x1
  1283  0000D9                     	ds	1
  1284  0000DA                     ??_controlVelocity:
  1285                           
  1286                           ; 1 bytes @ 0x2
  1287  0000DA                     	ds	1
  1288  0000DB                     RemoveSerial@cmdType:
  1289                           	callstack 0
  1290  0000DB                     SaveNVM_VarSystem@point:
  1291                           	callstack 0
  1292                           
  1293                           ; 2 bytes @ 0x3
  1294  0000DB                     	ds	1
  1295  0000DC                     saveNewSerial@position:
  1296                           	callstack 0
  1297  0000DC                     RemoveSerial@tempSerial:
  1298                           	callstack 0
  1299                           
  1300                           ; 4 bytes @ 0x4
  1301  0000DC                     	ds	1
  1302  0000DD                     ??_saveNewSerial:
  1303  0000DD                     ResetDefaultMemory@type:
  1304                           	callstack 0
  1305  0000DD                     checkNVM_VarSystem@saveParam:
  1306                           	callstack 0
  1307  0000DD                     setValueToEdit@ParameterSelected:
  1308                           	callstack 0
  1309  0000DD                     sm_execute_ControlLearning@psm:
  1310                           	callstack 0
  1311                           
  1312                           ; 2 bytes @ 0x5
  1313  0000DD                     	ds	1
  1314  0000DE                     ??_setValueToEdit:
  1315                           
  1316                           ; 1 bytes @ 0x6
  1317  0000DE                     	ds	1
  1318  0000DF                     ??_sm_execute_ControlLearning:
  1319  0000DF                     saveNewSerial@cmdType:
  1320                           	callstack 0
  1321                           
  1322                           ; 1 bytes @ 0x7
  1323  0000DF                     	ds	1
  1324  0000E0                     ??_controlSelectRemote:
  1325  0000E0                     setValueToEdit@menuType:
  1326                           	callstack 0
  1327  0000E0                     keeloqDecryptPacket@data:
  1328                           	callstack 0
  1329  0000E0                     DecryptPacket_12BIT@data:
  1330                           	callstack 0
  1331  0000E0                     eusartparser@package:
  1332                           	callstack 0
  1333                           
  1334                           ; 2 bytes @ 0x8
  1335  0000E0                     	ds	1
  1336  0000E1                     sm_execute_ControlLearning@typeOpenOrder:
  1337                           	callstack 0
  1338  0000E1                     setValueToEdit@posindex:
  1339                           	callstack 0
  1340  0000E1                     controlSelectRemote@validSerial:
  1341                           	callstack 0
  1342                           
  1343                           ; 1 bytes @ 0x9
  1344  0000E1                     	ds	1
  1345  0000E2                     ??_eusartparser:
  1346  0000E2                     setValueToEdit@posindex_7062:
  1347                           	callstack 0
  1348  0000E2                     controlSelectRemote@pos:
  1349                           	callstack 0
  1350  0000E2                     keeloqDecryptPacket@classic_data:
  1351                           	callstack 0
  1352  0000E2                     DecryptPacket_12BIT@classic_data:
  1353                           	callstack 0
  1354                           
  1355                           ; 2 bytes @ 0xA
  1356  0000E2                     	ds	1
  1357  0000E3                     setValueToEdit@haveValueToEdit:
  1358                           	callstack 0
  1359  0000E3                     controlSelectRemote@typeRemote:
  1360                           	callstack 0
  1361                           
  1362                           ; 1 bytes @ 0xB
  1363  0000E3                     	ds	1
  1364  0000E4                     ??_keeloqDecryptPacket:
  1365  0000E4                     DecryptPacket_12BIT@commandType:
  1366                           	callstack 0
  1367  0000E4                     actionZone_Opening@securityClosing:
  1368                           	callstack 0
  1369  0000E4                     controlSelectRemote@tempSerial:
  1370                           	callstack 0
  1371                           
  1372                           ; 4 bytes @ 0xC
  1373  0000E4                     	ds	1
  1374  0000E5                     actionZone_Opening@securityOpening:
  1375                           	callstack 0
  1376                           
  1377                           ; 1 bytes @ 0xD
  1378  0000E5                     	ds	1
  1379  0000E6                     actionZone_Opening@typeOpenOrder:
  1380                           	callstack 0
  1381                           
  1382                           ; 1 bytes @ 0xE
  1383  0000E6                     	ds	1
  1384  0000E7                     sm_execute_ControlGate@psm:
  1385                           	callstack 0
  1386                           
  1387                           ; 2 bytes @ 0xF
  1388  0000E7                     	ds	1
  1389  0000E8                     keeloqDecryptPacket@hop_error:
  1390                           	callstack 0
  1391  0000E8                     controlSelectRemote@temp:
  1392                           	callstack 0
  1393  0000E8                     eusartparser@i:
  1394                           	callstack 0
  1395                           
  1396                           ; 1 bytes @ 0x10
  1397  0000E8                     	ds	1
  1398  0000E9                     ??_sm_execute_ControlGate:
  1399  0000E9                     keeloqDecryptPacket@commandType:
  1400                           	callstack 0
  1401  0000E9                     eusartparser@i_7474:
  1402                           	callstack 0
  1403  0000E9                     sm_execute_menuConfiguration@psm:
  1404                           	callstack 0
  1405                           
  1406                           ; 2 bytes @ 0x11
  1407  0000E9                     	ds	1
  1408  0000EA                     eusartparser@i_7481:
  1409                           	callstack 0
  1410                           
  1411                           ; 1 bytes @ 0x12
  1412  0000EA                     	ds	1
  1413  0000EB                     ??_sm_execute_menuConfiguration:
  1414  0000EB                     sm_execute_ControlGate@typeOpenOrder:
  1415                           	callstack 0
  1416  0000EB                     eusartparser@i_7482:
  1417                           	callstack 0
  1418                           
  1419                           ; 1 bytes @ 0x13
  1420  0000EB                     	ds	1
  1421  0000EC                     eusartparser@pos:
  1422                           	callstack 0
  1423                           
  1424                           ; 1 bytes @ 0x14
  1425  0000EC                     	ds	1
  1426  0000ED                     eusartparser@i_7475:
  1427                           	callstack 0
  1428  0000ED                     sm_execute_main@psm:
  1429                           	callstack 0
  1430                           
  1431                           ; 2 bytes @ 0x15
  1432  0000ED                     	ds	1
  1433  0000EE                     eusartparser@i_7476:
  1434                           	callstack 0
  1435                           
  1436                           ; 1 bytes @ 0x16
  1437  0000EE                     	ds	1
  1438  0000EF                     ??_sm_execute_main:
  1439  0000EF                     eusartparser@i_7483:
  1440                           	callstack 0
  1441                           
  1442                           ; 1 bytes @ 0x17
  1443  0000EF                     	ds	1
  1444  0000F0                     eusartparser@i_7484:
  1445                           	callstack 0
  1446                           
  1447                           ; 1 bytes @ 0x18
  1448  0000F0                     	ds	1
  1449  0000F1                     eusartparser@i_7477:
  1450                           	callstack 0
  1451                           
  1452                           ; 1 bytes @ 0x19
  1453  0000F1                     	ds	1
  1454  0000F2                     eusartparser@i_7478:
  1455                           	callstack 0
  1456                           
  1457                           ; 1 bytes @ 0x1A
  1458  0000F2                     	ds	1
  1459  0000F3                     eusartparser@i_7479:
  1460                           	callstack 0
  1461                           
  1462                           ; 1 bytes @ 0x1B
  1463  0000F3                     	ds	1
  1464  0000F4                     eusartparser@i_7485:
  1465                           	callstack 0
  1466                           
  1467                           ; 1 bytes @ 0x1C
  1468  0000F4                     	ds	1
  1469  0000F5                     eusartparser@i_7486:
  1470                           	callstack 0
  1471                           
  1472                           ; 1 bytes @ 0x1D
  1473  0000F5                     	ds	1
  1474  0000F6                     eusartparser@i_7487:
  1475                           	callstack 0
  1476                           
  1477                           ; 1 bytes @ 0x1E
  1478  0000F6                     	ds	1
  1479  0000F7                     eusartparser@relcounter:
  1480                           	callstack 0
  1481                           
  1482                           ; 1 bytes @ 0x1F
  1483  0000F7                     	ds	1
  1484  0000F8                     eusartparser@serial:
  1485                           	callstack 0
  1486                           
  1487                           ; 4 bytes @ 0x20
  1488  0000F8                     	ds	4
  1489                           
  1490                           	psect	cstackCOMRAM
  1491  000001                     __pcstackCOMRAM:
  1492                           	callstack 0
  1493  000001                     ??_rxi:
  1494  000001                     ??i2_GetMotorPower:
  1495  000001                     ADCC_GetSingleConversion@channel:
  1496                           	callstack 0
  1497  000001                     decrementTimeslot@ts:
  1498                           	callstack 0
  1499  000001                     Segments_Set@value:
  1500                           	callstack 0
  1501  000001                     i2VerifyElectricalBrake@tempState:
  1502                           	callstack 0
  1503  000001                     TMR1_WriteTimer@timerVal:
  1504                           	callstack 0
  1505                           
  1506                           ; 2 bytes @ 0x0
  1507  000001                     	ds	1
  1508  000002                     ??_ReadADC:
  1509  000002                     i2VerifyElectricalBrake@actualState:
  1510                           	callstack 0
  1511                           
  1512                           ; 1 bytes @ 0x1
  1513  000002                     	ds	1
  1514  000003                     
  1515                           ; 1 bytes @ 0x2
  1516  000003                     	ds	1
  1517  000004                     i2GetMotorPower@defineatraso:
  1518                           	callstack 0
  1519                           
  1520                           ; 1 bytes @ 0x3
  1521  000004                     	ds	1
  1522  000005                     ??_controlMotorForce:
  1523                           
  1524                           ; 1 bytes @ 0x4
  1525  000005                     	ds	5
  1526  00000A                     ??_INTERRUPT_InterruptManager:
  1527                           
  1528                           ; 1 bytes @ 0x9
  1529  00000A                     	ds	6
  1530  000010                     ??_GetMotorPower:
  1531  000010                     ??_SetSegmentValueLearn:
  1532  000010                     ?_sumEnergyADC:
  1533                           	callstack 0
  1534  000010                     ?_sm_get_current_state:
  1535                           	callstack 0
  1536  000010                     ?___wmul:
  1537                           	callstack 0
  1538  000010                     ?___lwdiv:
  1539                           	callstack 0
  1540  000010                     ?_calculateMean:
  1541                           	callstack 0
  1542  000010                     ?_sumHIST:
  1543                           	callstack 0
  1544  000010                     ?___lldiv:
  1545                           	callstack 0
  1546  000010                     EUSART1_Read@readValue:
  1547                           	callstack 0
  1548  000010                     EUSART1_Write@txData:
  1549                           	callstack 0
  1550  000010                     I2C1_Open@address:
  1551                           	callstack 0
  1552  000010                     I2C1_Close@returnValue:
  1553                           	callstack 0
  1554  000010                     I2C1_MasterSendTxData@data:
  1555                           	callstack 0
  1556  000010                     WWDT_TimerClear@state:
  1557                           	callstack 0
  1558  000010                     getKeyPressed@temp:
  1559                           	callstack 0
  1560  000010                     RGB_Set@value:
  1561                           	callstack 0
  1562  000010                     SetSegmentValueIntermitent@d2:
  1563                           	callstack 0
  1564  000010                     VerifyElectricalBrake@tempState:
  1565                           	callstack 0
  1566  000010                     VerifyFollowMe@securityClose:
  1567                           	callstack 0
  1568  000010                     ___lbdiv@divisor:
  1569                           	callstack 0
  1570  000010                     ___lbmod@divisor:
  1571                           	callstack 0
  1572  000010                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1573                           	callstack 0
  1574  000010                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1575                           	callstack 0
  1576  000010                     EUSART1_SetErrorHandler@interruptHandler:
  1577                           	callstack 0
  1578  000010                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1579                           	callstack 0
  1580  000010                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1581                           	callstack 0
  1582  000010                     I2C1_SetBuffer@buffer:
  1583                           	callstack 0
  1584  000010                     I2C1_SetCallback@cb:
  1585                           	callstack 0
  1586  000010                     TMR0_SetInterruptHandler@InterruptHandler:
  1587                           	callstack 0
  1588  000010                     TMR1_SetInterruptHandler@InterruptHandler:
  1589                           	callstack 0
  1590  000010                     TMR2_SetInterruptHandler@InterruptHandler:
  1591                           	callstack 0
  1592  000010                     saveEnergyADCHist@valueToSave:
  1593                           	callstack 0
  1594  000010                     DecCHK@data:
  1595                           	callstack 0
  1596  000010                     ReqResync@CurrentHop:
  1597                           	callstack 0
  1598  000010                     verifyProgramingMode@classic_data:
  1599                           	callstack 0
  1600  000010                     setFlashLigth_ON@Freq:
  1601                           	callstack 0
  1602  000010                     sm_restart@psm:
  1603                           	callstack 0
  1604  000010                     sm_get_current_state@psm:
  1605                           	callstack 0
  1606  000010                     init_package@package:
  1607                           	callstack 0
  1608  000010                     ___wmul@multiplier:
  1609                           	callstack 0
  1610  000010                     ___lwdiv@dividend:
  1611                           	callstack 0
  1612  000010                     memcpy@d1:
  1613                           	callstack 0
  1614  000010                     calculateMean@meanValue:
  1615                           	callstack 0
  1616  000010                     ___lldiv@dividend:
  1617                           	callstack 0
  1618                           
  1619                           ; 4 bytes @ 0xF
  1620  000010                     	ds	1
  1621  000011                     ?_read_package:
  1622                           	callstack 0
  1623  000011                     I2C1_Open@returnValue:
  1624                           	callstack 0
  1625  000011                     VerifyElectricalBrake@actualState:
  1626                           	callstack 0
  1627  000011                     ___lbdiv@dividend:
  1628                           	callstack 0
  1629  000011                     ___lbmod@dividend:
  1630                           	callstack 0
  1631  000011                     SetSegmentValueIntermitent@time:
  1632                           	callstack 0
  1633  000011                     setRGB_ON@Freq:
  1634                           	callstack 0
  1635  000011                     write_package@package:
  1636                           	callstack 0
  1637                           
  1638                           ; 7 bytes @ 0x10
  1639  000011                     	ds	1
  1640  000012                     ??_TMR1_Initialize:
  1641  000012                     ??_ControlMotor:
  1642  000012                     ??_sumEnergyADC:
  1643  000012                     ??_DecCHK:
  1644  000012                     SetSegmentValueLearn@direction:
  1645                           	callstack 0
  1646  000012                     ___lbdiv@counter:
  1647                           	callstack 0
  1648  000012                     ___lbmod@counter:
  1649                           	callstack 0
  1650  000012                     I2C1_SetBuffer@bufferSize:
  1651                           	callstack 0
  1652  000012                     I2C1_SetCallback@ptr:
  1653                           	callstack 0
  1654  000012                     sm_init@psm:
  1655                           	callstack 0
  1656  000012                     sm_send_event@psm:
  1657                           	callstack 0
  1658  000012                     confirmpackage@package:
  1659                           	callstack 0
  1660  000012                     ___wmul@multiplicand:
  1661                           	callstack 0
  1662  000012                     ___lwdiv@divisor:
  1663                           	callstack 0
  1664  000012                     memcpy@s1:
  1665                           	callstack 0
  1666                           
  1667                           ; 2 bytes @ 0x11
  1668  000012                     	ds	1
  1669  000013                     ??_setRGB_ON:
  1670  000013                     SetSegmentValueIntermitent@d1:
  1671                           	callstack 0
  1672  000013                     GetMotorPower@defineatraso:
  1673                           	callstack 0
  1674  000013                     ___lbdiv@quotient:
  1675                           	callstack 0
  1676  000013                     ___lbmod@rem:
  1677                           	callstack 0
  1678                           
  1679                           ; 1 bytes @ 0x12
  1680  000013                     	ds	1
  1681  000014                     ??_InitSoftStop:
  1682  000014                     ??_InitSoftStart:
  1683  000014                     ??_sumHIST:
  1684  000014                     ?___awdiv:
  1685                           	callstack 0
  1686  000014                     I2C1_SetCallback@idx:
  1687                           	callstack 0
  1688  000014                     confirmpackage@confirm:
  1689                           	callstack 0
  1690  000014                     ___lwdiv@counter:
  1691                           	callstack 0
  1692  000014                     sumEnergyADC@sumE:
  1693                           	callstack 0
  1694  000014                     sm_init@initial_state:
  1695                           	callstack 0
  1696  000014                     sm_send_event@event:
  1697                           	callstack 0
  1698  000014                     ___wmul@product:
  1699                           	callstack 0
  1700  000014                     ___awdiv@dividend:
  1701                           	callstack 0
  1702  000014                     memcpy@n:
  1703                           	callstack 0
  1704  000014                     calculateMean@newValue:
  1705                           	callstack 0
  1706  000014                     ___lldiv@divisor:
  1707                           	callstack 0
  1708                           
  1709                           ; 4 bytes @ 0x13
  1710  000014                     	ds	1
  1711  000015                     setRGB_ON@RGBLigth:
  1712                           	callstack 0
  1713  000015                     I2C1_SetDataCompleteCallback@cb:
  1714                           	callstack 0
  1715  000015                     I2C1_SetAddressNackCallback@cb:
  1716                           	callstack 0
  1717  000015                     ___lwdiv@quotient:
  1718                           	callstack 0
  1719                           
  1720                           ; 2 bytes @ 0x14
  1721  000015                     	ds	1
  1722  000016                     ?_getHopCode:
  1723                           	callstack 0
  1724  000016                     ?_getCurrentComparator:
  1725                           	callstack 0
  1726  000016                     sm_init@hist_mode:
  1727                           	callstack 0
  1728  000016                     memcpy@tmp:
  1729                           	callstack 0
  1730  000016                     sumEnergyADC@auxValue:
  1731                           	callstack 0
  1732  000016                     getHopCode@data:
  1733                           	callstack 0
  1734  000016                     ___awdiv@divisor:
  1735                           	callstack 0
  1736  000016                     write_eusartparser@package:
  1737                           	callstack 0
  1738                           
  1739                           ; 7 bytes @ 0x15
  1740  000016                     	ds	1
  1741  000017                     refreshADCZeroOffset@i:
  1742                           	callstack 0
  1743  000017                     I2C1_SetDataCompleteCallback@ptr:
  1744                           	callstack 0
  1745  000017                     I2C1_SetAddressNackCallback@ptr:
  1746                           	callstack 0
  1747  000017                     memcpy@d:
  1748                           	callstack 0
  1749                           
  1750                           ; 2 bytes @ 0x16
  1751  000017                     	ds	1
  1752  000018                     ??_getHopCode:
  1753  000018                     ??_calculateMean:
  1754  000018                     ??_OpenWalkOrder:
  1755  000018                     sumEnergyADC@i:
  1756                           	callstack 0
  1757  000018                     ControlMotor@stateMotor:
  1758                           	callstack 0
  1759  000018                     ___awdiv@counter:
  1760                           	callstack 0
  1761  000018                     refreshADCZeroOffset@media:
  1762                           	callstack 0
  1763  000018                     sumHIST@max:
  1764                           	callstack 0
  1765  000018                     read_eusartparser@package:
  1766                           	callstack 0
  1767  000018                     ___lldiv@quotient:
  1768                           	callstack 0
  1769  000018                     read_package@package:
  1770                           	callstack 0
  1771                           
  1772                           ; 7 bytes @ 0x17
  1773  000018                     	ds	1
  1774  000019                     ___awdiv@sign:
  1775                           	callstack 0
  1776  000019                     wr1RegCompleteHandler@p:
  1777                           	callstack 0
  1778  000019                     rd1RegCompleteHandler@p:
  1779                           	callstack 0
  1780  000019                     rd2RegCompleteHandler@p:
  1781                           	callstack 0
  1782  000019                     wr2RegCompleteHandler@p:
  1783                           	callstack 0
  1784  000019                     rdBlkRegCompleteHandler@p:
  1785                           	callstack 0
  1786  000019                     rd1RegCompleteHandler@i2c1_master_example$F500@ptr:
  1787                           	callstack 0
  1788  000019                     rd2RegCompleteHandler@i2c1_master_example$F511@ptr:
  1789                           	callstack 0
  1790  000019                     wr1RegCompleteHandler@i2c1_master_example$F517@ptr:
  1791                           	callstack 0
  1792  000019                     wr2RegCompleteHandler@i2c1_master_example$F523@ptr:
  1793                           	callstack 0
  1794  000019                     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr:
  1795                           	callstack 0
  1796  000019                     I2C1_CallbackReturnReset@funPtr:
  1797                           	callstack 0
  1798  000019                     memcpy@s:
  1799                           	callstack 0
  1800                           
  1801                           ; 2 bytes @ 0x18
  1802  000019                     	ds	1
  1803  00001A                     ??_getCurrentComparator:
  1804  00001A                     ??_read_eusartparser:
  1805  00001A                     sumHIST@min:
  1806                           	callstack 0
  1807  00001A                     OpenWalkOrder@diffTime:
  1808                           	callstack 0
  1809  00001A                     ___awdiv@quotient:
  1810                           	callstack 0
  1811                           
  1812                           ; 2 bytes @ 0x19
  1813  00001A                     	ds	1
  1814  00001B                     ??_I2C1_DO_TX:
  1815  00001B                     ??_I2C1_DO_RX:
  1816  00001B                     ??_I2C1_DO_TX_EMPTY:
  1817  00001B                     ??_I2C1_DO_ADDRESS_NACK:
  1818  00001B                     getSerialCmd@serial:
  1819                           	callstack 0
  1820  00001B                     Decrypt@packet:
  1821                           	callstack 0
  1822                           
  1823                           ; 2 bytes @ 0x1A
  1824  00001B                     	ds	1
  1825  00001C                     getSerialCmd@temp:
  1826                           	callstack 0
  1827  00001C                     SetSegmentValueMain@d2:
  1828                           	callstack 0
  1829  00001C                     SetSegmentValue@d2:
  1830                           	callstack 0
  1831  00001C                     SetSegmentValueIntermitentMain@d2:
  1832                           	callstack 0
  1833  00001C                     ___lldiv@counter:
  1834                           	callstack 0
  1835  00001C                     sumHIST@sumH:
  1836                           	callstack 0
  1837                           
  1838                           ; 4 bytes @ 0x1B
  1839  00001C                     	ds	1
  1840  00001D                     ??_I2C1_MasterFsm:
  1841  00001D                     ??_write_eusartparser:
  1842  00001D                     ?___lmul:
  1843                           	callstack 0
  1844  00001D                     Decrypt@key:
  1845                           	callstack 0
  1846  00001D                     SetSegmentValueMain@d1:
  1847                           	callstack 0
  1848  00001D                     SetSegmentValue@d1:
  1849                           	callstack 0
  1850  00001D                     SetSegmentValueIntermitentMain@time:
  1851                           	callstack 0
  1852  00001D                     ___lmul@multiplier:
  1853                           	callstack 0
  1854                           
  1855                           ; 4 bytes @ 0x1C
  1856  00001D                     	ds	1
  1857  00001E                     Decrypt@i:
  1858                           	callstack 0
  1859                           
  1860                           ; 1 bytes @ 0x1D
  1861  00001E                     	ds	1
  1862  00001F                     Decrypt@j:
  1863                           	callstack 0
  1864  00001F                     SetSegmentValueIntermitentMain@d1:
  1865                           	callstack 0
  1866  00001F                     read_eusartparser@state:
  1867                           	callstack 0
  1868                           
  1869                           ; 1 bytes @ 0x1E
  1870  00001F                     	ds	1
  1871  000020                     ??_load_New_Menu:
  1872  000020                     ??_controlSaveRemote:
  1873  000020                     I2C1_MasterOperation@read:
  1874                           	callstack 0
  1875  000020                     sumHIST@i:
  1876                           	callstack 0
  1877  000020                     Decrypt@p:
  1878                           	callstack 0
  1879  000020                     actionZone_Closed@securityOpening:
  1880                           	callstack 0
  1881  000020                     actionZone_Opened@securityClosing:
  1882                           	callstack 0
  1883  000020                     getCurrentComparator@tempOffset:
  1884                           	callstack 0
  1885  000020                     getHopCode@tempHop:
  1886                           	callstack 0
  1887  000020                     read_eusartparser@i:
  1888                           	callstack 0
  1889                           
  1890                           ; 2 bytes @ 0x1F
  1891  000020                     	ds	1
  1892  000021                     I2C1_MasterOperation@returnValue:
  1893                           	callstack 0
  1894  000021                     Decrypt@aux:
  1895                           	callstack 0
  1896  000021                     actionZone_Closed@typeOpenOrder:
  1897                           	callstack 0
  1898  000021                     actionZone_Opened@typeOpenOrder:
  1899                           	callstack 0
  1900  000021                     ___lmul@multiplicand:
  1901                           	callstack 0
  1902                           
  1903                           ; 4 bytes @ 0x20
  1904  000021                     	ds	1
  1905  000022                     I2C1_Read1ByteRegister@reg:
  1906                           	callstack 0
  1907  000022                     getCurrentComparator@x:
  1908                           	callstack 0
  1909  000022                     getHopCode@tempPos:
  1910                           	callstack 0
  1911  000022                     load_New_Menu@Menu:
  1912                           	callstack 0
  1913  000022                     updateChangesToUart@i:
  1914                           	callstack 0
  1915  000022                     i2c_writeNBytes@reg:
  1916                           	callstack 0
  1917  000022                     i2c_readDataBlock@reg:
  1918                           	callstack 0
  1919  000022                     Decrypt@Buffer:
  1920                           	callstack 0
  1921                           
  1922                           ; 4 bytes @ 0x21
  1923  000022                     	ds	1
  1924  000023                     ??_ControlCurrent:
  1925  000023                     I2C1_Read1ByteRegister@address:
  1926                           	callstack 0
  1927  000023                     getHopCode@i:
  1928                           	callstack 0
  1929  000023                     load_New_Menu@i:
  1930                           	callstack 0
  1931  000023                     updateChangesToUart@package:
  1932                           	callstack 0
  1933                           
  1934                           ; 7 bytes @ 0x22
  1935  000023                     	ds	1
  1936  000024                     I2C1_Read1ByteRegister@returnValue:
  1937                           	callstack 0
  1938  000024                     i2c_writeNBytes@data:
  1939                           	callstack 0
  1940  000024                     i2c_readDataBlock@data:
  1941                           	callstack 0
  1942  000024                     HopCHK@data:
  1943                           	callstack 0
  1944                           
  1945                           ; 2 bytes @ 0x23
  1946  000024                     	ds	1
  1947  000025                     ___lmul@product:
  1948                           	callstack 0
  1949                           
  1950                           ; 4 bytes @ 0x24
  1951  000025                     	ds	1
  1952  000026                     i2c_writeNBytes@len:
  1953                           	callstack 0
  1954  000026                     i2c_readDataBlock@len:
  1955                           	callstack 0
  1956  000026                     NormalKeyGen@serial:
  1957                           	callstack 0
  1958  000026                     HopCHK@hopDiff:
  1959                           	callstack 0
  1960                           
  1961                           ; 2 bytes @ 0x25
  1962  000026                     	ds	2
  1963  000028                     ??_i2c_writeNBytes:
  1964  000028                     ??_i2c_readDataBlock:
  1965  000028                     NormalKeyGen@HOPtemp:
  1966                           	callstack 0
  1967                           
  1968                           ; 4 bytes @ 0x27
  1969  000028                     	ds	1
  1970  000029                     ?_getTimeDecelaration:
  1971                           	callstack 0
  1972  000029                     i2c_readDataBlock@address:
  1973                           	callstack 0
  1974  000029                     i2c_writeNBytes@dat:
  1975                           	callstack 0
  1976                           
  1977                           ; 17 bytes @ 0x28
  1978  000029                     	ds	1
  1979  00002A                     i2c_readDataBlock@d:
  1980                           	callstack 0
  1981                           
  1982                           ; 4 bytes @ 0x29
  1983  00002A                     	ds	2
  1984  00002C                     NormalKeyGen@SKEYtemp:
  1985                           	callstack 0
  1986                           
  1987                           ; 4 bytes @ 0x2B
  1988  00002C                     	ds	1
  1989  00002D                     ??_getTimeDecelaration:
  1990                           
  1991                           ; 1 bytes @ 0x2C
  1992  00002D                     	ds	1
  1993  00002E                     ReadSerial@tempSerial:
  1994                           	callstack 0
  1995  00002E                     cmdMemoryIsEmpty@position:
  1996                           	callstack 0
  1997  00002E                     validateRemoteSerialNumber@serial:
  1998                           	callstack 0
  1999                           
  2000                           ; 4 bytes @ 0x2D
  2001  00002E                     	ds	1
  2002  00002F                     ??_cmdMemoryIsEmpty:
  2003  00002F                     ReadSerial@position:
  2004                           	callstack 0
  2005                           
  2006                           ; 1 bytes @ 0x2E
  2007  00002F                     	ds	1
  2008  000030                     ??_ReadSerial:
  2009  000030                     NormalKeyGen@Buffer:
  2010                           	callstack 0
  2011                           
  2012                           ; 8 bytes @ 0x2F
  2013  000030                     	ds	1
  2014  000031                     cmdMemoryIsEmpty@cmdType:
  2015                           	callstack 0
  2016  000031                     getTimeDecelaration@state:
  2017                           	callstack 0
  2018  000031                     write_eusartparser@i:
  2019                           	callstack 0
  2020                           
  2021                           ; 2 bytes @ 0x30
  2022  000031                     	ds	1
  2023  000032                     ??_setPositionInvertionInOpening:
  2024  000032                     ??_getStateOpenPosition:
  2025  000032                     validateRemoteSerialNumber@VerifyOnlySerial:
  2026                           	callstack 0
  2027  000032                     ReadSerial@cmdType:
  2028                           	callstack 0
  2029  000032                     actionZone_Closing@securityClosing:
  2030                           	callstack 0
  2031  000032                     cmdMemoryIsEmpty@tempSerial:
  2032                           	callstack 0
  2033                           
  2034                           ; 4 bytes @ 0x31
  2035  000032                     	ds	1
  2036  000033                     actionZone_Closing@typeOpenOrder:
  2037                           	callstack 0
  2038  000033                     validateRemoteSerialNumber@position:
  2039                           	callstack 0
  2040                           
  2041                           ; 2 bytes @ 0x32
  2042  000033                     	ds	2
  2043  000035                     validateRemoteSerialNumber@mask:
  2044                           	callstack 0
  2045                           
  2046                           ; 4 bytes @ 0x34
  2047  000035                     	ds	3
  2048  000038                     keeloq_classic_decrypt_packet@data:
  2049                           	callstack 0
  2050                           
  2051                           ; 2 bytes @ 0x37
  2052  000038                     	ds	1
  2053  000039                     validateRemoteSerialNumber@j:
  2054                           	callstack 0
  2055                           
  2056                           ; 1 bytes @ 0x38
  2057  000039                     	ds	1
  2058  00003A                     i2c_writeNBytes@address:
  2059                           	callstack 0
  2060  00003A                     validateRemoteSerialNumber@i:
  2061                           	callstack 0
  2062                           
  2063                           ; 1 bytes @ 0x39
  2064  00003A                     	ds	1
  2065  00003B                     
  2066                           ; 1 bytes @ 0x3A
  2067 ;;
  2068 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2069 ;;
  2070 ;; *************** function _main *****************
  2071 ;; Defined at:
  2072 ;;		line 63 in file "main_MC50.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;		None
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;  package         7    0[BANK2 ] struct package_t
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  1    wreg      void 
  2079 ;; Registers used:
  2080 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 3F/1
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2087 ;;      Locals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2089 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2090 ;;Total ram usage:        7 bytes
  2091 ;; Hardware stack levels required when called: 17
  2092 ;; This function calls:
  2093 ;;		_ControlCounterMoves
  2094 ;;		_ControlCurrent
  2095 ;;		_ControlInputs
  2096 ;;		_ControlLights
  2097 ;;		_ControlMotor
  2098 ;;		_EUSART1_is_rx_ready
  2099 ;;		_InitReceiver
  2100 ;;		_SYSTEM_Initialize
  2101 ;;		_SetSegmentValue
  2102 ;;		_ShowVersion
  2103 ;;		_WWDT_SoftEnable
  2104 ;;		_WWDT_TimerClear
  2105 ;;		_controlVelocity
  2106 ;;		_eusartparser
  2107 ;;		_getKeyPressed
  2108 ;;		_loadNVM_VarSystem
  2109 ;;		_readInputs
  2110 ;;		_readRFButtons
  2111 ;;		_read_package
  2112 ;;		_readbutton
  2113 ;;		_sm_execute_ControlGate
  2114 ;;		_sm_execute_main
  2115 ;;		_sm_init
  2116 ;; This function is called by:
  2117 ;;		Startup code after reset
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           	psect	text0
  2122  006434                     __ptext0:
  2123                           	callstack 0
  2124  006434                     _main:
  2125                           	callstack 14
  2126                           
  2127                           ;main_MC50.c: 70:     dispStruct.display_grp.value_display1=dMinus;
  2128                           
  2129                           ;incstack = 0
  2130  006434  0E18               	movlw	24
  2131  006436  0100               	movlb	0	; () banked
  2132  006438  6F60               	movwf	_dispStruct& (0+255),b	;volatile
  2133                           
  2134                           ;main_MC50.c: 71:     dispStruct.display_grp.value_display1=dMinus;
  2135  00643A  0E18               	movlw	24
  2136  00643C  6F60               	movwf	_dispStruct& (0+255),b	;volatile
  2137                           
  2138                           ;main_MC50.c: 72:     dispStruct.intermitentFreq=0;
  2139  00643E  0E00               	movlw	0
  2140  006440  6F64               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  2141  006442  0E00               	movlw	0
  2142  006444  6F63               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  2143                           
  2144                           ;main_MC50.c: 73:     dispStruct.upFase=1;
  2145  006446  0E01               	movlw	1
  2146  006448  6F65               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;main_MC50.c: 76:     SYSTEM_Initialize();
  2150  00644A  EC78  F04A         	call	_SYSTEM_Initialize	;wreg free
  2151                           
  2152                           ; BSR set to: 14
  2153                           ;main_MC50.c: 77:     WWDT_SoftEnable();
  2154  00644E  EC1C  F04E         	call	_WWDT_SoftEnable	;wreg free
  2155                           
  2156                           ; BSR set to: 14
  2157                           ;main_MC50.c: 80:       (INTCONbits.GIE = 1);
  2158  006452  8EF2               	bsf	242,7,c	;volatile
  2159                           
  2160                           ; BSR set to: 14
  2161                           ;main_MC50.c: 83:      (INTCONbits.PEIE = 1);
  2162  006454  8CF2               	bsf	242,6,c	;volatile
  2163                           
  2164                           ; BSR set to: 14
  2165                           ;main_MC50.c: 86:     IOCBP3=1;
  2166  006456  010F               	movlb	15	; () banked
  2167  006458  8714               	bsf	20,3,b	;volatile
  2168                           
  2169                           ; BSR set to: 15
  2170                           ;main_MC50.c: 87:     IOCBN3=1;
  2171  00645A  8713               	bsf	19,3,b	;volatile
  2172                           
  2173                           ; BSR set to: 15
  2174                           ;main_MC50.c: 94:     InitReceiver();
  2175  00645C  ECDD  F04C         	call	_InitReceiver	;wreg free
  2176                           
  2177                           ; BSR set to: 0
  2178                           ;main_MC50.c: 95:     loadNVM_VarSystem();
  2179  006460  ECDF  F034         	call	_loadNVM_VarSystem	;wreg free
  2180                           
  2181                           ;main_MC50.c: 97:     WWDT_TimerClear();
  2182  006464  EC7F  F04C         	call	_WWDT_TimerClear	;wreg free
  2183                           
  2184                           ;main_MC50.c: 99:     SetSegmentValue(dMinus,dMinus);
  2185  006468  0E18               	movlw	24
  2186  00646A  6E1C               	movwf	SetSegmentValue@d2^0,c
  2187  00646C  0E18               	movlw	24
  2188  00646E  ECC3  F04C         	call	_SetSegmentValue
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;main_MC50.c: 100:     ts_system.ts_TimeSlot1ms = ( 100/50);
  2192  006472  0E02               	movlw	2
  2193  006474  6F91               	movwf	(_ts_system+2)& (0+255),b	;volatile
  2194                           
  2195                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  2196  006476  D00B               	goto	l27609
  2197  006478                     l27599:
  2198                           
  2199                           ; BSR set to: 0
  2200                           ;main_MC50.c: 102:     {;main_MC50.c: 103:         if ( ts_system.ts_TimeSlotMain<=0 )
  2201  006478  5192               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  2202  00647A  A4D8               	btfss	status,2,c
  2203  00647C  D008               	goto	l27609
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;main_MC50.c: 104:         {;main_MC50.c: 105:             WWDT_TimerClear();
  2207  00647E  EC7F  F04C         	call	_WWDT_TimerClear	;wreg free
  2208                           
  2209                           ;main_MC50.c: 106:             ts_system.ts_TimeSlotMain = 50;
  2210  006482  0E32               	movlw	50
  2211  006484  0100               	movlb	0	; () banked
  2212  006486  6F92               	movwf	(_ts_system+3)& (0+255),b	;volatile
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;main_MC50.c: 108:             ts_system.ts_TimeSlot1ms--;
  2216  006488  0791               	decf	(_ts_system+2)& (0+255),f,b	;volatile
  2217                           
  2218                           ; BSR set to: 0
  2219                           ;main_MC50.c: 109:             readInputs();
  2220  00648A  ECB4  F038         	call	_readInputs	;wreg free
  2221  00648E                     l27609:
  2222                           
  2223                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  2224  00648E  0100               	movlb	0	; () banked
  2225  006490  5191               	movf	(_ts_system+2)& (0+255),w,b	;volatile
  2226  006492  A4D8               	btfss	status,2,c
  2227  006494  D7F1               	goto	l27599
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;main_MC50.c: 117:     sm_init(&menuConfiguration_stateMachine,st_MainMenu,HIST_NONE);
  2231  006496  0EBD               	movlw	low _menuConfiguration_stateMachine
  2232  006498  6E12               	movwf	sm_init@psm^0,c
  2233  00649A  0E02               	movlw	high _menuConfiguration_stateMachine
  2234  00649C  6E13               	movwf	(sm_init@psm+1)^0,c
  2235  00649E  0E00               	movlw	0
  2236  0064A0  6E15               	movwf	(sm_init@initial_state+1)^0,c
  2237  0064A2  0E00               	movlw	0
  2238  0064A4  6E14               	movwf	sm_init@initial_state^0,c
  2239  0064A6  0E00               	movlw	0
  2240  0064A8  6E16               	movwf	sm_init@hist_mode^0,c
  2241  0064AA  EC9D  F046         	call	_sm_init	;wreg free
  2242                           
  2243                           ;main_MC50.c: 118:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
  2244  0064AE  0EF1               	movlw	low _main_stateMachine
  2245  0064B0  6E12               	movwf	sm_init@psm^0,c
  2246  0064B2  0E01               	movlw	high _main_stateMachine
  2247  0064B4  6E13               	movwf	(sm_init@psm+1)^0,c
  2248  0064B6  0E00               	movlw	0
  2249  0064B8  6E15               	movwf	(sm_init@initial_state+1)^0,c
  2250  0064BA  0E00               	movlw	0
  2251  0064BC  6E14               	movwf	sm_init@initial_state^0,c
  2252  0064BE  0E00               	movlw	0
  2253  0064C0  6E16               	movwf	sm_init@hist_mode^0,c
  2254  0064C2  EC9D  F046         	call	_sm_init	;wreg free
  2255                           
  2256                           ;main_MC50.c: 119:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE);
  2257  0064C6  0EE6               	movlw	low _controlGate_stateMachine
  2258  0064C8  6E12               	movwf	sm_init@psm^0,c
  2259  0064CA  0E01               	movlw	high _controlGate_stateMachine
  2260  0064CC  6E13               	movwf	(sm_init@psm+1)^0,c
  2261  0064CE  0E00               	movlw	0
  2262  0064D0  6E15               	movwf	(sm_init@initial_state+1)^0,c
  2263  0064D2  0E00               	movlw	0
  2264  0064D4  6E14               	movwf	sm_init@initial_state^0,c
  2265  0064D6  0E00               	movlw	0
  2266  0064D8  6E16               	movwf	sm_init@hist_mode^0,c
  2267  0064DA  EC9D  F046         	call	_sm_init	;wreg free
  2268                           
  2269                           ;main_MC50.c: 120:     sm_init(&controlLearning_stateMachine,st_InitLearning,HIST_NONE);
  2270  0064DE  0EB2               	movlw	low _controlLearning_stateMachine
  2271  0064E0  6E12               	movwf	sm_init@psm^0,c
  2272  0064E2  0E02               	movlw	high _controlLearning_stateMachine
  2273  0064E4  6E13               	movwf	(sm_init@psm+1)^0,c
  2274  0064E6  0E00               	movlw	0
  2275  0064E8  6E15               	movwf	(sm_init@initial_state+1)^0,c
  2276  0064EA  0E00               	movlw	0
  2277  0064EC  6E14               	movwf	sm_init@initial_state^0,c
  2278  0064EE  0E00               	movlw	0
  2279  0064F0  6E16               	movwf	sm_init@hist_mode^0,c
  2280  0064F2  EC9D  F046         	call	_sm_init	;wreg free
  2281                           
  2282                           ;main_MC50.c: 122:     ts_system.Debug_TS=(1000/50);
  2283  0064F6  0E00               	movlw	0
  2284  0064F8  0100               	movlb	0	; () banked
  2285  0064FA  6F98               	movwf	(_ts_system+9)& (0+255),b	;volatile
  2286  0064FC  0E14               	movlw	20
  2287  0064FE  6F97               	movwf	(_ts_system+8)& (0+255),b	;volatile
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;main_MC50.c: 124:     var_sys.ADCZeroOffset = 510;
  2291  006500  0E01               	movlw	1
  2292  006502  0101               	movlb	1	; () banked
  2293  006504  6FA1               	movwf	(_var_sys+76)& (0+255),b	;volatile
  2294  006506  0EFE               	movlw	254
  2295  006508  6FA0               	movwf	(_var_sys+75)& (0+255),b	;volatile
  2296                           
  2297                           ; BSR set to: 1
  2298                           ;main_MC50.c: 125:     ts_system.TimeStopADCZeroOffsetCalc = (5*(1000/50));
  2299  00650A  0E00               	movlw	0
  2300  00650C  0100               	movlb	0	; () banked
  2301  00650E  6FCE               	movwf	(_ts_system+63)& (0+255),b	;volatile
  2302  006510  0E64               	movlw	100
  2303  006512  6FCD               	movwf	(_ts_system+62)& (0+255),b	;volatile
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;main_MC50.c: 126:     ts_system.TimeStopElectricBrake = 0;
  2307  006514  0E00               	movlw	0
  2308  006516  6FD0               	movwf	(_ts_system+65)& (0+255),b	;volatile
  2309  006518  0E00               	movlw	0
  2310  00651A  6FCF               	movwf	(_ts_system+64)& (0+255),b	;volatile
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;main_MC50.c: 129:     var_sys.StateMotor = Stopped;
  2314  00651C  0E00               	movlw	0
  2315  00651E  0101               	movlb	1	; () banked
  2316  006520  6F55               	movwf	_var_sys& (0+255),b	;volatile
  2317  006522                     l27623:
  2318                           
  2319                           ;main_MC50.c: 136:     {;main_MC50.c: 140:         struct package_t package;;main_MC50.c
      +                          : 141:         if(EUSART1_is_rx_ready()){
  2320  006522  EC6C  F04D         	call	_EUSART1_is_rx_ready	;wreg free
  2321  006526  0900               	iorlw	0
  2322  006528  B4D8               	btfsc	status,2,c
  2323  00652A  D010               	goto	l27629
  2324                           
  2325                           ; BSR set to: 0
  2326                           ;main_MC50.c: 142:             package=read_package();
  2327  00652C  EC71  F047         	call	_read_package	;wreg free
  2328  006530  EE22  F0EF         	lfsr	2,main@package
  2329  006534  0E06               	movlw	6
  2330  006536                     u34621:
  2331  006536  CFEB FFDB          	movff	plusw0,plusw2
  2332  00653A  06E8               	decf	wreg,f,c
  2333  00653C  E2FC               	bc	u34621
  2334                           
  2335                           ; BSR set to: 14
  2336                           ;main_MC50.c: 143:             eusartparser(&package);
  2337  00653E  0EEF               	movlw	low main@package
  2338  006540  0100               	movlb	0	; () banked
  2339  006542  6FE0               	movwf	eusartparser@package& (0+255),b
  2340  006544  0E02               	movlw	high main@package
  2341  006546  6FE1               	movwf	(eusartparser@package+1)& (0+255),b
  2342  006548  EC91  F007         	call	_eusartparser	;wreg free
  2343  00654C                     l27629:
  2344                           
  2345                           ;main_MC50.c: 147:         if ( ts_system.ts_TimeSlotMain<=0 )
  2346  00654C  0100               	movlb	0	; () banked
  2347  00654E  5192               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  2348  006550  A4D8               	btfss	status,2,c
  2349  006552  D7E7               	goto	l27623
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;main_MC50.c: 148:         {;main_MC50.c: 149:              ts_system.ts_TimeSlotMain = 
      +                          50;
  2353  006554  0E32               	movlw	50
  2354  006556  6F92               	movwf	(_ts_system+3)& (0+255),b	;volatile
  2355                           
  2356                           ; BSR set to: 0
  2357                           ;main_MC50.c: 150:             WWDT_TimerClear();
  2358  006558  EC7F  F04C         	call	_WWDT_TimerClear	;wreg free
  2359                           
  2360                           ;main_MC50.c: 152:             if(var_sys.StateVersion<4)
  2361  00655C  0E04               	movlw	4
  2362  00655E  0101               	movlb	1	; () banked
  2363  006560  619E               	cpfslt	(_var_sys+73)& (0+255),b	;volatile
  2364  006562  D003               	goto	l27639
  2365                           
  2366                           ; BSR set to: 1
  2367                           ;main_MC50.c: 154:             {;main_MC50.c: 155:                 ShowVersion();
  2368  006564  ECC0  F044         	call	_ShowVersion	;wreg free
  2369                           
  2370                           ;main_MC50.c: 156:             }
  2371  006568  D7DC               	goto	l27623
  2372  00656A                     l27639:
  2373                           
  2374                           ; BSR set to: 1
  2375                           ;main_MC50.c: 158:             {;main_MC50.c: 160:                 readbutton();
  2376  00656A  EC8A  F044         	call	_readbutton	;wreg free
  2377                           
  2378                           ; BSR set to: 1
  2379                           ;main_MC50.c: 162:                 readRFButtons();
  2380  00656E  EC86  F030         	call	_readRFButtons	;wreg free
  2381                           
  2382                           ;main_MC50.c: 163:                lastKey=getKeyPressed();
  2383  006572  ECF5  F04C         	call	_getKeyPressed	;wreg free
  2384  006576  0101               	movlb	1	; () banked
  2385  006578  6F51               	movwf	_lastKey& (0+255),b
  2386                           
  2387                           ; BSR set to: 1
  2388                           ;main_MC50.c: 165:                 readInputs();
  2389  00657A  ECB4  F038         	call	_readInputs	;wreg free
  2390                           
  2391                           ; BSR set to: 1
  2392                           ;main_MC50.c: 166:                 ControlInputs();
  2393  00657E  ECAE  F039         	call	_ControlInputs	;wreg free
  2394                           
  2395                           ; BSR set to: 1
  2396                           ;main_MC50.c: 167:                 ControlCurrent();
  2397  006582  ECE0  F032         	call	_ControlCurrent	;wreg free
  2398                           
  2399                           ;main_MC50.c: 168:                 controlVelocity();
  2400  006586  EC15  F02A         	call	_controlVelocity	;wreg free
  2401                           
  2402                           ; BSR set to: 1
  2403                           ;main_MC50.c: 169:                 ControlMotor();
  2404  00658A  ECDC  F027         	call	_ControlMotor	;wreg free
  2405                           
  2406                           ;main_MC50.c: 170:                 ControlLights();
  2407  00658E  EC08  F020         	call	_ControlLights	;wreg free
  2408                           
  2409                           ;main_MC50.c: 171:                 ControlCounterMoves();
  2410  006592  EC35  F048         	call	_ControlCounterMoves	;wreg free
  2411                           
  2412                           ;main_MC50.c: 173:                 sm_execute_main(&main_stateMachine);
  2413  006596  0EF1               	movlw	low _main_stateMachine
  2414  006598  0100               	movlb	0	; () banked
  2415  00659A  6FED               	movwf	sm_execute_main@psm& (0+255),b
  2416  00659C  0E01               	movlw	high _main_stateMachine
  2417  00659E  6FEE               	movwf	(sm_execute_main@psm+1)& (0+255),b
  2418  0065A0  ECBE  F017         	call	_sm_execute_main	;wreg free
  2419                           
  2420                           ;main_MC50.c: 174:                 sm_execute_ControlGate(&controlGate_stateMachine);
  2421  0065A4  0EE6               	movlw	low _controlGate_stateMachine
  2422  0065A6  0100               	movlb	0	; () banked
  2423  0065A8  6FE7               	movwf	sm_execute_ControlGate@psm& (0+255),b
  2424  0065AA  0E01               	movlw	high _controlGate_stateMachine
  2425  0065AC  6FE8               	movwf	(sm_execute_ControlGate@psm+1)& (0+255),b
  2426  0065AE  EC61  F01E         	call	_sm_execute_ControlGate	;wreg free
  2427                           
  2428                           ;main_MC50.c: 177:                 if(lastKey!=0xff)
  2429  0065B2  0101               	movlb	1	; () banked
  2430  0065B4  2951               	incf	_lastKey& (0+255),w,b
  2431  0065B6  B4D8               	btfsc	status,2,c
  2432  0065B8  D7B4               	goto	l27623
  2433                           
  2434                           ; BSR set to: 1
  2435                           ;main_MC50.c: 178:                 {;main_MC50.c: 180:                       InitReceive
      +                          r();
  2436  0065BA  ECDD  F04C         	call	_InitReceiver	;wreg free
  2437                           
  2438                           ; BSR set to: 1
  2439                           
  2440                           ;main_MC50.c: 185:         }
  2441  0065BE  D7B1               	goto	l27623
  2442  0065C0                     __end_of_main:
  2443                           	callstack 0
  2444                           
  2445 ;; *************** function _sm_execute_main *****************
  2446 ;; Defined at:
  2447 ;;		line 26 in file "sm_Main_MC50.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  psm             2   21[BANK0 ] PTR struct .
  2450 ;;		 -> main_stateMachine(11), 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;		None
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  1    wreg      void 
  2455 ;; Registers used:
  2456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2457 ;; Tracked objects:
  2458 ;;		On entry : 3F/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2462 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2464 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2465 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2466 ;;Total ram usage:        4 bytes
  2467 ;; Hardware stack levels used: 1
  2468 ;; Hardware stack levels required when called: 16
  2469 ;; This function calls:
  2470 ;;		_SetSegmentValueIntermitentMain
  2471 ;;		_SetSegmentValueMain
  2472 ;;		_load_New_Menu
  2473 ;;		_sm_execute_menuConfiguration
  2474 ;;		_sm_send_event
  2475 ;; This function is called by:
  2476 ;;		_main
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           	psect	text1
  2481  002F7C                     __ptext1:
  2482                           	callstack 0
  2483  002F7C                     _sm_execute_main:
  2484                           	callstack 14
  2485                           
  2486                           ; BSR set to: 0
  2487                           ;sm_Main_MC50.c: 29:     switch((sm_state_Main_t) psm->current_state)
  2488                           
  2489                           ; BSR set to: 1
  2490                           ;incstack = 0
  2491  002F7C  D053               	goto	l25455
  2492  002F7E                     l25431:
  2493                           
  2494                           ; BSR set to: 0
  2495                           ;sm_Main_MC50.c: 32:         {;sm_Main_MC50.c: 33:             if(programmer_enable==0)
  2496  002F7E  517B               	movf	_programmer_enable& (0+255),w,b
  2497  002F80  A4D8               	btfss	status,2,c
  2498  002F82  D066               	goto	l25457
  2499                           
  2500                           ; BSR set to: 0
  2501                           ;sm_Main_MC50.c: 34:                 if(psm->last_event==ev_goto_MenuConfig)
  2502  002F84  EE20 F004          	lfsr	2,4
  2503  002F88  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2504  002F8A  26D9               	addwf	fsr2l,f,c
  2505  002F8C  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2506  002F8E  22DA               	addwfc	fsr2h,f,c
  2507  002F90  0E06               	movlw	6
  2508  002F92  18DE               	xorwf	postinc2,w,c
  2509  002F94  10DE               	iorwf	postinc2,w,c
  2510  002F96  A4D8               	btfss	status,2,c
  2511  002F98  D006               	goto	l25437
  2512  002F9A                     u32670:
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;sm_Main_MC50.c: 35:                 {;sm_Main_MC50.c: 37:                     psm->curr
      +                          ent_state = st_MenuConfiguration;
  2516  002F9A  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2517  002F9E  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2518  002FA2  0E01               	movlw	1
  2519  002FA4  D01D               	goto	L2
  2520  002FA6                     l25437:
  2521                           
  2522                           ; BSR set to: 0
  2523  002FA6  EE20 F004          	lfsr	2,4
  2524  002FAA  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2525  002FAC  26D9               	addwf	fsr2l,f,c
  2526  002FAE  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2527  002FB0  22DA               	addwfc	fsr2h,f,c
  2528  002FB2  0E11               	movlw	17
  2529  002FB4  18DE               	xorwf	postinc2,w,c
  2530  002FB6  10DE               	iorwf	postinc2,w,c
  2531  002FB8  A4D8               	btfss	status,2,c
  2532  002FBA  D04A               	goto	l25457
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;sm_Main_MC50.c: 40:                 {;sm_Main_MC50.c: 41:                     psm->curr
      +                          ent_state = st_MotorON;
  2536  002FBC  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2537  002FC0  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2538  002FC4  0E02               	movlw	2
  2539  002FC6  D00C               	goto	L2
  2540  002FC8                     l25441:
  2541                           
  2542                           ; BSR set to: 0
  2543                           ;sm_Main_MC50.c: 46:         {;sm_Main_MC50.c: 47:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2544  002FC8  EE20 F004          	lfsr	2,4
  2545  002FCC  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2546  002FCE  26D9               	addwf	fsr2l,f,c
  2547  002FD0  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2548  002FD2  22DA               	addwfc	fsr2h,f,c
  2549  002FD4  0E07               	movlw	7
  2550  002FD6  18DE               	xorwf	postinc2,w,c
  2551  002FD8  10DE               	iorwf	postinc2,w,c
  2552  002FDA  A4D8               	btfss	status,2,c
  2553  002FDC  D039               	goto	l25457
  2554  002FDE  D00F               	goto	u32700
  2555  002FE0                     L2:
  2556  002FE0  6EDE               	movwf	postinc2,c
  2557  002FE2  0E00               	movlw	0
  2558  002FE4  6EDD               	movwf	postdec2,c
  2559  002FE6  D034               	goto	l25457
  2560  002FE8                     l25445:
  2561                           
  2562                           ; BSR set to: 0
  2563                           ;sm_Main_MC50.c: 54:         {;sm_Main_MC50.c: 55:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2564  002FE8  EE20 F004          	lfsr	2,4
  2565  002FEC  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2566  002FEE  26D9               	addwf	fsr2l,f,c
  2567  002FF0  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2568  002FF2  22DA               	addwfc	fsr2h,f,c
  2569  002FF4  0E07               	movlw	7
  2570  002FF6  18DE               	xorwf	postinc2,w,c
  2571  002FF8  10DE               	iorwf	postinc2,w,c
  2572  002FFA  A4D8               	btfss	status,2,c
  2573  002FFC  D006               	goto	l25449
  2574  002FFE                     u32700:
  2575                           
  2576                           ; BSR set to: 0
  2577                           ;sm_Main_MC50.c: 56:             {;sm_Main_MC50.c: 57:                 psm->current_stat
      +                          e = st_standBy;
  2578  002FFE  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2579  003002  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2580  003006  0E00               	movlw	0
  2581  003008  D7EB               	goto	L2
  2582  00300A                     l25449:
  2583                           
  2584                           ; BSR set to: 0
  2585  00300A  EE20 F004          	lfsr	2,4
  2586  00300E  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2587  003010  26D9               	addwf	fsr2l,f,c
  2588  003012  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2589  003014  22DA               	addwfc	fsr2h,f,c
  2590  003016  0E06               	movlw	6
  2591  003018  18DE               	xorwf	postinc2,w,c
  2592  00301A  10DE               	iorwf	postinc2,w,c
  2593  00301C  A4D8               	btfss	status,2,c
  2594  00301E  D018               	goto	l25457
  2595  003020  D7BC               	goto	u32670
  2596  003022                     l3093:
  2597                           
  2598                           ; BSR set to: 0
  2599  003022  D7FF               	goto	l3093
  2600  003024                     l25455:
  2601                           
  2602                           ; BSR set to: 0
  2603  003024  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2604  003028  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2605  00302C  50DF               	movf	indf2,w,c
  2606  00302E  6FEF               	movwf	??_sm_execute_main& (0+255),b
  2607  003030  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  2608                           
  2609                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2610                           ; Switch size 1, requested type "simple"
  2611                           ; Number of cases is 1, Range of values is 0 to 0
  2612                           ; switch strategies available:
  2613                           ; Name         Instructions Cycles
  2614                           ; simple_byte            4     3 (average)
  2615                           ;	Chosen strategy is simple_byte
  2616  003032  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  2617  003034  0A00               	xorlw	0	; case 0
  2618  003036  A4D8               	btfss	status,2,c
  2619  003038  D7F4               	goto	l3093
  2620                           
  2621                           ; BSR set to: 0
  2622                           ; Switch size 1, requested type "simple"
  2623                           ; Number of cases is 3, Range of values is 0 to 2
  2624                           ; switch strategies available:
  2625                           ; Name         Instructions Cycles
  2626                           ; simple_byte           10     6 (average)
  2627                           ;	Chosen strategy is simple_byte
  2628  00303A  51EF               	movf	??_sm_execute_main& (0+255),w,b
  2629  00303C  0A00               	xorlw	0	; case 0
  2630  00303E  B4D8               	btfsc	status,2,c
  2631  003040  D79E               	goto	l25431
  2632  003042  0A01               	xorlw	1	; case 1
  2633  003044  B4D8               	btfsc	status,2,c
  2634  003046  D7C0               	goto	l25441
  2635  003048  0A03               	xorlw	3	; case 2
  2636  00304A  B4D8               	btfsc	status,2,c
  2637  00304C  D7CD               	goto	l25445
  2638  00304E  D7E9               	goto	l3093
  2639  003050                     l25457:
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;sm_Main_MC50.c: 77:     sm_send_event(&main_stateMachine, ev_NULL);
  2643  003050  0EF1               	movlw	low _main_stateMachine
  2644  003052  6E12               	movwf	sm_send_event@psm^0,c
  2645  003054  0E01               	movlw	high _main_stateMachine
  2646  003056  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2647  003058  0E00               	movlw	0
  2648  00305A  6E15               	movwf	(sm_send_event@event+1)^0,c
  2649  00305C  0E00               	movlw	0
  2650  00305E  6E14               	movwf	sm_send_event@event^0,c
  2651  003060  ECE8  F045         	call	_sm_send_event	;wreg free
  2652                           
  2653                           ;sm_Main_MC50.c: 82:     switch((sm_state_Main_t) psm->current_state)
  2654  003064  D1F6               	goto	l25735
  2655  003066                     l25459:
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;sm_Main_MC50.c: 85:         {;sm_Main_MC50.c: 86:             if (button_struct.current
      +                          ==0x27 && button_struct.timer>((1000/50)*5))
  2659  003066  0E27               	movlw	39
  2660  003068  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2661  00306A  A4D8               	btfss	status,2,c
  2662  00306C  D016               	goto	l25471
  2663                           
  2664                           ; BSR set to: 0
  2665  00306E  0E64               	movlw	100
  2666  003070  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2667  003072  D013               	goto	l25471
  2668                           
  2669                           ; BSR set to: 0
  2670                           ;sm_Main_MC50.c: 87:             {;sm_Main_MC50.c: 88:                 load_New_Menu(E_M
      +                          enu);
  2671  003074  0E01               	movlw	1
  2672  003076  EC91  F021         	call	_load_New_Menu
  2673  00307A                     l25465:
  2674                           
  2675                           ;sm_Main_MC50.c: 89:                 sm_send_event(&main_stateMachine, ev_goto_MenuConfi
      +                          g);
  2676  00307A  0EF1               	movlw	low _main_stateMachine
  2677  00307C  6E12               	movwf	sm_send_event@psm^0,c
  2678  00307E  0E01               	movlw	high _main_stateMachine
  2679  003080  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2680  003082  0E00               	movlw	0
  2681  003084  6E15               	movwf	(sm_send_event@event+1)^0,c
  2682  003086  0E06               	movlw	6
  2683  003088  6E14               	movwf	sm_send_event@event^0,c
  2684  00308A  ECE8  F045         	call	_sm_send_event	;wreg free
  2685                           
  2686                           ;sm_Main_MC50.c: 90:                 button_struct.processed=1;
  2687  00308E  0E01               	movlw	1
  2688  003090  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2689                           
  2690                           ;sm_Main_MC50.c: 91:                 temp=0;
  2691  003092  0E00               	movlw	0
  2692  003094  0100               	movlb	0	; () banked
  2693  003096  6F6F               	movwf	_temp& (0+255),b
  2694                           
  2695                           ;sm_Main_MC50.c: 92:             }
  2696  003098  0012               	return	
  2697  00309A                     l25471:
  2698                           
  2699                           ; BSR set to: 0
  2700  00309A  0E27               	movlw	39
  2701  00309C  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2702  00309E  A4D8               	btfss	status,2,c
  2703  0030A0  D00B               	goto	l25479
  2704                           
  2705                           ; BSR set to: 0
  2706  0030A2  0E14               	movlw	20
  2707  0030A4  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2708  0030A6  D008               	goto	l25479
  2709                           
  2710                           ; BSR set to: 0
  2711                           ;sm_Main_MC50.c: 94:             {;sm_Main_MC50.c: 97:                 SetSegmentValueMa
      +                          in(dP,d0);
  2712  0030A8  0E00               	movlw	0
  2713  0030AA  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2714  0030AC  0E10               	movlw	16
  2715  0030AE  ECA9  F04C         	call	_SetSegmentValueMain
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;sm_Main_MC50.c: 98:                 temp=1;
  2719  0030B2  0E01               	movlw	1
  2720  0030B4  6F6F               	movwf	_temp& (0+255),b
  2721                           
  2722                           ;sm_Main_MC50.c: 99:             }
  2723  0030B6  0012               	return	
  2724  0030B8                     l25479:
  2725                           
  2726                           ; BSR set to: 0
  2727  0030B8  056F               	decf	_temp& (0+255),w,b
  2728  0030BA  A4D8               	btfss	status,2,c
  2729  0030BC  D004               	goto	l25489
  2730                           
  2731                           ; BSR set to: 0
  2732                           ;sm_Main_MC50.c: 101:             {;sm_Main_MC50.c: 102:                 load_New_Menu(P
      +                          _Menu);
  2733  0030BE  0E00               	movlw	0
  2734  0030C0  EC91  F021         	call	_load_New_Menu
  2735  0030C4  D7DA               	goto	l25465
  2736  0030C6                     l25489:
  2737                           
  2738                           ; BSR set to: 0
  2739  0030C6  0E07               	movlw	7
  2740  0030C8  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2741  0030CA  A4D8               	btfss	status,2,c
  2742  0030CC  D007               	goto	l25501
  2743                           
  2744                           ; BSR set to: 0
  2745  0030CE  0E78               	movlw	120
  2746  0030D0  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2747  0030D2  D004               	goto	l25501
  2748                           
  2749                           ; BSR set to: 0
  2750                           ;sm_Main_MC50.c: 108:             {;sm_Main_MC50.c: 110:                 load_New_Menu(D
      +                          el_Menu);
  2751  0030D4  0E0D               	movlw	13
  2752  0030D6  EC91  F021         	call	_load_New_Menu
  2753  0030DA  D7CF               	goto	l25465
  2754  0030DC                     l25501:
  2755                           
  2756                           ; BSR set to: 0
  2757  0030DC  0E07               	movlw	7
  2758  0030DE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2759  0030E0  A4D8               	btfss	status,2,c
  2760  0030E2  D00B               	goto	l25509
  2761                           
  2762                           ; BSR set to: 0
  2763  0030E4  0E14               	movlw	20
  2764  0030E6  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2765  0030E8  D008               	goto	l25509
  2766                           
  2767                           ; BSR set to: 0
  2768                           ;sm_Main_MC50.c: 116:             {;sm_Main_MC50.c: 118:                 SetSegmentValue
      +                          Main(d5,dU);
  2769  0030EA  0E13               	movlw	19
  2770  0030EC  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2771  0030EE  0E05               	movlw	5
  2772  0030F0  ECA9  F04C         	call	_SetSegmentValueMain
  2773                           
  2774                           ; BSR set to: 0
  2775                           ;sm_Main_MC50.c: 119:                 temp=2;
  2776  0030F4  0E02               	movlw	2
  2777  0030F6  6F6F               	movwf	_temp& (0+255),b
  2778                           
  2779                           ;sm_Main_MC50.c: 120:             }
  2780  0030F8  0012               	return	
  2781  0030FA                     l25509:
  2782                           
  2783                           ; BSR set to: 0
  2784  0030FA  0E02               	movlw	2
  2785  0030FC  196F               	xorwf	_temp& (0+255),w,b
  2786  0030FE  A4D8               	btfss	status,2,c
  2787  003100  D004               	goto	l25519
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;sm_Main_MC50.c: 122:             {;sm_Main_MC50.c: 123:                 load_New_Menu(S
      +                          _Menu);
  2791  003102  0E0C               	movlw	12
  2792  003104  EC91  F021         	call	_load_New_Menu
  2793  003108  D7B8               	goto	l25465
  2794  00310A                     l25519:
  2795                           
  2796                           ; BSR set to: 0
  2797  00310A  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2798  00310C  A4D8               	btfss	status,2,c
  2799  00310E  D009               	goto	l25525
  2800                           
  2801                           ; BSR set to: 0
  2802  003110  0101               	movlb	1	; () banked
  2803  003112  5158               	movf	(_var_sys+3)& (0+255),w,b	;volatile
  2804  003114  A4D8               	btfss	status,2,c
  2805  003116  D005               	goto	l25525
  2806                           
  2807                           ; BSR set to: 1
  2808                           ;sm_Main_MC50.c: 129:             {;sm_Main_MC50.c: 130:                 var_sys.StartFr
      +                          omButton=YES;
  2809  003118  0E01               	movlw	1
  2810  00311A  6F5E               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2811                           
  2812                           ;sm_Main_MC50.c: 131:                 var_sys.StateMotor=InClose;
  2813  00311C  0E03               	movlw	3
  2814  00311E  6F55               	movwf	_var_sys& (0+255),b	;volatile
  2815                           
  2816                           ;sm_Main_MC50.c: 132:             }
  2817  003120  0012               	return	
  2818  003122                     l25525:
  2819  003122  0E17               	movlw	23
  2820  003124  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2821  003126  A4D8               	btfss	status,2,c
  2822  003128  D009               	goto	l25531
  2823  00312A  0101               	movlb	1	; () banked
  2824  00312C  5159               	movf	(_var_sys+4)& (0+255),w,b	;volatile
  2825  00312E  A4D8               	btfss	status,2,c
  2826  003130  D005               	goto	l25531
  2827                           
  2828                           ; BSR set to: 1
  2829                           ;sm_Main_MC50.c: 134:             {;sm_Main_MC50.c: 135:                 var_sys.StartFr
      +                          omButton=YES;
  2830  003132  0E01               	movlw	1
  2831  003134  6F5E               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2832                           
  2833                           ;sm_Main_MC50.c: 136:                 var_sys.StateMotor=InOpenFull;
  2834  003136  0E01               	movlw	1
  2835  003138  6F55               	movwf	_var_sys& (0+255),b	;volatile
  2836                           
  2837                           ;sm_Main_MC50.c: 137:             }
  2838  00313A  0012               	return	
  2839  00313C                     l25531:
  2840  00313C  0101               	movlb	1	; () banked
  2841  00313E  055E               	decf	(_var_sys+9)& (0+255),w,b	;volatile
  2842  003140  A4D8               	btfss	status,2,c
  2843  003142  D005               	goto	l25535
  2844                           
  2845                           ; BSR set to: 1
  2846                           ;sm_Main_MC50.c: 139:             {;sm_Main_MC50.c: 140:                 var_sys.StartFr
      +                          omButton=NO;
  2847  003144  0E00               	movlw	0
  2848  003146  6F5E               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2849                           
  2850                           ;sm_Main_MC50.c: 141:                 var_sys.StateMotor = Stopped;
  2851  003148  0E00               	movlw	0
  2852  00314A  6F55               	movwf	_var_sys& (0+255),b	;volatile
  2853                           
  2854                           ;sm_Main_MC50.c: 142:             }
  2855  00314C  0012               	return	
  2856  00314E                     l25535:
  2857                           
  2858                           ; BSR set to: 1
  2859  00314E  0E06               	movlw	6
  2860  003150  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2861  003152  B4D8               	btfsc	status,2,c
  2862  003154  D004               	goto	u32880
  2863                           
  2864                           ; BSR set to: 1
  2865  003156  0E05               	movlw	5
  2866  003158  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2867  00315A  A4D8               	btfss	status,2,c
  2868  00315C  D015               	goto	l25549
  2869  00315E                     u32880:
  2870                           
  2871                           ; BSR set to: 1
  2872  00315E  0E63               	movlw	99
  2873  003160  6444               	cpfsgt	(_rfCMD+9)^0,c	;volatile
  2874  003162  D012               	goto	l25549
  2875                           
  2876                           ; BSR set to: 1
  2877                           ;sm_Main_MC50.c: 144:             {;sm_Main_MC50.c: 145:                 load_New_Menu(S
      +                          _Menu);
  2878  003164  0E0C               	movlw	12
  2879  003166  EC91  F021         	call	_load_New_Menu
  2880                           
  2881                           ;sm_Main_MC50.c: 146:                 sm_send_event(&main_stateMachine, ev_goto_MenuConf
      +                          ig);
  2882  00316A  0EF1               	movlw	low _main_stateMachine
  2883  00316C  6E12               	movwf	sm_send_event@psm^0,c
  2884  00316E  0E01               	movlw	high _main_stateMachine
  2885  003170  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2886  003172  0E00               	movlw	0
  2887  003174  6E15               	movwf	(sm_send_event@event+1)^0,c
  2888  003176  0E06               	movlw	6
  2889  003178  6E14               	movwf	sm_send_event@event^0,c
  2890  00317A  ECE8  F045         	call	_sm_send_event	;wreg free
  2891                           
  2892                           ;sm_Main_MC50.c: 147:                 var_sys.ProgrammingDistanceIs=rfCMD.currentType;
  2893  00317E  C03B  F190         	movff	_rfCMD,_var_sys+59	;volatile
  2894                           
  2895                           ;sm_Main_MC50.c: 148:                 rfCMD.processed=1;
  2896  003182  0E01               	movlw	1
  2897  003184  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  2898                           
  2899                           ;sm_Main_MC50.c: 149:             }
  2900  003186  0012               	return	
  2901  003188                     l25549:
  2902                           
  2903                           ; BSR set to: 1
  2904  003188  0100               	movlb	0	; () banked
  2905  00318A  BF9C               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2906  00318C  D005               	goto	u32900
  2907  00318E  519C               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2908  003190  E112               	bnz	l3105
  2909  003192  059B               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2910  003194  B0D8               	btfsc	status,0,c
  2911  003196  0012               	return	
  2912  003198                     u32900:
  2913                           
  2914                           ; BSR set to: 0
  2915                           ;sm_Main_MC50.c: 151:             {;sm_Main_MC50.c: 152:                 if(var_sys.FimC
      +                          urso_CloseIsEnabled == YES)
  2916  003198  0101               	movlb	1	; () banked
  2917  00319A  0558               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  2918  00319C  A4D8               	btfss	status,2,c
  2919  00319E  D006               	goto	l25555
  2920                           
  2921                           ; BSR set to: 1
  2922                           ;sm_Main_MC50.c: 154:                     {;sm_Main_MC50.c: 156:                        
      +                           SetSegmentValueMain(dF,dC);
  2923  0031A0  0E0C               	movlw	12
  2924  0031A2  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2925  0031A4  0E0F               	movlw	15
  2926  0031A6  ECA9  F04C         	call	_SetSegmentValueMain
  2927                           
  2928                           ;sm_Main_MC50.c: 157:                     }
  2929  0031AA  0012               	return	
  2930  0031AC                     l25555:
  2931                           
  2932                           ; BSR set to: 1
  2933                           ;sm_Main_MC50.c: 160:                 SetSegmentValueMain(dMinus,dMinus);
  2934  0031AC  0E18               	movlw	24
  2935  0031AE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2936  0031B0  0E18               	movlw	24
  2937  0031B2  ECA9  F04C         	call	_SetSegmentValueMain
  2938  0031B6                     l3105:
  2939                           
  2940                           ; BSR set to: 0
  2941  0031B6  0012               	return	
  2942  0031B8                     l25557:
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;sm_Main_MC50.c: 167:         {;sm_Main_MC50.c: 168:             sm_execute_menuConfigur
      +                          ation(&menuConfiguration_stateMachine);
  2946  0031B8  0EBD               	movlw	low _menuConfiguration_stateMachine
  2947  0031BA  6FE9               	movwf	sm_execute_menuConfiguration@psm& (0+255),b
  2948  0031BC  0E02               	movlw	high _menuConfiguration_stateMachine
  2949  0031BE  6FEA               	movwf	(sm_execute_menuConfiguration@psm+1)& (0+255),b
  2950  0031C0  ECA1  F00C         	call	_sm_execute_menuConfiguration	;wreg free
  2951                           
  2952                           ;sm_Main_MC50.c: 169:         };sm_Main_MC50.c: 170:         break;
  2953  0031C4  0012               	return	
  2954  0031C6                     l25559:
  2955                           
  2956                           ; BSR set to: 0
  2957                           ;sm_Main_MC50.c: 172:         {;sm_Main_MC50.c: 175:             aux_in_auto_close = NO;
  2958  0031C6  0E00               	movlw	0
  2959  0031C8  0101               	movlb	1	; () banked
  2960  0031CA  6F4F               	movwf	_aux_in_auto_close& (0+255),b
  2961                           
  2962                           ; BSR set to: 1
  2963                           ;sm_Main_MC50.c: 176:             if ( controlGate_stateMachine.current_state == st_Open
      +                          ed )
  2964  0031CC  0E04               	movlw	4
  2965  0031CE  19E6               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2966  0031D0  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2967  0031D2  A4D8               	btfss	status,2,c
  2968  0031D4  D00F               	goto	l3128
  2969                           
  2970                           ; BSR set to: 1
  2971                           ;sm_Main_MC50.c: 177:             {;sm_Main_MC50.c: 179:                 if ( var_sys_NV
      +                          M.operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES )
  2972  0031D6  05B2               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2973  0031D8  A4D8               	btfss	status,2,c
  2974  0031DA  D006               	goto	l25569
  2975                           
  2976                           ; BSR set to: 1
  2977  0031DC  05A5               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  2978  0031DE  A4D8               	btfss	status,2,c
  2979  0031E0  D003               	goto	l25569
  2980  0031E2                     u32940:
  2981                           
  2982                           ; BSR set to: 1
  2983                           ;sm_Main_MC50.c: 180:                 {;sm_Main_MC50.c: 181:                     aux_in_
      +                          auto_close = YES;
  2984  0031E2  0E01               	movlw	1
  2985  0031E4  6F4F               	movwf	_aux_in_auto_close& (0+255),b
  2986                           
  2987                           ;sm_Main_MC50.c: 182:                 }
  2988  0031E6  D006               	goto	l3128
  2989  0031E8                     l25569:
  2990                           
  2991                           ; BSR set to: 1
  2992  0031E8  05B2               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2993  0031EA  B4D8               	btfsc	status,2,c
  2994  0031EC  D003               	goto	l3128
  2995                           
  2996                           ; BSR set to: 1
  2997  0031EE  5178               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2998  0031F0  A4D8               	btfss	status,2,c
  2999  0031F2  D7F7               	goto	u32940
  3000  0031F4                     l3128:
  3001                           
  3002                           ; BSR set to: 1
  3003                           ;sm_Main_MC50.c: 193:             if(var_sys.StateMotor==Stopped && ( (controlGate_state
      +                          Machine.current_state==st_Opened && aux_in_auto_close==NO) || controlGate_stateMachine.c
      +                          urrent_state==st_Closed || controlGate_stateMachine.current_state==st_Idle ) )
  3004                           
  3005                           ; BSR set to: 1
  3006  0031F4  5155               	movf	_var_sys& (0+255),w,b	;volatile
  3007  0031F6  A4D8               	btfss	status,2,c
  3008  0031F8  D06B               	goto	l3142
  3009                           
  3010                           ; BSR set to: 1
  3011  0031FA  0E04               	movlw	4
  3012  0031FC  19E6               	xorwf	_controlGate_stateMachine& (0+255),w,b
  3013  0031FE  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  3014  003200  A4D8               	btfss	status,2,c
  3015  003202  D003               	goto	u32990
  3016                           
  3017                           ; BSR set to: 1
  3018  003204  514F               	movf	_aux_in_auto_close& (0+255),w,b
  3019  003206  B4D8               	btfsc	status,2,c
  3020  003208  D008               	goto	u33010
  3021  00320A                     u32990:
  3022                           
  3023                           ; BSR set to: 1
  3024  00320A  05E6               	decf	_controlGate_stateMachine& (0+255),w,b
  3025  00320C  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  3026  00320E  B4D8               	btfsc	status,2,c
  3027  003210  D004               	goto	u33010
  3028                           
  3029                           ; BSR set to: 1
  3030  003212  51E6               	movf	_controlGate_stateMachine& (0+255),w,b
  3031  003214  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  3032  003216  A4D8               	btfss	status,2,c
  3033  003218  D05B               	goto	l3142
  3034  00321A                     u33010:
  3035                           
  3036                           ; BSR set to: 1
  3037                           ;sm_Main_MC50.c: 194:             {;sm_Main_MC50.c: 195:                 if (button_stru
      +                          ct.current==0x27 && button_struct.timer>((1000/50)*5))
  3038  00321A  0E27               	movlw	39
  3039  00321C  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3040  00321E  A4D8               	btfss	status,2,c
  3041  003220  D015               	goto	l25597
  3042                           
  3043                           ; BSR set to: 1
  3044  003222  0E64               	movlw	100
  3045  003224  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  3046  003226  D012               	goto	l25597
  3047                           
  3048                           ; BSR set to: 1
  3049                           ;sm_Main_MC50.c: 196:                 {;sm_Main_MC50.c: 197:                     load_Ne
      +                          w_Menu(E_Menu);
  3050  003228  0E01               	movlw	1
  3051  00322A  EC91  F021         	call	_load_New_Menu
  3052  00322E                     l25591:
  3053                           
  3054                           ;sm_Main_MC50.c: 198:                     sm_send_event(&main_stateMachine, ev_goto_Menu
      +                          Config);
  3055  00322E  0EF1               	movlw	low _main_stateMachine
  3056  003230  6E12               	movwf	sm_send_event@psm^0,c
  3057  003232  0E01               	movlw	high _main_stateMachine
  3058  003234  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3059  003236  0E00               	movlw	0
  3060  003238  6E15               	movwf	(sm_send_event@event+1)^0,c
  3061  00323A  0E06               	movlw	6
  3062  00323C  6E14               	movwf	sm_send_event@event^0,c
  3063  00323E  ECE8  F045         	call	_sm_send_event	;wreg free
  3064                           
  3065                           ;sm_Main_MC50.c: 199:                     button_struct.processed=1;
  3066  003242  0E01               	movlw	1
  3067  003244  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3068                           
  3069                           ;sm_Main_MC50.c: 200:                     temp=0;
  3070  003246  0E00               	movlw	0
  3071  003248  0100               	movlb	0	; () banked
  3072  00324A  D038               	goto	L4
  3073  00324C                     l25597:
  3074                           
  3075                           ; BSR set to: 1
  3076  00324C  0E27               	movlw	39
  3077  00324E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3078  003250  A4D8               	btfss	status,2,c
  3079  003252  D00A               	goto	l25605
  3080                           
  3081                           ; BSR set to: 1
  3082  003254  0E14               	movlw	20
  3083  003256  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  3084  003258  D007               	goto	l25605
  3085                           
  3086                           ; BSR set to: 1
  3087                           ;sm_Main_MC50.c: 203:                 {;sm_Main_MC50.c: 205:                     SetSegm
      +                          entValueMain(dP,d0);
  3088  00325A  0E00               	movlw	0
  3089  00325C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3090  00325E  0E10               	movlw	16
  3091  003260  ECA9  F04C         	call	_SetSegmentValueMain
  3092                           
  3093                           ; BSR set to: 0
  3094                           ;sm_Main_MC50.c: 206:                     temp=1;
  3095  003264  0E01               	movlw	1
  3096  003266  D02A               	goto	L4
  3097  003268                     l25605:
  3098                           
  3099                           ; BSR set to: 1
  3100  003268  0100               	movlb	0	; () banked
  3101  00326A  056F               	decf	_temp& (0+255),w,b
  3102  00326C  A4D8               	btfss	status,2,c
  3103  00326E  D00E               	goto	l25619
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;sm_Main_MC50.c: 209:                 {;sm_Main_MC50.c: 210:                     load_Ne
      +                          w_Menu(P_Menu);
  3107  003270  0E00               	movlw	0
  3108  003272  EC91  F021         	call	_load_New_Menu
  3109                           
  3110                           ;sm_Main_MC50.c: 212:                     button_struct.processed=1;
  3111  003276  0E01               	movlw	1
  3112  003278  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3113                           
  3114                           ;sm_Main_MC50.c: 213:                     temp=0;
  3115  00327A  0E00               	movlw	0
  3116  00327C  0100               	movlb	0	; () banked
  3117  00327E  6F6F               	movwf	_temp& (0+255),b
  3118                           
  3119                           ; BSR set to: 0
  3120                           ;sm_Main_MC50.c: 214:                     main_stateMachine.current_state = st_MenuConfi
      +                          guration;
  3121  003280  0E00               	movlw	0
  3122  003282  0101               	movlb	1	; () banked
  3123  003284  6FF2               	movwf	(_main_stateMachine+1)& (0+255),b
  3124  003286  0E01               	movlw	1
  3125  003288  6FF1               	movwf	_main_stateMachine& (0+255),b
  3126  00328A  0012               	return	
  3127  00328C                     l25619:
  3128                           
  3129                           ; BSR set to: 0
  3130  00328C  0E07               	movlw	7
  3131  00328E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3132  003290  A4D8               	btfss	status,2,c
  3133  003292  D007               	goto	l25631
  3134                           
  3135                           ; BSR set to: 0
  3136  003294  0E78               	movlw	120
  3137  003296  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  3138  003298  D004               	goto	l25631
  3139                           
  3140                           ; BSR set to: 0
  3141                           ;sm_Main_MC50.c: 218:             {;sm_Main_MC50.c: 220:                 load_New_Menu(D
      +                          el_Menu);
  3142  00329A  0E0D               	movlw	13
  3143  00329C  EC91  F021         	call	_load_New_Menu
  3144  0032A0  D7C6               	goto	l25591
  3145  0032A2                     l25631:
  3146                           
  3147                           ; BSR set to: 0
  3148  0032A2  0E07               	movlw	7
  3149  0032A4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3150  0032A6  A4D8               	btfss	status,2,c
  3151  0032A8  D00B               	goto	l25639
  3152                           
  3153                           ; BSR set to: 0
  3154  0032AA  0E14               	movlw	20
  3155  0032AC  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  3156  0032AE  D008               	goto	l25639
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;sm_Main_MC50.c: 226:             {;sm_Main_MC50.c: 228:                 SetSegmentValue
      +                          Main(d5,dU);
  3160  0032B0  0E13               	movlw	19
  3161  0032B2  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3162  0032B4  0E05               	movlw	5
  3163  0032B6  ECA9  F04C         	call	_SetSegmentValueMain
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;sm_Main_MC50.c: 229:                 temp=2;
  3167  0032BA  0E02               	movlw	2
  3168  0032BC                     L4:
  3169  0032BC  6F6F               	movwf	_temp& (0+255),b
  3170                           
  3171                           ;sm_Main_MC50.c: 230:             }
  3172  0032BE  D008               	goto	l3142
  3173  0032C0                     l25639:
  3174                           
  3175                           ; BSR set to: 0
  3176  0032C0  0E02               	movlw	2
  3177  0032C2  196F               	xorwf	_temp& (0+255),w,b
  3178  0032C4  A4D8               	btfss	status,2,c
  3179  0032C6  D004               	goto	l3142
  3180                           
  3181                           ; BSR set to: 0
  3182                           ;sm_Main_MC50.c: 232:             {;sm_Main_MC50.c: 233:                 load_New_Menu(S
      +                          _Menu);
  3183  0032C8  0E0C               	movlw	12
  3184  0032CA  EC91  F021         	call	_load_New_Menu
  3185  0032CE  D6D5               	goto	l25465
  3186  0032D0                     l3142:
  3187                           
  3188                           ;sm_Main_MC50.c: 243:             if( ts_system.timeSinalizationDigit<=0 && (button_stru
      +                          ct.current!=0x27 && button_struct.current!=0x07) )
  3189                           
  3190                           ; BSR set to: 0
  3191  0032D0  0100               	movlb	0	; () banked
  3192  0032D2  BF9C               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  3193  0032D4  D005               	goto	u33120
  3194  0032D6  519C               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  3195  0032D8  E102               	bnz	u33121
  3196  0032DA  059B               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  3197  0032DC  B0D8               	btfsc	status,0,c
  3198  0032DE                     u33121:
  3199  0032DE  0012               	return	
  3200  0032E0                     u33120:
  3201                           
  3202                           ; BSR set to: 0
  3203  0032E0  0E27               	movlw	39
  3204  0032E2  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3205  0032E4  B4D8               	btfsc	status,2,c
  3206  0032E6  0012               	return	
  3207                           
  3208                           ; BSR set to: 0
  3209  0032E8  0E07               	movlw	7
  3210  0032EA  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3211  0032EC  B4D8               	btfsc	status,2,c
  3212  0032EE  0012               	return	
  3213                           
  3214                           ; BSR set to: 0
  3215                           ;sm_Main_MC50.c: 244:             {;sm_Main_MC50.c: 245:                 if(var_sys.Stat
      +                          eMotor==InClose )
  3216  0032F0  0E03               	movlw	3
  3217  0032F2  0101               	movlb	1	; () banked
  3218  0032F4  1955               	xorwf	_var_sys& (0+255),w,b	;volatile
  3219  0032F6  A4D8               	btfss	status,2,c
  3220  0032F8  D012               	goto	l25665
  3221                           
  3222                           ; BSR set to: 1
  3223                           ;sm_Main_MC50.c: 246:                 {;sm_Main_MC50.c: 248:                    SetSegme
      +                          ntValueIntermitentMain(dC,dL,( 500/50));
  3224  0032FA  0E12               	movlw	18
  3225  0032FC  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3226  0032FE  0E00               	movlw	0
  3227  003300  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3228  003302  0E0A               	movlw	10
  3229  003304  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3230  003306  0E0C               	movlw	12
  3231  003308  EC4F  F04D         	call	_SetSegmentValueIntermitentMain
  3232  00330C                     l25661:
  3233                           
  3234                           ;sm_Main_MC50.c: 249:                    ts_system.timeSinalizationDigit=( 200/50);
  3235  00330C  0E00               	movlw	0
  3236  00330E  0100               	movlb	0	; () banked
  3237  003310  6F9C               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3238  003312  0E04               	movlw	4
  3239  003314  6F9B               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3240                           
  3241                           ; BSR set to: 0
  3242                           ;sm_Main_MC50.c: 251:                     var_sys.showAP = NO;
  3243  003316  0E00               	movlw	0
  3244  003318  0101               	movlb	1	; () banked
  3245  00331A  6FA4               	movwf	(_var_sys+79)& (0+255),b	;volatile
  3246                           
  3247                           ;sm_Main_MC50.c: 252:                 }
  3248  00331C  0012               	return	
  3249  00331E                     l25665:
  3250                           
  3251                           ; BSR set to: 1
  3252  00331E  0E02               	movlw	2
  3253  003320  1955               	xorwf	_var_sys& (0+255),w,b	;volatile
  3254  003322  B4D8               	btfsc	status,2,c
  3255  003324  D003               	goto	u33170
  3256                           
  3257                           ; BSR set to: 1
  3258  003326  0555               	decf	_var_sys& (0+255),w,b	;volatile
  3259  003328  A4D8               	btfss	status,2,c
  3260  00332A  D00A               	goto	l25675
  3261  00332C                     u33170:
  3262                           
  3263                           ; BSR set to: 1
  3264                           ;sm_Main_MC50.c: 254:                 {;sm_Main_MC50.c: 256:                     SetSegm
      +                          entValueIntermitentMain(d0,dP,( 500/50));
  3265  00332C  0E10               	movlw	16
  3266  00332E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3267  003330  0E00               	movlw	0
  3268  003332  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3269  003334  0E0A               	movlw	10
  3270  003336  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3271  003338  0E00               	movlw	0
  3272  00333A  EC4F  F04D         	call	_SetSegmentValueIntermitentMain
  3273  00333E  D7E6               	goto	l25661
  3274  003340                     l25675:
  3275                           
  3276                           ; BSR set to: 1
  3277  003340  5155               	movf	_var_sys& (0+255),w,b	;volatile
  3278  003342  A4D8               	btfss	status,2,c
  3279  003344  D00F               	goto	l25681
  3280                           
  3281                           ; BSR set to: 1
  3282  003346  05E6               	decf	_controlGate_stateMachine& (0+255),w,b
  3283  003348  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  3284  00334A  A4D8               	btfss	status,2,c
  3285  00334C  D00B               	goto	l25681
  3286                           
  3287                           ; BSR set to: 1
  3288                           ;sm_Main_MC50.c: 262:                 {;sm_Main_MC50.c: 263:                     sm_send
      +                          _event(&main_stateMachine, ev_goto_StandBy);
  3289  00334E  0EF1               	movlw	low _main_stateMachine
  3290  003350  6E12               	movwf	sm_send_event@psm^0,c
  3291  003352  0E01               	movlw	high _main_stateMachine
  3292  003354  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3293  003356  0E00               	movlw	0
  3294  003358  6E15               	movwf	(sm_send_event@event+1)^0,c
  3295  00335A  0E07               	movlw	7
  3296  00335C  6E14               	movwf	sm_send_event@event^0,c
  3297  00335E  ECE8  F045         	call	_sm_send_event	;wreg free
  3298                           
  3299                           ;sm_Main_MC50.c: 264:                 }
  3300  003362  0012               	return	
  3301  003364                     l25681:
  3302                           
  3303                           ; BSR set to: 1
  3304  003364  5155               	movf	_var_sys& (0+255),w,b	;volatile
  3305  003366  A4D8               	btfss	status,2,c
  3306  003368  D06E               	goto	l25731
  3307                           
  3308                           ; BSR set to: 1
  3309  00336A  0E04               	movlw	4
  3310  00336C  19E6               	xorwf	_controlGate_stateMachine& (0+255),w,b
  3311  00336E  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  3312  003370  A4D8               	btfss	status,2,c
  3313  003372  D069               	goto	l25731
  3314                           
  3315                           ; BSR set to: 1
  3316                           ;sm_Main_MC50.c: 266:                 {;sm_Main_MC50.c: 268:                     if
  3317  003374  05B2               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3318  003376  B4D8               	btfsc	status,2,c
  3319  003378  D00A               	goto	u33250
  3320                           
  3321                           ; BSR set to: 1
  3322  00337A  5178               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3323  00337C  B4D8               	btfsc	status,2,c
  3324  00337E  D007               	goto	u33250
  3325                           
  3326                           ; BSR set to: 1
  3327  003380  0560               	decf	(_var_sys+11)& (0+255),w,b	;volatile
  3328  003382  B4D8               	btfsc	status,2,c
  3329  003384  D011               	goto	u33290
  3330                           
  3331                           ; BSR set to: 1
  3332  003386  0E03               	movlw	3
  3333  003388  1960               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3334  00338A  B4D8               	btfsc	status,2,c
  3335  00338C  D00D               	goto	u33290
  3336  00338E                     u33250:
  3337                           
  3338                           ; BSR set to: 1
  3339  00338E  05B2               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3340  003390  A4D8               	btfss	status,2,c
  3341  003392  D027               	goto	l25709
  3342                           
  3343                           ; BSR set to: 1
  3344  003394  05A5               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3345  003396  A4D8               	btfss	status,2,c
  3346  003398  D024               	goto	l25709
  3347                           
  3348                           ; BSR set to: 1
  3349  00339A  0E02               	movlw	2
  3350  00339C  1960               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3351  00339E  B4D8               	btfsc	status,2,c
  3352  0033A0  D020               	goto	l25709
  3353                           
  3354                           ; BSR set to: 1
  3355  0033A2  5178               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3356  0033A4  B4D8               	btfsc	status,2,c
  3357  0033A6  D01D               	goto	l25709
  3358  0033A8                     u33290:
  3359                           
  3360                           ; BSR set to: 1
  3361                           ;sm_Main_MC50.c: 273:                     {;sm_Main_MC50.c: 274:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3362  0033A8  0E00               	movlw	0
  3363  0033AA  0100               	movlb	0	; () banked
  3364  0033AC  6F9C               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3365  0033AE  0E0A               	movlw	10
  3366  0033B0  6F9B               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;sm_Main_MC50.c: 279:                         if ( var_sys.showAP == YES )
  3370  0033B2  0101               	movlb	1	; () banked
  3371  0033B4  05A4               	decf	(_var_sys+79)& (0+255),w,b	;volatile
  3372  0033B6  A4D8               	btfss	status,2,c
  3373  0033B8  D00A               	goto	l25707
  3374                           
  3375                           ; BSR set to: 1
  3376                           ;sm_Main_MC50.c: 280:                         {;sm_Main_MC50.c: 281:                    
      +                                   SetSegmentValueIntermitentMain(dA,dP,( 500/50));
  3377  0033BA  0E10               	movlw	16
  3378  0033BC  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3379  0033BE  0E00               	movlw	0
  3380  0033C0  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3381  0033C2  0E0A               	movlw	10
  3382  0033C4  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3383  0033C6  0E0A               	movlw	10
  3384  0033C8  EC4F  F04D         	call	_SetSegmentValueIntermitentMain
  3385                           
  3386                           ;sm_Main_MC50.c: 282:                         }
  3387  0033CC  0012               	return	
  3388  0033CE                     l25707:
  3389                           
  3390                           ; BSR set to: 1
  3391                           ;sm_Main_MC50.c: 284:                         {;sm_Main_MC50.c: 285:                    
      +                                   SetSegmentValueIntermitentMain(dA,dF,( 500/50));
  3392  0033CE  0E0F               	movlw	15
  3393  0033D0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3394  0033D2  0E00               	movlw	0
  3395  0033D4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3396  0033D6  0E0A               	movlw	10
  3397  0033D8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3398  0033DA  0E0A               	movlw	10
  3399  0033DC  EC4F  F04D         	call	_SetSegmentValueIntermitentMain
  3400  0033E0  0012               	return	
  3401  0033E2                     l25709:
  3402                           
  3403                           ; BSR set to: 1
  3404  0033E2  05B2               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3405  0033E4  B4D8               	btfsc	status,2,c
  3406  0033E6  D007               	goto	u33330
  3407                           
  3408                           ; BSR set to: 1
  3409  0033E8  5178               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3410  0033EA  B4D8               	btfsc	status,2,c
  3411  0033EC  D004               	goto	u33330
  3412                           
  3413                           ; BSR set to: 1
  3414  0033EE  0E02               	movlw	2
  3415  0033F0  1960               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3416  0033F2  B4D8               	btfsc	status,2,c
  3417  0033F4  D00A               	goto	u33360
  3418  0033F6                     u33330:
  3419                           
  3420                           ; BSR set to: 1
  3421  0033F6  05B2               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3422  0033F8  A4D8               	btfss	status,2,c
  3423  0033FA  D016               	goto	l25725
  3424                           
  3425                           ; BSR set to: 1
  3426  0033FC  05A5               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3427  0033FE  A4D8               	btfss	status,2,c
  3428  003400  D013               	goto	l25725
  3429                           
  3430                           ; BSR set to: 1
  3431  003402  0E02               	movlw	2
  3432  003404  1960               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3433  003406  A4D8               	btfss	status,2,c
  3434  003408  D00F               	goto	l25725
  3435  00340A                     u33360:
  3436                           
  3437                           ; BSR set to: 1
  3438                           ;sm_Main_MC50.c: 294:                     {;sm_Main_MC50.c: 295:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3439  00340A  0E00               	movlw	0
  3440  00340C  0100               	movlb	0	; () banked
  3441  00340E  6F9C               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3442  003410  0E0A               	movlw	10
  3443  003412  6F9B               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;sm_Main_MC50.c: 297:                         SetSegmentValueIntermitentMain(dA,dP,( 500
      +                          /50));
  3447  003414  0E10               	movlw	16
  3448  003416  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3449  003418  0E00               	movlw	0
  3450  00341A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3451  00341C  0E0A               	movlw	10
  3452  00341E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3453  003420  0E0A               	movlw	10
  3454  003422  EC4F  F04D         	call	_SetSegmentValueIntermitentMain
  3455                           
  3456                           ;sm_Main_MC50.c: 298:                     }
  3457  003426  0012               	return	
  3458  003428                     l25725:
  3459                           
  3460                           ; BSR set to: 1
  3461  003428  0559               	decf	(_var_sys+4)& (0+255),w,b	;volatile
  3462  00342A  A4D8               	btfss	status,2,c
  3463  00342C  D006               	goto	l25729
  3464                           
  3465                           ; BSR set to: 1
  3466                           ;sm_Main_MC50.c: 301:                     {;sm_Main_MC50.c: 303:                        
      +                           SetSegmentValueMain(dF,d0);
  3467  00342E  0E00               	movlw	0
  3468  003430  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3469  003432  0E0F               	movlw	15
  3470  003434  ECA9  F04C         	call	_SetSegmentValueMain
  3471                           
  3472                           ;sm_Main_MC50.c: 304:                     }
  3473  003438  0012               	return	
  3474  00343A                     l25729:
  3475                           
  3476                           ; BSR set to: 1
  3477                           ;sm_Main_MC50.c: 306:                     {;sm_Main_MC50.c: 307:                       S
      +                          etSegmentValueMain(dMinus,dMinus);
  3478  00343A  0E18               	movlw	24
  3479  00343C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3480  00343E  0E18               	movlw	24
  3481  003440  ECA9  F04C         	call	_SetSegmentValueMain
  3482  003444  0012               	return	
  3483  003446                     l25731:
  3484                           
  3485                           ; BSR set to: 1
  3486                           ;sm_Main_MC50.c: 311:                 {;sm_Main_MC50.c: 313:                     SetSegm
      +                          entValueMain(dMinus,dMinus);
  3487  003446  0E18               	movlw	24
  3488  003448  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3489  00344A  0E18               	movlw	24
  3490  00344C  ECA9  F04C         	call	_SetSegmentValueMain
  3491  003450  0012               	return	
  3492  003452                     l25735:
  3493  003452  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  3494  003456  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  3495  00345A  50DF               	movf	indf2,w,c
  3496  00345C  0100               	movlb	0	; () banked
  3497  00345E  6FEF               	movwf	??_sm_execute_main& (0+255),b
  3498  003460  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  3499                           
  3500                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3501                           ; Switch size 1, requested type "simple"
  3502                           ; Number of cases is 1, Range of values is 0 to 0
  3503                           ; switch strategies available:
  3504                           ; Name         Instructions Cycles
  3505                           ; simple_byte            4     3 (average)
  3506                           ;	Chosen strategy is simple_byte
  3507  003462  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  3508  003464  0A00               	xorlw	0	; case 0
  3509  003466  A4D8               	btfss	status,2,c
  3510  003468  0012               	return	
  3511                           
  3512                           ; BSR set to: 0
  3513                           ; Switch size 1, requested type "simple"
  3514                           ; Number of cases is 3, Range of values is 0 to 2
  3515                           ; switch strategies available:
  3516                           ; Name         Instructions Cycles
  3517                           ; simple_byte           10     6 (average)
  3518                           ;	Chosen strategy is simple_byte
  3519  00346A  51EF               	movf	??_sm_execute_main& (0+255),w,b
  3520  00346C  0A00               	xorlw	0	; case 0
  3521  00346E  B4D8               	btfsc	status,2,c
  3522  003470  D5FA               	goto	l25459
  3523  003472  0A01               	xorlw	1	; case 1
  3524  003474  B4D8               	btfsc	status,2,c
  3525  003476  D6A0               	goto	l25557
  3526  003478  0A03               	xorlw	3	; case 2
  3527  00347A  A4D8               	btfss	status,2,c
  3528  00347C  0012               	return	
  3529  00347E  D6A3               	goto	l25559
  3530  003480                     __end_of_sm_execute_main:
  3531                           	callstack 0
  3532                           
  3533 ;; *************** function _sm_execute_menuConfiguration *****************
  3534 ;; Defined at:
  3535 ;;		line 33 in file "sm_MenuConfiguration_MC50.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  psm             2   17[BANK0 ] PTR struct .
  3538 ;;		 -> menuConfiguration_stateMachine(11), 
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;		None
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  1    wreg      void 
  3543 ;; Registers used:
  3544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3545 ;; Tracked objects:
  3546 ;;		On entry : 3F/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3550 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3552 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3553 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3554 ;;Total ram usage:        4 bytes
  3555 ;; Hardware stack levels used: 1
  3556 ;; Hardware stack levels required when called: 15
  3557 ;; This function calls:
  3558 ;;		_ClearFlag_rfCMD
  3559 ;;		_ResetDefaultMemory
  3560 ;;		_SaveNVM_VarSystem
  3561 ;;		_SetSegmentValueIntermitentMain
  3562 ;;		_SetSegmentValueMain
  3563 ;;		___lbdiv
  3564 ;;		___lldiv
  3565 ;;		___lmul
  3566 ;;		___lwdiv
  3567 ;;		_controlLearnDigit
  3568 ;;		_controlSaveRemote
  3569 ;;		_controlSelectRemote
  3570 ;;		_load_New_Menu
  3571 ;;		_setValueToEdit
  3572 ;;		_sm_send_event
  3573 ;; This function is called by:
  3574 ;;		_sm_execute_main
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578                           	psect	text2
  3579  001942                     __ptext2:
  3580                           	callstack 0
  3581  001942                     _sm_execute_menuConfiguration:
  3582                           	callstack 14
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;sm_MenuConfiguration_MC50.c: 36:     switch((sm_state_Menu_t) psm->current_state)
  3586                           
  3587                           ;incstack = 0
  3588  001942  D0A2               	goto	l23777
  3589  001944                     l23719:
  3590                           
  3591                           ; BSR set to: 0
  3592                           ;sm_MenuConfiguration_MC50.c: 39:         {;sm_MenuConfiguration_MC50.c: 40:            
      +                           if(psm->last_event==ev_ParameterIsSelected)
  3593  001944  EE20 F004          	lfsr	2,4
  3594  001948  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3595  00194A  26D9               	addwf	fsr2l,f,c
  3596  00194C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3597  00194E  22DA               	addwfc	fsr2h,f,c
  3598  001950  04DE               	decf	postinc2,w,c
  3599  001952  10DE               	iorwf	postinc2,w,c
  3600  001954  A4D8               	btfss	status,2,c
  3601  001956  D006               	goto	l23723
  3602                           
  3603                           ; BSR set to: 0
  3604                           ;sm_MenuConfiguration_MC50.c: 41:             {;sm_MenuConfiguration_MC50.c: 42:        
      +                                   psm->current_state = st_EditParameter;
  3605  001958  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3606  00195C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3607  001960  0E01               	movlw	1
  3608  001962  D04C               	goto	L9
  3609  001964                     l23723:
  3610                           
  3611                           ; BSR set to: 0
  3612  001964  EE20 F004          	lfsr	2,4
  3613  001968  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3614  00196A  26D9               	addwf	fsr2l,f,c
  3615  00196C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3616  00196E  22DA               	addwfc	fsr2h,f,c
  3617  001970  0E05               	movlw	5
  3618  001972  18DE               	xorwf	postinc2,w,c
  3619  001974  10DE               	iorwf	postinc2,w,c
  3620  001976  A4D8               	btfss	status,2,c
  3621  001978  D006               	goto	l23727
  3622                           
  3623                           ; BSR set to: 0
  3624                           ;sm_MenuConfiguration_MC50.c: 45:             {;sm_MenuConfiguration_MC50.c: 46:        
      +                                   psm->current_state = st_Counter;
  3625  00197A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3626  00197E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3627  001982  0E03               	movlw	3
  3628  001984  D03B               	goto	L9
  3629  001986                     l23727:
  3630                           
  3631                           ; BSR set to: 0
  3632  001986  EE20 F004          	lfsr	2,4
  3633  00198A  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3634  00198C  26D9               	addwf	fsr2l,f,c
  3635  00198E  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3636  001990  22DA               	addwfc	fsr2h,f,c
  3637  001992  0E08               	movlw	8
  3638  001994  18DE               	xorwf	postinc2,w,c
  3639  001996  10DE               	iorwf	postinc2,w,c
  3640  001998  A4D8               	btfss	status,2,c
  3641  00199A  D006               	goto	l23731
  3642                           
  3643                           ; BSR set to: 0
  3644                           ;sm_MenuConfiguration_MC50.c: 49:             {;sm_MenuConfiguration_MC50.c: 50:        
      +                                   psm->current_state = st_SelectRemote;
  3645  00199C  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3646  0019A0  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3647  0019A4  0E04               	movlw	4
  3648  0019A6  D02A               	goto	L9
  3649  0019A8                     l23731:
  3650                           
  3651                           ; BSR set to: 0
  3652  0019A8  EE20 F004          	lfsr	2,4
  3653  0019AC  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3654  0019AE  26D9               	addwf	fsr2l,f,c
  3655  0019B0  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3656  0019B2  22DA               	addwfc	fsr2h,f,c
  3657  0019B4  0E14               	movlw	20
  3658  0019B6  18DE               	xorwf	postinc2,w,c
  3659  0019B8  10DE               	iorwf	postinc2,w,c
  3660  0019BA  A4D8               	btfss	status,2,c
  3661  0019BC  D087               	goto	l23779
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;sm_MenuConfiguration_MC50.c: 53:             {;sm_MenuConfiguration_MC50.c: 55:        
      +                                   psm->current_state = st_LearningMode;
  3665  0019BE  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3666  0019C2  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3667  0019C6  0E06               	movlw	6
  3668  0019C8  D019               	goto	L9
  3669  0019CA                     l23735:
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;sm_MenuConfiguration_MC50.c: 65:         {;sm_MenuConfiguration_MC50.c: 66:            
      +                           if(psm->last_event==ev_ParameterIsEdited)
  3673  0019CA  EE20 F004          	lfsr	2,4
  3674  0019CE  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3675  0019D0  26D9               	addwf	fsr2l,f,c
  3676  0019D2  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3677  0019D4  22DA               	addwfc	fsr2h,f,c
  3678  0019D6  0E02               	movlw	2
  3679  0019D8  18DE               	xorwf	postinc2,w,c
  3680  0019DA  10DE               	iorwf	postinc2,w,c
  3681  0019DC  A4D8               	btfss	status,2,c
  3682  0019DE  D006               	goto	l23739
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;sm_MenuConfiguration_MC50.c: 67:             {;sm_MenuConfiguration_MC50.c: 68:        
      +                                   psm->current_state = st_SaveParameter;
  3686  0019E0  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3687  0019E4  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3688  0019E8  0E02               	movlw	2
  3689  0019EA  D008               	goto	L9
  3690  0019EC                     l23739:
  3691                           
  3692                           ; BSR set to: 0
  3693  0019EC  EE20 F004          	lfsr	2,4
  3694  0019F0  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3695  0019F2  26D9               	addwf	fsr2l,f,c
  3696  0019F4  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3697  0019F6  22DA               	addwfc	fsr2h,f,c
  3698  0019F8  0E03               	movlw	3
  3699  0019FA  D03B               	goto	L106
  3700  0019FC                     L9:
  3701  0019FC  6EDE               	movwf	postinc2,c
  3702  0019FE  0E00               	movlw	0
  3703  001A00  6EDD               	movwf	postdec2,c
  3704  001A02  D064               	goto	l23779
  3705  001A04                     l23747:
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;sm_MenuConfiguration_MC50.c: 85:         {;sm_MenuConfiguration_MC50.c: 86:            
      +                           if(psm->last_event==ev_ParameterIsSaved)
  3709  001A04  EE20 F004          	lfsr	2,4
  3710  001A08  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3711  001A0A  26D9               	addwf	fsr2l,f,c
  3712  001A0C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3713  001A0E  22DA               	addwfc	fsr2h,f,c
  3714  001A10  0E04               	movlw	4
  3715  001A12  18DE               	xorwf	postinc2,w,c
  3716  001A14  10DE               	iorwf	postinc2,w,c
  3717  001A16  A4D8               	btfss	status,2,c
  3718  001A18  D7E9               	goto	l23739
  3719  001A1A  D02F               	goto	u29090
  3720  001A1C                     l23755:
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;sm_MenuConfiguration_MC50.c: 97:         {;sm_MenuConfiguration_MC50.c: 98:            
      +                           if(psm->last_event==ev_addRemotes)
  3724  001A1C  EE20 F004          	lfsr	2,4
  3725  001A20  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3726  001A22  26D9               	addwf	fsr2l,f,c
  3727  001A24  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3728  001A26  22DA               	addwfc	fsr2h,f,c
  3729  001A28  0E08               	movlw	8
  3730  001A2A  18DE               	xorwf	postinc2,w,c
  3731  001A2C  10DE               	iorwf	postinc2,w,c
  3732  001A2E  A4D8               	btfss	status,2,c
  3733  001A30  D7DD               	goto	l23739
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;sm_MenuConfiguration_MC50.c: 99:             {;sm_MenuConfiguration_MC50.c: 100:       
      +                                    psm->current_state = st_SaveRemotes;
  3737  001A32  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3738  001A36  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3739  001A3A  0E05               	movlw	5
  3740  001A3C  D7DF               	goto	L9
  3741  001A3E                     l23763:
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;sm_MenuConfiguration_MC50.c: 109:         {;sm_MenuConfiguration_MC50.c: 110:          
      +                             if(psm->last_event==ev_NextRemote)
  3745  001A3E  EE20 F004          	lfsr	2,4
  3746  001A42  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3747  001A44  26D9               	addwf	fsr2l,f,c
  3748  001A46  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3749  001A48  22DA               	addwfc	fsr2h,f,c
  3750  001A4A  0E09               	movlw	9
  3751  001A4C  18DE               	xorwf	postinc2,w,c
  3752  001A4E  10DE               	iorwf	postinc2,w,c
  3753  001A50  A4D8               	btfss	status,2,c
  3754  001A52  D008               	goto	l23771
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;sm_MenuConfiguration_MC50.c: 111:             {;sm_MenuConfiguration_MC50.c: 112:      
      +                                     psm->current_state = st_SelectRemote;
  3758  001A54  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3759  001A58  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3760  001A5C  0E04               	movlw	4
  3761  001A5E  6EDE               	movwf	postinc2,c
  3762  001A60  0E00               	movlw	0
  3763  001A62  6EDD               	movwf	postdec2,c
  3764  001A64                     l23771:
  3765                           
  3766                           ; BSR set to: 0
  3767                           ;sm_MenuConfiguration_MC50.c: 121:         {;sm_MenuConfiguration_MC50.c: 122:          
      +                             if(psm->last_event==ev_ParameterIsSaved)
  3768  001A64  EE20 F004          	lfsr	2,4
  3769  001A68  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3770  001A6A  26D9               	addwf	fsr2l,f,c
  3771  001A6C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3772  001A6E  22DA               	addwfc	fsr2h,f,c
  3773  001A70  0E04               	movlw	4
  3774  001A72                     L106:
  3775  001A72  18DE               	xorwf	postinc2,w,c
  3776  001A74  10DE               	iorwf	postinc2,w,c
  3777  001A76  A4D8               	btfss	status,2,c
  3778  001A78  D029               	goto	l23779
  3779  001A7A                     u29090:
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;sm_MenuConfiguration_MC50.c: 123:             {;sm_MenuConfiguration_MC50.c: 124:      
      +                                     psm->current_state = st_MainMenu;
  3783  001A7A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3784  001A7E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3785  001A82  0E00               	movlw	0
  3786  001A84  D7BB               	goto	L9
  3787  001A86                     l3281:
  3788                           
  3789                           ; BSR set to: 0
  3790  001A86  D7FF               	goto	l3281
  3791  001A88                     l23777:
  3792                           
  3793                           ; BSR set to: 0
  3794  001A88  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3795  001A8C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3796  001A90  50DF               	movf	indf2,w,c
  3797  001A92  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3798  001A94  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  3799                           
  3800                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3801                           ; Switch size 1, requested type "simple"
  3802                           ; Number of cases is 1, Range of values is 0 to 0
  3803                           ; switch strategies available:
  3804                           ; Name         Instructions Cycles
  3805                           ; simple_byte            4     3 (average)
  3806                           ;	Chosen strategy is simple_byte
  3807  001A96  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  3808  001A98  0A00               	xorlw	0	; case 0
  3809  001A9A  A4D8               	btfss	status,2,c
  3810  001A9C  D7F4               	goto	l3281
  3811                           
  3812                           ; BSR set to: 0
  3813                           ; Switch size 1, requested type "simple"
  3814                           ; Number of cases is 7, Range of values is 0 to 6
  3815                           ; switch strategies available:
  3816                           ; Name         Instructions Cycles
  3817                           ; simple_byte           22    12 (average)
  3818                           ;	Chosen strategy is simple_byte
  3819  001A9E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3820  001AA0  0A00               	xorlw	0	; case 0
  3821  001AA2  B4D8               	btfsc	status,2,c
  3822  001AA4  D74F               	goto	l23719
  3823  001AA6  0A01               	xorlw	1	; case 1
  3824  001AA8  B4D8               	btfsc	status,2,c
  3825  001AAA  D78F               	goto	l23735
  3826  001AAC  0A03               	xorlw	3	; case 2
  3827  001AAE  B4D8               	btfsc	status,2,c
  3828  001AB0  D7D9               	goto	l23771
  3829  001AB2  0A01               	xorlw	1	; case 3
  3830  001AB4  B4D8               	btfsc	status,2,c
  3831  001AB6  D7A6               	goto	l23747
  3832  001AB8  0A07               	xorlw	7	; case 4
  3833  001ABA  B4D8               	btfsc	status,2,c
  3834  001ABC  D7AF               	goto	l23755
  3835  001ABE  0A01               	xorlw	1	; case 5
  3836  001AC0  B4D8               	btfsc	status,2,c
  3837  001AC2  D7BD               	goto	l23763
  3838  001AC4  0A03               	xorlw	3	; case 6
  3839  001AC6  B4D8               	btfsc	status,2,c
  3840  001AC8  D7CD               	goto	l23771
  3841  001ACA  D7DD               	goto	l3281
  3842  001ACC                     l23779:
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;sm_MenuConfiguration_MC50.c: 137:     sm_send_event(&menuConfiguration_stateMachine, ev
      +                          _NULL);
  3846  001ACC  0EBD               	movlw	low _menuConfiguration_stateMachine
  3847  001ACE  6E12               	movwf	sm_send_event@psm^0,c
  3848  001AD0  0E02               	movlw	high _menuConfiguration_stateMachine
  3849  001AD2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3850  001AD4  0E00               	movlw	0
  3851  001AD6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3852  001AD8  0E00               	movlw	0
  3853  001ADA  6E14               	movwf	sm_send_event@event^0,c
  3854  001ADC  ECE8  F045         	call	_sm_send_event	;wreg free
  3855                           
  3856                           ;sm_MenuConfiguration_MC50.c: 142:     switch((sm_state_Menu_t) psm->current_state)
  3857  001AE0  D3B9               	goto	l24091
  3858  001AE2                     l23781:
  3859                           
  3860                           ; BSR set to: 0
  3861                           ;sm_MenuConfiguration_MC50.c: 145:         {;sm_MenuConfiguration_MC50.c: 146:          
      +                             if(var_sys.ProgrammingDistanceIs==TypeProgrammingModeFull)
  3862  001AE2  0E06               	movlw	6
  3863  001AE4  0101               	movlb	1	; () banked
  3864  001AE6  1990               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3865  001AE8  A4D8               	btfss	status,2,c
  3866  001AEA  D031               	goto	l23791
  3867                           
  3868                           ; BSR set to: 1
  3869                           ;sm_MenuConfiguration_MC50.c: 147:             {;sm_MenuConfiguration_MC50.c: 148:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3870  001AEC  0E00               	movlw	0
  3871  001AEE  0100               	movlb	0	; () banked
  3872  001AF0  6F9E               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3873  001AF2  0EC8               	movlw	200
  3874  001AF4  6F9D               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3875                           
  3876                           ;sm_MenuConfiguration_MC50.c: 149:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3877  001AF6  0E01               	movlw	1
  3878  001AF8  0101               	movlb	1	; () banked
  3879  001AFA  6F95               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3880                           
  3881                           ;sm_MenuConfiguration_MC50.c: 150:                 menu_st.parameterSelected=0;
  3882  001AFC  0E00               	movlw	0
  3883  001AFE  6F17               	movwf	(_menu_st+23)& (0+255),b
  3884                           
  3885                           ; BSR set to: 1
  3886                           ;sm_MenuConfiguration_MC50.c: 151:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3887  001B00  C117  F0DD         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3888  001B04  5115               	movf	(_menu_st+21)& (0+255),w,b
  3889  001B06  ECF1  F014         	call	_setValueToEdit
  3890  001B0A  0900               	iorlw	0
  3891  001B0C  B4D8               	btfsc	status,2,c
  3892  001B0E  0012               	return	
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;sm_MenuConfiguration_MC50.c: 153:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3896  001B10  0EBD               	movlw	low _menuConfiguration_stateMachine
  3897  001B12  6E12               	movwf	sm_send_event@psm^0,c
  3898  001B14  0E02               	movlw	high _menuConfiguration_stateMachine
  3899  001B16  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3900  001B18  0E00               	movlw	0
  3901  001B1A  6E15               	movwf	(sm_send_event@event+1)^0,c
  3902  001B1C  0E08               	movlw	8
  3903  001B1E  6E14               	movwf	sm_send_event@event^0,c
  3904  001B20  ECE8  F045         	call	_sm_send_event	;wreg free
  3905                           
  3906                           ;sm_MenuConfiguration_MC50.c: 154:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3907  001B24  0E0A               	movlw	10
  3908  001B26  6E10               	movwf	___lbdiv@divisor^0,c
  3909  001B28  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3910  001B2A  ECC7  F049         	call	___lbdiv
  3911  001B2E  0DF6               	mullw	246
  3912  001B30  50F3               	movf	243,w,c
  3913  001B32  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3914  001B34  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3915  001B36  0E00               	movlw	0
  3916  001B38  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3917  001B3A  0E14               	movlw	20
  3918  001B3C  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3919  001B3E  0E0A               	movlw	10
  3920  001B40  6E10               	movwf	___lbdiv@divisor^0,c
  3921  001B42  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3922  001B44  ECC7  F049         	call	___lbdiv
  3923  001B48  EC4F  F04D         	call	_SetSegmentValueIntermitentMain
  3924  001B4C  0012               	return	
  3925  001B4E                     l23791:
  3926                           
  3927                           ; BSR set to: 1
  3928  001B4E  0E05               	movlw	5
  3929  001B50  1990               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3930  001B52  A4D8               	btfss	status,2,c
  3931  001B54  D031               	goto	l23801
  3932                           
  3933                           ; BSR set to: 1
  3934                           ;sm_MenuConfiguration_MC50.c: 158:             {;sm_MenuConfiguration_MC50.c: 159:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3935  001B56  0E00               	movlw	0
  3936  001B58  0100               	movlb	0	; () banked
  3937  001B5A  6F9E               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3938  001B5C  0EC8               	movlw	200
  3939  001B5E  6F9D               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3940                           
  3941                           ;sm_MenuConfiguration_MC50.c: 160:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3942  001B60  0E01               	movlw	1
  3943  001B62  0101               	movlb	1	; () banked
  3944  001B64  6F95               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3945                           
  3946                           ;sm_MenuConfiguration_MC50.c: 161:                 menu_st.parameterSelected=1;
  3947  001B66  0E01               	movlw	1
  3948  001B68  6F17               	movwf	(_menu_st+23)& (0+255),b
  3949                           
  3950                           ; BSR set to: 1
  3951                           ;sm_MenuConfiguration_MC50.c: 162:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3952  001B6A  C117  F0DD         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3953  001B6E  5115               	movf	(_menu_st+21)& (0+255),w,b
  3954  001B70  ECF1  F014         	call	_setValueToEdit
  3955  001B74  0900               	iorlw	0
  3956  001B76  B4D8               	btfsc	status,2,c
  3957  001B78  0012               	return	
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;sm_MenuConfiguration_MC50.c: 164:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3961  001B7A  0EBD               	movlw	low _menuConfiguration_stateMachine
  3962  001B7C  6E12               	movwf	sm_send_event@psm^0,c
  3963  001B7E  0E02               	movlw	high _menuConfiguration_stateMachine
  3964  001B80  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3965  001B82  0E00               	movlw	0
  3966  001B84  6E15               	movwf	(sm_send_event@event+1)^0,c
  3967  001B86  0E08               	movlw	8
  3968  001B88  6E14               	movwf	sm_send_event@event^0,c
  3969  001B8A  ECE8  F045         	call	_sm_send_event	;wreg free
  3970                           
  3971                           ;sm_MenuConfiguration_MC50.c: 165:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3972  001B8E  0E0A               	movlw	10
  3973  001B90  6E10               	movwf	___lbdiv@divisor^0,c
  3974  001B92  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3975  001B94  ECC7  F049         	call	___lbdiv
  3976  001B98  0DF6               	mullw	246
  3977  001B9A  50F3               	movf	243,w,c
  3978  001B9C  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3979  001B9E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3980  001BA0  0E00               	movlw	0
  3981  001BA2  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3982  001BA4  0E14               	movlw	20
  3983  001BA6  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3984  001BA8  0E0A               	movlw	10
  3985  001BAA  6E10               	movwf	___lbdiv@divisor^0,c
  3986  001BAC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3987  001BAE  ECC7  F049         	call	___lbdiv
  3988  001BB2  EC4F  F04D         	call	_SetSegmentValueIntermitentMain
  3989                           
  3990                           ;sm_MenuConfiguration_MC50.c: 167:             }
  3991                           
  3992                           ;sm_MenuConfiguration_MC50.c: 166:                 }
  3993  001BB6  0012               	return	
  3994  001BB8                     l23801:
  3995                           
  3996                           ; BSR set to: 1
  3997  001BB8  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3998  001BBA  A4D8               	btfss	status,2,c
  3999  001BBC  D025               	goto	l23813
  4000                           
  4001                           ; BSR set to: 1
  4002                           ;sm_MenuConfiguration_MC50.c: 169:             {;sm_MenuConfiguration_MC50.c: 170:      
      +                                     ts_system.timeoutMenu= ((1000/50)*5) ;
  4003  001BBE  0E00               	movlw	0
  4004  001BC0  0100               	movlb	0	; () banked
  4005  001BC2  6F9E               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4006  001BC4  0E64               	movlw	100
  4007  001BC6  6F9D               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4008                           
  4009                           ;sm_MenuConfiguration_MC50.c: 171:                 if(menu_st.parameterSelected==0)
  4010  001BC8  0101               	movlb	1	; () banked
  4011  001BCA  5117               	movf	(_menu_st+23)& (0+255),w,b
  4012  001BCC  A4D8               	btfss	status,2,c
  4013  001BCE  D003               	goto	l23807
  4014                           
  4015                           ; BSR set to: 1
  4016                           ;sm_MenuConfiguration_MC50.c: 172:                 {;sm_MenuConfiguration_MC50.c: 173:  
      +                                             menu_st.parameterSelected=menu_st.menuSize-1;
  4017  001BD0  0516               	decf	(_menu_st+22)& (0+255),w,b
  4018  001BD2  6F17               	movwf	(_menu_st+23)& (0+255),b
  4019                           
  4020                           ;sm_MenuConfiguration_MC50.c: 174:                 }
  4021  001BD4  D001               	goto	l23809
  4022  001BD6                     l23807:
  4023                           
  4024                           ; BSR set to: 1
  4025                           ;sm_MenuConfiguration_MC50.c: 176:                 {;sm_MenuConfiguration_MC50.c: 177:  
      +                                             menu_st.parameterSelected--;
  4026  001BD6  0717               	decf	(_menu_st+23)& (0+255),f,b
  4027  001BD8                     l23809:
  4028                           
  4029                           ; BSR set to: 1
  4030                           ;sm_MenuConfiguration_MC50.c: 179:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  4031  001BD8  5117               	movf	(_menu_st+23)& (0+255),w,b
  4032  001BDA  0D02               	mullw	2
  4033  001BDC  0E01               	movlw	low (_menu_st+1)
  4034  001BDE  24F3               	addwf	243,w,c
  4035  001BE0  6ED9               	movwf	fsr2l,c
  4036  001BE2  0E01               	movlw	high (_menu_st+1)
  4037  001BE4  20F4               	addwfc	prodh,w,c
  4038  001BE6  6EDA               	movwf	fsr2h,c
  4039  001BE8  50DF               	movf	indf2,w,c
  4040  001BEA  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4041  001BEC  5117               	movf	(_menu_st+23)& (0+255),w,b
  4042  001BEE  0D02               	mullw	2
  4043  001BF0  0E00               	movlw	low _menu_st
  4044  001BF2  24F3               	addwf	243,w,c
  4045  001BF4  6ED9               	movwf	fsr2l,c
  4046  001BF6  0E01               	movlw	high _menu_st
  4047  001BF8  20F4               	addwfc	prodh,w,c
  4048  001BFA  6EDA               	movwf	fsr2h,c
  4049  001BFC  50DF               	movf	indf2,w,c
  4050  001BFE  ECA9  F04C         	call	_SetSegmentValueMain
  4051  001C02                     l23811:
  4052                           
  4053                           ;sm_MenuConfiguration_MC50.c: 180:                 button_struct.processed=1;
  4054  001C02  0E01               	movlw	1
  4055  001C04  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4056                           
  4057                           ;sm_MenuConfiguration_MC50.c: 181:             }
  4058  001C06  0012               	return	
  4059  001C08                     l23813:
  4060                           
  4061                           ; BSR set to: 1
  4062  001C08  0E17               	movlw	23
  4063  001C0A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4064  001C0C  A4D8               	btfss	status,2,c
  4065  001C0E  D023               	goto	l23827
  4066                           
  4067                           ; BSR set to: 1
  4068                           ;sm_MenuConfiguration_MC50.c: 183:             {;sm_MenuConfiguration_MC50.c: 184:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4069  001C10  0E00               	movlw	0
  4070  001C12  0100               	movlb	0	; () banked
  4071  001C14  6F9E               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4072  001C16  0E64               	movlw	100
  4073  001C18  6F9D               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4074                           
  4075                           ; BSR set to: 0
  4076                           ;sm_MenuConfiguration_MC50.c: 185:                 menu_st.parameterSelected++;
  4077  001C1A  0101               	movlb	1	; () banked
  4078  001C1C  2B17               	incf	(_menu_st+23)& (0+255),f,b
  4079                           
  4080                           ; BSR set to: 1
  4081                           ;sm_MenuConfiguration_MC50.c: 186:                 if(menu_st.parameterSelected>=menu_st
      +                          .menuSize)
  4082  001C1E  5116               	movf	(_menu_st+22)& (0+255),w,b
  4083  001C20  5D17               	subwf	(_menu_st+23)& (0+255),w,b
  4084  001C22  A0D8               	btfss	status,0,c
  4085  001C24  D002               	goto	l23823
  4086                           
  4087                           ; BSR set to: 1
  4088                           ;sm_MenuConfiguration_MC50.c: 187:                 {;sm_MenuConfiguration_MC50.c: 188:  
      +                                             menu_st.parameterSelected=0;
  4089  001C26  0E00               	movlw	0
  4090  001C28  6F17               	movwf	(_menu_st+23)& (0+255),b
  4091  001C2A                     l23823:
  4092                           
  4093                           ; BSR set to: 1
  4094                           ;sm_MenuConfiguration_MC50.c: 190:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  4095  001C2A  5117               	movf	(_menu_st+23)& (0+255),w,b
  4096  001C2C  0D02               	mullw	2
  4097  001C2E  0E01               	movlw	low (_menu_st+1)
  4098  001C30  24F3               	addwf	243,w,c
  4099  001C32  6ED9               	movwf	fsr2l,c
  4100  001C34  0E01               	movlw	high (_menu_st+1)
  4101  001C36  20F4               	addwfc	prodh,w,c
  4102  001C38  6EDA               	movwf	fsr2h,c
  4103  001C3A  50DF               	movf	indf2,w,c
  4104  001C3C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4105  001C3E  5117               	movf	(_menu_st+23)& (0+255),w,b
  4106  001C40  0D02               	mullw	2
  4107  001C42  0E00               	movlw	low _menu_st
  4108  001C44  24F3               	addwf	243,w,c
  4109  001C46  6ED9               	movwf	fsr2l,c
  4110  001C48  0E01               	movlw	high _menu_st
  4111  001C4A  20F4               	addwfc	prodh,w,c
  4112  001C4C  6EDA               	movwf	fsr2h,c
  4113  001C4E  50DF               	movf	indf2,w,c
  4114  001C50  ECA9  F04C         	call	_SetSegmentValueMain
  4115  001C54  D7D6               	goto	l23811
  4116  001C56                     l23827:
  4117                           
  4118                           ; BSR set to: 1
  4119  001C56  0E0C               	movlw	12
  4120  001C58  6115               	cpfslt	(_menu_st+21)& (0+255),b
  4121  001C5A  D09E               	goto	l23883
  4122                           
  4123                           ; BSR set to: 1
  4124                           ;sm_MenuConfiguration_MC50.c: 194:             {;sm_MenuConfiguration_MC50.c: 195:      
      +                                     if (button_struct.current==0x27 && button_struct.timer>(( 500/50)) )
  4125  001C5C  0E27               	movlw	39
  4126  001C5E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4127  001C60  A4D8               	btfss	status,2,c
  4128  001C62  D050               	goto	l23849
  4129                           
  4130                           ; BSR set to: 1
  4131  001C64  0E0A               	movlw	10
  4132  001C66  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4133  001C68  D04D               	goto	l23849
  4134                           
  4135                           ; BSR set to: 1
  4136                           ;sm_MenuConfiguration_MC50.c: 196:                 {;sm_MenuConfiguration_MC50.c: 197:  
      +                                             ts_system.timeoutMenu=((1000/50)*5) ;
  4137  001C6A  0E00               	movlw	0
  4138  001C6C  0100               	movlb	0	; () banked
  4139  001C6E  6F9E               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4140  001C70  0E64               	movlw	100
  4141  001C72  6F9D               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4142                           
  4143                           ; BSR set to: 0
  4144                           ;sm_MenuConfiguration_MC50.c: 199:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  4145  001C74  C117  F0DD         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  4146  001C78  0101               	movlb	1	; () banked
  4147  001C7A  5115               	movf	(_menu_st+21)& (0+255),w,b
  4148  001C7C  ECF1  F014         	call	_setValueToEdit
  4149  001C80  0900               	iorlw	0
  4150  001C82  B4D8               	btfsc	status,2,c
  4151  001C84  D7BE               	goto	l23811
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;sm_MenuConfiguration_MC50.c: 200:                     {;sm_MenuConfiguration_MC50.c: 20
      +                          2:                          sm_send_event(&menuConfiguration_stateMachine, ev_ParameterI
      +                          sSelected);
  4155  001C86  0EBD               	movlw	low _menuConfiguration_stateMachine
  4156  001C88  6E12               	movwf	sm_send_event@psm^0,c
  4157  001C8A  0E02               	movlw	high _menuConfiguration_stateMachine
  4158  001C8C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4159  001C8E  0E00               	movlw	0
  4160  001C90  6E15               	movwf	(sm_send_event@event+1)^0,c
  4161  001C92  0E01               	movlw	1
  4162  001C94  6E14               	movwf	sm_send_event@event^0,c
  4163  001C96  ECE8  F045         	call	_sm_send_event	;wreg free
  4164                           
  4165                           ;sm_MenuConfiguration_MC50.c: 203:                          if((edit_Param.Value==(unsig
      +                          ned char*)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Dir
      +                          ection_motor)){
  4166  001C9A  0EC2               	movlw	low (_var_sys_NVM+28)
  4167  001C9C  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4168  001C9E  E104               	bnz	u29220
  4169  001CA0  0E01               	movlw	high (_var_sys_NVM+28)
  4170  001CA2  1848               	xorwf	(_edit_Param+2)^0,w,c	;volatile
  4171  001CA4  B4D8               	btfsc	status,2,c
  4172  001CA6  D007               	goto	u29230
  4173  001CA8                     u29220:
  4174  001CA8  0EC1               	movlw	low (_var_sys_NVM+27)
  4175  001CAA  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4176  001CAC  E11A               	bnz	l23845
  4177  001CAE  0E01               	movlw	high (_var_sys_NVM+27)
  4178  001CB0  1848               	xorwf	(_edit_Param+2)^0,w,c	;volatile
  4179  001CB2  A4D8               	btfss	status,2,c
  4180  001CB4  D016               	goto	l23845
  4181  001CB6                     u29230:
  4182                           
  4183                           ;sm_MenuConfiguration_MC50.c: 204:                            SetSegmentValueMain(menu_s
      +                          t.menuList[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].
      +                          value_display2);
  4184  001CB6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4185  001CB8  0D02               	mullw	2
  4186  001CBA  0E01               	movlw	low (_menu_st+1)
  4187  001CBC  24F3               	addwf	243,w,c
  4188  001CBE  6ED9               	movwf	fsr2l,c
  4189  001CC0  0E01               	movlw	high (_menu_st+1)
  4190  001CC2  20F4               	addwfc	prodh,w,c
  4191  001CC4  6EDA               	movwf	fsr2h,c
  4192  001CC6  50DF               	movf	indf2,w,c
  4193  001CC8  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4194  001CCA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4195  001CCC  0D02               	mullw	2
  4196  001CCE  0E00               	movlw	low _menu_st
  4197  001CD0  24F3               	addwf	243,w,c
  4198  001CD2  6ED9               	movwf	fsr2l,c
  4199  001CD4  0E01               	movlw	high _menu_st
  4200  001CD6  20F4               	addwfc	prodh,w,c
  4201  001CD8  6EDA               	movwf	fsr2h,c
  4202  001CDA  50DF               	movf	indf2,w,c
  4203  001CDC  ECA9  F04C         	call	_SetSegmentValueMain
  4204                           
  4205                           ;sm_MenuConfiguration_MC50.c: 206:                          }
  4206  001CE0  D790               	goto	l23811
  4207  001CE2                     l23845:
  4208                           
  4209                           ;sm_MenuConfiguration_MC50.c: 208:                          SetSegmentValueMain(edit_Par
      +                          am.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4210  001CE2  0E0A               	movlw	10
  4211  001CE4  6E10               	movwf	___lbdiv@divisor^0,c
  4212  001CE6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4213  001CE8  ECC7  F049         	call	___lbdiv
  4214  001CEC  0DF6               	mullw	246
  4215  001CEE  50F3               	movf	243,w,c
  4216  001CF0  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4217  001CF2  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4218  001CF4  0E0A               	movlw	10
  4219  001CF6  6E10               	movwf	___lbdiv@divisor^0,c
  4220  001CF8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4221  001CFA  ECC7  F049         	call	___lbdiv
  4222  001CFE  ECA9  F04C         	call	_SetSegmentValueMain
  4223  001D02  D77F               	goto	l23811
  4224  001D04                     l23849:
  4225                           
  4226                           ; BSR set to: 1
  4227  001D04  0100               	movlb	0	; () banked
  4228  001D06  BF9E               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4229  001D08  D008               	goto	u29250
  4230  001D0A  519E               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4231  001D0C  E103               	bnz	u29240
  4232  001D0E  059D               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4233  001D10  A0D8               	btfss	status,0,c
  4234  001D12  D003               	goto	u29250
  4235  001D14                     u29240:
  4236                           
  4237                           ; BSR set to: 0
  4238  001D14  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4239  001D16  A4D8               	btfss	status,2,c
  4240  001D18  D020               	goto	l23867
  4241  001D1A                     u29250:
  4242                           
  4243                           ; BSR set to: 0
  4244  001D1A  0E02               	movlw	2
  4245  001D1C  0101               	movlb	1	; () banked
  4246  001D1E  6115               	cpfslt	(_menu_st+21)& (0+255),b
  4247  001D20  D01C               	goto	l23867
  4248                           
  4249                           ; BSR set to: 1
  4250                           ;sm_MenuConfiguration_MC50.c: 216:                 {;sm_MenuConfiguration_MC50.c: 217:  
      +                                             ts_system.timeoutMenu=0;
  4251  001D22  0E00               	movlw	0
  4252  001D24  0100               	movlb	0	; () banked
  4253  001D26  6F9E               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4254  001D28  0E00               	movlw	0
  4255  001D2A  6F9D               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4256                           
  4257                           ; BSR set to: 0
  4258                           ;sm_MenuConfiguration_MC50.c: 218:                     sm_send_event(&main_stateMachine,
      +                           ev_goto_StandBy);
  4259  001D2C  0EF1               	movlw	low _main_stateMachine
  4260  001D2E  6E12               	movwf	sm_send_event@psm^0,c
  4261  001D30  0E01               	movlw	high _main_stateMachine
  4262  001D32  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4263  001D34  0E00               	movlw	0
  4264  001D36  6E15               	movwf	(sm_send_event@event+1)^0,c
  4265  001D38  0E07               	movlw	7
  4266  001D3A  6E14               	movwf	sm_send_event@event^0,c
  4267  001D3C  ECE8  F045         	call	_sm_send_event	;wreg free
  4268                           
  4269                           ;sm_MenuConfiguration_MC50.c: 219:                     SetSegmentValueMain(dMinus,dMinus
      +                          );
  4270  001D40  0E18               	movlw	24
  4271  001D42  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4272  001D44  0E18               	movlw	24
  4273  001D46  ECA9  F04C         	call	_SetSegmentValueMain
  4274                           
  4275                           ; BSR set to: 0
  4276                           ;sm_MenuConfiguration_MC50.c: 220:                     menu_st.lastMainParameterSelected
      +                           = 0;
  4277  001D4A  0E00               	movlw	0
  4278  001D4C  0101               	movlb	1	; () banked
  4279  001D4E  6F18               	movwf	(_menu_st+24)& (0+255),b
  4280                           
  4281                           ; BSR set to: 1
  4282                           ;sm_MenuConfiguration_MC50.c: 221:                     button_struct.processed=1;
  4283  001D50  0E01               	movlw	1
  4284  001D52  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4285                           
  4286                           ; BSR set to: 1
  4287                           ;sm_MenuConfiguration_MC50.c: 222:                     ClearFlag_rfCMD();
  4288  001D54  EC07  F04E         	call	_ClearFlag_rfCMD	;wreg free
  4289                           
  4290                           ;sm_MenuConfiguration_MC50.c: 224:                 }
  4291  001D58  0012               	return	
  4292  001D5A                     l23867:
  4293  001D5A  0100               	movlb	0	; () banked
  4294  001D5C  BF9E               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4295  001D5E  D008               	goto	u29280
  4296  001D60  519E               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4297  001D62  E103               	bnz	u29270
  4298  001D64  059D               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4299  001D66  A0D8               	btfss	status,0,c
  4300  001D68  D003               	goto	u29280
  4301  001D6A                     u29270:
  4302                           
  4303                           ; BSR set to: 0
  4304  001D6A  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4305  001D6C  A4D8               	btfss	status,2,c
  4306  001D6E  D005               	goto	l23875
  4307  001D70                     u29280:
  4308                           
  4309                           ; BSR set to: 0
  4310                           ;sm_MenuConfiguration_MC50.c: 226:                 {;sm_MenuConfiguration_MC50.c: 228:  
      +                                             load_New_Menu(menu_st.lastMenu);
  4311  001D70  0101               	movlb	1	; () banked
  4312  001D72  5114               	movf	(_menu_st+20)& (0+255),w,b
  4313  001D74  EC91  F021         	call	_load_New_Menu
  4314  001D78  D744               	goto	l23811
  4315  001D7A                     l23875:
  4316                           
  4317                           ; BSR set to: 0
  4318  001D7A  BF9E               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4319  001D7C  D005               	goto	u29290
  4320  001D7E  519E               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4321  001D80  E102               	bnz	u29291
  4322  001D82  059D               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4323  001D84  B0D8               	btfsc	status,0,c
  4324  001D86                     u29291:
  4325  001D86  0012               	return	
  4326  001D88                     u29290:
  4327                           
  4328                           ; BSR set to: 0
  4329  001D88  0E01               	movlw	1
  4330  001D8A  0101               	movlb	1	; () banked
  4331  001D8C  6515               	cpfsgt	(_menu_st+21)& (0+255),b
  4332  001D8E  0012               	return	
  4333                           
  4334                           ; BSR set to: 1
  4335                           ;sm_MenuConfiguration_MC50.c: 232:                 {;sm_MenuConfiguration_MC50.c: 234:  
      +                                             load_New_Menu(menu_st.lastMenu);
  4336  001D90  5114               	movf	(_menu_st+20)& (0+255),w,b
  4337  001D92  EC91  F021         	call	_load_New_Menu
  4338  001D96  D735               	goto	l23811
  4339  001D98                     l23883:
  4340                           
  4341                           ; BSR set to: 1
  4342  001D98  0E07               	movlw	7
  4343  001D9A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4344  001D9C  A4D8               	btfss	status,2,c
  4345  001D9E  D034               	goto	l23899
  4346                           
  4347                           ; BSR set to: 1
  4348  001DA0  0E0A               	movlw	10
  4349  001DA2  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4350  001DA4  D031               	goto	l23899
  4351                           
  4352                           ; BSR set to: 1
  4353  001DA6  0E0D               	movlw	13
  4354  001DA8  1915               	xorwf	(_menu_st+21)& (0+255),w,b
  4355  001DAA  B4D8               	btfsc	status,2,c
  4356  001DAC  D02D               	goto	l23899
  4357                           
  4358                           ; BSR set to: 1
  4359                           ;sm_MenuConfiguration_MC50.c: 239:             {;sm_MenuConfiguration_MC50.c: 240:      
      +                                         ts_system.timeoutMenu=((1000/50)*5);
  4360  001DAE  0E00               	movlw	0
  4361  001DB0  0100               	movlb	0	; () banked
  4362  001DB2  6F9E               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4363  001DB4  0E64               	movlw	100
  4364  001DB6  6F9D               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4365                           
  4366                           ; BSR set to: 0
  4367                           ;sm_MenuConfiguration_MC50.c: 241:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  4368  001DB8  C117  F0DD         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  4369  001DBC  0101               	movlb	1	; () banked
  4370  001DBE  5115               	movf	(_menu_st+21)& (0+255),w,b
  4371  001DC0  ECF1  F014         	call	_setValueToEdit
  4372  001DC4  0900               	iorlw	0
  4373  001DC6  B4D8               	btfsc	status,2,c
  4374  001DC8  D71C               	goto	l23811
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;sm_MenuConfiguration_MC50.c: 243:                     {;sm_MenuConfiguration_MC50.c: 24
      +                          4:                         sm_send_event(&menuConfiguration_stateMachine, ev_addRemotes)
      +                          ;
  4378  001DCA  0EBD               	movlw	low _menuConfiguration_stateMachine
  4379  001DCC  6E12               	movwf	sm_send_event@psm^0,c
  4380  001DCE  0E02               	movlw	high _menuConfiguration_stateMachine
  4381  001DD0  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4382  001DD2  0E00               	movlw	0
  4383  001DD4  6E15               	movwf	(sm_send_event@event+1)^0,c
  4384  001DD6  0E08               	movlw	8
  4385  001DD8  6E14               	movwf	sm_send_event@event^0,c
  4386  001DDA  ECE8  F045         	call	_sm_send_event	;wreg free
  4387                           
  4388                           ;sm_MenuConfiguration_MC50.c: 245:                         SetSegmentValueIntermitentMai
      +                          n(edit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50)
      +                          );
  4389  001DDE  0E0A               	movlw	10
  4390  001DE0  6E10               	movwf	___lbdiv@divisor^0,c
  4391  001DE2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4392  001DE4  ECC7  F049         	call	___lbdiv
  4393  001DE8  0DF6               	mullw	246
  4394  001DEA  50F3               	movf	243,w,c
  4395  001DEC  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4396  001DEE  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4397  001DF0  0E00               	movlw	0
  4398  001DF2  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4399  001DF4  0E14               	movlw	20
  4400  001DF6  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4401  001DF8  0E0A               	movlw	10
  4402  001DFA  6E10               	movwf	___lbdiv@divisor^0,c
  4403  001DFC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4404  001DFE  ECC7  F049         	call	___lbdiv
  4405  001E02  EC4F  F04D         	call	_SetSegmentValueIntermitentMain
  4406  001E06  D6FD               	goto	l23811
  4407  001E08                     l23899:
  4408                           
  4409                           ; BSR set to: 1
  4410  001E08  0E0D               	movlw	13
  4411  001E0A  1915               	xorwf	(_menu_st+21)& (0+255),w,b
  4412  001E0C  A4D8               	btfss	status,2,c
  4413  001E0E  D028               	goto	l23917
  4414                           
  4415                           ; BSR set to: 1
  4416  001E10  0100               	movlb	0	; () banked
  4417  001E12  519B               	movf	(_ts_system+12)& (0+255),w,b	;volatile
  4418  001E14  119C               	iorwf	(_ts_system+13)& (0+255),w,b	;volatile
  4419  001E16  A4D8               	btfss	status,2,c
  4420  001E18  D023               	goto	l23917
  4421                           
  4422                           ; BSR set to: 0
  4423                           ;sm_MenuConfiguration_MC50.c: 250:             {;sm_MenuConfiguration_MC50.c: 251:      
      +                                     var_sys_NVM.positionRemotesFull=0;
  4424  001E1A  0E00               	movlw	0
  4425  001E1C  0101               	movlb	1	; () banked
  4426  001E1E  6FC6               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
  4427                           
  4428                           ;sm_MenuConfiguration_MC50.c: 252:                 var_sys_NVM.positionRemotesWalk=0;
  4429  001E20  0E00               	movlw	0
  4430  001E22  6FC7               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
  4431                           
  4432                           ;sm_MenuConfiguration_MC50.c: 253:                 var_sys_NVM.OnlyRollingCode=NO;
  4433  001E24  0E00               	movlw	0
  4434  001E26  6FCC               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  4435                           
  4436                           ; BSR set to: 1
  4437                           ;sm_MenuConfiguration_MC50.c: 254:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4438  001E28  0E02               	movlw	2
  4439  001E2A  EC7F  F048         	call	_SaveNVM_VarSystem
  4440                           
  4441                           ;sm_MenuConfiguration_MC50.c: 255:                 sm_send_event(&main_stateMachine, ev_
      +                          goto_StandBy);
  4442  001E2E  0EF1               	movlw	low _main_stateMachine
  4443  001E30  6E12               	movwf	sm_send_event@psm^0,c
  4444  001E32  0E01               	movlw	high _main_stateMachine
  4445  001E34  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4446  001E36  0E00               	movlw	0
  4447  001E38  6E15               	movwf	(sm_send_event@event+1)^0,c
  4448  001E3A  0E07               	movlw	7
  4449  001E3C  6E14               	movwf	sm_send_event@event^0,c
  4450  001E3E  ECE8  F045         	call	_sm_send_event	;wreg free
  4451                           
  4452                           ;sm_MenuConfiguration_MC50.c: 256:                 SetSegmentValueMain(dMinus,dMinus);
  4453  001E42  0E18               	movlw	24
  4454  001E44  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4455  001E46  0E18               	movlw	24
  4456  001E48  ECA9  F04C         	call	_SetSegmentValueMain
  4457                           
  4458                           ; BSR set to: 0
  4459                           ;sm_MenuConfiguration_MC50.c: 257:                 button_struct.processed=1;
  4460  001E4C  0E01               	movlw	1
  4461  001E4E  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4462  001E50                     l23913:
  4463                           
  4464                           ;sm_MenuConfiguration_MC50.c: 258:                 ClearFlag_rfCMD();
  4465  001E50  EC07  F04E         	call	_ClearFlag_rfCMD	;wreg free
  4466  001E54                     l23915:
  4467                           
  4468                           ;sm_MenuConfiguration_MC50.c: 259:                  ts_system.timeoutMenu=0;
  4469  001E54  0E00               	movlw	0
  4470  001E56  0100               	movlb	0	; () banked
  4471  001E58  6F9E               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4472  001E5A  0E00               	movlw	0
  4473  001E5C  6F9D               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4474                           
  4475                           ;sm_MenuConfiguration_MC50.c: 260:             }
  4476  001E5E  0012               	return	
  4477  001E60                     l23917:
  4478  001E60  0100               	movlb	0	; () banked
  4479  001E62  BF9E               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4480  001E64  D008               	goto	u29380
  4481  001E66  519E               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4482  001E68  E103               	bnz	u29370
  4483  001E6A  059D               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4484  001E6C  A0D8               	btfss	status,0,c
  4485  001E6E  D003               	goto	u29380
  4486  001E70                     u29370:
  4487                           
  4488                           ; BSR set to: 0
  4489  001E70  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4490  001E72  A4D8               	btfss	status,2,c
  4491  001E74  0012               	return	
  4492  001E76                     u29380:
  4493                           
  4494                           ; BSR set to: 0
  4495                           ;sm_MenuConfiguration_MC50.c: 262:             {;sm_MenuConfiguration_MC50.c: 263:      
      +                                      sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4496  001E76  0EF1               	movlw	low _main_stateMachine
  4497  001E78  6E12               	movwf	sm_send_event@psm^0,c
  4498  001E7A  0E01               	movlw	high _main_stateMachine
  4499  001E7C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4500  001E7E  0E00               	movlw	0
  4501  001E80  6E15               	movwf	(sm_send_event@event+1)^0,c
  4502  001E82  0E07               	movlw	7
  4503  001E84  6E14               	movwf	sm_send_event@event^0,c
  4504  001E86  ECE8  F045         	call	_sm_send_event	;wreg free
  4505                           
  4506                           ;sm_MenuConfiguration_MC50.c: 264:                  SetSegmentValueMain(dMinus,dMinus);
  4507  001E8A  0E18               	movlw	24
  4508  001E8C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4509  001E8E  0E18               	movlw	24
  4510  001E90  ECA9  F04C         	call	_SetSegmentValueMain
  4511                           
  4512                           ; BSR set to: 0
  4513                           ;sm_MenuConfiguration_MC50.c: 265:                  ClearFlag_rfCMD();
  4514  001E94  EC07  F04E         	call	_ClearFlag_rfCMD	;wreg free
  4515                           
  4516                           ;sm_MenuConfiguration_MC50.c: 266:                  button_struct.processed=1;
  4517  001E98  0E01               	movlw	1
  4518  001E9A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4519  001E9C  D7DB               	goto	l23915
  4520  001E9E                     l23931:
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;sm_MenuConfiguration_MC50.c: 272:         {;sm_MenuConfiguration_MC50.c: 273:          
      +                             if (button_struct.current==0x00)
  4524  001E9E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4525  001EA0  A4D8               	btfss	status,2,c
  4526  001EA2  D041               	goto	l23951
  4527                           
  4528                           ; BSR set to: 0
  4529                           ;sm_MenuConfiguration_MC50.c: 274:             {;sm_MenuConfiguration_MC50.c: 275:      
      +                                     ts_system.timeoutMenu=((1000/50)*5);
  4530  001EA4  0E00               	movlw	0
  4531  001EA6  6F9E               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4532  001EA8  0E64               	movlw	100
  4533  001EAA  6F9D               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4534                           
  4535                           ; BSR set to: 0
  4536                           ;sm_MenuConfiguration_MC50.c: 276:                 if(edit_Param.tempValue<=edit_Param.M
      +                          in)
  4537  001EAC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4538  001EAE  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  4539  001EB0  A0D8               	btfss	status,0,c
  4540  001EB2  D003               	goto	l23939
  4541                           
  4542                           ; BSR set to: 0
  4543                           ;sm_MenuConfiguration_MC50.c: 277:                 {;sm_MenuConfiguration_MC50.c: 278:  
      +                                             edit_Param.tempValue=edit_Param.Max;
  4544  001EB4  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  4545                           
  4546                           ;sm_MenuConfiguration_MC50.c: 279:                 }
  4547  001EB8  D001               	goto	l23941
  4548  001EBA                     l23939:
  4549                           
  4550                           ; BSR set to: 0
  4551                           ;sm_MenuConfiguration_MC50.c: 281:                 {;sm_MenuConfiguration_MC50.c: 282:  
      +                                             edit_Param.tempValue--;
  4552  001EBA  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  4553  001EBC                     l23941:
  4554                           
  4555                           ; BSR set to: 0
  4556                           ;sm_MenuConfiguration_MC50.c: 284:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4557  001EBC  0EC2               	movlw	low (_var_sys_NVM+28)
  4558  001EBE  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4559  001EC0  E104               	bnz	u29410
  4560  001EC2  0E01               	movlw	high (_var_sys_NVM+28)
  4561  001EC4  1848               	xorwf	(_edit_Param+2)^0,w,c	;volatile
  4562  001EC6  B4D8               	btfsc	status,2,c
  4563  001EC8  D007               	goto	u29420
  4564  001ECA                     u29410:
  4565                           
  4566                           ; BSR set to: 0
  4567  001ECA  0EC1               	movlw	low (_var_sys_NVM+27)
  4568  001ECC  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4569  001ECE  E11A               	bnz	l23947
  4570  001ED0  0E01               	movlw	high (_var_sys_NVM+27)
  4571  001ED2  1848               	xorwf	(_edit_Param+2)^0,w,c	;volatile
  4572  001ED4  A4D8               	btfss	status,2,c
  4573  001ED6  D016               	goto	l23947
  4574  001ED8                     u29420:
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;sm_MenuConfiguration_MC50.c: 285:                 SetSegmentValueMain(menu_st.menuList[
      +                          edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_displ
      +                          ay2);
  4578  001ED8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4579  001EDA  0D02               	mullw	2
  4580  001EDC  0E01               	movlw	low (_menu_st+1)
  4581  001EDE  24F3               	addwf	243,w,c
  4582  001EE0  6ED9               	movwf	fsr2l,c
  4583  001EE2  0E01               	movlw	high (_menu_st+1)
  4584  001EE4  20F4               	addwfc	prodh,w,c
  4585  001EE6  6EDA               	movwf	fsr2h,c
  4586  001EE8  50DF               	movf	indf2,w,c
  4587  001EEA  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4588  001EEC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4589  001EEE  0D02               	mullw	2
  4590  001EF0  0E00               	movlw	low _menu_st
  4591  001EF2  24F3               	addwf	243,w,c
  4592  001EF4  6ED9               	movwf	fsr2l,c
  4593  001EF6  0E01               	movlw	high _menu_st
  4594  001EF8  20F4               	addwfc	prodh,w,c
  4595  001EFA  6EDA               	movwf	fsr2h,c
  4596  001EFC  50DF               	movf	indf2,w,c
  4597  001EFE  ECA9  F04C         	call	_SetSegmentValueMain
  4598                           
  4599                           ;sm_MenuConfiguration_MC50.c: 286:                 }
  4600  001F02  D67F               	goto	l23811
  4601  001F04                     l23947:
  4602                           
  4603                           ; BSR set to: 0
  4604                           ;sm_MenuConfiguration_MC50.c: 289:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4605  001F04  0E0A               	movlw	10
  4606  001F06  6E10               	movwf	___lbdiv@divisor^0,c
  4607  001F08  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4608  001F0A  ECC7  F049         	call	___lbdiv
  4609  001F0E  0DF6               	mullw	246
  4610  001F10  50F3               	movf	243,w,c
  4611  001F12  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4612  001F14  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4613  001F16  0E0A               	movlw	10
  4614  001F18  6E10               	movwf	___lbdiv@divisor^0,c
  4615  001F1A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4616  001F1C  ECC7  F049         	call	___lbdiv
  4617  001F20  ECA9  F04C         	call	_SetSegmentValueMain
  4618  001F24  D66E               	goto	l23811
  4619  001F26                     l23951:
  4620                           
  4621                           ; BSR set to: 0
  4622  001F26  0E17               	movlw	23
  4623  001F28  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4624  001F2A  A4D8               	btfss	status,2,c
  4625  001F2C  D03F               	goto	l23971
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;sm_MenuConfiguration_MC50.c: 294:             {;sm_MenuConfiguration_MC50.c: 295:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4629  001F2E  0E00               	movlw	0
  4630  001F30  6F9E               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4631  001F32  0E64               	movlw	100
  4632  001F34  6F9D               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4633                           
  4634                           ; BSR set to: 0
  4635                           ;sm_MenuConfiguration_MC50.c: 296:                 edit_Param.tempValue++;
  4636  001F36  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  4637                           
  4638                           ; BSR set to: 0
  4639                           ;sm_MenuConfiguration_MC50.c: 297:                 if(edit_Param.tempValue>edit_Param.Ma
      +                          x)
  4640  001F38  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4641  001F3A  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  4642  001F3C  A0D8               	btfss	status,0,c
  4643                           
  4644                           ; BSR set to: 0
  4645                           ;sm_MenuConfiguration_MC50.c: 298:                 {;sm_MenuConfiguration_MC50.c: 299:  
      +                                              edit_Param.tempValue=edit_Param.Min;
  4646  001F3E  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  4647                           
  4648                           ; BSR set to: 0
  4649                           ;sm_MenuConfiguration_MC50.c: 301:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4650  001F42  0EC2               	movlw	low (_var_sys_NVM+28)
  4651  001F44  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4652  001F46  E104               	bnz	u29450
  4653  001F48  0E01               	movlw	high (_var_sys_NVM+28)
  4654  001F4A  1848               	xorwf	(_edit_Param+2)^0,w,c	;volatile
  4655  001F4C  B4D8               	btfsc	status,2,c
  4656  001F4E  D007               	goto	u29460
  4657  001F50                     u29450:
  4658                           
  4659                           ; BSR set to: 0
  4660  001F50  0EC1               	movlw	low (_var_sys_NVM+27)
  4661  001F52  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4662  001F54  E11A               	bnz	l23967
  4663  001F56  0E01               	movlw	high (_var_sys_NVM+27)
  4664  001F58  1848               	xorwf	(_edit_Param+2)^0,w,c	;volatile
  4665  001F5A  A4D8               	btfss	status,2,c
  4666  001F5C  D016               	goto	l23967
  4667  001F5E                     u29460:
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;sm_MenuConfiguration_MC50.c: 302:                     SetSegmentValueMain(menu_st.menuL
      +                          ist[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_d
      +                          isplay2);
  4671  001F5E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4672  001F60  0D02               	mullw	2
  4673  001F62  0E01               	movlw	low (_menu_st+1)
  4674  001F64  24F3               	addwf	243,w,c
  4675  001F66  6ED9               	movwf	fsr2l,c
  4676  001F68  0E01               	movlw	high (_menu_st+1)
  4677  001F6A  20F4               	addwfc	prodh,w,c
  4678  001F6C  6EDA               	movwf	fsr2h,c
  4679  001F6E  50DF               	movf	indf2,w,c
  4680  001F70  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4681  001F72  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4682  001F74  0D02               	mullw	2
  4683  001F76  0E00               	movlw	low _menu_st
  4684  001F78  24F3               	addwf	243,w,c
  4685  001F7A  6ED9               	movwf	fsr2l,c
  4686  001F7C  0E01               	movlw	high _menu_st
  4687  001F7E  20F4               	addwfc	prodh,w,c
  4688  001F80  6EDA               	movwf	fsr2h,c
  4689  001F82  50DF               	movf	indf2,w,c
  4690  001F84  ECA9  F04C         	call	_SetSegmentValueMain
  4691                           
  4692                           ;sm_MenuConfiguration_MC50.c: 303:                 }
  4693  001F88  D63C               	goto	l23811
  4694  001F8A                     l23967:
  4695                           
  4696                           ; BSR set to: 0
  4697                           ;sm_MenuConfiguration_MC50.c: 306:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4698  001F8A  0E0A               	movlw	10
  4699  001F8C  6E10               	movwf	___lbdiv@divisor^0,c
  4700  001F8E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4701  001F90  ECC7  F049         	call	___lbdiv
  4702  001F94  0DF6               	mullw	246
  4703  001F96  50F3               	movf	243,w,c
  4704  001F98  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4705  001F9A  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4706  001F9C  0E0A               	movlw	10
  4707  001F9E  6E10               	movwf	___lbdiv@divisor^0,c
  4708  001FA0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4709  001FA2  ECC7  F049         	call	___lbdiv
  4710  001FA6  ECA9  F04C         	call	_SetSegmentValueMain
  4711  001FAA  D62B               	goto	l23811
  4712  001FAC                     l23971:
  4713                           
  4714                           ; BSR set to: 0
  4715  001FAC  0E27               	movlw	39
  4716  001FAE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4717  001FB0  A4D8               	btfss	status,2,c
  4718  001FB2  D021               	goto	l23987
  4719                           
  4720                           ; BSR set to: 0
  4721  001FB4  0E09               	movlw	9
  4722  001FB6  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4723  001FB8  D01E               	goto	l23987
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;sm_MenuConfiguration_MC50.c: 312:             {;sm_MenuConfiguration_MC50.c: 313:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4727  001FBA  0E00               	movlw	0
  4728  001FBC  6F9E               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4729  001FBE  0E64               	movlw	100
  4730  001FC0  6F9D               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4731                           
  4732                           ; BSR set to: 0
  4733                           ;sm_MenuConfiguration_MC50.c: 315:                 edit_Param.Value[0]=edit_Param.tempVa
      +                          lue;
  4734  001FC2  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4735  001FC6  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4736  001FCA  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  4737                           
  4738                           ; BSR set to: 0
  4739                           ;sm_MenuConfiguration_MC50.c: 316:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsEdited);
  4740  001FCE  0EBD               	movlw	low _menuConfiguration_stateMachine
  4741  001FD0  6E12               	movwf	sm_send_event@psm^0,c
  4742  001FD2  0E02               	movlw	high _menuConfiguration_stateMachine
  4743  001FD4  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4744  001FD6  0E00               	movlw	0
  4745  001FD8  6E15               	movwf	(sm_send_event@event+1)^0,c
  4746  001FDA  0E02               	movlw	2
  4747  001FDC  6E14               	movwf	sm_send_event@event^0,c
  4748  001FDE  ECE8  F045         	call	_sm_send_event	;wreg free
  4749                           
  4750                           ;sm_MenuConfiguration_MC50.c: 317:                 SetSegmentValueMain(dBar,d1);
  4751  001FE2  0E01               	movlw	1
  4752  001FE4  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4753  001FE6  0E19               	movlw	25
  4754  001FE8  ECA9  F04C         	call	_SetSegmentValueMain
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;sm_MenuConfiguration_MC50.c: 318:                 ts_system.timeSinalizationDigit=((100
      +                          0/50)*2);
  4758  001FEC  0E00               	movlw	0
  4759  001FEE  6F9C               	movwf	(_ts_system+13)& (0+255),b	;volatile
  4760  001FF0  0E28               	movlw	40
  4761  001FF2  6F9B               	movwf	(_ts_system+12)& (0+255),b	;volatile
  4762  001FF4  D606               	goto	l23811
  4763  001FF6                     l23987:
  4764                           
  4765                           ; BSR set to: 0
  4766  001FF6  BF9E               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4767  001FF8  D008               	goto	u29500
  4768  001FFA  519E               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4769  001FFC  E103               	bnz	u29490
  4770  001FFE  059D               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4771  002000  A0D8               	btfss	status,0,c
  4772  002002  D003               	goto	u29500
  4773  002004                     u29490:
  4774                           
  4775                           ; BSR set to: 0
  4776  002004  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4777  002006  A4D8               	btfss	status,2,c
  4778  002008  0012               	return	
  4779  00200A                     u29500:
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;sm_MenuConfiguration_MC50.c: 323:             {;sm_MenuConfiguration_MC50.c: 324:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4783  00200A  0E00               	movlw	0
  4784  00200C  6F9E               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4785  00200E  0E64               	movlw	100
  4786  002010  6F9D               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4787                           
  4788                           ; BSR set to: 0
  4789                           ;sm_MenuConfiguration_MC50.c: 325:                 load_New_Menu(menu_st.actualMenu);
  4790  002012  0101               	movlb	1	; () banked
  4791  002014  5115               	movf	(_menu_st+21)& (0+255),w,b
  4792  002016  EC91  F021         	call	_load_New_Menu
  4793                           
  4794                           ;sm_MenuConfiguration_MC50.c: 326:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_CancelEdition);
  4795  00201A  0EBD               	movlw	low _menuConfiguration_stateMachine
  4796  00201C  6E12               	movwf	sm_send_event@psm^0,c
  4797  00201E  0E02               	movlw	high _menuConfiguration_stateMachine
  4798  002020  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4799  002022  0E00               	movlw	0
  4800  002024  6E15               	movwf	(sm_send_event@event+1)^0,c
  4801  002026  0E03               	movlw	3
  4802  002028  6E14               	movwf	sm_send_event@event^0,c
  4803  00202A  ECE8  F045         	call	_sm_send_event	;wreg free
  4804  00202E  D5E9               	goto	l23811
  4805  002030                     l23999:
  4806                           
  4807                           ; BSR set to: 0
  4808                           ;sm_MenuConfiguration_MC50.c: 332:         {;sm_MenuConfiguration_MC50.c: 333:          
      +                             if (ts_system.timeSinalizationDigit<=0)
  4809  002030  BF9C               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  4810  002032  D005               	goto	u29510
  4811  002034  519C               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  4812  002036  E102               	bnz	u29511
  4813  002038  059B               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  4814  00203A  B0D8               	btfsc	status,0,c
  4815  00203C                     u29511:
  4816  00203C  0012               	return	
  4817  00203E                     u29510:
  4818                           
  4819                           ; BSR set to: 0
  4820                           ;sm_MenuConfiguration_MC50.c: 334:             {;sm_MenuConfiguration_MC50.c: 335:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4821  00203E  0E00               	movlw	0
  4822  002040  6F9E               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4823  002042  0E64               	movlw	100
  4824  002044  6F9D               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;sm_MenuConfiguration_MC50.c: 337:                 if((menu_st.actualMenu==E_Menu && men
      +                          u_st.parameterSelected==8)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.TypeofMotor)
      +                          )
  4828  002046  0101               	movlb	1	; () banked
  4829  002048  0515               	decf	(_menu_st+21)& (0+255),w,b
  4830  00204A  A4D8               	btfss	status,2,c
  4831  00204C  D004               	goto	u29530
  4832                           
  4833                           ; BSR set to: 1
  4834  00204E  0E08               	movlw	8
  4835  002050  1917               	xorwf	(_menu_st+23)& (0+255),w,b
  4836  002052  B4D8               	btfsc	status,2,c
  4837  002054  D007               	goto	u29540
  4838  002056                     u29530:
  4839                           
  4840                           ; BSR set to: 1
  4841  002056  0EC2               	movlw	low (_var_sys_NVM+28)
  4842  002058  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4843  00205A  E108               	bnz	l24011
  4844  00205C  0E01               	movlw	high (_var_sys_NVM+28)
  4845  00205E  1848               	xorwf	(_edit_Param+2)^0,w,c	;volatile
  4846  002060  A4D8               	btfss	status,2,c
  4847  002062  D004               	goto	l24011
  4848  002064                     u29540:
  4849                           
  4850                           ; BSR set to: 1
  4851                           ;sm_MenuConfiguration_MC50.c: 338:                 {;sm_MenuConfiguration_MC50.c: 341:  
      +                                             ResetDefaultMemory(var_sys_NVM.TypeofMotor);
  4852  002064  51C2               	movf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
  4853  002066  EC52  F031         	call	_ResetDefaultMemory
  4854                           
  4855                           ;sm_MenuConfiguration_MC50.c: 343:                 }
  4856  00206A  D021               	goto	l24029
  4857  00206C                     l24011:
  4858                           
  4859                           ; BSR set to: 1
  4860  00206C  0515               	decf	(_menu_st+21)& (0+255),w,b
  4861  00206E  B4D8               	btfsc	status,2,c
  4862  002070  D004               	goto	u29560
  4863                           
  4864                           ; BSR set to: 1
  4865  002072  0E0A               	movlw	10
  4866  002074  1915               	xorwf	(_menu_st+21)& (0+255),w,b
  4867  002076  A4D8               	btfss	status,2,c
  4868  002078  D004               	goto	l24017
  4869  00207A                     u29560:
  4870                           
  4871                           ; BSR set to: 1
  4872                           ;sm_MenuConfiguration_MC50.c: 345:                 {;sm_MenuConfiguration_MC50.c: 346:  
      +                                             SaveNVM_VarSystem(pageMemoryE);
  4873  00207A  0E01               	movlw	1
  4874  00207C  EC7F  F048         	call	_SaveNVM_VarSystem
  4875                           
  4876                           ;sm_MenuConfiguration_MC50.c: 347:                 }
  4877  002080  D016               	goto	l24029
  4878  002082                     l24017:
  4879                           
  4880                           ; BSR set to: 1
  4881                           ;sm_MenuConfiguration_MC50.c: 349:                 {;sm_MenuConfiguration_MC50.c: 350:  
      +                                             if (menu_st.parameterSelected == 1 && edit_Param.Value[0] >=1 && menu
      +                          _st.actualMenu == P2_SMenu )
  4882  002082  0517               	decf	(_menu_st+23)& (0+255),w,b
  4883  002084  A4D8               	btfss	status,2,c
  4884  002086  D00D               	goto	l24025
  4885                           
  4886                           ; BSR set to: 1
  4887  002088  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4888  00208C  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4889  002090  50DF               	movf	indf2,w,c
  4890  002092  B4D8               	btfsc	status,2,c
  4891  002094  D006               	goto	l24025
  4892                           
  4893                           ; BSR set to: 1
  4894  002096  0E06               	movlw	6
  4895  002098  1915               	xorwf	(_menu_st+21)& (0+255),w,b
  4896  00209A  A4D8               	btfss	status,2,c
  4897  00209C  D002               	goto	l24025
  4898                           
  4899                           ; BSR set to: 1
  4900                           ;sm_MenuConfiguration_MC50.c: 351:                     {;sm_MenuConfiguration_MC50.c: 35
      +                          2:                       var_sys_NVM.motorPower = 9;
  4901  00209E  0E09               	movlw	9
  4902  0020A0  6FA8               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
  4903  0020A2                     l24025:
  4904                           
  4905                           ; BSR set to: 1
  4906                           ;sm_MenuConfiguration_MC50.c: 355:                       SaveNVM_VarSystem(pageMemoryE);
  4907  0020A2  0E01               	movlw	1
  4908  0020A4  EC7F  F048         	call	_SaveNVM_VarSystem
  4909                           
  4910                           ;sm_MenuConfiguration_MC50.c: 356:                       SaveNVM_VarSystem(pageMemoryP);
  4911  0020A8  0E00               	movlw	0
  4912  0020AA  EC7F  F048         	call	_SaveNVM_VarSystem
  4913  0020AE                     l24029:
  4914                           
  4915                           ;sm_MenuConfiguration_MC50.c: 360:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4916  0020AE  0EBD               	movlw	low _menuConfiguration_stateMachine
  4917  0020B0  6E12               	movwf	sm_send_event@psm^0,c
  4918  0020B2  0E02               	movlw	high _menuConfiguration_stateMachine
  4919  0020B4  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4920  0020B6  0E00               	movlw	0
  4921  0020B8  6E15               	movwf	(sm_send_event@event+1)^0,c
  4922  0020BA  0E04               	movlw	4
  4923  0020BC  6E14               	movwf	sm_send_event@event^0,c
  4924  0020BE  ECE8  F045         	call	_sm_send_event	;wreg free
  4925                           
  4926                           ;sm_MenuConfiguration_MC50.c: 363:                 menu_st.parameterSelected++;
  4927  0020C2  0101               	movlb	1	; () banked
  4928  0020C4  2B17               	incf	(_menu_st+23)& (0+255),f,b
  4929                           
  4930                           ; BSR set to: 1
  4931                           ;sm_MenuConfiguration_MC50.c: 364:                 if(menu_st.actualMenu<=E_Menu)
  4932  0020C6  0E02               	movlw	2
  4933  0020C8  6115               	cpfslt	(_menu_st+21)& (0+255),b
  4934  0020CA  D005               	goto	l24039
  4935                           
  4936                           ; BSR set to: 1
  4937                           ;sm_MenuConfiguration_MC50.c: 365:                 {;sm_MenuConfiguration_MC50.c: 366:  
      +                                             menu_st.lastMainParameterSelected++;
  4938  0020CC  2B18               	incf	(_menu_st+24)& (0+255),f,b
  4939                           
  4940                           ; BSR set to: 1
  4941                           ;sm_MenuConfiguration_MC50.c: 367:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4942  0020CE  5115               	movf	(_menu_st+21)& (0+255),w,b
  4943  0020D0  EC91  F021         	call	_load_New_Menu
  4944                           
  4945                           ;sm_MenuConfiguration_MC50.c: 368:                 }
  4946  0020D4  0012               	return	
  4947  0020D6                     l24039:
  4948                           
  4949                           ; BSR set to: 1
  4950  0020D6  5116               	movf	(_menu_st+22)& (0+255),w,b
  4951  0020D8  5D17               	subwf	(_menu_st+23)& (0+255),w,b
  4952  0020DA  A0D8               	btfss	status,0,c
  4953  0020DC  D005               	goto	l24045
  4954                           
  4955                           ; BSR set to: 1
  4956                           ;sm_MenuConfiguration_MC50.c: 370:                 {;sm_MenuConfiguration_MC50.c: 371:  
      +                                             menu_st.lastMainParameterSelected++;
  4957  0020DE  2B18               	incf	(_menu_st+24)& (0+255),f,b
  4958                           
  4959                           ; BSR set to: 1
  4960                           ;sm_MenuConfiguration_MC50.c: 372:                     load_New_Menu(menu_st.lastMenu);
  4961  0020E0  5114               	movf	(_menu_st+20)& (0+255),w,b
  4962  0020E2  EC91  F021         	call	_load_New_Menu
  4963                           
  4964                           ;sm_MenuConfiguration_MC50.c: 373:                 }
  4965  0020E6  0012               	return	
  4966  0020E8                     l24045:
  4967                           
  4968                           ; BSR set to: 1
  4969                           ;sm_MenuConfiguration_MC50.c: 375:                 {;sm_MenuConfiguration_MC50.c: 376:  
      +                                             load_New_Menu(menu_st.actualMenu);
  4970  0020E8  5115               	movf	(_menu_st+21)& (0+255),w,b
  4971  0020EA  EC91  F021         	call	_load_New_Menu
  4972  0020EE  0012               	return	
  4973  0020F0                     l24047:
  4974                           
  4975                           ; BSR set to: 0
  4976                           ;sm_MenuConfiguration_MC50.c: 382:         {;sm_MenuConfiguration_MC50.c: 383:          
      +                             if(ts_system.timeoutMenu<=0)
  4977  0020F0  BF9E               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4978  0020F2  D005               	goto	u29620
  4979  0020F4  519E               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4980  0020F6  E102               	bnz	u29621
  4981  0020F8  059D               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4982  0020FA  B0D8               	btfsc	status,0,c
  4983  0020FC                     u29621:
  4984  0020FC  0012               	return	
  4985  0020FE                     u29620:
  4986                           
  4987                           ; BSR set to: 0
  4988                           ;sm_MenuConfiguration_MC50.c: 384:             {;sm_MenuConfiguration_MC50.c: 386:      
      +                                     if(auxCounter<=0){
  4989  0020FE  51FC               	movf	_auxCounter& (0+255),w,b
  4990  002100  11FD               	iorwf	(_auxCounter+1)& (0+255),w,b
  4991  002102  A4D8               	btfss	status,2,c
  4992  002104  D010               	goto	l24057
  4993                           
  4994                           ; BSR set to: 0
  4995                           ;sm_MenuConfiguration_MC50.c: 387:                     menu_st.lastMainParameterSelected
      +                          ++;
  4996  002106  0101               	movlb	1	; () banked
  4997  002108  2B18               	incf	(_menu_st+24)& (0+255),f,b
  4998                           
  4999                           ; BSR set to: 1
  5000                           ;sm_MenuConfiguration_MC50.c: 388:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  5001  00210A  5115               	movf	(_menu_st+21)& (0+255),w,b
  5002  00210C  EC91  F021         	call	_load_New_Menu
  5003                           
  5004                           ;sm_MenuConfiguration_MC50.c: 389:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_ParameterIsSaved);
  5005  002110  0EBD               	movlw	low _menuConfiguration_stateMachine
  5006  002112  6E12               	movwf	sm_send_event@psm^0,c
  5007  002114  0E02               	movlw	high _menuConfiguration_stateMachine
  5008  002116  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5009  002118  0E00               	movlw	0
  5010  00211A  6E15               	movwf	(sm_send_event@event+1)^0,c
  5011  00211C  0E04               	movlw	4
  5012  00211E  6E14               	movwf	sm_send_event@event^0,c
  5013  002120  ECE8  F045         	call	_sm_send_event	;wreg free
  5014                           
  5015                           ;sm_MenuConfiguration_MC50.c: 390:                 }
  5016  002124  0012               	return	
  5017  002126                     l24057:
  5018                           
  5019                           ; BSR set to: 0
  5020                           ;sm_MenuConfiguration_MC50.c: 392:                 {;sm_MenuConfiguration_MC50.c: 393:  
      +                                             ts_system.timeoutMenu=(1000/50)*3;
  5021  002126  0E00               	movlw	0
  5022  002128  6F9E               	movwf	(_ts_system+15)& (0+255),b	;volatile
  5023  00212A  0E3C               	movlw	60
  5024  00212C  6F9D               	movwf	(_ts_system+14)& (0+255),b	;volatile
  5025                           
  5026                           ; BSR set to: 0
  5027                           ;sm_MenuConfiguration_MC50.c: 394:                     edit_Param.tempValue=(unsigned ch
      +                          ar)(tempCounter/auxCounter);
  5028  00212E  C2F6  F010         	movff	_tempCounter,___lldiv@dividend
  5029  002132  C2F7  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  5030  002136  C2F8  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  5031  00213A  C2F9  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  5032  00213E  C0FC  F014         	movff	_auxCounter,___lldiv@divisor
  5033  002142  C0FD  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  5034  002146  6A16               	clrf	(___lldiv@divisor+2)^0,c
  5035  002148  6A17               	clrf	(___lldiv@divisor+3)^0,c
  5036  00214A  EC53  F041         	call	___lldiv	;wreg free
  5037  00214E  5010               	movf	?___lldiv^0,w,c
  5038  002150  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5039                           
  5040                           ;sm_MenuConfiguration_MC50.c: 395:                     tempCounter=tempCounter-(tempCoun
      +                          ter/auxCounter*auxCounter);
  5041  002152  C0FC  F014         	movff	_auxCounter,___lldiv@divisor
  5042  002156  C0FD  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  5043  00215A  6A16               	clrf	(___lldiv@divisor+2)^0,c
  5044  00215C  6A17               	clrf	(___lldiv@divisor+3)^0,c
  5045  00215E  C2F6  F010         	movff	_tempCounter,___lldiv@dividend
  5046  002162  C2F7  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  5047  002166  C2F8  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  5048  00216A  C2F9  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  5049  00216E  EC53  F041         	call	___lldiv	;wreg free
  5050  002172  C010  F01D         	movff	?___lldiv,___lmul@multiplier
  5051  002176  C011  F01E         	movff	?___lldiv+1,___lmul@multiplier+1
  5052  00217A  C012  F01F         	movff	?___lldiv+2,___lmul@multiplier+2
  5053  00217E  C013  F020         	movff	?___lldiv+3,___lmul@multiplier+3
  5054  002182  C0FC  F021         	movff	_auxCounter,___lmul@multiplicand
  5055  002186  C0FD  F022         	movff	_auxCounter+1,___lmul@multiplicand+1
  5056  00218A  6A23               	clrf	(___lmul@multiplicand+2)^0,c
  5057  00218C  6A24               	clrf	(___lmul@multiplicand+3)^0,c
  5058  00218E  ECC8  F046         	call	___lmul	;wreg free
  5059  002192  501D               	movf	?___lmul^0,w,c
  5060  002194  0102               	movlb	2	; () banked
  5061  002196  5DF6               	subwf	_tempCounter& (0+255),w,b
  5062  002198  6FF6               	movwf	_tempCounter& (0+255),b
  5063  00219A  501E               	movf	(?___lmul+1)^0,w,c
  5064  00219C  59F7               	subwfb	(_tempCounter+1)& (0+255),w,b
  5065  00219E  6FF7               	movwf	(_tempCounter+1)& (0+255),b
  5066  0021A0  501F               	movf	(?___lmul+2)^0,w,c
  5067  0021A2  59F8               	subwfb	(_tempCounter+2)& (0+255),w,b
  5068  0021A4  6FF8               	movwf	(_tempCounter+2)& (0+255),b
  5069  0021A6  5020               	movf	(?___lmul+3)^0,w,c
  5070  0021A8  59F9               	subwfb	(_tempCounter+3)& (0+255),w,b
  5071  0021AA  6FF9               	movwf	(_tempCounter+3)& (0+255),b
  5072                           
  5073                           ; BSR set to: 2
  5074                           ;sm_MenuConfiguration_MC50.c: 396:                     auxCounter=auxCounter/100;
  5075  0021AC  C0FC  F010         	movff	_auxCounter,___lwdiv@dividend
  5076  0021B0  C0FD  F011         	movff	_auxCounter+1,___lwdiv@dividend+1
  5077  0021B4  0E00               	movlw	0
  5078  0021B6  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  5079  0021B8  0E64               	movlw	100
  5080  0021BA  6E12               	movwf	___lwdiv@divisor^0,c
  5081  0021BC  EC48  F047         	call	___lwdiv	;wreg free
  5082  0021C0  C010  F0FC         	movff	?___lwdiv,_auxCounter
  5083  0021C4  C011  F0FD         	movff	?___lwdiv+1,_auxCounter+1
  5084                           
  5085                           ;sm_MenuConfiguration_MC50.c: 397:                     SetSegmentValueIntermitentMain(ed
      +                          it_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),( 500/50));
  5086  0021C8  0E0A               	movlw	10
  5087  0021CA  6E10               	movwf	___lbdiv@divisor^0,c
  5088  0021CC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  5089  0021CE  ECC7  F049         	call	___lbdiv
  5090  0021D2  0DF6               	mullw	246
  5091  0021D4  50F3               	movf	243,w,c
  5092  0021D6  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  5093  0021D8  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  5094  0021DA  0E00               	movlw	0
  5095  0021DC  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  5096  0021DE  0E0A               	movlw	10
  5097  0021E0  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  5098  0021E2  0E0A               	movlw	10
  5099  0021E4  6E10               	movwf	___lbdiv@divisor^0,c
  5100  0021E6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  5101  0021E8  ECC7  F049         	call	___lbdiv
  5102  0021EC  EC4F  F04D         	call	_SetSegmentValueIntermitentMain
  5103  0021F0  0012               	return	
  5104  0021F2                     l24067:
  5105                           
  5106                           ; BSR set to: 0
  5107                           ;sm_MenuConfiguration_MC50.c: 403:         {;sm_MenuConfiguration_MC50.c: 404:          
      +                             if(firstselectflag==1){
  5108  0021F2  0101               	movlb	1	; () banked
  5109  0021F4  05FE               	decf	_firstselectflag& (0+255),w,b
  5110  0021F6  A4D8               	btfss	status,2,c
  5111  0021F8  D004               	goto	l24071
  5112                           
  5113                           ; BSR set to: 1
  5114                           ;sm_MenuConfiguration_MC50.c: 405:                 edit_Param.tempValue=0;
  5115  0021FA  0E00               	movlw	0
  5116  0021FC  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5117                           
  5118                           ;sm_MenuConfiguration_MC50.c: 406:                 firstselectflag=0;
  5119  0021FE  0E00               	movlw	0
  5120  002200  6FFE               	movwf	_firstselectflag& (0+255),b
  5121  002202                     l24071:
  5122                           
  5123                           ; BSR set to: 1
  5124                           ;sm_MenuConfiguration_MC50.c: 408:             controlSelectRemote();
  5125  002202  EC6D  F01C         	call	_controlSelectRemote	;wreg free
  5126                           
  5127                           ;sm_MenuConfiguration_MC50.c: 409:         };sm_MenuConfiguration_MC50.c: 410:         b
      +                          reak;
  5128  002206  0012               	return	
  5129  002208                     l24073:
  5130                           
  5131                           ; BSR set to: 0
  5132                           ;sm_MenuConfiguration_MC50.c: 412:         {;sm_MenuConfiguration_MC50.c: 413:          
      +                             controlSaveRemote();
  5133  002208  EC07  F03D         	call	_controlSaveRemote	;wreg free
  5134                           
  5135                           ;sm_MenuConfiguration_MC50.c: 414:         };sm_MenuConfiguration_MC50.c: 415:         b
      +                          reak;
  5136  00220C  0012               	return	
  5137  00220E                     l24075:
  5138                           
  5139                           ; BSR set to: 0
  5140                           ;sm_MenuConfiguration_MC50.c: 417:         {;sm_MenuConfiguration_MC50.c: 418:          
      +                             controlLearnDigit();
  5141  00220E  EC49  F04A         	call	_controlLearnDigit	;wreg free
  5142                           
  5143                           ; BSR set to: 0
  5144                           ;sm_MenuConfiguration_MC50.c: 419:             if(var_sys.LearningIsEnabled==NO)
  5145  002212  0101               	movlb	1	; () banked
  5146  002214  517B               	movf	(_var_sys+38)& (0+255),w,b	;volatile
  5147  002216  A4D8               	btfss	status,2,c
  5148  002218  0012               	return	
  5149                           
  5150                           ; BSR set to: 1
  5151                           ;sm_MenuConfiguration_MC50.c: 420:             {;sm_MenuConfiguration_MC50.c: 421:      
      +                                     sm_send_event(&main_stateMachine, ev_goto_StandBy);
  5152  00221A  0EF1               	movlw	low _main_stateMachine
  5153  00221C  6E12               	movwf	sm_send_event@psm^0,c
  5154  00221E  0E01               	movlw	high _main_stateMachine
  5155  002220  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5156  002222  0E00               	movlw	0
  5157  002224  6E15               	movwf	(sm_send_event@event+1)^0,c
  5158  002226  0E07               	movlw	7
  5159  002228  6E14               	movwf	sm_send_event@event^0,c
  5160  00222A  ECE8  F045         	call	_sm_send_event	;wreg free
  5161                           
  5162                           ;sm_MenuConfiguration_MC50.c: 422:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  5163  00222E  0EBD               	movlw	low _menuConfiguration_stateMachine
  5164  002230  6E12               	movwf	sm_send_event@psm^0,c
  5165  002232  0E02               	movlw	high _menuConfiguration_stateMachine
  5166  002234  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5167  002236  0E00               	movlw	0
  5168  002238  6E15               	movwf	(sm_send_event@event+1)^0,c
  5169  00223A  0E04               	movlw	4
  5170  00223C  6E14               	movwf	sm_send_event@event^0,c
  5171  00223E  ECE8  F045         	call	_sm_send_event	;wreg free
  5172                           
  5173                           ;sm_MenuConfiguration_MC50.c: 423:                 SetSegmentValueMain(dMinus,dMinus);
  5174  002242  0E18               	movlw	24
  5175  002244  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  5176  002246  0E18               	movlw	24
  5177  002248  ECA9  F04C         	call	_SetSegmentValueMain
  5178                           
  5179                           ; BSR set to: 0
  5180                           ;sm_MenuConfiguration_MC50.c: 424:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  5181  00224C  0E02               	movlw	2
  5182  00224E  EC7F  F048         	call	_SaveNVM_VarSystem
  5183  002252  D5FE               	goto	l23913
  5184  002254                     l24091:
  5185  002254  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  5186  002258  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  5187  00225C  50DF               	movf	indf2,w,c
  5188  00225E  0100               	movlb	0	; () banked
  5189  002260  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  5190  002262  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  5191                           
  5192                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5193                           ; Switch size 1, requested type "simple"
  5194                           ; Number of cases is 1, Range of values is 0 to 0
  5195                           ; switch strategies available:
  5196                           ; Name         Instructions Cycles
  5197                           ; simple_byte            4     3 (average)
  5198                           ;	Chosen strategy is simple_byte
  5199  002264  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  5200  002266  0A00               	xorlw	0	; case 0
  5201  002268  A4D8               	btfss	status,2,c
  5202  00226A  0012               	return	
  5203                           
  5204                           ; BSR set to: 0
  5205                           ; Switch size 1, requested type "simple"
  5206                           ; Number of cases is 7, Range of values is 0 to 6
  5207                           ; switch strategies available:
  5208                           ; Name         Instructions Cycles
  5209                           ; simple_byte           22    12 (average)
  5210                           ;	Chosen strategy is simple_byte
  5211  00226C  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  5212  00226E  0A00               	xorlw	0	; case 0
  5213  002270  B4D8               	btfsc	status,2,c
  5214  002272  D437               	goto	l23781
  5215  002274  0A01               	xorlw	1	; case 1
  5216  002276  B4D8               	btfsc	status,2,c
  5217  002278  D612               	goto	l23931
  5218  00227A  0A03               	xorlw	3	; case 2
  5219  00227C  B4D8               	btfsc	status,2,c
  5220  00227E  D6D8               	goto	l23999
  5221  002280  0A01               	xorlw	1	; case 3
  5222  002282  B4D8               	btfsc	status,2,c
  5223  002284  D735               	goto	l24047
  5224  002286  0A07               	xorlw	7	; case 4
  5225  002288  B4D8               	btfsc	status,2,c
  5226  00228A  D7B3               	goto	l24067
  5227  00228C  0A01               	xorlw	1	; case 5
  5228  00228E  B4D8               	btfsc	status,2,c
  5229  002290  D7BB               	goto	l24073
  5230  002292  0A03               	xorlw	3	; case 6
  5231  002294  A4D8               	btfss	status,2,c
  5232  002296  0012               	return	
  5233  002298  D7BA               	goto	l24075
  5234  00229A                     __end_of_sm_execute_menuConfiguration:
  5235                           	callstack 0
  5236                           
  5237 ;; *************** function _setValueToEdit *****************
  5238 ;; Defined at:
  5239 ;;		line 648 in file "sm_MenuConfiguration_MC50.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;  menuType        1    wreg     enum E10813
  5242 ;;  ParameterSel    1    5[BANK0 ] unsigned char 
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;  menuType        1    8[BANK0 ] enum E10813
  5245 ;;  posindex        1   10[BANK0 ] unsigned char 
  5246 ;;  posindex        1    9[BANK0 ] unsigned char 
  5247 ;;  haveValueToE    1   11[BANK0 ] unsigned char 
  5248 ;; Return value:  Size  Location     Type
  5249 ;;                  1    wreg      unsigned char 
  5250 ;; Registers used:
  5251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5252 ;; Tracked objects:
  5253 ;;		On entry : 3F/1
  5254 ;;		On exit  : 3F/0
  5255 ;;		Unchanged: 0/0
  5256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5257 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5258 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5259 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5260 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5261 ;;Total ram usage:        7 bytes
  5262 ;; Hardware stack levels used: 1
  5263 ;; Hardware stack levels required when called: 14
  5264 ;; This function calls:
  5265 ;;		_InitReceiver
  5266 ;;		_SaveNVM_VarSystem
  5267 ;;		_cmdMemoryIsEmpty
  5268 ;;		_load_New_Menu
  5269 ;;		_sm_send_event
  5270 ;; This function is called by:
  5271 ;;		_sm_execute_menuConfiguration
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275                           	psect	text3
  5276  0029E2                     __ptext3:
  5277                           	callstack 0
  5278  0029E2                     _setValueToEdit:
  5279                           	callstack 14
  5280                           
  5281                           ;incstack = 0
  5282                           ;setValueToEdit@menuType stored from wreg
  5283  0029E2  0100               	movlb	0	; () banked
  5284  0029E4  6FE0               	movwf	setValueToEdit@menuType& (0+255),b
  5285                           
  5286                           ;sm_MenuConfiguration_MC50.c: 649:     char haveValueToEdit=0;
  5287  0029E6  0E00               	movlw	0
  5288  0029E8  0100               	movlb	0	; () banked
  5289  0029EA  6FE3               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5290                           
  5291                           ;sm_MenuConfiguration_MC50.c: 652:     switch (menuType)
  5292  0029EC  D29B               	goto	l21905
  5293  0029EE                     l3406:
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;sm_MenuConfiguration_MC50.c: 655:         {;sm_MenuConfiguration_MC50.c: 656:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  5297  0029EE  C117  F118         	movff	_menu_st+23,_menu_st+24
  5298                           
  5299                           ; BSR set to: 0
  5300                           ;sm_MenuConfiguration_MC50.c: 657:             edit_Param.Min=0;
  5301  0029F2  0E00               	movlw	0
  5302  0029F4  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5303                           
  5304                           ;sm_MenuConfiguration_MC50.c: 658:             switch (ParameterSelected)
  5305  0029F6  D03B               	goto	l21653
  5306  0029F8                     l21607:
  5307                           
  5308                           ; BSR set to: 0
  5309                           ;sm_MenuConfiguration_MC50.c: 661:                 {;sm_MenuConfiguration_MC50.c: 662:  
      +                                             load_New_Menu(P0_SMenu);
  5310  0029F8  0E04               	movlw	4
  5311  0029FA  EC91  F021         	call	_load_New_Menu
  5312                           
  5313                           ;sm_MenuConfiguration_MC50.c: 664:                 };sm_MenuConfiguration_MC50.c: 665:  
      +                                         break;
  5314  0029FE  D2BB               	goto	l21907
  5315  002A00                     l21609:
  5316                           
  5317                           ; BSR set to: 0
  5318                           ;sm_MenuConfiguration_MC50.c: 667:                 {;sm_MenuConfiguration_MC50.c: 668:  
      +                                             load_New_Menu(P1_SMenu);
  5319  002A00  0E05               	movlw	5
  5320  002A02  EC91  F021         	call	_load_New_Menu
  5321                           
  5322                           ;sm_MenuConfiguration_MC50.c: 669:                 };sm_MenuConfiguration_MC50.c: 670:  
      +                                         break;
  5323  002A06  D2B7               	goto	l21907
  5324  002A08                     l21611:
  5325                           
  5326                           ; BSR set to: 0
  5327                           ;sm_MenuConfiguration_MC50.c: 672:                 {;sm_MenuConfiguration_MC50.c: 673:  
      +                                             load_New_Menu(P2_SMenu);
  5328  002A08  0E06               	movlw	6
  5329  002A0A  EC91  F021         	call	_load_New_Menu
  5330                           
  5331                           ;sm_MenuConfiguration_MC50.c: 674:                 };sm_MenuConfiguration_MC50.c: 675:  
      +                                         break;
  5332  002A0E  D2B3               	goto	l21907
  5333  002A10                     l21613:
  5334                           
  5335                           ; BSR set to: 0
  5336                           ;sm_MenuConfiguration_MC50.c: 677:                 {;sm_MenuConfiguration_MC50.c: 678:  
      +                                             edit_Param.Max=99;
  5337  002A10  0E63               	movlw	99
  5338  002A12  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5339                           
  5340                           ; BSR set to: 0
  5341                           ;sm_MenuConfiguration_MC50.c: 680:                     edit_Param.tempValue=var_sys_NVM.
      +                          walkTime;
  5342  002A14  C1AA  F049         	movff	_var_sys_NVM+4,_edit_Param+3	;volatile
  5343                           
  5344                           ; BSR set to: 0
  5345                           ;sm_MenuConfiguration_MC50.c: 681:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.walkTime;
  5346  002A18  0EAA               	movlw	low (_var_sys_NVM+4)
  5347  002A1A  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5348  002A1C  0E01               	movlw	high (_var_sys_NVM+4)
  5349  002A1E                     L13:
  5350  002A1E  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  5351                           
  5352                           ; BSR set to: 0
  5353                           ;sm_MenuConfiguration_MC50.c: 682:                     haveValueToEdit=1;
  5354  002A20  0E01               	movlw	1
  5355  002A22  6FE3               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5356                           
  5357                           ;sm_MenuConfiguration_MC50.c: 683:                 };sm_MenuConfiguration_MC50.c: 684:  
      +                                         break;
  5358  002A24  D2A8               	goto	l21907
  5359  002A26                     l21621:
  5360                           
  5361                           ; BSR set to: 0
  5362                           ;sm_MenuConfiguration_MC50.c: 686:                 {;sm_MenuConfiguration_MC50.c: 687:  
      +                                             load_New_Menu(P4_SMenu);
  5363  002A26  0E07               	movlw	7
  5364  002A28  EC91  F021         	call	_load_New_Menu
  5365                           
  5366                           ;sm_MenuConfiguration_MC50.c: 688:                 };sm_MenuConfiguration_MC50.c: 689:  
      +                                         break;
  5367  002A2C  D2A4               	goto	l21907
  5368  002A2E                     l21623:
  5369                           
  5370                           ; BSR set to: 0
  5371                           ;sm_MenuConfiguration_MC50.c: 691:                 {;sm_MenuConfiguration_MC50.c: 692:  
      +                                             load_New_Menu(P5_SMenu);
  5372  002A2E  0E08               	movlw	8
  5373  002A30  EC91  F021         	call	_load_New_Menu
  5374                           
  5375                           ;sm_MenuConfiguration_MC50.c: 693:                 };sm_MenuConfiguration_MC50.c: 694:  
      +                                         break;
  5376  002A34  D2A0               	goto	l21907
  5377  002A36                     l21625:
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;sm_MenuConfiguration_MC50.c: 696:                 {;sm_MenuConfiguration_MC50.c: 697:  
      +                                             load_New_Menu(P6_SMenu);
  5381  002A36  0E09               	movlw	9
  5382  002A38  EC91  F021         	call	_load_New_Menu
  5383                           
  5384                           ;sm_MenuConfiguration_MC50.c: 698:                 };sm_MenuConfiguration_MC50.c: 699:  
      +                                         break;
  5385  002A3C  D29C               	goto	l21907
  5386  002A3E                     l21627:
  5387                           
  5388                           ; BSR set to: 0
  5389                           ;sm_MenuConfiguration_MC50.c: 701:                 {;sm_MenuConfiguration_MC50.c: 702:  
      +                                             edit_Param.Max=2;
  5390  002A3E  0E02               	movlw	2
  5391  002A40  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5392                           
  5393                           ; BSR set to: 0
  5394                           ;sm_MenuConfiguration_MC50.c: 704:                     edit_Param.tempValue=var_sys_NVM.
      +                          operationMode;
  5395  002A42  C1B2  F049         	movff	_var_sys_NVM+12,_edit_Param+3	;volatile
  5396                           
  5397                           ; BSR set to: 0
  5398                           ;sm_MenuConfiguration_MC50.c: 705:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.operationMode;
  5399  002A46  0EB2               	movlw	low (_var_sys_NVM+12)
  5400  002A48  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5401  002A4A  0E01               	movlw	high (_var_sys_NVM+12)
  5402  002A4C  D7E8               	goto	L13
  5403  002A4E                     l21635:
  5404                           
  5405                           ; BSR set to: 0
  5406                           ;sm_MenuConfiguration_MC50.c: 710:                 {;sm_MenuConfiguration_MC50.c: 711:  
      +                                             edit_Param.Max=3;
  5407  002A4E  0E03               	movlw	3
  5408  002A50  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5409                           
  5410                           ; BSR set to: 0
  5411                           ;sm_MenuConfiguration_MC50.c: 713:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashLightMode;
  5412  002A52  C1B3  F049         	movff	_var_sys_NVM+13,_edit_Param+3	;volatile
  5413                           
  5414                           ; BSR set to: 0
  5415                           ;sm_MenuConfiguration_MC50.c: 714:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashLightMode;
  5416  002A56  0EB3               	movlw	low (_var_sys_NVM+13)
  5417  002A58  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5418  002A5A  0E01               	movlw	high (_var_sys_NVM+13)
  5419  002A5C  D7E0               	goto	L13
  5420  002A5E                     l21643:
  5421                           
  5422                           ; BSR set to: 0
  5423                           ;sm_MenuConfiguration_MC50.c: 719:                 {;sm_MenuConfiguration_MC50.c: 720:  
      +                                             edit_Param.Max=1;
  5424  002A5E  0E01               	movlw	1
  5425  002A60  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5426                           
  5427                           ; BSR set to: 0
  5428                           ;sm_MenuConfiguration_MC50.c: 722:                     edit_Param.tempValue=var_sys_NVM.
      +                          programmingDistance;
  5429  002A62  C1B4  F049         	movff	_var_sys_NVM+14,_edit_Param+3	;volatile
  5430                           
  5431                           ; BSR set to: 0
  5432                           ;sm_MenuConfiguration_MC50.c: 723:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.programmingDistance;
  5433  002A66  0EB4               	movlw	low (_var_sys_NVM+14)
  5434  002A68  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5435  002A6A  0E01               	movlw	high (_var_sys_NVM+14)
  5436  002A6C  D7D8               	goto	L13
  5437  002A6E                     l21653:
  5438                           
  5439                           ; BSR set to: 0
  5440  002A6E  51DD               	movf	setValueToEdit@ParameterSelected& (0+255),w,b
  5441  002A70  6FDE               	movwf	??_setValueToEdit& (0+255),b
  5442  002A72  6BDF               	clrf	(??_setValueToEdit+1)& (0+255),b
  5443                           
  5444                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5445                           ; Switch size 1, requested type "simple"
  5446                           ; Number of cases is 1, Range of values is 0 to 0
  5447                           ; switch strategies available:
  5448                           ; Name         Instructions Cycles
  5449                           ; simple_byte            4     3 (average)
  5450                           ;	Chosen strategy is simple_byte
  5451  002A74  51DF               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5452  002A76  0A00               	xorlw	0	; case 0
  5453  002A78  A4D8               	btfss	status,2,c
  5454  002A7A  D27D               	goto	l21907
  5455                           
  5456                           ; BSR set to: 0
  5457                           ; Switch size 1, requested type "simple"
  5458                           ; Number of cases is 10, Range of values is 0 to 9
  5459                           ; switch strategies available:
  5460                           ; Name         Instructions Cycles
  5461                           ; simple_byte           31    16 (average)
  5462                           ;	Chosen strategy is simple_byte
  5463  002A7C  51DE               	movf	??_setValueToEdit& (0+255),w,b
  5464  002A7E  0A00               	xorlw	0	; case 0
  5465  002A80  B4D8               	btfsc	status,2,c
  5466  002A82  D7BA               	goto	l21607
  5467  002A84  0A01               	xorlw	1	; case 1
  5468  002A86  B4D8               	btfsc	status,2,c
  5469  002A88  D7BB               	goto	l21609
  5470  002A8A  0A03               	xorlw	3	; case 2
  5471  002A8C  B4D8               	btfsc	status,2,c
  5472  002A8E  D7BC               	goto	l21611
  5473  002A90  0A01               	xorlw	1	; case 3
  5474  002A92  B4D8               	btfsc	status,2,c
  5475  002A94  D7BD               	goto	l21613
  5476  002A96  0A07               	xorlw	7	; case 4
  5477  002A98  B4D8               	btfsc	status,2,c
  5478  002A9A  D7C5               	goto	l21621
  5479  002A9C  0A01               	xorlw	1	; case 5
  5480  002A9E  B4D8               	btfsc	status,2,c
  5481  002AA0  D7C6               	goto	l21623
  5482  002AA2  0A03               	xorlw	3	; case 6
  5483  002AA4  B4D8               	btfsc	status,2,c
  5484  002AA6  D7C7               	goto	l21625
  5485  002AA8  0A01               	xorlw	1	; case 7
  5486  002AAA  B4D8               	btfsc	status,2,c
  5487  002AAC  D7C8               	goto	l21627
  5488  002AAE  0A0F               	xorlw	15	; case 8
  5489  002AB0  B4D8               	btfsc	status,2,c
  5490  002AB2  D7CD               	goto	l21635
  5491  002AB4  0A01               	xorlw	1	; case 9
  5492  002AB6  B4D8               	btfsc	status,2,c
  5493  002AB8  D7D2               	goto	l21643
  5494  002ABA  D25D               	goto	l21907
  5495  002ABC                     l3420:
  5496                           
  5497                           ; BSR set to: 0
  5498                           ;sm_MenuConfiguration_MC50.c: 733:         {;sm_MenuConfiguration_MC50.c: 734:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  5499  002ABC  C117  F118         	movff	_menu_st+23,_menu_st+24
  5500                           
  5501                           ; BSR set to: 0
  5502                           ;sm_MenuConfiguration_MC50.c: 735:             edit_Param.Max=1;
  5503  002AC0  0E01               	movlw	1
  5504  002AC2  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5505                           
  5506                           ;sm_MenuConfiguration_MC50.c: 736:             edit_Param.Min=0;
  5507  002AC4  0E00               	movlw	0
  5508  002AC6  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5509                           
  5510                           ;sm_MenuConfiguration_MC50.c: 737:             switch (ParameterSelected)
  5511  002AC8  D05E               	goto	l21709
  5512  002ACA                     l21657:
  5513                           
  5514                           ; BSR set to: 0
  5515                           ;sm_MenuConfiguration_MC50.c: 740:                 {;sm_MenuConfiguration_MC50.c: 741:  
      +                                             load_New_Menu(E0_SMenu);
  5516  002ACA  0E0A               	movlw	10
  5517  002ACC  EC91  F021         	call	_load_New_Menu
  5518                           
  5519                           ;sm_MenuConfiguration_MC50.c: 742:                 };sm_MenuConfiguration_MC50.c: 743:  
      +                                         break;
  5520  002AD0  D252               	goto	l21907
  5521  002AD2                     l21659:
  5522                           
  5523                           ; BSR set to: 0
  5524                           ;sm_MenuConfiguration_MC50.c: 745:                 {;sm_MenuConfiguration_MC50.c: 748:  
      +                                             load_New_Menu(E1_SMenu);
  5525  002AD2  0E0B               	movlw	11
  5526  002AD4  EC91  F021         	call	_load_New_Menu
  5527                           
  5528                           ;sm_MenuConfiguration_MC50.c: 750:                 };sm_MenuConfiguration_MC50.c: 751:  
      +                                         break;
  5529  002AD8  D24E               	goto	l21907
  5530  002ADA                     l21661:
  5531                           
  5532                           ; BSR set to: 0
  5533                           ;sm_MenuConfiguration_MC50.c: 753:                 {;sm_MenuConfiguration_MC50.c: 754:  
      +                                             edit_Param.Max=99;
  5534  002ADA  0E63               	movlw	99
  5535  002ADC  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5536                           
  5537                           ; BSR set to: 0
  5538                           ;sm_MenuConfiguration_MC50.c: 756:                     edit_Param.tempValue=var_sys_NVM.
      +                          ligthTime;
  5539  002ADE  C1BA  F049         	movff	_var_sys_NVM+20,_edit_Param+3	;volatile
  5540                           
  5541                           ; BSR set to: 0
  5542                           ;sm_MenuConfiguration_MC50.c: 757:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.ligthTime;
  5543  002AE2  0EBA               	movlw	low (_var_sys_NVM+20)
  5544  002AE4  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5545  002AE6  0E01               	movlw	high (_var_sys_NVM+20)
  5546  002AE8  D79A               	goto	L13
  5547  002AEA                     l21669:
  5548                           
  5549                           ; BSR set to: 0
  5550                           ;sm_MenuConfiguration_MC50.c: 762:                 {;sm_MenuConfiguration_MC50.c: 763:  
      +                                            edit_Param.Max=9;
  5551  002AEA  0E09               	movlw	9
  5552  002AEC  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5553                           
  5554                           ;sm_MenuConfiguration_MC50.c: 764:                    edit_Param.Min=1;
  5555  002AEE  0E01               	movlw	1
  5556  002AF0  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5557                           
  5558                           ; BSR set to: 0
  5559                           ;sm_MenuConfiguration_MC50.c: 765:                    edit_Param.tempValue=var_sys_NVM.f
      +                          olow_me;
  5560  002AF2  C1BB  F049         	movff	_var_sys_NVM+21,_edit_Param+3	;volatile
  5561                           
  5562                           ; BSR set to: 0
  5563                           ;sm_MenuConfiguration_MC50.c: 766:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.folow_me;
  5564  002AF6  0EBB               	movlw	low (_var_sys_NVM+21)
  5565  002AF8  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5566  002AFA  0E01               	movlw	high (_var_sys_NVM+21)
  5567  002AFC  D790               	goto	L13
  5568  002AFE                     l3428:
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;sm_MenuConfiguration_MC50.c: 778:                 {;sm_MenuConfiguration_MC50.c: 779:  
      +                                            edit_Param.tempValue=var_sys_NVM.electricBrake;
  5572  002AFE  C1BD  F049         	movff	_var_sys_NVM+23,_edit_Param+3	;volatile
  5573                           
  5574                           ; BSR set to: 0
  5575                           ;sm_MenuConfiguration_MC50.c: 780:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.electricBrake;
  5576  002B02  0EBD               	movlw	low (_var_sys_NVM+23)
  5577  002B04  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5578  002B06  0E01               	movlw	high (_var_sys_NVM+23)
  5579  002B08  D78A               	goto	L13
  5580  002B0A                     l21681:
  5581                           
  5582                           ; BSR set to: 0
  5583                           ;sm_MenuConfiguration_MC50.c: 785:                 {;sm_MenuConfiguration_MC50.c: 786:  
      +                                             edit_Param.Max=9;
  5584  002B0A  0E09               	movlw	9
  5585  002B0C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5586                           
  5587                           ;sm_MenuConfiguration_MC50.c: 787:                     edit_Param.Min=1;
  5588  002B0E  0E01               	movlw	1
  5589  002B10  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;sm_MenuConfiguration_MC50.c: 788:                     edit_Param.tempValue=var_sys_NVM.
      +                          velocityDecelaration;
  5593  002B12  C1BE  F049         	movff	_var_sys_NVM+24,_edit_Param+3	;volatile
  5594                           
  5595                           ; BSR set to: 0
  5596                           ;sm_MenuConfiguration_MC50.c: 789:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.velocityDecelaration;
  5597  002B16  0EBE               	movlw	low (_var_sys_NVM+24)
  5598  002B18  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5599  002B1A  0E01               	movlw	high (_var_sys_NVM+24)
  5600  002B1C  D780               	goto	L13
  5601  002B1E                     l21689:
  5602                           
  5603                           ; BSR set to: 0
  5604                           ;sm_MenuConfiguration_MC50.c: 794:                 {;sm_MenuConfiguration_MC50.c: 795:  
      +                                             edit_Param.tempValue=0;
  5605  002B1E  0E00               	movlw	0
  5606  002B20  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5607                           
  5608                           ;sm_MenuConfiguration_MC50.c: 796:                     ts_system.timeoutMenu=0;
  5609  002B22  0E00               	movlw	0
  5610  002B24  6F9E               	movwf	(_ts_system+15)& (0+255),b	;volatile
  5611  002B26  0E00               	movlw	0
  5612  002B28  6F9D               	movwf	(_ts_system+14)& (0+255),b	;volatile
  5613                           
  5614                           ;sm_MenuConfiguration_MC50.c: 798:                     auxCounter=10000;
  5615  002B2A  0E27               	movlw	39
  5616  002B2C  6FFD               	movwf	(_auxCounter+1)& (0+255),b
  5617  002B2E  0E10               	movlw	16
  5618  002B30  6FFC               	movwf	_auxCounter& (0+255),b
  5619                           
  5620                           ;sm_MenuConfiguration_MC50.c: 799:                     ts_system.timeBetweenSaveCounters
      +                          =0;
  5621  002B32  0E00               	movlw	0
  5622  002B34  6FB6               	movwf	(_ts_system+39)& (0+255),b	;volatile
  5623  002B36  0E00               	movlw	0
  5624  002B38  6FB5               	movwf	(_ts_system+38)& (0+255),b	;volatile
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;sm_MenuConfiguration_MC50.c: 800:                     tempCounter=var_sys.actualCounter
      +                          Moves;
  5628  002B3A  C191  F2F6         	movff	_var_sys+60,_tempCounter	;volatile
  5629  002B3E  C192  F2F7         	movff	_var_sys+61,_tempCounter+1	;volatile
  5630  002B42  C193  F2F8         	movff	_var_sys+62,_tempCounter+2	;volatile
  5631  002B46  C194  F2F9         	movff	_var_sys+63,_tempCounter+3	;volatile
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;sm_MenuConfiguration_MC50.c: 801:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_showCounter);
  5635  002B4A  0EBD               	movlw	low _menuConfiguration_stateMachine
  5636  002B4C  6E12               	movwf	sm_send_event@psm^0,c
  5637  002B4E  0E02               	movlw	high _menuConfiguration_stateMachine
  5638  002B50  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5639  002B52  0E00               	movlw	0
  5640  002B54  6E15               	movwf	(sm_send_event@event+1)^0,c
  5641  002B56  0E05               	movlw	5
  5642  002B58  6E14               	movwf	sm_send_event@event^0,c
  5643  002B5A  ECE8  F045         	call	_sm_send_event	;wreg free
  5644                           
  5645                           ;sm_MenuConfiguration_MC50.c: 802:                 };sm_MenuConfiguration_MC50.c: 803:  
      +                                         break;
  5646  002B5E  D20B               	goto	l21907
  5647  002B60                     l21695:
  5648                           
  5649                           ; BSR set to: 0
  5650                           ;sm_MenuConfiguration_MC50.c: 805:                 {;sm_MenuConfiguration_MC50.c: 806:  
      +                                             edit_Param.tempValue=0;
  5651  002B60  0E00               	movlw	0
  5652  002B62  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5653                           
  5654                           ;sm_MenuConfiguration_MC50.c: 807:                     haveValueToEdit=1;
  5655  002B64  0E01               	movlw	1
  5656  002B66  6FE3               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5657                           
  5658                           ; BSR set to: 0
  5659                           ;sm_MenuConfiguration_MC50.c: 808:                     edit_Param.Value = 0;
  5660  002B68  0E00               	movlw	0
  5661  002B6A  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5662  002B6C  0E00               	movlw	0
  5663  002B6E  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  5664                           
  5665                           ;sm_MenuConfiguration_MC50.c: 809:                 };sm_MenuConfiguration_MC50.c: 810:  
      +                                         break;
  5666  002B70  D202               	goto	l21907
  5667  002B72                     l21699:
  5668                           
  5669                           ; BSR set to: 0
  5670                           ;sm_MenuConfiguration_MC50.c: 812:                 {;sm_MenuConfiguration_MC50.c: 813:  
      +                                             edit_Param.Max=3;
  5671  002B72  0E03               	movlw	3
  5672  002B74  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5673                           
  5674                           ;sm_MenuConfiguration_MC50.c: 814:                     edit_Param.Min=0;
  5675  002B76  0E00               	movlw	0
  5676  002B78  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5677                           
  5678                           ; BSR set to: 0
  5679                           ;sm_MenuConfiguration_MC50.c: 815:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashRGBMode;
  5680  002B7A  C1BF  F049         	movff	_var_sys_NVM+25,_edit_Param+3	;volatile
  5681                           
  5682                           ; BSR set to: 0
  5683                           ;sm_MenuConfiguration_MC50.c: 816:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashRGBMode;
  5684  002B7E  0EBF               	movlw	low (_var_sys_NVM+25)
  5685  002B80  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5686  002B82  0E01               	movlw	high (_var_sys_NVM+25)
  5687  002B84  D74C               	goto	L13
  5688  002B86                     l21709:
  5689                           
  5690                           ; BSR set to: 0
  5691  002B86  51DD               	movf	setValueToEdit@ParameterSelected& (0+255),w,b
  5692  002B88  6FDE               	movwf	??_setValueToEdit& (0+255),b
  5693  002B8A  6BDF               	clrf	(??_setValueToEdit+1)& (0+255),b
  5694                           
  5695                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5696                           ; Switch size 1, requested type "simple"
  5697                           ; Number of cases is 1, Range of values is 0 to 0
  5698                           ; switch strategies available:
  5699                           ; Name         Instructions Cycles
  5700                           ; simple_byte            4     3 (average)
  5701                           ;	Chosen strategy is simple_byte
  5702  002B8C  51DF               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5703  002B8E  0A00               	xorlw	0	; case 0
  5704  002B90  A4D8               	btfss	status,2,c
  5705  002B92  D1F1               	goto	l21907
  5706                           
  5707                           ; BSR set to: 0
  5708                           ; Switch size 1, requested type "simple"
  5709                           ; Number of cases is 10, Range of values is 0 to 9
  5710                           ; switch strategies available:
  5711                           ; Name         Instructions Cycles
  5712                           ; simple_byte           31    16 (average)
  5713                           ;	Chosen strategy is simple_byte
  5714  002B94  51DE               	movf	??_setValueToEdit& (0+255),w,b
  5715  002B96  0A00               	xorlw	0	; case 0
  5716  002B98  B4D8               	btfsc	status,2,c
  5717  002B9A  D797               	goto	l21657
  5718  002B9C  0A01               	xorlw	1	; case 1
  5719  002B9E  B4D8               	btfsc	status,2,c
  5720  002BA0  D798               	goto	l21659
  5721  002BA2  0A03               	xorlw	3	; case 2
  5722  002BA4  B4D8               	btfsc	status,2,c
  5723  002BA6  D799               	goto	l21661
  5724  002BA8  0A01               	xorlw	1	; case 3
  5725  002BAA  B4D8               	btfsc	status,2,c
  5726  002BAC  D79E               	goto	l21669
  5727  002BAE  0A07               	xorlw	7	; case 4
  5728  002BB0  B4D8               	btfsc	status,2,c
  5729  002BB2  D1E1               	goto	l21907
  5730  002BB4  0A01               	xorlw	1	; case 5
  5731  002BB6  B4D8               	btfsc	status,2,c
  5732  002BB8  D7A2               	goto	l3428
  5733  002BBA  0A03               	xorlw	3	; case 6
  5734  002BBC  B4D8               	btfsc	status,2,c
  5735  002BBE  D7A5               	goto	l21681
  5736  002BC0  0A01               	xorlw	1	; case 7
  5737  002BC2  B4D8               	btfsc	status,2,c
  5738  002BC4  D7AC               	goto	l21689
  5739  002BC6  0A0F               	xorlw	15	; case 8
  5740  002BC8  B4D8               	btfsc	status,2,c
  5741  002BCA  D7CA               	goto	l21695
  5742  002BCC  0A01               	xorlw	1	; case 9
  5743  002BCE  B4D8               	btfsc	status,2,c
  5744  002BD0  D7D0               	goto	l21699
  5745  002BD2  D1D1               	goto	l21907
  5746  002BD4                     l21711:
  5747                           
  5748                           ; BSR set to: 0
  5749                           ;sm_MenuConfiguration_MC50.c: 829:                 {;sm_MenuConfiguration_MC50.c: 830:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5750  002BD4  0EBD               	movlw	low _menuConfiguration_stateMachine
  5751  002BD6  6E12               	movwf	sm_send_event@psm^0,c
  5752  002BD8  0E02               	movlw	high _menuConfiguration_stateMachine
  5753  002BDA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5754  002BDC  0E00               	movlw	0
  5755  002BDE  6E15               	movwf	(sm_send_event@event+1)^0,c
  5756  002BE0  0E14               	movlw	20
  5757  002BE2  6E14               	movwf	sm_send_event@event^0,c
  5758  002BE4  ECE8  F045         	call	_sm_send_event	;wreg free
  5759                           
  5760                           ;sm_MenuConfiguration_MC50.c: 831:                  sm_send_event(&controlGate_stateMach
      +                          ine,ev_SartLearning );
  5761  002BE8  0EE6               	movlw	low _controlGate_stateMachine
  5762  002BEA  6E12               	movwf	sm_send_event@psm^0,c
  5763  002BEC  0E01               	movlw	high _controlGate_stateMachine
  5764  002BEE  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5765  002BF0  0E00               	movlw	0
  5766  002BF2  6E15               	movwf	(sm_send_event@event+1)^0,c
  5767  002BF4  0E14               	movlw	20
  5768  002BF6  6E14               	movwf	sm_send_event@event^0,c
  5769  002BF8  ECE8  F045         	call	_sm_send_event	;wreg free
  5770                           
  5771                           ;sm_MenuConfiguration_MC50.c: 832:                  var_sys.LearningIsEnabled=YES;
  5772  002BFC  0E01               	movlw	1
  5773  002BFE  0101               	movlb	1	; () banked
  5774  002C00  6F7B               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5775                           
  5776                           ; BSR set to: 1
  5777                           ;sm_MenuConfiguration_MC50.c: 833:                  var_sys.programinAutomatic = Automat
      +                          ic;
  5778  002C02  0E00               	movlw	0
  5779  002C04  6F7F               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5780                           
  5781                           ; BSR set to: 1
  5782                           ;sm_MenuConfiguration_MC50.c: 834:                  SaveNVM_VarSystem(pageMemoryE);
  5783  002C06  0E01               	movlw	1
  5784  002C08  EC7F  F048         	call	_SaveNVM_VarSystem
  5785                           
  5786                           ;sm_MenuConfiguration_MC50.c: 837:                 };sm_MenuConfiguration_MC50.c: 838:  
      +                                         break;
  5787  002C0C  D1B4               	goto	l21907
  5788  002C0E                     l21719:
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;sm_MenuConfiguration_MC50.c: 840:                 {;sm_MenuConfiguration_MC50.c: 841:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5792  002C0E  0EBD               	movlw	low _menuConfiguration_stateMachine
  5793  002C10  6E12               	movwf	sm_send_event@psm^0,c
  5794  002C12  0E02               	movlw	high _menuConfiguration_stateMachine
  5795  002C14  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5796  002C16  0E00               	movlw	0
  5797  002C18  6E15               	movwf	(sm_send_event@event+1)^0,c
  5798  002C1A  0E14               	movlw	20
  5799  002C1C  6E14               	movwf	sm_send_event@event^0,c
  5800  002C1E  ECE8  F045         	call	_sm_send_event	;wreg free
  5801                           
  5802                           ;sm_MenuConfiguration_MC50.c: 842:                  sm_send_event(&controlGate_stateMach
      +                          ine, ev_SartLearning);
  5803  002C22  0EE6               	movlw	low _controlGate_stateMachine
  5804  002C24  6E12               	movwf	sm_send_event@psm^0,c
  5805  002C26  0E01               	movlw	high _controlGate_stateMachine
  5806  002C28  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5807  002C2A  0E00               	movlw	0
  5808  002C2C  6E15               	movwf	(sm_send_event@event+1)^0,c
  5809  002C2E  0E14               	movlw	20
  5810  002C30  6E14               	movwf	sm_send_event@event^0,c
  5811  002C32  ECE8  F045         	call	_sm_send_event	;wreg free
  5812                           
  5813                           ;sm_MenuConfiguration_MC50.c: 843:                  var_sys.LearningIsEnabled=YES;
  5814  002C36  0E01               	movlw	1
  5815  002C38  0101               	movlb	1	; () banked
  5816  002C3A  6F7B               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5817                           
  5818                           ; BSR set to: 1
  5819                           ;sm_MenuConfiguration_MC50.c: 844:                  var_sys.programinAutomatic = Manual;
  5820  002C3C  0E01               	movlw	1
  5821  002C3E  6F7F               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5822                           
  5823                           ; BSR set to: 1
  5824                           ;sm_MenuConfiguration_MC50.c: 845:                  SaveNVM_VarSystem(pageMemoryE);
  5825  002C40  0E01               	movlw	1
  5826  002C42  EC7F  F048         	call	_SaveNVM_VarSystem
  5827                           
  5828                           ;sm_MenuConfiguration_MC50.c: 848:                 };sm_MenuConfiguration_MC50.c: 849:  
      +                                         break;
  5829  002C46  D197               	goto	l21907
  5830  002C48                     l3438:
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;sm_MenuConfiguration_MC50.c: 851:                 {;sm_MenuConfiguration_MC50.c: 852:  
      +                                          edit_Param.tempValue=var_sys_NVM.TypeofMotor;
  5834  002C48  C1C2  F049         	movff	_var_sys_NVM+28,_edit_Param+3	;volatile
  5835                           
  5836                           ; BSR set to: 0
  5837                           ;sm_MenuConfiguration_MC50.c: 853:                  load_New_Menu(TypeMotor_Menu);
  5838  002C4C  0E03               	movlw	3
  5839  002C4E  EC91  F021         	call	_load_New_Menu
  5840                           
  5841                           ;sm_MenuConfiguration_MC50.c: 854:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.TypeofMotor;
  5842  002C52  0EC2               	movlw	low (_var_sys_NVM+28)
  5843  002C54  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5844  002C56  0E01               	movlw	high (_var_sys_NVM+28)
  5845  002C58  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  5846                           
  5847                           ;sm_MenuConfiguration_MC50.c: 855:                  haveValueToEdit=1;
  5848  002C5A  0E01               	movlw	1
  5849  002C5C  0100               	movlb	0	; () banked
  5850  002C5E  6FE3               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5851                           
  5852                           ; BSR set to: 0
  5853                           ;sm_MenuConfiguration_MC50.c: 856:                  edit_Param.Max=2;
  5854  002C60  0E02               	movlw	2
  5855  002C62  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5856                           
  5857                           ; BSR set to: 0
  5858                           ;sm_MenuConfiguration_MC50.c: 857:                  edit_Param.Min=0;
  5859  002C64  0E00               	movlw	0
  5860  002C66  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5861                           
  5862                           ;sm_MenuConfiguration_MC50.c: 859:                 };sm_MenuConfiguration_MC50.c: 860:  
      +                                         break;
  5863  002C68  D186               	goto	l21907
  5864  002C6A                     l3439:
  5865                           
  5866                           ; BSR set to: 0
  5867                           ;sm_MenuConfiguration_MC50.c: 862:                 {;sm_MenuConfiguration_MC50.c: 863:  
      +                                          edit_Param.tempValue=var_sys_NVM.Direction_motor;
  5868  002C6A  C1C1  F049         	movff	_var_sys_NVM+27,_edit_Param+3	;volatile
  5869                           
  5870                           ; BSR set to: 0
  5871                           ;sm_MenuConfiguration_MC50.c: 864:                  load_New_Menu(Direction_Menu);
  5872  002C6E  0E02               	movlw	2
  5873  002C70  EC91  F021         	call	_load_New_Menu
  5874                           
  5875                           ;sm_MenuConfiguration_MC50.c: 865:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.Direction_motor;
  5876  002C74  0EC1               	movlw	low (_var_sys_NVM+27)
  5877  002C76  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5878  002C78  0E01               	movlw	high (_var_sys_NVM+27)
  5879  002C7A  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  5880                           
  5881                           ;sm_MenuConfiguration_MC50.c: 866:                  haveValueToEdit=1;
  5882  002C7C  0E01               	movlw	1
  5883  002C7E  0100               	movlb	0	; () banked
  5884  002C80  6FE3               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5885                           
  5886                           ; BSR set to: 0
  5887                           ;sm_MenuConfiguration_MC50.c: 867:                  edit_Param.Max=1;
  5888  002C82  0E01               	movlw	1
  5889  002C84  D7EE               	goto	L14
  5890  002C86                     l21749:
  5891                           
  5892                           ; BSR set to: 0
  5893  002C86  51DD               	movf	setValueToEdit@ParameterSelected& (0+255),w,b
  5894  002C88  6FDE               	movwf	??_setValueToEdit& (0+255),b
  5895  002C8A  6BDF               	clrf	(??_setValueToEdit+1)& (0+255),b
  5896                           
  5897                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5898                           ; Switch size 1, requested type "simple"
  5899                           ; Number of cases is 1, Range of values is 0 to 0
  5900                           ; switch strategies available:
  5901                           ; Name         Instructions Cycles
  5902                           ; simple_byte            4     3 (average)
  5903                           ;	Chosen strategy is simple_byte
  5904  002C8C  51DF               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5905  002C8E  0A00               	xorlw	0	; case 0
  5906  002C90  A4D8               	btfss	status,2,c
  5907  002C92  D171               	goto	l21907
  5908                           
  5909                           ; BSR set to: 0
  5910                           ; Switch size 1, requested type "simple"
  5911                           ; Number of cases is 4, Range of values is 0 to 3
  5912                           ; switch strategies available:
  5913                           ; Name         Instructions Cycles
  5914                           ; simple_byte           13     7 (average)
  5915                           ;	Chosen strategy is simple_byte
  5916  002C94  51DE               	movf	??_setValueToEdit& (0+255),w,b
  5917  002C96  0A00               	xorlw	0	; case 0
  5918  002C98  B4D8               	btfsc	status,2,c
  5919  002C9A  D79C               	goto	l21711
  5920  002C9C  0A01               	xorlw	1	; case 1
  5921  002C9E  B4D8               	btfsc	status,2,c
  5922  002CA0  D7B6               	goto	l21719
  5923  002CA2  0A03               	xorlw	3	; case 2
  5924  002CA4  B4D8               	btfsc	status,2,c
  5925  002CA6  D7D0               	goto	l3438
  5926  002CA8  0A01               	xorlw	1	; case 3
  5927  002CAA  B4D8               	btfsc	status,2,c
  5928  002CAC  D7DE               	goto	l3439
  5929  002CAE  D163               	goto	l21907
  5930  002CB0                     l21751:
  5931                           
  5932                           ; BSR set to: 0
  5933                           ;sm_MenuConfiguration_MC50.c: 883:                 {;sm_MenuConfiguration_MC50.c: 884:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationOpen;
  5934  002CB0  0EA6               	movlw	low _var_sys_NVM
  5935  002CB2  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5936  002CB4  0E01               	movlw	high _var_sys_NVM
  5937  002CB6  D003               	goto	L15
  5938  002CB8                     l21753:
  5939                           
  5940                           ; BSR set to: 0
  5941                           ;sm_MenuConfiguration_MC50.c: 888:                 {;sm_MenuConfiguration_MC50.c: 889:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationClose;
  5942  002CB8  0EA7               	movlw	low (_var_sys_NVM+1)
  5943  002CBA  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5944  002CBC  0E01               	movlw	high (_var_sys_NVM+1)
  5945  002CBE                     L15:
  5946  002CBE  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  5947                           
  5948                           ;sm_MenuConfiguration_MC50.c: 890:                 };sm_MenuConfiguration_MC50.c: 891:  
      +                                         break;
  5949  002CC0  D00E               	goto	l21759
  5950  002CC2                     l21757:
  5951                           
  5952                           ; BSR set to: 0
  5953  002CC2  51DD               	movf	setValueToEdit@ParameterSelected& (0+255),w,b
  5954  002CC4  6FDE               	movwf	??_setValueToEdit& (0+255),b
  5955  002CC6  6BDF               	clrf	(??_setValueToEdit+1)& (0+255),b
  5956                           
  5957                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5958                           ; Switch size 1, requested type "simple"
  5959                           ; Number of cases is 1, Range of values is 0 to 0
  5960                           ; switch strategies available:
  5961                           ; Name         Instructions Cycles
  5962                           ; simple_byte            4     3 (average)
  5963                           ;	Chosen strategy is simple_byte
  5964  002CC8  51DF               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5965  002CCA  0A00               	xorlw	0	; case 0
  5966  002CCC  A4D8               	btfss	status,2,c
  5967  002CCE  D007               	goto	l21759
  5968                           
  5969                           ; BSR set to: 0
  5970                           ; Switch size 1, requested type "simple"
  5971                           ; Number of cases is 2, Range of values is 0 to 1
  5972                           ; switch strategies available:
  5973                           ; Name         Instructions Cycles
  5974                           ; simple_byte            7     4 (average)
  5975                           ;	Chosen strategy is simple_byte
  5976  002CD0  51DE               	movf	??_setValueToEdit& (0+255),w,b
  5977  002CD2  0A00               	xorlw	0	; case 0
  5978  002CD4  B4D8               	btfsc	status,2,c
  5979  002CD6  D7EC               	goto	l21751
  5980  002CD8  0A01               	xorlw	1	; case 1
  5981  002CDA  B4D8               	btfsc	status,2,c
  5982  002CDC  D7ED               	goto	l21753
  5983  002CDE                     l21759:
  5984                           
  5985                           ; BSR set to: 0
  5986                           ;sm_MenuConfiguration_MC50.c: 895:                 edit_Param.Max=45;
  5987  002CDE  0E2D               	movlw	45
  5988  002CE0                     L29:
  5989  002CE0  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5990                           
  5991                           ;sm_MenuConfiguration_MC50.c: 896:                 edit_Param.Min=0;
  5992  002CE2  0E00               	movlw	0
  5993  002CE4  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5994                           
  5995                           ;sm_MenuConfiguration_MC50.c: 899:             haveValueToEdit=1;
  5996  002CE6  0E01               	movlw	1
  5997  002CE8                     L19:
  5998  002CE8  6FE3               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5999                           
  6000                           ; BSR set to: 0
  6001                           ;sm_MenuConfiguration_MC50.c: 900:             edit_Param.tempValue= edit_Param.Value[0]
      +                          ;
  6002  002CEA  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6003  002CEE  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6004  002CF2  50DF               	movf	indf2,w,c
  6005  002CF4  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  6006                           
  6007                           ;sm_MenuConfiguration_MC50.c: 901:         };sm_MenuConfiguration_MC50.c: 902:         b
      +                          reak;
  6008  002CF6  D13F               	goto	l21907
  6009  002CF8                     l21763:
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;sm_MenuConfiguration_MC50.c: 904:         {;sm_MenuConfiguration_MC50.c: 905:          
      +                             edit_Param.Max=9;
  6013  002CF8  0E09               	movlw	9
  6014  002CFA  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  6015                           
  6016                           ;sm_MenuConfiguration_MC50.c: 906:             edit_Param.Min=0;
  6017  002CFC  0E00               	movlw	0
  6018  002CFE  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  6019                           
  6020                           ;sm_MenuConfiguration_MC50.c: 907:             switch (ParameterSelected)
  6021  002D00  D015               	goto	l21779
  6022  002D02                     l21765:
  6023                           
  6024                           ; BSR set to: 0
  6025                           ;sm_MenuConfiguration_MC50.c: 910:                 {;sm_MenuConfiguration_MC50.c: 911:  
      +                                               if (var_sys_NVM.motorSensitivity <2)
  6026  002D02  0E02               	movlw	2
  6027  002D04  0101               	movlb	1	; () banked
  6028  002D06  61A9               	cpfslt	(_var_sys_NVM+3)& (0+255),b	;volatile
  6029  002D08  D002               	goto	l21769
  6030                           
  6031                           ; BSR set to: 1
  6032                           ;sm_MenuConfiguration_MC50.c: 912:                       {;sm_MenuConfiguration_MC50.c: 
      +                          913:                         edit_Param.Min=0;
  6033  002D0A  0E00               	movlw	0
  6034  002D0C  D001               	goto	L16
  6035  002D0E                     l21769:
  6036                           
  6037                           ; BSR set to: 1
  6038                           ;sm_MenuConfiguration_MC50.c: 916:                       {;sm_MenuConfiguration_MC50.c: 
      +                          917:                         edit_Param.Min=9;
  6039  002D0E  0E09               	movlw	9
  6040  002D10                     L16:
  6041  002D10  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  6042                           
  6043                           ; BSR set to: 1
  6044                           ;sm_MenuConfiguration_MC50.c: 919:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.motorPower;
  6045  002D12  0EA8               	movlw	low (_var_sys_NVM+2)
  6046  002D14  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6047  002D16  0E01               	movlw	high (_var_sys_NVM+2)
  6048  002D18  D007               	goto	L18
  6049  002D1A                     l21773:
  6050                           
  6051                           ; BSR set to: 0
  6052                           ;sm_MenuConfiguration_MC50.c: 923:                 {;sm_MenuConfiguration_MC50.c: 924:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.motorSensitivity;
  6053  002D1A  0EA9               	movlw	low (_var_sys_NVM+3)
  6054  002D1C  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6055  002D1E  0E01               	movlw	high (_var_sys_NVM+3)
  6056  002D20  D003               	goto	L18
  6057  002D22                     l21775:
  6058                           
  6059                           ; BSR set to: 0
  6060                           ;sm_MenuConfiguration_MC50.c: 928:                 {;sm_MenuConfiguration_MC50.c: 929:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationSensivity;
  6061  002D22  0EB5               	movlw	low (_var_sys_NVM+15)
  6062  002D24  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6063  002D26  0E01               	movlw	high (_var_sys_NVM+15)
  6064  002D28                     L18:
  6065  002D28  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  6066                           
  6067                           ;sm_MenuConfiguration_MC50.c: 930:                 };sm_MenuConfiguration_MC50.c: 931:  
      +                                         break;
  6068  002D2A  D011               	goto	l21781
  6069  002D2C                     l21779:
  6070                           
  6071                           ; BSR set to: 0
  6072  002D2C  51DD               	movf	setValueToEdit@ParameterSelected& (0+255),w,b
  6073  002D2E  6FDE               	movwf	??_setValueToEdit& (0+255),b
  6074  002D30  6BDF               	clrf	(??_setValueToEdit+1)& (0+255),b
  6075                           
  6076                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6077                           ; Switch size 1, requested type "simple"
  6078                           ; Number of cases is 1, Range of values is 0 to 0
  6079                           ; switch strategies available:
  6080                           ; Name         Instructions Cycles
  6081                           ; simple_byte            4     3 (average)
  6082                           ;	Chosen strategy is simple_byte
  6083  002D32  51DF               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6084  002D34  0A00               	xorlw	0	; case 0
  6085  002D36  A4D8               	btfss	status,2,c
  6086  002D38  D00A               	goto	l21781
  6087                           
  6088                           ; BSR set to: 0
  6089                           ; Switch size 1, requested type "simple"
  6090                           ; Number of cases is 3, Range of values is 0 to 2
  6091                           ; switch strategies available:
  6092                           ; Name         Instructions Cycles
  6093                           ; simple_byte           10     6 (average)
  6094                           ;	Chosen strategy is simple_byte
  6095  002D3A  51DE               	movf	??_setValueToEdit& (0+255),w,b
  6096  002D3C  0A00               	xorlw	0	; case 0
  6097  002D3E  B4D8               	btfsc	status,2,c
  6098  002D40  D7E0               	goto	l21765
  6099  002D42  0A01               	xorlw	1	; case 1
  6100  002D44  B4D8               	btfsc	status,2,c
  6101  002D46  D7E9               	goto	l21773
  6102  002D48  0A03               	xorlw	3	; case 2
  6103  002D4A  B4D8               	btfsc	status,2,c
  6104  002D4C  D7EA               	goto	l21775
  6105  002D4E                     l21781:
  6106                           
  6107                           ;sm_MenuConfiguration_MC50.c: 933:             haveValueToEdit=1;
  6108  002D4E  0E01               	movlw	1
  6109  002D50  0100               	movlb	0	; () banked
  6110  002D52  D7CA               	goto	L19
  6111  002D54                     l21785:
  6112                           
  6113                           ; BSR set to: 0
  6114                           ;sm_MenuConfiguration_MC50.c: 942:                 {;sm_MenuConfiguration_MC50.c: 943:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeFullClose;
  6115  002D54  0EAB               	movlw	low (_var_sys_NVM+5)
  6116  002D56  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6117  002D58  0E01               	movlw	high (_var_sys_NVM+5)
  6118  002D5A  D003               	goto	L20
  6119  002D5C                     l21787:
  6120                           
  6121                           ; BSR set to: 0
  6122                           ;sm_MenuConfiguration_MC50.c: 947:                 {;sm_MenuConfiguration_MC50.c: 948:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeWalkClose;
  6123  002D5C  0EAC               	movlw	low (_var_sys_NVM+6)
  6124  002D5E  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6125  002D60  0E01               	movlw	high (_var_sys_NVM+6)
  6126  002D62                     L20:
  6127  002D62  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  6128                           
  6129                           ;sm_MenuConfiguration_MC50.c: 949:                 };sm_MenuConfiguration_MC50.c: 950:  
      +                                         break;
  6130  002D64  D00E               	goto	l21793
  6131  002D66                     l21791:
  6132                           
  6133                           ; BSR set to: 0
  6134  002D66  51DD               	movf	setValueToEdit@ParameterSelected& (0+255),w,b
  6135  002D68  6FDE               	movwf	??_setValueToEdit& (0+255),b
  6136  002D6A  6BDF               	clrf	(??_setValueToEdit+1)& (0+255),b
  6137                           
  6138                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6139                           ; Switch size 1, requested type "simple"
  6140                           ; Number of cases is 1, Range of values is 0 to 0
  6141                           ; switch strategies available:
  6142                           ; Name         Instructions Cycles
  6143                           ; simple_byte            4     3 (average)
  6144                           ;	Chosen strategy is simple_byte
  6145  002D6C  51DF               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6146  002D6E  0A00               	xorlw	0	; case 0
  6147  002D70  A4D8               	btfss	status,2,c
  6148  002D72  D007               	goto	l21793
  6149                           
  6150                           ; BSR set to: 0
  6151                           ; Switch size 1, requested type "simple"
  6152                           ; Number of cases is 2, Range of values is 0 to 1
  6153                           ; switch strategies available:
  6154                           ; Name         Instructions Cycles
  6155                           ; simple_byte            7     4 (average)
  6156                           ;	Chosen strategy is simple_byte
  6157  002D74  51DE               	movf	??_setValueToEdit& (0+255),w,b
  6158  002D76  0A00               	xorlw	0	; case 0
  6159  002D78  B4D8               	btfsc	status,2,c
  6160  002D7A  D7EC               	goto	l21785
  6161  002D7C  0A01               	xorlw	1	; case 1
  6162  002D7E  B4D8               	btfsc	status,2,c
  6163  002D80  D7ED               	goto	l21787
  6164  002D82                     l21793:
  6165                           
  6166                           ; BSR set to: 0
  6167                           ;sm_MenuConfiguration_MC50.c: 952:             edit_Param.Max=99;
  6168  002D82  0E63               	movlw	99
  6169  002D84  D7AD               	goto	L29
  6170  002D86                     l21797:
  6171                           
  6172                           ; BSR set to: 0
  6173                           ;sm_MenuConfiguration_MC50.c: 963:                 {;sm_MenuConfiguration_MC50.c: 964:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellIsON;
  6174  002D86  0EAD               	movlw	low (_var_sys_NVM+7)
  6175  002D88  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6176  002D8A  0E01               	movlw	high (_var_sys_NVM+7)
  6177  002D8C  D023               	goto	L25
  6178  002D8E                     l21799:
  6179                           
  6180                           ; BSR set to: 0
  6181                           ;sm_MenuConfiguration_MC50.c: 968:                 {;sm_MenuConfiguration_MC50.c: 969:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellInOpen;
  6182  002D8E  0EAE               	movlw	low (_var_sys_NVM+8)
  6183  002D90  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6184  002D92  0E01               	movlw	high (_var_sys_NVM+8)
  6185  002D94  D01F               	goto	L25
  6186  002D96                     l21803:
  6187                           
  6188                           ; BSR set to: 0
  6189  002D96  51DD               	movf	setValueToEdit@ParameterSelected& (0+255),w,b
  6190  002D98  6FDE               	movwf	??_setValueToEdit& (0+255),b
  6191  002D9A  6BDF               	clrf	(??_setValueToEdit+1)& (0+255),b
  6192                           
  6193                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6194                           ; Switch size 1, requested type "simple"
  6195                           ; Number of cases is 1, Range of values is 0 to 0
  6196                           ; switch strategies available:
  6197                           ; Name         Instructions Cycles
  6198                           ; simple_byte            4     3 (average)
  6199                           ;	Chosen strategy is simple_byte
  6200  002D9C  51DF               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6201  002D9E  0A00               	xorlw	0	; case 0
  6202  002DA0  A4D8               	btfss	status,2,c
  6203  002DA2  D007               	goto	l21805
  6204                           
  6205                           ; BSR set to: 0
  6206                           ; Switch size 1, requested type "simple"
  6207                           ; Number of cases is 2, Range of values is 0 to 1
  6208                           ; switch strategies available:
  6209                           ; Name         Instructions Cycles
  6210                           ; simple_byte            7     4 (average)
  6211                           ;	Chosen strategy is simple_byte
  6212  002DA4  51DE               	movf	??_setValueToEdit& (0+255),w,b
  6213  002DA6  0A00               	xorlw	0	; case 0
  6214  002DA8  B4D8               	btfsc	status,2,c
  6215  002DAA  D7ED               	goto	l21797
  6216  002DAC  0A01               	xorlw	1	; case 1
  6217  002DAE  B4D8               	btfsc	status,2,c
  6218  002DB0  D7EE               	goto	l21799
  6219  002DB2                     l21805:
  6220                           
  6221                           ; BSR set to: 0
  6222                           ;sm_MenuConfiguration_MC50.c: 973:             edit_Param.Max=1;
  6223  002DB2  0E01               	movlw	1
  6224  002DB4  D795               	goto	L29
  6225  002DB6                     l21809:
  6226                           
  6227                           ; BSR set to: 0
  6228                           ;sm_MenuConfiguration_MC50.c: 984:                 {;sm_MenuConfiguration_MC50.c: 985:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandIsON;
  6229  002DB6  0EAF               	movlw	low (_var_sys_NVM+9)
  6230  002DB8  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6231  002DBA  0E01               	movlw	high (_var_sys_NVM+9)
  6232  002DBC  D00B               	goto	L25
  6233  002DBE                     l21811:
  6234                           
  6235                           ; BSR set to: 0
  6236                           ;sm_MenuConfiguration_MC50.c: 989:                 {;sm_MenuConfiguration_MC50.c: 990:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandType;
  6237  002DBE  0EB0               	movlw	low (_var_sys_NVM+10)
  6238  002DC0  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6239  002DC2  0E01               	movlw	high (_var_sys_NVM+10)
  6240  002DC4  D007               	goto	L25
  6241  002DC6                     l21813:
  6242                           
  6243                           ; BSR set to: 0
  6244                           ;sm_MenuConfiguration_MC50.c: 994:                 {;sm_MenuConfiguration_MC50.c: 995:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandInOpen;
  6245  002DC6  0EB1               	movlw	low (_var_sys_NVM+11)
  6246  002DC8  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6247  002DCA  0E01               	movlw	high (_var_sys_NVM+11)
  6248  002DCC  D003               	goto	L25
  6249  002DCE                     l21815:
  6250                           
  6251                           ; BSR set to: 0
  6252                           ;sm_MenuConfiguration_MC50.c: 999:                 {;sm_MenuConfiguration_MC50.c: 1000: 
      +                                              edit_Param.Value=(unsigned char*)&var_sys_NVM.Stopboton;
  6253  002DCE  0EBC               	movlw	low (_var_sys_NVM+22)
  6254  002DD0  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6255  002DD2  0E01               	movlw	high (_var_sys_NVM+22)
  6256  002DD4                     L25:
  6257  002DD4  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  6258                           
  6259                           ;sm_MenuConfiguration_MC50.c: 1001:                 };sm_MenuConfiguration_MC50.c: 1002:
      +                                           break;
  6260  002DD6  D7ED               	goto	l21805
  6261  002DD8                     l21819:
  6262                           
  6263                           ; BSR set to: 0
  6264  002DD8  51DD               	movf	setValueToEdit@ParameterSelected& (0+255),w,b
  6265  002DDA  6FDE               	movwf	??_setValueToEdit& (0+255),b
  6266  002DDC  6BDF               	clrf	(??_setValueToEdit+1)& (0+255),b
  6267                           
  6268                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6269                           ; Switch size 1, requested type "simple"
  6270                           ; Number of cases is 1, Range of values is 0 to 0
  6271                           ; switch strategies available:
  6272                           ; Name         Instructions Cycles
  6273                           ; simple_byte            4     3 (average)
  6274                           ;	Chosen strategy is simple_byte
  6275  002DDE  51DF               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6276  002DE0  0A00               	xorlw	0	; case 0
  6277  002DE2  A4D8               	btfss	status,2,c
  6278  002DE4  D7E6               	goto	l21805
  6279                           
  6280                           ; BSR set to: 0
  6281                           ; Switch size 1, requested type "simple"
  6282                           ; Number of cases is 4, Range of values is 0 to 3
  6283                           ; switch strategies available:
  6284                           ; Name         Instructions Cycles
  6285                           ; simple_byte           13     7 (average)
  6286                           ;	Chosen strategy is simple_byte
  6287  002DE6  51DE               	movf	??_setValueToEdit& (0+255),w,b
  6288  002DE8  0A00               	xorlw	0	; case 0
  6289  002DEA  B4D8               	btfsc	status,2,c
  6290  002DEC  D7E4               	goto	l21809
  6291  002DEE  0A01               	xorlw	1	; case 1
  6292  002DF0  B4D8               	btfsc	status,2,c
  6293  002DF2  D7E5               	goto	l21811
  6294  002DF4  0A03               	xorlw	3	; case 2
  6295  002DF6  B4D8               	btfsc	status,2,c
  6296  002DF8  D7E6               	goto	l21813
  6297  002DFA  0A01               	xorlw	1	; case 3
  6298  002DFC  B4D8               	btfsc	status,2,c
  6299  002DFE  D7E7               	goto	l21815
  6300  002E00  D7D8               	goto	l21805
  6301  002E02                     l21825:
  6302                           
  6303                           ; BSR set to: 0
  6304                           ;sm_MenuConfiguration_MC50.c: 1018:                 {;sm_MenuConfiguration_MC50.c: 1019:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.homemPresente;
  6305  002E02  0EB6               	movlw	low (_var_sys_NVM+16)
  6306  002E04  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6307  002E06  0E01               	movlw	high (_var_sys_NVM+16)
  6308  002E08  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  6309                           
  6310                           ; BSR set to: 0
  6311                           ;sm_MenuConfiguration_MC50.c: 1020:                       edit_Param.Max=2;
  6312  002E0A  0E02               	movlw	2
  6313  002E0C                     L26:
  6314  002E0C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  6315                           
  6316                           ; BSR set to: 0
  6317                           ;sm_MenuConfiguration_MC50.c: 1021:                       edit_Param.Min=0;
  6318  002E0E  0E00               	movlw	0
  6319  002E10  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  6320                           
  6321                           ;sm_MenuConfiguration_MC50.c: 1022:                 };sm_MenuConfiguration_MC50.c: 1023:
      +                                           break;
  6322  002E12  D79D               	goto	l21781
  6323  002E14                     l21831:
  6324                           
  6325                           ; BSR set to: 0
  6326                           ;sm_MenuConfiguration_MC50.c: 1025:                 {;sm_MenuConfiguration_MC50.c: 1026:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.logicDigital;
  6327  002E14  0EB7               	movlw	low (_var_sys_NVM+17)
  6328  002E16  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6329  002E18  0E01               	movlw	high (_var_sys_NVM+17)
  6330  002E1A  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  6331                           
  6332                           ; BSR set to: 0
  6333                           ;sm_MenuConfiguration_MC50.c: 1027:                     edit_Param.Max=1;
  6334  002E1C  0E01               	movlw	1
  6335  002E1E  D7F6               	goto	L26
  6336  002E20                     l21839:
  6337                           
  6338                           ; BSR set to: 0
  6339  002E20  51DD               	movf	setValueToEdit@ParameterSelected& (0+255),w,b
  6340  002E22  6FDE               	movwf	??_setValueToEdit& (0+255),b
  6341  002E24  6BDF               	clrf	(??_setValueToEdit+1)& (0+255),b
  6342                           
  6343                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6344                           ; Switch size 1, requested type "simple"
  6345                           ; Number of cases is 1, Range of values is 0 to 0
  6346                           ; switch strategies available:
  6347                           ; Name         Instructions Cycles
  6348                           ; simple_byte            4     3 (average)
  6349                           ;	Chosen strategy is simple_byte
  6350  002E26  51DF               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6351  002E28  0A00               	xorlw	0	; case 0
  6352  002E2A  A4D8               	btfss	status,2,c
  6353  002E2C  D790               	goto	l21781
  6354                           
  6355                           ; BSR set to: 0
  6356                           ; Switch size 1, requested type "simple"
  6357                           ; Number of cases is 2, Range of values is 0 to 1
  6358                           ; switch strategies available:
  6359                           ; Name         Instructions Cycles
  6360                           ; simple_byte            7     4 (average)
  6361                           ;	Chosen strategy is simple_byte
  6362  002E2E  51DE               	movf	??_setValueToEdit& (0+255),w,b
  6363  002E30  0A00               	xorlw	0	; case 0
  6364  002E32  B4D8               	btfsc	status,2,c
  6365  002E34  D7E6               	goto	l21825
  6366  002E36  0A01               	xorlw	1	; case 1
  6367  002E38  B4D8               	btfsc	status,2,c
  6368  002E3A  D7EC               	goto	l21831
  6369  002E3C  D788               	goto	l21781
  6370  002E3E                     l21845:
  6371                           
  6372                           ; BSR set to: 0
  6373                           ;sm_MenuConfiguration_MC50.c: 1042:                 {;sm_MenuConfiguration_MC50.c: 1043:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softStart;
  6374  002E3E  0EB8               	movlw	low (_var_sys_NVM+18)
  6375  002E40  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6376  002E42  0E01               	movlw	high (_var_sys_NVM+18)
  6377  002E44  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  6378                           
  6379                           ; BSR set to: 0
  6380                           ;sm_MenuConfiguration_MC50.c: 1044:                      edit_Param.Max=9;
  6381  002E46  0E09               	movlw	9
  6382  002E48  D7E1               	goto	L26
  6383  002E4A                     l21851:
  6384                           
  6385                           ; BSR set to: 0
  6386                           ;sm_MenuConfiguration_MC50.c: 1049:                 {;sm_MenuConfiguration_MC50.c: 1050:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softstop;
  6387  002E4A  0EB9               	movlw	low (_var_sys_NVM+19)
  6388  002E4C  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6389  002E4E  0E01               	movlw	high (_var_sys_NVM+19)
  6390  002E50  D7F9               	goto	L27
  6391  002E52                     l21859:
  6392                           
  6393                           ; BSR set to: 0
  6394  002E52  51DD               	movf	setValueToEdit@ParameterSelected& (0+255),w,b
  6395  002E54  6FDE               	movwf	??_setValueToEdit& (0+255),b
  6396  002E56  6BDF               	clrf	(??_setValueToEdit+1)& (0+255),b
  6397                           
  6398                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6399                           ; Switch size 1, requested type "simple"
  6400                           ; Number of cases is 1, Range of values is 0 to 0
  6401                           ; switch strategies available:
  6402                           ; Name         Instructions Cycles
  6403                           ; simple_byte            4     3 (average)
  6404                           ;	Chosen strategy is simple_byte
  6405  002E58  51DF               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6406  002E5A  0A00               	xorlw	0	; case 0
  6407  002E5C  A4D8               	btfss	status,2,c
  6408  002E5E  D777               	goto	l21781
  6409                           
  6410                           ; BSR set to: 0
  6411                           ; Switch size 1, requested type "simple"
  6412                           ; Number of cases is 2, Range of values is 0 to 1
  6413                           ; switch strategies available:
  6414                           ; Name         Instructions Cycles
  6415                           ; simple_byte            7     4 (average)
  6416                           ;	Chosen strategy is simple_byte
  6417  002E60  51DE               	movf	??_setValueToEdit& (0+255),w,b
  6418  002E62  0A00               	xorlw	0	; case 0
  6419  002E64  B4D8               	btfsc	status,2,c
  6420  002E66  D7EB               	goto	l21845
  6421  002E68  0A01               	xorlw	1	; case 1
  6422  002E6A  B4D8               	btfsc	status,2,c
  6423  002E6C  D7EE               	goto	l21851
  6424  002E6E  D76F               	goto	l21781
  6425  002E70                     l21865:
  6426                           
  6427                           ; BSR set to: 0
  6428                           ;sm_MenuConfiguration_MC50.c: 1068:                 {;sm_MenuConfiguration_MC50.c: 1069:
      +                                 edit_Param.Value=&value;
  6429  002E70  0EFC               	movlw	low setValueToEdit@value
  6430  002E72  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6431  002E74  0E01               	movlw	high setValueToEdit@value
  6432  002E76  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  6433                           
  6434                           ; BSR set to: 0
  6435                           ;sm_MenuConfiguration_MC50.c: 1070:                     for(unsigned char posindex=0; po
      +                          sindex <= *(unsigned char*)&var_sys_NVM.positionRemotesFull; posindex++)
  6436  002E78  0E00               	movlw	0
  6437  002E7A  6FE1               	movwf	setValueToEdit@posindex& (0+255),b
  6438  002E7C  D00D               	goto	l21875
  6439  002E7E                     l3486:
  6440                           
  6441                           ; BSR set to: 0
  6442                           ;sm_MenuConfiguration_MC50.c: 1071:                     {;sm_MenuConfiguration_MC50.c: 1
      +                          072:                         value=posindex;
  6443  002E7E  C0E1  F1FC         	movff	setValueToEdit@posindex,setValueToEdit@value
  6444                           
  6445                           ; BSR set to: 0
  6446                           ;sm_MenuConfiguration_MC50.c: 1073:                         if(cmdMemoryIsEmpty(menu_st.
      +                          parameterSelected, posindex))
  6447  002E82  C0E1  F02E         	movff	setValueToEdit@posindex,cmdMemoryIsEmpty@position
  6448  002E86  0101               	movlb	1	; () banked
  6449  002E88  5117               	movf	(_menu_st+23)& (0+255),w,b
  6450  002E8A  ECE3  F03E         	call	_cmdMemoryIsEmpty
  6451  002E8E  0900               	iorlw	0
  6452  002E90  A4D8               	btfss	status,2,c
  6453  002E92  D008               	goto	u25600
  6454                           
  6455                           ;sm_MenuConfiguration_MC50.c: 1075:                     }
  6456  002E94  0100               	movlb	0	; () banked
  6457  002E96  2BE1               	incf	setValueToEdit@posindex& (0+255),f,b
  6458  002E98                     l21875:
  6459                           
  6460                           ; BSR set to: 0
  6461  002E98  EE21  F0C6         	lfsr	2,_var_sys_NVM+32
  6462  002E9C  51E1               	movf	setValueToEdit@posindex& (0+255),w,b
  6463  002E9E  5CDE               	subwf	postinc2,w,c
  6464  002EA0  B0D8               	btfsc	status,0,c
  6465  002EA2  D7ED               	goto	l3486
  6466  002EA4                     u25600:
  6467                           
  6468                           ;sm_MenuConfiguration_MC50.c: 1076:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesFull;
  6469  002EA4  EE21  F0C6         	lfsr	2,_var_sys_NVM+32
  6470  002EA8  D018               	goto	L28
  6471  002EAA                     l21879:
  6472                           
  6473                           ; BSR set to: 0
  6474                           ;sm_MenuConfiguration_MC50.c: 1080:                 {;sm_MenuConfiguration_MC50.c: 1081:
      +                                               for(unsigned char posindex=0; posindex <= *(unsigned char*)&var_sys
      +                          _NVM.positionRemotesWalk; posindex++)
  6475  002EAA  0E00               	movlw	0
  6476  002EAC  6FE2               	movwf	setValueToEdit@posindex_7062& (0+255),b
  6477  002EAE  D00D               	goto	l21887
  6478  002EB0                     l3492:
  6479                           
  6480                           ; BSR set to: 0
  6481                           ;sm_MenuConfiguration_MC50.c: 1082:                     {;sm_MenuConfiguration_MC50.c: 1
      +                          083:                         value=posindex;
  6482  002EB0  C0E2  F1FC         	movff	setValueToEdit@posindex_7062,setValueToEdit@value
  6483                           
  6484                           ; BSR set to: 0
  6485                           ;sm_MenuConfiguration_MC50.c: 1084:                         if(cmdMemoryIsEmpty(menu_st.
      +                          parameterSelected, posindex))
  6486  002EB4  C0E2  F02E         	movff	setValueToEdit@posindex_7062,cmdMemoryIsEmpty@position
  6487  002EB8  0101               	movlb	1	; () banked
  6488  002EBA  5117               	movf	(_menu_st+23)& (0+255),w,b
  6489  002EBC  ECE3  F03E         	call	_cmdMemoryIsEmpty
  6490  002EC0  0900               	iorlw	0
  6491  002EC2  A4D8               	btfss	status,2,c
  6492  002EC4  D008               	goto	u25620
  6493                           
  6494                           ;sm_MenuConfiguration_MC50.c: 1086:                     }
  6495  002EC6  0100               	movlb	0	; () banked
  6496  002EC8  2BE2               	incf	setValueToEdit@posindex_7062& (0+255),f,b
  6497  002ECA                     l21887:
  6498                           
  6499                           ; BSR set to: 0
  6500  002ECA  EE21  F0C7         	lfsr	2,_var_sys_NVM+33
  6501  002ECE  51E2               	movf	setValueToEdit@posindex_7062& (0+255),w,b
  6502  002ED0  5CDE               	subwf	postinc2,w,c
  6503  002ED2  B0D8               	btfsc	status,0,c
  6504  002ED4  D7ED               	goto	l3492
  6505  002ED6                     u25620:
  6506                           
  6507                           ;sm_MenuConfiguration_MC50.c: 1087:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesWalk;
  6508  002ED6  EE21  F0C7         	lfsr	2,_var_sys_NVM+33
  6509  002EDA                     L28:
  6510  002EDA  50DF               	movf	indf2,w,c
  6511  002EDC  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  6512                           
  6513                           ;sm_MenuConfiguration_MC50.c: 1088:                 };sm_MenuConfiguration_MC50.c: 1089:
      +                                           break;
  6514  002EDE  D00E               	goto	l21895
  6515  002EE0                     l21893:
  6516                           
  6517                           ; BSR set to: 0
  6518  002EE0  51DD               	movf	setValueToEdit@ParameterSelected& (0+255),w,b
  6519  002EE2  6FDE               	movwf	??_setValueToEdit& (0+255),b
  6520  002EE4  6BDF               	clrf	(??_setValueToEdit+1)& (0+255),b
  6521                           
  6522                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6523                           ; Switch size 1, requested type "simple"
  6524                           ; Number of cases is 1, Range of values is 0 to 0
  6525                           ; switch strategies available:
  6526                           ; Name         Instructions Cycles
  6527                           ; simple_byte            4     3 (average)
  6528                           ;	Chosen strategy is simple_byte
  6529  002EE6  51DF               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6530  002EE8  0A00               	xorlw	0	; case 0
  6531  002EEA  A4D8               	btfss	status,2,c
  6532  002EEC  D007               	goto	l21895
  6533                           
  6534                           ; BSR set to: 0
  6535                           ; Switch size 1, requested type "simple"
  6536                           ; Number of cases is 2, Range of values is 0 to 1
  6537                           ; switch strategies available:
  6538                           ; Name         Instructions Cycles
  6539                           ; simple_byte            7     4 (average)
  6540                           ;	Chosen strategy is simple_byte
  6541  002EEE  51DE               	movf	??_setValueToEdit& (0+255),w,b
  6542  002EF0  0A00               	xorlw	0	; case 0
  6543  002EF2  B4D8               	btfsc	status,2,c
  6544  002EF4  D7BD               	goto	l21865
  6545  002EF6  0A01               	xorlw	1	; case 1
  6546  002EF8  B4D8               	btfsc	status,2,c
  6547  002EFA  D7D7               	goto	l21879
  6548  002EFC                     l21895:
  6549                           
  6550                           ;sm_MenuConfiguration_MC50.c: 1091:             edit_Param.position=*edit_Param.Value;
  6551  002EFC  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6552  002F00  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6553  002F04  50DF               	movf	indf2,w,c
  6554  002F06  6E46               	movwf	_edit_Param^0,c	;volatile
  6555                           
  6556                           ;sm_MenuConfiguration_MC50.c: 1092:             edit_Param.Min=0;
  6557  002F08  0E00               	movlw	0
  6558  002F0A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  6559                           
  6560                           ;sm_MenuConfiguration_MC50.c: 1093:             haveValueToEdit=1;
  6561  002F0C  0E01               	movlw	1
  6562  002F0E  0100               	movlb	0	; () banked
  6563  002F10  6FE3               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  6564                           
  6565                           ;sm_MenuConfiguration_MC50.c: 1094:             edit_Param.tempValue=*edit_Param.Value;
  6566  002F12  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6567  002F16  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6568  002F1A  50DF               	movf	indf2,w,c
  6569  002F1C  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  6570                           
  6571                           ; BSR set to: 0
  6572                           ;sm_MenuConfiguration_MC50.c: 1095:             InitReceiver();
  6573  002F1E  ECDD  F04C         	call	_InitReceiver	;wreg free
  6574                           
  6575                           ;sm_MenuConfiguration_MC50.c: 1096:         };sm_MenuConfiguration_MC50.c: 1097:        
      +                           break;
  6576  002F22  D029               	goto	l21907
  6577  002F24                     l21905:
  6578                           
  6579                           ; BSR set to: 0
  6580  002F24  51E0               	movf	setValueToEdit@menuType& (0+255),w,b
  6581  002F26  6FDE               	movwf	??_setValueToEdit& (0+255),b
  6582  002F28  6BDF               	clrf	(??_setValueToEdit+1)& (0+255),b
  6583                           
  6584                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6585                           ; Switch size 1, requested type "simple"
  6586                           ; Number of cases is 1, Range of values is 0 to 0
  6587                           ; switch strategies available:
  6588                           ; Name         Instructions Cycles
  6589                           ; simple_byte            4     3 (average)
  6590                           ;	Chosen strategy is simple_byte
  6591  002F2A  51DF               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6592  002F2C  0A00               	xorlw	0	; case 0
  6593  002F2E  A4D8               	btfss	status,2,c
  6594  002F30  D022               	goto	l21907
  6595                           
  6596                           ; BSR set to: 0
  6597                           ; Switch size 1, requested type "simple"
  6598                           ; Number of cases is 11, Range of values is 0 to 12
  6599                           ; switch strategies available:
  6600                           ; Name         Instructions Cycles
  6601                           ; simple_byte           34    18 (average)
  6602                           ;	Chosen strategy is simple_byte
  6603  002F32  51DE               	movf	??_setValueToEdit& (0+255),w,b
  6604  002F34  0A00               	xorlw	0	; case 0
  6605  002F36  B4D8               	btfsc	status,2,c
  6606  002F38  D55A               	goto	l3406
  6607  002F3A  0A01               	xorlw	1	; case 1
  6608  002F3C  B4D8               	btfsc	status,2,c
  6609  002F3E  D5BE               	goto	l3420
  6610  002F40  0A05               	xorlw	5	; case 4
  6611  002F42  B4D8               	btfsc	status,2,c
  6612  002F44  D6A0               	goto	l21749
  6613  002F46  0A01               	xorlw	1	; case 5
  6614  002F48  B4D8               	btfsc	status,2,c
  6615  002F4A  D6BB               	goto	l21757
  6616  002F4C  0A03               	xorlw	3	; case 6
  6617  002F4E  B4D8               	btfsc	status,2,c
  6618  002F50  D6D3               	goto	l21763
  6619  002F52  0A01               	xorlw	1	; case 7
  6620  002F54  B4D8               	btfsc	status,2,c
  6621  002F56  D707               	goto	l21791
  6622  002F58  0A0F               	xorlw	15	; case 8
  6623  002F5A  B4D8               	btfsc	status,2,c
  6624  002F5C  D71C               	goto	l21803
  6625  002F5E  0A01               	xorlw	1	; case 9
  6626  002F60  B4D8               	btfsc	status,2,c
  6627  002F62  D73A               	goto	l21819
  6628  002F64  0A03               	xorlw	3	; case 10
  6629  002F66  B4D8               	btfsc	status,2,c
  6630  002F68  D75B               	goto	l21839
  6631  002F6A  0A01               	xorlw	1	; case 11
  6632  002F6C  B4D8               	btfsc	status,2,c
  6633  002F6E  D771               	goto	l21859
  6634  002F70  0A07               	xorlw	7	; case 12
  6635  002F72  B4D8               	btfsc	status,2,c
  6636  002F74  D7B5               	goto	l21893
  6637  002F76                     l21907:
  6638                           
  6639                           ;sm_MenuConfiguration_MC50.c: 1100:     return haveValueToEdit;
  6640  002F76  0100               	movlb	0	; () banked
  6641  002F78  51E3               	movf	setValueToEdit@haveValueToEdit& (0+255),w,b
  6642                           
  6643                           ; BSR set to: 0
  6644  002F7A  0012               	return		;funcret
  6645  002F7C                     __end_of_setValueToEdit:
  6646                           	callstack 0
  6647                           
  6648 ;; *************** function _load_New_Menu *****************
  6649 ;; Defined at:
  6650 ;;		line 434 in file "sm_MenuConfiguration_MC50.c"
  6651 ;; Parameters:    Size  Location     Type
  6652 ;;  Menu            1    wreg     enum E10813
  6653 ;; Auto vars:     Size  Location     Type
  6654 ;;  Menu            1   33[COMRAM] enum E10813
  6655 ;;  i               1   34[COMRAM] unsigned char 
  6656 ;; Return value:  Size  Location     Type
  6657 ;;                  1    wreg      void 
  6658 ;; Registers used:
  6659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6660 ;; Tracked objects:
  6661 ;;		On entry : 0/0
  6662 ;;		On exit  : 0/0
  6663 ;;		Unchanged: 0/0
  6664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6666 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6667 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6668 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6669 ;;Total ram usage:        4 bytes
  6670 ;; Hardware stack levels used: 1
  6671 ;; Hardware stack levels required when called: 5
  6672 ;; This function calls:
  6673 ;;		_SetSegmentValueIntermitentMain
  6674 ;;		_SetSegmentValueMain
  6675 ;; This function is called by:
  6676 ;;		_sm_execute_main
  6677 ;;		_sm_execute_menuConfiguration
  6678 ;;		_setValueToEdit
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682                           	psect	text4
  6683  004322                     __ptext4:
  6684                           	callstack 0
  6685  004322                     _load_New_Menu:
  6686                           	callstack 22
  6687                           
  6688                           ; BSR set to: 0
  6689                           ;incstack = 0
  6690                           ;load_New_Menu@Menu stored from wreg
  6691  004322  6E22               	movwf	load_New_Menu@Menu^0,c
  6692                           
  6693                           ;sm_MenuConfiguration_MC50.c: 435:     ts_system.timeoutMenu=((1000/50)*5) ;
  6694  004324  0E00               	movlw	0
  6695  004326  0100               	movlb	0	; () banked
  6696  004328  6F9E               	movwf	(_ts_system+15)& (0+255),b	;volatile
  6697  00432A  0E64               	movlw	100
  6698  00432C  6F9D               	movwf	(_ts_system+14)& (0+255),b	;volatile
  6699                           
  6700                           ; BSR set to: 0
  6701                           ;sm_MenuConfiguration_MC50.c: 439:     if(menu_st.actualMenu!=Menu && Menu>E_Menu)
  6702  00432E  5022               	movf	load_New_Menu@Menu^0,w,c
  6703  004330  0101               	movlb	1	; () banked
  6704  004332  1915               	xorwf	(_menu_st+21)& (0+255),w,b
  6705  004334  B4D8               	btfsc	status,2,c
  6706  004336  D006               	goto	l20763
  6707                           
  6708                           ; BSR set to: 1
  6709  004338  0E01               	movlw	1
  6710  00433A  6422               	cpfsgt	load_New_Menu@Menu^0,c
  6711  00433C  D003               	goto	l20763
  6712                           
  6713                           ; BSR set to: 1
  6714                           ;sm_MenuConfiguration_MC50.c: 440:     {;sm_MenuConfiguration_MC50.c: 441:         menu_
      +                          st.parameterSelected=0;
  6715  00433E  0E00               	movlw	0
  6716  004340  6F17               	movwf	(_menu_st+23)& (0+255),b
  6717                           
  6718                           ;sm_MenuConfiguration_MC50.c: 442:     }
  6719  004342  D005               	goto	l20767
  6720  004344                     l20763:
  6721                           
  6722                           ; BSR set to: 1
  6723  004344  0E02               	movlw	2
  6724  004346  6022               	cpfslt	load_New_Menu@Menu^0,c
  6725  004348  D002               	goto	l20767
  6726                           
  6727                           ; BSR set to: 1
  6728                           ;sm_MenuConfiguration_MC50.c: 444:     {;sm_MenuConfiguration_MC50.c: 445:        menu_s
      +                          t.parameterSelected = menu_st.lastMainParameterSelected;
  6729  00434A  C118  F117         	movff	_menu_st+24,_menu_st+23
  6730  00434E                     l20767:
  6731                           
  6732                           ; BSR set to: 1
  6733                           ;sm_MenuConfiguration_MC50.c: 449:     menu_st.lastMenu=((void*)0);
  6734  00434E  0E00               	movlw	0
  6735  004350  6F14               	movwf	(_menu_st+20)& (0+255),b
  6736                           
  6737                           ;sm_MenuConfiguration_MC50.c: 450:     switch (Menu)
  6738  004352  D0F7               	goto	l20819
  6739  004354                     l20769:
  6740                           
  6741                           ; BSR set to: 1
  6742                           ;sm_MenuConfiguration_MC50.c: 453:         {;sm_MenuConfiguration_MC50.c: 455:          
      +                             menu_st.actualMenu=P_Menu;
  6743  004354  0E00               	movlw	0
  6744  004356  6F15               	movwf	(_menu_st+21)& (0+255),b
  6745                           
  6746                           ;sm_MenuConfiguration_MC50.c: 456:             menu_st.menuSize=10;
  6747  004358  0E0A               	movlw	10
  6748  00435A  6F16               	movwf	(_menu_st+22)& (0+255),b
  6749                           
  6750                           ;sm_MenuConfiguration_MC50.c: 457:             menu_st.lastMainParameterSelected=0;
  6751  00435C  0E00               	movlw	0
  6752  00435E  6F18               	movwf	(_menu_st+24)& (0+255),b
  6753                           
  6754                           ;sm_MenuConfiguration_MC50.c: 458:             for (i=0;i<(10);i++)
  6755  004360  0E00               	movlw	0
  6756  004362  6E23               	movwf	load_New_Menu@i^0,c
  6757  004364                     l20775:
  6758                           
  6759                           ;sm_MenuConfiguration_MC50.c: 459:             {;sm_MenuConfiguration_MC50.c: 460:      
      +                                    menu_st.menuList[i].value_display1=dP;
  6760  004364  5023               	movf	load_New_Menu@i^0,w,c
  6761  004366  0D02               	mullw	2
  6762  004368  0E00               	movlw	low _menu_st
  6763  00436A  24F3               	addwf	243,w,c
  6764  00436C  6ED9               	movwf	fsr2l,c
  6765  00436E  0E01               	movlw	high _menu_st
  6766  004370  20F4               	addwfc	prodh,w,c
  6767  004372  6EDA               	movwf	fsr2h,c
  6768  004374  0E10               	movlw	16
  6769  004376  6EDF               	movwf	indf2,c
  6770                           
  6771                           ;sm_MenuConfiguration_MC50.c: 461:                menu_st.menuList[i].value_display2=i;
  6772  004378  5023               	movf	load_New_Menu@i^0,w,c
  6773  00437A  0D02               	mullw	2
  6774  00437C  0E01               	movlw	low (_menu_st+1)
  6775  00437E  24F3               	addwf	243,w,c
  6776  004380  6ED9               	movwf	fsr2l,c
  6777  004382  0E01               	movlw	high (_menu_st+1)
  6778  004384  20F4               	addwfc	prodh,w,c
  6779  004386  6EDA               	movwf	fsr2h,c
  6780  004388  C023  FFDF         	movff	load_New_Menu@i,indf2
  6781                           
  6782                           ;sm_MenuConfiguration_MC50.c: 462:             }
  6783  00438C  2A23               	incf	load_New_Menu@i^0,f,c
  6784  00438E  0E09               	movlw	9
  6785  004390  6423               	cpfsgt	load_New_Menu@i^0,c
  6786  004392  D7E8               	goto	l20775
  6787  004394  D108               	goto	l20821
  6788  004396                     l20781:
  6789                           
  6790                           ; BSR set to: 1
  6791                           ;sm_MenuConfiguration_MC50.c: 466:         {;sm_MenuConfiguration_MC50.c: 468:          
      +                             menu_st.actualMenu=E_Menu;
  6792  004396  0E01               	movlw	1
  6793  004398  6F15               	movwf	(_menu_st+21)& (0+255),b
  6794                           
  6795                           ;sm_MenuConfiguration_MC50.c: 469:             menu_st.menuSize=10;
  6796  00439A  0E0A               	movlw	10
  6797  00439C  6F16               	movwf	(_menu_st+22)& (0+255),b
  6798                           
  6799                           ;sm_MenuConfiguration_MC50.c: 470:             menu_st.lastMainParameterSelected=0;
  6800  00439E  0E00               	movlw	0
  6801  0043A0  6F18               	movwf	(_menu_st+24)& (0+255),b
  6802                           
  6803                           ;sm_MenuConfiguration_MC50.c: 471:             for (i=0;i<(10);i++)
  6804  0043A2  0E00               	movlw	0
  6805  0043A4  6E23               	movwf	load_New_Menu@i^0,c
  6806  0043A6                     l20787:
  6807                           
  6808                           ;sm_MenuConfiguration_MC50.c: 472:             {;sm_MenuConfiguration_MC50.c: 473:      
      +                                    menu_st.menuList[i].value_display1=dE;
  6809  0043A6  5023               	movf	load_New_Menu@i^0,w,c
  6810  0043A8  0D02               	mullw	2
  6811  0043AA  0E00               	movlw	low _menu_st
  6812  0043AC  24F3               	addwf	243,w,c
  6813  0043AE  6ED9               	movwf	fsr2l,c
  6814  0043B0  0E01               	movlw	high _menu_st
  6815  0043B2  20F4               	addwfc	prodh,w,c
  6816  0043B4  6EDA               	movwf	fsr2h,c
  6817  0043B6  0E0E               	movlw	14
  6818  0043B8  6EDF               	movwf	indf2,c
  6819                           
  6820                           ;sm_MenuConfiguration_MC50.c: 474:                menu_st.menuList[i].value_display2=i;
  6821  0043BA  5023               	movf	load_New_Menu@i^0,w,c
  6822  0043BC  0D02               	mullw	2
  6823  0043BE  0E01               	movlw	low (_menu_st+1)
  6824  0043C0  24F3               	addwf	243,w,c
  6825  0043C2  6ED9               	movwf	fsr2l,c
  6826  0043C4  0E01               	movlw	high (_menu_st+1)
  6827  0043C6  20F4               	addwfc	prodh,w,c
  6828  0043C8  6EDA               	movwf	fsr2h,c
  6829  0043CA  C023  FFDF         	movff	load_New_Menu@i,indf2
  6830                           
  6831                           ;sm_MenuConfiguration_MC50.c: 475:             }
  6832  0043CE  2A23               	incf	load_New_Menu@i^0,f,c
  6833  0043D0  0E09               	movlw	9
  6834  0043D2  6423               	cpfsgt	load_New_Menu@i^0,c
  6835  0043D4  D7E8               	goto	l20787
  6836  0043D6  D0E7               	goto	l20821
  6837  0043D8                     l20793:
  6838                           
  6839                           ; BSR set to: 1
  6840                           ;sm_MenuConfiguration_MC50.c: 479:         {;sm_MenuConfiguration_MC50.c: 480:          
      +                             menu_st.lastMenu=P_Menu;
  6841  0043D8  0E00               	movlw	0
  6842  0043DA  6F14               	movwf	(_menu_st+20)& (0+255),b
  6843                           
  6844                           ;sm_MenuConfiguration_MC50.c: 481:             menu_st.actualMenu=P0_SMenu;
  6845  0043DC  0E04               	movlw	4
  6846  0043DE  6F15               	movwf	(_menu_st+21)& (0+255),b
  6847                           
  6848                           ;sm_MenuConfiguration_MC50.c: 482:             menu_st.menuSize=4;
  6849  0043E0  0E04               	movlw	4
  6850  0043E2  6F16               	movwf	(_menu_st+22)& (0+255),b
  6851                           
  6852                           ;sm_MenuConfiguration_MC50.c: 483:             menu_st.menuList[0].value_display1=dA;
  6853  0043E4  0E0A               	movlw	10
  6854  0043E6  6F00               	movwf	_menu_st& (0+255),b
  6855                           
  6856                           ;sm_MenuConfiguration_MC50.c: 484:             menu_st.menuList[0].value_display2=dU;
  6857  0043E8  0E13               	movlw	19
  6858  0043EA  6F01               	movwf	(_menu_st+1)& (0+255),b
  6859                           
  6860                           ;sm_MenuConfiguration_MC50.c: 485:             menu_st.menuList[1].value_display1=dM;
  6861  0043EC  0E17               	movlw	23
  6862  0043EE  6F02               	movwf	(_menu_st+2)& (0+255),b
  6863                           
  6864                           ;sm_MenuConfiguration_MC50.c: 486:             menu_st.menuList[1].value_display2=dA;
  6865  0043F0  0E0A               	movlw	10
  6866  0043F2  6F03               	movwf	(_menu_st+3)& (0+255),b
  6867                           
  6868                           ;sm_MenuConfiguration_MC50.c: 487:             menu_st.menuList[2].value_display1=d5;
  6869  0043F4  0E05               	movlw	5
  6870  0043F6  6F04               	movwf	(_menu_st+4)& (0+255),b
  6871                           
  6872                           ;sm_MenuConfiguration_MC50.c: 488:             menu_st.menuList[2].value_display2=dy;
  6873  0043F8  0E21               	movlw	33
  6874  0043FA  6F05               	movwf	(_menu_st+5)& (0+255),b
  6875                           
  6876                           ;sm_MenuConfiguration_MC50.c: 489:             menu_st.menuList[3].value_display1=dd;
  6877  0043FC  0E0D               	movlw	13
  6878  0043FE  6F06               	movwf	(_menu_st+6)& (0+255),b
  6879                           
  6880                           ;sm_MenuConfiguration_MC50.c: 490:             menu_st.menuList[3].value_display2=d1;
  6881  004400  0E01               	movlw	1
  6882  004402  D051               	goto	L30
  6883  004404                     l20795:
  6884                           
  6885                           ; BSR set to: 1
  6886                           ;sm_MenuConfiguration_MC50.c: 494:         {;sm_MenuConfiguration_MC50.c: 495:          
      +                             menu_st.lastMenu=P_Menu;
  6887  004404  0E00               	movlw	0
  6888  004406  6F14               	movwf	(_menu_st+20)& (0+255),b
  6889                           
  6890                           ;sm_MenuConfiguration_MC50.c: 496:             menu_st.actualMenu=P1_SMenu;
  6891  004408  0E05               	movlw	5
  6892  00440A  6F15               	movwf	(_menu_st+21)& (0+255),b
  6893                           
  6894                           ;sm_MenuConfiguration_MC50.c: 497:             menu_st.menuSize=2;
  6895  00440C  0E02               	movlw	2
  6896  00440E  6F16               	movwf	(_menu_st+22)& (0+255),b
  6897                           
  6898                           ;sm_MenuConfiguration_MC50.c: 498:             menu_st.menuList[0].value_display1=dd;
  6899  004410  0E0D               	movlw	13
  6900  004412  6F00               	movwf	_menu_st& (0+255),b
  6901                           
  6902                           ;sm_MenuConfiguration_MC50.c: 499:             menu_st.menuList[0].value_display2=dA;
  6903  004414  0E0A               	movlw	10
  6904  004416  6F01               	movwf	(_menu_st+1)& (0+255),b
  6905                           
  6906                           ;sm_MenuConfiguration_MC50.c: 500:             menu_st.menuList[1].value_display1=dd;
  6907  004418  0E0D               	movlw	13
  6908  00441A  6F02               	movwf	(_menu_st+2)& (0+255),b
  6909                           
  6910                           ;sm_MenuConfiguration_MC50.c: 501:             menu_st.menuList[1].value_display2=dF;
  6911  00441C  0E0F               	movlw	15
  6912  00441E  D08F               	goto	L37
  6913  004420                     l20797:
  6914                           
  6915                           ; BSR set to: 1
  6916                           ;sm_MenuConfiguration_MC50.c: 508:         {;sm_MenuConfiguration_MC50.c: 509:          
      +                             menu_st.lastMenu=P_Menu;
  6917  004420  0E00               	movlw	0
  6918  004422  6F14               	movwf	(_menu_st+20)& (0+255),b
  6919                           
  6920                           ;sm_MenuConfiguration_MC50.c: 510:             menu_st.actualMenu=P2_SMenu;
  6921  004424  0E06               	movlw	6
  6922  004426  6F15               	movwf	(_menu_st+21)& (0+255),b
  6923                           
  6924                           ;sm_MenuConfiguration_MC50.c: 511:             menu_st.menuSize=3;
  6925  004428  0E03               	movlw	3
  6926  00442A  6F16               	movwf	(_menu_st+22)& (0+255),b
  6927                           
  6928                           ;sm_MenuConfiguration_MC50.c: 512:             menu_st.menuList[0].value_display1=dF;
  6929  00442C  0E0F               	movlw	15
  6930  00442E  6F00               	movwf	_menu_st& (0+255),b
  6931                           
  6932                           ;sm_MenuConfiguration_MC50.c: 513:             menu_st.menuList[0].value_display2=d0;
  6933  004430  0E00               	movlw	0
  6934  004432  6F01               	movwf	(_menu_st+1)& (0+255),b
  6935                           
  6936                           ;sm_MenuConfiguration_MC50.c: 514:             menu_st.menuList[1].value_display1=dF;
  6937  004434  0E0F               	movlw	15
  6938  004436  6F02               	movwf	(_menu_st+2)& (0+255),b
  6939                           
  6940                           ;sm_MenuConfiguration_MC50.c: 515:             menu_st.menuList[1].value_display2=d5;
  6941  004438  0E05               	movlw	5
  6942  00443A  6F03               	movwf	(_menu_st+3)& (0+255),b
  6943                           
  6944                           ;sm_MenuConfiguration_MC50.c: 516:             menu_st.menuList[2].value_display1=dF;
  6945  00443C  0E0F               	movlw	15
  6946  00443E  6F04               	movwf	(_menu_st+4)& (0+255),b
  6947                           
  6948                           ;sm_MenuConfiguration_MC50.c: 517:             menu_st.menuList[2].value_display2=dd;
  6949  004440  0E0D               	movlw	13
  6950  004442  D074               	goto	L32
  6951  004444                     l20799:
  6952                           
  6953                           ; BSR set to: 1
  6954                           ;sm_MenuConfiguration_MC50.c: 521:         {;sm_MenuConfiguration_MC50.c: 522:          
      +                             menu_st.lastMenu=P_Menu;
  6955  004444  0E00               	movlw	0
  6956  004446  6F14               	movwf	(_menu_st+20)& (0+255),b
  6957                           
  6958                           ;sm_MenuConfiguration_MC50.c: 523:             menu_st.actualMenu=P4_SMenu;
  6959  004448  0E07               	movlw	7
  6960  00444A  6F15               	movwf	(_menu_st+21)& (0+255),b
  6961                           
  6962                           ;sm_MenuConfiguration_MC50.c: 524:             menu_st.menuSize=2;
  6963  00444C  0E02               	movlw	2
  6964  00444E  6F16               	movwf	(_menu_st+22)& (0+255),b
  6965                           
  6966                           ;sm_MenuConfiguration_MC50.c: 525:             menu_st.menuList[0].value_display1=dA;
  6967  004450  0E0A               	movlw	10
  6968  004452  6F00               	movwf	_menu_st& (0+255),b
  6969                           
  6970                           ;sm_MenuConfiguration_MC50.c: 526:             menu_st.menuList[0].value_display2=dF;
  6971  004454  0E0F               	movlw	15
  6972  004456  6F01               	movwf	(_menu_st+1)& (0+255),b
  6973                           
  6974                           ;sm_MenuConfiguration_MC50.c: 527:             menu_st.menuList[1].value_display1=dA;
  6975  004458  0E0A               	movlw	10
  6976  00445A  6F02               	movwf	(_menu_st+2)& (0+255),b
  6977                           
  6978                           ;sm_MenuConfiguration_MC50.c: 528:             menu_st.menuList[1].value_display2=dP;
  6979  00445C  0E10               	movlw	16
  6980  00445E  D06F               	goto	L37
  6981  004460                     l20801:
  6982                           
  6983                           ; BSR set to: 1
  6984                           ;sm_MenuConfiguration_MC50.c: 532:         {;sm_MenuConfiguration_MC50.c: 533:          
      +                             menu_st.lastMenu=P_Menu;
  6985  004460  0E00               	movlw	0
  6986  004462  6F14               	movwf	(_menu_st+20)& (0+255),b
  6987                           
  6988                           ;sm_MenuConfiguration_MC50.c: 534:             menu_st.actualMenu=P5_SMenu;
  6989  004464  0E08               	movlw	8
  6990  004466  6F15               	movwf	(_menu_st+21)& (0+255),b
  6991                           
  6992                           ;sm_MenuConfiguration_MC50.c: 535:             menu_st.menuSize=2;
  6993  004468  0E02               	movlw	2
  6994  00446A  6F16               	movwf	(_menu_st+22)& (0+255),b
  6995                           
  6996                           ;sm_MenuConfiguration_MC50.c: 536:             menu_st.menuList[0].value_display1=dL;
  6997  00446C  0E12               	movlw	18
  6998  00446E  6F00               	movwf	_menu_st& (0+255),b
  6999                           
  7000                           ;sm_MenuConfiguration_MC50.c: 537:             menu_st.menuList[0].value_display2=dE;
  7001  004470  0E0E               	movlw	14
  7002  004472  6F01               	movwf	(_menu_st+1)& (0+255),b
  7003                           
  7004                           ;sm_MenuConfiguration_MC50.c: 538:             menu_st.menuList[1].value_display1=dH;
  7005  004474  0E11               	movlw	17
  7006  004476  6F02               	movwf	(_menu_st+2)& (0+255),b
  7007                           
  7008                           ;sm_MenuConfiguration_MC50.c: 539:             menu_st.menuList[1].value_display2=dC;
  7009  004478  0E0C               	movlw	12
  7010  00447A  D061               	goto	L37
  7011  00447C                     l20803:
  7012                           
  7013                           ; BSR set to: 1
  7014                           ;sm_MenuConfiguration_MC50.c: 543:         {;sm_MenuConfiguration_MC50.c: 544:          
      +                             menu_st.lastMenu=P_Menu;
  7015  00447C  0E00               	movlw	0
  7016  00447E  6F14               	movwf	(_menu_st+20)& (0+255),b
  7017                           
  7018                           ;sm_MenuConfiguration_MC50.c: 545:             menu_st.actualMenu=P6_SMenu;
  7019  004480  0E09               	movlw	9
  7020  004482  6F15               	movwf	(_menu_st+21)& (0+255),b
  7021                           
  7022                           ;sm_MenuConfiguration_MC50.c: 546:             menu_st.menuSize=4;
  7023  004484  0E04               	movlw	4
  7024  004486  6F16               	movwf	(_menu_st+22)& (0+255),b
  7025                           
  7026                           ;sm_MenuConfiguration_MC50.c: 547:             menu_st.menuList[0].value_display1=dL;
  7027  004488  0E12               	movlw	18
  7028  00448A  6F00               	movwf	_menu_st& (0+255),b
  7029                           
  7030                           ;sm_MenuConfiguration_MC50.c: 548:             menu_st.menuList[0].value_display2=dA;
  7031  00448C  0E0A               	movlw	10
  7032  00448E  6F01               	movwf	(_menu_st+1)& (0+255),b
  7033                           
  7034                           ;sm_MenuConfiguration_MC50.c: 549:             menu_st.menuList[1].value_display1=dH;
  7035  004490  0E11               	movlw	17
  7036  004492  6F02               	movwf	(_menu_st+2)& (0+255),b
  7037                           
  7038                           ;sm_MenuConfiguration_MC50.c: 550:             menu_st.menuList[1].value_display2=dA;
  7039  004494  0E0A               	movlw	10
  7040  004496  6F03               	movwf	(_menu_st+3)& (0+255),b
  7041                           
  7042                           ;sm_MenuConfiguration_MC50.c: 551:             menu_st.menuList[2].value_display1=dH;
  7043  004498  0E11               	movlw	17
  7044  00449A  6F04               	movwf	(_menu_st+4)& (0+255),b
  7045                           
  7046                           ;sm_MenuConfiguration_MC50.c: 552:             menu_st.menuList[2].value_display2=dL;
  7047  00449C  0E12               	movlw	18
  7048  00449E  6F05               	movwf	(_menu_st+5)& (0+255),b
  7049                           
  7050                           ;sm_MenuConfiguration_MC50.c: 553:             menu_st.menuList[3].value_display1=d5;
  7051  0044A0  0E05               	movlw	5
  7052  0044A2  6F06               	movwf	(_menu_st+6)& (0+255),b
  7053                           
  7054                           ;sm_MenuConfiguration_MC50.c: 554:             menu_st.menuList[3].value_display2=dt;
  7055  0044A4  0E15               	movlw	21
  7056  0044A6                     L30:
  7057  0044A6  6F07               	movwf	(_menu_st+7)& (0+255),b
  7058                           
  7059                           ;sm_MenuConfiguration_MC50.c: 556:         };sm_MenuConfiguration_MC50.c: 557:         b
      +                          reak;
  7060  0044A8  D07E               	goto	l20821
  7061  0044AA                     l20805:
  7062                           
  7063                           ; BSR set to: 1
  7064                           ;sm_MenuConfiguration_MC50.c: 559:         {;sm_MenuConfiguration_MC50.c: 560:          
      +                             menu_st.lastMenu=E_Menu;
  7065  0044AA  0E01               	movlw	1
  7066  0044AC  6F14               	movwf	(_menu_st+20)& (0+255),b
  7067                           
  7068                           ;sm_MenuConfiguration_MC50.c: 561:             menu_st.actualMenu=E0_SMenu;
  7069  0044AE  0E0A               	movlw	10
  7070  0044B0  6F15               	movwf	(_menu_st+21)& (0+255),b
  7071                           
  7072                           ;sm_MenuConfiguration_MC50.c: 562:             menu_st.menuSize=2;
  7073  0044B2  0E02               	movlw	2
  7074  0044B4  6F16               	movwf	(_menu_st+22)& (0+255),b
  7075                           
  7076                           ;sm_MenuConfiguration_MC50.c: 563:             menu_st.menuList[0].value_display1=dH;
  7077  0044B6  0E11               	movlw	17
  7078  0044B8  6F00               	movwf	_menu_st& (0+255),b
  7079                           
  7080                           ;sm_MenuConfiguration_MC50.c: 564:             menu_st.menuList[0].value_display2=dP;
  7081  0044BA  0E10               	movlw	16
  7082  0044BC  6F01               	movwf	(_menu_st+1)& (0+255),b
  7083                           
  7084                           ;sm_MenuConfiguration_MC50.c: 565:             menu_st.menuList[1].value_display1=dP;
  7085  0044BE  0E10               	movlw	16
  7086  0044C0  6F02               	movwf	(_menu_st+2)& (0+255),b
  7087                           
  7088                           ;sm_MenuConfiguration_MC50.c: 566:             menu_st.menuList[1].value_display2=dL;
  7089  0044C2  0E12               	movlw	18
  7090  0044C4  D03C               	goto	L37
  7091  0044C6                     l20807:
  7092                           
  7093                           ; BSR set to: 1
  7094                           ;sm_MenuConfiguration_MC50.c: 570:         {;sm_MenuConfiguration_MC50.c: 571:          
      +                             menu_st.lastMenu=E_Menu;
  7095  0044C6  0E01               	movlw	1
  7096  0044C8  6F14               	movwf	(_menu_st+20)& (0+255),b
  7097                           
  7098                           ;sm_MenuConfiguration_MC50.c: 572:             menu_st.actualMenu=E1_SMenu;
  7099  0044CA  0E0B               	movlw	11
  7100  0044CC  6F15               	movwf	(_menu_st+21)& (0+255),b
  7101                           
  7102                           ;sm_MenuConfiguration_MC50.c: 573:             menu_st.menuSize=2;
  7103  0044CE  0E02               	movlw	2
  7104  0044D0  6F16               	movwf	(_menu_st+22)& (0+255),b
  7105                           
  7106                           ;sm_MenuConfiguration_MC50.c: 574:             menu_st.menuList[0].value_display1=dr;
  7107  0044D2  0E14               	movlw	20
  7108  0044D4  6F00               	movwf	_menu_st& (0+255),b
  7109                           
  7110                           ;sm_MenuConfiguration_MC50.c: 575:             menu_st.menuList[0].value_display2=dq;
  7111  0044D6  0E24               	movlw	36
  7112  0044D8  6F01               	movwf	(_menu_st+1)& (0+255),b
  7113                           
  7114                           ;sm_MenuConfiguration_MC50.c: 576:             menu_st.menuList[1].value_display1=dr;
  7115  0044DA  0E14               	movlw	20
  7116  0044DC  6F02               	movwf	(_menu_st+2)& (0+255),b
  7117                           
  7118                           ;sm_MenuConfiguration_MC50.c: 577:             menu_st.menuList[1].value_display2=dc;
  7119  0044DE  0E23               	movlw	35
  7120  0044E0  D02E               	goto	L37
  7121  0044E2                     l20809:
  7122                           
  7123                           ; BSR set to: 1
  7124                           ;sm_MenuConfiguration_MC50.c: 581:         {;sm_MenuConfiguration_MC50.c: 583:          
      +                             menu_st.actualMenu=S_Menu;
  7125  0044E2  0E0C               	movlw	12
  7126  0044E4  6F15               	movwf	(_menu_st+21)& (0+255),b
  7127                           
  7128                           ;sm_MenuConfiguration_MC50.c: 584:             menu_st.parameterSelected=0;
  7129  0044E6  0E00               	movlw	0
  7130  0044E8  6F17               	movwf	(_menu_st+23)& (0+255),b
  7131                           
  7132                           ;sm_MenuConfiguration_MC50.c: 585:             menu_st.menuSize=2;
  7133  0044EA  0E02               	movlw	2
  7134  0044EC  6F16               	movwf	(_menu_st+22)& (0+255),b
  7135                           
  7136                           ;sm_MenuConfiguration_MC50.c: 586:             menu_st.menuList[0].value_display1=d5;
  7137  0044EE  0E05               	movlw	5
  7138  0044F0  6F00               	movwf	_menu_st& (0+255),b
  7139                           
  7140                           ;sm_MenuConfiguration_MC50.c: 587:             menu_st.menuList[0].value_display2=dU;
  7141  0044F2  0E13               	movlw	19
  7142  0044F4  6F01               	movwf	(_menu_st+1)& (0+255),b
  7143                           
  7144                           ;sm_MenuConfiguration_MC50.c: 588:             menu_st.menuList[1].value_display1=d5;
  7145  0044F6  0E05               	movlw	5
  7146  0044F8  D7B0               	goto	L38
  7147  0044FA                     l20811:
  7148                           
  7149                           ; BSR set to: 1
  7150                           ;sm_MenuConfiguration_MC50.c: 593:         {;sm_MenuConfiguration_MC50.c: 595:          
      +                             menu_st.actualMenu=Del_Menu;
  7151  0044FA  0E0D               	movlw	13
  7152  0044FC  6F15               	movwf	(_menu_st+21)& (0+255),b
  7153                           
  7154                           ;sm_MenuConfiguration_MC50.c: 596:             menu_st.menuSize=1;
  7155  0044FE  0E01               	movlw	1
  7156  004500  6F16               	movwf	(_menu_st+22)& (0+255),b
  7157                           
  7158                           ;sm_MenuConfiguration_MC50.c: 597:             menu_st.menuList[0].value_display1=dd;
  7159  004502  0E0D               	movlw	13
  7160  004504  6F00               	movwf	_menu_st& (0+255),b
  7161                           
  7162                           ;sm_MenuConfiguration_MC50.c: 598:             menu_st.menuList[0].value_display2=dL;
  7163  004506  0E12               	movlw	18
  7164  004508  6F01               	movwf	(_menu_st+1)& (0+255),b
  7165                           
  7166                           ;sm_MenuConfiguration_MC50.c: 599:             ts_system.timeSinalizationDigit=(1000/50)
      +                          *3;
  7167  00450A  0E00               	movlw	0
  7168  00450C  0100               	movlb	0	; () banked
  7169  00450E  6F9C               	movwf	(_ts_system+13)& (0+255),b	;volatile
  7170  004510  0E3C               	movlw	60
  7171  004512  6F9B               	movwf	(_ts_system+12)& (0+255),b	;volatile
  7172                           
  7173                           ;sm_MenuConfiguration_MC50.c: 600:         };sm_MenuConfiguration_MC50.c: 601:         b
      +                          reak;
  7174  004514  D048               	goto	l20821
  7175  004516                     l20813:
  7176                           
  7177                           ; BSR set to: 1
  7178                           ;sm_MenuConfiguration_MC50.c: 604:         {;sm_MenuConfiguration_MC50.c: 608:          
      +                             menu_st.menuList[0].value_display1=d5;
  7179  004516  0E05               	movlw	5
  7180  004518  6F00               	movwf	_menu_st& (0+255),b
  7181                           
  7182                           ;sm_MenuConfiguration_MC50.c: 609:             menu_st.menuList[0].value_display2=dC;
  7183  00451A  0E0C               	movlw	12
  7184  00451C  6F01               	movwf	(_menu_st+1)& (0+255),b
  7185                           
  7186                           ;sm_MenuConfiguration_MC50.c: 610:             menu_st.menuList[1].value_display1=d5;
  7187  00451E  0E05               	movlw	5
  7188  004520  6F02               	movwf	(_menu_st+2)& (0+255),b
  7189                           
  7190                           ;sm_MenuConfiguration_MC50.c: 611:             menu_st.menuList[1].value_display2=dE;
  7191  004522  0E0E               	movlw	14
  7192  004524  6F03               	movwf	(_menu_st+3)& (0+255),b
  7193                           
  7194                           ;sm_MenuConfiguration_MC50.c: 612:             menu_st.menuList[2].value_display1=db;
  7195  004526  0E22               	movlw	34
  7196  004528  6F04               	movwf	(_menu_st+4)& (0+255),b
  7197                           
  7198                           ;sm_MenuConfiguration_MC50.c: 613:             menu_st.menuList[2].value_display2=dr;
  7199  00452A  0E14               	movlw	20
  7200  00452C                     L32:
  7201  00452C  6F05               	movwf	(_menu_st+5)& (0+255),b
  7202                           
  7203                           ;sm_MenuConfiguration_MC50.c: 614:         };sm_MenuConfiguration_MC50.c: 615:         b
      +                          reak;
  7204  00452E  D03B               	goto	l20821
  7205  004530                     l20815:
  7206                           
  7207                           ; BSR set to: 1
  7208                           ;sm_MenuConfiguration_MC50.c: 617:         {;sm_MenuConfiguration_MC50.c: 621:          
      +                             menu_st.menuList[0].value_display1=dL;
  7209  004530  0E12               	movlw	18
  7210  004532  6F00               	movwf	_menu_st& (0+255),b
  7211                           
  7212                           ;sm_MenuConfiguration_MC50.c: 622:             menu_st.menuList[0].value_display2=dE;
  7213  004534  0E0E               	movlw	14
  7214  004536  6F01               	movwf	(_menu_st+1)& (0+255),b
  7215                           
  7216                           ;sm_MenuConfiguration_MC50.c: 623:             menu_st.menuList[1].value_display1=dr;
  7217  004538  0E14               	movlw	20
  7218  00453A  6F02               	movwf	(_menu_st+2)& (0+255),b
  7219                           
  7220                           ;sm_MenuConfiguration_MC50.c: 624:             menu_st.menuList[1].value_display2=dt;
  7221  00453C  0E15               	movlw	21
  7222  00453E                     L37:
  7223  00453E  6F03               	movwf	(_menu_st+3)& (0+255),b
  7224                           
  7225                           ;sm_MenuConfiguration_MC50.c: 626:         };sm_MenuConfiguration_MC50.c: 627:         b
      +                          reak;
  7226  004540  D032               	goto	l20821
  7227  004542                     l20819:
  7228                           
  7229                           ; BSR set to: 1
  7230  004542  5022               	movf	load_New_Menu@Menu^0,w,c
  7231  004544  6E20               	movwf	??_load_New_Menu^0,c
  7232  004546  6A21               	clrf	(??_load_New_Menu+1)^0,c
  7233                           
  7234                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7235                           ; Switch size 1, requested type "simple"
  7236                           ; Number of cases is 1, Range of values is 0 to 0
  7237                           ; switch strategies available:
  7238                           ; Name         Instructions Cycles
  7239                           ; simple_byte            4     3 (average)
  7240                           ;	Chosen strategy is simple_byte
  7241  004548  5021               	movf	(??_load_New_Menu+1)^0,w,c
  7242  00454A  0A00               	xorlw	0	; case 0
  7243  00454C  A4D8               	btfss	status,2,c
  7244  00454E  D02B               	goto	l20821
  7245                           
  7246                           ; BSR set to: 1
  7247                           ; Switch size 1, requested type "simple"
  7248                           ; Number of cases is 14, Range of values is 0 to 13
  7249                           ; switch strategies available:
  7250                           ; Name         Instructions Cycles
  7251                           ; simple_byte           43    22 (average)
  7252                           ;	Chosen strategy is simple_byte
  7253  004550  5020               	movf	??_load_New_Menu^0,w,c
  7254  004552  0A00               	xorlw	0	; case 0
  7255  004554  B4D8               	btfsc	status,2,c
  7256  004556  D6FE               	goto	l20769
  7257  004558  0A01               	xorlw	1	; case 1
  7258  00455A  B4D8               	btfsc	status,2,c
  7259  00455C  D71C               	goto	l20781
  7260  00455E  0A03               	xorlw	3	; case 2
  7261  004560  B4D8               	btfsc	status,2,c
  7262  004562  D7E6               	goto	l20815
  7263  004564  0A01               	xorlw	1	; case 3
  7264  004566  B4D8               	btfsc	status,2,c
  7265  004568  D7D6               	goto	l20813
  7266  00456A  0A07               	xorlw	7	; case 4
  7267  00456C  B4D8               	btfsc	status,2,c
  7268  00456E  D734               	goto	l20793
  7269  004570  0A01               	xorlw	1	; case 5
  7270  004572  B4D8               	btfsc	status,2,c
  7271  004574  D747               	goto	l20795
  7272  004576  0A03               	xorlw	3	; case 6
  7273  004578  B4D8               	btfsc	status,2,c
  7274  00457A  D752               	goto	l20797
  7275  00457C  0A01               	xorlw	1	; case 7
  7276  00457E  B4D8               	btfsc	status,2,c
  7277  004580  D761               	goto	l20799
  7278  004582  0A0F               	xorlw	15	; case 8
  7279  004584  B4D8               	btfsc	status,2,c
  7280  004586  D76C               	goto	l20801
  7281  004588  0A01               	xorlw	1	; case 9
  7282  00458A  B4D8               	btfsc	status,2,c
  7283  00458C  D777               	goto	l20803
  7284  00458E  0A03               	xorlw	3	; case 10
  7285  004590  B4D8               	btfsc	status,2,c
  7286  004592  D78B               	goto	l20805
  7287  004594  0A01               	xorlw	1	; case 11
  7288  004596  B4D8               	btfsc	status,2,c
  7289  004598  D796               	goto	l20807
  7290  00459A  0A07               	xorlw	7	; case 12
  7291  00459C  B4D8               	btfsc	status,2,c
  7292  00459E  D7A1               	goto	l20809
  7293  0045A0  0A01               	xorlw	1	; case 13
  7294  0045A2  B4D8               	btfsc	status,2,c
  7295  0045A4  D7AA               	goto	l20811
  7296  0045A6                     l20821:
  7297                           
  7298                           ;sm_MenuConfiguration_MC50.c: 632:     if(menu_st.parameterSelected>=menu_st.menuSize)
  7299  0045A6  0101               	movlb	1	; () banked
  7300  0045A8  5116               	movf	(_menu_st+22)& (0+255),w,b
  7301  0045AA  5D17               	subwf	(_menu_st+23)& (0+255),w,b
  7302  0045AC  A0D8               	btfss	status,0,c
  7303  0045AE  D002               	goto	l20825
  7304                           
  7305                           ; BSR set to: 1
  7306                           ;sm_MenuConfiguration_MC50.c: 633:     {;sm_MenuConfiguration_MC50.c: 634:         menu_
      +                          st.parameterSelected=0;
  7307  0045B0  0E00               	movlw	0
  7308  0045B2  6F17               	movwf	(_menu_st+23)& (0+255),b
  7309  0045B4                     l20825:
  7310                           
  7311                           ; BSR set to: 1
  7312                           ;sm_MenuConfiguration_MC50.c: 637:     if(Menu==Del_Menu)
  7313  0045B4  0E0D               	movlw	13
  7314  0045B6  1822               	xorwf	load_New_Menu@Menu^0,w,c
  7315  0045B8  A4D8               	btfss	status,2,c
  7316  0045BA  D01A               	goto	l20829
  7317                           
  7318                           ; BSR set to: 1
  7319                           ;sm_MenuConfiguration_MC50.c: 638:     {;sm_MenuConfiguration_MC50.c: 639:         SetSe
      +                          gmentValueIntermitentMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, m
      +                          enu_st.menuList[ menu_st.parameterSelected].value_display2,( 500/50));
  7320  0045BC  5117               	movf	(_menu_st+23)& (0+255),w,b
  7321  0045BE  0D02               	mullw	2
  7322  0045C0  0E01               	movlw	low (_menu_st+1)
  7323  0045C2  24F3               	addwf	243,w,c
  7324  0045C4  6ED9               	movwf	fsr2l,c
  7325  0045C6  0E01               	movlw	high (_menu_st+1)
  7326  0045C8  20F4               	addwfc	prodh,w,c
  7327  0045CA  6EDA               	movwf	fsr2h,c
  7328  0045CC  50DF               	movf	indf2,w,c
  7329  0045CE  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7330  0045D0  0E00               	movlw	0
  7331  0045D2  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7332  0045D4  0E0A               	movlw	10
  7333  0045D6  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7334  0045D8  5117               	movf	(_menu_st+23)& (0+255),w,b
  7335  0045DA  0D02               	mullw	2
  7336  0045DC  0E00               	movlw	low _menu_st
  7337  0045DE  24F3               	addwf	243,w,c
  7338  0045E0  6ED9               	movwf	fsr2l,c
  7339  0045E2  0E01               	movlw	high _menu_st
  7340  0045E4  20F4               	addwfc	prodh,w,c
  7341  0045E6  6EDA               	movwf	fsr2h,c
  7342  0045E8  50DF               	movf	indf2,w,c
  7343  0045EA  EC4F  F04D         	call	_SetSegmentValueIntermitentMain
  7344                           
  7345                           ;sm_MenuConfiguration_MC50.c: 640:     }
  7346  0045EE  0012               	return	
  7347  0045F0                     l20829:
  7348                           
  7349                           ; BSR set to: 1
  7350                           ;sm_MenuConfiguration_MC50.c: 642:     {;sm_MenuConfiguration_MC50.c: 643:         SetSe
      +                          gmentValueMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, menu_st.menu
      +                          List[ menu_st.parameterSelected].value_display2);
  7351  0045F0  5117               	movf	(_menu_st+23)& (0+255),w,b
  7352  0045F2  0D02               	mullw	2
  7353  0045F4  0E01               	movlw	low (_menu_st+1)
  7354  0045F6  24F3               	addwf	243,w,c
  7355  0045F8  6ED9               	movwf	fsr2l,c
  7356  0045FA  0E01               	movlw	high (_menu_st+1)
  7357  0045FC  20F4               	addwfc	prodh,w,c
  7358  0045FE  6EDA               	movwf	fsr2h,c
  7359  004600  50DF               	movf	indf2,w,c
  7360  004602  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7361  004604  5117               	movf	(_menu_st+23)& (0+255),w,b
  7362  004606  0D02               	mullw	2
  7363  004608  0E00               	movlw	low _menu_st
  7364  00460A  24F3               	addwf	243,w,c
  7365  00460C  6ED9               	movwf	fsr2l,c
  7366  00460E  0E01               	movlw	high _menu_st
  7367  004610  20F4               	addwfc	prodh,w,c
  7368  004612  6EDA               	movwf	fsr2h,c
  7369  004614  50DF               	movf	indf2,w,c
  7370  004616  ECA9  F04C         	call	_SetSegmentValueMain
  7371  00461A  0012               	return		;funcret
  7372  00461C                     __end_of_load_New_Menu:
  7373                           	callstack 0
  7374                           
  7375 ;; *************** function _InitReceiver *****************
  7376 ;; Defined at:
  7377 ;;		line 207 in file "inputs_MC50.c"
  7378 ;; Parameters:    Size  Location     Type
  7379 ;;		None
  7380 ;; Auto vars:     Size  Location     Type
  7381 ;;		None
  7382 ;; Return value:  Size  Location     Type
  7383 ;;                  1    wreg      void 
  7384 ;; Registers used:
  7385 ;;		wreg, status,2
  7386 ;; Tracked objects:
  7387 ;;		On entry : 30/F
  7388 ;;		On exit  : 3F/0
  7389 ;;		Unchanged: 0/0
  7390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7395 ;;Total ram usage:        0 bytes
  7396 ;; Hardware stack levels used: 1
  7397 ;; Hardware stack levels required when called: 4
  7398 ;; This function calls:
  7399 ;;		Nothing
  7400 ;; This function is called by:
  7401 ;;		_main
  7402 ;;		_setValueToEdit
  7403 ;; This function uses a non-reentrant model
  7404 ;;
  7405                           
  7406                           	psect	text5
  7407  0099BA                     __ptext5:
  7408                           	callstack 0
  7409  0099BA                     _InitReceiver:
  7410                           	callstack 23
  7411                           
  7412                           ;inputs_MC50.c: 208:     TMR0IF = 0;
  7413                           
  7414                           ;incstack = 0
  7415  0099BA  010E               	movlb	14	; () banked
  7416  0099BC  9BCA               	bcf	202,5,b	;volatile
  7417                           
  7418                           ;inputs_MC50.c: 209:     TMR0IE = 1;
  7419  0099BE  8BC2               	bsf	194,5,b	;volatile
  7420                           
  7421                           ;inputs_MC50.c: 210:     GIE = 1;
  7422  0099C0  8EF2               	bsf	4082,7,c	;volatile
  7423                           
  7424                           ; BSR set to: 14
  7425                           ;inputs_MC50.c: 211:     RFstate = 0;
  7426  0099C2  0E00               	movlw	0
  7427  0099C4  0100               	movlb	0	; () banked
  7428  0099C6  6F84               	movwf	_RFstate& (0+255),b
  7429                           
  7430                           ;inputs_MC50.c: 212:     RFFull_12BIT=0;
  7431  0099C8  0E00               	movlw	0
  7432  0099CA  6F81               	movwf	_RFFull_12BIT& (0+255),b	;volatile
  7433                           
  7434                           ;inputs_MC50.c: 213:     RFFull = 0;
  7435  0099CC  0E00               	movlw	0
  7436  0099CE  6FD7               	movwf	_RFFull& (0+255),b	;volatile
  7437                           
  7438                           ; BSR set to: 0
  7439  0099D0  0012               	return		;funcret
  7440  0099D2                     __end_of_InitReceiver:
  7441                           	callstack 0
  7442                           
  7443 ;; *************** function _controlSelectRemote *****************
  7444 ;; Defined at:
  7445 ;;		line 1103 in file "sm_MenuConfiguration_MC50.c"
  7446 ;; Parameters:    Size  Location     Type
  7447 ;;		None
  7448 ;; Auto vars:     Size  Location     Type
  7449 ;;  typeRemote      1   11[BANK0 ] enum E10392
  7450 ;;  pos             1   10[BANK0 ] unsigned char 
  7451 ;;  tempSerial      4   12[BANK0 ] unsigned long 
  7452 ;;  temp            1   16[BANK0 ] unsigned char 
  7453 ;;  validSerial     1    9[BANK0 ] unsigned char 
  7454 ;; Return value:  Size  Location     Type
  7455 ;;                  1    wreg      void 
  7456 ;; Registers used:
  7457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7458 ;; Tracked objects:
  7459 ;;		On entry : 3F/1
  7460 ;;		On exit  : 0/0
  7461 ;;		Unchanged: 0/0
  7462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7464 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7465 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7466 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7467 ;;Total ram usage:        9 bytes
  7468 ;; Hardware stack levels used: 1
  7469 ;; Hardware stack levels required when called: 14
  7470 ;; This function calls:
  7471 ;;		_ClearFlag_rfCMD
  7472 ;;		_RemoveSerial
  7473 ;;		_SaveNVM_VarSystem
  7474 ;;		_SetSegmentValue
  7475 ;;		_SetSegmentValueIntermitentMain
  7476 ;;		_SetSegmentValueMain
  7477 ;;		___awdiv
  7478 ;;		___lbmod
  7479 ;;		_cmdMemoryIsEmpty
  7480 ;;		_getSerialCmd
  7481 ;;		_getTypeRemote
  7482 ;;		_saveNewSerial
  7483 ;;		_sm_send_event
  7484 ;;		_validateRemoteSerialNumber
  7485 ;; This function is called by:
  7486 ;;		_sm_execute_menuConfiguration
  7487 ;; This function uses a non-reentrant model
  7488 ;;
  7489                           
  7490                           	psect	text6
  7491  0038DA                     __ptext6:
  7492                           	callstack 0
  7493  0038DA                     _controlSelectRemote:
  7494                           	callstack 14
  7495                           
  7496                           ; BSR set to: 1
  7497                           ;sm_MenuConfiguration_MC50.c: 1104:     unsigned long tempSerial;;sm_MenuConfiguration_M
      +                          C50.c: 1105:     char temp=getSerialCmd(&tempSerial);
  7498                           
  7499                           ; BSR set to: 0
  7500                           ;incstack = 0
  7501  0038DA  0EE4               	movlw	low controlSelectRemote@tempSerial
  7502  0038DC  6E1B               	movwf	getSerialCmd@serial^0,c
  7503  0038DE  ECC1  F047         	call	_getSerialCmd	;wreg free
  7504  0038E2  0100               	movlb	0	; () banked
  7505  0038E4  6FE8               	movwf	controlSelectRemote@temp& (0+255),b
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;sm_MenuConfiguration_MC50.c: 1106:     char validSerial;;sm_MenuConfiguration_MC50.c: 1
      +                          107:     if(ts_system.timeoutMenu<=0 || button_struct.current==0x00)
  7509  0038E6  BF9E               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  7510  0038E8  D008               	goto	u25640
  7511  0038EA  519E               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  7512  0038EC  E103               	bnz	u25630
  7513  0038EE  059D               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  7514  0038F0  A0D8               	btfss	status,0,c
  7515  0038F2  D003               	goto	u25640
  7516  0038F4                     u25630:
  7517                           
  7518                           ; BSR set to: 0
  7519  0038F4  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7520  0038F6  A4D8               	btfss	status,2,c
  7521  0038F8  D028               	goto	l22051
  7522  0038FA                     u25640:
  7523                           
  7524                           ; BSR set to: 0
  7525                           ;sm_MenuConfiguration_MC50.c: 1108:     {;sm_MenuConfiguration_MC50.c: 1109:         sm_
      +                          send_event(&main_stateMachine, ev_goto_StandBy);
  7526  0038FA  0EF1               	movlw	low _main_stateMachine
  7527  0038FC  6E12               	movwf	sm_send_event@psm^0,c
  7528  0038FE  0E01               	movlw	high _main_stateMachine
  7529  003900  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7530  003902  0E00               	movlw	0
  7531  003904  6E15               	movwf	(sm_send_event@event+1)^0,c
  7532  003906  0E07               	movlw	7
  7533  003908  6E14               	movwf	sm_send_event@event^0,c
  7534  00390A  ECE8  F045         	call	_sm_send_event	;wreg free
  7535                           
  7536                           ;sm_MenuConfiguration_MC50.c: 1110:         sm_send_event(&menuConfiguration_stateMachin
      +                          e, ev_CancelEdition);
  7537  00390E  0EBD               	movlw	low _menuConfiguration_stateMachine
  7538  003910  6E12               	movwf	sm_send_event@psm^0,c
  7539  003912  0E02               	movlw	high _menuConfiguration_stateMachine
  7540  003914  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7541  003916  0E00               	movlw	0
  7542  003918  6E15               	movwf	(sm_send_event@event+1)^0,c
  7543  00391A  0E03               	movlw	3
  7544  00391C  6E14               	movwf	sm_send_event@event^0,c
  7545  00391E  ECE8  F045         	call	_sm_send_event	;wreg free
  7546                           
  7547                           ;sm_MenuConfiguration_MC50.c: 1111:         var_sys.DistanceProgrammingActive=NO;
  7548  003922  0E00               	movlw	0
  7549  003924  0101               	movlb	1	; () banked
  7550  003926  6F95               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7551                           
  7552                           ; BSR set to: 1
  7553                           ;sm_MenuConfiguration_MC50.c: 1112:         var_sys.ProgrammingDistanceIs=NoCMD;
  7554  003928  0E00               	movlw	0
  7555  00392A  6F90               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7556                           
  7557                           ; BSR set to: 1
  7558                           ;sm_MenuConfiguration_MC50.c: 1113:         SetSegmentValueMain(dMinus,dMinus);
  7559  00392C  0E18               	movlw	24
  7560  00392E  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7561  003930  0E18               	movlw	24
  7562  003932  ECA9  F04C         	call	_SetSegmentValueMain
  7563                           
  7564                           ; BSR set to: 0
  7565                           ;sm_MenuConfiguration_MC50.c: 1114:         ClearFlag_rfCMD();
  7566  003936  EC07  F04E         	call	_ClearFlag_rfCMD	;wreg free
  7567                           
  7568                           ;sm_MenuConfiguration_MC50.c: 1115:         button_struct.processed=1;
  7569  00393A  0E01               	movlw	1
  7570  00393C  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7571                           
  7572                           ;sm_MenuConfiguration_MC50.c: 1116:         ts_system.timeoutMenu = 0;
  7573  00393E  0E00               	movlw	0
  7574  003940  0100               	movlb	0	; () banked
  7575  003942  6F9E               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7576  003944  0E00               	movlw	0
  7577  003946  6F9D               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7578                           
  7579                           ;sm_MenuConfiguration_MC50.c: 1118:     }
  7580  003948  0012               	return	
  7581  00394A                     l22051:
  7582                           
  7583                           ; BSR set to: 0
  7584  00394A  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7585  00394C  A4D8               	btfss	status,2,c
  7586  00394E  D05C               	goto	l22073
  7587                           
  7588                           ; BSR set to: 0
  7589  003950  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7590  003952  B4D8               	btfsc	status,2,c
  7591  003954  D059               	goto	l22073
  7592                           
  7593                           ; BSR set to: 0
  7594                           ;sm_MenuConfiguration_MC50.c: 1120:     {;sm_MenuConfiguration_MC50.c: 1121:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7595  003956  0E00               	movlw	0
  7596  003958  6F9E               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7597  00395A  0E64               	movlw	100
  7598  00395C  6F9D               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7599                           
  7600                           ; BSR set to: 0
  7601                           ;sm_MenuConfiguration_MC50.c: 1122:         if(edit_Param.tempValue<=edit_Param.Min)
  7602  00395E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7603  003960  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  7604  003962  A0D8               	btfss	status,0,c
  7605  003964  D003               	goto	l22061
  7606                           
  7607                           ; BSR set to: 0
  7608                           ;sm_MenuConfiguration_MC50.c: 1123:         {;sm_MenuConfiguration_MC50.c: 1124:        
      +                               edit_Param.tempValue=edit_Param.Max;
  7609  003966  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  7610                           
  7611                           ;sm_MenuConfiguration_MC50.c: 1125:         }
  7612  00396A  D001               	goto	l22063
  7613  00396C                     l22061:
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;sm_MenuConfiguration_MC50.c: 1127:         {;sm_MenuConfiguration_MC50.c: 1128:        
      +                               edit_Param.tempValue--;
  7617  00396C  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  7618  00396E                     l22063:
  7619                           
  7620                           ; BSR set to: 0
  7621                           ;sm_MenuConfiguration_MC50.c: 1130:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1 || edit_Param.tempValue==edit_Param.Max)
  7622  00396E  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7623  003972  0101               	movlb	1	; () banked
  7624  003974  5117               	movf	(_menu_st+23)& (0+255),w,b
  7625  003976  ECE3  F03E         	call	_cmdMemoryIsEmpty
  7626  00397A  06E8               	decf	wreg,f,c
  7627  00397C  B4D8               	btfsc	status,2,c
  7628  00397E  D004               	goto	u25690
  7629  003980  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7630  003982  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7631  003984  A4D8               	btfss	status,2,c
  7632  003986  D021               	goto	l22069
  7633  003988                     u25690:
  7634                           
  7635                           ;sm_MenuConfiguration_MC50.c: 1131:         {;sm_MenuConfiguration_MC50.c: 1132:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7636  003988  0E0A               	movlw	10
  7637  00398A  6E10               	movwf	___lbmod@divisor^0,c
  7638  00398C  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7639  00398E  EC81  F04B         	call	___lbmod
  7640  003992  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7641  003994  0E00               	movlw	0
  7642  003996  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7643  003998  0E14               	movlw	20
  7644  00399A  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7645  00399C  0E0A               	movlw	10
  7646  00399E  6E10               	movwf	___lbmod@divisor^0,c
  7647  0039A0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7648  0039A2  EC81  F04B         	call	___lbmod
  7649  0039A6  0100               	movlb	0	; () banked
  7650  0039A8  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7651  0039AA  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7652  0039AC  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7653  0039AE  6E14               	movwf	___awdiv@dividend^0,c
  7654  0039B0  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7655  0039B2  A0D8               	btfss	status,0,c
  7656  0039B4  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7657  0039B6  0E00               	movlw	0
  7658  0039B8  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7659  0039BA  0E0A               	movlw	10
  7660  0039BC  6E16               	movwf	___awdiv@divisor^0,c
  7661  0039BE  EC8D  F040         	call	___awdiv	;wreg free
  7662  0039C2  5014               	movf	?___awdiv^0,w,c
  7663  0039C4  EC4F  F04D         	call	_SetSegmentValueIntermitentMain
  7664                           
  7665                           ;sm_MenuConfiguration_MC50.c: 1133:         }
  7666  0039C8  D01C               	goto	l22071
  7667  0039CA                     l22069:
  7668                           
  7669                           ;sm_MenuConfiguration_MC50.c: 1135:         {;sm_MenuConfiguration_MC50.c: 1136:        
      +                               SetSegmentValueMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.t
      +                          empValue%10);
  7670  0039CA  0E0A               	movlw	10
  7671  0039CC  6E10               	movwf	___lbmod@divisor^0,c
  7672  0039CE  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7673  0039D0  EC81  F04B         	call	___lbmod
  7674  0039D4  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7675  0039D6  0E0A               	movlw	10
  7676  0039D8  6E10               	movwf	___lbmod@divisor^0,c
  7677  0039DA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7678  0039DC  EC81  F04B         	call	___lbmod
  7679  0039E0  0100               	movlb	0	; () banked
  7680  0039E2  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7681  0039E4  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7682  0039E6  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7683  0039E8  6E14               	movwf	___awdiv@dividend^0,c
  7684  0039EA  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7685  0039EC  A0D8               	btfss	status,0,c
  7686  0039EE  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7687  0039F0  0E00               	movlw	0
  7688  0039F2  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7689  0039F4  0E0A               	movlw	10
  7690  0039F6  6E16               	movwf	___awdiv@divisor^0,c
  7691  0039F8  EC8D  F040         	call	___awdiv	;wreg free
  7692  0039FC  5014               	movf	?___awdiv^0,w,c
  7693  0039FE  ECA9  F04C         	call	_SetSegmentValueMain
  7694  003A02                     l22071:
  7695                           
  7696                           ;sm_MenuConfiguration_MC50.c: 1138:         button_struct.processed=1;
  7697  003A02  0E01               	movlw	1
  7698  003A04  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7699                           
  7700                           ;sm_MenuConfiguration_MC50.c: 1139:     }
  7701  003A06  0012               	return	
  7702  003A08                     l22073:
  7703                           
  7704                           ; BSR set to: 0
  7705  003A08  0E17               	movlw	23
  7706  003A0A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7707  003A0C  A4D8               	btfss	status,2,c
  7708  003A0E  D058               	goto	l22095
  7709                           
  7710                           ; BSR set to: 0
  7711  003A10  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7712  003A12  B4D8               	btfsc	status,2,c
  7713  003A14  D055               	goto	l22095
  7714                           
  7715                           ; BSR set to: 0
  7716                           ;sm_MenuConfiguration_MC50.c: 1141:     {;sm_MenuConfiguration_MC50.c: 1142:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7717  003A16  0E00               	movlw	0
  7718  003A18  6F9E               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7719  003A1A  0E64               	movlw	100
  7720  003A1C  6F9D               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7721                           
  7722                           ; BSR set to: 0
  7723                           ;sm_MenuConfiguration_MC50.c: 1143:         edit_Param.tempValue++;
  7724  003A1E  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7725                           
  7726                           ; BSR set to: 0
  7727                           ;sm_MenuConfiguration_MC50.c: 1144:         if(edit_Param.tempValue>edit_Param.Max)
  7728  003A20  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7729  003A22  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  7730  003A24  A0D8               	btfss	status,0,c
  7731                           
  7732                           ; BSR set to: 0
  7733                           ;sm_MenuConfiguration_MC50.c: 1145:         {;sm_MenuConfiguration_MC50.c: 1146:        
      +                                edit_Param.tempValue=edit_Param.Min;
  7734  003A26  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  7735                           
  7736                           ; BSR set to: 0
  7737                           ;sm_MenuConfiguration_MC50.c: 1148:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1|| edit_Param.tempValue==edit_Param.Max)
  7738  003A2A  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7739  003A2E  0101               	movlb	1	; () banked
  7740  003A30  5117               	movf	(_menu_st+23)& (0+255),w,b
  7741  003A32  ECE3  F03E         	call	_cmdMemoryIsEmpty
  7742  003A36  06E8               	decf	wreg,f,c
  7743  003A38  B4D8               	btfsc	status,2,c
  7744  003A3A  D004               	goto	u25740
  7745  003A3C  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7746  003A3E  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7747  003A40  A4D8               	btfss	status,2,c
  7748  003A42  D021               	goto	l22091
  7749  003A44                     u25740:
  7750                           
  7751                           ;sm_MenuConfiguration_MC50.c: 1149:         {;sm_MenuConfiguration_MC50.c: 1150:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7752  003A44  0E0A               	movlw	10
  7753  003A46  6E10               	movwf	___lbmod@divisor^0,c
  7754  003A48  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7755  003A4A  EC81  F04B         	call	___lbmod
  7756  003A4E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7757  003A50  0E00               	movlw	0
  7758  003A52  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7759  003A54  0E14               	movlw	20
  7760  003A56  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7761  003A58  0E0A               	movlw	10
  7762  003A5A  6E10               	movwf	___lbmod@divisor^0,c
  7763  003A5C  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7764  003A5E  EC81  F04B         	call	___lbmod
  7765  003A62  0100               	movlb	0	; () banked
  7766  003A64  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7767  003A66  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7768  003A68  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7769  003A6A  6E14               	movwf	___awdiv@dividend^0,c
  7770  003A6C  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7771  003A6E  A0D8               	btfss	status,0,c
  7772  003A70  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7773  003A72  0E00               	movlw	0
  7774  003A74  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7775  003A76  0E0A               	movlw	10
  7776  003A78  6E16               	movwf	___awdiv@divisor^0,c
  7777  003A7A  EC8D  F040         	call	___awdiv	;wreg free
  7778  003A7E  5014               	movf	?___awdiv^0,w,c
  7779  003A80  EC4F  F04D         	call	_SetSegmentValueIntermitentMain
  7780                           
  7781                           ;sm_MenuConfiguration_MC50.c: 1151:         }
  7782  003A84  D7BE               	goto	l22071
  7783  003A86                     l22091:
  7784                           
  7785                           ;sm_MenuConfiguration_MC50.c: 1153:         {;sm_MenuConfiguration_MC50.c: 1154:        
      +                               SetSegmentValue((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempV
      +                          alue%10);
  7786  003A86  0E0A               	movlw	10
  7787  003A88  6E10               	movwf	___lbmod@divisor^0,c
  7788  003A8A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7789  003A8C  EC81  F04B         	call	___lbmod
  7790  003A90  6E1C               	movwf	SetSegmentValue@d2^0,c
  7791  003A92  0E0A               	movlw	10
  7792  003A94  6E10               	movwf	___lbmod@divisor^0,c
  7793  003A96  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7794  003A98  EC81  F04B         	call	___lbmod
  7795  003A9C  0100               	movlb	0	; () banked
  7796  003A9E  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7797  003AA0  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7798  003AA2  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7799  003AA4  6E14               	movwf	___awdiv@dividend^0,c
  7800  003AA6  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7801  003AA8  A0D8               	btfss	status,0,c
  7802  003AAA  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7803  003AAC  0E00               	movlw	0
  7804  003AAE  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7805  003AB0  0E0A               	movlw	10
  7806  003AB2  6E16               	movwf	___awdiv@divisor^0,c
  7807  003AB4  EC8D  F040         	call	___awdiv	;wreg free
  7808  003AB8  5014               	movf	?___awdiv^0,w,c
  7809  003ABA  ECC3  F04C         	call	_SetSegmentValue
  7810  003ABE  D7A1               	goto	l22071
  7811  003AC0                     l22095:
  7812                           
  7813                           ; BSR set to: 0
  7814  003AC0  0E63               	movlw	99
  7815  003AC2  644A               	cpfsgt	(_edit_Param+4)^0,c	;volatile
  7816  003AC4  D01B               	goto	l22105
  7817                           
  7818                           ; BSR set to: 0
  7819  003AC6  0E63               	movlw	99
  7820  003AC8  6449               	cpfsgt	(_edit_Param+3)^0,c	;volatile
  7821  003ACA  D018               	goto	l22105
  7822                           
  7823                           ; BSR set to: 0
  7824                           ;sm_MenuConfiguration_MC50.c: 1159:     {;sm_MenuConfiguration_MC50.c: 1160:         if(
      +                          menu_st.parameterSelected==0)
  7825  003ACC  0101               	movlb	1	; () banked
  7826  003ACE  5117               	movf	(_menu_st+23)& (0+255),w,b
  7827  003AD0  A4D8               	btfss	status,2,c
  7828  003AD2  D00A               	goto	l22103
  7829                           
  7830                           ; BSR set to: 1
  7831                           ;sm_MenuConfiguration_MC50.c: 1161:         {;sm_MenuConfiguration_MC50.c: 1162:        
      +                               SetSegmentValueIntermitentMain(dL, dU,( 500/50));
  7832  003AD4  0E13               	movlw	19
  7833  003AD6  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7834  003AD8  0E00               	movlw	0
  7835  003ADA  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7836  003ADC  0E0A               	movlw	10
  7837  003ADE  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7838  003AE0  0E12               	movlw	18
  7839  003AE2  EC4F  F04D         	call	_SetSegmentValueIntermitentMain
  7840                           
  7841                           ;sm_MenuConfiguration_MC50.c: 1163:         }
  7842  003AE6  0012               	return	
  7843  003AE8                     l22103:
  7844                           
  7845                           ; BSR set to: 1
  7846                           ;sm_MenuConfiguration_MC50.c: 1165:         {;sm_MenuConfiguration_MC50.c: 1166:        
      +                               SetSegmentValueIntermitentMain(dL, dP,( 500/50));
  7847  003AE8  0E10               	movlw	16
  7848  003AEA  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7849  003AEC  0E00               	movlw	0
  7850  003AEE  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7851  003AF0  0E0A               	movlw	10
  7852  003AF2  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7853  003AF4  0E12               	movlw	18
  7854  003AF6  EC4F  F04D         	call	_SetSegmentValueIntermitentMain
  7855  003AFA  0012               	return	
  7856  003AFC                     l22105:
  7857                           
  7858                           ; BSR set to: 0
  7859  003AFC  29E8               	incf	controlSelectRemote@temp& (0+255),w,b
  7860  003AFE  B4D8               	btfsc	status,2,c
  7861  003B00  D0AA               	goto	l22173
  7862                           
  7863                           ; BSR set to: 0
  7864  003B02  51E8               	movf	controlSelectRemote@temp& (0+255),w,b
  7865  003B04  B4D8               	btfsc	status,2,c
  7866  003B06  D00F               	goto	u25830
  7867                           
  7868                           ; BSR set to: 0
  7869  003B08  05E8               	decf	controlSelectRemote@temp& (0+255),w,b
  7870  003B0A  B4D8               	btfsc	status,2,c
  7871  003B0C  D00C               	goto	u25830
  7872                           
  7873                           ; BSR set to: 0
  7874  003B0E  0E02               	movlw	2
  7875  003B10  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7876  003B12  B4D8               	btfsc	status,2,c
  7877  003B14  D008               	goto	u25830
  7878                           
  7879                           ; BSR set to: 0
  7880  003B16  0E04               	movlw	4
  7881  003B18  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7882  003B1A  B4D8               	btfsc	status,2,c
  7883  003B1C  D004               	goto	u25830
  7884                           
  7885                           ; BSR set to: 0
  7886  003B1E  0E08               	movlw	8
  7887  003B20  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7888  003B22  A4D8               	btfss	status,2,c
  7889  003B24  D098               	goto	l22173
  7890  003B26                     u25830:
  7891                           
  7892                           ; BSR set to: 0
  7893                           ;sm_MenuConfiguration_MC50.c: 1170:     {;sm_MenuConfiguration_MC50.c: 1171:         cha
      +                          r pos;;sm_MenuConfiguration_MC50.c: 1172:         validSerial=validateRemoteSerialNumber
      +                          (tempSerial,NO,&pos);
  7894  003B26  C0E4  F02E         	movff	controlSelectRemote@tempSerial,validateRemoteSerialNumber@serial
  7895  003B2A  C0E5  F02F         	movff	controlSelectRemote@tempSerial+1,validateRemoteSerialNumber@serial+1
  7896  003B2E  C0E6  F030         	movff	controlSelectRemote@tempSerial+2,validateRemoteSerialNumber@serial+2
  7897  003B32  C0E7  F031         	movff	controlSelectRemote@tempSerial+3,validateRemoteSerialNumber@serial+3
  7898  003B36  0E00               	movlw	0
  7899  003B38  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
  7900  003B3A  0EE2               	movlw	low controlSelectRemote@pos
  7901  003B3C  6E33               	movwf	validateRemoteSerialNumber@position^0,c
  7902  003B3E  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
  7903  003B40  ECE5  F02E         	call	_validateRemoteSerialNumber	;wreg free
  7904  003B44  0100               	movlb	0	; () banked
  7905  003B46  6FE1               	movwf	controlSelectRemote@validSerial& (0+255),b
  7906                           
  7907                           ; BSR set to: 0
  7908                           ;sm_MenuConfiguration_MC50.c: 1174:         TypeRemote_st typeRemote = getTypeRemote();
  7909  003B48  EC04  F04E         	call	_getTypeRemote	;wreg free
  7910  003B4C  0100               	movlb	0	; () banked
  7911  003B4E  6FE3               	movwf	controlSelectRemote@typeRemote& (0+255),b
  7912                           
  7913                           ; BSR set to: 0
  7914                           ;sm_MenuConfiguration_MC50.c: 1175:         if(validSerial==0&&(typeRemote==Keeloq_Rolli
      +                          ngCode || (var_sys_NVM.OnlyRollingCode==NO)))
  7915  003B50  51E1               	movf	controlSelectRemote@validSerial& (0+255),w,b
  7916  003B52  A4D8               	btfss	status,2,c
  7917  003B54  0012               	return	
  7918                           
  7919                           ; BSR set to: 0
  7920  003B56  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7921  003B58  B4D8               	btfsc	status,2,c
  7922  003B5A  D004               	goto	u25860
  7923                           
  7924                           ; BSR set to: 0
  7925  003B5C  0101               	movlb	1	; () banked
  7926  003B5E  51CC               	movf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
  7927  003B60  A4D8               	btfss	status,2,c
  7928  003B62  0012               	return	
  7929  003B64                     u25860:
  7930                           
  7931                           ;sm_MenuConfiguration_MC50.c: 1176:         {;sm_MenuConfiguration_MC50.c: 1177:        
      +                               saveNewSerial(menu_st.parameterSelected,tempSerial,edit_Param.tempValue);
  7932  003B64  C0E4  F0D8         	movff	controlSelectRemote@tempSerial,saveNewSerial@tempSerial
  7933  003B68  C0E5  F0D9         	movff	controlSelectRemote@tempSerial+1,saveNewSerial@tempSerial+1
  7934  003B6C  C0E6  F0DA         	movff	controlSelectRemote@tempSerial+2,saveNewSerial@tempSerial+2
  7935  003B70  C0E7  F0DB         	movff	controlSelectRemote@tempSerial+3,saveNewSerial@tempSerial+3
  7936  003B74  C049  F0DC         	movff	_edit_Param+3,saveNewSerial@position	;volatile
  7937  003B78  0101               	movlb	1	; () banked
  7938  003B7A  5117               	movf	(_menu_st+23)& (0+255),w,b
  7939  003B7C  EC04  F043         	call	_saveNewSerial
  7940                           
  7941                           ;sm_MenuConfiguration_MC50.c: 1178:             if(menu_st.parameterSelected==0&&edit_Pa
      +                          ram.tempValue==var_sys_NVM.positionRemotesFull&&var_sys_NVM.positionRemotesFull<99)
  7942  003B80  0101               	movlb	1	; () banked
  7943  003B82  5117               	movf	(_menu_st+23)& (0+255),w,b
  7944  003B84  A4D8               	btfss	status,2,c
  7945  003B86  D008               	goto	l22137
  7946                           
  7947                           ; BSR set to: 1
  7948  003B88  51C6               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7949  003B8A  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7950  003B8C  A4D8               	btfss	status,2,c
  7951  003B8E  D004               	goto	l22137
  7952                           
  7953                           ; BSR set to: 1
  7954  003B90  0E63               	movlw	99
  7955  003B92  61C6               	cpfslt	(_var_sys_NVM+32)& (0+255),b	;volatile
  7956  003B94  D001               	goto	l22137
  7957                           
  7958                           ; BSR set to: 1
  7959                           ;sm_MenuConfiguration_MC50.c: 1179:                 var_sys_NVM.positionRemotesFull++;
  7960  003B96  2BC6               	incf	(_var_sys_NVM+32)& (0+255),f,b	;volatile
  7961  003B98                     l22137:
  7962                           
  7963                           ; BSR set to: 1
  7964                           ;sm_MenuConfiguration_MC50.c: 1180:             if(menu_st.parameterSelected==1&&edit_Pa
      +                          ram.tempValue==var_sys_NVM.positionRemotesWalk&&var_sys_NVM.positionRemotesWalk<99)
  7965  003B98  0517               	decf	(_menu_st+23)& (0+255),w,b
  7966  003B9A  A4D8               	btfss	status,2,c
  7967  003B9C  D008               	goto	l22145
  7968                           
  7969                           ; BSR set to: 1
  7970  003B9E  51C7               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
  7971  003BA0  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7972  003BA2  A4D8               	btfss	status,2,c
  7973  003BA4  D004               	goto	l22145
  7974                           
  7975                           ; BSR set to: 1
  7976  003BA6  0E63               	movlw	99
  7977  003BA8  61C7               	cpfslt	(_var_sys_NVM+33)& (0+255),b	;volatile
  7978  003BAA  D001               	goto	l22145
  7979                           
  7980                           ; BSR set to: 1
  7981                           ;sm_MenuConfiguration_MC50.c: 1181:                 var_sys_NVM.positionRemotesWalk++;
  7982  003BAC  2BC7               	incf	(_var_sys_NVM+33)& (0+255),f,b	;volatile
  7983  003BAE                     l22145:
  7984                           
  7985                           ; BSR set to: 1
  7986                           ;sm_MenuConfiguration_MC50.c: 1182:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_addRemotes);
  7987  003BAE  0EBD               	movlw	low _menuConfiguration_stateMachine
  7988  003BB0  6E12               	movwf	sm_send_event@psm^0,c
  7989  003BB2  0E02               	movlw	high _menuConfiguration_stateMachine
  7990  003BB4  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7991  003BB6  0E00               	movlw	0
  7992  003BB8  6E15               	movwf	(sm_send_event@event+1)^0,c
  7993  003BBA  0E08               	movlw	8
  7994  003BBC  6E14               	movwf	sm_send_event@event^0,c
  7995  003BBE  ECE8  F045         	call	_sm_send_event	;wreg free
  7996                           
  7997                           ;sm_MenuConfiguration_MC50.c: 1183:             var_sys.DistanceProgrammingActive=NO;
  7998  003BC2  0E00               	movlw	0
  7999  003BC4  0101               	movlb	1	; () banked
  8000  003BC6  6F95               	movwf	(_var_sys+64)& (0+255),b	;volatile
  8001                           
  8002                           ; BSR set to: 1
  8003                           ;sm_MenuConfiguration_MC50.c: 1184:             var_sys.ProgrammingDistanceIs=NoCMD;
  8004  003BC8  0E00               	movlw	0
  8005  003BCA  6F90               	movwf	(_var_sys+59)& (0+255),b	;volatile
  8006                           
  8007                           ; BSR set to: 1
  8008                           ;sm_MenuConfiguration_MC50.c: 1185:             ts_system.timeSinalizationDigit=(1000/50
      +                          )*2;
  8009  003BCC  0E00               	movlw	0
  8010  003BCE  0100               	movlb	0	; () banked
  8011  003BD0  6F9C               	movwf	(_ts_system+13)& (0+255),b	;volatile
  8012  003BD2  0E28               	movlw	40
  8013  003BD4  6F9B               	movwf	(_ts_system+12)& (0+255),b	;volatile
  8014                           
  8015                           ; BSR set to: 0
  8016                           ;sm_MenuConfiguration_MC50.c: 1186:             SetSegmentValueIntermitentMain((edit_Par
      +                          am.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,( 200/50));
  8017  003BD6  0E0A               	movlw	10
  8018  003BD8  6E10               	movwf	___lbmod@divisor^0,c
  8019  003BDA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8020  003BDC  EC81  F04B         	call	___lbmod
  8021  003BE0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  8022  003BE2  0E00               	movlw	0
  8023  003BE4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  8024  003BE6  0E04               	movlw	4
  8025  003BE8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  8026  003BEA  0E0A               	movlw	10
  8027  003BEC  6E10               	movwf	___lbmod@divisor^0,c
  8028  003BEE  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8029  003BF0  EC81  F04B         	call	___lbmod
  8030  003BF4  0100               	movlb	0	; () banked
  8031  003BF6  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  8032  003BF8  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  8033  003BFA  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  8034  003BFC  6E14               	movwf	___awdiv@dividend^0,c
  8035  003BFE  6A15               	clrf	(___awdiv@dividend+1)^0,c
  8036  003C00  A0D8               	btfss	status,0,c
  8037  003C02  0615               	decf	(___awdiv@dividend+1)^0,f,c
  8038  003C04  0E00               	movlw	0
  8039  003C06  6E17               	movwf	(___awdiv@divisor+1)^0,c
  8040  003C08  0E0A               	movlw	10
  8041  003C0A  6E16               	movwf	___awdiv@divisor^0,c
  8042  003C0C  EC8D  F040         	call	___awdiv	;wreg free
  8043  003C10  5014               	movf	?___awdiv^0,w,c
  8044  003C12  EC4F  F04D         	call	_SetSegmentValueIntermitentMain
  8045                           
  8046                           ;sm_MenuConfiguration_MC50.c: 1187:             if(edit_Param.Max==edit_Param.tempValue 
      +                          || edit_Param.Max==0 )
  8047  003C16  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8048  003C18  184A               	xorwf	(_edit_Param+4)^0,w,c	;volatile
  8049  003C1A  B4D8               	btfsc	status,2,c
  8050  003C1C  D003               	goto	u25940
  8051  003C1E  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  8052  003C20  A4D8               	btfss	status,2,c
  8053  003C22  0012               	return	
  8054  003C24                     u25940:
  8055                           
  8056                           ;sm_MenuConfiguration_MC50.c: 1188:             {;sm_MenuConfiguration_MC50.c: 1192:    
      +                                       if(var_sys_NVM.positionRemotesFull==0 && var_sys_NVM.positionRemotesWalk==0
      +                           && typeRemote==Keeloq_RollingCode)
  8057  003C24  0101               	movlb	1	; () banked
  8058  003C26  51C6               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  8059  003C28  A4D8               	btfss	status,2,c
  8060  003C2A  D00A               	goto	l22167
  8061                           
  8062                           ; BSR set to: 1
  8063  003C2C  51C7               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
  8064  003C2E  A4D8               	btfss	status,2,c
  8065  003C30  D007               	goto	l22167
  8066                           
  8067                           ; BSR set to: 1
  8068  003C32  0100               	movlb	0	; () banked
  8069  003C34  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  8070  003C36  A4D8               	btfss	status,2,c
  8071  003C38  D003               	goto	l22167
  8072                           
  8073                           ; BSR set to: 0
  8074                           ;sm_MenuConfiguration_MC50.c: 1193:                 {;sm_MenuConfiguration_MC50.c: 1195:
      +                                               var_sys_NVM.OnlyRollingCode=YES;
  8075  003C3A  0E01               	movlw	1
  8076  003C3C  0101               	movlb	1	; () banked
  8077  003C3E  6FCC               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  8078  003C40                     l22167:
  8079                           
  8080                           ;sm_MenuConfiguration_MC50.c: 1199:                 edit_Param.tempValue++;
  8081  003C40  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  8082                           
  8083                           ;sm_MenuConfiguration_MC50.c: 1200:                 edit_Param.Value[0]=edit_Param.tempV
      +                          alue;
  8084  003C42  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  8085  003C46  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  8086  003C4A  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  8087                           
  8088                           ;sm_MenuConfiguration_MC50.c: 1201:                 SaveNVM_VarSystem(pageMemoryCounters
      +                          );
  8089  003C4E  0E02               	movlw	2
  8090  003C50  EC7F  F048         	call	_SaveNVM_VarSystem
  8091  003C54  0012               	return	
  8092  003C56                     l22173:
  8093                           
  8094                           ; BSR set to: 0
  8095  003C56  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  8096  003C58  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  8097  003C5A  B4D8               	btfsc	status,2,c
  8098  003C5C  0012               	return	
  8099                           
  8100                           ; BSR set to: 0
  8101  003C5E  0E07               	movlw	7
  8102  003C60  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  8103  003C62  A4D8               	btfss	status,2,c
  8104  003C64  0012               	return	
  8105                           
  8106                           ; BSR set to: 0
  8107  003C66  0E27               	movlw	39
  8108  003C68  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  8109  003C6A  0012               	return	
  8110                           
  8111                           ; BSR set to: 0
  8112                           ;sm_MenuConfiguration_MC50.c: 1208:     {;sm_MenuConfiguration_MC50.c: 1209:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  8113  003C6C  0E00               	movlw	0
  8114  003C6E  6F9E               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8115  003C70  0E64               	movlw	100
  8116  003C72  6F9D               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8117                           
  8118                           ; BSR set to: 0
  8119                           ;sm_MenuConfiguration_MC50.c: 1210:         RemoveSerial(menu_st.parameterSelected,edit_
      +                          Param.tempValue);
  8120  003C74  C049  F0D8         	movff	_edit_Param+3,RemoveSerial@position	;volatile
  8121  003C78  0101               	movlb	1	; () banked
  8122  003C7A  5117               	movf	(_menu_st+23)& (0+255),w,b
  8123  003C7C  ECCF  F040         	call	_RemoveSerial
  8124                           
  8125                           ;sm_MenuConfiguration_MC50.c: 1211:         SetSegmentValueIntermitentMain((edit_Param.t
      +                          empValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  8126  003C80  0E0A               	movlw	10
  8127  003C82  6E10               	movwf	___lbmod@divisor^0,c
  8128  003C84  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8129  003C86  EC81  F04B         	call	___lbmod
  8130  003C8A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  8131  003C8C  0E00               	movlw	0
  8132  003C8E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  8133  003C90  0E14               	movlw	20
  8134  003C92  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  8135  003C94  0E0A               	movlw	10
  8136  003C96  6E10               	movwf	___lbmod@divisor^0,c
  8137  003C98  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8138  003C9A  EC81  F04B         	call	___lbmod
  8139  003C9E  0100               	movlb	0	; () banked
  8140  003CA0  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  8141  003CA2  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  8142  003CA4  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  8143  003CA6  6E14               	movwf	___awdiv@dividend^0,c
  8144  003CA8  6A15               	clrf	(___awdiv@dividend+1)^0,c
  8145  003CAA  A0D8               	btfss	status,0,c
  8146  003CAC  0615               	decf	(___awdiv@dividend+1)^0,f,c
  8147  003CAE  0E00               	movlw	0
  8148  003CB0  6E17               	movwf	(___awdiv@divisor+1)^0,c
  8149  003CB2  0E0A               	movlw	10
  8150  003CB4  6E16               	movwf	___awdiv@divisor^0,c
  8151  003CB6  EC8D  F040         	call	___awdiv	;wreg free
  8152  003CBA  5014               	movf	?___awdiv^0,w,c
  8153  003CBC  EC4F  F04D         	call	_SetSegmentValueIntermitentMain
  8154  003CC0  0012               	return	
  8155  003CC2                     __end_of_controlSelectRemote:
  8156                           	callstack 0
  8157                           
  8158 ;; *************** function _getTypeRemote *****************
  8159 ;; Defined at:
  8160 ;;		line 459 in file "inputs_MC50.c"
  8161 ;; Parameters:    Size  Location     Type
  8162 ;;		None
  8163 ;; Auto vars:     Size  Location     Type
  8164 ;;		None
  8165 ;; Return value:  Size  Location     Type
  8166 ;;                  1    wreg      enum E10559
  8167 ;; Registers used:
  8168 ;;		wreg, status,2
  8169 ;; Tracked objects:
  8170 ;;		On entry : 3F/0
  8171 ;;		On exit  : 3F/2
  8172 ;;		Unchanged: 0/0
  8173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8178 ;;Total ram usage:        0 bytes
  8179 ;; Hardware stack levels used: 1
  8180 ;; Hardware stack levels required when called: 4
  8181 ;; This function calls:
  8182 ;;		Nothing
  8183 ;; This function is called by:
  8184 ;;		_controlSelectRemote
  8185 ;; This function uses a non-reentrant model
  8186 ;;
  8187                           
  8188                           	psect	text7
  8189  009C08                     __ptext7:
  8190                           	callstack 0
  8191  009C08                     _getTypeRemote:
  8192                           	callstack 23
  8193                           
  8194                           ; BSR set to: 0
  8195                           ;inputs_MC50.c: 460:     return classic_data.type;
  8196                           
  8197                           ;incstack = 0
  8198  009C08  0102               	movlb	2	; () banked
  8199  009C0A  51A0               	movf	(_classic_data+14)& (0+255),w,b
  8200                           
  8201                           ; BSR set to: 2
  8202  009C0C  0012               	return		;funcret
  8203  009C0E                     __end_of_getTypeRemote:
  8204                           	callstack 0
  8205                           
  8206 ;; *************** function _getSerialCmd *****************
  8207 ;; Defined at:
  8208 ;;		line 442 in file "inputs_MC50.c"
  8209 ;; Parameters:    Size  Location     Type
  8210 ;;  serial          1   26[COMRAM] PTR unsigned long 
  8211 ;;		 -> controlSelectRemote@tempSerial(4), 
  8212 ;; Auto vars:     Size  Location     Type
  8213 ;;  temp            1   27[COMRAM] char 
  8214 ;; Return value:  Size  Location     Type
  8215 ;;                  1    wreg      char 
  8216 ;; Registers used:
  8217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8218 ;; Tracked objects:
  8219 ;;		On entry : 3F/1
  8220 ;;		On exit  : 0/0
  8221 ;;		Unchanged: 0/0
  8222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8223 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8224 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8226 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8227 ;;Total ram usage:        2 bytes
  8228 ;; Hardware stack levels used: 1
  8229 ;; Hardware stack levels required when called: 5
  8230 ;; This function calls:
  8231 ;;		_memcpy
  8232 ;; This function is called by:
  8233 ;;		_controlSelectRemote
  8234 ;; This function uses a non-reentrant model
  8235 ;;
  8236                           
  8237                           	psect	text8
  8238  008F82                     __ptext8:
  8239                           	callstack 0
  8240  008F82                     _getSerialCmd:
  8241                           	callstack 22
  8242                           
  8243                           ; BSR set to: 1
  8244                           ;inputs_MC50.c: 443:     signed char temp=-1;
  8245                           
  8246                           ; BSR set to: 2
  8247                           ;incstack = 0
  8248  008F82  681C               	setf	getSerialCmd@temp^0,c
  8249                           
  8250                           ; BSR set to: 1
  8251                           ;inputs_MC50.c: 444:     if(RFFull)
  8252  008F84  0100               	movlb	0	; () banked
  8253  008F86  51D7               	movf	_RFFull& (0+255),w,b	;volatile
  8254  008F88  B4D8               	btfsc	status,2,c
  8255  008F8A  D020               	goto	l20523
  8256                           
  8257                           ; BSR set to: 0
  8258                           ;inputs_MC50.c: 445:     {;inputs_MC50.c: 446:         if(RFFull_12BIT)
  8259  008F8C  5181               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
  8260  008F8E  B4D8               	btfsc	status,2,c
  8261  008F90  D00E               	goto	l20519
  8262                           
  8263                           ; BSR set to: 0
  8264                           ;inputs_MC50.c: 447:         {;inputs_MC50.c: 448:             memcpy((char*)serial,&cla
      +                          ssic_data.serialnumber,4);
  8265  008F92  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  8266  008F96  6A11               	clrf	(memcpy@d1+1)^0,c
  8267  008F98  0E96               	movlw	low (_classic_data+4)
  8268  008F9A  6E12               	movwf	memcpy@s1^0,c
  8269  008F9C  0E02               	movlw	high (_classic_data+4)
  8270  008F9E  6E13               	movwf	(memcpy@s1+1)^0,c
  8271  008FA0  0E00               	movlw	0
  8272  008FA2  6E15               	movwf	(memcpy@n+1)^0,c
  8273  008FA4  0E04               	movlw	4
  8274  008FA6  6E14               	movwf	memcpy@n^0,c
  8275  008FA8  ECE6  F048         	call	_memcpy	;wreg free
  8276                           
  8277                           ;inputs_MC50.c: 449:         }
  8278  008FAC  D00D               	goto	l20521
  8279  008FAE                     l20519:
  8280                           
  8281                           ; BSR set to: 0
  8282                           ;inputs_MC50.c: 451:         {;inputs_MC50.c: 452:             memcpy((char*)serial,(cha
      +                          r*)BufferRF+4,4);
  8283  008FAE  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  8284  008FB2  6A11               	clrf	(memcpy@d1+1)^0,c
  8285  008FB4  0ECC               	movlw	low (_BufferRF+4)
  8286  008FB6  6E12               	movwf	memcpy@s1^0,c
  8287  008FB8  0E02               	movlw	high (_BufferRF+4)
  8288  008FBA  6E13               	movwf	(memcpy@s1+1)^0,c
  8289  008FBC  0E00               	movlw	0
  8290  008FBE  6E15               	movwf	(memcpy@n+1)^0,c
  8291  008FC0  0E04               	movlw	4
  8292  008FC2  6E14               	movwf	memcpy@n^0,c
  8293  008FC4  ECE6  F048         	call	_memcpy	;wreg free
  8294  008FC8                     l20521:
  8295                           
  8296                           ;inputs_MC50.c: 454:         temp=classic_data.fcode1;
  8297  008FC8  C29E  F01C         	movff	_classic_data+12,getSerialCmd@temp
  8298  008FCC                     l20523:
  8299                           
  8300                           ;inputs_MC50.c: 456:     return temp;
  8301  008FCC  501C               	movf	getSerialCmd@temp^0,w,c
  8302  008FCE  0012               	return		;funcret
  8303  008FD0                     __end_of_getSerialCmd:
  8304                           	callstack 0
  8305                           
  8306 ;; *************** function _controlSaveRemote *****************
  8307 ;; Defined at:
  8308 ;;		line 1216 in file "sm_MenuConfiguration_MC50.c"
  8309 ;; Parameters:    Size  Location     Type
  8310 ;;		None
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;		None
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  1    wreg      void 
  8315 ;; Registers used:
  8316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8317 ;; Tracked objects:
  8318 ;;		On entry : 3F/0
  8319 ;;		On exit  : 0/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8324 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8325 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8326 ;;Total ram usage:        1 bytes
  8327 ;; Hardware stack levels used: 1
  8328 ;; Hardware stack levels required when called: 6
  8329 ;; This function calls:
  8330 ;;		_ClearFlag_rfCMD
  8331 ;;		_SetSegmentValueIntermitentMain
  8332 ;;		_SetSegmentValueMain
  8333 ;;		___awdiv
  8334 ;;		___lbmod
  8335 ;;		_sm_send_event
  8336 ;; This function is called by:
  8337 ;;		_sm_execute_menuConfiguration
  8338 ;; This function uses a non-reentrant model
  8339 ;;
  8340                           
  8341                           	psect	text9
  8342  007A0E                     __ptext9:
  8343                           	callstack 0
  8344  007A0E                     _controlSaveRemote:
  8345                           	callstack 22
  8346                           
  8347                           ; BSR set to: 0
  8348                           ;sm_MenuConfiguration_MC50.c: 1217:      if (ts_system.timeSinalizationDigit<=0)
  8349                           
  8350                           ;incstack = 0
  8351  007A0E  BF9C               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8352  007A10  D005               	goto	u26010
  8353  007A12  519C               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8354  007A14  E154               	bnz	l3541
  8355  007A16  059B               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8356  007A18  B0D8               	btfsc	status,0,c
  8357  007A1A  0012               	return	
  8358  007A1C                     u26010:
  8359                           
  8360                           ; BSR set to: 0
  8361                           ;sm_MenuConfiguration_MC50.c: 1218:      {;sm_MenuConfiguration_MC50.c: 1219:          i
      +                          f(edit_Param.Max==0)
  8362  007A1C  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  8363  007A1E  A4D8               	btfss	status,2,c
  8364  007A20  D02E               	goto	l22195
  8365                           
  8366                           ; BSR set to: 0
  8367                           ;sm_MenuConfiguration_MC50.c: 1220:          {;sm_MenuConfiguration_MC50.c: 1221:       
      +                                 ts_system.timeoutMenu=10*(1000/50);
  8368  007A22  0E00               	movlw	0
  8369  007A24  6F9E               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8370  007A26  0EC8               	movlw	200
  8371  007A28  6F9D               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8372                           
  8373                           ; BSR set to: 0
  8374                           ;sm_MenuConfiguration_MC50.c: 1222:              sm_send_event(&menuConfiguration_stateM
      +                          achine, ev_NextRemote);
  8375  007A2A  0EBD               	movlw	low _menuConfiguration_stateMachine
  8376  007A2C  6E12               	movwf	sm_send_event@psm^0,c
  8377  007A2E  0E02               	movlw	high _menuConfiguration_stateMachine
  8378  007A30  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8379  007A32  0E00               	movlw	0
  8380  007A34  6E15               	movwf	(sm_send_event@event+1)^0,c
  8381  007A36  0E09               	movlw	9
  8382  007A38  6E14               	movwf	sm_send_event@event^0,c
  8383  007A3A  ECE8  F045         	call	_sm_send_event	;wreg free
  8384                           
  8385                           ;sm_MenuConfiguration_MC50.c: 1223:              SetSegmentValueIntermitentMain((edit_Pa
      +                          ram.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  8386  007A3E  0E0A               	movlw	10
  8387  007A40  6E10               	movwf	___lbmod@divisor^0,c
  8388  007A42  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8389  007A44  EC81  F04B         	call	___lbmod
  8390  007A48  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  8391  007A4A  0E00               	movlw	0
  8392  007A4C  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  8393  007A4E  0E14               	movlw	20
  8394  007A50  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  8395  007A52  0E0A               	movlw	10
  8396  007A54  6E10               	movwf	___lbmod@divisor^0,c
  8397  007A56  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8398  007A58  EC81  F04B         	call	___lbmod
  8399  007A5C  6E20               	movwf	??_controlSaveRemote^0,c
  8400  007A5E  5020               	movf	??_controlSaveRemote^0,w,c
  8401  007A60  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  8402  007A62  6E14               	movwf	___awdiv@dividend^0,c
  8403  007A64  6A15               	clrf	(___awdiv@dividend+1)^0,c
  8404  007A66  A0D8               	btfss	status,0,c
  8405  007A68  0615               	decf	(___awdiv@dividend+1)^0,f,c
  8406  007A6A  0E00               	movlw	0
  8407  007A6C  6E17               	movwf	(___awdiv@divisor+1)^0,c
  8408  007A6E  0E0A               	movlw	10
  8409  007A70  6E16               	movwf	___awdiv@divisor^0,c
  8410  007A72  EC8D  F040         	call	___awdiv	;wreg free
  8411  007A76  5014               	movf	?___awdiv^0,w,c
  8412  007A78  EC4F  F04D         	call	_SetSegmentValueIntermitentMain
  8413                           
  8414                           ;sm_MenuConfiguration_MC50.c: 1224:          }
  8415  007A7C  0012               	return	
  8416  007A7E                     l22195:
  8417                           
  8418                           ; BSR set to: 0
  8419                           ;sm_MenuConfiguration_MC50.c: 1226:          {;sm_MenuConfiguration_MC50.c: 1227:       
      +                                sm_send_event(&main_stateMachine, ev_goto_StandBy);
  8420  007A7E  0EF1               	movlw	low _main_stateMachine
  8421  007A80  6E12               	movwf	sm_send_event@psm^0,c
  8422  007A82  0E01               	movlw	high _main_stateMachine
  8423  007A84  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8424  007A86  0E00               	movlw	0
  8425  007A88  6E15               	movwf	(sm_send_event@event+1)^0,c
  8426  007A8A  0E07               	movlw	7
  8427  007A8C  6E14               	movwf	sm_send_event@event^0,c
  8428  007A8E  ECE8  F045         	call	_sm_send_event	;wreg free
  8429                           
  8430                           ;sm_MenuConfiguration_MC50.c: 1228:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_ParameterIsSaved);
  8431  007A92  0EBD               	movlw	low _menuConfiguration_stateMachine
  8432  007A94  6E12               	movwf	sm_send_event@psm^0,c
  8433  007A96  0E02               	movlw	high _menuConfiguration_stateMachine
  8434  007A98  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8435  007A9A  0E00               	movlw	0
  8436  007A9C  6E15               	movwf	(sm_send_event@event+1)^0,c
  8437  007A9E  0E04               	movlw	4
  8438  007AA0  6E14               	movwf	sm_send_event@event^0,c
  8439  007AA2  ECE8  F045         	call	_sm_send_event	;wreg free
  8440                           
  8441                           ;sm_MenuConfiguration_MC50.c: 1229:             SetSegmentValueMain(dMinus,dMinus);
  8442  007AA6  0E18               	movlw	24
  8443  007AA8  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  8444  007AAA  0E18               	movlw	24
  8445  007AAC  ECA9  F04C         	call	_SetSegmentValueMain
  8446                           
  8447                           ; BSR set to: 0
  8448                           ;sm_MenuConfiguration_MC50.c: 1230:             ClearFlag_rfCMD();
  8449  007AB0  EC07  F04E         	call	_ClearFlag_rfCMD	;wreg free
  8450                           
  8451                           ;sm_MenuConfiguration_MC50.c: 1231:             ts_system.timeoutMenu = 0;
  8452  007AB4  0E00               	movlw	0
  8453  007AB6  0100               	movlb	0	; () banked
  8454  007AB8  6F9E               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8455  007ABA  0E00               	movlw	0
  8456  007ABC  6F9D               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8457  007ABE                     l3541:
  8458  007ABE  0012               	return		;funcret
  8459  007AC0                     __end_of_controlSaveRemote:
  8460                           	callstack 0
  8461                           
  8462 ;; *************** function ___lbmod *****************
  8463 ;; Defined at:
  8464 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbmod.c"
  8465 ;; Parameters:    Size  Location     Type
  8466 ;;  dividend        1    wreg     unsigned char 
  8467 ;;  divisor         1   15[COMRAM] unsigned char 
  8468 ;; Auto vars:     Size  Location     Type
  8469 ;;  dividend        1   16[COMRAM] unsigned char 
  8470 ;;  rem             1   18[COMRAM] unsigned char 
  8471 ;;  counter         1   17[COMRAM] unsigned char 
  8472 ;; Return value:  Size  Location     Type
  8473 ;;                  1    wreg      unsigned char 
  8474 ;; Registers used:
  8475 ;;		wreg, status,2, status,0
  8476 ;; Tracked objects:
  8477 ;;		On entry : 0/0
  8478 ;;		On exit  : 0/0
  8479 ;;		Unchanged: 0/0
  8480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8481 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8482 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8484 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8485 ;;Total ram usage:        4 bytes
  8486 ;; Hardware stack levels used: 1
  8487 ;; Hardware stack levels required when called: 4
  8488 ;; This function calls:
  8489 ;;		Nothing
  8490 ;; This function is called by:
  8491 ;;		_controlSelectRemote
  8492 ;;		_controlSaveRemote
  8493 ;; This function uses a non-reentrant model
  8494 ;;
  8495                           
  8496                           	psect	text10
  8497  009702                     __ptext10:
  8498                           	callstack 0
  8499  009702                     ___lbmod:
  8500                           	callstack 23
  8501                           
  8502                           ;incstack = 0
  8503                           ;___lbmod@dividend stored from wreg
  8504  009702  6E11               	movwf	___lbmod@dividend^0,c
  8505  009704  0E08               	movlw	8
  8506  009706  6E12               	movwf	___lbmod@counter^0,c
  8507  009708  0E00               	movlw	0
  8508  00970A  6E13               	movwf	___lbmod@rem^0,c
  8509  00970C                     l20917:
  8510  00970C  90D8               	bcf	status,0,c
  8511  00970E  3411               	rlcf	___lbmod@dividend^0,w,c
  8512  009710  3413               	rlcf	___lbmod@rem^0,w,c
  8513  009712  6E13               	movwf	___lbmod@rem^0,c
  8514  009714  90D8               	bcf	status,0,c
  8515  009716  3611               	rlcf	___lbmod@dividend^0,f,c
  8516  009718  5010               	movf	___lbmod@divisor^0,w,c
  8517  00971A  5C13               	subwf	___lbmod@rem^0,w,c
  8518  00971C  A0D8               	btfss	status,0,c
  8519  00971E  D002               	goto	l20925
  8520  009720  5010               	movf	___lbmod@divisor^0,w,c
  8521  009722  5E13               	subwf	___lbmod@rem^0,f,c
  8522  009724                     l20925:
  8523  009724  2E12               	decfsz	___lbmod@counter^0,f,c
  8524  009726  D7F2               	goto	l20917
  8525  009728  5013               	movf	___lbmod@rem^0,w,c
  8526  00972A  0012               	return		;funcret
  8527  00972C                     __end_of___lbmod:
  8528                           	callstack 0
  8529                           
  8530 ;; *************** function ___awdiv *****************
  8531 ;; Defined at:
  8532 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  8533 ;; Parameters:    Size  Location     Type
  8534 ;;  dividend        2   19[COMRAM] int 
  8535 ;;  divisor         2   21[COMRAM] int 
  8536 ;; Auto vars:     Size  Location     Type
  8537 ;;  quotient        2   25[COMRAM] int 
  8538 ;;  sign            1   24[COMRAM] unsigned char 
  8539 ;;  counter         1   23[COMRAM] unsigned char 
  8540 ;; Return value:  Size  Location     Type
  8541 ;;                  2   19[COMRAM] int 
  8542 ;; Registers used:
  8543 ;;		wreg, status,2, status,0
  8544 ;; Tracked objects:
  8545 ;;		On entry : 0/0
  8546 ;;		On exit  : 0/0
  8547 ;;		Unchanged: 0/0
  8548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8549 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8550 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8552 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8553 ;;Total ram usage:        8 bytes
  8554 ;; Hardware stack levels used: 1
  8555 ;; Hardware stack levels required when called: 4
  8556 ;; This function calls:
  8557 ;;		Nothing
  8558 ;; This function is called by:
  8559 ;;		_controlSelectRemote
  8560 ;;		_controlSaveRemote
  8561 ;; This function uses a non-reentrant model
  8562 ;;
  8563                           
  8564                           	psect	text11
  8565  00811A                     __ptext11:
  8566                           	callstack 0
  8567  00811A                     ___awdiv:
  8568                           	callstack 23
  8569                           
  8570                           ;incstack = 0
  8571  00811A  0E00               	movlw	0
  8572  00811C  6E19               	movwf	___awdiv@sign^0,c
  8573  00811E  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8574  008120  D006               	goto	l20853
  8575  008122  6C16               	negf	___awdiv@divisor^0,c
  8576  008124  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  8577  008126  B0D8               	btfsc	status,0,c
  8578  008128  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  8579  00812A  0E01               	movlw	1
  8580  00812C  6E19               	movwf	___awdiv@sign^0,c
  8581  00812E                     l20853:
  8582  00812E  AE15               	btfss	(___awdiv@dividend+1)^0,7,c
  8583  008130  D006               	goto	l20859
  8584  008132  6C14               	negf	___awdiv@dividend^0,c
  8585  008134  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  8586  008136  B0D8               	btfsc	status,0,c
  8587  008138  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  8588  00813A  0E01               	movlw	1
  8589  00813C  1A19               	xorwf	___awdiv@sign^0,f,c
  8590  00813E                     l20859:
  8591  00813E  0E00               	movlw	0
  8592  008140  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  8593  008142  0E00               	movlw	0
  8594  008144  6E1A               	movwf	___awdiv@quotient^0,c
  8595  008146  5016               	movf	___awdiv@divisor^0,w,c
  8596  008148  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  8597  00814A  B4D8               	btfsc	status,2,c
  8598  00814C  D01C               	goto	l20881
  8599  00814E  0E01               	movlw	1
  8600  008150  6E18               	movwf	___awdiv@counter^0,c
  8601  008152  D004               	goto	l20867
  8602  008154                     l20865:
  8603  008154  90D8               	bcf	status,0,c
  8604  008156  3616               	rlcf	___awdiv@divisor^0,f,c
  8605  008158  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  8606  00815A  2A18               	incf	___awdiv@counter^0,f,c
  8607  00815C                     l20867:
  8608  00815C  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8609  00815E  D7FA               	goto	l20865
  8610  008160                     u24420:
  8611  008160  90D8               	bcf	status,0,c
  8612  008162  361A               	rlcf	___awdiv@quotient^0,f,c
  8613  008164  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  8614  008166  5016               	movf	___awdiv@divisor^0,w,c
  8615  008168  5C14               	subwf	___awdiv@dividend^0,w,c
  8616  00816A  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8617  00816C  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  8618  00816E  A0D8               	btfss	status,0,c
  8619  008170  D005               	goto	l20877
  8620  008172  5016               	movf	___awdiv@divisor^0,w,c
  8621  008174  5E14               	subwf	___awdiv@dividend^0,f,c
  8622  008176  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8623  008178  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  8624  00817A  801A               	bsf	___awdiv@quotient^0,0,c
  8625  00817C                     l20877:
  8626  00817C  90D8               	bcf	status,0,c
  8627  00817E  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  8628  008180  3216               	rrcf	___awdiv@divisor^0,f,c
  8629  008182  2E18               	decfsz	___awdiv@counter^0,f,c
  8630  008184  D7ED               	goto	u24420
  8631  008186                     l20881:
  8632  008186  5019               	movf	___awdiv@sign^0,w,c
  8633  008188  B4D8               	btfsc	status,2,c
  8634  00818A  D004               	goto	l20885
  8635  00818C  6C1A               	negf	___awdiv@quotient^0,c
  8636  00818E  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  8637  008190  B0D8               	btfsc	status,0,c
  8638  008192  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  8639  008194                     l20885:
  8640  008194  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  8641  008198  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  8642  00819C  0012               	return		;funcret
  8643  00819E                     __end_of___awdiv:
  8644                           	callstack 0
  8645                           
  8646 ;; *************** function _SetSegmentValueMain *****************
  8647 ;; Defined at:
  8648 ;;		line 104 in file "outputs_MC50.c"
  8649 ;; Parameters:    Size  Location     Type
  8650 ;;  d1              1    wreg     unsigned char 
  8651 ;;  d2              1   27[COMRAM] unsigned char 
  8652 ;; Auto vars:     Size  Location     Type
  8653 ;;  d1              1   28[COMRAM] unsigned char 
  8654 ;; Return value:  Size  Location     Type
  8655 ;;                  1    wreg      void 
  8656 ;; Registers used:
  8657 ;;		wreg, status,2
  8658 ;; Tracked objects:
  8659 ;;		On entry : 0/0
  8660 ;;		On exit  : 3F/0
  8661 ;;		Unchanged: 0/0
  8662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8663 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8664 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8666 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8667 ;;Total ram usage:        2 bytes
  8668 ;; Hardware stack levels used: 1
  8669 ;; Hardware stack levels required when called: 4
  8670 ;; This function calls:
  8671 ;;		Nothing
  8672 ;; This function is called by:
  8673 ;;		_sm_execute_main
  8674 ;;		_sm_execute_menuConfiguration
  8675 ;;		_load_New_Menu
  8676 ;;		_controlSelectRemote
  8677 ;;		_controlSaveRemote
  8678 ;; This function uses a non-reentrant model
  8679 ;;
  8680                           
  8681                           	psect	text12
  8682  009952                     __ptext12:
  8683                           	callstack 0
  8684  009952                     _SetSegmentValueMain:
  8685                           	callstack 22
  8686                           
  8687                           ;incstack = 0
  8688                           ;SetSegmentValueMain@d1 stored from wreg
  8689  009952  6E1D               	movwf	SetSegmentValueMain@d1^0,c
  8690                           
  8691                           ;outputs_MC50.c: 104: void SetSegmentValueMain(char d1, char d2);outputs_MC50.c: 105: {;
      +                          outputs_MC50.c: 106:     dispStruct.display_grp.value_display1=d1;
  8692  009954  C01D  F060         	movff	SetSegmentValueMain@d1,_dispStruct	;volatile
  8693                           
  8694                           ;outputs_MC50.c: 107:     dispStruct.display_grp.value_display2=d2;
  8695  009958  C01C  F061         	movff	SetSegmentValueMain@d2,_dispStruct+1	;volatile
  8696                           
  8697                           ;outputs_MC50.c: 108:     dispStruct.intermitentFreq=0;
  8698  00995C  0E00               	movlw	0
  8699  00995E  0100               	movlb	0	; () banked
  8700  009960  6F64               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8701  009962  0E00               	movlw	0
  8702  009964  6F63               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8703                           
  8704                           ; BSR set to: 0
  8705                           ;outputs_MC50.c: 109:     dispStruct.upFase=0;
  8706  009966  0E00               	movlw	0
  8707  009968  6F65               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8708                           
  8709                           ; BSR set to: 0
  8710  00996A  0012               	return		;funcret
  8711  00996C                     __end_of_SetSegmentValueMain:
  8712                           	callstack 0
  8713                           
  8714 ;; *************** function _ClearFlag_rfCMD *****************
  8715 ;; Defined at:
  8716 ;;		line 463 in file "inputs_MC50.c"
  8717 ;; Parameters:    Size  Location     Type
  8718 ;;		None
  8719 ;; Auto vars:     Size  Location     Type
  8720 ;;		None
  8721 ;; Return value:  Size  Location     Type
  8722 ;;                  1    wreg      void 
  8723 ;; Registers used:
  8724 ;;		wreg, status,2
  8725 ;; Tracked objects:
  8726 ;;		On entry : 0/1
  8727 ;;		On exit  : 0/0
  8728 ;;		Unchanged: 0/0
  8729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8734 ;;Total ram usage:        0 bytes
  8735 ;; Hardware stack levels used: 1
  8736 ;; Hardware stack levels required when called: 4
  8737 ;; This function calls:
  8738 ;;		Nothing
  8739 ;; This function is called by:
  8740 ;;		_sm_execute_menuConfiguration
  8741 ;;		_controlSelectRemote
  8742 ;;		_controlSaveRemote
  8743 ;; This function uses a non-reentrant model
  8744 ;;
  8745                           
  8746                           	psect	text13
  8747  009C0E                     __ptext13:
  8748                           	callstack 0
  8749  009C0E                     _ClearFlag_rfCMD:
  8750                           	callstack 23
  8751                           
  8752                           ;inputs_MC50.c: 464:     rfCMD.processed=1;
  8753                           
  8754                           ; BSR set to: 0
  8755                           ;incstack = 0
  8756  009C0E  0E01               	movlw	1
  8757  009C10  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  8758  009C12  0012               	return		;funcret
  8759  009C14                     __end_of_ClearFlag_rfCMD:
  8760                           	callstack 0
  8761                           
  8762 ;; *************** function _controlLearnDigit *****************
  8763 ;; Defined at:
  8764 ;;		line 1237 in file "sm_MenuConfiguration_MC50.c"
  8765 ;; Parameters:    Size  Location     Type
  8766 ;;		None
  8767 ;; Auto vars:     Size  Location     Type
  8768 ;;		None
  8769 ;; Return value:  Size  Location     Type
  8770 ;;                  1    wreg      void 
  8771 ;; Registers used:
  8772 ;;		wreg, status,2, status,0, cstack
  8773 ;; Tracked objects:
  8774 ;;		On entry : 3F/0
  8775 ;;		On exit  : 3F/0
  8776 ;;		Unchanged: 0/0
  8777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8782 ;;Total ram usage:        0 bytes
  8783 ;; Hardware stack levels used: 1
  8784 ;; Hardware stack levels required when called: 5
  8785 ;; This function calls:
  8786 ;;		_SetSegmentValueLearn
  8787 ;; This function is called by:
  8788 ;;		_sm_execute_menuConfiguration
  8789 ;; This function uses a non-reentrant model
  8790 ;;
  8791                           
  8792                           	psect	text14
  8793  009492                     __ptext14:
  8794                           	callstack 0
  8795  009492                     _controlLearnDigit:
  8796                           	callstack 23
  8797                           
  8798                           ; BSR set to: 0
  8799                           ;sm_MenuConfiguration_MC50.c: 1239:     if(ts_system.timeSinalizationDigit<=0 )
  8800                           
  8801                           ;incstack = 0
  8802  009492  BF9C               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8803  009494  D005               	goto	u26030
  8804  009496  519C               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8805  009498  E113               	bnz	l3547
  8806  00949A  059B               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8807  00949C  B0D8               	btfsc	status,0,c
  8808  00949E  0012               	return	
  8809  0094A0                     u26030:
  8810                           
  8811                           ; BSR set to: 0
  8812                           ;sm_MenuConfiguration_MC50.c: 1240:     {;sm_MenuConfiguration_MC50.c: 1241:         ts_
      +                          system.timeSinalizationDigit=( 100/50);
  8813  0094A0  0E00               	movlw	0
  8814  0094A2  6F9C               	movwf	(_ts_system+13)& (0+255),b	;volatile
  8815  0094A4  0E02               	movlw	2
  8816  0094A6  6F9B               	movwf	(_ts_system+12)& (0+255),b	;volatile
  8817                           
  8818                           ; BSR set to: 0
  8819                           ;sm_MenuConfiguration_MC50.c: 1242:         if(var_sys.StateMotor==InClose)
  8820  0094A8  0E03               	movlw	3
  8821  0094AA  0101               	movlb	1	; () banked
  8822  0094AC  1955               	xorwf	_var_sys& (0+255),w,b	;volatile
  8823  0094AE  A4D8               	btfss	status,2,c
  8824  0094B0  D004               	goto	l22211
  8825                           
  8826                           ; BSR set to: 1
  8827                           ;sm_MenuConfiguration_MC50.c: 1243:         {;sm_MenuConfiguration_MC50.c: 1244:        
      +                               SetSegmentValueLearn(Left);
  8828  0094B2  0E00               	movlw	0
  8829  0094B4  EC36  F038         	call	_SetSegmentValueLearn
  8830                           
  8831                           ;sm_MenuConfiguration_MC50.c: 1245:         }
  8832  0094B8  0012               	return	
  8833  0094BA                     l22211:
  8834                           
  8835                           ; BSR set to: 1
  8836                           ;sm_MenuConfiguration_MC50.c: 1247:         {;sm_MenuConfiguration_MC50.c: 1248:        
      +                               SetSegmentValueLearn(Rigth);
  8837  0094BA  0E01               	movlw	1
  8838  0094BC  EC36  F038         	call	_SetSegmentValueLearn
  8839  0094C0                     l3547:
  8840                           
  8841                           ; BSR set to: 0
  8842  0094C0  0012               	return		;funcret
  8843  0094C2                     __end_of_controlLearnDigit:
  8844                           	callstack 0
  8845                           
  8846 ;; *************** function _SetSegmentValueLearn *****************
  8847 ;; Defined at:
  8848 ;;		line 124 in file "outputs_MC50.c"
  8849 ;; Parameters:    Size  Location     Type
  8850 ;;  direction       1    wreg     enum E10602
  8851 ;; Auto vars:     Size  Location     Type
  8852 ;;  direction       1   17[COMRAM] enum E10602
  8853 ;; Return value:  Size  Location     Type
  8854 ;;                  1    wreg      void 
  8855 ;; Registers used:
  8856 ;;		wreg, status,2, status,0
  8857 ;; Tracked objects:
  8858 ;;		On entry : 3F/1
  8859 ;;		On exit  : 3F/0
  8860 ;;		Unchanged: 0/0
  8861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8863 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8864 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8865 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8866 ;;Total ram usage:        3 bytes
  8867 ;; Hardware stack levels used: 1
  8868 ;; Hardware stack levels required when called: 4
  8869 ;; This function calls:
  8870 ;;		Nothing
  8871 ;; This function is called by:
  8872 ;;		_controlLearnDigit
  8873 ;; This function uses a non-reentrant model
  8874 ;;
  8875                           
  8876                           	psect	text15
  8877  00706C                     __ptext15:
  8878                           	callstack 0
  8879  00706C                     _SetSegmentValueLearn:
  8880                           	callstack 23
  8881                           
  8882                           ; BSR set to: 0
  8883                           ;incstack = 0
  8884                           ;SetSegmentValueLearn@direction stored from wreg
  8885  00706C  6E12               	movwf	SetSegmentValueLearn@direction^0,c
  8886                           
  8887                           ;outputs_MC50.c: 124: void SetSegmentValueLearn(Direction_en direction);outputs_MC50.c: 
      +                          125: {;outputs_MC50.c: 126:     dispStruct.intermitentFreq=0;
  8888  00706E  0E00               	movlw	0
  8889  007070  0100               	movlb	0	; () banked
  8890  007072  6F64               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8891  007074  0E00               	movlw	0
  8892  007076  6F63               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8893                           
  8894                           ;outputs_MC50.c: 127:     dispStruct.upFase=0;
  8895  007078  0E00               	movlw	0
  8896  00707A  6F65               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8897                           
  8898                           ;outputs_MC50.c: 128:     switch (direction)
  8899  00707C  D066               	goto	l20681
  8900  00707E                     l20627:
  8901                           
  8902                           ; BSR set to: 0
  8903                           ;outputs_MC50.c: 131:             if(dispStruct.display_grp.value_display1==sA && dispSt
      +                          ruct.display_grp.value_display2==dBlank)
  8904  00707E  0E1A               	movlw	26
  8905  007080  1960               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8906  007082  A4D8               	btfss	status,2,c
  8907  007084  D009               	goto	l20633
  8908                           
  8909                           ; BSR set to: 0
  8910  007086  0E20               	movlw	32
  8911  007088  1961               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8912  00708A  A4D8               	btfss	status,2,c
  8913  00708C  D005               	goto	l20633
  8914                           
  8915                           ; BSR set to: 0
  8916                           ;outputs_MC50.c: 132:             {;outputs_MC50.c: 133:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8917  00708E  0E20               	movlw	32
  8918  007090  6F60               	movwf	_dispStruct& (0+255),b	;volatile
  8919                           
  8920                           ;outputs_MC50.c: 134:                dispStruct.display_grp.value_display2=sA;
  8921  007092  0E1A               	movlw	26
  8922  007094  6F61               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8923                           
  8924                           ;outputs_MC50.c: 135:             }
  8925  007096  0012               	return	
  8926  007098                     l20633:
  8927                           
  8928                           ; BSR set to: 0
  8929  007098  0E20               	movlw	32
  8930  00709A  1960               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8931  00709C  A4D8               	btfss	status,2,c
  8932  00709E  D009               	goto	l20639
  8933                           
  8934                           ; BSR set to: 0
  8935  0070A0  0E1D               	movlw	29
  8936  0070A2  1961               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8937  0070A4  A4D8               	btfss	status,2,c
  8938  0070A6  D005               	goto	l20639
  8939                           
  8940                           ; BSR set to: 0
  8941                           ;outputs_MC50.c: 137:             {;outputs_MC50.c: 138:                dispStruct.displ
      +                          ay_grp.value_display1=sD;
  8942  0070A8  0E1D               	movlw	29
  8943  0070AA  6F60               	movwf	_dispStruct& (0+255),b	;volatile
  8944                           
  8945                           ;outputs_MC50.c: 139:                dispStruct.display_grp.value_display2=dBlank;
  8946  0070AC  0E20               	movlw	32
  8947  0070AE  6F61               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8948                           
  8949                           ;outputs_MC50.c: 140:             }
  8950  0070B0  0012               	return	
  8951  0070B2                     l20639:
  8952                           
  8953                           ; BSR set to: 0
  8954  0070B2  0E1F               	movlw	31
  8955  0070B4  1960               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8956  0070B6  A4D8               	btfss	status,2,c
  8957  0070B8  D005               	goto	l20643
  8958                           
  8959                           ; BSR set to: 0
  8960                           ;outputs_MC50.c: 142:             {;outputs_MC50.c: 143:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8961  0070BA  0E1A               	movlw	26
  8962  0070BC  6F60               	movwf	_dispStruct& (0+255),b	;volatile
  8963                           
  8964                           ;outputs_MC50.c: 144:                dispStruct.display_grp.value_display2=dBlank;
  8965  0070BE  0E20               	movlw	32
  8966  0070C0  6F61               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8967                           
  8968                           ;outputs_MC50.c: 145:             }
  8969  0070C2  0012               	return	
  8970  0070C4                     l20643:
  8971                           
  8972                           ; BSR set to: 0
  8973  0070C4  0E20               	movlw	32
  8974  0070C6  1960               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8975  0070C8  A4D8               	btfss	status,2,c
  8976  0070CA  D002               	goto	l20647
  8977                           
  8978                           ; BSR set to: 0
  8979                           ;outputs_MC50.c: 147:             {;outputs_MC50.c: 148:                dispStruct.displ
      +                          ay_grp.value_display2++;
  8980  0070CC  2B61               	incf	(_dispStruct+1)& (0+255),f,b	;volatile
  8981                           
  8982                           ;outputs_MC50.c: 149:             }
  8983  0070CE  0012               	return	
  8984  0070D0                     l20647:
  8985                           
  8986                           ; BSR set to: 0
  8987  0070D0  0E20               	movlw	32
  8988  0070D2  1961               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8989  0070D4  A4D8               	btfss	status,2,c
  8990  0070D6  D002               	goto	l20651
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;outputs_MC50.c: 151:             {;outputs_MC50.c: 152:                dispStruct.displ
      +                          ay_grp.value_display1++;
  8994  0070D8  2B60               	incf	_dispStruct& (0+255),f,b	;volatile
  8995                           
  8996                           ;outputs_MC50.c: 153:             }
  8997  0070DA  0012               	return	
  8998  0070DC                     l20651:
  8999                           
  9000                           ; BSR set to: 0
  9001                           ;outputs_MC50.c: 155:             {;outputs_MC50.c: 156:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  9002  0070DC  0E1A               	movlw	26
  9003  0070DE  6F60               	movwf	_dispStruct& (0+255),b	;volatile
  9004                           
  9005                           ;outputs_MC50.c: 157:                dispStruct.display_grp.value_display2=dBlank;
  9006  0070E0  0E20               	movlw	32
  9007  0070E2  6F61               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  9008  0070E4  0012               	return	
  9009  0070E6                     l20653:
  9010                           
  9011                           ; BSR set to: 0
  9012                           ;outputs_MC50.c: 161:             if(dispStruct.display_grp.value_display2==sA && dispSt
      +                          ruct.display_grp.value_display1==dBlank)
  9013  0070E6  0E1A               	movlw	26
  9014  0070E8  1961               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  9015  0070EA  A4D8               	btfss	status,2,c
  9016  0070EC  D009               	goto	l20659
  9017                           
  9018                           ; BSR set to: 0
  9019  0070EE  0E20               	movlw	32
  9020  0070F0  1960               	xorwf	_dispStruct& (0+255),w,b	;volatile
  9021  0070F2  A4D8               	btfss	status,2,c
  9022  0070F4  D005               	goto	l20659
  9023                           
  9024                           ; BSR set to: 0
  9025                           ;outputs_MC50.c: 162:             {;outputs_MC50.c: 163:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  9026  0070F6  0E1A               	movlw	26
  9027  0070F8  6F60               	movwf	_dispStruct& (0+255),b	;volatile
  9028                           
  9029                           ;outputs_MC50.c: 164:                dispStruct.display_grp.value_display2=dBlank;
  9030  0070FA  0E20               	movlw	32
  9031  0070FC  6F61               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  9032                           
  9033                           ;outputs_MC50.c: 165:             }
  9034  0070FE  0012               	return	
  9035  007100                     l20659:
  9036                           
  9037                           ; BSR set to: 0
  9038  007100  0E20               	movlw	32
  9039  007102  1961               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  9040  007104  A4D8               	btfss	status,2,c
  9041  007106  D009               	goto	l20665
  9042                           
  9043                           ; BSR set to: 0
  9044  007108  0E1D               	movlw	29
  9045  00710A  1960               	xorwf	_dispStruct& (0+255),w,b	;volatile
  9046  00710C  A4D8               	btfss	status,2,c
  9047  00710E  D005               	goto	l20665
  9048                           
  9049                           ; BSR set to: 0
  9050                           ;outputs_MC50.c: 167:             {;outputs_MC50.c: 168:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  9051  007110  0E20               	movlw	32
  9052  007112  6F60               	movwf	_dispStruct& (0+255),b	;volatile
  9053                           
  9054                           ;outputs_MC50.c: 169:                dispStruct.display_grp.value_display2=sD;
  9055  007114  0E1D               	movlw	29
  9056  007116  6F61               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  9057                           
  9058                           ;outputs_MC50.c: 170:             }
  9059  007118  0012               	return	
  9060  00711A                     l20665:
  9061                           
  9062                           ; BSR set to: 0
  9063  00711A  0E1A               	movlw	26
  9064  00711C  1960               	xorwf	_dispStruct& (0+255),w,b	;volatile
  9065  00711E  A4D8               	btfss	status,2,c
  9066  007120  D003               	goto	l20669
  9067                           
  9068                           ; BSR set to: 0
  9069                           ;outputs_MC50.c: 172:             {;outputs_MC50.c: 173:                dispStruct.displ
      +                          ay_grp.value_display1=sF;
  9070  007122  0E1F               	movlw	31
  9071  007124  6F60               	movwf	_dispStruct& (0+255),b	;volatile
  9072                           
  9073                           ;outputs_MC50.c: 174:             }
  9074  007126  0012               	return	
  9075  007128                     l20669:
  9076                           
  9077                           ; BSR set to: 0
  9078  007128  0E20               	movlw	32
  9079  00712A  1960               	xorwf	_dispStruct& (0+255),w,b	;volatile
  9080  00712C  A4D8               	btfss	status,2,c
  9081  00712E  D002               	goto	l20673
  9082                           
  9083                           ; BSR set to: 0
  9084                           ;outputs_MC50.c: 176:             {;outputs_MC50.c: 177:                dispStruct.displ
      +                          ay_grp.value_display2--;
  9085  007130  0761               	decf	(_dispStruct+1)& (0+255),f,b	;volatile
  9086                           
  9087                           ;outputs_MC50.c: 178:             }
  9088  007132  0012               	return	
  9089  007134                     l20673:
  9090                           
  9091                           ; BSR set to: 0
  9092  007134  0E20               	movlw	32
  9093  007136  1961               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  9094  007138  A4D8               	btfss	status,2,c
  9095  00713A  D002               	goto	l20677
  9096                           
  9097                           ; BSR set to: 0
  9098                           ;outputs_MC50.c: 180:             {;outputs_MC50.c: 181:                dispStruct.displ
      +                          ay_grp.value_display1--;
  9099  00713C  0760               	decf	_dispStruct& (0+255),f,b	;volatile
  9100                           
  9101                           ;outputs_MC50.c: 182:             }
  9102  00713E  0012               	return	
  9103  007140                     l20677:
  9104                           
  9105                           ; BSR set to: 0
  9106                           ;outputs_MC50.c: 184:             {;outputs_MC50.c: 185:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  9107  007140  0E1A               	movlw	26
  9108  007142  6F60               	movwf	_dispStruct& (0+255),b	;volatile
  9109                           
  9110                           ;outputs_MC50.c: 186:                dispStruct.display_grp.value_display2=dBlank;
  9111  007144  0E20               	movlw	32
  9112  007146  6F61               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  9113  007148  0012               	return	
  9114  00714A                     l20681:
  9115                           
  9116                           ; BSR set to: 0
  9117  00714A  5012               	movf	SetSegmentValueLearn@direction^0,w,c
  9118  00714C  6E10               	movwf	??_SetSegmentValueLearn^0,c
  9119  00714E  6A11               	clrf	(??_SetSegmentValueLearn+1)^0,c
  9120                           
  9121                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9122                           ; Switch size 1, requested type "simple"
  9123                           ; Number of cases is 1, Range of values is 0 to 0
  9124                           ; switch strategies available:
  9125                           ; Name         Instructions Cycles
  9126                           ; simple_byte            4     3 (average)
  9127                           ;	Chosen strategy is simple_byte
  9128  007150  5011               	movf	(??_SetSegmentValueLearn+1)^0,w,c
  9129  007152  0A00               	xorlw	0	; case 0
  9130  007154  A4D8               	btfss	status,2,c
  9131  007156  0012               	return	
  9132                           
  9133                           ; BSR set to: 0
  9134                           ; Switch size 1, requested type "simple"
  9135                           ; Number of cases is 2, Range of values is 0 to 1
  9136                           ; switch strategies available:
  9137                           ; Name         Instructions Cycles
  9138                           ; simple_byte            7     4 (average)
  9139                           ;	Chosen strategy is simple_byte
  9140  007158  5010               	movf	??_SetSegmentValueLearn^0,w,c
  9141  00715A  0A00               	xorlw	0	; case 0
  9142  00715C  B4D8               	btfsc	status,2,c
  9143  00715E  D7C3               	goto	l20653
  9144  007160  0A01               	xorlw	1	; case 1
  9145  007162  A4D8               	btfss	status,2,c
  9146  007164  0012               	return	
  9147  007166  D78B               	goto	l20627
  9148  007168                     __end_of_SetSegmentValueLearn:
  9149                           	callstack 0
  9150                           
  9151 ;; *************** function ___lldiv *****************
  9152 ;; Defined at:
  9153 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  9154 ;; Parameters:    Size  Location     Type
  9155 ;;  dividend        4   15[COMRAM] unsigned long 
  9156 ;;  divisor         4   19[COMRAM] unsigned long 
  9157 ;; Auto vars:     Size  Location     Type
  9158 ;;  quotient        4   23[COMRAM] unsigned long 
  9159 ;;  counter         1   27[COMRAM] unsigned char 
  9160 ;; Return value:  Size  Location     Type
  9161 ;;                  4   15[COMRAM] unsigned long 
  9162 ;; Registers used:
  9163 ;;		wreg, status,2, status,0
  9164 ;; Tracked objects:
  9165 ;;		On entry : 0/0
  9166 ;;		On exit  : 0/0
  9167 ;;		Unchanged: 0/0
  9168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9169 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9170 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9172 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9173 ;;Total ram usage:       13 bytes
  9174 ;; Hardware stack levels used: 1
  9175 ;; Hardware stack levels required when called: 4
  9176 ;; This function calls:
  9177 ;;		Nothing
  9178 ;; This function is called by:
  9179 ;;		_sm_execute_menuConfiguration
  9180 ;; This function uses a non-reentrant model
  9181 ;;
  9182                           
  9183                           	psect	text16
  9184  0082A6                     __ptext16:
  9185                           	callstack 0
  9186  0082A6                     ___lldiv:
  9187                           	callstack 24
  9188                           
  9189                           ; BSR set to: 0
  9190                           ;incstack = 0
  9191  0082A6  0E00               	movlw	0
  9192  0082A8  6E18               	movwf	___lldiv@quotient^0,c
  9193  0082AA  0E00               	movlw	0
  9194  0082AC  6E19               	movwf	(___lldiv@quotient+1)^0,c
  9195  0082AE  0E00               	movlw	0
  9196  0082B0  6E1A               	movwf	(___lldiv@quotient+2)^0,c
  9197  0082B2  0E00               	movlw	0
  9198  0082B4  6E1B               	movwf	(___lldiv@quotient+3)^0,c
  9199  0082B6  5014               	movf	___lldiv@divisor^0,w,c
  9200  0082B8  1015               	iorwf	(___lldiv@divisor+1)^0,w,c
  9201  0082BA  1016               	iorwf	(___lldiv@divisor+2)^0,w,c
  9202  0082BC  1017               	iorwf	(___lldiv@divisor+3)^0,w,c
  9203  0082BE  B4D8               	btfsc	status,2,c
  9204  0082C0  D02A               	goto	l3811
  9205  0082C2  0E01               	movlw	1
  9206  0082C4  6E1C               	movwf	___lldiv@counter^0,c
  9207  0082C6  D006               	goto	l22281
  9208  0082C8                     l22279:
  9209  0082C8  90D8               	bcf	status,0,c
  9210  0082CA  3614               	rlcf	___lldiv@divisor^0,f,c
  9211  0082CC  3615               	rlcf	(___lldiv@divisor+1)^0,f,c
  9212  0082CE  3616               	rlcf	(___lldiv@divisor+2)^0,f,c
  9213  0082D0  3617               	rlcf	(___lldiv@divisor+3)^0,f,c
  9214  0082D2  2A1C               	incf	___lldiv@counter^0,f,c
  9215  0082D4                     l22281:
  9216  0082D4  AE17               	btfss	(___lldiv@divisor+3)^0,7,c
  9217  0082D6  D7F8               	goto	l22279
  9218  0082D8                     u26130:
  9219  0082D8  90D8               	bcf	status,0,c
  9220  0082DA  3618               	rlcf	___lldiv@quotient^0,f,c
  9221  0082DC  3619               	rlcf	(___lldiv@quotient+1)^0,f,c
  9222  0082DE  361A               	rlcf	(___lldiv@quotient+2)^0,f,c
  9223  0082E0  361B               	rlcf	(___lldiv@quotient+3)^0,f,c
  9224  0082E2  5014               	movf	___lldiv@divisor^0,w,c
  9225  0082E4  5C10               	subwf	___lldiv@dividend^0,w,c
  9226  0082E6  5015               	movf	(___lldiv@divisor+1)^0,w,c
  9227  0082E8  5811               	subwfb	(___lldiv@dividend+1)^0,w,c
  9228  0082EA  5016               	movf	(___lldiv@divisor+2)^0,w,c
  9229  0082EC  5812               	subwfb	(___lldiv@dividend+2)^0,w,c
  9230  0082EE  5017               	movf	(___lldiv@divisor+3)^0,w,c
  9231  0082F0  5813               	subwfb	(___lldiv@dividend+3)^0,w,c
  9232  0082F2  A0D8               	btfss	status,0,c
  9233  0082F4  D009               	goto	l22291
  9234  0082F6  5014               	movf	___lldiv@divisor^0,w,c
  9235  0082F8  5E10               	subwf	___lldiv@dividend^0,f,c
  9236  0082FA  5015               	movf	(___lldiv@divisor+1)^0,w,c
  9237  0082FC  5A11               	subwfb	(___lldiv@dividend+1)^0,f,c
  9238  0082FE  5016               	movf	(___lldiv@divisor+2)^0,w,c
  9239  008300  5A12               	subwfb	(___lldiv@dividend+2)^0,f,c
  9240  008302  5017               	movf	(___lldiv@divisor+3)^0,w,c
  9241  008304  5A13               	subwfb	(___lldiv@dividend+3)^0,f,c
  9242  008306  8018               	bsf	___lldiv@quotient^0,0,c
  9243  008308                     l22291:
  9244  008308  90D8               	bcf	status,0,c
  9245  00830A  3217               	rrcf	(___lldiv@divisor+3)^0,f,c
  9246  00830C  3216               	rrcf	(___lldiv@divisor+2)^0,f,c
  9247  00830E  3215               	rrcf	(___lldiv@divisor+1)^0,f,c
  9248  008310  3214               	rrcf	___lldiv@divisor^0,f,c
  9249  008312  2E1C               	decfsz	___lldiv@counter^0,f,c
  9250  008314  D7E1               	goto	u26130
  9251  008316                     l3811:
  9252  008316  C018  F010         	movff	___lldiv@quotient,?___lldiv
  9253  00831A  C019  F011         	movff	___lldiv@quotient+1,?___lldiv+1
  9254  00831E  C01A  F012         	movff	___lldiv@quotient+2,?___lldiv+2
  9255  008322  C01B  F013         	movff	___lldiv@quotient+3,?___lldiv+3
  9256  008326  0012               	return		;funcret
  9257  008328                     __end_of___lldiv:
  9258                           	callstack 0
  9259                           
  9260 ;; *************** function _sm_execute_ControlGate *****************
  9261 ;; Defined at:
  9262 ;;		line 128 in file "sm_ControlGate_MC50.c"
  9263 ;; Parameters:    Size  Location     Type
  9264 ;;  psm             2   15[BANK0 ] PTR struct .
  9265 ;;		 -> controlGate_stateMachine(11), 
  9266 ;; Auto vars:     Size  Location     Type
  9267 ;;  typeOpenOrde    1   19[BANK0 ] enum E10372
  9268 ;; Return value:  Size  Location     Type
  9269 ;;                  1    wreg      void 
  9270 ;; Registers used:
  9271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9272 ;; Tracked objects:
  9273 ;;		On entry : 3F/0
  9274 ;;		On exit  : 0/0
  9275 ;;		Unchanged: 0/0
  9276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9277 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9278 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9279 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9280 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9281 ;;Total ram usage:        5 bytes
  9282 ;; Hardware stack levels used: 1
  9283 ;; Hardware stack levels required when called: 15
  9284 ;; This function calls:
  9285 ;;		_GetOpenOrder
  9286 ;;		_SetSegmentValueIntermitent
  9287 ;;		_WaitPreFlash
  9288 ;;		_actionZone_Closed
  9289 ;;		_actionZone_Closing
  9290 ;;		_actionZone_Opened
  9291 ;;		_actionZone_Opening
  9292 ;;		_sm_execute_ControlLearning
  9293 ;;		_sm_send_event
  9294 ;; This function is called by:
  9295 ;;		_main
  9296 ;; This function uses a non-reentrant model
  9297 ;;
  9298                           
  9299                           	psect	text17
  9300  003CC2                     __ptext17:
  9301                           	callstack 0
  9302  003CC2                     _sm_execute_ControlGate:
  9303                           	callstack 15
  9304                           
  9305                           ; BSR set to: 0
  9306                           ;sm_ControlGate_MC50.c: 129:     TypeCMD typeOpenOrder;;sm_ControlGate_MC50.c: 133:     
      +                          if ( (main_stateMachine.current_state == st_MenuConfiguration) && (menuConfiguration_sta
      +                          teMachine.current_state != st_LearningMode) )
  9307                           
  9308                           ;incstack = 0
  9309  003CC2  0101               	movlb	1	; () banked
  9310  003CC4  05F1               	decf	_main_stateMachine& (0+255),w,b
  9311  003CC6  11F2               	iorwf	(_main_stateMachine+1)& (0+255),w,b
  9312  003CC8  A4D8               	btfss	status,2,c
  9313  003CCA  D006               	goto	l25751
  9314                           
  9315                           ; BSR set to: 1
  9316  003CCC  0E06               	movlw	6
  9317  003CCE  0102               	movlb	2	; () banked
  9318  003CD0  19BD               	xorwf	_menuConfiguration_stateMachine& (0+255),w,b
  9319  003CD2  11BE               	iorwf	(_menuConfiguration_stateMachine+1)& (0+255),w,b
  9320  003CD4  A4D8               	btfss	status,2,c
  9321  003CD6  0012               	return	
  9322  003CD8                     l25751:
  9323                           
  9324                           ;sm_ControlGate_MC50.c: 137:         if (var_sys.preflashingcontrol == YES){
  9325  003CD8  0101               	movlb	1	; () banked
  9326  003CDA  0572               	decf	(_var_sys+29)& (0+255),w,b	;volatile
  9327  003CDC  A4D8               	btfss	status,2,c
  9328  003CDE  D0CE               	goto	l25825
  9329                           
  9330                           ; BSR set to: 1
  9331                           ;sm_ControlGate_MC50.c: 139:         WaitPreFlash();
  9332  003CE0  EC3E  F043         	call	_WaitPreFlash	;wreg free
  9333  003CE4  D0CB               	goto	l25825
  9334  003CE6                     l25755:
  9335                           
  9336                           ; BSR set to: 0
  9337                           ;sm_ControlGate_MC50.c: 145:         {;sm_ControlGate_MC50.c: 148:             if (psm->
      +                          last_event == ev_GateClosed) {
  9338  003CE6  EE20 F004          	lfsr	2,4
  9339  003CEA  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9340  003CEC  26D9               	addwf	fsr2l,f,c
  9341  003CEE  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9342  003CF0  22DA               	addwfc	fsr2h,f,c
  9343  003CF2  0E0A               	movlw	10
  9344  003CF4  18DE               	xorwf	postinc2,w,c
  9345  003CF6  10DE               	iorwf	postinc2,w,c
  9346  003CF8  A4D8               	btfss	status,2,c
  9347  003CFA  D006               	goto	l25759
  9348  003CFC                     u33410:
  9349                           
  9350                           ; BSR set to: 0
  9351                           ;sm_ControlGate_MC50.c: 149:                 psm->current_state = st_Closed;
  9352  003CFC  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9353  003D00  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9354  003D04  0E01               	movlw	1
  9355  003D06  D0B5               	goto	L54
  9356  003D08                     l25759:
  9357                           
  9358                           ; BSR set to: 0
  9359  003D08  EE20 F004          	lfsr	2,4
  9360  003D0C  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9361  003D0E  26D9               	addwf	fsr2l,f,c
  9362  003D10  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9363  003D12  22DA               	addwfc	fsr2h,f,c
  9364  003D14  0E0B               	movlw	11
  9365  003D16  18DE               	xorwf	postinc2,w,c
  9366  003D18  10DE               	iorwf	postinc2,w,c
  9367  003D1A  A4D8               	btfss	status,2,c
  9368  003D1C  D0CF               	goto	l25827
  9369  003D1E  D038               	goto	u33480
  9370  003D20                     l25763:
  9371                           
  9372                           ; BSR set to: 0
  9373                           ;sm_ControlGate_MC50.c: 160:         {;sm_ControlGate_MC50.c: 161:             if (psm->
      +                          last_event == ev_OpenGate) {
  9374  003D20  EE20 F004          	lfsr	2,4
  9375  003D24  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9376  003D26  26D9               	addwf	fsr2l,f,c
  9377  003D28  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9378  003D2A  22DA               	addwfc	fsr2h,f,c
  9379  003D2C  0E0C               	movlw	12
  9380  003D2E  18DE               	xorwf	postinc2,w,c
  9381  003D30  10DE               	iorwf	postinc2,w,c
  9382  003D32  A4D8               	btfss	status,2,c
  9383  003D34  D072               	goto	l25811
  9384  003D36                     u33430:
  9385                           
  9386                           ; BSR set to: 0
  9387                           ;sm_ControlGate_MC50.c: 162:                 psm->current_state = st_Opening;
  9388  003D36  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9389  003D3A  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9390  003D3E  0E02               	movlw	2
  9391  003D40  D098               	goto	L54
  9392  003D42                     l25771:
  9393                           
  9394                           ; BSR set to: 0
  9395                           ;sm_ControlGate_MC50.c: 169:         {;sm_ControlGate_MC50.c: 170:             if (psm->
      +                          last_event == ev_StopGate) {
  9396  003D42  EE20 F004          	lfsr	2,4
  9397  003D46  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9398  003D48  26D9               	addwf	fsr2l,f,c
  9399  003D4A  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9400  003D4C  22DA               	addwfc	fsr2h,f,c
  9401  003D4E  0E0D               	movlw	13
  9402  003D50  18DE               	xorwf	postinc2,w,c
  9403  003D52  10DE               	iorwf	postinc2,w,c
  9404  003D54  B4D8               	btfsc	status,2,c
  9405  003D56  D01C               	goto	u33480
  9406                           
  9407                           ; BSR set to: 0
  9408                           
  9409                           ;sm_ControlGate_MC50.c: 172:             } else if (psm->last_event == ev_CloseGate) {
  9410                           
  9411                           ; BSR set to: 0
  9412                           ;sm_ControlGate_MC50.c: 171:                 psm->current_state = st_Opened;
  9413  003D58  EE20 F004          	lfsr	2,4
  9414  003D5C  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9415  003D5E  26D9               	addwf	fsr2l,f,c
  9416  003D60  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9417  003D62  22DA               	addwfc	fsr2h,f,c
  9418  003D64  0E0E               	movlw	14
  9419  003D66  18DE               	xorwf	postinc2,w,c
  9420  003D68  10DE               	iorwf	postinc2,w,c
  9421  003D6A  A4D8               	btfss	status,2,c
  9422  003D6C  D02D               	goto	L110
  9423  003D6E                     u33460:
  9424                           
  9425                           ; BSR set to: 0
  9426                           ;sm_ControlGate_MC50.c: 173:                 psm->current_state = st_Closing;
  9427  003D6E  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9428  003D72  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9429  003D76  0E03               	movlw	3
  9430  003D78  D07C               	goto	L54
  9431  003D7A                     l25783:
  9432                           
  9433                           ; BSR set to: 0
  9434                           ;sm_ControlGate_MC50.c: 180:         {;sm_ControlGate_MC50.c: 181:             if (psm->
      +                          last_event == ev_StopGate) {
  9435  003D7A  EE20 F004          	lfsr	2,4
  9436  003D7E  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9437  003D80  26D9               	addwf	fsr2l,f,c
  9438  003D82  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9439  003D84  22DA               	addwfc	fsr2h,f,c
  9440  003D86  0E0D               	movlw	13
  9441  003D88  18DE               	xorwf	postinc2,w,c
  9442  003D8A  10DE               	iorwf	postinc2,w,c
  9443  003D8C  A4D8               	btfss	status,2,c
  9444  003D8E  D006               	goto	l25787
  9445  003D90                     u33480:
  9446                           
  9447                           ; BSR set to: 0
  9448                           ;sm_ControlGate_MC50.c: 182:                 psm->current_state = st_Opened;
  9449  003D90  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9450  003D94  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9451  003D98  0E04               	movlw	4
  9452  003D9A  D06B               	goto	L54
  9453  003D9C                     l25787:
  9454                           
  9455                           ; BSR set to: 0
  9456  003D9C  EE20 F004          	lfsr	2,4
  9457  003DA0  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9458  003DA2  26D9               	addwf	fsr2l,f,c
  9459  003DA4  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9460  003DA6  22DA               	addwfc	fsr2h,f,c
  9461  003DA8  0E0F               	movlw	15
  9462  003DAA  18DE               	xorwf	postinc2,w,c
  9463  003DAC  10DE               	iorwf	postinc2,w,c
  9464  003DAE  B4D8               	btfsc	status,2,c
  9465  003DB0  D7A5               	goto	u33410
  9466                           
  9467                           ; BSR set to: 0
  9468                           
  9469                           ;sm_ControlGate_MC50.c: 185:             } else if (psm->last_event == ev_OpenGate) {
  9470                           
  9471                           ; BSR set to: 0
  9472                           ;sm_ControlGate_MC50.c: 184:                 psm->current_state = st_Closed;
  9473  003DB2  EE20 F004          	lfsr	2,4
  9474  003DB6  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9475  003DB8  26D9               	addwf	fsr2l,f,c
  9476  003DBA  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9477  003DBC  22DA               	addwfc	fsr2h,f,c
  9478  003DBE  0E0C               	movlw	12
  9479  003DC0  18DE               	xorwf	postinc2,w,c
  9480  003DC2  10DE               	iorwf	postinc2,w,c
  9481  003DC4  B4D8               	btfsc	status,2,c
  9482  003DC6  D7B7               	goto	u33430
  9483  003DC8                     L110:
  9484                           
  9485                           ; BSR set to: 0
  9486                           
  9487                           ;sm_ControlGate_MC50.c: 187:             } else if (psm->last_event == ev_ErrorGate) {
  9488                           
  9489                           ; BSR set to: 0
  9490                           ;sm_ControlGate_MC50.c: 186:                 psm->current_state = st_Opening;
  9491  003DC8  EE20 F004          	lfsr	2,4
  9492  003DCC  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9493  003DCE  26D9               	addwf	fsr2l,f,c
  9494  003DD0  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9495  003DD2  22DA               	addwfc	fsr2h,f,c
  9496  003DD4  0E10               	movlw	16
  9497  003DD6  D044               	goto	L107
  9498  003DD8                     l25799:
  9499                           
  9500                           ; BSR set to: 0
  9501                           ;sm_ControlGate_MC50.c: 193:         {;sm_ControlGate_MC50.c: 194:             if (psm->
      +                          last_event == ev_CloseGate) {
  9502  003DD8  EE20 F004          	lfsr	2,4
  9503  003DDC  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9504  003DDE  26D9               	addwf	fsr2l,f,c
  9505  003DE0  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9506  003DE2  22DA               	addwfc	fsr2h,f,c
  9507  003DE4  0E0E               	movlw	14
  9508  003DE6  18DE               	xorwf	postinc2,w,c
  9509  003DE8  10DE               	iorwf	postinc2,w,c
  9510  003DEA  B4D8               	btfsc	status,2,c
  9511  003DEC  D7C0               	goto	u33460
  9512                           
  9513                           ; BSR set to: 0
  9514                           
  9515                           ;sm_ControlGate_MC50.c: 196:             } else if (psm->last_event == ev_OpenGate) {
  9516                           
  9517                           ; BSR set to: 0
  9518                           ;sm_ControlGate_MC50.c: 195:                 psm->current_state = st_Closing;
  9519  003DEE  EE20 F004          	lfsr	2,4
  9520  003DF2  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9521  003DF4  26D9               	addwf	fsr2l,f,c
  9522  003DF6  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9523  003DF8  22DA               	addwfc	fsr2h,f,c
  9524  003DFA  0E0C               	movlw	12
  9525  003DFC  18DE               	xorwf	postinc2,w,c
  9526  003DFE  10DE               	iorwf	postinc2,w,c
  9527  003E00  B4D8               	btfsc	status,2,c
  9528  003E02  D799               	goto	u33430
  9529                           
  9530                           ; BSR set to: 0
  9531                           
  9532                           ;sm_ControlGate_MC50.c: 198:             } else if (psm->last_event == ev_ErrorGate) {
  9533                           
  9534                           ; BSR set to: 0
  9535                           ;sm_ControlGate_MC50.c: 197:                 psm->current_state = st_Opening;
  9536  003E04  EE20 F004          	lfsr	2,4
  9537  003E08  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9538  003E0A  26D9               	addwf	fsr2l,f,c
  9539  003E0C  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9540  003E0E  22DA               	addwfc	fsr2h,f,c
  9541  003E10  0E10               	movlw	16
  9542  003E12  18DE               	xorwf	postinc2,w,c
  9543  003E14  10DE               	iorwf	postinc2,w,c
  9544  003E16  B4D8               	btfsc	status,2,c
  9545  003E18  D027               	goto	L108
  9546  003E1A                     l25811:
  9547                           
  9548                           ; BSR set to: 0
  9549  003E1A  EE20 F004          	lfsr	2,4
  9550  003E1E  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9551  003E20  26D9               	addwf	fsr2l,f,c
  9552  003E22  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9553  003E24  22DA               	addwfc	fsr2h,f,c
  9554  003E26  0E14               	movlw	20
  9555  003E28  18DE               	xorwf	postinc2,w,c
  9556  003E2A  10DE               	iorwf	postinc2,w,c
  9557  003E2C  A4D8               	btfss	status,2,c
  9558  003E2E  D046               	goto	l25827
  9559                           
  9560                           ; BSR set to: 0
  9561                           ;sm_ControlGate_MC50.c: 205:                 psm->current_state = st_Learning;
  9562  003E30  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9563  003E34  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9564  003E38  0E05               	movlw	5
  9565  003E3A  D01B               	goto	L54
  9566  003E3C                     l25815:
  9567                           
  9568                           ; BSR set to: 0
  9569                           ;sm_ControlGate_MC50.c: 217:         {;sm_ControlGate_MC50.c: 218:             if (psm->
      +                          last_event == ev_LearningComplete) {
  9570  003E3C  EE20 F004          	lfsr	2,4
  9571  003E40  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9572  003E42  26D9               	addwf	fsr2l,f,c
  9573  003E44  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9574  003E46  22DA               	addwfc	fsr2h,f,c
  9575  003E48  0E13               	movlw	19
  9576  003E4A  18DE               	xorwf	postinc2,w,c
  9577  003E4C  10DE               	iorwf	postinc2,w,c
  9578  003E4E  B4D8               	btfsc	status,2,c
  9579  003E50  D755               	goto	u33410
  9580                           
  9581                           ; BSR set to: 0
  9582                           
  9583                           ;sm_ControlGate_MC50.c: 220:             } else if (psm->last_event == ev_ErrorLearning)
      +                           {
  9584                           
  9585                           ; BSR set to: 0
  9586                           ;sm_ControlGate_MC50.c: 219:                 psm->current_state = st_Closed;
  9587  003E52  EE20 F004          	lfsr	2,4
  9588  003E56  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9589  003E58  26D9               	addwf	fsr2l,f,c
  9590  003E5A  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9591  003E5C  22DA               	addwfc	fsr2h,f,c
  9592  003E5E  0E12               	movlw	18
  9593  003E60                     L107:
  9594  003E60  18DE               	xorwf	postinc2,w,c
  9595  003E62  10DE               	iorwf	postinc2,w,c
  9596  003E64  A4D8               	btfss	status,2,c
  9597  003E66  D02A               	goto	l25827
  9598  003E68                     L108:
  9599                           
  9600                           ; BSR set to: 0
  9601                           ;sm_ControlGate_MC50.c: 221:                 psm->current_state = st_Idle;
  9602  003E68  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9603  003E6C  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9604  003E70  0E00               	movlw	0
  9605  003E72                     L54:
  9606  003E72  6EDE               	movwf	postinc2,c
  9607  003E74  0E00               	movlw	0
  9608  003E76  6EDD               	movwf	postdec2,c
  9609  003E78  D021               	goto	l25827
  9610  003E7A                     l2677:
  9611                           
  9612                           ; BSR set to: 0
  9613  003E7A  D7FF               	goto	l2677
  9614  003E7C                     l25825:
  9615  003E7C  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9616  003E80  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9617  003E84  50DF               	movf	indf2,w,c
  9618  003E86  0100               	movlb	0	; () banked
  9619  003E88  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9620  003E8A  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9621                           
  9622                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9623                           ; Switch size 1, requested type "simple"
  9624                           ; Number of cases is 1, Range of values is 0 to 0
  9625                           ; switch strategies available:
  9626                           ; Name         Instructions Cycles
  9627                           ; simple_byte            4     3 (average)
  9628                           ;	Chosen strategy is simple_byte
  9629  003E8C  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9630  003E8E  0A00               	xorlw	0	; case 0
  9631  003E90  A4D8               	btfss	status,2,c
  9632  003E92  D7F3               	goto	l2677
  9633                           
  9634                           ; BSR set to: 0
  9635                           ; Switch size 1, requested type "simple"
  9636                           ; Number of cases is 6, Range of values is 0 to 5
  9637                           ; switch strategies available:
  9638                           ; Name         Instructions Cycles
  9639                           ; simple_byte           19    10 (average)
  9640                           ;	Chosen strategy is simple_byte
  9641  003E94  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9642  003E96  0A00               	xorlw	0	; case 0
  9643  003E98  B4D8               	btfsc	status,2,c
  9644  003E9A  D725               	goto	l25755
  9645  003E9C  0A01               	xorlw	1	; case 1
  9646  003E9E  B4D8               	btfsc	status,2,c
  9647  003EA0  D73F               	goto	l25763
  9648  003EA2  0A03               	xorlw	3	; case 2
  9649  003EA4  B4D8               	btfsc	status,2,c
  9650  003EA6  D74D               	goto	l25771
  9651  003EA8  0A01               	xorlw	1	; case 3
  9652  003EAA  B4D8               	btfsc	status,2,c
  9653  003EAC  D766               	goto	l25783
  9654  003EAE  0A07               	xorlw	7	; case 4
  9655  003EB0  B4D8               	btfsc	status,2,c
  9656  003EB2  D792               	goto	l25799
  9657  003EB4  0A01               	xorlw	1	; case 5
  9658  003EB6  B4D8               	btfsc	status,2,c
  9659  003EB8  D7C1               	goto	l25815
  9660  003EBA  D7DF               	goto	l2677
  9661  003EBC                     l25827:
  9662                           
  9663                           ; BSR set to: 0
  9664                           ;sm_ControlGate_MC50.c: 234:     sm_send_event(&controlGate_stateMachine, ev_NULL);
  9665  003EBC  0EE6               	movlw	low _controlGate_stateMachine
  9666  003EBE  6E12               	movwf	sm_send_event@psm^0,c
  9667  003EC0  0E01               	movlw	high _controlGate_stateMachine
  9668  003EC2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9669  003EC4  0E00               	movlw	0
  9670  003EC6  6E15               	movwf	(sm_send_event@event+1)^0,c
  9671  003EC8  0E00               	movlw	0
  9672  003ECA  6E14               	movwf	sm_send_event@event^0,c
  9673  003ECC  ECE8  F045         	call	_sm_send_event	;wreg free
  9674                           
  9675                           ;sm_ControlGate_MC50.c: 239:     switch ((sm_state_ControlGate_t) psm->current_state) {
  9676  003ED0  D07F               	goto	l25891
  9677  003ED2                     l25829:
  9678                           
  9679                           ; BSR set to: 0
  9680                           ;sm_ControlGate_MC50.c: 241:         {;sm_ControlGate_MC50.c: 244:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (5 * (1000/50));
  9681  003ED2  0E00               	movlw	0
  9682  003ED4  6FCE               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9683  003ED6  0E64               	movlw	100
  9684  003ED8  6FCD               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9685                           
  9686                           ;sm_ControlGate_MC50.c: 247:             var_sys.PositionIsLost = YES;
  9687  003EDA  0E01               	movlw	1
  9688  003EDC  0101               	movlb	1	; () banked
  9689  003EDE  6F9D               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9690                           
  9691                           ; BSR set to: 1
  9692                           ;sm_ControlGate_MC50.c: 248:             if (var_sys.WorkTimeMaxAlarmState == EmAlarme |
      +                          | var_sys.NumberOffErrors > 3)
  9693  003EE0  0E02               	movlw	2
  9694  003EE2  1997               	xorwf	(_var_sys+66)& (0+255),w,b	;volatile
  9695  003EE4  B4D8               	btfsc	status,2,c
  9696  003EE6  D003               	goto	u33590
  9697                           
  9698                           ; BSR set to: 1
  9699  003EE8  0E03               	movlw	3
  9700  003EEA  6598               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
  9701  003EEC  D028               	goto	l25851
  9702  003EEE                     u33590:
  9703                           
  9704                           ; BSR set to: 1
  9705                           ;sm_ControlGate_MC50.c: 249:             {;sm_ControlGate_MC50.c: 252:                 t
      +                          ypeOpenOrder = GetOpenOrder();
  9706  003EEE  EC00  F02E         	call	_GetOpenOrder	;wreg free
  9707  003EF2  0100               	movlb	0	; () banked
  9708  003EF4  6FEB               	movwf	sm_execute_ControlGate@typeOpenOrder& (0+255),b
  9709                           
  9710                           ; BSR set to: 0
  9711                           ;sm_ControlGate_MC50.c: 253:                 SetSegmentValueIntermitent(dE,dr, (1000/50)
      +                          );
  9712  003EF6  0E14               	movlw	20
  9713  003EF8  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9714  003EFA  0E00               	movlw	0
  9715  003EFC  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9716  003EFE  0E14               	movlw	20
  9717  003F00  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9718  003F02  0E0E               	movlw	14
  9719  003F04  EC61  F04A         	call	_SetSegmentValueIntermitent
  9720                           
  9721                           ;sm_ControlGate_MC50.c: 254:                 ts_system.timeSinalizationDigit = ( 500/50)
      +                          ;
  9722  003F08  0E00               	movlw	0
  9723  003F0A  0100               	movlb	0	; () banked
  9724  003F0C  6F9C               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9725  003F0E  0E0A               	movlw	10
  9726  003F10  6F9B               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9727                           
  9728                           ; BSR set to: 0
  9729                           ;sm_ControlGate_MC50.c: 255:                 if ((typeOpenOrder != NoCMD) ||(button_stru
      +                          ct.current==0x27 || button_struct.current==0x00 ||button_struct.current==0x17 ))
  9730  003F12  51EB               	movf	sm_execute_ControlGate@typeOpenOrder& (0+255),w,b
  9731  003F14  A4D8               	btfss	status,2,c
  9732  003F16  D00B               	goto	u33630
  9733                           
  9734                           ; BSR set to: 0
  9735  003F18  0E27               	movlw	39
  9736  003F1A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  9737  003F1C  B4D8               	btfsc	status,2,c
  9738  003F1E  D007               	goto	u33630
  9739                           
  9740                           ; BSR set to: 0
  9741  003F20  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9742  003F22  B4D8               	btfsc	status,2,c
  9743  003F24  D004               	goto	u33630
  9744                           
  9745                           ; BSR set to: 0
  9746  003F26  0E17               	movlw	23
  9747  003F28  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  9748  003F2A  A4D8               	btfss	status,2,c
  9749  003F2C  0012               	return	
  9750  003F2E                     u33630:
  9751                           
  9752                           ; BSR set to: 0
  9753                           ;sm_ControlGate_MC50.c: 256:                 {;sm_ControlGate_MC50.c: 257:              
      +                                 var_sys.WorkTimeMaxAlarmState = Clear;
  9754  003F2E  0E00               	movlw	0
  9755  003F30  0101               	movlb	1	; () banked
  9756  003F32  6F97               	movwf	(_var_sys+66)& (0+255),b	;volatile
  9757                           
  9758                           ;sm_ControlGate_MC50.c: 258:                     var_sys.NumberOffErrors = 0;
  9759  003F34  0E00               	movlw	0
  9760  003F36  6F98               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9761                           
  9762                           ;sm_ControlGate_MC50.c: 259:                     button_struct.processed=1;
  9763  003F38  0E01               	movlw	1
  9764  003F3A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  9765  003F3C  0012               	return	
  9766  003F3E                     l25851:
  9767                           
  9768                           ; BSR set to: 1
  9769                           ;sm_ControlGate_MC50.c: 264:             {;sm_ControlGate_MC50.c: 267:                  
      +                             var_sys.Statedoorcontrol = st_Closed;
  9770  003F3E  0E01               	movlw	1
  9771  003F40  6F71               	movwf	(_var_sys+28)& (0+255),b	;volatile
  9772                           
  9773                           ; BSR set to: 1
  9774                           ;sm_ControlGate_MC50.c: 268:                     var_sys.actualCounterMoves++;
  9775  003F42  0E01               	movlw	1
  9776  003F44  2791               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
  9777  003F46  0E00               	movlw	0
  9778  003F48  2392               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
  9779  003F4A  2393               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
  9780  003F4C  2394               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
  9781                           
  9782                           ; BSR set to: 1
  9783                           ;sm_ControlGate_MC50.c: 269:                     var_sys.Timewalkisactived = 0;
  9784  003F4E  0E00               	movlw	0
  9785  003F50  6F9F               	movwf	(_var_sys+74)& (0+255),b	;volatile
  9786                           
  9787                           ; BSR set to: 1
  9788                           ;sm_ControlGate_MC50.c: 270:                     var_sys.PositionActual = 0;
  9789  003F52  0E00               	movlw	0
  9790  003F54  6F73               	movwf	(_var_sys+30)& (0+255),b	;volatile
  9791  003F56  0E00               	movlw	0
  9792  003F58  6F74               	movwf	(_var_sys+31)& (0+255),b	;volatile
  9793  003F5A  0E00               	movlw	0
  9794  003F5C  6F75               	movwf	(_var_sys+32)& (0+255),b	;volatile
  9795  003F5E  0E00               	movlw	0
  9796  003F60  6F76               	movwf	(_var_sys+33)& (0+255),b	;volatile
  9797                           
  9798                           ; BSR set to: 1
  9799                           ;sm_ControlGate_MC50.c: 272:                     var_sys.PositionIsLost = NO;
  9800  003F62  0E00               	movlw	0
  9801  003F64  6F9D               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9802                           
  9803                           ; BSR set to: 1
  9804                           ;sm_ControlGate_MC50.c: 273:                     var_sys.NumberOffErrors = 0;
  9805  003F66  0E00               	movlw	0
  9806  003F68  6F98               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9807                           
  9808                           ; BSR set to: 1
  9809                           ;sm_ControlGate_MC50.c: 274:                     var_sys.StateMotor = Stopped;
  9810  003F6A  0E00               	movlw	0
  9811  003F6C  6F55               	movwf	_var_sys& (0+255),b	;volatile
  9812                           
  9813                           ; BSR set to: 1
  9814                           ;sm_ControlGate_MC50.c: 276:                     ts_system.timeSinalizationDigit = (1000
      +                          /50) * 2;
  9815  003F6E  0E00               	movlw	0
  9816  003F70  0100               	movlb	0	; () banked
  9817  003F72  6F9C               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9818  003F74  0E28               	movlw	40
  9819  003F76  6F9B               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9820                           
  9821                           ; BSR set to: 0
  9822                           ;sm_ControlGate_MC50.c: 277:                     SetSegmentValueIntermitent(dF, dC, ( 20
      +                          0/50));
  9823  003F78  0E0C               	movlw	12
  9824  003F7A  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9825  003F7C  0E00               	movlw	0
  9826  003F7E  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9827  003F80  0E04               	movlw	4
  9828  003F82  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9829  003F84  0E0F               	movlw	15
  9830  003F86  EC61  F04A         	call	_SetSegmentValueIntermitent
  9831                           
  9832                           ;sm_ControlGate_MC50.c: 278:                     sm_send_event(&controlGate_stateMachine
      +                          , ev_GateClosed);
  9833  003F8A  0EE6               	movlw	low _controlGate_stateMachine
  9834  003F8C  6E12               	movwf	sm_send_event@psm^0,c
  9835  003F8E  0E01               	movlw	high _controlGate_stateMachine
  9836  003F90  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9837  003F92  0E00               	movlw	0
  9838  003F94  6E15               	movwf	(sm_send_event@event+1)^0,c
  9839  003F96  0E0A               	movlw	10
  9840  003F98  6E14               	movwf	sm_send_event@event^0,c
  9841  003F9A  ECE8  F045         	call	_sm_send_event	;wreg free
  9842  003F9E  0012               	return	
  9843  003FA0                     l25871:
  9844                           
  9845                           ; BSR set to: 0
  9846                           ;sm_ControlGate_MC50.c: 285:         {;sm_ControlGate_MC50.c: 287:             actionZon
      +                          e_Closed();
  9847  003FA0  EC60  F03D         	call	_actionZone_Closed	;wreg free
  9848                           
  9849                           ;sm_ControlGate_MC50.c: 288:         };sm_ControlGate_MC50.c: 289:             break;
  9850  003FA4  0012               	return	
  9851  003FA6                     l25873:
  9852                           
  9853                           ; BSR set to: 0
  9854                           ;sm_ControlGate_MC50.c: 291:         {;sm_ControlGate_MC50.c: 293:             actionZon
      +                          e_Opening();
  9855  003FA6  EC60  F024         	call	_actionZone_Opening	;wreg free
  9856  003FAA                     l25875:
  9857                           
  9858                           ;sm_ControlGate_MC50.c: 295:             ts_system.TimeStopADCZeroOffsetCalc = (5 * (100
      +                          0/50));
  9859  003FAA  0E00               	movlw	0
  9860  003FAC  0100               	movlb	0	; () banked
  9861  003FAE  6FCE               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9862  003FB0  0E64               	movlw	100
  9863  003FB2  6FCD               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9864                           
  9865                           ;sm_ControlGate_MC50.c: 296:         };sm_ControlGate_MC50.c: 297:             break;
  9866  003FB4  0012               	return	
  9867  003FB6                     l25877:
  9868                           
  9869                           ; BSR set to: 0
  9870                           ;sm_ControlGate_MC50.c: 299:         {;sm_ControlGate_MC50.c: 301:             actionZon
      +                          e_Opened();
  9871  003FB6  EC13  F02D         	call	_actionZone_Opened	;wreg free
  9872  003FBA  D7F7               	goto	l25875
  9873  003FBC                     l25881:
  9874                           
  9875                           ; BSR set to: 0
  9876                           ;sm_ControlGate_MC50.c: 307:         {;sm_ControlGate_MC50.c: 309:             actionZon
      +                          e_Closing();
  9877  003FBC  EC0E  F023         	call	_actionZone_Closing	;wreg free
  9878  003FC0  D7F4               	goto	l25875
  9879  003FC2                     l25885:
  9880                           
  9881                           ; BSR set to: 0
  9882                           ;sm_ControlGate_MC50.c: 315:         {;sm_ControlGate_MC50.c: 316:             sm_execut
      +                          e_ControlLearning(&controlLearning_stateMachine);
  9883  003FC2  0EB2               	movlw	low _controlLearning_stateMachine
  9884  003FC4  6FDD               	movwf	sm_execute_ControlLearning@psm& (0+255),b
  9885  003FC6  0E02               	movlw	high _controlLearning_stateMachine
  9886  003FC8  6FDE               	movwf	(sm_execute_ControlLearning@psm+1)& (0+255),b
  9887  003FCA  EC4D  F011         	call	_sm_execute_ControlLearning	;wreg free
  9888  003FCE  D7ED               	goto	l25875
  9889  003FD0                     l25891:
  9890  003FD0  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9891  003FD4  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9892  003FD8  50DF               	movf	indf2,w,c
  9893  003FDA  0100               	movlb	0	; () banked
  9894  003FDC  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9895  003FDE  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9896                           
  9897                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9898                           ; Switch size 1, requested type "simple"
  9899                           ; Number of cases is 1, Range of values is 0 to 0
  9900                           ; switch strategies available:
  9901                           ; Name         Instructions Cycles
  9902                           ; simple_byte            4     3 (average)
  9903                           ;	Chosen strategy is simple_byte
  9904  003FE0  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9905  003FE2  0A00               	xorlw	0	; case 0
  9906  003FE4  A4D8               	btfss	status,2,c
  9907  003FE6  0012               	return	
  9908                           
  9909                           ; BSR set to: 0
  9910                           ; Switch size 1, requested type "simple"
  9911                           ; Number of cases is 6, Range of values is 0 to 5
  9912                           ; switch strategies available:
  9913                           ; Name         Instructions Cycles
  9914                           ; simple_byte           19    10 (average)
  9915                           ;	Chosen strategy is simple_byte
  9916  003FE8  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9917  003FEA  0A00               	xorlw	0	; case 0
  9918  003FEC  B4D8               	btfsc	status,2,c
  9919  003FEE  D771               	goto	l25829
  9920  003FF0  0A01               	xorlw	1	; case 1
  9921  003FF2  B4D8               	btfsc	status,2,c
  9922  003FF4  D7D5               	goto	l25871
  9923  003FF6  0A03               	xorlw	3	; case 2
  9924  003FF8  B4D8               	btfsc	status,2,c
  9925  003FFA  D7D5               	goto	l25873
  9926  003FFC  0A01               	xorlw	1	; case 3
  9927  003FFE  B4D8               	btfsc	status,2,c
  9928  004000  D7DD               	goto	l25881
  9929  004002  0A07               	xorlw	7	; case 4
  9930  004004  B4D8               	btfsc	status,2,c
  9931  004006  D7D7               	goto	l25877
  9932  004008  0A01               	xorlw	1	; case 5
  9933  00400A  A4D8               	btfss	status,2,c
  9934  00400C  0012               	return	
  9935  00400E  D7D9               	goto	l25885
  9936  004010                     __end_of_sm_execute_ControlGate:
  9937                           	callstack 0
  9938                           
  9939 ;; *************** function _sm_execute_ControlLearning *****************
  9940 ;; Defined at:
  9941 ;;		line 29 in file "sm_ControlLearning_MC50.c"
  9942 ;; Parameters:    Size  Location     Type
  9943 ;;  psm             2    5[BANK0 ] PTR struct .
  9944 ;;		 -> controlLearning_stateMachine(11), 
  9945 ;; Auto vars:     Size  Location     Type
  9946 ;;  typeOpenOrde    1    9[BANK0 ] enum E10372
  9947 ;; Return value:  Size  Location     Type
  9948 ;;                  1    wreg      void 
  9949 ;; Registers used:
  9950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9951 ;; Tracked objects:
  9952 ;;		On entry : 3F/0
  9953 ;;		On exit  : 0/0
  9954 ;;		Unchanged: 0/0
  9955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9956 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9957 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9958 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9959 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9960 ;;Total ram usage:        5 bytes
  9961 ;; Hardware stack levels used: 1
  9962 ;; Hardware stack levels required when called: 14
  9963 ;; This function calls:
  9964 ;;		_GetOpenOrder
  9965 ;;		_SaveNVM_VarSystem
  9966 ;;		_calculateMean
  9967 ;;		_clearLearningValue
  9968 ;;		_generateErrorLearnig
  9969 ;;		_sm_send_event
  9970 ;; This function is called by:
  9971 ;;		_sm_execute_ControlGate
  9972 ;; This function uses a non-reentrant model
  9973 ;;
  9974                           
  9975                           	psect	text18
  9976  00229A                     __ptext18:
  9977                           	callstack 0
  9978  00229A                     _sm_execute_ControlLearning:
  9979                           	callstack 15
  9980                           
  9981                           ; BSR set to: 0
  9982                           ;sm_ControlLearning_MC50.c: 31:    TypeCMD typeOpenOrder = GetOpenOrder();
  9983                           
  9984                           ;incstack = 0
  9985  00229A  EC00  F02E         	call	_GetOpenOrder	;wreg free
  9986  00229E  0100               	movlb	0	; () banked
  9987  0022A0  6FE1               	movwf	sm_execute_ControlLearning@typeOpenOrder& (0+255),b
  9988                           
  9989                           ;sm_ControlLearning_MC50.c: 33:     switch((sm_state_ControlLearning_t) psm->current_sta
      +                          te)
  9990  0022A2  D0B8               	goto	l23445
  9991  0022A4                     l23371:
  9992                           
  9993                           ; BSR set to: 0
  9994                           ;sm_ControlLearning_MC50.c: 36:         {;sm_ControlLearning_MC50.c: 37:              if
      +                          ((psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0)&& (var_sys.p
      +                          rograminAutomatic == 0))
  9995  0022A4  EE20 F004          	lfsr	2,4
  9996  0022A8  51DD               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9997  0022AA  26D9               	addwf	fsr2l,f,c
  9998  0022AC  51DE               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9999  0022AE  22DA               	addwfc	fsr2h,f,c
 10000  0022B0  0E0A               	movlw	10
 10001  0022B2  18DE               	xorwf	postinc2,w,c
 10002  0022B4  10DE               	iorwf	postinc2,w,c
 10003  0022B6  A4D8               	btfss	status,2,c
 10004  0022B8  D00D               	goto	l23379
 10005                           
 10006                           ; BSR set to: 0
 10007  0022BA  0101               	movlb	1	; () banked
 10008  0022BC  51B5               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10009  0022BE  B4D8               	btfsc	status,2,c
 10010  0022C0  D009               	goto	l23379
 10011                           
 10012                           ; BSR set to: 1
 10013  0022C2  517F               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10014  0022C4  A4D8               	btfss	status,2,c
 10015  0022C6  D006               	goto	l23379
 10016  0022C8                     u28210:
 10017                           
 10018                           ; BSR set to: 1
 10019                           ;sm_ControlLearning_MC50.c: 38:             {;sm_ControlLearning_MC50.c: 39:            
      +                               psm->current_state = st_WaitLearnigOpen;
 10020  0022C8  C0DD  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10021  0022CC  C0DE  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10022  0022D0  0E02               	movlw	2
 10023  0022D2  D08A               	goto	L65
 10024  0022D4                     l23379:
 10025  0022D4  0100               	movlb	0	; () banked
 10026  0022D6  EE20 F004          	lfsr	2,4
 10027  0022DA  51DD               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
 10028  0022DC  26D9               	addwf	fsr2l,f,c
 10029  0022DE  51DE               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
 10030  0022E0  22DA               	addwfc	fsr2h,f,c
 10031  0022E2  0E0A               	movlw	10
 10032  0022E4  18DE               	xorwf	postinc2,w,c
 10033  0022E6  10DE               	iorwf	postinc2,w,c
 10034  0022E8  A4D8               	btfss	status,2,c
 10035  0022EA  D00D               	goto	l23387
 10036                           
 10037                           ; BSR set to: 0
 10038  0022EC  0101               	movlb	1	; () banked
 10039  0022EE  51B5               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10040  0022F0  B4D8               	btfsc	status,2,c
 10041  0022F2  D003               	goto	u28240
 10042                           
 10043                           ; BSR set to: 1
 10044  0022F4  057F               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10045  0022F6  A4D8               	btfss	status,2,c
 10046  0022F8  D006               	goto	l23387
 10047  0022FA                     u28240:
 10048                           
 10049                           ; BSR set to: 1
 10050                           ;sm_ControlLearning_MC50.c: 43:             {;sm_ControlLearning_MC50.c: 44:            
      +                               psm->current_state = st_WaitForOpened;
 10051  0022FA  C0DD  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10052  0022FE  C0DE  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10053  002302  0E04               	movlw	4
 10054  002304  D071               	goto	L65
 10055  002306                     l23387:
 10056  002306  0100               	movlb	0	; () banked
 10057  002308  EE20 F004          	lfsr	2,4
 10058  00230C  51DD               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
 10059  00230E  26D9               	addwf	fsr2l,f,c
 10060  002310  51DE               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
 10061  002312  22DA               	addwfc	fsr2h,f,c
 10062  002314  0E0B               	movlw	11
 10063  002316  18DE               	xorwf	postinc2,w,c
 10064  002318  10DE               	iorwf	postinc2,w,c
 10065  00231A  A4D8               	btfss	status,2,c
 10066  00231C  D09A               	goto	l23447
 10067                           
 10068                           ; BSR set to: 0
 10069                           ;sm_ControlLearning_MC50.c: 47:             {;sm_ControlLearning_MC50.c: 48:            
      +                               psm->current_state = st_WaitForClosed;
 10070  00231E  C0DD  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10071  002322  C0DE  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10072  002326  0E01               	movlw	1
 10073  002328  D05F               	goto	L65
 10074  00232A                     l23391:
 10075                           
 10076                           ; BSR set to: 0
 10077                           ;sm_ControlLearning_MC50.c: 53:         {;sm_ControlLearning_MC50.c: 54:             if(
      +                          (psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0) && (var_sys.p
      +                          rograminAutomatic == 0))
 10078  00232A  EE20 F004          	lfsr	2,4
 10079  00232E  51DD               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
 10080  002330  26D9               	addwf	fsr2l,f,c
 10081  002332  51DE               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
 10082  002334  22DA               	addwfc	fsr2h,f,c
 10083  002336  0E0A               	movlw	10
 10084  002338  18DE               	xorwf	postinc2,w,c
 10085  00233A  10DE               	iorwf	postinc2,w,c
 10086  00233C  A4D8               	btfss	status,2,c
 10087  00233E  D007               	goto	l23399
 10088                           
 10089                           ; BSR set to: 0
 10090  002340  0101               	movlb	1	; () banked
 10091  002342  51B5               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10092  002344  B4D8               	btfsc	status,2,c
 10093  002346  D003               	goto	l23399
 10094                           
 10095                           ; BSR set to: 1
 10096  002348  517F               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10097  00234A  B4D8               	btfsc	status,2,c
 10098  00234C  D7BD               	goto	u28210
 10099  00234E                     l23399:
 10100  00234E  0100               	movlb	0	; () banked
 10101  002350  EE20 F004          	lfsr	2,4
 10102  002354  51DD               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
 10103  002356  26D9               	addwf	fsr2l,f,c
 10104  002358  51DE               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
 10105  00235A  22DA               	addwfc	fsr2h,f,c
 10106  00235C  0E0A               	movlw	10
 10107  00235E  18DE               	xorwf	postinc2,w,c
 10108  002360  10DE               	iorwf	postinc2,w,c
 10109  002362  A4D8               	btfss	status,2,c
 10110  002364  D007               	goto	l23407
 10111                           
 10112                           ; BSR set to: 0
 10113  002366  0101               	movlb	1	; () banked
 10114  002368  51B5               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10115  00236A  B4D8               	btfsc	status,2,c
 10116  00236C  D7C6               	goto	u28240
 10117                           
 10118                           ; BSR set to: 1
 10119  00236E  057F               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10120  002370  B4D8               	btfsc	status,2,c
 10121  002372  D7C3               	goto	u28240
 10122  002374                     l23407:
 10123  002374  0100               	movlb	0	; () banked
 10124  002376                     L67:
 10125  002376  EE20 F004          	lfsr	2,4
 10126  00237A  51DD               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
 10127  00237C  26D9               	addwf	fsr2l,f,c
 10128  00237E  51DE               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
 10129  002380  22DA               	addwfc	fsr2h,f,c
 10130  002382  0E10               	movlw	16
 10131  002384  18DE               	xorwf	postinc2,w,c
 10132  002386  10DE               	iorwf	postinc2,w,c
 10133  002388  A4D8               	btfss	status,2,c
 10134  00238A  D063               	goto	l23447
 10135  00238C  D03C               	goto	L109
 10136  00238E                     l23411:
 10137                           
 10138                           ; BSR set to: 0
 10139                           ;sm_ControlLearning_MC50.c: 70:         {;sm_ControlLearning_MC50.c: 71:             if(
      +                          psm->last_event==ev_GateOpened)
 10140  00238E  EE20 F004          	lfsr	2,4
 10141  002392  51DD               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
 10142  002394  26D9               	addwf	fsr2l,f,c
 10143  002396  51DE               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
 10144  002398  22DA               	addwfc	fsr2h,f,c
 10145  00239A  0E0B               	movlw	11
 10146  00239C  18DE               	xorwf	postinc2,w,c
 10147  00239E  10DE               	iorwf	postinc2,w,c
 10148  0023A0  A4D8               	btfss	status,2,c
 10149  0023A2  D7E9               	goto	L67
 10150                           
 10151                           ; BSR set to: 0
 10152                           ;sm_ControlLearning_MC50.c: 72:             {;sm_ControlLearning_MC50.c: 73:            
      +                               psm->current_state = st_WaitLearnigClose;
 10153  0023A4  C0DD  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10154  0023A8  C0DE  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10155  0023AC  0E03               	movlw	3
 10156  0023AE  D01C               	goto	L65
 10157  0023B0                     l23419:
 10158                           
 10159                           ; BSR set to: 0
 10160                           ;sm_ControlLearning_MC50.c: 82:         {;sm_ControlLearning_MC50.c: 83:             if(
      +                          psm->last_event==ev_GateClosed)
 10161  0023B0  EE20 F004          	lfsr	2,4
 10162  0023B4  51DD               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
 10163  0023B6  26D9               	addwf	fsr2l,f,c
 10164  0023B8  51DE               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
 10165  0023BA  22DA               	addwfc	fsr2h,f,c
 10166  0023BC  0E0A               	movlw	10
 10167  0023BE  18DE               	xorwf	postinc2,w,c
 10168  0023C0  10DE               	iorwf	postinc2,w,c
 10169  0023C2  A4D8               	btfss	status,2,c
 10170  0023C4  D7D8               	goto	L67
 10171  0023C6  D799               	goto	u28240
 10172  0023C8                     l23427:
 10173                           
 10174                           ; BSR set to: 0
 10175                           ;sm_ControlLearning_MC50.c: 94:         {;sm_ControlLearning_MC50.c: 95:             if(
      +                          psm->last_event==ev_GateOpened)
 10176  0023C8  EE20 F004          	lfsr	2,4
 10177  0023CC  51DD               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
 10178  0023CE  26D9               	addwf	fsr2l,f,c
 10179  0023D0  51DE               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
 10180  0023D2  22DA               	addwfc	fsr2h,f,c
 10181  0023D4  0E0B               	movlw	11
 10182  0023D6  18DE               	xorwf	postinc2,w,c
 10183  0023D8  10DE               	iorwf	postinc2,w,c
 10184  0023DA  A4D8               	btfss	status,2,c
 10185  0023DC  D7CC               	goto	L67
 10186                           
 10187                           ; BSR set to: 0
 10188                           ;sm_ControlLearning_MC50.c: 96:             {;sm_ControlLearning_MC50.c: 97:            
      +                               psm->current_state = st_WaitForEndLearn;
 10189  0023DE  C0DD  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10190  0023E2  C0DE  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10191  0023E6  0E05               	movlw	5
 10192  0023E8                     L65:
 10193  0023E8  6EDE               	movwf	postinc2,c
 10194  0023EA  0E00               	movlw	0
 10195  0023EC  6EDD               	movwf	postdec2,c
 10196  0023EE  D031               	goto	l23447
 10197  0023F0                     l23435:
 10198                           
 10199                           ; BSR set to: 0
 10200                           ;sm_ControlLearning_MC50.c: 106:         {;sm_ControlLearning_MC50.c: 107:             i
      +                          f(psm->last_event==ev_GateClosed)
 10201  0023F0  EE20 F004          	lfsr	2,4
 10202  0023F4  51DD               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
 10203  0023F6  26D9               	addwf	fsr2l,f,c
 10204  0023F8  51DE               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
 10205  0023FA  22DA               	addwfc	fsr2h,f,c
 10206  0023FC  0E0A               	movlw	10
 10207  0023FE  18DE               	xorwf	postinc2,w,c
 10208  002400  10DE               	iorwf	postinc2,w,c
 10209  002402  A4D8               	btfss	status,2,c
 10210  002404  D7B8               	goto	L67
 10211  002406                     L109:
 10212                           
 10213                           ; BSR set to: 0
 10214                           ;sm_ControlLearning_MC50.c: 112:             {;sm_ControlLearning_MC50.c: 113:          
      +                                 psm->current_state = st_InitLearning;
 10215  002406  C0DD  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10216  00240A  C0DE  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10217  00240E  0E00               	movlw	0
 10218  002410  D7EB               	goto	L65
 10219  002412                     l2944:
 10220                           
 10221                           ; BSR set to: 0
 10222  002412  D7FF               	goto	l2944
 10223  002414                     l23445:
 10224                           
 10225                           ; BSR set to: 0
 10226  002414  C0DD  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10227  002418  C0DE  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10228  00241C  50DF               	movf	indf2,w,c
 10229  00241E  6FDF               	movwf	??_sm_execute_ControlLearning& (0+255),b
 10230  002420  6BE0               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
 10231                           
 10232                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10233                           ; Switch size 1, requested type "simple"
 10234                           ; Number of cases is 1, Range of values is 0 to 0
 10235                           ; switch strategies available:
 10236                           ; Name         Instructions Cycles
 10237                           ; simple_byte            4     3 (average)
 10238                           ;	Chosen strategy is simple_byte
 10239  002422  51E0               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
 10240  002424  0A00               	xorlw	0	; case 0
 10241  002426  A4D8               	btfss	status,2,c
 10242  002428  D7F4               	goto	l2944
 10243                           
 10244                           ; BSR set to: 0
 10245                           ; Switch size 1, requested type "simple"
 10246                           ; Number of cases is 6, Range of values is 0 to 5
 10247                           ; switch strategies available:
 10248                           ; Name         Instructions Cycles
 10249                           ; simple_byte           19    10 (average)
 10250                           ;	Chosen strategy is simple_byte
 10251  00242A  51DF               	movf	??_sm_execute_ControlLearning& (0+255),w,b
 10252  00242C  0A00               	xorlw	0	; case 0
 10253  00242E  B4D8               	btfsc	status,2,c
 10254  002430  D739               	goto	l23371
 10255  002432  0A01               	xorlw	1	; case 1
 10256  002434  B4D8               	btfsc	status,2,c
 10257  002436  D779               	goto	l23391
 10258  002438  0A03               	xorlw	3	; case 2
 10259  00243A  B4D8               	btfsc	status,2,c
 10260  00243C  D7A8               	goto	l23411
 10261  00243E  0A01               	xorlw	1	; case 3
 10262  002440  B4D8               	btfsc	status,2,c
 10263  002442  D7B6               	goto	l23419
 10264  002444  0A07               	xorlw	7	; case 4
 10265  002446  B4D8               	btfsc	status,2,c
 10266  002448  D7BF               	goto	l23427
 10267  00244A  0A01               	xorlw	1	; case 5
 10268  00244C  B4D8               	btfsc	status,2,c
 10269  00244E  D7D0               	goto	l23435
 10270  002450  D7E0               	goto	l2944
 10271  002452                     l23447:
 10272                           
 10273                           ;sm_ControlLearning_MC50.c: 126:     sm_send_event(&controlLearning_stateMachine, ev_NUL
      +                          L);
 10274  002452  0EB2               	movlw	low _controlLearning_stateMachine
 10275  002454  6E12               	movwf	sm_send_event@psm^0,c
 10276  002456  0E02               	movlw	high _controlLearning_stateMachine
 10277  002458  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10278  00245A  0E00               	movlw	0
 10279  00245C  6E15               	movwf	(sm_send_event@event+1)^0,c
 10280  00245E  0E00               	movlw	0
 10281  002460  6E14               	movwf	sm_send_event@event^0,c
 10282  002462  ECE8  F045         	call	_sm_send_event	;wreg free
 10283                           
 10284                           ;sm_ControlLearning_MC50.c: 131:     switch((sm_state_ControlGate_t) psm->current_state)
 10285  002466  D29D               	goto	l23703
 10286  002468                     l23449:
 10287                           
 10288                           ; BSR set to: 0
 10289                           ;sm_ControlLearning_MC50.c: 134:         {;sm_ControlLearning_MC50.c: 135:             i
      +                          f(var_sys.FimCurso_CloseIsEnabled==YES)
 10290  002468  0101               	movlb	1	; () banked
 10291  00246A  0558               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10292  00246C  A4D8               	btfss	status,2,c
 10293  00246E  D03A               	goto	l23467
 10294                           
 10295                           ; BSR set to: 1
 10296                           ;sm_ControlLearning_MC50.c: 136:             {;sm_ControlLearning_MC50.c: 137:          
      +                                 control_limit_switch = 1;
 10297  002470  0E01               	movlw	1
 10298  002472  0100               	movlb	0	; () banked
 10299  002474  6F70               	movwf	_control_limit_switch& (0+255),b
 10300                           
 10301                           ; BSR set to: 0
 10302                           ;sm_ControlLearning_MC50.c: 138:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
 10303  002476  0EB2               	movlw	low _controlLearning_stateMachine
 10304  002478  6E12               	movwf	sm_send_event@psm^0,c
 10305  00247A  0E02               	movlw	high _controlLearning_stateMachine
 10306  00247C  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10307  00247E  0E00               	movlw	0
 10308  002480  6E15               	movwf	(sm_send_event@event+1)^0,c
 10309  002482  0E0A               	movlw	10
 10310  002484  6E14               	movwf	sm_send_event@event^0,c
 10311  002486  ECE8  F045         	call	_sm_send_event	;wreg free
 10312                           
 10313                           ;sm_ControlLearning_MC50.c: 139:                 var_sys.StateMotor=InOpenFull;
 10314  00248A  0E01               	movlw	1
 10315  00248C  0101               	movlb	1	; () banked
 10316  00248E  6F55               	movwf	_var_sys& (0+255),b	;volatile
 10317                           
 10318                           ; BSR set to: 1
 10319                           ;sm_ControlLearning_MC50.c: 140:                 clearLearningValue();
 10320  002490  EC14  F042         	call	_clearLearningValue	;wreg free
 10321                           
 10322                           ; BSR set to: 1
 10323                           ;sm_ControlLearning_MC50.c: 141:                  if ((var_sys_NVM.decelarationSensivity
      +                           != 0) && (var_sys.programinAutomatic == 0))
 10324  002494  51B5               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10325  002496  B4D8               	btfsc	status,2,c
 10326  002498  D017               	goto	l23465
 10327                           
 10328                           ; BSR set to: 1
 10329  00249A  517F               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10330  00249C  A4D8               	btfss	status,2,c
 10331  00249E  D014               	goto	l23465
 10332  0024A0                     u28430:
 10333                           
 10334                           ; BSR set to: 1
 10335                           ;sm_ControlLearning_MC50.c: 142:                          {;sm_ControlLearning_MC50.c: 1
      +                          43:                 ts_system.TimeLearningDecelaration=(1000/50)*15;
 10336  0024A0  0E01               	movlw	1
 10337  0024A2  0100               	movlb	0	; () banked
 10338  0024A4  6FC6               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10339  0024A6  0E2C               	movlw	44
 10340  0024A8  6FC5               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10341                           
 10342                           ;sm_ControlLearning_MC50.c: 144:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*6;
 10343  0024AA  0E00               	movlw	0
 10344  0024AC  6FC4               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10345  0024AE  0E78               	movlw	120
 10346  0024B0  6FC3               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10347                           
 10348                           ;sm_ControlLearning_MC50.c: 145:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10349  0024B2  0E00               	movlw	0
 10350  0024B4  6FD4               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10351  0024B6  0E14               	movlw	20
 10352  0024B8  6FD3               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10353                           
 10354                           ;sm_ControlLearning_MC50.c: 146:                 var_sys.LearningDecelaration=YES;
 10355  0024BA  0E01               	movlw	1
 10356  0024BC  0101               	movlb	1	; () banked
 10357  0024BE  6F9C               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10358                           
 10359                           ;sm_ControlLearning_MC50.c: 147:                 control_limit_switch = 0;
 10360  0024C0  0E00               	movlw	0
 10361  0024C2  0100               	movlb	0	; () banked
 10362  0024C4  6F70               	movwf	_control_limit_switch& (0+255),b
 10363                           
 10364                           ;sm_ControlLearning_MC50.c: 148:                  }
 10365  0024C6  0012               	return	
 10366  0024C8                     l23465:
 10367                           
 10368                           ; BSR set to: 1
 10369                           ;sm_ControlLearning_MC50.c: 150:                 {;sm_ControlLearning_MC50.c: 151:      
      +                                     var_sys.LearningDecelaration=NO;
 10370  0024C8  0E00               	movlw	0
 10371  0024CA  6F9C               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10372                           
 10373                           ;sm_ControlLearning_MC50.c: 152:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10374  0024CC  0E00               	movlw	0
 10375  0024CE  0100               	movlb	0	; () banked
 10376  0024D0  6FC4               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10377  0024D2  0E50               	movlw	80
 10378  0024D4  6FC3               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10379                           
 10380                           ;sm_ControlLearning_MC50.c: 153:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10381  0024D6  0E00               	movlw	0
 10382  0024D8  6FD4               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10383  0024DA  0E14               	movlw	20
 10384  0024DC  6FD3               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10385                           
 10386                           ;sm_ControlLearning_MC50.c: 154:                 control_limit_switch = 0;
 10387  0024DE  0E00               	movlw	0
 10388  0024E0  6F70               	movwf	_control_limit_switch& (0+255),b
 10389  0024E2  0012               	return	
 10390  0024E4                     l23467:
 10391                           
 10392                           ; BSR set to: 1
 10393                           ;sm_ControlLearning_MC50.c: 159:             {;sm_ControlLearning_MC50.c: 160:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10394  0024E4  0EB2               	movlw	low _controlLearning_stateMachine
 10395  0024E6  6E12               	movwf	sm_send_event@psm^0,c
 10396  0024E8  0E02               	movlw	high _controlLearning_stateMachine
 10397  0024EA  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10398  0024EC  0E00               	movlw	0
 10399  0024EE  6E15               	movwf	(sm_send_event@event+1)^0,c
 10400  0024F0  0E0B               	movlw	11
 10401  0024F2  6E14               	movwf	sm_send_event@event^0,c
 10402  0024F4  ECE8  F045         	call	_sm_send_event	;wreg free
 10403                           
 10404                           ;sm_ControlLearning_MC50.c: 161:                 var_sys.StateMotor = InClose;
 10405  0024F8  0E03               	movlw	3
 10406  0024FA  0101               	movlb	1	; () banked
 10407  0024FC  6F55               	movwf	_var_sys& (0+255),b	;volatile
 10408                           
 10409                           ; BSR set to: 1
 10410                           ;sm_ControlLearning_MC50.c: 162:                 var_sys.LearningDecelaration= YES;
 10411  0024FE  0E01               	movlw	1
 10412  002500  6F9C               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10413                           
 10414                           ; BSR set to: 0
 10415                           ;sm_ControlLearning_MC50.c: 164:         };sm_ControlLearning_MC50.c: 165:         break
      +                          ;
 10416                           
 10417                           ;sm_ControlLearning_MC50.c: 163:             }
 10418  002502  0012               	return	
 10419  002504                     l23473:
 10420                           
 10421                           ; BSR set to: 0
 10422                           ;sm_ControlLearning_MC50.c: 167:         {;sm_ControlLearning_MC50.c: 168:             i
      +                          f(((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1)) || ((button_stru
      +                          ct.current == 0x27 ||typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
 10423  002504  0101               	movlb	1	; () banked
 10424  002506  0558               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10425  002508  B4D8               	btfsc	status,2,c
 10426  00250A  D00F               	goto	u28480
 10427                           
 10428                           ; BSR set to: 1
 10429  00250C  0100               	movlb	0	; () banked
 10430  00250E  0570               	decf	_control_limit_switch& (0+255),w,b
 10431  002510  B4D8               	btfsc	status,2,c
 10432  002512  D00B               	goto	u28480
 10433                           
 10434                           ; BSR set to: 0
 10435  002514  0E27               	movlw	39
 10436  002516  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 10437  002518  B4D8               	btfsc	status,2,c
 10438  00251A  D003               	goto	u28470
 10439                           
 10440                           ; BSR set to: 0
 10441  00251C  05E1               	decf	sm_execute_ControlLearning@typeOpenOrder& (0+255),w,b
 10442  00251E  A4D8               	btfss	status,2,c
 10443  002520  D028               	goto	l23501
 10444  002522                     u28470:
 10445                           
 10446                           ; BSR set to: 0
 10447  002522  0101               	movlb	1	; () banked
 10448  002524  057F               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10449  002526  A4D8               	btfss	status,2,c
 10450  002528  D024               	goto	l23501
 10451  00252A                     u28480:
 10452                           
 10453                           ;sm_ControlLearning_MC50.c: 169:             {;sm_ControlLearning_MC50.c: 171:          
      +                                 control_limit_switch = 1;
 10454  00252A  0E01               	movlw	1
 10455  00252C  0100               	movlb	0	; () banked
 10456  00252E  6F70               	movwf	_control_limit_switch& (0+255),b
 10457                           
 10458                           ;sm_ControlLearning_MC50.c: 172:                 var_sys.StateMotor=Stopped;
 10459  002530  0E00               	movlw	0
 10460  002532  0101               	movlb	1	; () banked
 10461  002534  6F55               	movwf	_var_sys& (0+255),b	;volatile
 10462                           
 10463                           ; BSR set to: 1
 10464                           ;sm_ControlLearning_MC50.c: 173:                 if(ts_system.TimeWaitToNextState<=0)
 10465  002536  0100               	movlb	0	; () banked
 10466  002538  BFB4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10467  00253A  D005               	goto	u28490
 10468  00253C  51B4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10469  00253E  E102               	bnz	u28491
 10470  002540  05B3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10471  002542  B0D8               	btfsc	status,0,c
 10472  002544                     u28491:
 10473  002544  0012               	return	
 10474  002546                     u28490:
 10475                           
 10476                           ; BSR set to: 0
 10477                           ;sm_ControlLearning_MC50.c: 174:                 {;sm_ControlLearning_MC50.c: 175:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10478  002546  0EB2               	movlw	low _controlLearning_stateMachine
 10479  002548  6E12               	movwf	sm_send_event@psm^0,c
 10480  00254A  0E02               	movlw	high _controlLearning_stateMachine
 10481  00254C  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10482  00254E  0E00               	movlw	0
 10483  002550  6E15               	movwf	(sm_send_event@event+1)^0,c
 10484  002552  0E0A               	movlw	10
 10485  002554  6E14               	movwf	sm_send_event@event^0,c
 10486  002556  ECE8  F045         	call	_sm_send_event	;wreg free
 10487                           
 10488                           ;sm_ControlLearning_MC50.c: 176:                     var_sys.StateMotor=InOpenFull;
 10489  00255A  0E01               	movlw	1
 10490  00255C  0101               	movlb	1	; () banked
 10491  00255E  6F55               	movwf	_var_sys& (0+255),b	;volatile
 10492                           
 10493                           ; BSR set to: 1
 10494                           ;sm_ControlLearning_MC50.c: 177:                     clearLearningValue();
 10495  002560  EC14  F042         	call	_clearLearningValue	;wreg free
 10496                           
 10497                           ; BSR set to: 1
 10498                           ;sm_ControlLearning_MC50.c: 178:                         if ((var_sys_NVM.decelarationSe
      +                          nsivity != 0) && (var_sys.programinAutomatic == 0))
 10499  002564  51B5               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10500  002566  B4D8               	btfsc	status,2,c
 10501  002568  D7AF               	goto	l23465
 10502                           
 10503                           ; BSR set to: 1
 10504  00256A  517F               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10505  00256C  B4D8               	btfsc	status,2,c
 10506  00256E  D798               	goto	u28430
 10507  002570  D7AB               	goto	l23465
 10508  002572                     l23501:
 10509  002572  0101               	movlb	1	; () banked
 10510  002574  5155               	movf	_var_sys& (0+255),w,b	;volatile
 10511  002576  A4D8               	btfss	status,2,c
 10512  002578  D003               	goto	l23505
 10513  00257A                     u28520:
 10514                           
 10515                           ; BSR set to: 1
 10516                           ;sm_ControlLearning_MC50.c: 196:             {;sm_ControlLearning_MC50.c: 197:          
      +                                 generateErrorLearnig();
 10517  00257A  ECF6  F044         	call	_generateErrorLearnig	;wreg free
 10518                           
 10519                           ;sm_ControlLearning_MC50.c: 198:             }
 10520  00257E  0012               	return	
 10521  002580                     l23505:
 10522                           
 10523                           ; BSR set to: 1
 10524                           ;sm_ControlLearning_MC50.c: 200:             {;sm_ControlLearning_MC50.c: 201:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10525  002580  0E00               	movlw	0
 10526  002582  0100               	movlb	0	; () banked
 10527  002584  6FB4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10528  002586  0E28               	movlw	40
 10529  002588  6FB3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10530  00258A  0012               	return	
 10531  00258C                     l23507:
 10532                           
 10533                           ; BSR set to: 0
 10534                           ;sm_ControlLearning_MC50.c: 206:         {;sm_ControlLearning_MC50.c: 207:             i
      +                          f((var_sys.FimCurso_OpenIsEnabled==YES) || (ts_system.TimeLearningDecelaration<=0)||(con
      +                          trol_limit_switch == 1))
 10535  00258C  0101               	movlb	1	; () banked
 10536  00258E  0559               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10537  002590  B4D8               	btfsc	status,2,c
 10538  002592  D00B               	goto	u28550
 10539                           
 10540                           ; BSR set to: 1
 10541  002594  0100               	movlb	0	; () banked
 10542  002596  BFC6               	btfsc	(_ts_system+55)& (0+255),7,b	;volatile
 10543  002598  D008               	goto	u28550
 10544  00259A  51C6               	movf	(_ts_system+55)& (0+255),w,b	;volatile
 10545  00259C  E103               	bnz	u28540
 10546  00259E  05C5               	decf	(_ts_system+54)& (0+255),w,b	;volatile
 10547  0025A0  A0D8               	btfss	status,0,c
 10548  0025A2  D003               	goto	u28550
 10549  0025A4                     u28540:
 10550                           
 10551                           ; BSR set to: 0
 10552  0025A4  0570               	decf	_control_limit_switch& (0+255),w,b
 10553  0025A6  A4D8               	btfss	status,2,c
 10554  0025A8  D02B               	goto	l23529
 10555  0025AA                     u28550:
 10556                           
 10557                           ;sm_ControlLearning_MC50.c: 209:             {;sm_ControlLearning_MC50.c: 210:          
      +                                  control_limit_switch = 1;
 10558  0025AA  0E01               	movlw	1
 10559  0025AC  0100               	movlb	0	; () banked
 10560  0025AE  6F70               	movwf	_control_limit_switch& (0+255),b
 10561                           
 10562                           ;sm_ControlLearning_MC50.c: 211:                 var_sys.StateMotor=Stopped;
 10563  0025B0  0E00               	movlw	0
 10564  0025B2  0101               	movlb	1	; () banked
 10565  0025B4  6F55               	movwf	_var_sys& (0+255),b	;volatile
 10566                           
 10567                           ; BSR set to: 1
 10568                           ;sm_ControlLearning_MC50.c: 212:             if(ts_system.TimeWaitToNextState<=0)
 10569  0025B6  0100               	movlb	0	; () banked
 10570  0025B8  BFB4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10571  0025BA  D005               	goto	u28560
 10572  0025BC  51B4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10573  0025BE  E102               	bnz	u28561
 10574  0025C0  05B3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10575  0025C2  B0D8               	btfsc	status,0,c
 10576  0025C4                     u28561:
 10577  0025C4  0012               	return	
 10578  0025C6                     u28560:
 10579                           
 10580                           ; BSR set to: 0
 10581                           ;sm_ControlLearning_MC50.c: 213:             {;sm_ControlLearning_MC50.c: 215:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10582  0025C6  0EB2               	movlw	low _controlLearning_stateMachine
 10583  0025C8  6E12               	movwf	sm_send_event@psm^0,c
 10584  0025CA  0E02               	movlw	high _controlLearning_stateMachine
 10585  0025CC  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10586  0025CE  0E00               	movlw	0
 10587  0025D0  6E15               	movwf	(sm_send_event@event+1)^0,c
 10588  0025D2  0E0B               	movlw	11
 10589  0025D4  6E14               	movwf	sm_send_event@event^0,c
 10590  0025D6  ECE8  F045         	call	_sm_send_event	;wreg free
 10591                           
 10592                           ;sm_ControlLearning_MC50.c: 216:                 var_sys.StateMotor=InClose;
 10593  0025DA  0E03               	movlw	3
 10594  0025DC  0101               	movlb	1	; () banked
 10595  0025DE  6F55               	movwf	_var_sys& (0+255),b	;volatile
 10596                           
 10597                           ; BSR set to: 1
 10598                           ;sm_ControlLearning_MC50.c: 217:                 ts_system.TimeLearningDecelaration=(100
      +                          0/50)*5;
 10599  0025E0  0E00               	movlw	0
 10600  0025E2  0100               	movlb	0	; () banked
 10601  0025E4  6FC6               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10602  0025E6  0E64               	movlw	100
 10603  0025E8  6FC5               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10604                           
 10605                           ; BSR set to: 0
 10606                           ;sm_ControlLearning_MC50.c: 218:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*5;
 10607  0025EA  0E00               	movlw	0
 10608  0025EC  6FC4               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10609  0025EE  0E64               	movlw	100
 10610  0025F0                     L66:
 10611  0025F0  6FC3               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10612                           
 10613                           ; BSR set to: 0
 10614                           ;sm_ControlLearning_MC50.c: 219:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10615  0025F2  0E00               	movlw	0
 10616  0025F4  6FD4               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10617  0025F6  0E14               	movlw	20
 10618  0025F8  6FD3               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10619                           
 10620                           ; BSR set to: 0
 10621                           ;sm_ControlLearning_MC50.c: 220:                 control_limit_switch = 0;
 10622  0025FA  0E00               	movlw	0
 10623  0025FC  6F70               	movwf	_control_limit_switch& (0+255),b
 10624  0025FE  0012               	return	
 10625  002600                     l23529:
 10626                           
 10627                           ; BSR set to: 0
 10628  002600  0101               	movlb	1	; () banked
 10629  002602  5155               	movf	_var_sys& (0+255),w,b	;volatile
 10630  002604  B4D8               	btfsc	status,2,c
 10631  002606  D7B9               	goto	u28520
 10632                           
 10633                           ; BSR set to: 1
 10634                           ;sm_ControlLearning_MC50.c: 230:             {;sm_ControlLearning_MC50.c: 231:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10635  002608  0E00               	movlw	0
 10636  00260A  0100               	movlb	0	; () banked
 10637  00260C  6FB4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10638  00260E  0E28               	movlw	40
 10639  002610  6FB3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10640                           
 10641                           ; BSR set to: 0
 10642                           ;sm_ControlLearning_MC50.c: 232:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10643  002612  BFD4               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10644  002614  D005               	goto	u28580
 10645  002616  51D4               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10646  002618  E102               	bnz	u28581
 10647  00261A  05D3               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10648  00261C  B0D8               	btfsc	status,0,c
 10649  00261E                     u28581:
 10650  00261E  0012               	return	
 10651  002620                     u28580:
 10652                           
 10653                           ; BSR set to: 0
 10654                           ;sm_ControlLearning_MC50.c: 233:                 {;sm_ControlLearning_MC50.c: 234:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10655  002620  BFC4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10656  002622  0012               	return	
 10657  002624  51C4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10658  002626  E103               	bnz	u28590
 10659  002628  05C3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10660  00262A  A0D8               	btfss	status,0,c
 10661  00262C  0012               	return	
 10662  00262E                     u28590:
 10663                           
 10664                           ; BSR set to: 0
 10665                           ;sm_ControlLearning_MC50.c: 235:                 {;sm_ControlLearning_MC50.c: 236:      
      +                                         learn_st.openHistCurrent=calculateMean(learn_st.openHistCurrent,var_sys.A
      +                          ctualHistCurrent);
 10666  00262E  C127  F010         	movff	_learn_st+14,calculateMean@meanValue	;volatile
 10667  002632  C128  F011         	movff	_learn_st+15,calculateMean@meanValue+1	;volatile
 10668  002636  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10669  002638  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10670  00263A  C185  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10671  00263E  C186  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10672  002642  C187  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10673  002646  C188  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10674  00264A  EC2A  F045         	call	_calculateMean	;wreg free
 10675  00264E  C010  F127         	movff	?_calculateMean,_learn_st+14	;volatile
 10676  002652  C011  F128         	movff	?_calculateMean+1,_learn_st+15	;volatile
 10677  002656  0012               	return	
 10678  002658                     l23541:
 10679                           
 10680                           ; BSR set to: 0
 10681                           ;sm_ControlLearning_MC50.c: 243:         {;sm_ControlLearning_MC50.c: 244:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1))
 10682  002658  0101               	movlb	1	; () banked
 10683  00265A  0558               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10684  00265C  B4D8               	btfsc	status,2,c
 10685  00265E  D004               	goto	u28610
 10686                           
 10687                           ; BSR set to: 1
 10688  002660  0100               	movlb	0	; () banked
 10689  002662  0570               	decf	_control_limit_switch& (0+255),w,b
 10690  002664  A4D8               	btfss	status,2,c
 10691  002666  D022               	goto	l23561
 10692  002668                     u28610:
 10693                           
 10694                           ;sm_ControlLearning_MC50.c: 245:             {;sm_ControlLearning_MC50.c: 246:          
      +                                 control_limit_switch = 1;
 10695  002668  0E01               	movlw	1
 10696  00266A  0100               	movlb	0	; () banked
 10697  00266C  6F70               	movwf	_control_limit_switch& (0+255),b
 10698                           
 10699                           ;sm_ControlLearning_MC50.c: 247:                 var_sys.StateMotor=Stopped;
 10700  00266E  0E00               	movlw	0
 10701  002670  0101               	movlb	1	; () banked
 10702  002672  6F55               	movwf	_var_sys& (0+255),b	;volatile
 10703                           
 10704                           ; BSR set to: 1
 10705                           ;sm_ControlLearning_MC50.c: 248:                 if(ts_system.TimeWaitToNextState<=0)
 10706  002674  0100               	movlb	0	; () banked
 10707  002676  BFB4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10708  002678  D005               	goto	u28620
 10709  00267A  51B4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10710  00267C  E102               	bnz	u28621
 10711  00267E  05B3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10712  002680  B0D8               	btfsc	status,0,c
 10713  002682                     u28621:
 10714  002682  0012               	return	
 10715  002684                     u28620:
 10716                           
 10717                           ; BSR set to: 0
 10718                           ;sm_ControlLearning_MC50.c: 249:                 {;sm_ControlLearning_MC50.c: 250:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10719  002684  0EB2               	movlw	low _controlLearning_stateMachine
 10720  002686  6E12               	movwf	sm_send_event@psm^0,c
 10721  002688  0E02               	movlw	high _controlLearning_stateMachine
 10722  00268A  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10723  00268C  0E00               	movlw	0
 10724  00268E  6E15               	movwf	(sm_send_event@event+1)^0,c
 10725  002690  0E0A               	movlw	10
 10726  002692  6E14               	movwf	sm_send_event@event^0,c
 10727  002694  ECE8  F045         	call	_sm_send_event	;wreg free
 10728                           
 10729                           ;sm_ControlLearning_MC50.c: 251:                     var_sys.StateMotor=InOpenFull;
 10730  002698  0E01               	movlw	1
 10731  00269A  0101               	movlb	1	; () banked
 10732  00269C  6F55               	movwf	_var_sys& (0+255),b	;volatile
 10733                           
 10734                           ; BSR set to: 1
 10735                           ;sm_ControlLearning_MC50.c: 252:                     var_sys.LearningDecelaration=NO;
 10736  00269E  0E00               	movlw	0
 10737  0026A0  6F9C               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10738                           
 10739                           ; BSR set to: 1
 10740                           ;sm_ControlLearning_MC50.c: 253:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*3;
 10741  0026A2  0E00               	movlw	0
 10742  0026A4  0100               	movlb	0	; () banked
 10743  0026A6  6FC4               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10744  0026A8  0E3C               	movlw	60
 10745  0026AA  D7A2               	goto	L66
 10746  0026AC                     l23561:
 10747                           
 10748                           ; BSR set to: 0
 10749  0026AC  0101               	movlb	1	; () banked
 10750  0026AE  5155               	movf	_var_sys& (0+255),w,b	;volatile
 10751  0026B0  B4D8               	btfsc	status,2,c
 10752  0026B2  D763               	goto	u28520
 10753                           
 10754                           ; BSR set to: 1
 10755                           ;sm_ControlLearning_MC50.c: 265:             {;sm_ControlLearning_MC50.c: 266:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10756  0026B4  0E00               	movlw	0
 10757  0026B6  0100               	movlb	0	; () banked
 10758  0026B8  6FB4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10759  0026BA  0E28               	movlw	40
 10760  0026BC  6FB3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10761                           
 10762                           ; BSR set to: 0
 10763                           ;sm_ControlLearning_MC50.c: 267:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10764  0026BE  BFD4               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10765  0026C0  D005               	goto	u28640
 10766  0026C2  51D4               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10767  0026C4  E102               	bnz	u28641
 10768  0026C6  05D3               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10769  0026C8  B0D8               	btfsc	status,0,c
 10770  0026CA                     u28641:
 10771  0026CA  0012               	return	
 10772  0026CC                     u28640:
 10773                           
 10774                           ; BSR set to: 0
 10775                           ;sm_ControlLearning_MC50.c: 268:                 {;sm_ControlLearning_MC50.c: 269:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10776  0026CC  BFC4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10777  0026CE  0012               	return	
 10778  0026D0  51C4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10779  0026D2  E103               	bnz	u28650
 10780  0026D4  05C3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10781  0026D6  A0D8               	btfss	status,0,c
 10782  0026D8  0012               	return	
 10783  0026DA                     u28650:
 10784                           
 10785                           ; BSR set to: 0
 10786                           ;sm_ControlLearning_MC50.c: 270:                 {;sm_ControlLearning_MC50.c: 271:      
      +                                         learn_st.closeHistCurrent=calculateMean(learn_st.closeHistCurrent,var_sys
      +                          .ActualHistCurrent);
 10787  0026DA  C129  F010         	movff	_learn_st+16,calculateMean@meanValue	;volatile
 10788  0026DE  C12A  F011         	movff	_learn_st+17,calculateMean@meanValue+1	;volatile
 10789  0026E2  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10790  0026E4  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10791  0026E6  C185  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10792  0026EA  C186  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10793  0026EE  C187  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10794  0026F2  C188  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10795  0026F6  EC2A  F045         	call	_calculateMean	;wreg free
 10796  0026FA  C010  F129         	movff	?_calculateMean,_learn_st+16	;volatile
 10797  0026FE  C011  F12A         	movff	?_calculateMean+1,_learn_st+17	;volatile
 10798  002702  0012               	return	
 10799  002704                     l23573:
 10800                           
 10801                           ; BSR set to: 0
 10802                           ;sm_ControlLearning_MC50.c: 278:         {;sm_ControlLearning_MC50.c: 279:             i
      +                          f(((var_sys.FimCurso_OpenIsEnabled==YES)||control_limit_switch == 1)||(var_sys.LearningD
      +                          ecelaration==YES && (button_struct.current == 0x27 ||typeOpenOrder == TypeFull) && var_s
      +                          ys.programinAutomatic == 1))
 10803  002704  0101               	movlb	1	; () banked
 10804  002706  0559               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10805  002708  B4D8               	btfsc	status,2,c
 10806  00270A  D014               	goto	u28710
 10807                           
 10808                           ; BSR set to: 1
 10809  00270C  0100               	movlb	0	; () banked
 10810  00270E  0570               	decf	_control_limit_switch& (0+255),w,b
 10811  002710  B4D8               	btfsc	status,2,c
 10812  002712  D010               	goto	u28710
 10813                           
 10814                           ; BSR set to: 0
 10815  002714  0101               	movlb	1	; () banked
 10816  002716  059C               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10817  002718  A4D8               	btfss	status,2,c
 10818  00271A  D031               	goto	l23599
 10819                           
 10820                           ; BSR set to: 1
 10821  00271C  0E27               	movlw	39
 10822  00271E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 10823  002720  B4D8               	btfsc	status,2,c
 10824  002722  D004               	goto	u28700
 10825                           
 10826                           ; BSR set to: 1
 10827  002724  0100               	movlb	0	; () banked
 10828  002726  05E1               	decf	sm_execute_ControlLearning@typeOpenOrder& (0+255),w,b
 10829  002728  A4D8               	btfss	status,2,c
 10830  00272A  D029               	goto	l23599
 10831  00272C                     u28700:
 10832  00272C  0101               	movlb	1	; () banked
 10833  00272E  057F               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10834  002730  A4D8               	btfss	status,2,c
 10835  002732  D025               	goto	l23599
 10836  002734                     u28710:
 10837                           
 10838                           ;sm_ControlLearning_MC50.c: 280:             {;sm_ControlLearning_MC50.c: 282:          
      +                                 var_sys.Counter_Learning = 0;
 10839  002734  0E00               	movlw	0
 10840  002736  0101               	movlb	1	; () banked
 10841  002738  6F6C               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10842                           
 10843                           ;sm_ControlLearning_MC50.c: 283:                 var_sys.LearningDecelaration = NO;
 10844  00273A  0E00               	movlw	0
 10845  00273C  6F9C               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10846                           
 10847                           ;sm_ControlLearning_MC50.c: 284:                 control_limit_switch = 1;
 10848  00273E  0E01               	movlw	1
 10849  002740  0100               	movlb	0	; () banked
 10850  002742  6F70               	movwf	_control_limit_switch& (0+255),b
 10851                           
 10852                           ;sm_ControlLearning_MC50.c: 285:                 var_sys.StateMotor=Stopped;
 10853  002744  0E00               	movlw	0
 10854  002746  0101               	movlb	1	; () banked
 10855  002748  6F55               	movwf	_var_sys& (0+255),b	;volatile
 10856                           
 10857                           ; BSR set to: 1
 10858                           ;sm_ControlLearning_MC50.c: 286:                 if(ts_system.TimeWaitToNextState<=0)
 10859  00274A  0100               	movlb	0	; () banked
 10860  00274C  BFB4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10861  00274E  D005               	goto	u28720
 10862  002750  51B4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10863  002752  E102               	bnz	u28721
 10864  002754  05B3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10865  002756  B0D8               	btfsc	status,0,c
 10866  002758                     u28721:
 10867  002758  0012               	return	
 10868  00275A                     u28720:
 10869                           
 10870                           ; BSR set to: 0
 10871                           ;sm_ControlLearning_MC50.c: 287:                 {;sm_ControlLearning_MC50.c: 288:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10872  00275A  0EB2               	movlw	low _controlLearning_stateMachine
 10873  00275C  6E12               	movwf	sm_send_event@psm^0,c
 10874  00275E  0E02               	movlw	high _controlLearning_stateMachine
 10875  002760  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10876  002762  0E00               	movlw	0
 10877  002764  6E15               	movwf	(sm_send_event@event+1)^0,c
 10878  002766  0E0B               	movlw	11
 10879  002768  6E14               	movwf	sm_send_event@event^0,c
 10880  00276A  ECE8  F045         	call	_sm_send_event	;wreg free
 10881                           
 10882                           ;sm_ControlLearning_MC50.c: 289:                     var_sys.StateMotor=InClose;
 10883  00276E  0E03               	movlw	3
 10884  002770  0101               	movlb	1	; () banked
 10885  002772  6F55               	movwf	_var_sys& (0+255),b	;volatile
 10886                           
 10887                           ; BSR set to: 1
 10888                           ;sm_ControlLearning_MC50.c: 290:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*4;
 10889  002774  0E00               	movlw	0
 10890  002776  0100               	movlb	0	; () banked
 10891  002778  6FC4               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10892  00277A  0E50               	movlw	80
 10893  00277C  D739               	goto	L66
 10894  00277E                     l23599:
 10895  00277E  0101               	movlb	1	; () banked
 10896  002780  5155               	movf	_var_sys& (0+255),w,b	;volatile
 10897  002782  B4D8               	btfsc	status,2,c
 10898  002784  D6FA               	goto	u28520
 10899                           
 10900                           ; BSR set to: 1
 10901  002786  0E27               	movlw	39
 10902  002788  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 10903  00278A  B4D8               	btfsc	status,2,c
 10904  00278C  D004               	goto	u28750
 10905                           
 10906                           ; BSR set to: 1
 10907  00278E  0100               	movlb	0	; () banked
 10908  002790  05E1               	decf	sm_execute_ControlLearning@typeOpenOrder& (0+255),w,b
 10909  002792  A4D8               	btfss	status,2,c
 10910  002794  D011               	goto	l23613
 10911  002796                     u28750:
 10912  002796  0101               	movlb	1	; () banked
 10913  002798  057F               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10914  00279A  A4D8               	btfss	status,2,c
 10915  00279C  D00D               	goto	l23613
 10916                           
 10917                           ; BSR set to: 1
 10918  00279E  519C               	movf	(_var_sys+71)& (0+255),w,b	;volatile
 10919  0027A0  A4D8               	btfss	status,2,c
 10920  0027A2  D00A               	goto	l23613
 10921  0027A4                     u28770:
 10922                           
 10923                           ; BSR set to: 1
 10924                           ;sm_ControlLearning_MC50.c: 303:                 var_sys.LearningDecelaration=YES;
 10925  0027A4  0E01               	movlw	1
 10926  0027A6  6F9C               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10927                           
 10928                           ;sm_ControlLearning_MC50.c: 306:                 button_struct.processed = 1;
 10929  0027A8  0E01               	movlw	1
 10930  0027AA  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 10931                           
 10932                           ;sm_ControlLearning_MC50.c: 307:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10933  0027AC  0E00               	movlw	0
 10934  0027AE  0100               	movlb	0	; () banked
 10935  0027B0  6FC4               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10936  0027B2  0E50               	movlw	80
 10937  0027B4  6FC3               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10938                           
 10939                           ;sm_ControlLearning_MC50.c: 309:             }
 10940  0027B6  0012               	return	
 10941  0027B8                     l23613:
 10942  0027B8  0101               	movlb	1	; () banked
 10943  0027BA  059C               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10944  0027BC  A4D8               	btfss	status,2,c
 10945  0027BE  D00D               	goto	l23621
 10946                           
 10947                           ; BSR set to: 1
 10948                           ;sm_ControlLearning_MC50.c: 313:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10949  0027C0  0E00               	movlw	0
 10950  0027C2  0100               	movlb	0	; () banked
 10951  0027C4  6FB4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10952  0027C6  0E28               	movlw	40
 10953  0027C8  6FB3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10954                           
 10955                           ; BSR set to: 0
 10956                           ;sm_ControlLearning_MC50.c: 315:                 if(ts_system.TimeWaitToGetCurrent>0)
 10957  0027CA  BFC4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10958  0027CC  0012               	return	
 10959  0027CE  51C4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10960  0027D0  E103               	bnz	u28790
 10961  0027D2  05C3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10962  0027D4  A0D8               	btfss	status,0,c
 10963  0027D6  0012               	return	
 10964  0027D8                     u28790:
 10965  0027D8  D72A               	goto	u28590
 10966  0027DA                     l23621:
 10967                           
 10968                           ; BSR set to: 1
 10969                           ;sm_ControlLearning_MC50.c: 322:             {;sm_ControlLearning_MC50.c: 323:          
      +                                 var_sys.Counter_Learning = 1;
 10970  0027DA  0E01               	movlw	1
 10971  0027DC  6F6C               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10972                           
 10973                           ;sm_ControlLearning_MC50.c: 324:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10974  0027DE  0E00               	movlw	0
 10975  0027E0  0100               	movlb	0	; () banked
 10976  0027E2  6FB4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10977  0027E4  0E28               	movlw	40
 10978  0027E6  6FB3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10979                           
 10980                           ; BSR set to: 0
 10981                           ;sm_ControlLearning_MC50.c: 326:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10982  0027E8  BFD4               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10983  0027EA  D005               	goto	u28800
 10984  0027EC  51D4               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10985  0027EE  E102               	bnz	u28801
 10986  0027F0  05D3               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10987  0027F2  B0D8               	btfsc	status,0,c
 10988  0027F4                     u28801:
 10989  0027F4  0012               	return	
 10990  0027F6                     u28800:
 10991                           
 10992                           ; BSR set to: 0
 10993                           ;sm_ControlLearning_MC50.c: 327:                 {;sm_ControlLearning_MC50.c: 328:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10994  0027F6  BFC4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10995  0027F8  0012               	return	
 10996  0027FA  51C4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10997  0027FC  E103               	bnz	u28810
 10998  0027FE  05C3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10999  002800  A0D8               	btfss	status,0,c
 11000  002802  0012               	return	
 11001  002804                     u28810:
 11002                           
 11003                           ; BSR set to: 0
 11004                           ;sm_ControlLearning_MC50.c: 329:                 {;sm_ControlLearning_MC50.c: 330:      
      +                                         learn_st.openCurrent=calculateMean(learn_st.openCurrent,var_sys.ActualCur
      +                          rent);
 11005  002804  C123  F010         	movff	_learn_st+10,calculateMean@meanValue	;volatile
 11006  002808  C124  F011         	movff	_learn_st+11,calculateMean@meanValue+1	;volatile
 11007  00280C  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 11008  00280E  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 11009  002810  C183  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 11010  002814  C184  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 11011  002818  6A16               	clrf	(calculateMean@newValue+2)^0,c
 11012  00281A  6A17               	clrf	(calculateMean@newValue+3)^0,c
 11013  00281C  EC2A  F045         	call	_calculateMean	;wreg free
 11014  002820  C010  F123         	movff	?_calculateMean,_learn_st+10	;volatile
 11015  002824  C011  F124         	movff	?_calculateMean+1,_learn_st+11	;volatile
 11016  002828  0012               	return	
 11017  00282A                     l23629:
 11018                           
 11019                           ; BSR set to: 0
 11020                           ;sm_ControlLearning_MC50.c: 337:         {;sm_ControlLearning_MC50.c: 338:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||( var_sys.LearningDecelaration==YES && (button
      +                          _struct.current == 0x27 || typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1
      +                          ))
 11021  00282A  0101               	movlb	1	; () banked
 11022  00282C  0558               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 11023  00282E  B4D8               	btfsc	status,2,c
 11024  002830  D00F               	goto	u28860
 11025                           
 11026                           ; BSR set to: 1
 11027  002832  059C               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 11028  002834  A4D8               	btfss	status,2,c
 11029  002836  D070               	goto	l23675
 11030                           
 11031                           ; BSR set to: 1
 11032  002838  0E27               	movlw	39
 11033  00283A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 11034  00283C  B4D8               	btfsc	status,2,c
 11035  00283E  D004               	goto	u28850
 11036                           
 11037                           ; BSR set to: 1
 11038  002840  0100               	movlb	0	; () banked
 11039  002842  05E1               	decf	sm_execute_ControlLearning@typeOpenOrder& (0+255),w,b
 11040  002844  A4D8               	btfss	status,2,c
 11041  002846  D068               	goto	l23675
 11042  002848                     u28850:
 11043  002848  0101               	movlb	1	; () banked
 11044  00284A  057F               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 11045  00284C  A4D8               	btfss	status,2,c
 11046  00284E  D064               	goto	l23675
 11047  002850                     u28860:
 11048                           
 11049                           ; BSR set to: 1
 11050                           ;sm_ControlLearning_MC50.c: 339:             {;sm_ControlLearning_MC50.c: 342:          
      +                                 var_sys.Statedoorcontrol = st_Closed;
 11051  002850  0E01               	movlw	1
 11052  002852  6F71               	movwf	(_var_sys+28)& (0+255),b	;volatile
 11053                           
 11054                           ;sm_ControlLearning_MC50.c: 343:                 var_sys.Counter_Learning = 0;
 11055  002854  0E00               	movlw	0
 11056  002856  6F6C               	movwf	(_var_sys+23)& (0+255),b	;volatile
 11057                           
 11058                           ;sm_ControlLearning_MC50.c: 344:                 var_sys.LearningDecelaration = NO;
 11059  002858  0E00               	movlw	0
 11060  00285A  6F9C               	movwf	(_var_sys+71)& (0+255),b	;volatile
 11061                           
 11062                           ;sm_ControlLearning_MC50.c: 345:                 var_sys.StateMotor=Stopped;
 11063  00285C  0E00               	movlw	0
 11064  00285E  6F55               	movwf	_var_sys& (0+255),b	;volatile
 11065                           
 11066                           ; BSR set to: 1
 11067                           ;sm_ControlLearning_MC50.c: 346:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
 11068  002860  0EB2               	movlw	low _controlLearning_stateMachine
 11069  002862  6E12               	movwf	sm_send_event@psm^0,c
 11070  002864  0E02               	movlw	high _controlLearning_stateMachine
 11071  002866  6E13               	movwf	(sm_send_event@psm+1)^0,c
 11072  002868  0E00               	movlw	0
 11073  00286A  6E15               	movwf	(sm_send_event@event+1)^0,c
 11074  00286C  0E0A               	movlw	10
 11075  00286E  6E14               	movwf	sm_send_event@event^0,c
 11076  002870  ECE8  F045         	call	_sm_send_event	;wreg free
 11077                           
 11078                           ;sm_ControlLearning_MC50.c: 347:                 sm_send_event(&controlGate_stateMachine
      +                          , ev_LearningComplete);
 11079  002874  0EE6               	movlw	low _controlGate_stateMachine
 11080  002876  6E12               	movwf	sm_send_event@psm^0,c
 11081  002878  0E01               	movlw	high _controlGate_stateMachine
 11082  00287A  6E13               	movwf	(sm_send_event@psm+1)^0,c
 11083  00287C  0E00               	movlw	0
 11084  00287E  6E15               	movwf	(sm_send_event@event+1)^0,c
 11085  002880  0E13               	movlw	19
 11086  002882  6E14               	movwf	sm_send_event@event^0,c
 11087  002884  ECE8  F045         	call	_sm_send_event	;wreg free
 11088                           
 11089                           ;sm_ControlLearning_MC50.c: 348:                 var_sys_NVM.learningTimeToClose=learn_s
      +                          t.timeClose;
 11090  002888  C119  F1DE         	movff	_learn_st,_var_sys_NVM+56	;volatile
 11091  00288C  C11A  F1DF         	movff	_learn_st+1,_var_sys_NVM+57	;volatile
 11092  002890  C11B  F1E0         	movff	_learn_st+2,_var_sys_NVM+58	;volatile
 11093  002894  C11C  F1E1         	movff	_learn_st+3,_var_sys_NVM+59	;volatile
 11094                           
 11095                           ;sm_ControlLearning_MC50.c: 349:                 var_sys_NVM.learningTimeToOpen=learn_st
      +                          .timeOpen;
 11096  002898  C11D  F1DA         	movff	_learn_st+4,_var_sys_NVM+52	;volatile
 11097  00289C  C11E  F1DB         	movff	_learn_st+5,_var_sys_NVM+53	;volatile
 11098  0028A0  C11F  F1DC         	movff	_learn_st+6,_var_sys_NVM+54	;volatile
 11099  0028A4  C120  F1DD         	movff	_learn_st+7,_var_sys_NVM+55	;volatile
 11100                           
 11101                           ;sm_ControlLearning_MC50.c: 350:                 if (var_sys.programinAutomatic == 1){
 11102  0028A8  0101               	movlb	1	; () banked
 11103  0028AA  057F               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 11104  0028AC  A4D8               	btfss	status,2,c
 11105  0028AE  D005               	goto	l23653
 11106                           
 11107                           ; BSR set to: 1
 11108                           ;sm_ControlLearning_MC50.c: 351:                     var_sys_NVM.decelarationClose=learn
      +                          _st.timeDecelerationClose ;
 11109  0028B0  C121  F1A7         	movff	_learn_st+8,_var_sys_NVM+1	;volatile
 11110                           
 11111                           ;sm_ControlLearning_MC50.c: 352:                     var_sys_NVM.decelarationOpen=learn_
      +                          st.timeDecelerationOpen ;
 11112  0028B4  C122  F1A6         	movff	_learn_st+9,_var_sys_NVM	;volatile
 11113                           
 11114                           ;sm_ControlLearning_MC50.c: 353:                                 }
 11115  0028B8  D004               	goto	l23655
 11116  0028BA                     l23653:
 11117                           
 11118                           ; BSR set to: 1
 11119                           ;sm_ControlLearning_MC50.c: 355:                     var_sys_NVM.decelarationClose=4 ;
 11120  0028BA  0E04               	movlw	4
 11121  0028BC  6FA7               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 11122                           
 11123                           ;sm_ControlLearning_MC50.c: 356:                     var_sys_NVM.decelarationOpen=4 ;
 11124  0028BE  0E04               	movlw	4
 11125  0028C0  6FA6               	movwf	_var_sys_NVM& (0+255),b	;volatile
 11126  0028C2                     l23655:
 11127                           
 11128                           ; BSR set to: 1
 11129                           ;sm_ControlLearning_MC50.c: 358:                 var_sys_NVM.learningCurrentNormalClose=
      +                          learn_st.closeCurrent;
 11130  0028C2  C125  F1D6         	movff	_learn_st+12,_var_sys_NVM+48	;volatile
 11131  0028C6  C126  F1D7         	movff	_learn_st+13,_var_sys_NVM+49	;volatile
 11132                           
 11133                           ; BSR set to: 1
 11134                           ;sm_ControlLearning_MC50.c: 359:                 var_sys_NVM.learningCurrentNormalOpen=l
      +                          earn_st.openCurrent;
 11135  0028CA  C123  F1D8         	movff	_learn_st+10,_var_sys_NVM+50	;volatile
 11136  0028CE  C124  F1D9         	movff	_learn_st+11,_var_sys_NVM+51	;volatile
 11137                           
 11138                           ; BSR set to: 1
 11139                           ;sm_ControlLearning_MC50.c: 360:                 var_sys_NVM.learningCurrentDecelaration
      +                          Open=learn_st.openHistCurrent;
 11140  0028D2  C127  F1D2         	movff	_learn_st+14,_var_sys_NVM+44	;volatile
 11141  0028D6  C128  F1D3         	movff	_learn_st+15,_var_sys_NVM+45	;volatile
 11142  0028DA  6BD4               	clrf	(_var_sys_NVM+46)& (0+255),b	;volatile
 11143  0028DC  6BD5               	clrf	(_var_sys_NVM+47)& (0+255),b	;volatile
 11144                           
 11145                           ; BSR set to: 1
 11146                           ;sm_ControlLearning_MC50.c: 361:                 var_sys_NVM.learningCurrentDecelaration
      +                          Close=learn_st.closeHistCurrent;
 11147  0028DE  C129  F1CE         	movff	_learn_st+16,_var_sys_NVM+40	;volatile
 11148  0028E2  C12A  F1CF         	movff	_learn_st+17,_var_sys_NVM+41	;volatile
 11149  0028E6  6BD0               	clrf	(_var_sys_NVM+42)& (0+255),b	;volatile
 11150  0028E8  6BD1               	clrf	(_var_sys_NVM+43)& (0+255),b	;volatile
 11151                           
 11152                           ; BSR set to: 1
 11153                           ;sm_ControlLearning_MC50.c: 362:                 SaveNVM_VarSystem(pageMemoryP);
 11154  0028EA  0E00               	movlw	0
 11155  0028EC  EC7F  F048         	call	_SaveNVM_VarSystem
 11156                           
 11157                           ;sm_ControlLearning_MC50.c: 363:                 SaveNVM_VarSystem(pageMemoryLearningVar
      +                          s);
 11158  0028F0  0E03               	movlw	3
 11159  0028F2  EC7F  F048         	call	_SaveNVM_VarSystem
 11160                           
 11161                           ;sm_ControlLearning_MC50.c: 364:                 SaveNVM_VarSystem(pageMemoryCounters);
 11162  0028F6  0E02               	movlw	2
 11163  0028F8  EC7F  F048         	call	_SaveNVM_VarSystem
 11164                           
 11165                           ;sm_ControlLearning_MC50.c: 365:                 var_sys.LearningIsEnabled=NO;
 11166  0028FC  0E00               	movlw	0
 11167  0028FE  0101               	movlb	1	; () banked
 11168  002900  6F7B               	movwf	(_var_sys+38)& (0+255),b	;volatile
 11169                           
 11170                           ; BSR set to: 1
 11171                           ;sm_ControlLearning_MC50.c: 366:                 var_sys.PositionActual=0;
 11172  002902  0E00               	movlw	0
 11173  002904  6F73               	movwf	(_var_sys+30)& (0+255),b	;volatile
 11174  002906  0E00               	movlw	0
 11175  002908  6F74               	movwf	(_var_sys+31)& (0+255),b	;volatile
 11176  00290A  0E00               	movlw	0
 11177  00290C  6F75               	movwf	(_var_sys+32)& (0+255),b	;volatile
 11178  00290E  0E00               	movlw	0
 11179  002910  6F76               	movwf	(_var_sys+33)& (0+255),b	;volatile
 11180                           
 11181                           ; BSR set to: 1
 11182                           ;sm_ControlLearning_MC50.c: 367:                 var_sys.PositionIsLost = NO;
 11183  002912  0E00               	movlw	0
 11184  002914  6F9D               	movwf	(_var_sys+72)& (0+255),b	;volatile
 11185                           
 11186                           ;sm_ControlLearning_MC50.c: 369:             }
 11187  002916  0012               	return	
 11188  002918                     l23675:
 11189  002918  0101               	movlb	1	; () banked
 11190  00291A  5155               	movf	_var_sys& (0+255),w,b	;volatile
 11191  00291C  B4D8               	btfsc	status,2,c
 11192  00291E  D62D               	goto	u28520
 11193                           
 11194                           ; BSR set to: 1
 11195  002920  0E27               	movlw	39
 11196  002922  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 11197  002924  B4D8               	btfsc	status,2,c
 11198  002926  D004               	goto	u28900
 11199                           
 11200                           ; BSR set to: 1
 11201  002928  0100               	movlb	0	; () banked
 11202  00292A  05E1               	decf	sm_execute_ControlLearning@typeOpenOrder& (0+255),w,b
 11203  00292C  A4D8               	btfss	status,2,c
 11204  00292E  D004               	goto	l23687
 11205  002930                     u28900:
 11206  002930  0101               	movlb	1	; () banked
 11207  002932  057F               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 11208  002934  B4D8               	btfsc	status,2,c
 11209  002936  D736               	goto	u28770
 11210  002938                     l23687:
 11211  002938  0101               	movlb	1	; () banked
 11212  00293A  059C               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 11213  00293C  A4D8               	btfss	status,2,c
 11214  00293E  D009               	goto	l23693
 11215                           
 11216                           ; BSR set to: 1
 11217                           ;sm_ControlLearning_MC50.c: 384:                  if(ts_system.TimeWaitToGetCurrent>0)
 11218  002940  0100               	movlb	0	; () banked
 11219  002942  BFC4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 11220  002944  0012               	return	
 11221  002946  51C4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 11222  002948  E103               	bnz	u28930
 11223  00294A  05C3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 11224  00294C  A0D8               	btfss	status,0,c
 11225  00294E  0012               	return	
 11226  002950                     u28930:
 11227  002950  D6C4               	goto	u28650
 11228  002952                     l23693:
 11229                           
 11230                           ; BSR set to: 1
 11231                           ;sm_ControlLearning_MC50.c: 390:             {;sm_ControlLearning_MC50.c: 391:          
      +                                 var_sys.Counter_Learning = 1;
 11232  002952  0E01               	movlw	1
 11233  002954  6F6C               	movwf	(_var_sys+23)& (0+255),b	;volatile
 11234                           
 11235                           ;sm_ControlLearning_MC50.c: 392:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 11236  002956  0E00               	movlw	0
 11237  002958  0100               	movlb	0	; () banked
 11238  00295A  6FB4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 11239  00295C  0E28               	movlw	40
 11240  00295E  6FB3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 11241                           
 11242                           ; BSR set to: 0
 11243                           ;sm_ControlLearning_MC50.c: 395:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 11244  002960  BFD4               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 11245  002962  D005               	goto	u28940
 11246  002964  51D4               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 11247  002966  E102               	bnz	u28941
 11248  002968  05D3               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 11249  00296A  B0D8               	btfsc	status,0,c
 11250  00296C                     u28941:
 11251  00296C  0012               	return	
 11252  00296E                     u28940:
 11253                           
 11254                           ; BSR set to: 0
 11255                           ;sm_ControlLearning_MC50.c: 396:                 {;sm_ControlLearning_MC50.c: 397:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 11256  00296E  BFC4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 11257  002970  0012               	return	
 11258  002972  51C4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 11259  002974  E103               	bnz	u28950
 11260  002976  05C3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 11261  002978  A0D8               	btfss	status,0,c
 11262  00297A  0012               	return	
 11263  00297C                     u28950:
 11264                           
 11265                           ; BSR set to: 0
 11266                           ;sm_ControlLearning_MC50.c: 398:                 {;sm_ControlLearning_MC50.c: 399:      
      +                                         learn_st.closeCurrent=calculateMean(learn_st.closeCurrent,var_sys.ActualC
      +                          urrent);
 11267  00297C  C125  F010         	movff	_learn_st+12,calculateMean@meanValue	;volatile
 11268  002980  C126  F011         	movff	_learn_st+13,calculateMean@meanValue+1	;volatile
 11269  002984  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 11270  002986  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 11271  002988  C183  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 11272  00298C  C184  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 11273  002990  6A16               	clrf	(calculateMean@newValue+2)^0,c
 11274  002992  6A17               	clrf	(calculateMean@newValue+3)^0,c
 11275  002994  EC2A  F045         	call	_calculateMean	;wreg free
 11276  002998  C010  F125         	movff	?_calculateMean,_learn_st+12	;volatile
 11277  00299C  C011  F126         	movff	?_calculateMean+1,_learn_st+13	;volatile
 11278  0029A0  0012               	return	
 11279  0029A2                     l23703:
 11280  0029A2  C0DD  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 11281  0029A6  C0DE  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 11282  0029AA  50DF               	movf	indf2,w,c
 11283  0029AC  0100               	movlb	0	; () banked
 11284  0029AE  6FDF               	movwf	??_sm_execute_ControlLearning& (0+255),b
 11285  0029B0  6BE0               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
 11286                           
 11287                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11288                           ; Switch size 1, requested type "simple"
 11289                           ; Number of cases is 1, Range of values is 0 to 0
 11290                           ; switch strategies available:
 11291                           ; Name         Instructions Cycles
 11292                           ; simple_byte            4     3 (average)
 11293                           ;	Chosen strategy is simple_byte
 11294  0029B2  51E0               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
 11295  0029B4  0A00               	xorlw	0	; case 0
 11296  0029B6  A4D8               	btfss	status,2,c
 11297  0029B8  0012               	return	
 11298                           
 11299                           ; BSR set to: 0
 11300                           ; Switch size 1, requested type "simple"
 11301                           ; Number of cases is 6, Range of values is 0 to 5
 11302                           ; switch strategies available:
 11303                           ; Name         Instructions Cycles
 11304                           ; simple_byte           19    10 (average)
 11305                           ;	Chosen strategy is simple_byte
 11306  0029BA  51DF               	movf	??_sm_execute_ControlLearning& (0+255),w,b
 11307  0029BC  0A00               	xorlw	0	; case 0
 11308  0029BE  B4D8               	btfsc	status,2,c
 11309  0029C0  D553               	goto	l23449
 11310  0029C2  0A01               	xorlw	1	; case 1
 11311  0029C4  B4D8               	btfsc	status,2,c
 11312  0029C6  D59E               	goto	l23473
 11313  0029C8  0A03               	xorlw	3	; case 2
 11314  0029CA  B4D8               	btfsc	status,2,c
 11315  0029CC  D5DF               	goto	l23507
 11316  0029CE  0A01               	xorlw	1	; case 3
 11317  0029D0  B4D8               	btfsc	status,2,c
 11318  0029D2  D642               	goto	l23541
 11319  0029D4  0A07               	xorlw	7	; case 4
 11320  0029D6  B4D8               	btfsc	status,2,c
 11321  0029D8  D695               	goto	l23573
 11322  0029DA  0A01               	xorlw	1	; case 5
 11323  0029DC  A4D8               	btfss	status,2,c
 11324  0029DE  0012               	return	
 11325  0029E0  D724               	goto	l23629
 11326  0029E2                     __end_of_sm_execute_ControlLearning:
 11327                           	callstack 0
 11328                           
 11329 ;; *************** function _generateErrorLearnig *****************
 11330 ;; Defined at:
 11331 ;;		line 424 in file "sm_ControlLearning_MC50.c"
 11332 ;; Parameters:    Size  Location     Type
 11333 ;;		None
 11334 ;; Auto vars:     Size  Location     Type
 11335 ;;		None
 11336 ;; Return value:  Size  Location     Type
 11337 ;;                  1    wreg      void 
 11338 ;; Registers used:
 11339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11340 ;; Tracked objects:
 11341 ;;		On entry : 3E/1
 11342 ;;		On exit  : 0/0
 11343 ;;		Unchanged: 0/0
 11344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11349 ;;Total ram usage:        0 bytes
 11350 ;; Hardware stack levels used: 1
 11351 ;; Hardware stack levels required when called: 6
 11352 ;; This function calls:
 11353 ;;		_sm_init
 11354 ;; This function is called by:
 11355 ;;		_sm_execute_ControlLearning
 11356 ;; This function uses a non-reentrant model
 11357 ;;
 11358                           
 11359                           	psect	text19
 11360  0089EC                     __ptext19:
 11361                           	callstack 0
 11362  0089EC                     _generateErrorLearnig:
 11363                           	callstack 22
 11364                           
 11365                           ;sm_ControlLearning_MC50.c: 428:     var_sys.LearningIsEnabled=NO;
 11366                           
 11367                           ;incstack = 0
 11368  0089EC  0E00               	movlw	0
 11369  0089EE  0101               	movlb	1	; () banked
 11370  0089F0  6F7B               	movwf	(_var_sys+38)& (0+255),b	;volatile
 11371                           
 11372                           ; BSR set to: 1
 11373                           ;sm_ControlLearning_MC50.c: 430:     sm_init(&menuConfiguration_stateMachine,st_MainMenu
      +                          ,HIST_NONE);
 11374  0089F2  0EBD               	movlw	low _menuConfiguration_stateMachine
 11375  0089F4  6E12               	movwf	sm_init@psm^0,c
 11376  0089F6  0E02               	movlw	high _menuConfiguration_stateMachine
 11377  0089F8  6E13               	movwf	(sm_init@psm+1)^0,c
 11378  0089FA  0E00               	movlw	0
 11379  0089FC  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11380  0089FE  0E00               	movlw	0
 11381  008A00  6E14               	movwf	sm_init@initial_state^0,c
 11382  008A02  0E00               	movlw	0
 11383  008A04  6E16               	movwf	sm_init@hist_mode^0,c
 11384  008A06  EC9D  F046         	call	_sm_init	;wreg free
 11385                           
 11386                           ;sm_ControlLearning_MC50.c: 431:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
 11387  008A0A  0EF1               	movlw	low _main_stateMachine
 11388  008A0C  6E12               	movwf	sm_init@psm^0,c
 11389  008A0E  0E01               	movlw	high _main_stateMachine
 11390  008A10  6E13               	movwf	(sm_init@psm+1)^0,c
 11391  008A12  0E00               	movlw	0
 11392  008A14  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11393  008A16  0E00               	movlw	0
 11394  008A18  6E14               	movwf	sm_init@initial_state^0,c
 11395  008A1A  0E00               	movlw	0
 11396  008A1C  6E16               	movwf	sm_init@hist_mode^0,c
 11397  008A1E  EC9D  F046         	call	_sm_init	;wreg free
 11398                           
 11399                           ;sm_ControlLearning_MC50.c: 432:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE
      +                          );
 11400  008A22  0EE6               	movlw	low _controlGate_stateMachine
 11401  008A24  6E12               	movwf	sm_init@psm^0,c
 11402  008A26  0E01               	movlw	high _controlGate_stateMachine
 11403  008A28  6E13               	movwf	(sm_init@psm+1)^0,c
 11404  008A2A  0E00               	movlw	0
 11405  008A2C  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11406  008A2E  0E00               	movlw	0
 11407  008A30  6E14               	movwf	sm_init@initial_state^0,c
 11408  008A32  0E00               	movlw	0
 11409  008A34  6E16               	movwf	sm_init@hist_mode^0,c
 11410  008A36  EC9D  F046         	call	_sm_init	;wreg free
 11411                           
 11412                           ;sm_ControlLearning_MC50.c: 433:     sm_init(&controlLearning_stateMachine,st_InitLearni
      +                          ng,HIST_NONE);
 11413  008A3A  0EB2               	movlw	low _controlLearning_stateMachine
 11414  008A3C  6E12               	movwf	sm_init@psm^0,c
 11415  008A3E  0E02               	movlw	high _controlLearning_stateMachine
 11416  008A40  6E13               	movwf	(sm_init@psm+1)^0,c
 11417  008A42  0E00               	movlw	0
 11418  008A44  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11419  008A46  0E00               	movlw	0
 11420  008A48  6E14               	movwf	sm_init@initial_state^0,c
 11421  008A4A  0E00               	movlw	0
 11422  008A4C  6E16               	movwf	sm_init@hist_mode^0,c
 11423  008A4E  EC9D  F046         	call	_sm_init	;wreg free
 11424  008A52  0012               	return		;funcret
 11425  008A54                     __end_of_generateErrorLearnig:
 11426                           	callstack 0
 11427                           
 11428 ;; *************** function _sm_init *****************
 11429 ;; Defined at:
 11430 ;;		line 12 in file "sm_common_MC50.c"
 11431 ;; Parameters:    Size  Location     Type
 11432 ;;  psm             2   17[COMRAM] PTR struct .
 11433 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11434 ;;  initial_stat    2   19[COMRAM] int 
 11435 ;;  hist_mode       1   21[COMRAM] enum E348
 11436 ;; Auto vars:     Size  Location     Type
 11437 ;;		None
 11438 ;; Return value:  Size  Location     Type
 11439 ;;                  1    wreg      void 
 11440 ;; Registers used:
 11441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11442 ;; Tracked objects:
 11443 ;;		On entry : 0/0
 11444 ;;		On exit  : 0/0
 11445 ;;		Unchanged: 0/0
 11446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11447 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11450 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11451 ;;Total ram usage:        5 bytes
 11452 ;; Hardware stack levels used: 1
 11453 ;; Hardware stack levels required when called: 5
 11454 ;; This function calls:
 11455 ;;		_sm_restart
 11456 ;; This function is called by:
 11457 ;;		_main
 11458 ;;		_generateErrorLearnig
 11459 ;; This function uses a non-reentrant model
 11460 ;;
 11461                           
 11462                           	psect	text20
 11463  008D3A                     __ptext20:
 11464                           	callstack 0
 11465  008D3A                     _sm_init:
 11466                           	callstack 25
 11467                           
 11468                           ;sm_common_MC50.c: 12: void sm_init(sm_t *psm, int initial_state, sm_history_t hist_mode
      +                          );sm_common_MC50.c: 13: {;sm_common_MC50.c: 14:  psm->initial_state = initial_state;
 11469                           
 11470                           ;incstack = 0
 11471  008D3A  EE20 F002          	lfsr	2,2
 11472  008D3E  5012               	movf	sm_init@psm^0,w,c
 11473  008D40  26D9               	addwf	fsr2l,f,c
 11474  008D42  5013               	movf	(sm_init@psm+1)^0,w,c
 11475  008D44  22DA               	addwfc	fsr2h,f,c
 11476  008D46  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11477  008D4A  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11478                           
 11479                           ;sm_common_MC50.c: 15:  psm->history = hist_mode;
 11480  008D4E  EE20 F006          	lfsr	2,6
 11481  008D52  5012               	movf	sm_init@psm^0,w,c
 11482  008D54  26D9               	addwf	fsr2l,f,c
 11483  008D56  5013               	movf	(sm_init@psm+1)^0,w,c
 11484  008D58  22DA               	addwfc	fsr2h,f,c
 11485  008D5A  C016  FFDF         	movff	sm_init@hist_mode,indf2
 11486                           
 11487                           ;sm_common_MC50.c: 16:  psm->current_state = initial_state;
 11488  008D5E  C012  FFD9         	movff	sm_init@psm,fsr2l
 11489  008D62  C013  FFDA         	movff	sm_init@psm+1,fsr2h
 11490  008D66  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11491  008D6A  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11492                           
 11493                           ;sm_common_MC50.c: 19:  psm->parent_machine = ((void*)0);
 11494  008D6E  EE20 F007          	lfsr	2,7
 11495  008D72  5012               	movf	sm_init@psm^0,w,c
 11496  008D74  26D9               	addwf	fsr2l,f,c
 11497  008D76  5013               	movf	(sm_init@psm+1)^0,w,c
 11498  008D78  22DA               	addwfc	fsr2h,f,c
 11499  008D7A  0E00               	movlw	0
 11500  008D7C  6EDE               	movwf	postinc2,c
 11501  008D7E  0E00               	movlw	0
 11502  008D80  6EDD               	movwf	postdec2,c
 11503                           
 11504                           ;sm_common_MC50.c: 20:  sm_restart(psm);
 11505  008D82  C012  F010         	movff	sm_init@psm,sm_restart@psm
 11506  008D86  C013  F011         	movff	sm_init@psm+1,sm_restart@psm+1
 11507  008D8A  ECA2  F048         	call	_sm_restart	;wreg free
 11508  008D8E  0012               	return		;funcret
 11509  008D90                     __end_of_sm_init:
 11510                           	callstack 0
 11511                           
 11512 ;; *************** function _sm_restart *****************
 11513 ;; Defined at:
 11514 ;;		line 23 in file "sm_common_MC50.c"
 11515 ;; Parameters:    Size  Location     Type
 11516 ;;  psm             2   15[COMRAM] PTR struct .
 11517 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11518 ;; Auto vars:     Size  Location     Type
 11519 ;;		None
 11520 ;; Return value:  Size  Location     Type
 11521 ;;                  1    wreg      void 
 11522 ;; Registers used:
 11523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11524 ;; Tracked objects:
 11525 ;;		On entry : 0/0
 11526 ;;		On exit  : 0/0
 11527 ;;		Unchanged: 0/0
 11528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11529 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11532 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11533 ;;Total ram usage:        2 bytes
 11534 ;; Hardware stack levels used: 1
 11535 ;; Hardware stack levels required when called: 4
 11536 ;; This function calls:
 11537 ;;		Nothing
 11538 ;; This function is called by:
 11539 ;;		_sm_init
 11540 ;; This function uses a non-reentrant model
 11541 ;;
 11542                           
 11543                           	psect	text21
 11544  009144                     __ptext21:
 11545                           	callstack 0
 11546  009144                     _sm_restart:
 11547                           	callstack 25
 11548                           
 11549                           ;sm_common_MC50.c: 24:  if(psm->history == HIST_NONE){
 11550                           
 11551                           ;incstack = 0
 11552  009144  EE20 F006          	lfsr	2,6
 11553  009148  5010               	movf	sm_restart@psm^0,w,c
 11554  00914A  26D9               	addwf	fsr2l,f,c
 11555  00914C  5011               	movf	(sm_restart@psm+1)^0,w,c
 11556  00914E  22DA               	addwfc	fsr2h,f,c
 11557  009150  50DF               	movf	indf2,w,c
 11558  009152  A4D8               	btfss	status,2,c
 11559  009154  D00E               	goto	l20407
 11560                           
 11561                           ;sm_common_MC50.c: 25:   psm->current_state = psm->initial_state;
 11562  009156  EE20 F002          	lfsr	2,2
 11563  00915A  5010               	movf	sm_restart@psm^0,w,c
 11564  00915C  26D9               	addwf	fsr2l,f,c
 11565  00915E  5011               	movf	(sm_restart@psm+1)^0,w,c
 11566  009160  22DA               	addwfc	fsr2h,f,c
 11567  009162  C010  FFE1         	movff	sm_restart@psm,fsr1l
 11568  009166  C011  FFE2         	movff	sm_restart@psm+1,fsr1h
 11569  00916A  CFDE FFE6          	movff	postinc2,postinc1
 11570  00916E  CFDD FFE5          	movff	postdec2,postdec1
 11571  009172                     l20407:
 11572                           
 11573                           ;sm_common_MC50.c: 27:  psm->last_event = 0;
 11574  009172  EE20 F004          	lfsr	2,4
 11575  009176  5010               	movf	sm_restart@psm^0,w,c
 11576  009178  26D9               	addwf	fsr2l,f,c
 11577  00917A  5011               	movf	(sm_restart@psm+1)^0,w,c
 11578  00917C  22DA               	addwfc	fsr2h,f,c
 11579  00917E  0E00               	movlw	0
 11580  009180  6EDE               	movwf	postinc2,c
 11581  009182  0E00               	movlw	0
 11582  009184  6EDD               	movwf	postdec2,c
 11583  009186  0012               	return		;funcret
 11584  009188                     __end_of_sm_restart:
 11585                           	callstack 0
 11586                           
 11587 ;; *************** function _clearLearningValue *****************
 11588 ;; Defined at:
 11589 ;;		line 436 in file "sm_ControlLearning_MC50.c"
 11590 ;; Parameters:    Size  Location     Type
 11591 ;;		None
 11592 ;; Auto vars:     Size  Location     Type
 11593 ;;		None
 11594 ;; Return value:  Size  Location     Type
 11595 ;;                  1    wreg      void 
 11596 ;; Registers used:
 11597 ;;		wreg, status,2
 11598 ;; Tracked objects:
 11599 ;;		On entry : 3F/1
 11600 ;;		On exit  : 3F/1
 11601 ;;		Unchanged: 0/0
 11602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11607 ;;Total ram usage:        0 bytes
 11608 ;; Hardware stack levels used: 1
 11609 ;; Hardware stack levels required when called: 4
 11610 ;; This function calls:
 11611 ;;		Nothing
 11612 ;; This function is called by:
 11613 ;;		_sm_execute_ControlLearning
 11614 ;; This function uses a non-reentrant model
 11615 ;;
 11616                           
 11617                           	psect	text22
 11618  008428                     __ptext22:
 11619                           	callstack 0
 11620  008428                     _clearLearningValue:
 11621                           	callstack 24
 11622                           
 11623                           ; BSR set to: 1
 11624                           ;sm_ControlLearning_MC50.c: 438:     learn_st.timeOpen=0;
 11625                           
 11626                           ;incstack = 0
 11627  008428  0E00               	movlw	0
 11628  00842A  6F1D               	movwf	(_learn_st+4)& (0+255),b	;volatile
 11629  00842C  0E00               	movlw	0
 11630  00842E  6F1E               	movwf	(_learn_st+5)& (0+255),b	;volatile
 11631  008430  0E00               	movlw	0
 11632  008432  6F1F               	movwf	(_learn_st+6)& (0+255),b	;volatile
 11633  008434  0E00               	movlw	0
 11634  008436  6F20               	movwf	(_learn_st+7)& (0+255),b	;volatile
 11635                           
 11636                           ;sm_ControlLearning_MC50.c: 439:     learn_st.timeClose=0;
 11637  008438  0E00               	movlw	0
 11638  00843A  6F19               	movwf	_learn_st& (0+255),b	;volatile
 11639  00843C  0E00               	movlw	0
 11640  00843E  6F1A               	movwf	(_learn_st+1)& (0+255),b	;volatile
 11641  008440  0E00               	movlw	0
 11642  008442  6F1B               	movwf	(_learn_st+2)& (0+255),b	;volatile
 11643  008444  0E00               	movlw	0
 11644  008446  6F1C               	movwf	(_learn_st+3)& (0+255),b	;volatile
 11645                           
 11646                           ;sm_ControlLearning_MC50.c: 440:     learn_st.timeDecelerationOpen=0;
 11647  008448  0E00               	movlw	0
 11648  00844A  6F22               	movwf	(_learn_st+9)& (0+255),b	;volatile
 11649                           
 11650                           ;sm_ControlLearning_MC50.c: 441:     learn_st.timeDecelerationClose=0;
 11651  00844C  0E00               	movlw	0
 11652  00844E  6F21               	movwf	(_learn_st+8)& (0+255),b	;volatile
 11653                           
 11654                           ;sm_ControlLearning_MC50.c: 442:     learn_st.openCurrent=0;
 11655  008450  0E00               	movlw	0
 11656  008452  6F24               	movwf	(_learn_st+11)& (0+255),b	;volatile
 11657  008454  0E00               	movlw	0
 11658  008456  6F23               	movwf	(_learn_st+10)& (0+255),b	;volatile
 11659                           
 11660                           ;sm_ControlLearning_MC50.c: 443:     learn_st.closeCurrent=0;
 11661  008458  0E00               	movlw	0
 11662  00845A  6F26               	movwf	(_learn_st+13)& (0+255),b	;volatile
 11663  00845C  0E00               	movlw	0
 11664  00845E  6F25               	movwf	(_learn_st+12)& (0+255),b	;volatile
 11665                           
 11666                           ;sm_ControlLearning_MC50.c: 444:     learn_st.openHistCurrent=0;
 11667  008460  0E00               	movlw	0
 11668  008462  6F28               	movwf	(_learn_st+15)& (0+255),b	;volatile
 11669  008464  0E00               	movlw	0
 11670  008466  6F27               	movwf	(_learn_st+14)& (0+255),b	;volatile
 11671                           
 11672                           ;sm_ControlLearning_MC50.c: 445:     learn_st.closeHistCurrent=0;
 11673  008468  0E00               	movlw	0
 11674  00846A  6F2A               	movwf	(_learn_st+17)& (0+255),b	;volatile
 11675  00846C  0E00               	movlw	0
 11676  00846E  6F29               	movwf	(_learn_st+16)& (0+255),b	;volatile
 11677                           
 11678                           ;sm_ControlLearning_MC50.c: 446:     var_sys_NVM.learningCurrentNormalClose=0;
 11679  008470  0E00               	movlw	0
 11680  008472  6FD7               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 11681  008474  0E00               	movlw	0
 11682  008476  6FD6               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 11683                           
 11684                           ;sm_ControlLearning_MC50.c: 447:     var_sys_NVM.learningCurrentNormalOpen=0;
 11685  008478  0E00               	movlw	0
 11686  00847A  6FD9               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 11687  00847C  0E00               	movlw	0
 11688  00847E  6FD8               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 11689                           
 11690                           ;sm_ControlLearning_MC50.c: 448:     var_sys_NVM.learningCurrentDecelarationClose=0;
 11691  008480  0E00               	movlw	0
 11692  008482  6FCE               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 11693  008484  0E00               	movlw	0
 11694  008486  6FCF               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 11695  008488  0E00               	movlw	0
 11696  00848A  6FD0               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 11697  00848C  0E00               	movlw	0
 11698  00848E  6FD1               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 11699                           
 11700                           ;sm_ControlLearning_MC50.c: 449:     var_sys_NVM.learningCurrentDecelarationOpen=0;
 11701  008490  0E00               	movlw	0
 11702  008492  6FD2               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 11703  008494  0E00               	movlw	0
 11704  008496  6FD3               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 11705  008498  0E00               	movlw	0
 11706  00849A  6FD4               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 11707  00849C  0E00               	movlw	0
 11708  00849E  6FD5               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 11709                           
 11710                           ; BSR set to: 1
 11711  0084A0  0012               	return		;funcret
 11712  0084A2                     __end_of_clearLearningValue:
 11713                           	callstack 0
 11714                           
 11715 ;; *************** function _calculateMean *****************
 11716 ;; Defined at:
 11717 ;;		line 411 in file "sm_ControlLearning_MC50.c"
 11718 ;; Parameters:    Size  Location     Type
 11719 ;;  meanValue       4   15[COMRAM] unsigned long 
 11720 ;;  newValue        4   19[COMRAM] unsigned long 
 11721 ;; Auto vars:     Size  Location     Type
 11722 ;;		None
 11723 ;; Return value:  Size  Location     Type
 11724 ;;                  4   15[COMRAM] unsigned long 
 11725 ;; Registers used:
 11726 ;;		wreg, status,2, status,0
 11727 ;; Tracked objects:
 11728 ;;		On entry : 3F/0
 11729 ;;		On exit  : 3F/0
 11730 ;;		Unchanged: 3F/0
 11731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11732 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11734 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11735 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11736 ;;Total ram usage:       12 bytes
 11737 ;; Hardware stack levels used: 1
 11738 ;; Hardware stack levels required when called: 4
 11739 ;; This function calls:
 11740 ;;		Nothing
 11741 ;; This function is called by:
 11742 ;;		_sm_execute_ControlLearning
 11743 ;; This function uses a non-reentrant model
 11744 ;;
 11745                           
 11746                           	psect	text23
 11747  008A54                     __ptext23:
 11748                           	callstack 0
 11749  008A54                     _calculateMean:
 11750                           	callstack 24
 11751                           
 11752                           ; BSR set to: 0
 11753                           ;sm_ControlLearning_MC50.c: 411: unsigned long calculateMean(unsigned long meanValue,uns
      +                          igned long newValue);sm_ControlLearning_MC50.c: 412: {;sm_ControlLearning_MC50.c: 413:  
      +                             if(meanValue==0)
 11754                           
 11755                           ; BSR set to: 1
 11756                           ;incstack = 0
 11757  008A54  5010               	movf	calculateMean@meanValue^0,w,c
 11758  008A56  1011               	iorwf	(calculateMean@meanValue+1)^0,w,c
 11759  008A58  1012               	iorwf	(calculateMean@meanValue+2)^0,w,c
 11760  008A5A  1013               	iorwf	(calculateMean@meanValue+3)^0,w,c
 11761  008A5C  A4D8               	btfss	status,2,c
 11762  008A5E  D009               	goto	l21597
 11763                           
 11764                           ; BSR set to: 0
 11765                           ;sm_ControlLearning_MC50.c: 414:     {;sm_ControlLearning_MC50.c: 415:         meanValue
      +                          =newValue;
 11766  008A60  C014  F010         	movff	calculateMean@newValue,calculateMean@meanValue
 11767  008A64  C015  F011         	movff	calculateMean@newValue+1,calculateMean@meanValue+1
 11768  008A68  C016  F012         	movff	calculateMean@newValue+2,calculateMean@meanValue+2
 11769  008A6C  C017  F013         	movff	calculateMean@newValue+3,calculateMean@meanValue+3
 11770                           
 11771                           ;sm_ControlLearning_MC50.c: 416:     }
 11772  008A70  D019               	goto	l21599
 11773  008A72                     l21597:
 11774                           
 11775                           ; BSR set to: 0
 11776                           ;sm_ControlLearning_MC50.c: 418:     {;sm_ControlLearning_MC50.c: 419:         meanValue
      +                          =(meanValue+newValue)/2;
 11777  008A72  5014               	movf	calculateMean@newValue^0,w,c
 11778  008A74  2410               	addwf	calculateMean@meanValue^0,w,c
 11779  008A76  6E18               	movwf	??_calculateMean^0,c
 11780  008A78  5015               	movf	(calculateMean@newValue+1)^0,w,c
 11781  008A7A  2011               	addwfc	(calculateMean@meanValue+1)^0,w,c
 11782  008A7C  6E19               	movwf	(??_calculateMean+1)^0,c
 11783  008A7E  5016               	movf	(calculateMean@newValue+2)^0,w,c
 11784  008A80  2012               	addwfc	(calculateMean@meanValue+2)^0,w,c
 11785  008A82  6E1A               	movwf	(??_calculateMean+2)^0,c
 11786  008A84  5017               	movf	(calculateMean@newValue+3)^0,w,c
 11787  008A86  2013               	addwfc	(calculateMean@meanValue+3)^0,w,c
 11788  008A88  6E1B               	movwf	(??_calculateMean+3)^0,c
 11789  008A8A  90D8               	bcf	status,0,c
 11790  008A8C  321B               	rrcf	(??_calculateMean+3)^0,f,c
 11791  008A8E  321A               	rrcf	(??_calculateMean+2)^0,f,c
 11792  008A90  3219               	rrcf	(??_calculateMean+1)^0,f,c
 11793  008A92  3218               	rrcf	??_calculateMean^0,f,c
 11794  008A94  C018  F010         	movff	??_calculateMean,calculateMean@meanValue
 11795  008A98  C019  F011         	movff	??_calculateMean+1,calculateMean@meanValue+1
 11796  008A9C  C01A  F012         	movff	??_calculateMean+2,calculateMean@meanValue+2
 11797  008AA0  C01B  F013         	movff	??_calculateMean+3,calculateMean@meanValue+3
 11798  008AA4                     l21599:
 11799                           
 11800                           ; BSR set to: 0
 11801                           ;sm_ControlLearning_MC50.c: 421:     return meanValue;
 11802  008AA4  C010  F010         	movff	calculateMean@meanValue,?_calculateMean
 11803  008AA8  C011  F011         	movff	calculateMean@meanValue+1,?_calculateMean+1
 11804  008AAC  C012  F012         	movff	calculateMean@meanValue+2,?_calculateMean+2
 11805  008AB0  C013  F013         	movff	calculateMean@meanValue+3,?_calculateMean+3
 11806                           
 11807                           ; BSR set to: 0
 11808  008AB4  0012               	return		;funcret
 11809  008AB6                     __end_of_calculateMean:
 11810                           	callstack 0
 11811                           
 11812 ;; *************** function _actionZone_Opening *****************
 11813 ;; Defined at:
 11814 ;;		line 374 in file "sm_ControlGate_MC50.c"
 11815 ;; Parameters:    Size  Location     Type
 11816 ;;		None
 11817 ;; Auto vars:     Size  Location     Type
 11818 ;;  typeOpenOrde    1   14[BANK0 ] enum E10372
 11819 ;;  securityOpen    1   13[BANK0 ] enum E10397
 11820 ;;  securityClos    1   12[BANK0 ] enum E10397
 11821 ;; Return value:  Size  Location     Type
 11822 ;;                  1    wreg      void 
 11823 ;; Registers used:
 11824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11825 ;; Tracked objects:
 11826 ;;		On entry : 3F/0
 11827 ;;		On exit  : 0/0
 11828 ;;		Unchanged: 0/0
 11829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11831 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11833 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11834 ;;Total ram usage:        3 bytes
 11835 ;; Hardware stack levels used: 1
 11836 ;; Hardware stack levels required when called: 8
 11837 ;; This function calls:
 11838 ;;		_CloseOrder
 11839 ;;		_GetOpenOrder
 11840 ;;		_GetSecurityStateInClosing
 11841 ;;		_GetSecurityStateInOpening
 11842 ;;		_InitFullAutoTime
 11843 ;;		_InitWalkAutoTime
 11844 ;;		_SetSegmentValueIntermitent
 11845 ;;		_StopOrder
 11846 ;;		_VerifyFollowMe
 11847 ;;		_controlVelocity
 11848 ;;		_setPositionInvertionInClosing
 11849 ;;		_setPositionInvertionInOpening
 11850 ;;		_sm_send_event
 11851 ;; This function is called by:
 11852 ;;		_sm_execute_ControlGate
 11853 ;; This function uses a non-reentrant model
 11854 ;;
 11855                           
 11856                           	psect	text24
 11857  0048C0                     __ptext24:
 11858                           	callstack 0
 11859  0048C0                     _actionZone_Opening:
 11860                           	callstack 21
 11861                           
 11862                           ; BSR set to: 0
 11863                           ;sm_ControlGate_MC50.c: 375:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 11864                           
 11865                           ; BSR set to: 0
 11866                           ;incstack = 0
 11867  0048C0  ECB0  F03D         	call	_GetSecurityStateInClosing	;wreg free
 11868  0048C4  0100               	movlb	0	; () banked
 11869  0048C6  6FE4               	movwf	actionZone_Opening@securityClosing& (0+255),b
 11870                           
 11871                           ;sm_ControlGate_MC50.c: 376:     StateEnum securityOpening = GetSecurityStateInOpening()
      +                          ;
 11872  0048C8  ECFD  F03D         	call	_GetSecurityStateInOpening	;wreg free
 11873  0048CC  0100               	movlb	0	; () banked
 11874  0048CE  6FE5               	movwf	actionZone_Opening@securityOpening& (0+255),b
 11875                           
 11876                           ; BSR set to: 0
 11877                           ;sm_ControlGate_MC50.c: 377:     TypeCMD typeOpenOrder = GetOpenOrder();
 11878  0048D0  EC00  F02E         	call	_GetOpenOrder	;wreg free
 11879  0048D4  0100               	movlb	0	; () banked
 11880  0048D6  6FE6               	movwf	actionZone_Opening@typeOpenOrder& (0+255),b
 11881                           
 11882                           ; BSR set to: 0
 11883                           ;sm_ControlGate_MC50.c: 380:     controlVelocity();
 11884  0048D8  EC15  F02A         	call	_controlVelocity	;wreg free
 11885                           
 11886                           ; BSR set to: 1
 11887                           ;sm_ControlGate_MC50.c: 381:     InitFullAutoTime();
 11888  0048DC  ECB6  F04C         	call	_InitFullAutoTime	;wreg free
 11889                           
 11890                           ; BSR set to: 1
 11891                           ;sm_ControlGate_MC50.c: 383:     var_sys.passoAPassoAutoClose = NO;
 11892  0048E0  0E00               	movlw	0
 11893  0048E2  6FA5               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11894                           
 11895                           ; BSR set to: 1
 11896                           ;sm_ControlGate_MC50.c: 385:     VerifyFollowMe(securityClosing);
 11897  0048E4  0100               	movlb	0	; () banked
 11898  0048E6  51E4               	movf	actionZone_Opening@securityClosing& (0+255),w,b
 11899  0048E8  EC1C  F04C         	call	_VerifyFollowMe
 11900                           
 11901                           ; BSR set to: 1
 11902                           ;sm_ControlGate_MC50.c: 386:     if (var_sys.NumberOffErrors > 3) {
 11903  0048EC  0E03               	movlw	3
 11904  0048EE  6598               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 11905  0048F0  D00D               	goto	l22905
 11906                           
 11907                           ; BSR set to: 1
 11908                           ;sm_ControlGate_MC50.c: 388:         var_sys.StateMotor = Stopped;
 11909  0048F2  0E00               	movlw	0
 11910  0048F4  6F55               	movwf	_var_sys& (0+255),b	;volatile
 11911  0048F6                     l22903:
 11912                           
 11913                           ; BSR set to: 1
 11914                           ;sm_ControlGate_MC50.c: 389:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 11915  0048F6  0EE6               	movlw	low _controlGate_stateMachine
 11916  0048F8  6E12               	movwf	sm_send_event@psm^0,c
 11917  0048FA  0E01               	movlw	high _controlGate_stateMachine
 11918  0048FC  6E13               	movwf	(sm_send_event@psm+1)^0,c
 11919  0048FE  0E00               	movlw	0
 11920  004900  6E15               	movwf	(sm_send_event@event+1)^0,c
 11921  004902  0E10               	movlw	16
 11922  004904  6E14               	movwf	sm_send_event@event^0,c
 11923  004906  ECE8  F045         	call	_sm_send_event	;wreg free
 11924                           
 11925                           ;sm_ControlGate_MC50.c: 390:     } else if (var_sys.StateMotor == InOpenWalk && ts_syste
      +                          m.timeOpenWalk <= 0)
 11926  00490A  0012               	return	
 11927  00490C                     l22905:
 11928                           
 11929                           ; BSR set to: 1
 11930  00490C  0E02               	movlw	2
 11931  00490E  1955               	xorwf	_var_sys& (0+255),w,b	;volatile
 11932  004910  A4D8               	btfss	status,2,c
 11933  004912  D014               	goto	l22919
 11934                           
 11935                           ; BSR set to: 1
 11936  004914  0100               	movlb	0	; () banked
 11937  004916  BFA0               	btfsc	(_ts_system+17)& (0+255),7,b	;volatile
 11938  004918  D005               	goto	u27140
 11939  00491A  51A0               	movf	(_ts_system+17)& (0+255),w,b	;volatile
 11940  00491C  E10F               	bnz	l22919
 11941  00491E  059F               	decf	(_ts_system+16)& (0+255),w,b	;volatile
 11942  004920  B0D8               	btfsc	status,0,c
 11943  004922  D00C               	goto	l22919
 11944  004924                     u27140:
 11945                           
 11946                           ; BSR set to: 0
 11947                           ;sm_ControlGate_MC50.c: 391:     {;sm_ControlGate_MC50.c: 396:         setPositionInvert
      +                          ionInOpening();
 11948  004924  EC10  F03B         	call	_setPositionInvertionInOpening	;wreg free
 11949                           
 11950                           ; BSR set to: 1
 11951                           ;sm_ControlGate_MC50.c: 397:         StopOrder();
 11952  004928  EC71  F04C         	call	_StopOrder	;wreg free
 11953                           
 11954                           ;sm_ControlGate_MC50.c: 398:         InitWalkAutoTime();
 11955  00492C  EC45  F04D         	call	_InitWalkAutoTime	;wreg free
 11956                           
 11957                           ; BSR set to: 1
 11958                           ;sm_ControlGate_MC50.c: 399:         var_sys.passoAPassoAutoClose = YES;
 11959  004930  0E01               	movlw	1
 11960  004932  6FA5               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11961                           
 11962                           ; BSR set to: 1
 11963                           ;sm_ControlGate_MC50.c: 400:         Abertura_pedonal = 1;
 11964  004934  0E01               	movlw	1
 11965  004936  0100               	movlb	0	; () banked
 11966  004938  6F72               	movwf	_Abertura_pedonal& (0+255),b
 11967                           
 11968                           ;sm_ControlGate_MC50.c: 402:     } else if ((var_sys.FimCurso_OpenIsEnabled == YES)||(va
      +                          r_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost
      +                          ==NO) && (var_sys.Statedoorcontrol == st_Opening))
 11969  00493A  0012               	return	
 11970  00493C                     l22919:
 11971  00493C  0101               	movlb	1	; () banked
 11972  00493E  0559               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 11973  004940  B4D8               	btfsc	status,2,c
 11974  004942  D010               	goto	u27190
 11975                           
 11976                           ; BSR set to: 1
 11977  004944  516D               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 11978  004946  116E               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 11979  004948  116F               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 11980  00494A  1170               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 11981  00494C  A4D8               	btfss	status,2,c
 11982  00494E  D030               	goto	l22939
 11983                           
 11984                           ; BSR set to: 1
 11985  004950  517B               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 11986  004952  A4D8               	btfss	status,2,c
 11987  004954  D02D               	goto	l22939
 11988                           
 11989                           ; BSR set to: 1
 11990  004956  519D               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 11991  004958  A4D8               	btfss	status,2,c
 11992  00495A  D02A               	goto	l22939
 11993                           
 11994                           ; BSR set to: 1
 11995  00495C  0E02               	movlw	2
 11996  00495E  1971               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 11997  004960  A4D8               	btfss	status,2,c
 11998  004962  D026               	goto	l22939
 11999  004964                     u27190:
 12000                           
 12001                           ; BSR set to: 1
 12002                           ;sm_ControlGate_MC50.c: 403:     {;sm_ControlGate_MC50.c: 408:         var_sys.Statedoor
      +                          control = st_Opened;
 12003  004964  0E04               	movlw	4
 12004  004966  6F71               	movwf	(_var_sys+28)& (0+255),b	;volatile
 12005                           
 12006                           ; BSR set to: 1
 12007                           ;sm_ControlGate_MC50.c: 409:         var_sys.PositionActual = var_sys_NVM.learningTimeTo
      +                          Close;
 12008  004968  C1DE  F173         	movff	_var_sys_NVM+56,_var_sys+30	;volatile
 12009  00496C  C1DF  F174         	movff	_var_sys_NVM+57,_var_sys+31	;volatile
 12010  004970  C1E0  F175         	movff	_var_sys_NVM+58,_var_sys+32	;volatile
 12011  004974  C1E1  F176         	movff	_var_sys_NVM+59,_var_sys+33	;volatile
 12012                           
 12013                           ;sm_ControlGate_MC50.c: 410:         var_sys.AutoInversionActiveStop = NO;
 12014  004978  0E00               	movlw	0
 12015  00497A  6F67               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12016                           
 12017                           ;sm_ControlGate_MC50.c: 411:         var_sys.PositionIsLost = NO;
 12018  00497C  0E00               	movlw	0
 12019  00497E  6F9D               	movwf	(_var_sys+72)& (0+255),b	;volatile
 12020                           
 12021                           ;sm_ControlGate_MC50.c: 412:         var_sys.DigitSinalizedTemp = 1;
 12022  004980  0E01               	movlw	1
 12023  004982  6F77               	movwf	(_var_sys+34)& (0+255),b	;volatile
 12024                           
 12025                           ;sm_ControlGate_MC50.c: 413:         var_sys.NumberOffErrors = 0;
 12026  004984  0E00               	movlw	0
 12027  004986  6F98               	movwf	(_var_sys+67)& (0+255),b	;volatile
 12028                           
 12029                           ;sm_ControlGate_MC50.c: 414:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 12030  004988  0E00               	movlw	0
 12031  00498A  0100               	movlb	0	; () banked
 12032  00498C  6F9C               	movwf	(_ts_system+13)& (0+255),b	;volatile
 12033  00498E  0E28               	movlw	40
 12034  004990  6F9B               	movwf	(_ts_system+12)& (0+255),b	;volatile
 12035                           
 12036                           ; BSR set to: 0
 12037                           ;sm_ControlGate_MC50.c: 415:         SetSegmentValueIntermitent(dF, d0, ( 200/50));
 12038  004992  0E00               	movlw	0
 12039  004994  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 12040  004996  0E00               	movlw	0
 12041  004998  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 12042  00499A  0E04               	movlw	4
 12043  00499C  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 12044  00499E  0E0F               	movlw	15
 12045  0049A0  EC61  F04A         	call	_SetSegmentValueIntermitent
 12046                           
 12047                           ;sm_ControlGate_MC50.c: 416:         StopOrder();
 12048  0049A4  EC71  F04C         	call	_StopOrder	;wreg free
 12049                           
 12050                           ;sm_ControlGate_MC50.c: 417:         var_sys.passoAPassoAutoClose = YES;
 12051  0049A8  0E01               	movlw	1
 12052  0049AA  0101               	movlb	1	; () banked
 12053  0049AC  6FA5               	movwf	(_var_sys+80)& (0+255),b	;volatile
 12054                           
 12055                           ;sm_ControlGate_MC50.c: 419:     }
 12056  0049AE  0012               	return	
 12057  0049B0                     l22939:
 12058                           
 12059                           ; BSR set to: 1
 12060  0049B0  0100               	movlb	0	; () banked
 12061  0049B2  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 12062  0049B4  B4D8               	btfsc	status,2,c
 12063  0049B6  D013               	goto	u27230
 12064                           
 12065                           ; BSR set to: 0
 12066  0049B8  BFBA               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 12067  0049BA  D028               	goto	l22959
 12068  0049BC  51BA               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 12069  0049BE  E103               	bnz	u27210
 12070  0049C0  05B9               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 12071  0049C2  A0D8               	btfss	status,0,c
 12072  0049C4  D023               	goto	l22959
 12073  0049C6                     u27210:
 12074                           
 12075                           ; BSR set to: 0
 12076  0049C6  0101               	movlb	1	; () banked
 12077  0049C8  0596               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 12078  0049CA  A4D8               	btfss	status,2,c
 12079  0049CC  D01F               	goto	l22959
 12080                           
 12081                           ; BSR set to: 1
 12082  0049CE  0100               	movlb	0	; () banked
 12083  0049D0  BFC0               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 12084  0049D2  D005               	goto	u27230
 12085  0049D4  51C0               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 12086  0049D6  E11A               	bnz	l22959
 12087  0049D8  05BF               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 12088  0049DA  B0D8               	btfsc	status,0,c
 12089  0049DC  D017               	goto	l22959
 12090  0049DE                     u27230:
 12091                           
 12092                           ; BSR set to: 0
 12093  0049DE  0101               	movlb	1	; () banked
 12094  0049E0  517C               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 12095  0049E2  A4D8               	btfss	status,2,c
 12096  0049E4  D013               	goto	l22959
 12097                           
 12098                           ; BSR set to: 1
 12099                           ;sm_ControlGate_MC50.c: 422:         if (securityOpening != YES){
 12100  0049E6  0100               	movlb	0	; () banked
 12101  0049E8  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 12102  0049EA  B4D8               	btfsc	status,2,c
 12103  0049EC  D002               	goto	l22953
 12104                           
 12105                           ; BSR set to: 0
 12106                           ;sm_ControlGate_MC50.c: 423:              var_sys.NumberOffErrors++;
 12107  0049EE  0101               	movlb	1	; () banked
 12108  0049F0  2B98               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 12109  0049F2                     l22953:
 12110                           
 12111                           ;sm_ControlGate_MC50.c: 426:         var_sys.AutoInversionActive = YES;
 12112  0049F2  0E01               	movlw	1
 12113  0049F4  0101               	movlb	1	; () banked
 12114  0049F6  6F7C               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12115                           
 12116                           ; BSR set to: 1
 12117                           ;sm_ControlGate_MC50.c: 427:         ts_system.TimeWaitToNextState = ( 500/50);
 12118  0049F8  0E00               	movlw	0
 12119  0049FA  0100               	movlb	0	; () banked
 12120  0049FC  6FB4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 12121  0049FE  0E0A               	movlw	10
 12122  004A00  6FB3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 12123                           
 12124                           ; BSR set to: 0
 12125                           ;sm_ControlGate_MC50.c: 428:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 12126  004A02  0E00               	movlw	0
 12127  004A04  6FD0               	movwf	(_ts_system+65)& (0+255),b	;volatile
 12128  004A06  0E1E               	movlw	30
 12129  004A08  6FCF               	movwf	(_ts_system+64)& (0+255),b	;volatile
 12130                           
 12131                           ;sm_ControlGate_MC50.c: 430:     }
 12132  004A0A  0012               	return	
 12133  004A0C                     l22959:
 12134  004A0C  0100               	movlb	0	; () banked
 12135  004A0E  BFBA               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 12136  004A10  D032               	goto	l22989
 12137  004A12  51BA               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 12138  004A14  E103               	bnz	u27260
 12139  004A16  05B9               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 12140  004A18  A0D8               	btfss	status,0,c
 12141  004A1A  D02D               	goto	l22989
 12142  004A1C                     u27260:
 12143                           
 12144                           ; BSR set to: 0
 12145  004A1C  0101               	movlb	1	; () banked
 12146  004A1E  057C               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 12147  004A20  A4D8               	btfss	status,2,c
 12148  004A22  D029               	goto	l22989
 12149                           
 12150                           ; BSR set to: 1
 12151                           ;sm_ControlGate_MC50.c: 432:         if (var_sys.InvertionCurrentClosing == YES) {
 12152  004A24  0599               	decf	(_var_sys+68)& (0+255),w,b	;volatile
 12153  004A26  A4D8               	btfss	status,2,c
 12154  004A28  D005               	goto	l22971
 12155                           
 12156                           ; BSR set to: 1
 12157                           ;sm_ControlGate_MC50.c: 434:             var_sys.StateMotor = Stopped;
 12158  004A2A  0E00               	movlw	0
 12159  004A2C  6F55               	movwf	_var_sys& (0+255),b	;volatile
 12160                           
 12161                           ; BSR set to: 1
 12162                           ;sm_ControlGate_MC50.c: 435:             setPositionInvertionInClosing();
 12163  004A2E  EC42  F034         	call	_setPositionInvertionInClosing	;wreg free
 12164  004A32  D761               	goto	l22903
 12165  004A34                     l22971:
 12166                           
 12167                           ; BSR set to: 1
 12168  004A34  0100               	movlb	0	; () banked
 12169  004A36  BFB4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 12170  004A38  D005               	goto	u27290
 12171  004A3A  51B4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 12172  004A3C  E118               	bnz	l22987
 12173  004A3E  05B3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 12174  004A40  B0D8               	btfsc	status,0,c
 12175  004A42  D015               	goto	l22987
 12176  004A44                     u27290:
 12177                           
 12178                           ; BSR set to: 0
 12179                           ;sm_ControlGate_MC50.c: 438:             CloseOrder();
 12180  004A44  ECAA  F04B         	call	_CloseOrder	;wreg free
 12181                           
 12182                           ; BSR set to: 1
 12183                           ;sm_ControlGate_MC50.c: 440:             setPositionInvertionInOpening();
 12184  004A48  EC10  F03B         	call	_setPositionInvertionInOpening	;wreg free
 12185                           
 12186                           ; BSR set to: 1
 12187                           ;sm_ControlGate_MC50.c: 441:             var_sys.AutoInversionActive = NO;
 12188  004A4C  0E00               	movlw	0
 12189  004A4E  6F7C               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12190                           
 12191                           ; BSR set to: 1
 12192                           ;sm_ControlGate_MC50.c: 442:             var_sys.InvertionCurrentOpening = YES;
 12193  004A50  0E01               	movlw	1
 12194  004A52  6F9A               	movwf	(_var_sys+69)& (0+255),b	;volatile
 12195                           
 12196                           ; BSR set to: 1
 12197                           ;sm_ControlGate_MC50.c: 443:             ts_system.TimeInversionStart = (1000/50);
 12198  004A54  0E00               	movlw	0
 12199  004A56  0100               	movlb	0	; () banked
 12200  004A58  6FC0               	movwf	(_ts_system+49)& (0+255),b	;volatile
 12201  004A5A  0E14               	movlw	20
 12202  004A5C  6FBF               	movwf	(_ts_system+48)& (0+255),b	;volatile
 12203                           
 12204                           ; BSR set to: 0
 12205                           ;sm_ControlGate_MC50.c: 444:             ts_system.InvertionTimeClosingFromOpen = (1000/
      +                          50) * 2;
 12206  004A5E  0E00               	movlw	0
 12207  004A60  6FC2               	movwf	(_ts_system+51)& (0+255),b	;volatile
 12208  004A62  0E28               	movlw	40
 12209  004A64  6FC1               	movwf	(_ts_system+50)& (0+255),b	;volatile
 12210                           
 12211                           ; BSR set to: 0
 12212                           ;sm_ControlGate_MC50.c: 445:             var_sys.InvertionClosingFromOpen = YES;
 12213  004A66  0E01               	movlw	1
 12214  004A68  0101               	movlb	1	; () banked
 12215  004A6A  6F9B               	movwf	(_var_sys+70)& (0+255),b	;volatile
 12216                           
 12217                           ;sm_ControlGate_MC50.c: 449:         } else
 12218  004A6C  0012               	return	
 12219  004A6E                     l22987:
 12220                           
 12221                           ; BSR set to: 0
 12222                           ;sm_ControlGate_MC50.c: 450:         {;sm_ControlGate_MC50.c: 451:             var_sys.S
      +                          tateMotor = Stopped;
 12223  004A6E  0E00               	movlw	0
 12224  004A70  0101               	movlb	1	; () banked
 12225  004A72  6F55               	movwf	_var_sys& (0+255),b	;volatile
 12226  004A74  0012               	return	
 12227  004A76                     l22989:
 12228  004A76  0101               	movlb	1	; () banked
 12229  004A78  057C               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 12230  004A7A  A4D8               	btfss	status,2,c
 12231  004A7C  D00B               	goto	l23009
 12232                           
 12233                           ; BSR set to: 1
 12234                           ;sm_ControlGate_MC50.c: 457:                 var_sys.StateMotor = Stopped;
 12235  004A7E  0E00               	movlw	0
 12236  004A80  6F55               	movwf	_var_sys& (0+255),b	;volatile
 12237                           
 12238                           ; BSR set to: 1
 12239                           ;sm_ControlGate_MC50.c: 460:         if (ts_system.TimeWaitToNextState <= 0) {
 12240  004A82  0100               	movlb	0	; () banked
 12241  004A84  BFB4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 12242  004A86  D7DE               	goto	u27290
 12243  004A88  51B4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 12244  004A8A  E150               	bnz	l2747
 12245  004A8C  05B3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 12246  004A8E  B0D8               	btfsc	status,0,c
 12247  004A90  0012               	return	
 12248  004A92  D7D8               	goto	u27290
 12249  004A94                     l23009:
 12250                           
 12251                           ; BSR set to: 1
 12252  004A94  5155               	movf	_var_sys& (0+255),w,b	;volatile
 12253  004A96  A4D8               	btfss	status,2,c
 12254  004A98  D018               	goto	l23027
 12255                           
 12256                           ; BSR set to: 1
 12257  004A9A  0100               	movlb	0	; () banked
 12258  004A9C  BFB4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 12259  004A9E  D005               	goto	u27330
 12260  004AA0  51B4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 12261  004AA2  E113               	bnz	l23027
 12262  004AA4  05B3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 12263  004AA6  B0D8               	btfsc	status,0,c
 12264  004AA8  D010               	goto	l23027
 12265  004AAA                     u27330:
 12266                           
 12267                           ; BSR set to: 0
 12268                           ;sm_ControlGate_MC50.c: 479:       if(securityOpening != ST){
 12269  004AAA  0E02               	movlw	2
 12270  004AAC  19E5               	xorwf	actionZone_Opening@securityOpening& (0+255),w,b
 12271  004AAE  B4D8               	btfsc	status,2,c
 12272  004AB0  D007               	goto	l23023
 12273                           
 12274                           ; BSR set to: 0
 12275                           ;sm_ControlGate_MC50.c: 480:         var_sys.NumberOffErrors++;
 12276  004AB2  0101               	movlb	1	; () banked
 12277  004AB4  2B98               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 12278                           
 12279                           ; BSR set to: 1
 12280                           ;sm_ControlGate_MC50.c: 482:         var_sys.StateMotor = Stopped;
 12281  004AB6  0E00               	movlw	0
 12282  004AB8  6F55               	movwf	_var_sys& (0+255),b	;volatile
 12283                           
 12284                           ; BSR set to: 1
 12285                           ;sm_ControlGate_MC50.c: 483:         setPositionInvertionInOpening();
 12286  004ABA  EC10  F03B         	call	_setPositionInvertionInOpening	;wreg free
 12287  004ABE  D71B               	goto	l22903
 12288  004AC0                     l23023:
 12289                           
 12290                           ;sm_ControlGate_MC50.c: 486:           setPositionInvertionInOpening();
 12291  004AC0  EC10  F03B         	call	_setPositionInvertionInOpening	;wreg free
 12292  004AC4                     l23025:
 12293                           
 12294                           ;sm_ControlGate_MC50.c: 487:           StopOrder();
 12295  004AC4  EC71  F04C         	call	_StopOrder	;wreg free
 12296  004AC8  0012               	return	
 12297  004ACA                     l23027:
 12298  004ACA  0101               	movlb	1	; () banked
 12299  004ACC  05B6               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 12300  004ACE  A4D8               	btfss	status,2,c
 12301  004AD0  D006               	goto	l23033
 12302                           
 12303                           ; BSR set to: 1
 12304                           ;sm_ControlGate_MC50.c: 492:         if (typeOpenOrder != TypeFullOpen) {
 12305  004AD2  0E03               	movlw	3
 12306  004AD4  0100               	movlb	0	; () banked
 12307  004AD6  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12308  004AD8  B4D8               	btfsc	status,2,c
 12309  004ADA  0012               	return	
 12310  004ADC  D7F3               	goto	l23025
 12311  004ADE                     l23033:
 12312                           
 12313                           ; BSR set to: 1
 12314  004ADE  0E02               	movlw	2
 12315  004AE0  0100               	movlb	0	; () banked
 12316  004AE2  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12317  004AE4  A4D8               	btfss	status,2,c
 12318  004AE6  D010               	goto	l23045
 12319                           
 12320                           ; BSR set to: 0
 12321  004AE8  0E02               	movlw	2
 12322  004AEA  0101               	movlb	1	; () banked
 12323  004AEC  1955               	xorwf	_var_sys& (0+255),w,b	;volatile
 12324  004AEE  A4D8               	btfss	status,2,c
 12325  004AF0  D00B               	goto	l23045
 12326                           
 12327                           ; BSR set to: 1
 12328  004AF2  0E02               	movlw	2
 12329  004AF4  19B2               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 12330  004AF6  B4D8               	btfsc	status,2,c
 12331  004AF8  D007               	goto	l23045
 12332                           
 12333                           ; BSR set to: 1
 12334                           ;sm_ControlGate_MC50.c: 502:         setPositionInvertionInOpening();
 12335  004AFA  EC10  F03B         	call	_setPositionInvertionInOpening	;wreg free
 12336                           
 12337                           ; BSR set to: 1
 12338                           ;sm_ControlGate_MC50.c: 503:         StopOrder();
 12339  004AFE  EC71  F04C         	call	_StopOrder	;wreg free
 12340                           
 12341                           ;sm_ControlGate_MC50.c: 504:         InitWalkAutoTime();
 12342  004B02  EC45  F04D         	call	_InitWalkAutoTime	;wreg free
 12343                           
 12344                           ;sm_ControlGate_MC50.c: 505:     } else if ((typeOpenOrder == TypeFull || typeOpenOrder 
      +                          == TypeFullOpen || typeOpenOrder == TypeFullClose) && var_sys_NVM.operationMode != ModoC
      +                          ondominio) {
 12345  004B06  0012               	return	
 12346  004B08                     l23045:
 12347  004B08  0100               	movlb	0	; () banked
 12348  004B0A  05E6               	decf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12349  004B0C  B4D8               	btfsc	status,2,c
 12350  004B0E  D008               	goto	u27420
 12351                           
 12352                           ; BSR set to: 0
 12353  004B10  0E03               	movlw	3
 12354  004B12  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12355  004B14  B4D8               	btfsc	status,2,c
 12356  004B16  D004               	goto	u27420
 12357                           
 12358                           ; BSR set to: 0
 12359  004B18  0E04               	movlw	4
 12360  004B1A  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12361  004B1C  A4D8               	btfss	status,2,c
 12362  004B1E  0012               	return	
 12363  004B20                     u27420:
 12364                           
 12365                           ; BSR set to: 0
 12366  004B20  0E02               	movlw	2
 12367  004B22  0101               	movlb	1	; () banked
 12368  004B24  19B2               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 12369  004B26  B4D8               	btfsc	status,2,c
 12370  004B28  0012               	return	
 12371  004B2A  D7CA               	goto	l23023
 12372  004B2C                     l2747:
 12373  004B2C  0012               	return		;funcret
 12374  004B2E                     __end_of_actionZone_Opening:
 12375                           	callstack 0
 12376                           
 12377 ;; *************** function _setPositionInvertionInOpening *****************
 12378 ;; Defined at:
 12379 ;;		line 894 in file "sm_ControlGate_MC50.c"
 12380 ;; Parameters:    Size  Location     Type
 12381 ;;		None
 12382 ;; Auto vars:     Size  Location     Type
 12383 ;;		None
 12384 ;; Return value:  Size  Location     Type
 12385 ;;                  1    wreg      void 
 12386 ;; Registers used:
 12387 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12388 ;; Tracked objects:
 12389 ;;		On entry : 3E/0
 12390 ;;		On exit  : 3F/1
 12391 ;;		Unchanged: 0/0
 12392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12395 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12396 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12397 ;;Total ram usage:        8 bytes
 12398 ;; Hardware stack levels used: 1
 12399 ;; Hardware stack levels required when called: 6
 12400 ;; This function calls:
 12401 ;;		_getTimeDecelaration
 12402 ;; This function is called by:
 12403 ;;		_actionZone_Opening
 12404 ;; This function uses a non-reentrant model
 12405 ;;
 12406                           
 12407                           	psect	text25
 12408  007620                     __ptext25:
 12409                           	callstack 0
 12410  007620                     _setPositionInvertionInOpening:
 12411                           	callstack 22
 12412                           
 12413                           ;sm_ControlGate_MC50.c: 896:     if(var_sys_NVM.TypeofMotor != 2){
 12414                           
 12415                           ;incstack = 0
 12416  007620  0E02               	movlw	2
 12417  007622  0101               	movlb	1	; () banked
 12418  007624  19C2               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 12419  007626  B4D8               	btfsc	status,2,c
 12420  007628  D008               	goto	l21549
 12421                           
 12422                           ; BSR set to: 1
 12423                           ;sm_ControlGate_MC50.c: 897:        var_sys.PositionActual -= ( 100/50);
 12424  00762A  0EFE               	movlw	254
 12425  00762C  2773               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12426  00762E  0EFF               	movlw	255
 12427  007630  2374               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12428  007632  0EFF               	movlw	255
 12429  007634  2375               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12430  007636  0EFF               	movlw	255
 12431  007638  D005               	goto	L68
 12432  00763A                     l21549:
 12433                           
 12434                           ; BSR set to: 1
 12435                           ;sm_ControlGate_MC50.c: 901:          var_sys.PositionActual += ( 50/50);
 12436  00763A  0E01               	movlw	1
 12437  00763C  2773               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12438  00763E  0E00               	movlw	0
 12439  007640  2374               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12440  007642  2375               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12441  007644                     L68:
 12442  007644  2376               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 12443                           
 12444                           ; BSR set to: 1
 12445                           ;sm_ControlGate_MC50.c: 906:     if (var_sys.PositionActual < getTimeDecelaration(InClos
      +                          e)) {
 12446  007646  0E03               	movlw	3
 12447  007648  EC9C  F03A         	call	_getTimeDecelaration
 12448  00764C  5029               	movf	?_getTimeDecelaration^0,w,c
 12449  00764E  0101               	movlb	1	; () banked
 12450  007650  5D73               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12451  007652  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12452  007654  5974               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12453  007656  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12454  007658  5975               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12455  00765A  5176               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12456  00765C  0A80               	xorlw	128
 12457  00765E  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12458  007660  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12459  007662  0A80               	xorlw	128
 12460  007664  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12461  007666  B0D8               	btfsc	status,0,c
 12462  007668  D004               	goto	l21555
 12463                           
 12464                           ; BSR set to: 1
 12465                           ;sm_ControlGate_MC50.c: 907:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 12466  00766A  0E03               	movlw	3
 12467  00766C  EC9C  F03A         	call	_getTimeDecelaration
 12468  007670  D015               	goto	L69
 12469  007672                     l21555:
 12470                           
 12471                           ; BSR set to: 1
 12472  007672  0E01               	movlw	1
 12473  007674  EC9C  F03A         	call	_getTimeDecelaration
 12474  007678  0101               	movlb	1	; () banked
 12475  00767A  5173               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12476  00767C  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12477  00767E  5174               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12478  007680  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12479  007682  5175               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12480  007684  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12481  007686  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12482  007688  0A80               	xorlw	128
 12483  00768A  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12484  00768C  5176               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12485  00768E  0A80               	xorlw	128
 12486  007690  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12487  007692  B0D8               	btfsc	status,0,c
 12488  007694  D00B               	goto	l21559
 12489                           
 12490                           ; BSR set to: 1
 12491                           ;sm_ControlGate_MC50.c: 909:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 12492  007696  0E01               	movlw	1
 12493  007698  EC9C  F03A         	call	_getTimeDecelaration
 12494  00769C                     L69:
 12495  00769C  C029  F173         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 12496  0076A0  C02A  F174         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 12497  0076A4  C02B  F175         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 12498  0076A8  C02C  F176         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 12499  0076AC                     l21559:
 12500                           
 12501                           ;sm_ControlGate_MC50.c: 911:     var_sys.TimeMaxMotorIsON = var_sys.PositionActual + var
      +                          _sys_NVM.decelarationClose*( 500/50) + (1000/50)*10;
 12502  0076AC  0101               	movlb	1	; () banked
 12503  0076AE  51A7               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12504  0076B0  0D0A               	mullw	10
 12505  0076B2  CFF3 F032          	movff	prodl,??_setPositionInvertionInOpening
 12506  0076B6  CFF4 F033          	movff	prodh,??_setPositionInvertionInOpening+1
 12507  0076BA  0E00               	movlw	0
 12508  0076BC  BE33               	btfsc	(??_setPositionInvertionInOpening+1)^0,7,c
 12509  0076BE  0EFF               	movlw	255
 12510  0076C0  6E34               	movwf	(??_setPositionInvertionInOpening+2)^0,c
 12511  0076C2  6E35               	movwf	(??_setPositionInvertionInOpening+3)^0,c
 12512  0076C4  5173               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12513  0076C6  2432               	addwf	??_setPositionInvertionInOpening^0,w,c
 12514  0076C8  6E36               	movwf	(??_setPositionInvertionInOpening+4)^0,c
 12515  0076CA  5174               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12516  0076CC  2033               	addwfc	(??_setPositionInvertionInOpening+1)^0,w,c
 12517  0076CE  6E37               	movwf	(??_setPositionInvertionInOpening+5)^0,c
 12518  0076D0  5175               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12519  0076D2  2034               	addwfc	(??_setPositionInvertionInOpening+2)^0,w,c
 12520  0076D4  6E38               	movwf	(??_setPositionInvertionInOpening+6)^0,c
 12521  0076D6  5176               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12522  0076D8  2035               	addwfc	(??_setPositionInvertionInOpening+3)^0,w,c
 12523  0076DA  6E39               	movwf	(??_setPositionInvertionInOpening+7)^0,c
 12524  0076DC  0EC8               	movlw	200
 12525  0076DE  2436               	addwf	(??_setPositionInvertionInOpening+4)^0,w,c
 12526  0076E0  6F6D               	movwf	(_var_sys+24)& (0+255),b	;volatile
 12527  0076E2  0E00               	movlw	0
 12528  0076E4  2037               	addwfc	(??_setPositionInvertionInOpening+5)^0,w,c
 12529  0076E6  6F6E               	movwf	(_var_sys+25)& (0+255),b	;volatile
 12530  0076E8  0E00               	movlw	0
 12531  0076EA  2038               	addwfc	(??_setPositionInvertionInOpening+6)^0,w,c
 12532  0076EC  6F6F               	movwf	(_var_sys+26)& (0+255),b	;volatile
 12533  0076EE  0E00               	movlw	0
 12534  0076F0  2039               	addwfc	(??_setPositionInvertionInOpening+7)^0,w,c
 12535  0076F2  6F70               	movwf	(_var_sys+27)& (0+255),b	;volatile
 12536                           
 12537                           ; BSR set to: 1
 12538  0076F4  0012               	return		;funcret
 12539  0076F6                     __end_of_setPositionInvertionInOpening:
 12540                           	callstack 0
 12541                           
 12542 ;; *************** function _controlVelocity *****************
 12543 ;; Defined at:
 12544 ;;		line 527 in file "outputs_MC50.c"
 12545 ;; Parameters:    Size  Location     Type
 12546 ;;		None
 12547 ;; Auto vars:     Size  Location     Type
 12548 ;;		None
 12549 ;; Return value:  Size  Location     Type
 12550 ;;                  1    wreg      void 
 12551 ;; Registers used:
 12552 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12553 ;; Tracked objects:
 12554 ;;		On entry : 3E/1
 12555 ;;		On exit  : 3F/1
 12556 ;;		Unchanged: 0/0
 12557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12560 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12561 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12562 ;;Total ram usage:        1 bytes
 12563 ;; Hardware stack levels used: 1
 12564 ;; Hardware stack levels required when called: 7
 12565 ;; This function calls:
 12566 ;;		_ControlDecelarationFactor
 12567 ;;		_InitSoftStop
 12568 ;;		_getStateOpenPosition
 12569 ;;		_getTimeDecelaration
 12570 ;; This function is called by:
 12571 ;;		_main
 12572 ;;		_actionZone_Opening
 12573 ;; This function uses a non-reentrant model
 12574 ;;
 12575                           
 12576                           	psect	text26
 12577  00542A                     __ptext26:
 12578                           	callstack 0
 12579  00542A                     _controlVelocity:
 12580                           	callstack 21
 12581                           
 12582                           ;outputs_MC50.c: 531:     if(var_sys.LearningIsEnabled==YES && var_sys.LearningDecelarat
      +                          ion==YES)
 12583                           
 12584                           ; BSR set to: 1
 12585                           ;incstack = 0
 12586  00542A  0101               	movlb	1	; () banked
 12587  00542C  057B               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12588  00542E  A4D8               	btfss	status,2,c
 12589  005430  D018               	goto	l21353
 12590                           
 12591                           ; BSR set to: 1
 12592  005432  059C               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 12593  005434  A4D8               	btfss	status,2,c
 12594  005436  D015               	goto	l21353
 12595                           
 12596                           ; BSR set to: 1
 12597                           ;outputs_MC50.c: 532:     {;outputs_MC50.c: 533:         if(powerControl_st.decelaration
      +                          Active==NO)
 12598  005438  513C               	movf	_powerControl_st& (0+255),w,b
 12599  00543A  A4D8               	btfss	status,2,c
 12600  00543C  D009               	goto	l21347
 12601                           
 12602                           ; BSR set to: 1
 12603                           ;outputs_MC50.c: 534:         {;outputs_MC50.c: 535:             ts_system.TimeStopedBef
      +                          oreDecelaration=( 500/50);
 12604  00543E  0E00               	movlw	0
 12605  005440  0100               	movlb	0	; () banked
 12606  005442  6FBC               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12607  005444  0E0A               	movlw	10
 12608  005446  6FBB               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12609                           
 12610                           ;outputs_MC50.c: 536:             ts_system.TimeCurrentWaitForAlarm=(1000/50);
 12611  005448  0E00               	movlw	0
 12612  00544A  6FBE               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12613  00544C  0E14               	movlw	20
 12614  00544E  6FBD               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12615  005450                     l21347:
 12616                           
 12617                           ;outputs_MC50.c: 538:         ControlDecelarationFactor();
 12618  005450  EC3B  F04D         	call	_ControlDecelarationFactor	;wreg free
 12619                           
 12620                           ; BSR set to: 1
 12621                           ;outputs_MC50.c: 539:         powerControl_st.decelarationActive=YES;
 12622  005454  0E01               	movlw	1
 12623  005456  6F3C               	movwf	_powerControl_st& (0+255),b
 12624                           
 12625                           ; BSR set to: 1
 12626                           ;outputs_MC50.c: 540:         var_sys.velocityFactor=0;
 12627  005458  0E00               	movlw	0
 12628  00545A  6F64               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12629  00545C  0E00               	movlw	0
 12630  00545E  6F63               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12631                           
 12632                           ;outputs_MC50.c: 541:     }
 12633  005460  0012               	return	
 12634  005462                     l21353:
 12635                           
 12636                           ; BSR set to: 1
 12637  005462  057B               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12638  005464  B4D8               	btfsc	status,2,c
 12639  005466  D003               	goto	u25070
 12640                           
 12641                           ; BSR set to: 1
 12642  005468  055E               	decf	(_var_sys+9)& (0+255),w,b	;volatile
 12643  00546A  A4D8               	btfss	status,2,c
 12644  00546C  D007               	goto	l21359
 12645  00546E                     u25070:
 12646                           
 12647                           ; BSR set to: 1
 12648                           ;outputs_MC50.c: 544:     {;outputs_MC50.c: 545:         var_sys.velocityFactor=0;
 12649  00546E  0E00               	movlw	0
 12650  005470  6F64               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12651  005472  0E00               	movlw	0
 12652  005474  6F63               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12653                           
 12654                           ;outputs_MC50.c: 546:         powerControl_st.decelarationActive=NO;
 12655  005476  0E00               	movlw	0
 12656  005478  6F3C               	movwf	_powerControl_st& (0+255),b
 12657                           
 12658                           ;outputs_MC50.c: 547:     }
 12659  00547A  0012               	return	
 12660  00547C                     l21359:
 12661                           
 12662                           ; BSR set to: 1
 12663  00547C  0E03               	movlw	3
 12664  00547E  1955               	xorwf	_var_sys& (0+255),w,b	;volatile
 12665  005480  A4D8               	btfss	status,2,c
 12666  005482  D063               	goto	l21407
 12667                           
 12668                           ; BSR set to: 1
 12669  005484  0E03               	movlw	3
 12670  005486  EC9C  F03A         	call	_getTimeDecelaration
 12671  00548A  5029               	movf	?_getTimeDecelaration^0,w,c
 12672  00548C  0101               	movlb	1	; () banked
 12673  00548E  5D73               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12674  005490  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12675  005492  5974               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12676  005494  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12677  005496  5975               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12678  005498  5176               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12679  00549A  0A80               	xorlw	128
 12680  00549C  0100               	movlb	0	; () banked
 12681  00549E  6FDA               	movwf	??_controlVelocity& (0+255),b
 12682  0054A0  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12683  0054A2  0A80               	xorlw	128
 12684  0054A4  59DA               	subwfb	??_controlVelocity& (0+255),w,b
 12685  0054A6  A0D8               	btfss	status,0,c
 12686  0054A8  D004               	goto	u25100
 12687                           
 12688                           ; BSR set to: 0
 12689  0054AA  0101               	movlb	1	; () banked
 12690  0054AC  059D               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12691  0054AE  A4D8               	btfss	status,2,c
 12692  0054B0  D04C               	goto	l21407
 12693  0054B2                     u25100:
 12694  0054B2  0101               	movlb	1	; () banked
 12695  0054B4  51A7               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12696  0054B6  B4D8               	btfsc	status,2,c
 12697  0054B8  D003               	goto	u25120
 12698                           
 12699                           ; BSR set to: 1
 12700  0054BA  5167               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12701  0054BC  B4D8               	btfsc	status,2,c
 12702  0054BE  D00A               	goto	u25140
 12703  0054C0                     u25120:
 12704                           
 12705                           ; BSR set to: 1
 12706  0054C0  BF66               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12707  0054C2  D005               	goto	u25130
 12708  0054C4  5166               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12709  0054C6  E141               	bnz	l21407
 12710  0054C8  0565               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12711  0054CA  B0D8               	btfsc	status,0,c
 12712  0054CC  D03E               	goto	l21407
 12713  0054CE                     u25130:
 12714                           
 12715                           ; BSR set to: 1
 12716  0054CE  51B9               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12717  0054D0  B4D8               	btfsc	status,2,c
 12718  0054D2  D03B               	goto	l21407
 12719  0054D4                     u25140:
 12720                           
 12721                           ; BSR set to: 1
 12722                           ;outputs_MC50.c: 550:     {;outputs_MC50.c: 552:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12723  0054D4  513C               	movf	_powerControl_st& (0+255),w,b
 12724  0054D6  A4D8               	btfss	status,2,c
 12725  0054D8  D022               	goto	l21393
 12726                           
 12727                           ; BSR set to: 1
 12728  0054DA  5167               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12729  0054DC  A4D8               	btfss	status,2,c
 12730  0054DE  D01F               	goto	l21393
 12731                           
 12732                           ; BSR set to: 1
 12733                           ;outputs_MC50.c: 553:                 {;outputs_MC50.c: 556:                     ts_syst
      +                          em.TimeCurrentWaitForAlarm=(1000/50);
 12734  0054E0  0E00               	movlw	0
 12735  0054E2  0100               	movlb	0	; () banked
 12736  0054E4  6FBE               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12737  0054E6  0E14               	movlw	20
 12738  0054E8  6FBD               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12739                           
 12740                           ;outputs_MC50.c: 558:                     if (var_sys_NVM.softstop > 0){
 12741  0054EA  0101               	movlb	1	; () banked
 12742  0054EC  51B9               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12743  0054EE  B4D8               	btfsc	status,2,c
 12744  0054F0  D007               	goto	l21383
 12745                           
 12746                           ; BSR set to: 1
 12747                           ;outputs_MC50.c: 559:                         var_sys.AutoInversionActive = NO;
 12748  0054F2  0E00               	movlw	0
 12749  0054F4  6F7C               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12750                           
 12751                           ;outputs_MC50.c: 560:                         var_sys.AutoInversionActiveStop = YES;
 12752  0054F6  0E01               	movlw	1
 12753  0054F8  6F67               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12754                           
 12755                           ; BSR set to: 1
 12756                           ;outputs_MC50.c: 561:                         InitSoftStop();
 12757  0054FA  EC0F  F048         	call	_InitSoftStop	;wreg free
 12758                           
 12759                           ;outputs_MC50.c: 563:                     }
 12760  0054FE  D00F               	goto	l21393
 12761  005500                     l21383:
 12762                           
 12763                           ; BSR set to: 1
 12764                           ;outputs_MC50.c: 565:                     {;outputs_MC50.c: 566:                        
      +                           ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12765  005500  0E00               	movlw	0
 12766  005502  0100               	movlb	0	; () banked
 12767  005504  6FBC               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12768  005506  0E0A               	movlw	10
 12769  005508  6FBB               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12770                           
 12771                           ; BSR set to: 0
 12772                           ;outputs_MC50.c: 567:                         ControlDecelarationFactor();
 12773  00550A  EC3B  F04D         	call	_ControlDecelarationFactor	;wreg free
 12774                           
 12775                           ; BSR set to: 1
 12776                           ;outputs_MC50.c: 568:                         powerControl_st.decelarationActive=YES;
 12777  00550E  0E01               	movlw	1
 12778  005510  6F3C               	movwf	_powerControl_st& (0+255),b
 12779                           
 12780                           ; BSR set to: 1
 12781                           ;outputs_MC50.c: 569:                         var_sys.velocityFactor=0;
 12782  005512  0E00               	movlw	0
 12783  005514  6F64               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12784  005516  0E00               	movlw	0
 12785  005518  6F63               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12786                           
 12787                           ; BSR set to: 1
 12788                           ;outputs_MC50.c: 570:                          var_sys.AutoInversionActiveStop = NO;
 12789  00551A  0E00               	movlw	0
 12790  00551C  6F67               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12791  00551E                     l21393:
 12792                           
 12793                           ; BSR set to: 1
 12794                           ;outputs_MC50.c: 574:                 if ((var_sys.velocityFactorstop <= 0)&&(var_sys.Au
      +                          toInversionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12795  00551E  BF66               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12796  005520  D005               	goto	u25180
 12797  005522  5166               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12798  005524  E102               	bnz	u25181
 12799  005526  0565               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12800  005528  B0D8               	btfsc	status,0,c
 12801  00552A                     u25181:
 12802  00552A  0012               	return	
 12803  00552C                     u25180:
 12804                           
 12805                           ; BSR set to: 1
 12806  00552C  0567               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12807  00552E  A4D8               	btfss	status,2,c
 12808  005530  0012               	return	
 12809                           
 12810                           ; BSR set to: 1
 12811  005532  51B9               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12812  005534  B4D8               	btfsc	status,2,c
 12813  005536  0012               	return	
 12814                           
 12815                           ; BSR set to: 1
 12816                           ;outputs_MC50.c: 575:                 {;outputs_MC50.c: 576:                 ts_system.T
      +                          imeStopedBeforeDecelaration=( 100/50);
 12817  005538  0E00               	movlw	0
 12818  00553A  0100               	movlb	0	; () banked
 12819  00553C  6FBC               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12820  00553E  0E02               	movlw	2
 12821  005540  6FBB               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12822                           
 12823                           ;outputs_MC50.c: 577:                 var_sys.AutoInversionActiveStop = NO;
 12824  005542  0E00               	movlw	0
 12825  005544  0101               	movlb	1	; () banked
 12826  005546  6F67               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12827  005548  D783               	goto	l21347
 12828  00554A                     l21407:
 12829                           
 12830                           ; BSR set to: 1
 12831  00554A  5155               	movf	_var_sys& (0+255),w,b	;volatile
 12832  00554C  ECA4  F036         	call	_getStateOpenPosition
 12833  005550  06E8               	decf	wreg,f,c
 12834  005552  A4D8               	btfss	status,2,c
 12835  005554  D03F               	goto	l21449
 12836                           
 12837                           ; BSR set to: 0
 12838  005556  0101               	movlb	1	; () banked
 12839  005558  51A6               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12840  00555A  B4D8               	btfsc	status,2,c
 12841  00555C  D003               	goto	u25230
 12842                           
 12843                           ; BSR set to: 1
 12844  00555E  5167               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12845  005560  B4D8               	btfsc	status,2,c
 12846  005562  D00A               	goto	u25250
 12847  005564                     u25230:
 12848                           
 12849                           ; BSR set to: 1
 12850  005564  BF66               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12851  005566  D005               	goto	u25240
 12852  005568  5166               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12853  00556A  E134               	bnz	l21449
 12854  00556C  0565               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12855  00556E  B0D8               	btfsc	status,0,c
 12856  005570  D031               	goto	l21449
 12857  005572                     u25240:
 12858                           
 12859                           ; BSR set to: 1
 12860  005572  51B9               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12861  005574  B4D8               	btfsc	status,2,c
 12862  005576  D02E               	goto	l21449
 12863  005578                     u25250:
 12864                           
 12865                           ; BSR set to: 1
 12866                           ;outputs_MC50.c: 586:     {;outputs_MC50.c: 588:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12867  005578  513C               	movf	_powerControl_st& (0+255),w,b
 12868  00557A  A4D8               	btfss	status,2,c
 12869  00557C  D023               	goto	l21435
 12870                           
 12871                           ; BSR set to: 1
 12872  00557E  5167               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12873  005580  A4D8               	btfss	status,2,c
 12874  005582  D020               	goto	l21435
 12875                           
 12876                           ; BSR set to: 1
 12877                           ;outputs_MC50.c: 589:         {;outputs_MC50.c: 592:             ts_system.TimeCurrentWa
      +                          itForAlarm=(1000/50);
 12878  005584  0E00               	movlw	0
 12879  005586  0100               	movlb	0	; () banked
 12880  005588  6FBE               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12881  00558A  0E14               	movlw	20
 12882  00558C  6FBD               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12883                           
 12884                           ;outputs_MC50.c: 594:             if (var_sys_NVM.softstop > 0){
 12885  00558E  0101               	movlb	1	; () banked
 12886  005590  51B9               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12887  005592  B4D8               	btfsc	status,2,c
 12888  005594  D007               	goto	l21427
 12889                           
 12890                           ; BSR set to: 1
 12891                           ;outputs_MC50.c: 595:                 var_sys.AutoInversionActive = NO;
 12892  005596  0E00               	movlw	0
 12893  005598  6F7C               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12894                           
 12895                           ;outputs_MC50.c: 596:                 var_sys.AutoInversionActiveStop = YES;
 12896  00559A  0E01               	movlw	1
 12897  00559C  6F67               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12898                           
 12899                           ; BSR set to: 1
 12900                           ;outputs_MC50.c: 597:                 InitSoftStop();
 12901  00559E  EC0F  F048         	call	_InitSoftStop	;wreg free
 12902                           
 12903                           ;outputs_MC50.c: 598:             }else{
 12904  0055A2  D010               	goto	l21435
 12905  0055A4                     l21427:
 12906                           
 12907                           ; BSR set to: 1
 12908                           ;outputs_MC50.c: 599:                 ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12909  0055A4  0E00               	movlw	0
 12910  0055A6  0100               	movlb	0	; () banked
 12911  0055A8  6FBC               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12912  0055AA  0E0A               	movlw	10
 12913  0055AC  6FBB               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12914                           
 12915                           ;outputs_MC50.c: 600:                  var_sys.AutoInversionActiveStop = NO;
 12916  0055AE  0E00               	movlw	0
 12917  0055B0  0101               	movlb	1	; () banked
 12918  0055B2  6F67               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12919                           
 12920                           ; BSR set to: 1
 12921                           ;outputs_MC50.c: 601:                 ControlDecelarationFactor();
 12922  0055B4  EC3B  F04D         	call	_ControlDecelarationFactor	;wreg free
 12923                           
 12924                           ; BSR set to: 1
 12925                           ;outputs_MC50.c: 602:                 powerControl_st.decelarationActive=YES;
 12926  0055B8  0E01               	movlw	1
 12927  0055BA  6F3C               	movwf	_powerControl_st& (0+255),b
 12928                           
 12929                           ; BSR set to: 1
 12930                           ;outputs_MC50.c: 603:                 var_sys.velocityFactor=0;
 12931  0055BC  0E00               	movlw	0
 12932  0055BE  6F64               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12933  0055C0  0E00               	movlw	0
 12934  0055C2  6F63               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12935  0055C4                     l21435:
 12936                           
 12937                           ; BSR set to: 1
 12938                           ;outputs_MC50.c: 607:         if ((var_sys.velocityFactorstop <= 0)&&(var_sys.AutoInvers
      +                          ionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12939  0055C4  BF66               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12940  0055C6  D7B2               	goto	u25180
 12941  0055C8  5166               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12942  0055CA  E135               	bnz	l2327
 12943  0055CC  0565               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12944  0055CE  B0D8               	btfsc	status,0,c
 12945  0055D0  0012               	return	
 12946  0055D2  D7AC               	goto	u25180
 12947  0055D4                     l21449:
 12948  0055D4  0101               	movlb	1	; () banked
 12949  0055D6  BF66               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12950  0055D8  D012               	goto	l21457
 12951  0055DA  5166               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12952  0055DC  E103               	bnz	u25320
 12953  0055DE  0565               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12954  0055E0  A0D8               	btfss	status,0,c
 12955  0055E2  D00D               	goto	l21457
 12956  0055E4                     u25320:
 12957                           
 12958                           ; BSR set to: 1
 12959  0055E4  5155               	movf	_var_sys& (0+255),w,b	;volatile
 12960  0055E6  B4D8               	btfsc	status,2,c
 12961  0055E8  D00A               	goto	l21457
 12962                           
 12963                           ; BSR set to: 1
 12964                           ;outputs_MC50.c: 618:     {;outputs_MC50.c: 619:         var_sys.velocityFactorstop=(var
      +                          _sys.velocityFactorstop)- var_sys.SoftStopDecrementControl;
 12965  0055EA  5168               	movf	(_var_sys+19)& (0+255),w,b	;volatile
 12966  0055EC  5D65               	subwf	(_var_sys+16)& (0+255),w,b	;volatile
 12967  0055EE  6F65               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12968  0055F0  5166               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12969  0055F2  A0D8               	btfss	status,0,c
 12970  0055F4  0566               	decf	(_var_sys+17)& (0+255),w,b	;volatile
 12971  0055F6  6F66               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12972  0055F8                     l21455:
 12973                           
 12974                           ; BSR set to: 1
 12975                           ;outputs_MC50.c: 620:         powerControl_st.decelarationActive=NO;
 12976  0055F8  0E00               	movlw	0
 12977  0055FA  6F3C               	movwf	_powerControl_st& (0+255),b
 12978                           
 12979                           ;outputs_MC50.c: 623:     }
 12980  0055FC  0012               	return	
 12981  0055FE                     l21457:
 12982                           
 12983                           ; BSR set to: 1
 12984  0055FE  BF64               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 12985  005600  D010               	goto	l21465
 12986  005602  5164               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12987  005604  E103               	bnz	u25340
 12988  005606  0563               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 12989  005608  A0D8               	btfss	status,0,c
 12990  00560A  D00B               	goto	l21465
 12991  00560C                     u25340:
 12992                           
 12993                           ; BSR set to: 1
 12994  00560C  5155               	movf	_var_sys& (0+255),w,b	;volatile
 12995  00560E  B4D8               	btfsc	status,2,c
 12996  005610  D008               	goto	l21465
 12997                           
 12998                           ; BSR set to: 1
 12999                           ;outputs_MC50.c: 626:     {;outputs_MC50.c: 627:         var_sys.velocityFactor=(var_sys
      +                          .velocityFactor)-var_sys.SoftStartDecrementControl;
 13000  005612  5169               	movf	(_var_sys+20)& (0+255),w,b	;volatile
 13001  005614  5D63               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 13002  005616  6F63               	movwf	(_var_sys+14)& (0+255),b	;volatile
 13003  005618  5164               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 13004  00561A  A0D8               	btfss	status,0,c
 13005  00561C  0564               	decf	(_var_sys+15)& (0+255),w,b	;volatile
 13006  00561E  6F64               	movwf	(_var_sys+15)& (0+255),b	;volatile
 13007  005620  D7EB               	goto	l21455
 13008  005622                     l21465:
 13009                           
 13010                           ; BSR set to: 1
 13011                           ;outputs_MC50.c: 634:     {;outputs_MC50.c: 635:          var_sys.velocityFactorstop = 0
      +                          ;
 13012  005622  0E00               	movlw	0
 13013  005624  6F66               	movwf	(_var_sys+17)& (0+255),b	;volatile
 13014  005626  0E00               	movlw	0
 13015  005628  6F65               	movwf	(_var_sys+16)& (0+255),b	;volatile
 13016                           
 13017                           ;outputs_MC50.c: 636:          var_sys.velocityFactor=0;
 13018  00562A  0E00               	movlw	0
 13019  00562C  6F64               	movwf	(_var_sys+15)& (0+255),b	;volatile
 13020  00562E  0E00               	movlw	0
 13021  005630  6F63               	movwf	(_var_sys+14)& (0+255),b	;volatile
 13022                           
 13023                           ;outputs_MC50.c: 637:          powerControl_st.decelarationActive=NO;
 13024  005632  0E00               	movlw	0
 13025  005634  6F3C               	movwf	_powerControl_st& (0+255),b
 13026  005636                     l2327:
 13027                           
 13028                           ; BSR set to: 1
 13029  005636  0012               	return		;funcret
 13030  005638                     __end_of_controlVelocity:
 13031                           	callstack 0
 13032                           
 13033 ;; *************** function _getStateOpenPosition *****************
 13034 ;; Defined at:
 13035 ;;		line 470 in file "outputs_MC50.c"
 13036 ;; Parameters:    Size  Location     Type
 13037 ;;  stateMotor      1    wreg     enum E10381
 13038 ;; Auto vars:     Size  Location     Type
 13039 ;;  stateMotor      1    1[BANK0 ] enum E10381
 13040 ;;  state           1    0[BANK0 ] _Bool 
 13041 ;; Return value:  Size  Location     Type
 13042 ;;                  1    wreg      _Bool 
 13043 ;; Registers used:
 13044 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13045 ;; Tracked objects:
 13046 ;;		On entry : 3F/1
 13047 ;;		On exit  : 3F/0
 13048 ;;		Unchanged: 0/0
 13049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13051 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13052 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13053 ;;      Totals:         9       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13054 ;;Total ram usage:       11 bytes
 13055 ;; Hardware stack levels used: 1
 13056 ;; Hardware stack levels required when called: 6
 13057 ;; This function calls:
 13058 ;;		___lmul
 13059 ;;		_getTimeDecelaration
 13060 ;; This function is called by:
 13061 ;;		_controlVelocity
 13062 ;; This function uses a non-reentrant model
 13063 ;;
 13064                           
 13065                           	psect	text27
 13066  006D48                     __ptext27:
 13067                           	callstack 0
 13068  006D48                     _getStateOpenPosition:
 13069                           	callstack 21
 13070                           
 13071                           ; BSR set to: 1
 13072                           ;incstack = 0
 13073                           ;getStateOpenPosition@stateMotor stored from wreg
 13074  006D48  0100               	movlb	0	; () banked
 13075  006D4A  6FD9               	movwf	getStateOpenPosition@stateMotor& (0+255),b
 13076                           
 13077                           ;outputs_MC50.c: 470: _Bool getStateOpenPosition(stateMotor_enum stateMotor);outputs_MC5
      +                          0.c: 471: {;outputs_MC50.c: 472:     _Bool state=0;
 13078  006D4C  0E00               	movlw	0
 13079  006D4E  0100               	movlb	0	; () banked
 13080  006D50  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 13081                           
 13082                           ; BSR set to: 0
 13083                           ;outputs_MC50.c: 473:     if(var_sys.PositionIsLost==YES)
 13084  006D52  0101               	movlb	1	; () banked
 13085  006D54  059D               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 13086  006D56  A4D8               	btfss	status,2,c
 13087  006D58  D002               	goto	l20697
 13088  006D5A                     u24180:
 13089                           
 13090                           ; BSR set to: 1
 13091                           ;outputs_MC50.c: 474:     {;outputs_MC50.c: 475:         state=1;
 13092  006D5A  0E01               	movlw	1
 13093  006D5C  D046               	goto	L70
 13094  006D5E                     l20697:
 13095                           
 13096                           ; BSR set to: 1
 13097  006D5E  51AA               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 13098  006D60  0D14               	mullw	20
 13099  006D62  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 13100  006D66  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 13101  006D6A  0E00               	movlw	0
 13102  006D6C  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 13103  006D6E  0EFF               	movlw	255
 13104  006D70  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 13105  006D72  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 13106  006D74  51DA               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 13107  006D76  5C32               	subwf	??_getStateOpenPosition^0,w,c
 13108  006D78  51DB               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 13109  006D7A  5833               	subwfb	(??_getStateOpenPosition+1)^0,w,c
 13110  006D7C  51DC               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 13111  006D7E  5834               	subwfb	(??_getStateOpenPosition+2)^0,w,c
 13112  006D80  51DD               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 13113  006D82  5835               	subwfb	(??_getStateOpenPosition+3)^0,w,c
 13114  006D84  B0D8               	btfsc	status,0,c
 13115  006D86  D034               	goto	l20711
 13116                           
 13117                           ; BSR set to: 1
 13118  006D88  0E02               	movlw	2
 13119  006D8A  0100               	movlb	0	; () banked
 13120  006D8C  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 13121  006D8E  A4D8               	btfss	status,2,c
 13122  006D90  D02F               	goto	l20711
 13123                           
 13124                           ; BSR set to: 0
 13125                           ;outputs_MC50.c: 478:     {;outputs_MC50.c: 479:         if(var_sys_NVM.walkTime<(var_sy
      +                          s_NVM.decelarationOpen/2))
 13126  006D92  0101               	movlb	1	; () banked
 13127  006D94  90D8               	bcf	status,0,c
 13128  006D96  31A6               	rrcf	_var_sys_NVM& (0+255),w,b	;volatile
 13129  006D98  61AA               	cpfslt	(_var_sys_NVM+4)& (0+255),b	;volatile
 13130  006D9A  D001               	goto	l20705
 13131  006D9C  D7DE               	goto	u24180
 13132  006D9E                     l20705:
 13133                           
 13134                           ; BSR set to: 1
 13135  006D9E  51AA               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 13136  006DA0  0D14               	mullw	20
 13137  006DA2  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 13138  006DA6  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 13139  006DAA  0E00               	movlw	0
 13140  006DAC  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 13141  006DAE  0EFF               	movlw	255
 13142  006DB0  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 13143  006DB2  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 13144  006DB4  0ED8               	movlw	216
 13145  006DB6  2432               	addwf	??_getStateOpenPosition^0,w,c
 13146  006DB8  6E36               	movwf	(??_getStateOpenPosition+4)^0,c
 13147  006DBA  0EFF               	movlw	255
 13148  006DBC  2033               	addwfc	(??_getStateOpenPosition+1)^0,w,c
 13149  006DBE  6E37               	movwf	(??_getStateOpenPosition+5)^0,c
 13150  006DC0  0EFF               	movlw	255
 13151  006DC2  2034               	addwfc	(??_getStateOpenPosition+2)^0,w,c
 13152  006DC4  6E38               	movwf	(??_getStateOpenPosition+6)^0,c
 13153  006DC6  0EFF               	movlw	255
 13154  006DC8  2035               	addwfc	(??_getStateOpenPosition+3)^0,w,c
 13155  006DCA  6E39               	movwf	(??_getStateOpenPosition+7)^0,c
 13156  006DCC  5173               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 13157  006DCE  5C36               	subwf	(??_getStateOpenPosition+4)^0,w,c
 13158  006DD0  5174               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 13159  006DD2  5837               	subwfb	(??_getStateOpenPosition+5)^0,w,c
 13160  006DD4  5175               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 13161  006DD6  5838               	subwfb	(??_getStateOpenPosition+6)^0,w,c
 13162  006DD8  5039               	movf	(??_getStateOpenPosition+7)^0,w,c
 13163  006DDA  0A80               	xorlw	128
 13164  006DDC  6E3A               	movwf	(??_getStateOpenPosition+8)^0,c
 13165  006DDE  5176               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 13166  006DE0  0A80               	xorlw	128
 13167  006DE2  583A               	subwfb	(??_getStateOpenPosition+8)^0,w,c
 13168  006DE4  A0D8               	btfss	status,0,c
 13169  006DE6  D7B9               	goto	u24180
 13170                           
 13171                           ; BSR set to: 1
 13172                           ;outputs_MC50.c: 488:         {;outputs_MC50.c: 489:             state= 0;
 13173  006DE8  0E00               	movlw	0
 13174  006DEA                     L70:
 13175  006DEA  0100               	movlb	0	; () banked
 13176  006DEC  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 13177  006DEE  D035               	goto	l2270
 13178  006DF0                     l20711:
 13179  006DF0  0E02               	movlw	2
 13180  006DF2  0100               	movlb	0	; () banked
 13181  006DF4  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 13182  006DF6  B4D8               	btfsc	status,2,c
 13183  006DF8  D003               	goto	u24240
 13184                           
 13185                           ; BSR set to: 0
 13186  006DFA  05D9               	decf	getStateOpenPosition@stateMotor& (0+255),w,b
 13187  006DFC  A4D8               	btfss	status,2,c
 13188  006DFE  D02D               	goto	l2270
 13189  006E00                     u24240:
 13190                           
 13191                           ; BSR set to: 0
 13192                           ;outputs_MC50.c: 493:     {;outputs_MC50.c: 494:          if((var_sys_NVM.learningTimeTo
      +                          Open)<(((unsigned long)var_sys_NVM.decelarationOpen*( 500/50))))
 13193  006E00  0101               	movlb	1	; () banked
 13194  006E02  51A6               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 13195  006E04  6E1D               	movwf	___lmul@multiplier^0,c
 13196  006E06  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 13197  006E08  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 13198  006E0A  6A20               	clrf	(___lmul@multiplier+3)^0,c
 13199  006E0C  0E0A               	movlw	10
 13200  006E0E  6E21               	movwf	___lmul@multiplicand^0,c
 13201  006E10  0E00               	movlw	0
 13202  006E12  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 13203  006E14  0E00               	movlw	0
 13204  006E16  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 13205  006E18  0E00               	movlw	0
 13206  006E1A  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 13207  006E1C  ECC8  F046         	call	___lmul	;wreg free
 13208  006E20  501D               	movf	?___lmul^0,w,c
 13209  006E22  0101               	movlb	1	; () banked
 13210  006E24  5DDA               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 13211  006E26  501E               	movf	(?___lmul+1)^0,w,c
 13212  006E28  59DB               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 13213  006E2A  501F               	movf	(?___lmul+2)^0,w,c
 13214  006E2C  59DC               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 13215  006E2E  5020               	movf	(?___lmul+3)^0,w,c
 13216  006E30  59DD               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 13217  006E32  A0D8               	btfss	status,0,c
 13218  006E34  D792               	goto	u24180
 13219                           
 13220                           ; BSR set to: 1
 13221  006E36  0100               	movlb	0	; () banked
 13222  006E38  51D9               	movf	getStateOpenPosition@stateMotor& (0+255),w,b
 13223  006E3A  EC9C  F03A         	call	_getTimeDecelaration
 13224  006E3E  0101               	movlb	1	; () banked
 13225  006E40  5173               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 13226  006E42  5C29               	subwf	?_getTimeDecelaration^0,w,c
 13227  006E44  5174               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 13228  006E46  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 13229  006E48  5175               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 13230  006E4A  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 13231  006E4C  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 13232  006E4E  0A80               	xorlw	128
 13233  006E50  6E32               	movwf	??_getStateOpenPosition^0,c
 13234  006E52  5176               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 13235  006E54  0A80               	xorlw	128
 13236  006E56  5832               	subwfb	??_getStateOpenPosition^0,w,c
 13237  006E58  D7C5               	goto	L71
 13238  006E5A                     l2270:
 13239                           
 13240                           ; BSR set to: 0
 13241                           ;outputs_MC50.c: 507:     return state;
 13242  006E5A  51D8               	movf	getStateOpenPosition@state& (0+255),w,b
 13243                           
 13244                           ; BSR set to: 0
 13245  006E5C  0012               	return		;funcret
 13246  006E5E                     __end_of_getStateOpenPosition:
 13247                           	callstack 0
 13248                           
 13249 ;; *************** function _InitSoftStop *****************
 13250 ;; Defined at:
 13251 ;;		line 849 in file "sm_ControlGate_MC50.c"
 13252 ;; Parameters:    Size  Location     Type
 13253 ;;		None
 13254 ;; Auto vars:     Size  Location     Type
 13255 ;;		None
 13256 ;; Return value:  Size  Location     Type
 13257 ;;                  1    wreg      void 
 13258 ;; Registers used:
 13259 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13260 ;; Tracked objects:
 13261 ;;		On entry : 3F/1
 13262 ;;		On exit  : 3F/1
 13263 ;;		Unchanged: 0/0
 13264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13267 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13268 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13269 ;;Total ram usage:        1 bytes
 13270 ;; Hardware stack levels used: 1
 13271 ;; Hardware stack levels required when called: 5
 13272 ;; This function calls:
 13273 ;;		_GetMotorPower
 13274 ;; This function is called by:
 13275 ;;		_controlVelocity
 13276 ;; This function uses a non-reentrant model
 13277 ;;
 13278                           
 13279                           	psect	text28
 13280  00901E                     __ptext28:
 13281                           	callstack 0
 13282  00901E                     _InitSoftStop:
 13283                           	callstack 22
 13284                           
 13285                           ; BSR set to: 1
 13286                           ;sm_ControlGate_MC50.c: 850:     if (((var_sys.AutoInversionActiveStop == YES)|| (var_sy
      +                          s.AutoInversionActive == YES))&&(var_sys_NVM.softstop >0)) {
 13287                           
 13288                           ; BSR set to: 0
 13289                           ;incstack = 0
 13290  00901E  0567               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 13291  009020  B4D8               	btfsc	status,2,c
 13292  009022  D003               	goto	u24280
 13293                           
 13294                           ; BSR set to: 1
 13295  009024  057C               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13296  009026  A4D8               	btfss	status,2,c
 13297  009028  0012               	return	
 13298  00902A                     u24280:
 13299                           
 13300                           ; BSR set to: 1
 13301  00902A  51B9               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 13302  00902C  B4D8               	btfsc	status,2,c
 13303  00902E  0012               	return	
 13304                           
 13305                           ; BSR set to: 1
 13306                           ;sm_ControlGate_MC50.c: 853:         var_sys.velocityFactor = 0;
 13307  009030  0E00               	movlw	0
 13308  009032  6F64               	movwf	(_var_sys+15)& (0+255),b	;volatile
 13309  009034  0E00               	movlw	0
 13310  009036  6F63               	movwf	(_var_sys+14)& (0+255),b	;volatile
 13311                           
 13312                           ;sm_ControlGate_MC50.c: 854:         var_sys.velocityFactorstop = 0;
 13313  009038  0E00               	movlw	0
 13314  00903A  6F66               	movwf	(_var_sys+17)& (0+255),b	;volatile
 13315  00903C  0E00               	movlw	0
 13316  00903E  6F65               	movwf	(_var_sys+16)& (0+255),b	;volatile
 13317                           
 13318                           ; BSR set to: 1
 13319                           ;sm_ControlGate_MC50.c: 855:         var_sys.velocityFactorstop = GetMotorPower();
 13320  009040  EC49  F03C         	call	_GetMotorPower	;wreg free
 13321  009044  6E14               	movwf	??_InitSoftStop^0,c
 13322  009046  5014               	movf	??_InitSoftStop^0,w,c
 13323  009048  0101               	movlb	1	; () banked
 13324  00904A  6F65               	movwf	(_var_sys+16)& (0+255),b	;volatile
 13325  00904C  6B66               	clrf	(_var_sys+17)& (0+255),b	;volatile
 13326                           
 13327                           ; BSR set to: 1
 13328                           ;sm_ControlGate_MC50.c: 859:         ts_system.timeSoftStop = var_sys.velocityFactorstop
      +                           + 1;
 13329  00904E  0E01               	movlw	1
 13330  009050  2565               	addwf	(_var_sys+16)& (0+255),w,b	;volatile
 13331  009052  0100               	movlb	0	; () banked
 13332  009054  6FA7               	movwf	(_ts_system+24)& (0+255),b	;volatile
 13333  009056  0E00               	movlw	0
 13334  009058  0101               	movlb	1	; () banked
 13335  00905A  2166               	addwfc	(_var_sys+17)& (0+255),w,b	;volatile
 13336  00905C  0100               	movlb	0	; () banked
 13337  00905E  6FA8               	movwf	(_ts_system+25)& (0+255),b	;volatile
 13338                           
 13339                           ; BSR set to: 0
 13340                           ;sm_ControlGate_MC50.c: 861:         var_sys.SoftStopDecrementControl = 10 - var_sys_NVM
      +                          .softstop;
 13341  009060  0101               	movlb	1	; () banked
 13342  009062  51B9               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 13343  009064  080A               	sublw	10
 13344  009066  6F68               	movwf	(_var_sys+19)& (0+255),b	;volatile
 13345                           
 13346                           ; BSR set to: 1
 13347  009068  0012               	return		;funcret
 13348  00906A                     __end_of_InitSoftStop:
 13349                           	callstack 0
 13350                           
 13351 ;; *************** function _ControlDecelarationFactor *****************
 13352 ;; Defined at:
 13353 ;;		line 463 in file "outputs_MC50.c"
 13354 ;; Parameters:    Size  Location     Type
 13355 ;;		None
 13356 ;; Auto vars:     Size  Location     Type
 13357 ;;		None
 13358 ;; Return value:  Size  Location     Type
 13359 ;;                  1    wreg      void 
 13360 ;; Registers used:
 13361 ;;		wreg, status,2, status,0, prodl, prodh
 13362 ;; Tracked objects:
 13363 ;;		On entry : 3E/1
 13364 ;;		On exit  : 3F/1
 13365 ;;		Unchanged: 0/0
 13366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13371 ;;Total ram usage:        0 bytes
 13372 ;; Hardware stack levels used: 1
 13373 ;; Hardware stack levels required when called: 4
 13374 ;; This function calls:
 13375 ;;		Nothing
 13376 ;; This function is called by:
 13377 ;;		_controlVelocity
 13378 ;; This function uses a non-reentrant model
 13379 ;;
 13380                           
 13381                           	psect	text29
 13382  009A76                     __ptext29:
 13383                           	callstack 0
 13384  009A76                     _ControlDecelarationFactor:
 13385                           	callstack 23
 13386                           
 13387                           ;outputs_MC50.c: 465:     powerControl_st.decelarationCyclesOn=1;
 13388                           
 13389                           ; BSR set to: 1
 13390                           ;incstack = 0
 13391  009A76  0E01               	movlw	1
 13392  009A78  0101               	movlb	1	; () banked
 13393  009A7A  6F3D               	movwf	(_powerControl_st+1)& (0+255),b
 13394                           
 13395                           ;outputs_MC50.c: 466:     powerControl_st.decelarationCyclesOff=2;
 13396  009A7C  0E02               	movlw	2
 13397  009A7E  6F3E               	movwf	(_powerControl_st+2)& (0+255),b
 13398                           
 13399                           ; BSR set to: 1
 13400                           ;outputs_MC50.c: 467:     powerControl_st.decelarationPower=var_sys_NVM.velocityDecelara
      +                          tion*var_sys.Torquerelanty;
 13401  009A80  51BE               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 13402  009A82  036A               	mulwf	(_var_sys+21)& (0+255),b	;volatile
 13403  009A84  CFF3 F13F          	movff	prodl,_powerControl_st+3
 13404                           
 13405                           ; BSR set to: 1
 13406  009A88  0012               	return		;funcret
 13407  009A8A                     __end_of_ControlDecelarationFactor:
 13408                           	callstack 0
 13409                           
 13410 ;; *************** function _actionZone_Opened *****************
 13411 ;; Defined at:
 13412 ;;		line 514 in file "sm_ControlGate_MC50.c"
 13413 ;; Parameters:    Size  Location     Type
 13414 ;;		None
 13415 ;; Auto vars:     Size  Location     Type
 13416 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 13417 ;;  securityClos    1   31[COMRAM] enum E10397
 13418 ;; Return value:  Size  Location     Type
 13419 ;;                  1    wreg      void 
 13420 ;; Registers used:
 13421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13422 ;; Tracked objects:
 13423 ;;		On entry : 3F/0
 13424 ;;		On exit  : 3E/0
 13425 ;;		Unchanged: 0/0
 13426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13428 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13430 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13431 ;;Total ram usage:        2 bytes
 13432 ;; Hardware stack levels used: 1
 13433 ;; Hardware stack levels required when called: 7
 13434 ;; This function calls:
 13435 ;;		_CloseOrder
 13436 ;;		_GetOpenOrder
 13437 ;;		_GetSecurityStateInClosing
 13438 ;;		_InitFullAutoTime
 13439 ;;		_InitWalkAutoTime
 13440 ;;		_OpenFullOrder
 13441 ;;		_OpenWalkOrder
 13442 ;;		_VerifyFollowMe
 13443 ;; This function is called by:
 13444 ;;		_sm_execute_ControlGate
 13445 ;; This function uses a non-reentrant model
 13446 ;;
 13447                           
 13448                           	psect	text30
 13449  005A26                     __ptext30:
 13450                           	callstack 0
 13451  005A26                     _actionZone_Opened:
 13452                           	callstack 22
 13453                           
 13454                           ; BSR set to: 0
 13455                           ;sm_ControlGate_MC50.c: 515:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13456                           
 13457                           ; BSR set to: 1
 13458                           ;incstack = 0
 13459  005A26  ECB0  F03D         	call	_GetSecurityStateInClosing	;wreg free
 13460  005A2A  6E20               	movwf	actionZone_Opened@securityClosing^0,c
 13461                           
 13462                           ;sm_ControlGate_MC50.c: 517:     if ((securityClosing != NO) && (Abertura_pedonal == 0))
      +                           {
 13463  005A2C  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13464  005A2E  B4D8               	btfsc	status,2,c
 13465  005A30  D007               	goto	l23065
 13466  005A32  0100               	movlb	0	; () banked
 13467  005A34  5172               	movf	_Abertura_pedonal& (0+255),w,b
 13468  005A36  A4D8               	btfss	status,2,c
 13469  005A38  D003               	goto	l23065
 13470                           
 13471                           ; BSR set to: 0
 13472                           ;sm_ControlGate_MC50.c: 518:         InitFullAutoTime();
 13473  005A3A  ECB6  F04C         	call	_InitFullAutoTime	;wreg free
 13474                           
 13475                           ;sm_ControlGate_MC50.c: 519:     }
 13476  005A3E  D008               	goto	l2751
 13477  005A40                     l23065:
 13478  005A40  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13479  005A42  B4D8               	btfsc	status,2,c
 13480  005A44  D005               	goto	l2751
 13481  005A46  0100               	movlb	0	; () banked
 13482  005A48  0572               	decf	_Abertura_pedonal& (0+255),w,b
 13483  005A4A  B4D8               	btfsc	status,2,c
 13484                           
 13485                           ; BSR set to: 0
 13486                           ;sm_ControlGate_MC50.c: 521:          InitWalkAutoTime();
 13487  005A4C  EC45  F04D         	call	_InitWalkAutoTime	;wreg free
 13488  005A50                     l2751:
 13489                           
 13490                           ;sm_ControlGate_MC50.c: 524:     TypeCMD typeOpenOrder = GetOpenOrder();
 13491  005A50  EC00  F02E         	call	_GetOpenOrder	;wreg free
 13492  005A54  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13493                           
 13494                           ;sm_ControlGate_MC50.c: 526:     VerifyFollowMe(securityClosing);
 13495  005A56  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13496  005A58  EC1C  F04C         	call	_VerifyFollowMe
 13497                           
 13498                           ; BSR set to: 1
 13499                           ;sm_ControlGate_MC50.c: 530:     if ((PORTBbits.RB1==0) && (var_sys_NVM.autoTimeFullClos
      +                          e != 0)&&(var_sys.AutoCloseActive != 0) && (button_struct.current != 0x35)&& (var_sys_NV
      +                          M.operationMode == ModoCondominio)){
 13500  005A5C  B28E               	btfsc	142,1,c	;volatile
 13501  005A5E  D010               	goto	l2753
 13502                           
 13503                           ; BSR set to: 1
 13504  005A60  51AB               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13505  005A62  B4D8               	btfsc	status,2,c
 13506  005A64  D00D               	goto	l2753
 13507                           
 13508                           ; BSR set to: 1
 13509  005A66  5178               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13510  005A68  B4D8               	btfsc	status,2,c
 13511  005A6A  D00A               	goto	l2753
 13512                           
 13513                           ; BSR set to: 1
 13514  005A6C  0E35               	movlw	53
 13515  005A6E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 13516  005A70  B4D8               	btfsc	status,2,c
 13517  005A72  D006               	goto	l2753
 13518                           
 13519                           ; BSR set to: 1
 13520  005A74  0E02               	movlw	2
 13521  005A76  19B2               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13522  005A78  A4D8               	btfss	status,2,c
 13523  005A7A  D002               	goto	l2753
 13524                           
 13525                           ; BSR set to: 1
 13526                           ;sm_ControlGate_MC50.c: 531:       typeOpenOrder = NoCMD;
 13527  005A7C  0E00               	movlw	0
 13528  005A7E  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13529  005A80                     l2753:
 13530                           
 13531                           ; BSR set to: 1
 13532                           ;sm_ControlGate_MC50.c: 535:      if (typeOpenOrder != NoCMD)
 13533  005A80  5021               	movf	actionZone_Opened@typeOpenOrder^0,w,c
 13534  005A82  B4D8               	btfsc	status,2,c
 13535  005A84  D059               	goto	l2754
 13536                           
 13537                           ; BSR set to: 1
 13538                           ;sm_ControlGate_MC50.c: 536:      {;sm_ControlGate_MC50.c: 539:         ts_system.timeSi
      +                          nalizationDigit = (1000/50) * 3;
 13539  005A86  0E00               	movlw	0
 13540  005A88  0100               	movlb	0	; () banked
 13541  005A8A  6F9C               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13542  005A8C  0E3C               	movlw	60
 13543  005A8E  6F9B               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13544                           
 13545                           ; BSR set to: 0
 13546                           ;sm_ControlGate_MC50.c: 541:        if ( var_sys_NVM.operationMode == ModoCondominio && 
      +                          var_sys_NVM.autoTimeFullClose == 0 && (typeOpenOrder == TypeFull|| typeOpenOrder == Type
      +                          FullClose ))
 13547  005A90  0E02               	movlw	2
 13548  005A92  0101               	movlb	1	; () banked
 13549  005A94  19B2               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13550  005A96  A4D8               	btfss	status,2,c
 13551  005A98  D00D               	goto	l23097
 13552                           
 13553                           ; BSR set to: 1
 13554  005A9A  51AB               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13555  005A9C  A4D8               	btfss	status,2,c
 13556  005A9E  D00A               	goto	l23097
 13557                           
 13558                           ; BSR set to: 1
 13559  005AA0  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13560  005AA2  B4D8               	btfsc	status,2,c
 13561  005AA4  D004               	goto	u27570
 13562                           
 13563                           ; BSR set to: 1
 13564  005AA6  0E04               	movlw	4
 13565  005AA8  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13566  005AAA  A4D8               	btfss	status,2,c
 13567  005AAC  D003               	goto	l23097
 13568  005AAE                     u27570:
 13569                           
 13570                           ; BSR set to: 1
 13571                           ;sm_ControlGate_MC50.c: 542:         {;sm_ControlGate_MC50.c: 544:             CloseOrde
      +                          r();
 13572  005AAE  ECAA  F04B         	call	_CloseOrder	;wreg free
 13573                           
 13574                           ;sm_ControlGate_MC50.c: 546:         }
 13575  005AB2  0012               	return	
 13576  005AB4                     l23097:
 13577                           
 13578                           ; BSR set to: 1
 13579  005AB4  51B6               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 13580  005AB6  B4D8               	btfsc	status,2,c
 13581  005AB8  D013               	goto	l23111
 13582                           
 13583                           ; BSR set to: 1
 13584                           ;sm_ControlGate_MC50.c: 553:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && var_sys.Statedoorcontrol != st_Opened) {
 13585  005ABA  0E03               	movlw	3
 13586  005ABC  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13587  005ABE  A4D8               	btfss	status,2,c
 13588  005AC0  D00A               	goto	l23107
 13589                           
 13590                           ; BSR set to: 1
 13591  005AC2  5159               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 13592  005AC4  A4D8               	btfss	status,2,c
 13593  005AC6  D007               	goto	l23107
 13594                           
 13595                           ; BSR set to: 1
 13596  005AC8  0E04               	movlw	4
 13597  005ACA  1971               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13598  005ACC  B4D8               	btfsc	status,2,c
 13599  005ACE  D003               	goto	l23107
 13600  005AD0                     u27610:
 13601                           
 13602                           ; BSR set to: 1
 13603                           ;sm_ControlGate_MC50.c: 555:                 OpenFullOrder();
 13604  005AD0  ECBD  F04B         	call	_OpenFullOrder	;wreg free
 13605                           
 13606                           ;sm_ControlGate_MC50.c: 556:             } else if (typeOpenOrder == TypeFullClose) {
 13607  005AD4  0012               	return	
 13608  005AD6                     l23107:
 13609                           
 13610                           ; BSR set to: 1
 13611  005AD6  0E04               	movlw	4
 13612  005AD8  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13613  005ADA  A4D8               	btfss	status,2,c
 13614  005ADC  0012               	return	
 13615  005ADE  D7E7               	goto	u27570
 13616  005AE0                     l23111:
 13617                           
 13618                           ; BSR set to: 1
 13619  005AE0  0E03               	movlw	3
 13620  005AE2  1960               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13621  005AE4  A4D8               	btfss	status,2,c
 13622  005AE6  D008               	goto	l23119
 13623                           
 13624                           ; BSR set to: 1
 13625  005AE8  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13626  005AEA  A4D8               	btfss	status,2,c
 13627  005AEC  D005               	goto	l23119
 13628  005AEE                     u27640:
 13629                           
 13630                           ; BSR set to: 1
 13631                           ;sm_ControlGate_MC50.c: 563:             OpenFullOrder();
 13632  005AEE  ECBD  F04B         	call	_OpenFullOrder	;wreg free
 13633  005AF2                     l23117:
 13634                           
 13635                           ; BSR set to: 1
 13636                           ;sm_ControlGate_MC50.c: 565:             var_sys.AutoInversionActive = NO;
 13637  005AF2  0E00               	movlw	0
 13638  005AF4  6F7C               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13639                           
 13640                           ;sm_ControlGate_MC50.c: 567:         } else if (var_sys.LastState == InClose && typeOpen
      +                          Order == TypeWalk) {
 13641  005AF6  0012               	return	
 13642  005AF8                     l23119:
 13643                           
 13644                           ; BSR set to: 1
 13645  005AF8  0E03               	movlw	3
 13646  005AFA  1960               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13647  005AFC  A4D8               	btfss	status,2,c
 13648  005AFE  D007               	goto	l23127
 13649                           
 13650                           ; BSR set to: 1
 13651  005B00  0E02               	movlw	2
 13652  005B02  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13653  005B04  A4D8               	btfss	status,2,c
 13654  005B06  D003               	goto	l23127
 13655                           
 13656                           ; BSR set to: 1
 13657                           ;sm_ControlGate_MC50.c: 569:             OpenWalkOrder();
 13658  005B08  ECAE  F043         	call	_OpenWalkOrder	;wreg free
 13659  005B0C  D7F2               	goto	l23117
 13660  005B0E                     l23127:
 13661                           
 13662                           ; BSR set to: 1
 13663  005B0E  0E03               	movlw	3
 13664  005B10  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13665  005B12  A4D8               	btfss	status,2,c
 13666  005B14  D005               	goto	l23137
 13667                           
 13668                           ; BSR set to: 1
 13669                           ;sm_ControlGate_MC50.c: 574:             if (var_sys.Statedoorcontrol == st_Opened){
 13670  005B16  0E04               	movlw	4
 13671  005B18  1971               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13672  005B1A  B4D8               	btfsc	status,2,c
 13673  005B1C  0012               	return	
 13674  005B1E  D7E7               	goto	u27640
 13675  005B20                     l23137:
 13676                           
 13677                           ; BSR set to: 1
 13678  005B20  51AB               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13679  005B22  B4D8               	btfsc	status,2,c
 13680  005B24  D007               	goto	l23143
 13681                           
 13682                           ; BSR set to: 1
 13683  005B26  0E02               	movlw	2
 13684  005B28  19B2               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13685  005B2A  A4D8               	btfss	status,2,c
 13686  005B2C  D003               	goto	l23143
 13687                           
 13688                           ; BSR set to: 1
 13689                           ;sm_ControlGate_MC50.c: 582:         {;sm_ControlGate_MC50.c: 584:             InitFullA
      +                          utoTime();
 13690  005B2E  ECB6  F04C         	call	_InitFullAutoTime	;wreg free
 13691                           
 13692                           ;sm_ControlGate_MC50.c: 586:         }
 13693  005B32  0012               	return	
 13694  005B34                     l23143:
 13695                           
 13696                           ; BSR set to: 1
 13697  005B34  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13698  005B36  D7D1               	goto	L72
 13699  005B38                     l2754:
 13700                           
 13701                           ; BSR set to: 1
 13702  005B38  B28E               	btfsc	142,1,c	;volatile
 13703  005B3A  D00A               	goto	l23151
 13704                           
 13705                           ; BSR set to: 1
 13706  005B3C  51AB               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13707  005B3E  B4D8               	btfsc	status,2,c
 13708  005B40  D007               	goto	l23151
 13709                           
 13710                           ; BSR set to: 1
 13711                           ;sm_ControlGate_MC50.c: 597:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 13712  005B42  51AB               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13713  005B44  0D14               	mullw	20
 13714  005B46  CFF3 F0A1          	movff	prodl,_ts_system+18	;volatile
 13715  005B4A  CFF4 F0A2          	movff	prodh,_ts_system+19	;volatile
 13716                           
 13717                           ;sm_ControlGate_MC50.c: 599:     }
 13718  005B4E  0012               	return	
 13719  005B50                     l23151:
 13720                           
 13721                           ; BSR set to: 1
 13722  005B50  058F               	decf	(_var_sys+58)& (0+255),w,b	;volatile
 13723  005B52  A4D8               	btfss	status,2,c
 13724  005B54  D00E               	goto	l23161
 13725                           
 13726                           ; BSR set to: 1
 13727  005B56  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13728  005B58  A4D8               	btfss	status,2,c
 13729  005B5A  D00B               	goto	l23161
 13730                           
 13731                           ; BSR set to: 1
 13732                           ;sm_ControlGate_MC50.c: 603:         var_sys.StateFollowIsOn = NO;
 13733  005B5C  0E00               	movlw	0
 13734  005B5E  6F8F               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13735                           
 13736                           ; BSR set to: 1
 13737                           ;sm_ControlGate_MC50.c: 610:         var_sys.AutoCloseActive = var_sys_NVM.folow_me;
 13738  005B60  C1BB  F178         	movff	_var_sys_NVM+21,_var_sys+35	;volatile
 13739                           
 13740                           ; BSR set to: 1
 13741                           ;sm_ControlGate_MC50.c: 611:         ts_system.timeWaitToClose = var_sys_NVM.folow_me * 
      +                          (1000/50);
 13742  005B64  51BB               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13743  005B66  0D14               	mullw	20
 13744  005B68  CFF3 F0A1          	movff	prodl,_ts_system+18	;volatile
 13745  005B6C  CFF4 F0A2          	movff	prodh,_ts_system+19	;volatile
 13746                           
 13747                           ;sm_ControlGate_MC50.c: 613:     }else if (ts_system.timeWaitToClose <= 0 && var_sys_NVM
      +                          .operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES && var_sys.AutoC
      +                          loseActive != 0) {
 13748  005B70  0012               	return	
 13749  005B72                     l23161:
 13750                           
 13751                           ; BSR set to: 1
 13752  005B72  0100               	movlb	0	; () banked
 13753  005B74  BFA2               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13754  005B76  D005               	goto	u27760
 13755  005B78  51A2               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13756  005B7A  E112               	bnz	l23173
 13757  005B7C  05A1               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13758  005B7E  B0D8               	btfsc	status,0,c
 13759  005B80  D00F               	goto	l23173
 13760  005B82                     u27760:
 13761                           
 13762                           ; BSR set to: 0
 13763  005B82  0101               	movlb	1	; () banked
 13764  005B84  05B2               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13765  005B86  A4D8               	btfss	status,2,c
 13766  005B88  D00B               	goto	l23173
 13767                           
 13768                           ; BSR set to: 1
 13769  005B8A  05A5               	decf	(_var_sys+80)& (0+255),w,b	;volatile
 13770  005B8C  A4D8               	btfss	status,2,c
 13771  005B8E  D008               	goto	l23173
 13772                           
 13773                           ; BSR set to: 1
 13774  005B90  5178               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13775  005B92  B4D8               	btfsc	status,2,c
 13776  005B94  D005               	goto	l23173
 13777                           
 13778                           ; BSR set to: 1
 13779                           ;sm_ControlGate_MC50.c: 615:         var_sys.AutoCloseActive = 0;
 13780  005B96  0E00               	movlw	0
 13781  005B98  6F78               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13782                           
 13783                           ;sm_ControlGate_MC50.c: 617:         var_sys.passoAPassoAutoClose = NO;
 13784  005B9A  0E00               	movlw	0
 13785  005B9C  6FA5               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13786  005B9E  D787               	goto	u27570
 13787  005BA0                     l23173:
 13788  005BA0  0100               	movlb	0	; () banked
 13789  005BA2  BFA2               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13790  005BA4  D005               	goto	u27800
 13791  005BA6  51A2               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13792  005BA8  E117               	bnz	l23191
 13793  005BAA  05A1               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13794  005BAC  B0D8               	btfsc	status,0,c
 13795  005BAE  D014               	goto	l23191
 13796  005BB0                     u27800:
 13797                           
 13798                           ; BSR set to: 0
 13799  005BB0  0101               	movlb	1	; () banked
 13800  005BB2  05B2               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13801  005BB4  B4D8               	btfsc	status,2,c
 13802  005BB6  D010               	goto	l23191
 13803                           
 13804                           ; BSR set to: 1
 13805  005BB8  5178               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13806  005BBA  B4D8               	btfsc	status,2,c
 13807  005BBC  D00D               	goto	l23191
 13808                           
 13809                           ; BSR set to: 1
 13810                           ;sm_ControlGate_MC50.c: 621:         var_sys.AutoCloseActive = 0;
 13811  005BBE  0E00               	movlw	0
 13812  005BC0  6F78               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13813                           
 13814                           ; BSR set to: 1
 13815                           ;sm_ControlGate_MC50.c: 627:         if ( var_sys.AutoInversionActive == YES )
 13816  005BC2  057C               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13817  005BC4  A4D8               	btfss	status,2,c
 13818  005BC6  D003               	goto	l23187
 13819                           
 13820                           ; BSR set to: 1
 13821                           ;sm_ControlGate_MC50.c: 628:         {;sm_ControlGate_MC50.c: 629:             var_sys.A
      +                          utoInversionActive = NO;
 13822  005BC8  0E00               	movlw	0
 13823  005BCA  6F7C               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13824  005BCC  D781               	goto	u27610
 13825  005BCE                     l23187:
 13826                           
 13827                           ; BSR set to: 1
 13828                           ;sm_ControlGate_MC50.c: 633:         {;sm_ControlGate_MC50.c: 634:             CloseOrde
      +                          r();
 13829  005BCE  ECAA  F04B         	call	_CloseOrder	;wreg free
 13830                           
 13831                           ; BSR set to: 1
 13832                           ;sm_ControlGate_MC50.c: 635:             var_sys.PositionIsLost = 0;
 13833  005BD2  0E00               	movlw	0
 13834  005BD4  6F9D               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13835  005BD6  0012               	return	
 13836  005BD8                     l23191:
 13837  005BD8  0101               	movlb	1	; () banked
 13838  005BDA  0577               	decf	(_var_sys+34)& (0+255),w,b	;volatile
 13839  005BDC  A4D8               	btfss	status,2,c
 13840  005BDE  0012               	return	
 13841                           
 13842                           ; BSR set to: 1
 13843  005BE0  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13844  005BE2  A4D8               	btfss	status,2,c
 13845  005BE4  0012               	return	
 13846                           
 13847                           ; BSR set to: 1
 13848                           ;sm_ControlGate_MC50.c: 638:     {;sm_ControlGate_MC50.c: 639:         if (ts_system.tim
      +                          eSinalizationDigit <= 1) {
 13849  005BE6  0100               	movlb	0	; () banked
 13850  005BE8  BF9C               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
 13851  005BEA  D006               	goto	u27860
 13852  005BEC  519C               	movf	(_ts_system+13)& (0+255),w,b	;volatile
 13853  005BEE  E103               	bnz	u27861
 13854  005BF0  0E02               	movlw	2
 13855  005BF2  5D9B               	subwf	(_ts_system+12)& (0+255),w,b	;volatile
 13856  005BF4  B0D8               	btfsc	status,0,c
 13857  005BF6                     u27861:
 13858  005BF6  0012               	return	
 13859  005BF8                     u27860:
 13860                           
 13861                           ; BSR set to: 0
 13862                           ;sm_ControlGate_MC50.c: 640:             var_sys.DigitSinalizedTemp = NO;
 13863  005BF8  0E00               	movlw	0
 13864  005BFA  0101               	movlb	1	; () banked
 13865  005BFC  6F77               	movwf	(_var_sys+34)& (0+255),b	;volatile
 13866  005BFE  0012               	return		;funcret
 13867  005C00                     __end_of_actionZone_Opened:
 13868                           	callstack 0
 13869                           
 13870 ;; *************** function _VerifyFollowMe *****************
 13871 ;; Defined at:
 13872 ;;		line 117 in file "sm_ControlGate_MC50.c"
 13873 ;; Parameters:    Size  Location     Type
 13874 ;;  securityClos    1    wreg     enum E10397
 13875 ;; Auto vars:     Size  Location     Type
 13876 ;;  securityClos    1   15[COMRAM] enum E10397
 13877 ;; Return value:  Size  Location     Type
 13878 ;;                  1    wreg      void 
 13879 ;; Registers used:
 13880 ;;		wreg, status,2, status,0
 13881 ;; Tracked objects:
 13882 ;;		On entry : 0/0
 13883 ;;		On exit  : 3F/1
 13884 ;;		Unchanged: 0/0
 13885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13887 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13889 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13890 ;;Total ram usage:        1 bytes
 13891 ;; Hardware stack levels used: 1
 13892 ;; Hardware stack levels required when called: 4
 13893 ;; This function calls:
 13894 ;;		Nothing
 13895 ;; This function is called by:
 13896 ;;		_actionZone_Opening
 13897 ;;		_actionZone_Opened
 13898 ;; This function uses a non-reentrant model
 13899 ;;
 13900                           
 13901                           	psect	text31
 13902  009838                     __ptext31:
 13903                           	callstack 0
 13904  009838                     _VerifyFollowMe:
 13905                           	callstack 24
 13906                           
 13907                           ;incstack = 0
 13908                           ;VerifyFollowMe@securityClose stored from wreg
 13909  009838  6E10               	movwf	VerifyFollowMe@securityClose^0,c
 13910                           
 13911                           ;sm_ControlGate_MC50.c: 120:     if (var_sys_NVM.folow_me != 0 && var_sys_NVM.photoCellI
      +                          nOpen == 0)
 13912  00983A  0101               	movlb	1	; () banked
 13913  00983C  51BB               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13914  00983E  B4D8               	btfsc	status,2,c
 13915  009840  0012               	return	
 13916                           
 13917                           ; BSR set to: 1
 13918  009842  51AE               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 13919  009844  A4D8               	btfss	status,2,c
 13920  009846  0012               	return	
 13921                           
 13922                           ; BSR set to: 1
 13923                           ;sm_ControlGate_MC50.c: 121:     {;sm_ControlGate_MC50.c: 122:         if (securityClose
      +                           == YES && var_sys.StateFollowIsOn == NO) {
 13924  009848  0410               	decf	VerifyFollowMe@securityClose^0,w,c
 13925  00984A  A4D8               	btfss	status,2,c
 13926  00984C  0012               	return	
 13927                           
 13928                           ; BSR set to: 1
 13929  00984E  518F               	movf	(_var_sys+58)& (0+255),w,b	;volatile
 13930  009850  A4D8               	btfss	status,2,c
 13931  009852  0012               	return	
 13932                           
 13933                           ; BSR set to: 1
 13934                           ;sm_ControlGate_MC50.c: 123:             var_sys.StateFollowIsOn = YES;
 13935  009854  0E01               	movlw	1
 13936  009856  6F8F               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13937                           
 13938                           ; BSR set to: 1
 13939  009858  0012               	return		;funcret
 13940  00985A                     __end_of_VerifyFollowMe:
 13941                           	callstack 0
 13942                           
 13943 ;; *************** function _CloseOrder *****************
 13944 ;; Defined at:
 13945 ;;		line 63 in file "sm_ControlGate_MC50.c"
 13946 ;; Parameters:    Size  Location     Type
 13947 ;;		None
 13948 ;; Auto vars:     Size  Location     Type
 13949 ;;		None
 13950 ;; Return value:  Size  Location     Type
 13951 ;;                  1    wreg      void 
 13952 ;; Registers used:
 13953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13954 ;; Tracked objects:
 13955 ;;		On entry : 3E/0
 13956 ;;		On exit  : 3F/1
 13957 ;;		Unchanged: 0/0
 13958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13963 ;;Total ram usage:        0 bytes
 13964 ;; Hardware stack levels used: 1
 13965 ;; Hardware stack levels required when called: 6
 13966 ;; This function calls:
 13967 ;;		_InitSoftStart
 13968 ;;		_sm_send_event
 13969 ;; This function is called by:
 13970 ;;		_actionZone_Opening
 13971 ;;		_actionZone_Opened
 13972 ;; This function uses a non-reentrant model
 13973 ;;
 13974                           
 13975                           	psect	text32
 13976  009754                     __ptext32:
 13977                           	callstack 0
 13978  009754                     _CloseOrder:
 13979                           	callstack 22
 13980                           
 13981                           ;sm_ControlGate_MC50.c: 65:     var_sys.StateMotor = InClose;
 13982                           
 13983                           ; BSR set to: 1
 13984                           ;incstack = 0
 13985  009754  0E03               	movlw	3
 13986  009756  0101               	movlb	1	; () banked
 13987  009758  6F55               	movwf	_var_sys& (0+255),b	;volatile
 13988                           
 13989                           ; BSR set to: 1
 13990                           ;sm_ControlGate_MC50.c: 66:     sm_send_event(&controlGate_stateMachine, ev_CloseGate);
 13991  00975A  0EE6               	movlw	low _controlGate_stateMachine
 13992  00975C  6E12               	movwf	sm_send_event@psm^0,c
 13993  00975E  0E01               	movlw	high _controlGate_stateMachine
 13994  009760  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13995  009762  0E00               	movlw	0
 13996  009764  6E15               	movwf	(sm_send_event@event+1)^0,c
 13997  009766  0E0E               	movlw	14
 13998  009768  6E14               	movwf	sm_send_event@event^0,c
 13999  00976A  ECE8  F045         	call	_sm_send_event	;wreg free
 14000                           
 14001                           ;sm_ControlGate_MC50.c: 67:     var_sys.LastState = InClose;
 14002  00976E  0E03               	movlw	3
 14003  009770  0101               	movlb	1	; () banked
 14004  009772  6F60               	movwf	(_var_sys+11)& (0+255),b	;volatile
 14005                           
 14006                           ; BSR set to: 1
 14007                           ;sm_ControlGate_MC50.c: 68:     InitSoftStart();
 14008  009774  EC5B  F045         	call	_InitSoftStart	;wreg free
 14009                           
 14010                           ; BSR set to: 1
 14011  009778  0012               	return		;funcret
 14012  00977A                     __end_of_CloseOrder:
 14013                           	callstack 0
 14014                           
 14015 ;; *************** function _actionZone_Closing *****************
 14016 ;; Defined at:
 14017 ;;		line 649 in file "sm_ControlGate_MC50.c"
 14018 ;; Parameters:    Size  Location     Type
 14019 ;;		None
 14020 ;; Auto vars:     Size  Location     Type
 14021 ;;  typeOpenOrde    1   50[COMRAM] enum E10372
 14022 ;;  securityClos    1   49[COMRAM] enum E10397
 14023 ;; Return value:  Size  Location     Type
 14024 ;;                  1    wreg      void 
 14025 ;; Registers used:
 14026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14027 ;; Tracked objects:
 14028 ;;		On entry : 3F/0
 14029 ;;		On exit  : 0/0
 14030 ;;		Unchanged: 0/0
 14031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14033 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14035 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14036 ;;Total ram usage:        2 bytes
 14037 ;; Hardware stack levels used: 1
 14038 ;; Hardware stack levels required when called: 7
 14039 ;; This function calls:
 14040 ;;		_GetOpenOrder
 14041 ;;		_GetSecurityStateInClosing
 14042 ;;		_InitFullAutoTime
 14043 ;;		_InitWalkAutoTime
 14044 ;;		_OpenFullOrder
 14045 ;;		_OpenWalkOrder
 14046 ;;		_SetSegmentValueIntermitent
 14047 ;;		_StopOrder
 14048 ;;		___lmul
 14049 ;;		_setPositionInvertionInClosing
 14050 ;;		_sm_send_event
 14051 ;; This function is called by:
 14052 ;;		_sm_execute_ControlGate
 14053 ;; This function uses a non-reentrant model
 14054 ;;
 14055                           
 14056                           	psect	text33
 14057  00461C                     __ptext33:
 14058                           	callstack 0
 14059  00461C                     _actionZone_Closing:
 14060                           	callstack 22
 14061                           
 14062                           ; BSR set to: 0
 14063                           ;sm_ControlGate_MC50.c: 651:     TypeCMD typeOpenOrder = GetOpenOrder();
 14064                           
 14065                           ; BSR set to: 1
 14066                           ;incstack = 0
 14067  00461C  EC00  F02E         	call	_GetOpenOrder	;wreg free
 14068  004620  6E33               	movwf	actionZone_Closing@typeOpenOrder^0,c
 14069                           
 14070                           ;sm_ControlGate_MC50.c: 653:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 14071  004622  ECB0  F03D         	call	_GetSecurityStateInClosing	;wreg free
 14072  004626  6E32               	movwf	actionZone_Closing@securityClosing^0,c
 14073                           
 14074                           ;sm_ControlGate_MC50.c: 654:     Abertura_pedonal = 0;
 14075  004628  0E00               	movlw	0
 14076  00462A  0100               	movlb	0	; () banked
 14077  00462C  6F72               	movwf	_Abertura_pedonal& (0+255),b
 14078                           
 14079                           ; BSR set to: 0
 14080                           ;sm_ControlGate_MC50.c: 656:     InitFullAutoTime();
 14081  00462E  ECB6  F04C         	call	_InitFullAutoTime	;wreg free
 14082                           
 14083                           ; BSR set to: 1
 14084                           ;sm_ControlGate_MC50.c: 658:     var_sys.passoAPassoAutoClose = NO;
 14085  004632  0E00               	movlw	0
 14086  004634  6FA5               	movwf	(_var_sys+80)& (0+255),b	;volatile
 14087                           
 14088                           ; BSR set to: 1
 14089                           ;sm_ControlGate_MC50.c: 660:     if (var_sys.NumberOffErrors > 3) {
 14090  004636  0E03               	movlw	3
 14091  004638  6598               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 14092  00463A  D00D               	goto	l23215
 14093                           
 14094                           ; BSR set to: 1
 14095                           ;sm_ControlGate_MC50.c: 662:         var_sys.StateMotor = Stopped;
 14096  00463C  0E00               	movlw	0
 14097  00463E  6F55               	movwf	_var_sys& (0+255),b	;volatile
 14098  004640                     l23213:
 14099                           
 14100                           ; BSR set to: 1
 14101                           ;sm_ControlGate_MC50.c: 663:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 14102  004640  0EE6               	movlw	low _controlGate_stateMachine
 14103  004642  6E12               	movwf	sm_send_event@psm^0,c
 14104  004644  0E01               	movlw	high _controlGate_stateMachine
 14105  004646  6E13               	movwf	(sm_send_event@psm+1)^0,c
 14106  004648  0E00               	movlw	0
 14107  00464A  6E15               	movwf	(sm_send_event@event+1)^0,c
 14108  00464C  0E10               	movlw	16
 14109  00464E  6E14               	movwf	sm_send_event@event^0,c
 14110  004650  ECE8  F045         	call	_sm_send_event	;wreg free
 14111                           
 14112                           ;sm_ControlGate_MC50.c: 664:     } else if ((var_sys.FimCurso_CloseIsEnabled == YES)||(v
      +                          ar_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLos
      +                          t==NO)) {
 14113  004654  0012               	return	
 14114  004656                     l23215:
 14115                           
 14116                           ; BSR set to: 1
 14117  004656  0558               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 14118  004658  B4D8               	btfsc	status,2,c
 14119  00465A  D00C               	goto	u27910
 14120                           
 14121                           ; BSR set to: 1
 14122  00465C  516D               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 14123  00465E  116E               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 14124  004660  116F               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 14125  004662  1170               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 14126  004664  A4D8               	btfss	status,2,c
 14127  004666  D05F               	goto	l23247
 14128                           
 14129                           ; BSR set to: 1
 14130  004668  517B               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 14131  00466A  A4D8               	btfss	status,2,c
 14132  00466C  D05C               	goto	l23247
 14133                           
 14134                           ; BSR set to: 1
 14135  00466E  519D               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 14136  004670  A4D8               	btfss	status,2,c
 14137  004672  D059               	goto	l23247
 14138  004674                     u27910:
 14139                           
 14140                           ; BSR set to: 1
 14141                           ;sm_ControlGate_MC50.c: 666:         if (var_sys_NVM.flashLightMode == 2) {
 14142  004674  0E02               	movlw	2
 14143  004676  19B3               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 14144  004678  A4D8               	btfss	status,2,c
 14145  00467A  D018               	goto	l23227
 14146                           
 14147                           ; BSR set to: 1
 14148                           ;sm_ControlGate_MC50.c: 667:             ts_system.TimeOnFlashLigth = (long) ((long) var
      +                          _sys_NVM.ligthTime * ((1000/50)*60));
 14149  00467C  51BA               	movf	(_var_sys_NVM+20)& (0+255),w,b	;volatile
 14150  00467E  6E1D               	movwf	___lmul@multiplier^0,c
 14151  004680  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14152  004682  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14153  004684  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14154  004686  0EB0               	movlw	176
 14155  004688  6E21               	movwf	___lmul@multiplicand^0,c
 14156  00468A  0E04               	movlw	4
 14157  00468C  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14158  00468E  0E00               	movlw	0
 14159  004690  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14160  004692  0E00               	movlw	0
 14161  004694  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14162  004696  ECC8  F046         	call	___lmul	;wreg free
 14163  00469A  C01D  F0AF         	movff	?___lmul,_ts_system+32	;volatile
 14164  00469E  C01E  F0B0         	movff	?___lmul+1,_ts_system+33	;volatile
 14165  0046A2  C01F  F0B1         	movff	?___lmul+2,_ts_system+34	;volatile
 14166  0046A6  C020  F0B2         	movff	?___lmul+3,_ts_system+35	;volatile
 14167                           
 14168                           ;sm_ControlGate_MC50.c: 668:         }
 14169  0046AA  D009               	goto	l2797
 14170  0046AC                     l23227:
 14171                           
 14172                           ; BSR set to: 1
 14173                           ;sm_ControlGate_MC50.c: 670:             ts_system.TimeOnFlashLigth = 0;
 14174  0046AC  0E00               	movlw	0
 14175  0046AE  0100               	movlb	0	; () banked
 14176  0046B0  6FAF               	movwf	(_ts_system+32)& (0+255),b	;volatile
 14177  0046B2  0E00               	movlw	0
 14178  0046B4  6FB0               	movwf	(_ts_system+33)& (0+255),b	;volatile
 14179  0046B6  0E00               	movlw	0
 14180  0046B8  6FB1               	movwf	(_ts_system+34)& (0+255),b	;volatile
 14181  0046BA  0E00               	movlw	0
 14182  0046BC  6FB2               	movwf	(_ts_system+35)& (0+255),b	;volatile
 14183  0046BE                     l2797:
 14184                           
 14185                           ;sm_ControlGate_MC50.c: 672:         var_sys.AutoInversionActiveStop = NO;
 14186  0046BE  0E00               	movlw	0
 14187  0046C0  0101               	movlb	1	; () banked
 14188  0046C2  6F67               	movwf	(_var_sys+18)& (0+255),b	;volatile
 14189                           
 14190                           ;sm_ControlGate_MC50.c: 674:         var_sys.Statedoorcontrol = st_Closed;
 14191  0046C4  0E01               	movlw	1
 14192  0046C6  6F71               	movwf	(_var_sys+28)& (0+255),b	;volatile
 14193                           
 14194                           ; BSR set to: 1
 14195                           ;sm_ControlGate_MC50.c: 675:         var_sys.actualCounterMoves++;
 14196  0046C8  0E01               	movlw	1
 14197  0046CA  2791               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
 14198  0046CC  0E00               	movlw	0
 14199  0046CE  2392               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
 14200  0046D0  2393               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
 14201  0046D2  2394               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
 14202                           
 14203                           ; BSR set to: 1
 14204                           ;sm_ControlGate_MC50.c: 676:         var_sys.Timewalkisactived = 0;
 14205  0046D4  0E00               	movlw	0
 14206  0046D6  6F9F               	movwf	(_var_sys+74)& (0+255),b	;volatile
 14207                           
 14208                           ; BSR set to: 1
 14209                           ;sm_ControlGate_MC50.c: 677:         var_sys.PositionActual = 0;
 14210  0046D8  0E00               	movlw	0
 14211  0046DA  6F73               	movwf	(_var_sys+30)& (0+255),b	;volatile
 14212  0046DC  0E00               	movlw	0
 14213  0046DE  6F74               	movwf	(_var_sys+31)& (0+255),b	;volatile
 14214  0046E0  0E00               	movlw	0
 14215  0046E2  6F75               	movwf	(_var_sys+32)& (0+255),b	;volatile
 14216  0046E4  0E00               	movlw	0
 14217  0046E6  6F76               	movwf	(_var_sys+33)& (0+255),b	;volatile
 14218                           
 14219                           ; BSR set to: 1
 14220                           ;sm_ControlGate_MC50.c: 679:         var_sys.PositionIsLost = NO;
 14221  0046E8  0E00               	movlw	0
 14222  0046EA  6F9D               	movwf	(_var_sys+72)& (0+255),b	;volatile
 14223                           
 14224                           ; BSR set to: 1
 14225                           ;sm_ControlGate_MC50.c: 680:         var_sys.NumberOffErrors = 0;
 14226  0046EC  0E00               	movlw	0
 14227  0046EE  6F98               	movwf	(_var_sys+67)& (0+255),b	;volatile
 14228                           
 14229                           ; BSR set to: 1
 14230                           ;sm_ControlGate_MC50.c: 681:         var_sys.StateMotor = Stopped;
 14231  0046F0  0E00               	movlw	0
 14232  0046F2  6F55               	movwf	_var_sys& (0+255),b	;volatile
 14233                           
 14234                           ; BSR set to: 1
 14235                           ;sm_ControlGate_MC50.c: 683:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 14236  0046F4  0E00               	movlw	0
 14237  0046F6  0100               	movlb	0	; () banked
 14238  0046F8  6F9C               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14239  0046FA  0E28               	movlw	40
 14240  0046FC  6F9B               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14241                           
 14242                           ; BSR set to: 0
 14243                           ;sm_ControlGate_MC50.c: 684:         SetSegmentValueIntermitent(dF, dC, ( 200/50));
 14244  0046FE  0E0C               	movlw	12
 14245  004700  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14246  004702  0E00               	movlw	0
 14247  004704  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14248  004706  0E04               	movlw	4
 14249  004708  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14250  00470A  0E0F               	movlw	15
 14251  00470C  EC61  F04A         	call	_SetSegmentValueIntermitent
 14252                           
 14253                           ;sm_ControlGate_MC50.c: 687:          sm_send_event(&controlGate_stateMachine, ev_Closed
      +                          Gate);
 14254  004710  0EE6               	movlw	low _controlGate_stateMachine
 14255  004712  6E12               	movwf	sm_send_event@psm^0,c
 14256  004714  0E01               	movlw	high _controlGate_stateMachine
 14257  004716  6E13               	movwf	(sm_send_event@psm+1)^0,c
 14258  004718  0E00               	movlw	0
 14259  00471A  6E15               	movwf	(sm_send_event@event+1)^0,c
 14260  00471C  0E0F               	movlw	15
 14261  00471E  6E14               	movwf	sm_send_event@event^0,c
 14262  004720  ECE8  F045         	call	_sm_send_event	;wreg free
 14263                           
 14264                           ;sm_ControlGate_MC50.c: 691:     }
 14265  004724  0012               	return	
 14266  004726                     l23247:
 14267                           
 14268                           ; BSR set to: 1
 14269  004726  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 14270  004728  B4D8               	btfsc	status,2,c
 14271  00472A  D014               	goto	u27960
 14272                           
 14273                           ; BSR set to: 1
 14274  00472C  0100               	movlb	0	; () banked
 14275  00472E  BFBA               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 14276  004730  D025               	goto	l23267
 14277  004732  51BA               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 14278  004734  E103               	bnz	u27940
 14279  004736  05B9               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 14280  004738  A0D8               	btfss	status,0,c
 14281  00473A  D020               	goto	l23267
 14282  00473C                     u27940:
 14283                           
 14284                           ; BSR set to: 0
 14285  00473C  0101               	movlb	1	; () banked
 14286  00473E  0596               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 14287  004740  A4D8               	btfss	status,2,c
 14288  004742  D01C               	goto	l23267
 14289                           
 14290                           ; BSR set to: 1
 14291  004744  0100               	movlb	0	; () banked
 14292  004746  BFC0               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 14293  004748  D005               	goto	u27960
 14294  00474A  51C0               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 14295  00474C  E117               	bnz	l23267
 14296  00474E  05BF               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 14297  004750  B0D8               	btfsc	status,0,c
 14298  004752  D014               	goto	l23267
 14299  004754                     u27960:
 14300  004754  0101               	movlb	1	; () banked
 14301  004756  517C               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 14302  004758  A4D8               	btfss	status,2,c
 14303  00475A  D010               	goto	l23267
 14304                           
 14305                           ; BSR set to: 1
 14306                           ;sm_ControlGate_MC50.c: 694:          if (securityClosing != YES){
 14307  00475C  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 14308  00475E  A4D8               	btfss	status,2,c
 14309                           
 14310                           ; BSR set to: 1
 14311                           ;sm_ControlGate_MC50.c: 695:             var_sys.NumberOffErrors++;
 14312  004760  2B98               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14313                           
 14314                           ; BSR set to: 1
 14315                           ;sm_ControlGate_MC50.c: 697:         var_sys.NumberOffErrors++;
 14316                           
 14317                           ;sm_ControlGate_MC50.c: 696:         }
 14318  004762  2B98               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14319                           
 14320                           ; BSR set to: 1
 14321                           ;sm_ControlGate_MC50.c: 698:         var_sys.AutoInversionActive = YES;
 14322  004764  0E01               	movlw	1
 14323  004766  6F7C               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14324                           
 14325                           ; BSR set to: 1
 14326                           ;sm_ControlGate_MC50.c: 699:         ts_system.TimeWaitToNextState = ( 500/50);
 14327  004768  0E00               	movlw	0
 14328  00476A  0100               	movlb	0	; () banked
 14329  00476C  6FB4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 14330  00476E  0E0A               	movlw	10
 14331  004770  6FB3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 14332                           
 14333                           ; BSR set to: 0
 14334                           ;sm_ControlGate_MC50.c: 700:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 14335  004772  0E00               	movlw	0
 14336  004774  6FD0               	movwf	(_ts_system+65)& (0+255),b	;volatile
 14337  004776  0E1E               	movlw	30
 14338  004778  6FCF               	movwf	(_ts_system+64)& (0+255),b	;volatile
 14339                           
 14340                           ;sm_ControlGate_MC50.c: 702:     }
 14341  00477A  0012               	return	
 14342  00477C                     l23267:
 14343  00477C  0100               	movlb	0	; () banked
 14344  00477E  BFBA               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 14345  004780  D032               	goto	l23297
 14346  004782  51BA               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 14347  004784  E103               	bnz	u27990
 14348  004786  05B9               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 14349  004788  A0D8               	btfss	status,0,c
 14350  00478A  D02D               	goto	l23297
 14351  00478C                     u27990:
 14352                           
 14353                           ; BSR set to: 0
 14354  00478C  0101               	movlb	1	; () banked
 14355  00478E  057C               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 14356  004790  A4D8               	btfss	status,2,c
 14357  004792  D029               	goto	l23297
 14358                           
 14359                           ; BSR set to: 1
 14360                           ;sm_ControlGate_MC50.c: 704:         if (var_sys.InvertionCurrentOpening == YES) {
 14361  004794  059A               	decf	(_var_sys+69)& (0+255),w,b	;volatile
 14362  004796  A4D8               	btfss	status,2,c
 14363  004798  D005               	goto	l23279
 14364  00479A                     u28010:
 14365                           
 14366                           ; BSR set to: 1
 14367                           ;sm_ControlGate_MC50.c: 706:             var_sys.StateMotor = Stopped;
 14368  00479A  0E00               	movlw	0
 14369  00479C  6F55               	movwf	_var_sys& (0+255),b	;volatile
 14370                           
 14371                           ; BSR set to: 1
 14372                           ;sm_ControlGate_MC50.c: 707:             setPositionInvertionInClosing();
 14373  00479E  EC42  F034         	call	_setPositionInvertionInClosing	;wreg free
 14374  0047A2  D74E               	goto	l23213
 14375  0047A4                     l23279:
 14376                           
 14377                           ; BSR set to: 1
 14378  0047A4  0100               	movlb	0	; () banked
 14379  0047A6  BFB4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 14380  0047A8  D005               	goto	u28020
 14381  0047AA  51B4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 14382  0047AC  E118               	bnz	l23295
 14383  0047AE  05B3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 14384  0047B0  B0D8               	btfsc	status,0,c
 14385  0047B2  D015               	goto	l23295
 14386  0047B4                     u28020:
 14387                           
 14388                           ; BSR set to: 0
 14389                           ;sm_ControlGate_MC50.c: 710:          if(var_sys.Timewalkisactived == YES){
 14390  0047B4  0101               	movlb	1	; () banked
 14391  0047B6  059F               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 14392  0047B8  A4D8               	btfss	status,2,c
 14393  0047BA  D003               	goto	l23285
 14394                           
 14395                           ; BSR set to: 1
 14396                           ;sm_ControlGate_MC50.c: 711:                 OpenWalkOrder();
 14397  0047BC  ECAE  F043         	call	_OpenWalkOrder	;wreg free
 14398                           
 14399                           ;sm_ControlGate_MC50.c: 713:             }
 14400  0047C0  D004               	goto	l23289
 14401  0047C2                     l23285:
 14402                           
 14403                           ; BSR set to: 1
 14404                           ;sm_ControlGate_MC50.c: 716:             OpenFullOrder();
 14405  0047C2  ECBD  F04B         	call	_OpenFullOrder	;wreg free
 14406                           
 14407                           ; BSR set to: 1
 14408                           ;sm_ControlGate_MC50.c: 718:             setPositionInvertionInClosing();
 14409  0047C6  EC42  F034         	call	_setPositionInvertionInClosing	;wreg free
 14410  0047CA                     l23289:
 14411                           
 14412                           ; BSR set to: 1
 14413                           ;sm_ControlGate_MC50.c: 720:             var_sys.AutoInversionActive = NO;
 14414  0047CA  0E00               	movlw	0
 14415  0047CC  6F7C               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14416                           
 14417                           ; BSR set to: 1
 14418                           ;sm_ControlGate_MC50.c: 721:             var_sys.InvertionCurrentClosing = YES;
 14419  0047CE  0E01               	movlw	1
 14420  0047D0  6F99               	movwf	(_var_sys+68)& (0+255),b	;volatile
 14421                           
 14422                           ; BSR set to: 1
 14423                           ;sm_ControlGate_MC50.c: 722:             ts_system.TimeInversionStart = (1000/50);
 14424  0047D2  0E00               	movlw	0
 14425  0047D4  0100               	movlb	0	; () banked
 14426  0047D6  6FC0               	movwf	(_ts_system+49)& (0+255),b	;volatile
 14427  0047D8  0E14               	movlw	20
 14428  0047DA  6FBF               	movwf	(_ts_system+48)& (0+255),b	;volatile
 14429                           
 14430                           ;sm_ControlGate_MC50.c: 726:         } else
 14431  0047DC  0012               	return	
 14432  0047DE                     l23295:
 14433                           
 14434                           ; BSR set to: 0
 14435                           ;sm_ControlGate_MC50.c: 727:         {;sm_ControlGate_MC50.c: 728:             var_sys.S
      +                          tateMotor = Stopped;
 14436  0047DE  0E00               	movlw	0
 14437  0047E0  0101               	movlb	1	; () banked
 14438  0047E2  6F55               	movwf	_var_sys& (0+255),b	;volatile
 14439  0047E4  0012               	return	
 14440  0047E6                     l23297:
 14441  0047E6  0101               	movlb	1	; () banked
 14442  0047E8  057C               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 14443  0047EA  A4D8               	btfss	status,2,c
 14444  0047EC  D018               	goto	l23313
 14445                           
 14446                           ; BSR set to: 1
 14447                           ;sm_ControlGate_MC50.c: 732:                 var_sys.StateMotor = Stopped;
 14448  0047EE  0E00               	movlw	0
 14449  0047F0  6F55               	movwf	_var_sys& (0+255),b	;volatile
 14450                           
 14451                           ; BSR set to: 1
 14452                           ;sm_ControlGate_MC50.c: 737:         if (ts_system.TimeWaitToNextState <= 0) {
 14453  0047F2  0100               	movlb	0	; () banked
 14454  0047F4  BFB4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 14455  0047F6  D005               	goto	u28050
 14456  0047F8  51B4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 14457  0047FA  E161               	bnz	l2834
 14458  0047FC  05B3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 14459  0047FE  B0D8               	btfsc	status,0,c
 14460  004800  0012               	return	
 14461  004802                     u28050:
 14462                           
 14463                           ; BSR set to: 0
 14464                           ;sm_ControlGate_MC50.c: 738:             if(var_sys.Timewalkisactived == YES){
 14465  004802  0101               	movlb	1	; () banked
 14466  004804  059F               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 14467  004806  A4D8               	btfss	status,2,c
 14468  004808  D003               	goto	l23307
 14469                           
 14470                           ; BSR set to: 1
 14471                           ;sm_ControlGate_MC50.c: 739:                 OpenWalkOrder();
 14472  00480A  ECAE  F043         	call	_OpenWalkOrder	;wreg free
 14473                           
 14474                           ;sm_ControlGate_MC50.c: 741:             }
 14475  00480E  D004               	goto	l23311
 14476  004810                     l23307:
 14477                           
 14478                           ; BSR set to: 1
 14479                           ;sm_ControlGate_MC50.c: 744:                  OpenFullOrder();
 14480  004810  ECBD  F04B         	call	_OpenFullOrder	;wreg free
 14481                           
 14482                           ; BSR set to: 1
 14483                           ;sm_ControlGate_MC50.c: 746:             setPositionInvertionInClosing();
 14484  004814  EC42  F034         	call	_setPositionInvertionInClosing	;wreg free
 14485  004818                     l23311:
 14486                           
 14487                           ; BSR set to: 1
 14488                           ;sm_ControlGate_MC50.c: 748:             var_sys.AutoInversionActive = NO;
 14489  004818  0E00               	movlw	0
 14490  00481A  6F7C               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14491  00481C  0012               	return	
 14492  00481E                     l23313:
 14493                           
 14494                           ; BSR set to: 1
 14495  00481E  5155               	movf	_var_sys& (0+255),w,b	;volatile
 14496  004820  A4D8               	btfss	status,2,c
 14497  004822  D00B               	goto	l23329
 14498                           
 14499                           ; BSR set to: 1
 14500                           ;sm_ControlGate_MC50.c: 755:         if(securityClosing != ST){
 14501  004824  0E02               	movlw	2
 14502  004826  1832               	xorwf	actionZone_Closing@securityClosing^0,w,c
 14503  004828  B4D8               	btfsc	status,2,c
 14504  00482A  D002               	goto	l23325
 14505                           
 14506                           ; BSR set to: 1
 14507                           ;sm_ControlGate_MC50.c: 756:            var_sys.NumberOffErrors++;
 14508  00482C  2B98               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14509  00482E  D7B5               	goto	u28010
 14510  004830                     l23325:
 14511                           
 14512                           ; BSR set to: 1
 14513                           ;sm_ControlGate_MC50.c: 761:         {;sm_ControlGate_MC50.c: 762:             setPositi
      +                          onInvertionInClosing();
 14514  004830  EC42  F034         	call	_setPositionInvertionInClosing	;wreg free
 14515  004834                     l23327:
 14516                           
 14517                           ; BSR set to: 1
 14518                           ;sm_ControlGate_MC50.c: 763:             StopOrder();
 14519  004834  EC71  F04C         	call	_StopOrder	;wreg free
 14520  004838  0012               	return	
 14521  00483A                     l23329:
 14522                           
 14523                           ; BSR set to: 1
 14524  00483A  0100               	movlb	0	; () banked
 14525  00483C  BFC2               	btfsc	(_ts_system+51)& (0+255),7,b	;volatile
 14526  00483E  D005               	goto	u28090
 14527  004840  51C2               	movf	(_ts_system+51)& (0+255),w,b	;volatile
 14528  004842  E10C               	bnz	l23339
 14529  004844  05C1               	decf	(_ts_system+50)& (0+255),w,b	;volatile
 14530  004846  B0D8               	btfsc	status,0,c
 14531  004848  D009               	goto	l23339
 14532  00484A                     u28090:
 14533                           
 14534                           ; BSR set to: 0
 14535  00484A  0101               	movlb	1	; () banked
 14536  00484C  059B               	decf	(_var_sys+70)& (0+255),w,b	;volatile
 14537  00484E  A4D8               	btfss	status,2,c
 14538  004850  D005               	goto	l23339
 14539                           
 14540                           ; BSR set to: 1
 14541                           ;sm_ControlGate_MC50.c: 768:         setPositionInvertionInClosing();
 14542  004852  EC42  F034         	call	_setPositionInvertionInClosing	;wreg free
 14543                           
 14544                           ; BSR set to: 1
 14545                           ;sm_ControlGate_MC50.c: 769:         var_sys.InvertionClosingFromOpen = NO;
 14546  004856  0E00               	movlw	0
 14547  004858  6F9B               	movwf	(_var_sys+70)& (0+255),b	;volatile
 14548  00485A  D7EC               	goto	l23327
 14549  00485C                     l23339:
 14550  00485C  0101               	movlb	1	; () banked
 14551  00485E  05B6               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14552  004860  B4D8               	btfsc	status,2,c
 14553  004862  D004               	goto	u28120
 14554                           
 14555                           ; BSR set to: 1
 14556  004864  0E02               	movlw	2
 14557  004866  19B6               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14558  004868  A4D8               	btfss	status,2,c
 14559  00486A  D005               	goto	l23347
 14560  00486C                     u28120:
 14561                           
 14562                           ; BSR set to: 1
 14563                           ;sm_ControlGate_MC50.c: 773:         if (typeOpenOrder != TypeFullClose) {
 14564  00486C  0E04               	movlw	4
 14565  00486E  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14566  004870  B4D8               	btfsc	status,2,c
 14567  004872  0012               	return	
 14568  004874  D7DF               	goto	l23327
 14569  004876                     l23347:
 14570                           
 14571                           ; BSR set to: 1
 14572  004876  5033               	movf	actionZone_Closing@typeOpenOrder^0,w,c
 14573  004878  B4D8               	btfsc	status,2,c
 14574  00487A  0012               	return	
 14575                           
 14576                           ; BSR set to: 1
 14577                           ;sm_ControlGate_MC50.c: 788:         if ( var_sys_NVM.operationMode == ModoPassoPasso )
 14578  00487C  05B2               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14579  00487E  A4D8               	btfss	status,2,c
 14580  004880  D012               	goto	l23363
 14581                           
 14582                           ; BSR set to: 1
 14583                           ;sm_ControlGate_MC50.c: 789:         {;sm_ControlGate_MC50.c: 790:             setPositi
      +                          onInvertionInClosing();
 14584  004882  EC42  F034         	call	_setPositionInvertionInClosing	;wreg free
 14585                           
 14586                           ; BSR set to: 1
 14587                           ;sm_ControlGate_MC50.c: 791:             StopOrder();
 14588  004886  EC71  F04C         	call	_StopOrder	;wreg free
 14589                           
 14590                           ;sm_ControlGate_MC50.c: 793:             if (typeOpenOrder == TypeWalk && var_sys_NVM.op
      +                          erationMode != ModoCondominio)
 14591  00488A  0E02               	movlw	2
 14592  00488C  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14593  00488E  A4D8               	btfss	status,2,c
 14594  004890  0012               	return	
 14595  004892  0E02               	movlw	2
 14596  004894  0101               	movlb	1	; () banked
 14597  004896  19B2               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14598  004898  B4D8               	btfsc	status,2,c
 14599  00489A  0012               	return	
 14600                           
 14601                           ; BSR set to: 1
 14602                           ;sm_ControlGate_MC50.c: 794:             {;sm_ControlGate_MC50.c: 795:                 I
      +                          nitWalkAutoTime();
 14603  00489C  EC45  F04D         	call	_InitWalkAutoTime	;wreg free
 14604                           
 14605                           ; BSR set to: 1
 14606                           ;sm_ControlGate_MC50.c: 796:                 var_sys.showAP = YES;
 14607  0048A0  0E01               	movlw	1
 14608  0048A2  6FA4               	movwf	(_var_sys+79)& (0+255),b	;volatile
 14609  0048A4  0012               	return	
 14610  0048A6                     l23363:
 14611                           
 14612                           ; BSR set to: 1
 14613                           ;sm_ControlGate_MC50.c: 801:         {;sm_ControlGate_MC50.c: 802:             if (typeO
      +                          penOrder != TypeFullClose){
 14614  0048A6  0E04               	movlw	4
 14615  0048A8  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14616  0048AA  B4D8               	btfsc	status,2,c
 14617  0048AC  D7C3               	goto	l23327
 14618                           
 14619                           ; BSR set to: 1
 14620                           ;sm_ControlGate_MC50.c: 803:                 var_sys.AutoInversionActive = YES;
 14621  0048AE  0E01               	movlw	1
 14622  0048B0  6F7C               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14623                           
 14624                           ;sm_ControlGate_MC50.c: 804:                 ts_system.TimeWaitToNextState = ( 500/50);
 14625  0048B2  0E00               	movlw	0
 14626  0048B4  0100               	movlb	0	; () banked
 14627  0048B6  6FB4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 14628  0048B8  0E0A               	movlw	10
 14629  0048BA  6FB3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 14630                           
 14631                           ;sm_ControlGate_MC50.c: 806:             }
 14632  0048BC  0012               	return	
 14633  0048BE                     l2834:
 14634  0048BE  0012               	return		;funcret
 14635  0048C0                     __end_of_actionZone_Closing:
 14636                           	callstack 0
 14637                           
 14638 ;; *************** function _setPositionInvertionInClosing *****************
 14639 ;; Defined at:
 14640 ;;		line 867 in file "sm_ControlGate_MC50.c"
 14641 ;; Parameters:    Size  Location     Type
 14642 ;;		None
 14643 ;; Auto vars:     Size  Location     Type
 14644 ;;		None
 14645 ;; Return value:  Size  Location     Type
 14646 ;;                  1    wreg      void 
 14647 ;; Registers used:
 14648 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14649 ;; Tracked objects:
 14650 ;;		On entry : 3E/1
 14651 ;;		On exit  : 3F/1
 14652 ;;		Unchanged: 0/0
 14653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14656 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14657 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14658 ;;Total ram usage:       12 bytes
 14659 ;; Hardware stack levels used: 1
 14660 ;; Hardware stack levels required when called: 6
 14661 ;; This function calls:
 14662 ;;		_getTimeDecelaration
 14663 ;; This function is called by:
 14664 ;;		_actionZone_Opening
 14665 ;;		_actionZone_Closing
 14666 ;; This function uses a non-reentrant model
 14667 ;;
 14668                           
 14669                           	psect	text34
 14670  006884                     __ptext34:
 14671                           	callstack 0
 14672  006884                     _setPositionInvertionInClosing:
 14673                           	callstack 22
 14674                           
 14675                           ;sm_ControlGate_MC50.c: 872:     if(var_sys_NVM.TypeofMotor != 2){
 14676                           
 14677                           ;incstack = 0
 14678  006884  0E02               	movlw	2
 14679  006886  0101               	movlb	1	; () banked
 14680  006888  19C2               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14681  00688A  B4D8               	btfsc	status,2,c
 14682  00688C  D006               	goto	l21565
 14683                           
 14684                           ; BSR set to: 1
 14685                           ;sm_ControlGate_MC50.c: 874:        var_sys.PositionActual += ( 100/50);
 14686  00688E  0E02               	movlw	2
 14687  006890  2773               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14688  006892  0E00               	movlw	0
 14689  006894  2374               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14690  006896  2375               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14691  006898  D007               	goto	L73
 14692  00689A                     l21565:
 14693                           
 14694                           ; BSR set to: 1
 14695                           ;sm_ControlGate_MC50.c: 878:     {;sm_ControlGate_MC50.c: 879:        var_sys.PositionAc
      +                          tual -= ( 50/50);
 14696  00689A  0EFF               	movlw	255
 14697  00689C  2773               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14698  00689E  0EFF               	movlw	255
 14699  0068A0  2374               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14700  0068A2  0EFF               	movlw	255
 14701  0068A4  2375               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14702  0068A6  0EFF               	movlw	255
 14703  0068A8                     L73:
 14704  0068A8  2376               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 14705                           
 14706                           ; BSR set to: 1
 14707                           ;sm_ControlGate_MC50.c: 882:     if (var_sys.PositionActual > getTimeDecelaration(InOpen
      +                          Full)&& var_sys_NVM.TypeofMotor != 2) {
 14708  0068AA  0E01               	movlw	1
 14709  0068AC  EC9C  F03A         	call	_getTimeDecelaration
 14710  0068B0  0101               	movlb	1	; () banked
 14711  0068B2  5173               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14712  0068B4  5C29               	subwf	?_getTimeDecelaration^0,w,c
 14713  0068B6  5174               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14714  0068B8  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 14715  0068BA  5175               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14716  0068BC  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 14717  0068BE  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14718  0068C0  0A80               	xorlw	128
 14719  0068C2  0100               	movlb	0	; () banked
 14720  0068C4  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14721  0068C6  0101               	movlb	1	; () banked
 14722  0068C8  5176               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14723  0068CA  0A80               	xorlw	128
 14724  0068CC  0100               	movlb	0	; () banked
 14725  0068CE  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14726  0068D0  B0D8               	btfsc	status,0,c
 14727  0068D2  D009               	goto	l21573
 14728                           
 14729                           ; BSR set to: 0
 14730  0068D4  0E02               	movlw	2
 14731  0068D6  0101               	movlb	1	; () banked
 14732  0068D8  19C2               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14733  0068DA  B4D8               	btfsc	status,2,c
 14734  0068DC  D004               	goto	l21573
 14735                           
 14736                           ; BSR set to: 1
 14737                           ;sm_ControlGate_MC50.c: 883:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 14738  0068DE  0E01               	movlw	1
 14739  0068E0  EC9C  F03A         	call	_getTimeDecelaration
 14740  0068E4  D01B               	goto	L74
 14741  0068E6                     l21573:
 14742  0068E6  0E03               	movlw	3
 14743  0068E8  EC9C  F03A         	call	_getTimeDecelaration
 14744  0068EC  5029               	movf	?_getTimeDecelaration^0,w,c
 14745  0068EE  0101               	movlb	1	; () banked
 14746  0068F0  5D73               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 14747  0068F2  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 14748  0068F4  5974               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 14749  0068F6  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 14750  0068F8  5975               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 14751  0068FA  5176               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14752  0068FC  0A80               	xorlw	128
 14753  0068FE  0100               	movlb	0	; () banked
 14754  006900  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14755  006902  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14756  006904  0A80               	xorlw	128
 14757  006906  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14758  006908  B0D8               	btfsc	status,0,c
 14759  00690A  D010               	goto	l21579
 14760                           
 14761                           ; BSR set to: 0
 14762  00690C  0E02               	movlw	2
 14763  00690E  0101               	movlb	1	; () banked
 14764  006910  19C2               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14765  006912  B4D8               	btfsc	status,2,c
 14766  006914  D00B               	goto	l21579
 14767                           
 14768                           ; BSR set to: 1
 14769                           ;sm_ControlGate_MC50.c: 887:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 14770  006916  0E03               	movlw	3
 14771  006918  EC9C  F03A         	call	_getTimeDecelaration
 14772  00691C                     L74:
 14773  00691C  C029  F173         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 14774  006920  C02A  F174         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 14775  006924  C02B  F175         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 14776  006928  C02C  F176         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 14777  00692C                     l21579:
 14778                           
 14779                           ;sm_ControlGate_MC50.c: 890:     var_sys.TimeMaxMotorIsON = ((signed long)var_sys_NVM.le
      +                          arningTimeToOpen - var_sys.PositionActual) + (var_sys_NVM.decelarationOpen*( 500/50))+ (
      +                          1000/50)*10;
 14780  00692C  0101               	movlb	1	; () banked
 14781  00692E  51A6               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14782  006930  0D0A               	mullw	10
 14783  006932  CFF3 F0D8          	movff	prodl,??_setPositionInvertionInClosing
 14784  006936  CFF4 F0D9          	movff	prodh,??_setPositionInvertionInClosing+1
 14785  00693A  0E00               	movlw	0
 14786  00693C  0100               	movlb	0	; () banked
 14787  00693E  BFD9               	btfsc	(??_setPositionInvertionInClosing+1)& (0+255),7,b
 14788  006940  0EFF               	movlw	255
 14789  006942  6FDA               	movwf	(??_setPositionInvertionInClosing+2)& (0+255),b
 14790  006944  6FDB               	movwf	(??_setPositionInvertionInClosing+3)& (0+255),b
 14791  006946  0101               	movlb	1	; () banked
 14792  006948  5173               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14793  00694A  0100               	movlb	0	; () banked
 14794  00694C  5DD8               	subwf	??_setPositionInvertionInClosing& (0+255),w,b
 14795  00694E  6FDC               	movwf	(??_setPositionInvertionInClosing+4)& (0+255),b
 14796  006950  0101               	movlb	1	; () banked
 14797  006952  5174               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14798  006954  0100               	movlb	0	; () banked
 14799  006956  59D9               	subwfb	(??_setPositionInvertionInClosing+1)& (0+255),w,b
 14800  006958  6FDD               	movwf	(??_setPositionInvertionInClosing+5)& (0+255),b
 14801  00695A  0101               	movlb	1	; () banked
 14802  00695C  5175               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14803  00695E  0100               	movlb	0	; () banked
 14804  006960  59DA               	subwfb	(??_setPositionInvertionInClosing+2)& (0+255),w,b
 14805  006962  6FDE               	movwf	(??_setPositionInvertionInClosing+6)& (0+255),b
 14806  006964  0101               	movlb	1	; () banked
 14807  006966  5176               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14808  006968  0100               	movlb	0	; () banked
 14809  00696A  59DB               	subwfb	(??_setPositionInvertionInClosing+3)& (0+255),w,b
 14810  00696C  6FDF               	movwf	(??_setPositionInvertionInClosing+7)& (0+255),b
 14811  00696E  0101               	movlb	1	; () banked
 14812  006970  51DA               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14813  006972  0100               	movlb	0	; () banked
 14814  006974  25DC               	addwf	(??_setPositionInvertionInClosing+4)& (0+255),w,b
 14815  006976  6FE0               	movwf	(??_setPositionInvertionInClosing+8)& (0+255),b
 14816  006978  0101               	movlb	1	; () banked
 14817  00697A  51DB               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14818  00697C  0100               	movlb	0	; () banked
 14819  00697E  21DD               	addwfc	(??_setPositionInvertionInClosing+5)& (0+255),w,b
 14820  006980  6FE1               	movwf	(??_setPositionInvertionInClosing+9)& (0+255),b
 14821  006982  0101               	movlb	1	; () banked
 14822  006984  51DC               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14823  006986  0100               	movlb	0	; () banked
 14824  006988  21DE               	addwfc	(??_setPositionInvertionInClosing+6)& (0+255),w,b
 14825  00698A  6FE2               	movwf	(??_setPositionInvertionInClosing+10)& (0+255),b
 14826  00698C  0101               	movlb	1	; () banked
 14827  00698E  51DD               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14828  006990  0100               	movlb	0	; () banked
 14829  006992  21DF               	addwfc	(??_setPositionInvertionInClosing+7)& (0+255),w,b
 14830  006994  6FE3               	movwf	(??_setPositionInvertionInClosing+11)& (0+255),b
 14831  006996  0EC8               	movlw	200
 14832  006998  25E0               	addwf	(??_setPositionInvertionInClosing+8)& (0+255),w,b
 14833  00699A  0101               	movlb	1	; () banked
 14834  00699C  6F6D               	movwf	(_var_sys+24)& (0+255),b	;volatile
 14835  00699E  0E00               	movlw	0
 14836  0069A0  0100               	movlb	0	; () banked
 14837  0069A2  21E1               	addwfc	(??_setPositionInvertionInClosing+9)& (0+255),w,b
 14838  0069A4  0101               	movlb	1	; () banked
 14839  0069A6  6F6E               	movwf	(_var_sys+25)& (0+255),b	;volatile
 14840  0069A8  0E00               	movlw	0
 14841  0069AA  0100               	movlb	0	; () banked
 14842  0069AC  21E2               	addwfc	(??_setPositionInvertionInClosing+10)& (0+255),w,b
 14843  0069AE  0101               	movlb	1	; () banked
 14844  0069B0  6F6F               	movwf	(_var_sys+26)& (0+255),b	;volatile
 14845  0069B2  0E00               	movlw	0
 14846  0069B4  0100               	movlb	0	; () banked
 14847  0069B6  21E3               	addwfc	(??_setPositionInvertionInClosing+11)& (0+255),w,b
 14848  0069B8  0101               	movlb	1	; () banked
 14849  0069BA  6F70               	movwf	(_var_sys+27)& (0+255),b	;volatile
 14850                           
 14851                           ; BSR set to: 1
 14852  0069BC  0012               	return		;funcret
 14853  0069BE                     __end_of_setPositionInvertionInClosing:
 14854                           	callstack 0
 14855                           
 14856 ;; *************** function _getTimeDecelaration *****************
 14857 ;; Defined at:
 14858 ;;		line 641 in file "outputs_MC50.c"
 14859 ;; Parameters:    Size  Location     Type
 14860 ;;  state           1    wreg     enum E10381
 14861 ;; Auto vars:     Size  Location     Type
 14862 ;;  state           1   48[COMRAM] enum E10381
 14863 ;; Return value:  Size  Location     Type
 14864 ;;                  4   40[COMRAM] long 
 14865 ;; Registers used:
 14866 ;;		wreg, status,2, status,0, cstack
 14867 ;; Tracked objects:
 14868 ;;		On entry : 3E/1
 14869 ;;		On exit  : 0/0
 14870 ;;		Unchanged: 0/0
 14871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14872 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14873 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14874 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14875 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14876 ;;Total ram usage:        9 bytes
 14877 ;; Hardware stack levels used: 1
 14878 ;; Hardware stack levels required when called: 5
 14879 ;; This function calls:
 14880 ;;		___lmul
 14881 ;; This function is called by:
 14882 ;;		_getStateOpenPosition
 14883 ;;		_controlVelocity
 14884 ;;		_setPositionInvertionInClosing
 14885 ;;		_setPositionInvertionInOpening
 14886 ;; This function uses a non-reentrant model
 14887 ;;
 14888                           
 14889                           	psect	text35
 14890  007538                     __ptext35:
 14891                           	callstack 0
 14892  007538                     _getTimeDecelaration:
 14893                           	callstack 22
 14894                           
 14895                           ; BSR set to: 1
 14896                           ;incstack = 0
 14897                           ;getTimeDecelaration@state stored from wreg
 14898  007538  6E31               	movwf	getTimeDecelaration@state^0,c
 14899                           
 14900                           ;outputs_MC50.c: 641: signed long getTimeDecelaration(stateMotor_enum state);outputs_MC5
      +                          0.c: 642: {;outputs_MC50.c: 644:     if(state==InClose)
 14901  00753A  0E03               	movlw	3
 14902  00753C  1831               	xorwf	getTimeDecelaration@state^0,w,c
 14903  00753E  A4D8               	btfss	status,2,c
 14904  007540  D033               	goto	l20371
 14905                           
 14906                           ;outputs_MC50.c: 645:     {;outputs_MC50.c: 646:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14907  007542  0E02               	movlw	2
 14908  007544  0101               	movlb	1	; () banked
 14909  007546  19C2               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14910  007548  B4D8               	btfsc	status,2,c
 14911  00754A  D018               	goto	l20367
 14912                           
 14913                           ; BSR set to: 1
 14914                           ;outputs_MC50.c: 647:         {return (signed long)((signed long)var_sys_NVM.decelaratio
      +                          nClose*( 500/50));}
 14915  00754C  51A7               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 14916  00754E  6E1D               	movwf	___lmul@multiplier^0,c
 14917  007550  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14918  007552  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14919  007554  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14920  007556  0E0A               	movlw	10
 14921  007558  6E21               	movwf	___lmul@multiplicand^0,c
 14922  00755A  0E00               	movlw	0
 14923  00755C  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14924  00755E  0E00               	movlw	0
 14925  007560  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14926  007562  0E00               	movlw	0
 14927  007564  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14928  007566  ECC8  F046         	call	___lmul	;wreg free
 14929  00756A  C01D  F029         	movff	?___lmul,?_getTimeDecelaration
 14930  00756E  C01E  F02A         	movff	?___lmul+1,?_getTimeDecelaration+1
 14931  007572  C01F  F02B         	movff	?___lmul+2,?_getTimeDecelaration+2
 14932  007576  C020  F02C         	movff	?___lmul+3,?_getTimeDecelaration+3
 14933  00757A  0012               	return	
 14934  00757C                     l20367:
 14935                           
 14936                           ; BSR set to: 1
 14937  00757C  C1A7  F02D         	movff	_var_sys_NVM+1,??_getTimeDecelaration	;volatile
 14938  007580  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14939  007582  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14940  007584  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14941  007586  0E02               	movlw	2
 14942  007588                     u23755:
 14943  007588  90D8               	bcf	status,0,c
 14944  00758A  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14945  00758C  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14946  00758E  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14947  007590  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14948  007592  2EE8               	decfsz	wreg,f,c
 14949  007594  D7F9               	goto	u23755
 14950  007596  C02D  F029         	movff	??_getTimeDecelaration,?_getTimeDecelaration
 14951  00759A  C02E  F02A         	movff	??_getTimeDecelaration+1,?_getTimeDecelaration+1
 14952  00759E  C02F  F02B         	movff	??_getTimeDecelaration+2,?_getTimeDecelaration+2
 14953  0075A2  C030  F02C         	movff	??_getTimeDecelaration+3,?_getTimeDecelaration+3
 14954  0075A6  0012               	return	
 14955  0075A8                     l20371:
 14956                           
 14957                           ;outputs_MC50.c: 651:     {;outputs_MC50.c: 652:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14958  0075A8  0E02               	movlw	2
 14959  0075AA  0101               	movlb	1	; () banked
 14960  0075AC  19C2               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14961  0075AE  B4D8               	btfsc	status,2,c
 14962  0075B0  D01D               	goto	l20379
 14963                           
 14964                           ; BSR set to: 1
 14965                           ;outputs_MC50.c: 653:         {return (signed long)((signed long)var_sys_NVM.learningTim
      +                          eToOpen-(((signed long)var_sys_NVM.decelarationOpen*( 500/50))));}
 14966  0075B2  51A6               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14967  0075B4  6E1D               	movwf	___lmul@multiplier^0,c
 14968  0075B6  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14969  0075B8  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14970  0075BA  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14971  0075BC  0EF6               	movlw	246
 14972  0075BE  6E21               	movwf	___lmul@multiplicand^0,c
 14973  0075C0  0EFF               	movlw	255
 14974  0075C2  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14975  0075C4  0EFF               	movlw	255
 14976  0075C6  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14977  0075C8  0EFF               	movlw	255
 14978  0075CA  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14979  0075CC  ECC8  F046         	call	___lmul	;wreg free
 14980  0075D0  0101               	movlb	1	; () banked
 14981  0075D2  51DA               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14982  0075D4  241D               	addwf	?___lmul^0,w,c
 14983  0075D6  6E29               	movwf	?_getTimeDecelaration^0,c
 14984  0075D8  51DB               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14985  0075DA  201E               	addwfc	(?___lmul+1)^0,w,c
 14986  0075DC  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14987  0075DE  51DC               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14988  0075E0  201F               	addwfc	(?___lmul+2)^0,w,c
 14989  0075E2  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14990  0075E4  51DD               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14991  0075E6  2020               	addwfc	(?___lmul+3)^0,w,c
 14992  0075E8  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14993  0075EA  0012               	return	
 14994  0075EC                     l20379:
 14995                           
 14996                           ; BSR set to: 1
 14997  0075EC  C1A6  F02D         	movff	_var_sys_NVM,??_getTimeDecelaration	;volatile
 14998  0075F0  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14999  0075F2  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 15000  0075F4  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 15001  0075F6  0E02               	movlw	2
 15002  0075F8                     u23775:
 15003  0075F8  90D8               	bcf	status,0,c
 15004  0075FA  362D               	rlcf	??_getTimeDecelaration^0,f,c
 15005  0075FC  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 15006  0075FE  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 15007  007600  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 15008  007602  2EE8               	decfsz	wreg,f,c
 15009  007604  D7F9               	goto	u23775
 15010  007606  502D               	movf	??_getTimeDecelaration^0,w,c
 15011  007608  5DDA               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 15012  00760A  6E29               	movwf	?_getTimeDecelaration^0,c
 15013  00760C  502E               	movf	(??_getTimeDecelaration+1)^0,w,c
 15014  00760E  59DB               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 15015  007610  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 15016  007612  502F               	movf	(??_getTimeDecelaration+2)^0,w,c
 15017  007614  59DC               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 15018  007616  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 15019  007618  5030               	movf	(??_getTimeDecelaration+3)^0,w,c
 15020  00761A  59DD               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 15021  00761C  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 15022  00761E  0012               	return		;funcret
 15023  007620                     __end_of_getTimeDecelaration:
 15024                           	callstack 0
 15025                           
 15026 ;; *************** function ___lmul *****************
 15027 ;; Defined at:
 15028 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
 15029 ;; Parameters:    Size  Location     Type
 15030 ;;  multiplier      4   28[COMRAM] unsigned long 
 15031 ;;  multiplicand    4   32[COMRAM] unsigned long 
 15032 ;; Auto vars:     Size  Location     Type
 15033 ;;  product         4   36[COMRAM] unsigned long 
 15034 ;; Return value:  Size  Location     Type
 15035 ;;                  4   28[COMRAM] unsigned long 
 15036 ;; Registers used:
 15037 ;;		wreg, status,2, status,0
 15038 ;; Tracked objects:
 15039 ;;		On entry : 0/0
 15040 ;;		On exit  : 0/0
 15041 ;;		Unchanged: 0/0
 15042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15043 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15044 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15046 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15047 ;;Total ram usage:       12 bytes
 15048 ;; Hardware stack levels used: 1
 15049 ;; Hardware stack levels required when called: 4
 15050 ;; This function calls:
 15051 ;;		Nothing
 15052 ;; This function is called by:
 15053 ;;		_getStateOpenPosition
 15054 ;;		_getTimeDecelaration
 15055 ;;		_actionZone_Closing
 15056 ;;		_sm_execute_menuConfiguration
 15057 ;; This function uses a non-reentrant model
 15058 ;;
 15059                           
 15060                           	psect	text36
 15061  008D90                     __ptext36:
 15062                           	callstack 0
 15063  008D90                     ___lmul:
 15064                           	callstack 24
 15065                           
 15066                           ;incstack = 0
 15067  008D90  0E00               	movlw	0
 15068  008D92  6E25               	movwf	___lmul@product^0,c
 15069  008D94  0E00               	movlw	0
 15070  008D96  6E26               	movwf	(___lmul@product+1)^0,c
 15071  008D98  0E00               	movlw	0
 15072  008D9A  6E27               	movwf	(___lmul@product+2)^0,c
 15073  008D9C  0E00               	movlw	0
 15074  008D9E  6E28               	movwf	(___lmul@product+3)^0,c
 15075  008DA0                     l20219:
 15076  008DA0  A01D               	btfss	___lmul@multiplier^0,0,c
 15077  008DA2  D008               	goto	l20223
 15078  008DA4  5021               	movf	___lmul@multiplicand^0,w,c
 15079  008DA6  2625               	addwf	___lmul@product^0,f,c
 15080  008DA8  5022               	movf	(___lmul@multiplicand+1)^0,w,c
 15081  008DAA  2226               	addwfc	(___lmul@product+1)^0,f,c
 15082  008DAC  5023               	movf	(___lmul@multiplicand+2)^0,w,c
 15083  008DAE  2227               	addwfc	(___lmul@product+2)^0,f,c
 15084  008DB0  5024               	movf	(___lmul@multiplicand+3)^0,w,c
 15085  008DB2  2228               	addwfc	(___lmul@product+3)^0,f,c
 15086  008DB4                     l20223:
 15087  008DB4  90D8               	bcf	status,0,c
 15088  008DB6  3621               	rlcf	___lmul@multiplicand^0,f,c
 15089  008DB8  3622               	rlcf	(___lmul@multiplicand+1)^0,f,c
 15090  008DBA  3623               	rlcf	(___lmul@multiplicand+2)^0,f,c
 15091  008DBC  3624               	rlcf	(___lmul@multiplicand+3)^0,f,c
 15092  008DBE  90D8               	bcf	status,0,c
 15093  008DC0  3220               	rrcf	(___lmul@multiplier+3)^0,f,c
 15094  008DC2  321F               	rrcf	(___lmul@multiplier+2)^0,f,c
 15095  008DC4  321E               	rrcf	(___lmul@multiplier+1)^0,f,c
 15096  008DC6  321D               	rrcf	___lmul@multiplier^0,f,c
 15097  008DC8  501D               	movf	___lmul@multiplier^0,w,c
 15098  008DCA  101E               	iorwf	(___lmul@multiplier+1)^0,w,c
 15099  008DCC  101F               	iorwf	(___lmul@multiplier+2)^0,w,c
 15100  008DCE  1020               	iorwf	(___lmul@multiplier+3)^0,w,c
 15101  008DD0  A4D8               	btfss	status,2,c
 15102  008DD2  D7E6               	goto	l20219
 15103  008DD4  C025  F01D         	movff	___lmul@product,?___lmul
 15104  008DD8  C026  F01E         	movff	___lmul@product+1,?___lmul+1
 15105  008DDC  C027  F01F         	movff	___lmul@product+2,?___lmul+2
 15106  008DE0  C028  F020         	movff	___lmul@product+3,?___lmul+3
 15107  008DE4  0012               	return		;funcret
 15108  008DE6                     __end_of___lmul:
 15109                           	callstack 0
 15110                           
 15111 ;; *************** function _StopOrder *****************
 15112 ;; Defined at:
 15113 ;;		line 96 in file "sm_ControlGate_MC50.c"
 15114 ;; Parameters:    Size  Location     Type
 15115 ;;		None
 15116 ;; Auto vars:     Size  Location     Type
 15117 ;;		None
 15118 ;; Return value:  Size  Location     Type
 15119 ;;                  1    wreg      void 
 15120 ;; Registers used:
 15121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15122 ;; Tracked objects:
 15123 ;;		On entry : 3E/1
 15124 ;;		On exit  : 0/0
 15125 ;;		Unchanged: 0/0
 15126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15131 ;;Total ram usage:        0 bytes
 15132 ;; Hardware stack levels used: 1
 15133 ;; Hardware stack levels required when called: 6
 15134 ;; This function calls:
 15135 ;;		_sm_send_event
 15136 ;; This function is called by:
 15137 ;;		_actionZone_Opening
 15138 ;;		_actionZone_Closing
 15139 ;; This function uses a non-reentrant model
 15140 ;;
 15141                           
 15142                           	psect	text37
 15143  0098E2                     __ptext37:
 15144                           	callstack 0
 15145  0098E2                     _StopOrder:
 15146                           	callstack 22
 15147                           
 15148                           ;sm_ControlGate_MC50.c: 99:    var_sys.StateMotor = Stopped;
 15149                           
 15150                           ;incstack = 0
 15151  0098E2  0E00               	movlw	0
 15152  0098E4  0101               	movlb	1	; () banked
 15153  0098E6  6F55               	movwf	_var_sys& (0+255),b	;volatile
 15154                           
 15155                           ; BSR set to: 1
 15156                           ;sm_ControlGate_MC50.c: 100:    sm_send_event(&controlGate_stateMachine, ev_StopGate);
 15157  0098E8  0EE6               	movlw	low _controlGate_stateMachine
 15158  0098EA  6E12               	movwf	sm_send_event@psm^0,c
 15159  0098EC  0E01               	movlw	high _controlGate_stateMachine
 15160  0098EE  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15161  0098F0  0E00               	movlw	0
 15162  0098F2  6E15               	movwf	(sm_send_event@event+1)^0,c
 15163  0098F4  0E0D               	movlw	13
 15164  0098F6  6E14               	movwf	sm_send_event@event^0,c
 15165  0098F8  ECE8  F045         	call	_sm_send_event	;wreg free
 15166  0098FC  0012               	return		;funcret
 15167  0098FE                     __end_of_StopOrder:
 15168                           	callstack 0
 15169                           
 15170 ;; *************** function _GetSecurityStateInClosing *****************
 15171 ;; Defined at:
 15172 ;;		line 776 in file "inputs_MC50.c"
 15173 ;; Parameters:    Size  Location     Type
 15174 ;;		None
 15175 ;; Auto vars:     Size  Location     Type
 15176 ;;		None
 15177 ;; Return value:  Size  Location     Type
 15178 ;;                  1    wreg      enum E10564
 15179 ;; Registers used:
 15180 ;;		wreg, status,2, status,0, cstack
 15181 ;; Tracked objects:
 15182 ;;		On entry : 0/0
 15183 ;;		On exit  : 3E/0
 15184 ;;		Unchanged: 0/0
 15185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15190 ;;Total ram usage:        0 bytes
 15191 ;; Hardware stack levels used: 1
 15192 ;; Hardware stack levels required when called: 5
 15193 ;; This function calls:
 15194 ;;		_SetSegmentValueIntermitent
 15195 ;; This function is called by:
 15196 ;;		_actionZone_Opening
 15197 ;;		_actionZone_Opened
 15198 ;;		_actionZone_Closing
 15199 ;; This function uses a non-reentrant model
 15200 ;;
 15201                           
 15202                           	psect	text38
 15203  007B60                     __ptext38:
 15204                           	callstack 0
 15205  007B60                     _GetSecurityStateInClosing:
 15206                           	callstack 23
 15207                           
 15208                           ;inputs_MC50.c: 786:      if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBar
      +                          IsObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 0)&& (var_sys_NVM.Stopboton == 
      +                          0))
 15209                           
 15210                           ;incstack = 0
 15211  007B60  0101               	movlb	1	; () banked
 15212  007B62  05AF               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 15213  007B64  A4D8               	btfss	status,2,c
 15214  007B66  D019               	goto	l21237
 15215                           
 15216                           ; BSR set to: 1
 15217  007B68  0557               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15218  007B6A  A4D8               	btfss	status,2,c
 15219  007B6C  D016               	goto	l21237
 15220                           
 15221                           ; BSR set to: 1
 15222  007B6E  51B1               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 15223  007B70  A4D8               	btfss	status,2,c
 15224  007B72  D013               	goto	l21237
 15225                           
 15226                           ; BSR set to: 1
 15227  007B74  51BC               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15228  007B76  A4D8               	btfss	status,2,c
 15229  007B78  D010               	goto	l21237
 15230                           
 15231                           ; BSR set to: 1
 15232                           ;inputs_MC50.c: 787:     {;inputs_MC50.c: 790:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15233  007B7A  0E00               	movlw	0
 15234  007B7C  0100               	movlb	0	; () banked
 15235  007B7E  6F9C               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15236  007B80  0E04               	movlw	4
 15237  007B82  6F9B               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15238                           
 15239                           ; BSR set to: 0
 15240                           ;inputs_MC50.c: 791:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 15241  007B84  0E0A               	movlw	10
 15242  007B86  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15243  007B88  0E00               	movlw	0
 15244  007B8A  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15245  007B8C  0E14               	movlw	20
 15246  007B8E  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15247  007B90  0E12               	movlw	18
 15248  007B92  EC61  F04A         	call	_SetSegmentValueIntermitent
 15249  007B96                     l21231:
 15250                           
 15251                           ;inputs_MC50.c: 792:         return YES;
 15252  007B96  0E01               	movlw	1
 15253  007B98  0012               	return	
 15254  007B9A                     l21237:
 15255                           
 15256                           ; BSR set to: 1
 15257  007B9A  05BC               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15258  007B9C  A4D8               	btfss	status,2,c
 15259  007B9E  D013               	goto	l21251
 15260                           
 15261                           ; BSR set to: 1
 15262  007BA0  0557               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15263  007BA2  A4D8               	btfss	status,2,c
 15264  007BA4  D010               	goto	l21251
 15265                           
 15266                           ; BSR set to: 1
 15267                           ;inputs_MC50.c: 795:     {;inputs_MC50.c: 797:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15268  007BA6  0E00               	movlw	0
 15269  007BA8  0100               	movlb	0	; () banked
 15270  007BAA  6F9C               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15271  007BAC  0E04               	movlw	4
 15272  007BAE  6F9B               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15273                           
 15274                           ; BSR set to: 0
 15275                           ;inputs_MC50.c: 798:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 15276  007BB0  0E15               	movlw	21
 15277  007BB2  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15278  007BB4  0E00               	movlw	0
 15279  007BB6  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15280  007BB8  0E14               	movlw	20
 15281  007BBA  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15282  007BBC  0E05               	movlw	5
 15283  007BBE  EC61  F04A         	call	_SetSegmentValueIntermitent
 15284                           
 15285                           ;inputs_MC50.c: 799:         return ST;
 15286  007BC2  0E02               	movlw	2
 15287  007BC4  0012               	return	
 15288  007BC6                     l21251:
 15289                           
 15290                           ; BSR set to: 1
 15291  007BC6  05AD               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 15292  007BC8  A4D8               	btfss	status,2,c
 15293  007BCA  D015               	goto	l21267
 15294                           
 15295                           ; BSR set to: 1
 15296  007BCC  0556               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 15297  007BCE  A4D8               	btfss	status,2,c
 15298  007BD0  D012               	goto	l21267
 15299                           
 15300                           ; BSR set to: 1
 15301  007BD2  51AE               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 15302  007BD4  A4D8               	btfss	status,2,c
 15303  007BD6  D00F               	goto	l21267
 15304                           
 15305                           ; BSR set to: 1
 15306                           ;inputs_MC50.c: 803:     {;inputs_MC50.c: 805:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15307  007BD8  0E00               	movlw	0
 15308  007BDA  0100               	movlb	0	; () banked
 15309  007BDC  6F9C               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15310  007BDE  0E04               	movlw	4
 15311  007BE0  6F9B               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15312                           
 15313                           ; BSR set to: 0
 15314                           ;inputs_MC50.c: 806:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 15315  007BE2  0E0E               	movlw	14
 15316  007BE4  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15317  007BE6  0E00               	movlw	0
 15318  007BE8  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15319  007BEA  0E14               	movlw	20
 15320  007BEC  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15321  007BEE  0E12               	movlw	18
 15322  007BF0  EC61  F04A         	call	_SetSegmentValueIntermitent
 15323  007BF4  D7D0               	goto	l21231
 15324  007BF6                     l21267:
 15325                           
 15326                           ; BSR set to: 1
 15327                           ;inputs_MC50.c: 811:     {;inputs_MC50.c: 812:         return NO;
 15328  007BF6  0E00               	movlw	0
 15329  007BF8  0012               	return		;funcret
 15330  007BFA                     __end_of_GetSecurityStateInClosing:
 15331                           	callstack 0
 15332                           
 15333 ;; *************** function _actionZone_Closed *****************
 15334 ;; Defined at:
 15335 ;;		line 327 in file "sm_ControlGate_MC50.c"
 15336 ;; Parameters:    Size  Location     Type
 15337 ;;		None
 15338 ;; Auto vars:     Size  Location     Type
 15339 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 15340 ;;  securityOpen    1   31[COMRAM] enum E10397
 15341 ;; Return value:  Size  Location     Type
 15342 ;;                  1    wreg      void 
 15343 ;; Registers used:
 15344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15345 ;; Tracked objects:
 15346 ;;		On entry : 3F/0
 15347 ;;		On exit  : 0/0
 15348 ;;		Unchanged: 0/0
 15349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15351 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15353 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15354 ;;Total ram usage:        2 bytes
 15355 ;; Hardware stack levels used: 1
 15356 ;; Hardware stack levels required when called: 8
 15357 ;; This function calls:
 15358 ;;		_GetOpenOrder
 15359 ;;		_GetSecurityStateInOpening
 15360 ;;		_InitFullAutoTime
 15361 ;;		_InitWalkAutoTime
 15362 ;;		_OpenFullOrder
 15363 ;;		_OpenWalkOrder
 15364 ;;		_WaitPreFlash
 15365 ;;		_sm_send_event
 15366 ;; This function is called by:
 15367 ;;		_sm_execute_ControlGate
 15368 ;; This function uses a non-reentrant model
 15369 ;;
 15370                           
 15371                           	psect	text39
 15372  007AC0                     __ptext39:
 15373                           	callstack 0
 15374  007AC0                     _actionZone_Closed:
 15375                           	callstack 21
 15376                           
 15377                           ; BSR set to: 0
 15378                           ;sm_ControlGate_MC50.c: 331:     if (main_stateMachine.current_state != st_MenuConfigura
      +                          tion) {
 15379                           
 15380                           ;incstack = 0
 15381  007AC0  0101               	movlb	1	; () banked
 15382  007AC2  05F1               	decf	_main_stateMachine& (0+255),w,b
 15383  007AC4  11F2               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 15384  007AC6  B4D8               	btfsc	status,2,c
 15385  007AC8  0012               	return	
 15386                           
 15387                           ; BSR set to: 1
 15388                           ;sm_ControlGate_MC50.c: 334:         TypeCMD typeOpenOrder = GetOpenOrder();
 15389  007ACA  EC00  F02E         	call	_GetOpenOrder	;wreg free
 15390  007ACE  6E21               	movwf	actionZone_Closed@typeOpenOrder^0,c
 15391                           
 15392                           ;sm_ControlGate_MC50.c: 336:         StateEnum securityOpening = GetSecurityStateInOpeni
      +                          ng();
 15393  007AD0  ECFD  F03D         	call	_GetSecurityStateInOpening	;wreg free
 15394  007AD4  6E20               	movwf	actionZone_Closed@securityOpening^0,c
 15395                           
 15396                           ;sm_ControlGate_MC50.c: 338:         if (var_sys_NVM.homemPresente == 1) {
 15397  007AD6  0101               	movlb	1	; () banked
 15398  007AD8  05B6               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15399  007ADA  A4D8               	btfss	status,2,c
 15400  007ADC  D017               	goto	l22855
 15401                           
 15402                           ; BSR set to: 1
 15403                           ;sm_ControlGate_MC50.c: 344:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && securityOpening == NO) {
 15404  007ADE  0E03               	movlw	3
 15405  007AE0  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15406  007AE2  A4D8               	btfss	status,2,c
 15407  007AE4  0012               	return	
 15408                           
 15409                           ; BSR set to: 1
 15410  007AE6  5159               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 15411  007AE8  A4D8               	btfss	status,2,c
 15412  007AEA  0012               	return	
 15413                           
 15414                           ; BSR set to: 1
 15415  007AEC  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15416  007AEE  A4D8               	btfss	status,2,c
 15417  007AF0  0012               	return	
 15418                           
 15419                           ; BSR set to: 1
 15420                           ;sm_ControlGate_MC50.c: 346:                 OpenFullOrder();
 15421  007AF2  ECBD  F04B         	call	_OpenFullOrder	;wreg free
 15422  007AF6                     l22853:
 15423                           
 15424                           ; BSR set to: 1
 15425                           ;sm_ControlGate_MC50.c: 347:                 sm_send_event(&main_stateMachine, ev_MotorI
      +                          sOpen);
 15426  007AF6  0EF1               	movlw	low _main_stateMachine
 15427  007AF8  6E12               	movwf	sm_send_event@psm^0,c
 15428  007AFA  0E01               	movlw	high _main_stateMachine
 15429  007AFC  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15430  007AFE  0E00               	movlw	0
 15431  007B00  6E15               	movwf	(sm_send_event@event+1)^0,c
 15432  007B02  0E11               	movlw	17
 15433  007B04  6E14               	movwf	sm_send_event@event^0,c
 15434  007B06  ECE8  F045         	call	_sm_send_event	;wreg free
 15435  007B0A  0012               	return	
 15436  007B0C                     l22855:
 15437                           
 15438                           ; BSR set to: 1
 15439  007B0C  0421               	decf	actionZone_Closed@typeOpenOrder^0,w,c
 15440  007B0E  B4D8               	btfsc	status,2,c
 15441  007B10  D004               	goto	u27050
 15442                           
 15443                           ; BSR set to: 1
 15444  007B12  0E03               	movlw	3
 15445  007B14  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15446  007B16  A4D8               	btfss	status,2,c
 15447  007B18  D014               	goto	l22875
 15448  007B1A                     u27050:
 15449                           
 15450                           ; BSR set to: 1
 15451  007B1A  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15452  007B1C  A4D8               	btfss	status,2,c
 15453  007B1E  D011               	goto	l22875
 15454                           
 15455                           ; BSR set to: 1
 15456  007B20  5172               	movf	(_var_sys+29)& (0+255),w,b	;volatile
 15457  007B22  A4D8               	btfss	status,2,c
 15458  007B24  D00E               	goto	l22875
 15459                           
 15460                           ; BSR set to: 1
 15461                           ;sm_ControlGate_MC50.c: 353:             if (var_sys_NVM.flashRGBMode == rgb_pre){
 15462  007B26  0E02               	movlw	2
 15463  007B28  19BF               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15464  007B2A  A4D8               	btfss	status,2,c
 15465  007B2C  D005               	goto	l22869
 15466                           
 15467                           ; BSR set to: 1
 15468                           ;sm_ControlGate_MC50.c: 354:                 var_sys.preflashingcontrol = YES;
 15469  007B2E  0E01               	movlw	1
 15470  007B30  6F72               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15471                           
 15472                           ; BSR set to: 1
 15473                           ;sm_ControlGate_MC50.c: 355:                 WaitPreFlash();
 15474  007B32  EC3E  F043         	call	_WaitPreFlash	;wreg free
 15475                           
 15476                           ;sm_ControlGate_MC50.c: 356:             }
 15477  007B36  0012               	return	
 15478  007B38                     l22869:
 15479                           
 15480                           ; BSR set to: 1
 15481                           ;sm_ControlGate_MC50.c: 358:                 OpenFullOrder();
 15482  007B38  ECBD  F04B         	call	_OpenFullOrder	;wreg free
 15483                           
 15484                           ; BSR set to: 1
 15485                           ;sm_ControlGate_MC50.c: 359:                InitFullAutoTime();
 15486  007B3C  ECB6  F04C         	call	_InitFullAutoTime	;wreg free
 15487  007B40  D7DA               	goto	l22853
 15488  007B42                     l22875:
 15489                           
 15490                           ; BSR set to: 1
 15491  007B42  0E02               	movlw	2
 15492  007B44  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15493  007B46  A4D8               	btfss	status,2,c
 15494  007B48  0012               	return	
 15495                           
 15496                           ; BSR set to: 1
 15497  007B4A  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15498  007B4C  A4D8               	btfss	status,2,c
 15499  007B4E  0012               	return	
 15500                           
 15501                           ; BSR set to: 1
 15502  007B50  51AA               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15503  007B52  B4D8               	btfsc	status,2,c
 15504  007B54  0012               	return	
 15505                           
 15506                           ; BSR set to: 1
 15507                           ;sm_ControlGate_MC50.c: 367:             OpenWalkOrder();
 15508  007B56  ECAE  F043         	call	_OpenWalkOrder	;wreg free
 15509                           
 15510                           ; BSR set to: 1
 15511                           ;sm_ControlGate_MC50.c: 368:             InitWalkAutoTime();
 15512  007B5A  EC45  F04D         	call	_InitWalkAutoTime	;wreg free
 15513  007B5E  D7CB               	goto	l22853
 15514  007B60                     __end_of_actionZone_Closed:
 15515                           	callstack 0
 15516                           
 15517 ;; *************** function _WaitPreFlash *****************
 15518 ;; Defined at:
 15519 ;;		line 41 in file "sm_ControlGate_MC50.c"
 15520 ;; Parameters:    Size  Location     Type
 15521 ;;		None
 15522 ;; Auto vars:     Size  Location     Type
 15523 ;;		None
 15524 ;; Return value:  Size  Location     Type
 15525 ;;                  1    wreg      void 
 15526 ;; Registers used:
 15527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15528 ;; Tracked objects:
 15529 ;;		On entry : 3F/1
 15530 ;;		On exit  : 3F/0
 15531 ;;		Unchanged: 0/0
 15532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15537 ;;Total ram usage:        0 bytes
 15538 ;; Hardware stack levels used: 1
 15539 ;; Hardware stack levels required when called: 7
 15540 ;; This function calls:
 15541 ;;		_InitFullAutoTime
 15542 ;;		_OpenFullOrder
 15543 ;;		_sm_send_event
 15544 ;; This function is called by:
 15545 ;;		_sm_execute_ControlGate
 15546 ;;		_actionZone_Closed
 15547 ;; This function uses a non-reentrant model
 15548 ;;
 15549                           
 15550                           	psect	text40
 15551  00867C                     __ptext40:
 15552                           	callstack 0
 15553  00867C                     _WaitPreFlash:
 15554                           	callstack 21
 15555                           
 15556                           ; BSR set to: 1
 15557                           ;sm_ControlGate_MC50.c: 44:     if ((var_sys_NVM.flashRGBMode == rgb_pre) && (var_sys.pr
      +                          eflashingcontrol == YES) && (ts_system.timewaitFlashRGB <=0) && (aux_i == 0))
 15558                           
 15559                           ;incstack = 0
 15560  00867C  0E02               	movlw	2
 15561  00867E  19BF               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15562  008680  A4D8               	btfss	status,2,c
 15563  008682  D014               	goto	l21485
 15564                           
 15565                           ; BSR set to: 1
 15566  008684  0572               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 15567  008686  A4D8               	btfss	status,2,c
 15568  008688  D011               	goto	l21485
 15569                           
 15570                           ; BSR set to: 1
 15571  00868A  0100               	movlb	0	; () banked
 15572  00868C  BFD6               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15573  00868E  D005               	goto	u25390
 15574  008690  51D6               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15575  008692  E10C               	bnz	l21485
 15576  008694  05D5               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15577  008696  B0D8               	btfsc	status,0,c
 15578  008698  D009               	goto	l21485
 15579  00869A                     u25390:
 15580                           
 15581                           ; BSR set to: 0
 15582  00869A  5171               	movf	_aux_i& (0+255),w,b
 15583  00869C  A4D8               	btfss	status,2,c
 15584  00869E  D006               	goto	l21485
 15585                           
 15586                           ; BSR set to: 0
 15587                           ;sm_ControlGate_MC50.c: 45:         {;sm_ControlGate_MC50.c: 46:             ts_system.t
      +                          imewaitFlashRGB = (1000/50) *3;
 15588  0086A0  0E00               	movlw	0
 15589  0086A2  6FD6               	movwf	(_ts_system+71)& (0+255),b	;volatile
 15590  0086A4  0E3C               	movlw	60
 15591  0086A6  6FD5               	movwf	(_ts_system+70)& (0+255),b	;volatile
 15592                           
 15593                           ;sm_ControlGate_MC50.c: 47:             aux_i=1;
 15594  0086A8  0E01               	movlw	1
 15595  0086AA  6F71               	movwf	_aux_i& (0+255),b
 15596  0086AC                     l21485:
 15597                           
 15598                           ;sm_ControlGate_MC50.c: 50:     if ((ts_system.timewaitFlashRGB <= 0) && (aux_i==1 ))
 15599  0086AC  0100               	movlb	0	; () banked
 15600  0086AE  BFD6               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15601  0086B0  D005               	goto	u25410
 15602  0086B2  51D6               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15603  0086B4  E11A               	bnz	l2609
 15604  0086B6  05D5               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15605  0086B8  B0D8               	btfsc	status,0,c
 15606  0086BA  0012               	return	
 15607  0086BC                     u25410:
 15608                           
 15609                           ; BSR set to: 0
 15610  0086BC  0571               	decf	_aux_i& (0+255),w,b
 15611  0086BE  A4D8               	btfss	status,2,c
 15612  0086C0  0012               	return	
 15613                           
 15614                           ; BSR set to: 0
 15615                           ;sm_ControlGate_MC50.c: 51:         {;sm_ControlGate_MC50.c: 54:                 var_sys
      +                          .preflashingcontrol = NO;
 15616  0086C2  0E00               	movlw	0
 15617  0086C4  0101               	movlb	1	; () banked
 15618  0086C6  6F72               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15619                           
 15620                           ; BSR set to: 1
 15621                           ;sm_ControlGate_MC50.c: 55:                 OpenFullOrder();
 15622  0086C8  ECBD  F04B         	call	_OpenFullOrder	;wreg free
 15623                           
 15624                           ; BSR set to: 1
 15625                           ;sm_ControlGate_MC50.c: 56:                 InitFullAutoTime();
 15626  0086CC  ECB6  F04C         	call	_InitFullAutoTime	;wreg free
 15627                           
 15628                           ; BSR set to: 1
 15629                           ;sm_ControlGate_MC50.c: 57:                 sm_send_event(&main_stateMachine, ev_MotorIs
      +                          Open);
 15630  0086D0  0EF1               	movlw	low _main_stateMachine
 15631  0086D2  6E12               	movwf	sm_send_event@psm^0,c
 15632  0086D4  0E01               	movlw	high _main_stateMachine
 15633  0086D6  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15634  0086D8  0E00               	movlw	0
 15635  0086DA  6E15               	movwf	(sm_send_event@event+1)^0,c
 15636  0086DC  0E11               	movlw	17
 15637  0086DE  6E14               	movwf	sm_send_event@event^0,c
 15638  0086E0  ECE8  F045         	call	_sm_send_event	;wreg free
 15639                           
 15640                           ;sm_ControlGate_MC50.c: 58:                 aux_i=0;
 15641  0086E4  0E00               	movlw	0
 15642  0086E6  0100               	movlb	0	; () banked
 15643  0086E8  6F71               	movwf	_aux_i& (0+255),b
 15644  0086EA                     l2609:
 15645                           
 15646                           ; BSR set to: 0
 15647  0086EA  0012               	return		;funcret
 15648  0086EC                     __end_of_WaitPreFlash:
 15649                           	callstack 0
 15650                           
 15651 ;; *************** function _OpenFullOrder *****************
 15652 ;; Defined at:
 15653 ;;		line 29 in file "sm_ControlGate_MC50.c"
 15654 ;; Parameters:    Size  Location     Type
 15655 ;;		None
 15656 ;; Auto vars:     Size  Location     Type
 15657 ;;		None
 15658 ;; Return value:  Size  Location     Type
 15659 ;;                  1    wreg      void 
 15660 ;; Registers used:
 15661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15662 ;; Tracked objects:
 15663 ;;		On entry : 3E/1
 15664 ;;		On exit  : 3F/1
 15665 ;;		Unchanged: 0/0
 15666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15671 ;;Total ram usage:        0 bytes
 15672 ;; Hardware stack levels used: 1
 15673 ;; Hardware stack levels required when called: 6
 15674 ;; This function calls:
 15675 ;;		_InitSoftStart
 15676 ;;		_sm_send_event
 15677 ;; This function is called by:
 15678 ;;		_WaitPreFlash
 15679 ;;		_actionZone_Closed
 15680 ;;		_actionZone_Opened
 15681 ;;		_actionZone_Closing
 15682 ;; This function uses a non-reentrant model
 15683 ;;
 15684                           
 15685                           	psect	text41
 15686  00977A                     __ptext41:
 15687                           	callstack 0
 15688  00977A                     _OpenFullOrder:
 15689                           	callstack 22
 15690                           
 15691                           ;sm_ControlGate_MC50.c: 32:     var_sys.StateMotor = InOpenFull;
 15692                           
 15693                           ; BSR set to: 0
 15694                           ;incstack = 0
 15695  00977A  0E01               	movlw	1
 15696  00977C  0101               	movlb	1	; () banked
 15697  00977E  6F55               	movwf	_var_sys& (0+255),b	;volatile
 15698                           
 15699                           ; BSR set to: 1
 15700                           ;sm_ControlGate_MC50.c: 33:     sm_send_event(&controlGate_stateMachine, ev_OpenGate);
 15701  009780  0EE6               	movlw	low _controlGate_stateMachine
 15702  009782  6E12               	movwf	sm_send_event@psm^0,c
 15703  009784  0E01               	movlw	high _controlGate_stateMachine
 15704  009786  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15705  009788  0E00               	movlw	0
 15706  00978A  6E15               	movwf	(sm_send_event@event+1)^0,c
 15707  00978C  0E0C               	movlw	12
 15708  00978E  6E14               	movwf	sm_send_event@event^0,c
 15709  009790  ECE8  F045         	call	_sm_send_event	;wreg free
 15710                           
 15711                           ;sm_ControlGate_MC50.c: 34:     var_sys.LastState = InOpenFull;
 15712  009794  0E01               	movlw	1
 15713  009796  0101               	movlb	1	; () banked
 15714  009798  6F60               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15715                           
 15716                           ; BSR set to: 1
 15717                           ;sm_ControlGate_MC50.c: 35:     InitSoftStart();
 15718  00979A  EC5B  F045         	call	_InitSoftStart	;wreg free
 15719                           
 15720                           ; BSR set to: 1
 15721  00979E  0012               	return		;funcret
 15722  0097A0                     __end_of_OpenFullOrder:
 15723                           	callstack 0
 15724                           
 15725 ;; *************** function _InitFullAutoTime *****************
 15726 ;; Defined at:
 15727 ;;		line 109 in file "sm_ControlGate_MC50.c"
 15728 ;; Parameters:    Size  Location     Type
 15729 ;;		None
 15730 ;; Auto vars:     Size  Location     Type
 15731 ;;		None
 15732 ;; Return value:  Size  Location     Type
 15733 ;;                  1    wreg      void 
 15734 ;; Registers used:
 15735 ;;		wreg, status,2, status,0, prodl, prodh
 15736 ;; Tracked objects:
 15737 ;;		On entry : 3E/1
 15738 ;;		On exit  : 3F/1
 15739 ;;		Unchanged: 0/0
 15740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15745 ;;Total ram usage:        0 bytes
 15746 ;; Hardware stack levels used: 1
 15747 ;; Hardware stack levels required when called: 4
 15748 ;; This function calls:
 15749 ;;		Nothing
 15750 ;; This function is called by:
 15751 ;;		_WaitPreFlash
 15752 ;;		_actionZone_Closed
 15753 ;;		_actionZone_Opening
 15754 ;;		_actionZone_Opened
 15755 ;;		_actionZone_Closing
 15756 ;; This function uses a non-reentrant model
 15757 ;;
 15758                           
 15759                           	psect	text42
 15760  00996C                     __ptext42:
 15761                           	callstack 0
 15762  00996C                     _InitFullAutoTime:
 15763                           	callstack 24
 15764                           
 15765                           ;sm_ControlGate_MC50.c: 111:     if (var_sys_NVM.homemPresente == 0) {
 15766                           
 15767                           ; BSR set to: 1
 15768                           ;incstack = 0
 15769  00996C  0101               	movlb	1	; () banked
 15770  00996E  51B6               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15771  009970  A4D8               	btfss	status,2,c
 15772  009972  0012               	return	
 15773                           
 15774                           ; BSR set to: 1
 15775                           ;sm_ControlGate_MC50.c: 112:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 15776  009974  51AB               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 15777  009976  0D14               	mullw	20
 15778  009978  CFF3 F0A1          	movff	prodl,_ts_system+18	;volatile
 15779  00997C  CFF4 F0A2          	movff	prodh,_ts_system+19	;volatile
 15780                           
 15781                           ; BSR set to: 1
 15782                           ;sm_ControlGate_MC50.c: 113:         var_sys.AutoCloseActive = var_sys_NVM.autoTimeFullC
      +                          lose;
 15783  009980  C1AB  F178         	movff	_var_sys_NVM+5,_var_sys+35	;volatile
 15784                           
 15785                           ; BSR set to: 1
 15786  009984  0012               	return		;funcret
 15787  009986                     __end_of_InitFullAutoTime:
 15788                           	callstack 0
 15789                           
 15790 ;; *************** function _OpenWalkOrder *****************
 15791 ;; Defined at:
 15792 ;;		line 71 in file "sm_ControlGate_MC50.c"
 15793 ;; Parameters:    Size  Location     Type
 15794 ;;		None
 15795 ;; Auto vars:     Size  Location     Type
 15796 ;;  diffTime        2   25[COMRAM] int 
 15797 ;; Return value:  Size  Location     Type
 15798 ;;                  1    wreg      void 
 15799 ;; Registers used:
 15800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15801 ;; Tracked objects:
 15802 ;;		On entry : 3F/1
 15803 ;;		On exit  : 3F/1
 15804 ;;		Unchanged: 0/0
 15805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15807 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15808 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15809 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15810 ;;Total ram usage:        4 bytes
 15811 ;; Hardware stack levels used: 1
 15812 ;; Hardware stack levels required when called: 6
 15813 ;; This function calls:
 15814 ;;		_InitSoftStart
 15815 ;;		_sm_send_event
 15816 ;; This function is called by:
 15817 ;;		_actionZone_Closed
 15818 ;;		_actionZone_Opened
 15819 ;;		_actionZone_Closing
 15820 ;; This function uses a non-reentrant model
 15821 ;;
 15822                           
 15823                           	psect	text43
 15824  00875C                     __ptext43:
 15825                           	callstack 0
 15826  00875C                     _OpenWalkOrder:
 15827                           	callstack 22
 15828                           
 15829                           ; BSR set to: 1
 15830                           ;sm_ControlGate_MC50.c: 72:     int diffTime = ((int) var_sys_NVM.walkTime * (1000/50)) 
      +                          - var_sys.PositionActual ;
 15831                           
 15832                           ; BSR set to: 1
 15833                           ;incstack = 0
 15834  00875C  51AA               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15835  00875E  0D14               	mullw	20
 15836  008760  CFF3 F018          	movff	prodl,??_OpenWalkOrder
 15837  008764  CFF4 F019          	movff	prodh,??_OpenWalkOrder+1
 15838  008768  5173               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 15839  00876A  5C18               	subwf	??_OpenWalkOrder^0,w,c
 15840  00876C  6E1A               	movwf	OpenWalkOrder@diffTime^0,c
 15841  00876E  5174               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 15842  008770  5819               	subwfb	(??_OpenWalkOrder+1)^0,w,c
 15843  008772  6E1B               	movwf	(OpenWalkOrder@diffTime+1)^0,c
 15844                           
 15845                           ; BSR set to: 1
 15846                           ;sm_ControlGate_MC50.c: 74:     if (diffTime > 0) {
 15847  008774  BE1B               	btfsc	(OpenWalkOrder@diffTime+1)^0,7,c
 15848  008776  D024               	goto	l21523
 15849  008778  501B               	movf	(OpenWalkOrder@diffTime+1)^0,w,c
 15850  00877A  E103               	bnz	u25430
 15851  00877C  041A               	decf	OpenWalkOrder@diffTime^0,w,c
 15852  00877E  A0D8               	btfss	status,0,c
 15853  008780  D01F               	goto	l21523
 15854  008782                     u25430:
 15855                           
 15856                           ; BSR set to: 1
 15857                           ;sm_ControlGate_MC50.c: 76:         sm_send_event(&controlGate_stateMachine, ev_OpenGate
      +                          );
 15858  008782  0EE6               	movlw	low _controlGate_stateMachine
 15859  008784  6E12               	movwf	sm_send_event@psm^0,c
 15860  008786  0E01               	movlw	high _controlGate_stateMachine
 15861  008788  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15862  00878A  0E00               	movlw	0
 15863  00878C  6E15               	movwf	(sm_send_event@event+1)^0,c
 15864  00878E  0E0C               	movlw	12
 15865  008790  6E14               	movwf	sm_send_event@event^0,c
 15866  008792  ECE8  F045         	call	_sm_send_event	;wreg free
 15867                           
 15868                           ;sm_ControlGate_MC50.c: 77:         if (var_sys.Statedoorcontrol == st_Closed){
 15869  008796  0101               	movlb	1	; () banked
 15870  008798  0571               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 15871  00879A  A4D8               	btfss	status,2,c
 15872  00879C  D005               	goto	l21517
 15873                           
 15874                           ; BSR set to: 1
 15875                           ;sm_ControlGate_MC50.c: 78:            ts_system.timeOpenWalk = diffTime;
 15876  00879E  C01A  F09F         	movff	OpenWalkOrder@diffTime,_ts_system+16	;volatile
 15877  0087A2  C01B  F0A0         	movff	OpenWalkOrder@diffTime+1,_ts_system+17	;volatile
 15878                           
 15879                           ;sm_ControlGate_MC50.c: 79:         }
 15880  0087A6  D007               	goto	l21519
 15881  0087A8                     l21517:
 15882                           
 15883                           ; BSR set to: 1
 15884                           ;sm_ControlGate_MC50.c: 81:             ts_system.timeOpenWalk = diffTime + (1000/50);
 15885  0087A8  0E14               	movlw	20
 15886  0087AA  241A               	addwf	OpenWalkOrder@diffTime^0,w,c
 15887  0087AC  0100               	movlb	0	; () banked
 15888  0087AE  6F9F               	movwf	(_ts_system+16)& (0+255),b	;volatile
 15889  0087B0  0E00               	movlw	0
 15890  0087B2  201B               	addwfc	(OpenWalkOrder@diffTime+1)^0,w,c
 15891  0087B4  6FA0               	movwf	(_ts_system+17)& (0+255),b	;volatile
 15892  0087B6                     l21519:
 15893                           
 15894                           ;sm_ControlGate_MC50.c: 83:         var_sys.StateMotor = InOpenWalk;
 15895  0087B6  0E02               	movlw	2
 15896  0087B8  0101               	movlb	1	; () banked
 15897  0087BA  6F55               	movwf	_var_sys& (0+255),b	;volatile
 15898                           
 15899                           ; BSR set to: 1
 15900                           ;sm_ControlGate_MC50.c: 84:         var_sys.Timewalkisactived = YES;
 15901  0087BC  0E01               	movlw	1
 15902  0087BE  6F9F               	movwf	(_var_sys+74)& (0+255),b	;volatile
 15903  0087C0                     l21523:
 15904                           
 15905                           ; BSR set to: 1
 15906                           ;sm_ControlGate_MC50.c: 92:     var_sys.LastState = InOpenWalk;
 15907  0087C0  0E02               	movlw	2
 15908  0087C2  6F60               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15909                           
 15910                           ; BSR set to: 1
 15911                           ;sm_ControlGate_MC50.c: 93:     InitSoftStart();
 15912  0087C4  EC5B  F045         	call	_InitSoftStart	;wreg free
 15913                           
 15914                           ; BSR set to: 1
 15915  0087C8  0012               	return		;funcret
 15916  0087CA                     __end_of_OpenWalkOrder:
 15917                           	callstack 0
 15918                           
 15919 ;; *************** function _sm_send_event *****************
 15920 ;; Defined at:
 15921 ;;		line 34 in file "sm_common_MC50.c"
 15922 ;; Parameters:    Size  Location     Type
 15923 ;;  psm             2   17[COMRAM] PTR struct .
 15924 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 15925 ;;  event           2   19[COMRAM] int 
 15926 ;; Auto vars:     Size  Location     Type
 15927 ;;		None
 15928 ;; Return value:  Size  Location     Type
 15929 ;;                  1    wreg      void 
 15930 ;; Registers used:
 15931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15932 ;; Tracked objects:
 15933 ;;		On entry : 0/0
 15934 ;;		On exit  : 0/0
 15935 ;;		Unchanged: 0/0
 15936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15937 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15939 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15940 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15941 ;;Total ram usage:        6 bytes
 15942 ;; Hardware stack levels used: 1
 15943 ;; Hardware stack levels required when called: 5
 15944 ;; This function calls:
 15945 ;;		_sm_get_current_state
 15946 ;; This function is called by:
 15947 ;;		_OpenFullOrder
 15948 ;;		_WaitPreFlash
 15949 ;;		_CloseOrder
 15950 ;;		_OpenWalkOrder
 15951 ;;		_StopOrder
 15952 ;;		_sm_execute_ControlGate
 15953 ;;		_actionZone_Closed
 15954 ;;		_actionZone_Opening
 15955 ;;		_actionZone_Closing
 15956 ;;		_sm_execute_ControlLearning
 15957 ;;		_sm_execute_main
 15958 ;;		_sm_execute_menuConfiguration
 15959 ;;		_setValueToEdit
 15960 ;;		_controlSelectRemote
 15961 ;;		_controlSaveRemote
 15962 ;; This function uses a non-reentrant model
 15963 ;;
 15964                           
 15965                           	psect	text44
 15966  008BD0                     __ptext44:
 15967                           	callstack 0
 15968  008BD0                     _sm_send_event:
 15969                           	callstack 24
 15970                           
 15971                           ;sm_common_MC50.c: 34: void sm_send_event(sm_t *psm, int event);sm_common_MC50.c: 35: {;
      +                          sm_common_MC50.c: 36:  if(( psm->parent_machine == ((void*)0)) || (sm_get_current_state(
      +                          psm->parent_machine)==psm->parent_state))
 15972                           
 15973                           ; BSR set to: 1
 15974                           ;incstack = 0
 15975  008BD0  EE20 F007          	lfsr	2,7
 15976  008BD4  5012               	movf	sm_send_event@psm^0,w,c
 15977  008BD6  26D9               	addwf	fsr2l,f,c
 15978  008BD8  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15979  008BDA  22DA               	addwfc	fsr2h,f,c
 15980  008BDC  50DE               	movf	postinc2,w,c
 15981  008BDE  10DE               	iorwf	postinc2,w,c
 15982  008BE0  B4D8               	btfsc	status,2,c
 15983  008BE2  D019               	goto	u23790
 15984  008BE4  EE20 F007          	lfsr	2,7
 15985  008BE8  5012               	movf	sm_send_event@psm^0,w,c
 15986  008BEA  26D9               	addwf	fsr2l,f,c
 15987  008BEC  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15988  008BEE  22DA               	addwfc	fsr2h,f,c
 15989  008BF0  CFDE F010          	movff	postinc2,sm_get_current_state@psm
 15990  008BF4  CFDD F011          	movff	postdec2,sm_get_current_state@psm+1
 15991  008BF8  EC63  F04D         	call	_sm_get_current_state	;wreg free
 15992  008BFC  EE20 F009          	lfsr	2,9
 15993  008C00  5012               	movf	sm_send_event@psm^0,w,c
 15994  008C02  26D9               	addwf	fsr2l,f,c
 15995  008C04  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15996  008C06  22DA               	addwfc	fsr2h,f,c
 15997  008C08  50DE               	movf	postinc2,w,c
 15998  008C0A  1810               	xorwf	?_sm_get_current_state^0,w,c
 15999  008C0C  E10E               	bnz	l3565
 16000  008C0E  50DE               	movf	postinc2,w,c
 16001  008C10  1811               	xorwf	(?_sm_get_current_state+1)^0,w,c
 16002  008C12  A4D8               	btfss	status,2,c
 16003  008C14  0012               	return	
 16004  008C16                     u23790:
 16005                           
 16006                           ;sm_common_MC50.c: 38:  {;sm_common_MC50.c: 39:   psm->last_event = event;
 16007  008C16  EE20 F004          	lfsr	2,4
 16008  008C1A  5012               	movf	sm_send_event@psm^0,w,c
 16009  008C1C  26D9               	addwf	fsr2l,f,c
 16010  008C1E  5013               	movf	(sm_send_event@psm+1)^0,w,c
 16011  008C20  22DA               	addwfc	fsr2h,f,c
 16012  008C22  C014  FFDE         	movff	sm_send_event@event,postinc2
 16013  008C26  C015  FFDD         	movff	sm_send_event@event+1,postdec2
 16014  008C2A                     l3565:
 16015  008C2A  0012               	return		;funcret
 16016  008C2C                     __end_of_sm_send_event:
 16017                           	callstack 0
 16018                           
 16019 ;; *************** function _sm_get_current_state *****************
 16020 ;; Defined at:
 16021 ;;		line 30 in file "sm_common_MC50.c"
 16022 ;; Parameters:    Size  Location     Type
 16023 ;;  psm             2   15[COMRAM] PTR struct .
 16024 ;;		 -> NULL(0), 
 16025 ;; Auto vars:     Size  Location     Type
 16026 ;;		None
 16027 ;; Return value:  Size  Location     Type
 16028 ;;                  2   15[COMRAM] int 
 16029 ;; Registers used:
 16030 ;;		fsr2l, fsr2h
 16031 ;; Tracked objects:
 16032 ;;		On entry : 0/0
 16033 ;;		On exit  : 0/0
 16034 ;;		Unchanged: 0/0
 16035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16036 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16039 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16040 ;;Total ram usage:        2 bytes
 16041 ;; Hardware stack levels used: 1
 16042 ;; Hardware stack levels required when called: 4
 16043 ;; This function calls:
 16044 ;;		Nothing
 16045 ;; This function is called by:
 16046 ;;		_sm_send_event
 16047 ;; This function uses a non-reentrant model
 16048 ;;
 16049                           
 16050                           	psect	text45
 16051  009AC6                     __ptext45:
 16052                           	callstack 0
 16053  009AC6                     _sm_get_current_state:
 16054                           	callstack 24
 16055                           
 16056                           ;sm_common_MC50.c: 31:  return psm->current_state;
 16057                           
 16058                           ;incstack = 0
 16059  009AC6  C010  FFD9         	movff	sm_get_current_state@psm,fsr2l
 16060  009ACA  C011  FFDA         	movff	sm_get_current_state@psm+1,fsr2h
 16061  009ACE  CFDE F010          	movff	postinc2,?_sm_get_current_state
 16062  009AD2  CFDD F011          	movff	postdec2,?_sm_get_current_state+1
 16063  009AD6  0012               	return		;funcret
 16064  009AD8                     __end_of_sm_get_current_state:
 16065                           	callstack 0
 16066                           
 16067 ;; *************** function _InitSoftStart *****************
 16068 ;; Defined at:
 16069 ;;		line 816 in file "sm_ControlGate_MC50.c"
 16070 ;; Parameters:    Size  Location     Type
 16071 ;;		None
 16072 ;; Auto vars:     Size  Location     Type
 16073 ;;		None
 16074 ;; Return value:  Size  Location     Type
 16075 ;;                  1    wreg      void 
 16076 ;; Registers used:
 16077 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16078 ;; Tracked objects:
 16079 ;;		On entry : 3F/1
 16080 ;;		On exit  : 3F/1
 16081 ;;		Unchanged: 0/0
 16082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16085 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16086 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16087 ;;Total ram usage:        1 bytes
 16088 ;; Hardware stack levels used: 1
 16089 ;; Hardware stack levels required when called: 5
 16090 ;; This function calls:
 16091 ;;		_GetMotorPower
 16092 ;; This function is called by:
 16093 ;;		_OpenFullOrder
 16094 ;;		_CloseOrder
 16095 ;;		_OpenWalkOrder
 16096 ;; This function uses a non-reentrant model
 16097 ;;
 16098                           
 16099                           	psect	text46
 16100  008AB6                     __ptext46:
 16101                           	callstack 0
 16102  008AB6                     _InitSoftStart:
 16103                           	callstack 22
 16104                           
 16105                           ; BSR set to: 1
 16106                           ;sm_ControlGate_MC50.c: 817:     if (var_sys_NVM.softStart != 0 && var_sys.AutoInversion
      +                          Active == NO) {
 16107                           
 16108                           ;incstack = 0
 16109  008AB6  51B8               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 16110  008AB8  B4D8               	btfsc	status,2,c
 16111  008ABA  0012               	return	
 16112                           
 16113                           ; BSR set to: 1
 16114  008ABC  517C               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 16115  008ABE  A4D8               	btfss	status,2,c
 16116  008AC0  0012               	return	
 16117                           
 16118                           ; BSR set to: 1
 16119                           ;sm_ControlGate_MC50.c: 824:         var_sys.velocityFactorstop = 0;
 16120  008AC2  0E00               	movlw	0
 16121  008AC4  6F66               	movwf	(_var_sys+17)& (0+255),b	;volatile
 16122  008AC6  0E00               	movlw	0
 16123  008AC8  6F65               	movwf	(_var_sys+16)& (0+255),b	;volatile
 16124                           
 16125                           ;sm_ControlGate_MC50.c: 825:         var_sys.velocityFactor = 0;
 16126  008ACA  0E00               	movlw	0
 16127  008ACC  6F64               	movwf	(_var_sys+15)& (0+255),b	;volatile
 16128  008ACE  0E00               	movlw	0
 16129  008AD0  6F63               	movwf	(_var_sys+14)& (0+255),b	;volatile
 16130                           
 16131                           ; BSR set to: 1
 16132                           ;sm_ControlGate_MC50.c: 826:         var_sys.velocityFactor = GetMotorPower();
 16133  008AD2  EC49  F03C         	call	_GetMotorPower	;wreg free
 16134  008AD6  6E14               	movwf	??_InitSoftStart^0,c
 16135  008AD8  5014               	movf	??_InitSoftStart^0,w,c
 16136  008ADA  0101               	movlb	1	; () banked
 16137  008ADC  6F63               	movwf	(_var_sys+14)& (0+255),b	;volatile
 16138  008ADE  6B64               	clrf	(_var_sys+15)& (0+255),b	;volatile
 16139                           
 16140                           ; BSR set to: 1
 16141                           ;sm_ControlGate_MC50.c: 827:         if ( var_sys.velocityFactor > (81) )
 16142  008AE0  BF64               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 16143  008AE2  D00A               	goto	l20401
 16144  008AE4  5164               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 16145  008AE6  E104               	bnz	u23820
 16146  008AE8  0E52               	movlw	82
 16147  008AEA  5D63               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 16148  008AEC  A0D8               	btfss	status,0,c
 16149  008AEE  D004               	goto	l20401
 16150  008AF0                     u23820:
 16151                           
 16152                           ; BSR set to: 1
 16153                           ;sm_ControlGate_MC50.c: 828:         {;sm_ControlGate_MC50.c: 829:             var_sys.v
      +                          elocityFactor = (81);
 16154  008AF0  0E00               	movlw	0
 16155  008AF2  6F64               	movwf	(_var_sys+15)& (0+255),b	;volatile
 16156  008AF4  0E51               	movlw	81
 16157  008AF6  6F63               	movwf	(_var_sys+14)& (0+255),b	;volatile
 16158  008AF8                     l20401:
 16159                           
 16160                           ; BSR set to: 1
 16161                           ;sm_ControlGate_MC50.c: 840:         ts_system.timeSoftStart = var_sys.velocityFactor + 
      +                          1;
 16162  008AF8  0E01               	movlw	1
 16163  008AFA  2563               	addwf	(_var_sys+14)& (0+255),w,b	;volatile
 16164  008AFC  0100               	movlb	0	; () banked
 16165  008AFE  6FA5               	movwf	(_ts_system+22)& (0+255),b	;volatile
 16166  008B00  0E00               	movlw	0
 16167  008B02  0101               	movlb	1	; () banked
 16168  008B04  2164               	addwfc	(_var_sys+15)& (0+255),w,b	;volatile
 16169  008B06  0100               	movlb	0	; () banked
 16170  008B08  6FA6               	movwf	(_ts_system+23)& (0+255),b	;volatile
 16171                           
 16172                           ;sm_ControlGate_MC50.c: 842:         var_sys.SoftStartDecrementControl = 10 - var_sys_NV
      +                          M.softStart;
 16173  008B0A  0101               	movlb	1	; () banked
 16174  008B0C  51B8               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 16175  008B0E  080A               	sublw	10
 16176  008B10  6F69               	movwf	(_var_sys+20)& (0+255),b	;volatile
 16177                           
 16178                           ; BSR set to: 1
 16179  008B12  0012               	return		;funcret
 16180  008B14                     __end_of_InitSoftStart:
 16181                           	callstack 0
 16182                           
 16183 ;; *************** function _InitWalkAutoTime *****************
 16184 ;; Defined at:
 16185 ;;		line 103 in file "sm_ControlGate_MC50.c"
 16186 ;; Parameters:    Size  Location     Type
 16187 ;;		None
 16188 ;; Auto vars:     Size  Location     Type
 16189 ;;		None
 16190 ;; Return value:  Size  Location     Type
 16191 ;;                  1    wreg      void 
 16192 ;; Registers used:
 16193 ;;		wreg, status,2, status,0, prodl, prodh
 16194 ;; Tracked objects:
 16195 ;;		On entry : 0/1
 16196 ;;		On exit  : 3F/1
 16197 ;;		Unchanged: 0/0
 16198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16203 ;;Total ram usage:        0 bytes
 16204 ;; Hardware stack levels used: 1
 16205 ;; Hardware stack levels required when called: 4
 16206 ;; This function calls:
 16207 ;;		Nothing
 16208 ;; This function is called by:
 16209 ;;		_actionZone_Closed
 16210 ;;		_actionZone_Opening
 16211 ;;		_actionZone_Opened
 16212 ;;		_actionZone_Closing
 16213 ;; This function uses a non-reentrant model
 16214 ;;
 16215                           
 16216                           	psect	text47
 16217  009A8A                     __ptext47:
 16218                           	callstack 0
 16219  009A8A                     _InitWalkAutoTime:
 16220                           	callstack 24
 16221                           
 16222                           ;sm_ControlGate_MC50.c: 105:     ts_system.timeWaitToClose = ((int) var_sys_NVM.autoTime
      +                          WalkClose * (1000/50));
 16223                           
 16224                           ; BSR set to: 1
 16225                           ;incstack = 0
 16226  009A8A  0101               	movlb	1	; () banked
 16227  009A8C  51AC               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 16228  009A8E  0D14               	mullw	20
 16229  009A90  CFF3 F0A1          	movff	prodl,_ts_system+18	;volatile
 16230  009A94  CFF4 F0A2          	movff	prodh,_ts_system+19	;volatile
 16231                           
 16232                           ; BSR set to: 1
 16233                           ;sm_ControlGate_MC50.c: 106:     var_sys.AutoCloseActive = var_sys_NVM.autoTimeWalkClose
      +                          ;
 16234  009A98  C1AC  F178         	movff	_var_sys_NVM+6,_var_sys+35	;volatile
 16235                           
 16236                           ; BSR set to: 1
 16237  009A9C  0012               	return		;funcret
 16238  009A9E                     __end_of_InitWalkAutoTime:
 16239                           	callstack 0
 16240                           
 16241 ;; *************** function _GetSecurityStateInOpening *****************
 16242 ;; Defined at:
 16243 ;;		line 738 in file "inputs_MC50.c"
 16244 ;; Parameters:    Size  Location     Type
 16245 ;;		None
 16246 ;; Auto vars:     Size  Location     Type
 16247 ;;		None
 16248 ;; Return value:  Size  Location     Type
 16249 ;;                  1    wreg      enum E10564
 16250 ;; Registers used:
 16251 ;;		wreg, status,2, status,0, cstack
 16252 ;; Tracked objects:
 16253 ;;		On entry : 0/0
 16254 ;;		On exit  : 3E/0
 16255 ;;		Unchanged: 0/0
 16256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16261 ;;Total ram usage:        0 bytes
 16262 ;; Hardware stack levels used: 1
 16263 ;; Hardware stack levels required when called: 5
 16264 ;; This function calls:
 16265 ;;		_SetSegmentValueIntermitent
 16266 ;; This function is called by:
 16267 ;;		_actionZone_Closed
 16268 ;;		_actionZone_Opening
 16269 ;; This function uses a non-reentrant model
 16270 ;;
 16271                           
 16272                           	psect	text48
 16273  007BFA                     __ptext48:
 16274                           	callstack 0
 16275  007BFA                     _GetSecurityStateInOpening:
 16276                           	callstack 23
 16277                           
 16278                           ;inputs_MC50.c: 747:     if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBarI
      +                          sObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 1)&& (var_sys_NVM.Stopboton == 0
      +                          ))
 16279                           
 16280                           ; BSR set to: 1
 16281                           ;incstack = 0
 16282  007BFA  0101               	movlb	1	; () banked
 16283  007BFC  05AF               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 16284  007BFE  A4D8               	btfss	status,2,c
 16285  007C00  D019               	goto	l21185
 16286                           
 16287                           ; BSR set to: 1
 16288  007C02  0557               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 16289  007C04  A4D8               	btfss	status,2,c
 16290  007C06  D016               	goto	l21185
 16291                           
 16292                           ; BSR set to: 1
 16293  007C08  05B1               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 16294  007C0A  A4D8               	btfss	status,2,c
 16295  007C0C  D013               	goto	l21185
 16296                           
 16297                           ; BSR set to: 1
 16298  007C0E  51BC               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 16299  007C10  A4D8               	btfss	status,2,c
 16300  007C12  D010               	goto	l21185
 16301                           
 16302                           ; BSR set to: 1
 16303                           ;inputs_MC50.c: 748:     {;inputs_MC50.c: 750:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 16304  007C14  0E00               	movlw	0
 16305  007C16  0100               	movlb	0	; () banked
 16306  007C18  6F9C               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16307  007C1A  0E04               	movlw	4
 16308  007C1C  6F9B               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16309                           
 16310                           ; BSR set to: 0
 16311                           ;inputs_MC50.c: 751:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 16312  007C1E  0E0A               	movlw	10
 16313  007C20  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 16314  007C22  0E00               	movlw	0
 16315  007C24  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 16316  007C26  0E14               	movlw	20
 16317  007C28  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 16318  007C2A  0E12               	movlw	18
 16319  007C2C  EC61  F04A         	call	_SetSegmentValueIntermitent
 16320  007C30                     l21179:
 16321                           
 16322                           ;inputs_MC50.c: 752:         return YES;
 16323  007C30  0E01               	movlw	1
 16324  007C32  0012               	return	
 16325  007C34                     l21185:
 16326                           
 16327                           ; BSR set to: 1
 16328  007C34  05BC               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 16329  007C36  A4D8               	btfss	status,2,c
 16330  007C38  D013               	goto	l21199
 16331                           
 16332                           ; BSR set to: 1
 16333  007C3A  0557               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 16334  007C3C  A4D8               	btfss	status,2,c
 16335  007C3E  D010               	goto	l21199
 16336                           
 16337                           ; BSR set to: 1
 16338                           ;inputs_MC50.c: 756:     {;inputs_MC50.c: 758:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 16339  007C40  0E00               	movlw	0
 16340  007C42  0100               	movlb	0	; () banked
 16341  007C44  6F9C               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16342  007C46  0E04               	movlw	4
 16343  007C48  6F9B               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16344                           
 16345                           ; BSR set to: 0
 16346                           ;inputs_MC50.c: 759:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 16347  007C4A  0E15               	movlw	21
 16348  007C4C  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 16349  007C4E  0E00               	movlw	0
 16350  007C50  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 16351  007C52  0E14               	movlw	20
 16352  007C54  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 16353  007C56  0E05               	movlw	5
 16354  007C58  EC61  F04A         	call	_SetSegmentValueIntermitent
 16355                           
 16356                           ;inputs_MC50.c: 760:         return ST;
 16357  007C5C  0E02               	movlw	2
 16358  007C5E  0012               	return	
 16359  007C60                     l21199:
 16360                           
 16361                           ; BSR set to: 1
 16362  007C60  05AD               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 16363  007C62  A4D8               	btfss	status,2,c
 16364  007C64  D015               	goto	l21215
 16365                           
 16366                           ; BSR set to: 1
 16367  007C66  0556               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 16368  007C68  A4D8               	btfss	status,2,c
 16369  007C6A  D012               	goto	l21215
 16370                           
 16371                           ; BSR set to: 1
 16372  007C6C  05AE               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 16373  007C6E  A4D8               	btfss	status,2,c
 16374  007C70  D00F               	goto	l21215
 16375                           
 16376                           ; BSR set to: 1
 16377                           ;inputs_MC50.c: 764:     {;inputs_MC50.c: 766:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 16378  007C72  0E00               	movlw	0
 16379  007C74  0100               	movlb	0	; () banked
 16380  007C76  6F9C               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16381  007C78  0E04               	movlw	4
 16382  007C7A  6F9B               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16383                           
 16384                           ; BSR set to: 0
 16385                           ;inputs_MC50.c: 767:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 16386  007C7C  0E0E               	movlw	14
 16387  007C7E  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 16388  007C80  0E00               	movlw	0
 16389  007C82  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 16390  007C84  0E14               	movlw	20
 16391  007C86  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 16392  007C88  0E12               	movlw	18
 16393  007C8A  EC61  F04A         	call	_SetSegmentValueIntermitent
 16394  007C8E  D7D0               	goto	l21179
 16395  007C90                     l21215:
 16396                           
 16397                           ; BSR set to: 1
 16398                           ;inputs_MC50.c: 771:     {;inputs_MC50.c: 772:         return NO;
 16399  007C90  0E00               	movlw	0
 16400  007C92  0012               	return		;funcret
 16401  007C94                     __end_of_GetSecurityStateInOpening:
 16402                           	callstack 0
 16403                           
 16404 ;; *************** function _SetSegmentValueIntermitent *****************
 16405 ;; Defined at:
 16406 ;;		line 201 in file "outputs_MC50.c"
 16407 ;; Parameters:    Size  Location     Type
 16408 ;;  d1              1    wreg     unsigned char 
 16409 ;;  d2              1   15[COMRAM] unsigned char 
 16410 ;;  time            2   16[COMRAM] int 
 16411 ;; Auto vars:     Size  Location     Type
 16412 ;;  d1              1   18[COMRAM] unsigned char 
 16413 ;; Return value:  Size  Location     Type
 16414 ;;                  1    wreg      void 
 16415 ;; Registers used:
 16416 ;;		wreg, status,2, status,0
 16417 ;; Tracked objects:
 16418 ;;		On entry : 3F/0
 16419 ;;		On exit  : 3E/0
 16420 ;;		Unchanged: 0/0
 16421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16422 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16423 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16425 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16426 ;;Total ram usage:        4 bytes
 16427 ;; Hardware stack levels used: 1
 16428 ;; Hardware stack levels required when called: 4
 16429 ;; This function calls:
 16430 ;;		Nothing
 16431 ;; This function is called by:
 16432 ;;		_GetSecurityStateInOpening
 16433 ;;		_GetSecurityStateInClosing
 16434 ;;		_sm_execute_ControlGate
 16435 ;;		_actionZone_Opening
 16436 ;;		_actionZone_Closing
 16437 ;; This function uses a non-reentrant model
 16438 ;;
 16439                           
 16440                           	psect	text49
 16441  0094C2                     __ptext49:
 16442                           	callstack 0
 16443  0094C2                     _SetSegmentValueIntermitent:
 16444                           	callstack 24
 16445                           
 16446                           ;incstack = 0
 16447                           ;SetSegmentValueIntermitent@d1 stored from wreg
 16448  0094C2  6E13               	movwf	SetSegmentValueIntermitent@d1^0,c
 16449                           
 16450                           ;outputs_MC50.c: 201: void SetSegmentValueIntermitent(char d1, char d2,int time);outputs
      +                          _MC50.c: 202: {;outputs_MC50.c: 204:     if ( main_stateMachine.current_state != st_Menu
      +                          Configuration && (ts_system.timeoutMenu == 0 && button_struct.timer < (1000/50)))
 16451  0094C4  0101               	movlb	1	; () banked
 16452  0094C6  05F1               	decf	_main_stateMachine& (0+255),w,b
 16453  0094C8  11F2               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 16454  0094CA  B4D8               	btfsc	status,2,c
 16455  0094CC  0012               	return	
 16456                           
 16457                           ; BSR set to: 1
 16458  0094CE  0100               	movlb	0	; () banked
 16459  0094D0  519D               	movf	(_ts_system+14)& (0+255),w,b	;volatile
 16460  0094D2  119E               	iorwf	(_ts_system+15)& (0+255),w,b	;volatile
 16461  0094D4  A4D8               	btfss	status,2,c
 16462  0094D6  0012               	return	
 16463                           
 16464                           ; BSR set to: 0
 16465  0094D8  0E14               	movlw	20
 16466  0094DA  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16467  0094DC  0012               	return	
 16468                           
 16469                           ; BSR set to: 0
 16470                           ;outputs_MC50.c: 205:     {;outputs_MC50.c: 206:         dispStruct.display_grp.value_di
      +                          splay1=d1;
 16471  0094DE  C013  F060         	movff	SetSegmentValueIntermitent@d1,_dispStruct	;volatile
 16472                           
 16473                           ;outputs_MC50.c: 207:         dispStruct.display_grp.value_display2=d2;
 16474  0094E2  C010  F061         	movff	SetSegmentValueIntermitent@d2,_dispStruct+1	;volatile
 16475                           
 16476                           ;outputs_MC50.c: 208:         dispStruct.intermitentFreq=time;
 16477  0094E6  C011  F063         	movff	SetSegmentValueIntermitent@time,_dispStruct+3	;volatile
 16478  0094EA  C012  F064         	movff	SetSegmentValueIntermitent@time+1,_dispStruct+4	;volatile
 16479  0094EE  0012               	return		;funcret
 16480  0094F0                     __end_of_SetSegmentValueIntermitent:
 16481                           	callstack 0
 16482                           
 16483 ;; *************** function _GetOpenOrder *****************
 16484 ;; Defined at:
 16485 ;;		line 330 in file "inputs_MC50.c"
 16486 ;; Parameters:    Size  Location     Type
 16487 ;;		None
 16488 ;; Auto vars:     Size  Location     Type
 16489 ;;		None
 16490 ;; Return value:  Size  Location     Type
 16491 ;;                  1    wreg      enum E10539
 16492 ;; Registers used:
 16493 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16494 ;; Tracked objects:
 16495 ;;		On entry : 3E/1
 16496 ;;		On exit  : 0/0
 16497 ;;		Unchanged: 0/0
 16498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16503 ;;Total ram usage:        0 bytes
 16504 ;; Hardware stack levels used: 1
 16505 ;; Hardware stack levels required when called: 5
 16506 ;; This function calls:
 16507 ;;		_SetSegmentValueIntermitentMain
 16508 ;;		___lbdiv
 16509 ;; This function is called by:
 16510 ;;		_sm_execute_ControlGate
 16511 ;;		_actionZone_Closed
 16512 ;;		_actionZone_Opening
 16513 ;;		_actionZone_Opened
 16514 ;;		_actionZone_Closing
 16515 ;;		_sm_execute_ControlLearning
 16516 ;; This function uses a non-reentrant model
 16517 ;;
 16518                           
 16519                           	psect	text50
 16520  005C00                     __ptext50:
 16521                           	callstack 0
 16522  005C00                     _GetOpenOrder:
 16523                           	callstack 23
 16524                           
 16525                           ;inputs_MC50.c: 332:    if (var_sys.LearningIsEnabled == NO){
 16526                           
 16527                           ;incstack = 0
 16528  005C00  0101               	movlb	1	; () banked
 16529  005C02  517B               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 16530  005C04  A4D8               	btfss	status,2,c
 16531  005C06  D0C1               	goto	l21155
 16532                           
 16533                           ; BSR set to: 1
 16534                           ;inputs_MC50.c: 334:        if(ts_system.TimeCurrentAlarm>0)
 16535  005C08  0100               	movlb	0	; () banked
 16536  005C0A  BFBA               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 16537  005C0C  D019               	goto	l21047
 16538  005C0E  51BA               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 16539  005C10  E103               	bnz	u24630
 16540  005C12  05B9               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 16541  005C14  A0D8               	btfss	status,0,c
 16542  005C16  D014               	goto	l21047
 16543  005C18                     u24630:
 16544                           
 16545                           ; BSR set to: 0
 16546                           ;inputs_MC50.c: 336:         {;inputs_MC50.c: 337:             SetSegmentValueIntermiten
      +                          tMain(dL,d1,(1000/50));
 16547  005C18  0E01               	movlw	1
 16548  005C1A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16549  005C1C  0E00               	movlw	0
 16550  005C1E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16551  005C20  0E14               	movlw	20
 16552  005C22  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16553  005C24  0E12               	movlw	18
 16554  005C26  EC4F  F04D         	call	_SetSegmentValueIntermitentMain
 16555                           
 16556                           ;inputs_MC50.c: 338:             ts_system.timeSinalizationDigit=( 500/50);
 16557  005C2A  0E00               	movlw	0
 16558  005C2C  0100               	movlb	0	; () banked
 16559  005C2E  6F9C               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16560  005C30  0E0A               	movlw	10
 16561  005C32  6F9B               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16562                           
 16563                           ; BSR set to: 0
 16564                           ;inputs_MC50.c: 339:             rfCMD.processed=1;
 16565  005C34  0E01               	movlw	1
 16566  005C36  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16567                           
 16568                           ; BSR set to: 0
 16569                           ;inputs_MC50.c: 340:             button_struct.processed=1;
 16570  005C38  0E01               	movlw	1
 16571  005C3A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16572  005C3C                     l21041:
 16573                           
 16574                           ;inputs_MC50.c: 341:             return NoCMD;
 16575  005C3C  0E00               	movlw	0
 16576  005C3E  0012               	return	
 16577  005C40                     l21047:
 16578                           
 16579                           ; BSR set to: 0
 16580  005C40  0101               	movlb	1	; () banked
 16581  005C42  51B6               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16582  005C44  B4D8               	btfsc	status,2,c
 16583  005C46  D02F               	goto	l21081
 16584                           
 16585                           ; BSR set to: 1
 16586                           ;inputs_MC50.c: 344:         {;inputs_MC50.c: 345:             if(button_struct.current=
      +                          =0x35)
 16587  005C48  0E35               	movlw	53
 16588  005C4A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16589  005C4C  A4D8               	btfss	status,2,c
 16590  005C4E  D017               	goto	l21065
 16591                           
 16592                           ; BSR set to: 1
 16593                           ;inputs_MC50.c: 346:             {;inputs_MC50.c: 347:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16594  005C50  0E00               	movlw	0
 16595  005C52  0100               	movlb	0	; () banked
 16596  005C54  6F9C               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16597  005C56  0E0A               	movlw	10
 16598  005C58  6F9B               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16599                           
 16600                           ; BSR set to: 0
 16601                           ;inputs_MC50.c: 348:                 SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16602  005C5A  0E00               	movlw	0
 16603  005C5C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16604  005C5E  0E00               	movlw	0
 16605  005C60  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16606  005C62  0E04               	movlw	4
 16607  005C64  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16608  005C66  0E12               	movlw	18
 16609  005C68  EC4F  F04D         	call	_SetSegmentValueIntermitentMain
 16610                           
 16611                           ;inputs_MC50.c: 349:                 if (var_sys_NVM.homemPresente == 2){
 16612  005C6C  0E02               	movlw	2
 16613  005C6E  0101               	movlb	1	; () banked
 16614  005C70  19B6               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16615  005C72  A4D8               	btfss	status,2,c
 16616  005C74  D002               	goto	l21059
 16617  005C76                     u24660:
 16618                           
 16619                           ; BSR set to: 1
 16620                           ;inputs_MC50.c: 350:                    button_struct.processed=1;
 16621  005C76  0E01               	movlw	1
 16622  005C78  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16623  005C7A                     l21059:
 16624                           
 16625                           ; BSR set to: 1
 16626                           ;inputs_MC50.c: 352:                 return TypeFullOpen;
 16627  005C7A  0E03               	movlw	3
 16628  005C7C  0012               	return	
 16629  005C7E                     l21065:
 16630                           
 16631                           ; BSR set to: 1
 16632  005C7E  0E33               	movlw	51
 16633  005C80  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16634  005C82  A4D8               	btfss	status,2,c
 16635  005C84  D7DB               	goto	l21041
 16636                           
 16637                           ; BSR set to: 1
 16638                           ;inputs_MC50.c: 355:             {;inputs_MC50.c: 356:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16639  005C86  0E00               	movlw	0
 16640  005C88  0100               	movlb	0	; () banked
 16641  005C8A  6F9C               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16642  005C8C  0E0A               	movlw	10
 16643  005C8E  6F9B               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16644                           
 16645                           ; BSR set to: 0
 16646                           ;inputs_MC50.c: 357:                 SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16647  005C90  0E05               	movlw	5
 16648  005C92  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16649  005C94  0E00               	movlw	0
 16650  005C96  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16651  005C98  0E04               	movlw	4
 16652  005C9A  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16653  005C9C  0E12               	movlw	18
 16654  005C9E  EC4F  F04D         	call	_SetSegmentValueIntermitentMain
 16655  005CA2                     l21071:
 16656                           
 16657                           ;inputs_MC50.c: 359:                 return TypeFullClose;
 16658  005CA2  0E04               	movlw	4
 16659  005CA4  0012               	return	
 16660  005CA6                     l21081:
 16661                           
 16662                           ; BSR set to: 1
 16663  005CA6  0E35               	movlw	53
 16664  005CA8  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16665  005CAA  A4D8               	btfss	status,2,c
 16666  005CAC  D016               	goto	l21103
 16667                           
 16668                           ; BSR set to: 1
 16669                           ;inputs_MC50.c: 371:         {;inputs_MC50.c: 372:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16670  005CAE  0E00               	movlw	0
 16671  005CB0  0100               	movlb	0	; () banked
 16672  005CB2  6F9C               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16673  005CB4  0E28               	movlw	40
 16674  005CB6  6F9B               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16675                           
 16676                           ; BSR set to: 0
 16677                           ;inputs_MC50.c: 373:             SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16678  005CB8  0E00               	movlw	0
 16679  005CBA  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16680  005CBC  0E00               	movlw	0
 16681  005CBE  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16682  005CC0  0E04               	movlw	4
 16683  005CC2  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16684  005CC4  0E12               	movlw	18
 16685  005CC6  EC4F  F04D         	call	_SetSegmentValueIntermitentMain
 16686                           
 16687                           ;inputs_MC50.c: 374:             if(var_sys_NVM.logicDigital==1)
 16688  005CCA  0101               	movlb	1	; () banked
 16689  005CCC  05B7               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16690  005CCE  B4D8               	btfsc	status,2,c
 16691  005CD0  D7D2               	goto	u24660
 16692  005CD2                     l21097:
 16693                           
 16694                           ;inputs_MC50.c: 380:             {;inputs_MC50.c: 381:                 button_struct.pro
      +                          cessed=1;
 16695  005CD2  0E01               	movlw	1
 16696  005CD4  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16697                           
 16698                           ;inputs_MC50.c: 382:                 return TypeFull;
 16699  005CD6  0E01               	movlw	1
 16700  005CD8  0012               	return	
 16701  005CDA                     l21103:
 16702                           
 16703                           ; BSR set to: 1
 16704  005CDA  0E33               	movlw	51
 16705  005CDC  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16706  005CDE  A4D8               	btfss	status,2,c
 16707  005CE0  D019               	goto	l21125
 16708                           
 16709                           ; BSR set to: 1
 16710                           ;inputs_MC50.c: 387:         {;inputs_MC50.c: 389:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16711  005CE2  0E00               	movlw	0
 16712  005CE4  0100               	movlb	0	; () banked
 16713  005CE6  6F9C               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16714  005CE8  0E28               	movlw	40
 16715  005CEA  6F9B               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16716                           
 16717                           ; BSR set to: 0
 16718                           ;inputs_MC50.c: 390:             SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16719  005CEC  0E05               	movlw	5
 16720  005CEE  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16721  005CF0  0E00               	movlw	0
 16722  005CF2  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16723  005CF4  0E04               	movlw	4
 16724  005CF6  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16725  005CF8  0E12               	movlw	18
 16726  005CFA  EC4F  F04D         	call	_SetSegmentValueIntermitentMain
 16727                           
 16728                           ;inputs_MC50.c: 391:             if(var_sys_NVM.logicDigital==1)
 16729  005CFE  0101               	movlb	1	; () banked
 16730  005D00  05B7               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16731  005D02  A4D8               	btfss	status,2,c
 16732  005D04  D003               	goto	l21119
 16733                           
 16734                           ; BSR set to: 1
 16735                           ;inputs_MC50.c: 392:             {;inputs_MC50.c: 393:                  button_struct.pr
      +                          ocessed=1;
 16736  005D06  0E01               	movlw	1
 16737  005D08  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16738  005D0A  D7CB               	goto	l21071
 16739  005D0C                     l21119:
 16740                           
 16741                           ; BSR set to: 1
 16742                           ;inputs_MC50.c: 399:             {;inputs_MC50.c: 400:                  button_struct.pr
      +                          ocessed=1;
 16743  005D0C  0E01               	movlw	1
 16744  005D0E  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16745                           
 16746                           ; BSR set to: 1
 16747                           ;inputs_MC50.c: 402:                 return TypeWalk;
 16748  005D10  0E02               	movlw	2
 16749  005D12  0012               	return	
 16750  005D14                     l21125:
 16751                           
 16752                           ; BSR set to: 1
 16753  005D14  0E36               	movlw	54
 16754  005D16  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16755  005D18  A4D8               	btfss	status,2,c
 16756  005D1A  D00F               	goto	l21139
 16757                           
 16758                           ; BSR set to: 1
 16759                           ;inputs_MC50.c: 408:         {;inputs_MC50.c: 409:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16760  005D1C  0E00               	movlw	0
 16761  005D1E  0100               	movlb	0	; () banked
 16762  005D20  6F9C               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16763  005D22  0E28               	movlw	40
 16764  005D24  6F9B               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16765                           
 16766                           ; BSR set to: 0
 16767                           ;inputs_MC50.c: 410:             SetSegmentValueIntermitentMain(dP,dU,( 200/50));
 16768  005D26  0E13               	movlw	19
 16769  005D28  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16770  005D2A  0E00               	movlw	0
 16771  005D2C  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16772  005D2E  0E04               	movlw	4
 16773  005D30  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16774  005D32  0E10               	movlw	16
 16775  005D34  EC4F  F04D         	call	_SetSegmentValueIntermitentMain
 16776  005D38  D7CC               	goto	l21097
 16777  005D3A                     l21139:
 16778                           
 16779                           ; BSR set to: 1
 16780                           ;inputs_MC50.c: 417:         {;inputs_MC50.c: 418:             if(rfCMD.currentType!=NoC
      +                          MD && rfCMD.currentType!=TypeProgrammingModeFull && rfCMD.currentType!=TypeProgrammingMo
      +                          deWalk )
 16781  005D3A  503B               	movf	_rfCMD^0,w,c	;volatile
 16782  005D3C  B4D8               	btfsc	status,2,c
 16783  005D3E  D023               	goto	l21151
 16784                           
 16785                           ; BSR set to: 1
 16786  005D40  0E06               	movlw	6
 16787  005D42  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16788  005D44  B4D8               	btfsc	status,2,c
 16789  005D46  D01F               	goto	l21151
 16790                           
 16791                           ; BSR set to: 1
 16792  005D48  0E05               	movlw	5
 16793  005D4A  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16794  005D4C  B4D8               	btfsc	status,2,c
 16795  005D4E  D01B               	goto	l21151
 16796                           
 16797                           ; BSR set to: 1
 16798                           ;inputs_MC50.c: 419:             {;inputs_MC50.c: 420:                 SetSegmentValueIn
      +                          termitentMain(rfCMD.currentPosMem/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),
      +                          ( 200/50));
 16799  005D50  0E0A               	movlw	10
 16800  005D52  6E10               	movwf	___lbdiv@divisor^0,c
 16801  005D54  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16802  005D56  ECC7  F049         	call	___lbdiv
 16803  005D5A  0DF6               	mullw	246
 16804  005D5C  50F3               	movf	243,w,c
 16805  005D5E  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16806  005D60  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16807  005D62  0E00               	movlw	0
 16808  005D64  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16809  005D66  0E04               	movlw	4
 16810  005D68  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16811  005D6A  0E0A               	movlw	10
 16812  005D6C  6E10               	movwf	___lbdiv@divisor^0,c
 16813  005D6E  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16814  005D70  ECC7  F049         	call	___lbdiv
 16815  005D74  EC4F  F04D         	call	_SetSegmentValueIntermitentMain
 16816                           
 16817                           ;inputs_MC50.c: 421:                 ts_system.timeSinalizationDigit=(1000/50)*2;
 16818  005D78  0E00               	movlw	0
 16819  005D7A  0100               	movlb	0	; () banked
 16820  005D7C  6F9C               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16821  005D7E  0E28               	movlw	40
 16822  005D80  6F9B               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16823                           
 16824                           ; BSR set to: 0
 16825                           ;inputs_MC50.c: 422:                 rfCMD.processed=1;
 16826  005D82  0E01               	movlw	1
 16827  005D84  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16828  005D86                     l21151:
 16829                           
 16830                           ;inputs_MC50.c: 425:             return rfCMD.currentType;
 16831  005D86  503B               	movf	_rfCMD^0,w,c	;volatile
 16832  005D88  0012               	return	
 16833  005D8A                     l21155:
 16834                           
 16835                           ; BSR set to: 1
 16836                           ;inputs_MC50.c: 428:     {;inputs_MC50.c: 429:        if(rfCMD.currentType!=NoCMD ){
 16837  005D8A  503B               	movf	_rfCMD^0,w,c	;volatile
 16838  005D8C  B4D8               	btfsc	status,2,c
 16839  005D8E  D01B               	goto	l21163
 16840                           
 16841                           ; BSR set to: 1
 16842                           ;inputs_MC50.c: 430:                   SetSegmentValueIntermitentMain(rfCMD.currentPosMe
      +                          m/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),( 200/50));
 16843  005D90  0E0A               	movlw	10
 16844  005D92  6E10               	movwf	___lbdiv@divisor^0,c
 16845  005D94  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16846  005D96  ECC7  F049         	call	___lbdiv
 16847  005D9A  0DF6               	mullw	246
 16848  005D9C  50F3               	movf	243,w,c
 16849  005D9E  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16850  005DA0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16851  005DA2  0E00               	movlw	0
 16852  005DA4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16853  005DA6  0E04               	movlw	4
 16854  005DA8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16855  005DAA  0E0A               	movlw	10
 16856  005DAC  6E10               	movwf	___lbdiv@divisor^0,c
 16857  005DAE  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16858  005DB0  ECC7  F049         	call	___lbdiv
 16859  005DB4  EC4F  F04D         	call	_SetSegmentValueIntermitentMain
 16860                           
 16861                           ;inputs_MC50.c: 431:                 ts_system.timeSinalizationDigit=(1000/50)*1;
 16862  005DB8  0E00               	movlw	0
 16863  005DBA  0100               	movlb	0	; () banked
 16864  005DBC  6F9C               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16865  005DBE  0E14               	movlw	20
 16866  005DC0  6F9B               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16867                           
 16868                           ; BSR set to: 0
 16869                           ;inputs_MC50.c: 432:                 rfCMD.processed=1;
 16870  005DC2  0E01               	movlw	1
 16871  005DC4  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16872  005DC6                     l21163:
 16873                           
 16874                           ;inputs_MC50.c: 434:        return rfCMD.currentType;
 16875  005DC6  503B               	movf	_rfCMD^0,w,c	;volatile
 16876  005DC8  0012               	return		;funcret
 16877  005DCA                     __end_of_GetOpenOrder:
 16878                           	callstack 0
 16879                           
 16880 ;; *************** function ___lbdiv *****************
 16881 ;; Defined at:
 16882 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbdiv.c"
 16883 ;; Parameters:    Size  Location     Type
 16884 ;;  dividend        1    wreg     unsigned char 
 16885 ;;  divisor         1   15[COMRAM] unsigned char 
 16886 ;; Auto vars:     Size  Location     Type
 16887 ;;  dividend        1   16[COMRAM] unsigned char 
 16888 ;;  quotient        1   18[COMRAM] unsigned char 
 16889 ;;  counter         1   17[COMRAM] unsigned char 
 16890 ;; Return value:  Size  Location     Type
 16891 ;;                  1    wreg      unsigned char 
 16892 ;; Registers used:
 16893 ;;		wreg, status,2, status,0
 16894 ;; Tracked objects:
 16895 ;;		On entry : 0/0
 16896 ;;		On exit  : 0/0
 16897 ;;		Unchanged: 0/0
 16898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16899 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16900 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16902 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16903 ;;Total ram usage:        4 bytes
 16904 ;; Hardware stack levels used: 1
 16905 ;; Hardware stack levels required when called: 4
 16906 ;; This function calls:
 16907 ;;		Nothing
 16908 ;; This function is called by:
 16909 ;;		_GetOpenOrder
 16910 ;;		_sm_execute_menuConfiguration
 16911 ;; This function uses a non-reentrant model
 16912 ;;
 16913                           
 16914                           	psect	text51
 16915  00938E                     __ptext51:
 16916                           	callstack 0
 16917  00938E                     ___lbdiv:
 16918                           	callstack 24
 16919                           
 16920                           ;incstack = 0
 16921                           ;___lbdiv@dividend stored from wreg
 16922  00938E  6E11               	movwf	___lbdiv@dividend^0,c
 16923  009390  0E00               	movlw	0
 16924  009392  6E13               	movwf	___lbdiv@quotient^0,c
 16925  009394  5010               	movf	___lbdiv@divisor^0,w,c
 16926  009396  B4D8               	btfsc	status,2,c
 16927  009398  D015               	goto	l20911
 16928  00939A  0E01               	movlw	1
 16929  00939C  6E12               	movwf	___lbdiv@counter^0,c
 16930  00939E  D003               	goto	l20899
 16931  0093A0                     l20895:
 16932  0093A0  90D8               	bcf	status,0,c
 16933  0093A2  3610               	rlcf	___lbdiv@divisor^0,f,c
 16934  0093A4  2A12               	incf	___lbdiv@counter^0,f,c
 16935  0093A6                     l20899:
 16936  0093A6  AE10               	btfss	___lbdiv@divisor^0,7,c
 16937  0093A8  D7FB               	goto	l20895
 16938  0093AA                     u24460:
 16939  0093AA  90D8               	bcf	status,0,c
 16940  0093AC  3613               	rlcf	___lbdiv@quotient^0,f,c
 16941  0093AE  5010               	movf	___lbdiv@divisor^0,w,c
 16942  0093B0  5C11               	subwf	___lbdiv@dividend^0,w,c
 16943  0093B2  A0D8               	btfss	status,0,c
 16944  0093B4  D003               	goto	l20907
 16945  0093B6  5010               	movf	___lbdiv@divisor^0,w,c
 16946  0093B8  5E11               	subwf	___lbdiv@dividend^0,f,c
 16947  0093BA  8013               	bsf	___lbdiv@quotient^0,0,c
 16948  0093BC                     l20907:
 16949  0093BC  90D8               	bcf	status,0,c
 16950  0093BE  3210               	rrcf	___lbdiv@divisor^0,f,c
 16951  0093C0  2E12               	decfsz	___lbdiv@counter^0,f,c
 16952  0093C2  D7F3               	goto	u24460
 16953  0093C4                     l20911:
 16954  0093C4  5013               	movf	___lbdiv@quotient^0,w,c
 16955  0093C6  0012               	return		;funcret
 16956  0093C8                     __end_of___lbdiv:
 16957                           	callstack 0
 16958                           
 16959 ;; *************** function _SetSegmentValueIntermitentMain *****************
 16960 ;; Defined at:
 16961 ;;		line 193 in file "outputs_MC50.c"
 16962 ;; Parameters:    Size  Location     Type
 16963 ;;  d1              1    wreg     unsigned char 
 16964 ;;  d2              1   27[COMRAM] unsigned char 
 16965 ;;  time            2   28[COMRAM] int 
 16966 ;; Auto vars:     Size  Location     Type
 16967 ;;  d1              1   30[COMRAM] unsigned char 
 16968 ;; Return value:  Size  Location     Type
 16969 ;;                  1    wreg      void 
 16970 ;; Registers used:
 16971 ;;		wreg
 16972 ;; Tracked objects:
 16973 ;;		On entry : 0/1
 16974 ;;		On exit  : 0/0
 16975 ;;		Unchanged: 0/0
 16976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16977 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16978 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16980 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16981 ;;Total ram usage:        4 bytes
 16982 ;; Hardware stack levels used: 1
 16983 ;; Hardware stack levels required when called: 4
 16984 ;; This function calls:
 16985 ;;		Nothing
 16986 ;; This function is called by:
 16987 ;;		_GetOpenOrder
 16988 ;;		_sm_execute_main
 16989 ;;		_sm_execute_menuConfiguration
 16990 ;;		_load_New_Menu
 16991 ;;		_controlSelectRemote
 16992 ;;		_controlSaveRemote
 16993 ;; This function uses a non-reentrant model
 16994 ;;
 16995                           
 16996                           	psect	text52
 16997  009A9E                     __ptext52:
 16998                           	callstack 0
 16999  009A9E                     _SetSegmentValueIntermitentMain:
 17000                           	callstack 22
 17001                           
 17002                           ;incstack = 0
 17003                           ;SetSegmentValueIntermitentMain@d1 stored from wreg
 17004  009A9E  6E1F               	movwf	SetSegmentValueIntermitentMain@d1^0,c
 17005                           
 17006                           ;outputs_MC50.c: 193: void SetSegmentValueIntermitentMain(char d1, char d2,int time);out
      +                          puts_MC50.c: 194: {;outputs_MC50.c: 195:     dispStruct.display_grp.value_display1=d1;
 17007  009AA0  C01F  F060         	movff	SetSegmentValueIntermitentMain@d1,_dispStruct	;volatile
 17008                           
 17009                           ;outputs_MC50.c: 196:     dispStruct.display_grp.value_display2=d2;
 17010  009AA4  C01C  F061         	movff	SetSegmentValueIntermitentMain@d2,_dispStruct+1	;volatile
 17011                           
 17012                           ;outputs_MC50.c: 197:     dispStruct.intermitentFreq=time;
 17013  009AA8  C01D  F063         	movff	SetSegmentValueIntermitentMain@time,_dispStruct+3	;volatile
 17014  009AAC  C01E  F064         	movff	SetSegmentValueIntermitentMain@time+1,_dispStruct+4	;volatile
 17015  009AB0  0012               	return		;funcret
 17016  009AB2                     __end_of_SetSegmentValueIntermitentMain:
 17017                           	callstack 0
 17018                           
 17019 ;; *************** function _readbutton *****************
 17020 ;; Defined at:
 17021 ;;		line 471 in file "inputs_MC50.c"
 17022 ;; Parameters:    Size  Location     Type
 17023 ;;		None
 17024 ;; Auto vars:     Size  Location     Type
 17025 ;;		None
 17026 ;; Return value:  Size  Location     Type
 17027 ;;                  1    wreg      void 
 17028 ;; Registers used:
 17029 ;;		wreg, status,2, status,0
 17030 ;; Tracked objects:
 17031 ;;		On entry : 3F/1
 17032 ;;		On exit  : 3F/1
 17033 ;;		Unchanged: 0/0
 17034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17039 ;;Total ram usage:        0 bytes
 17040 ;; Hardware stack levels used: 1
 17041 ;; Hardware stack levels required when called: 4
 17042 ;; This function calls:
 17043 ;;		Nothing
 17044 ;; This function is called by:
 17045 ;;		_main
 17046 ;; This function uses a non-reentrant model
 17047 ;;
 17048                           
 17049                           	psect	text53
 17050  008914                     __ptext53:
 17051                           	callstack 0
 17052  008914                     _readbutton:
 17053                           	callstack 26
 17054                           
 17055                           ; BSR set to: 1
 17056                           ;inputs_MC50.c: 474:  static unsigned char key1=0, key2=0;;inputs_MC50.c: 479:  key2 = (
      +                           PORTB & 0x37 );
 17057                           
 17058                           ;incstack = 0
 17059  008914  508E               	movf	142,w,c	;volatile
 17060  008916  0B37               	andlw	55
 17061  008918  6F53               	movwf	readbutton@key2& (0+255),b
 17062  00891A  F000               	nop		;# 
 17063  00891C  F000               	nop		;# 
 17064  00891E  F000               	nop		;# 
 17065                           
 17066                           ;inputs_MC50.c: 483:  key1 = ( PORTB & 0x37 );
 17067  008920  508E               	movf	142,w,c	;volatile
 17068  008922  0B37               	andlw	55
 17069  008924  0100               	movlb	0	; () banked
 17070  008926  6F7C               	movwf	readbutton@key1& (0+255),b
 17071                           
 17072                           ;inputs_MC50.c: 485:  if ( key2 == key1 )
 17073  008928  517C               	movf	readbutton@key1& (0+255),w,b
 17074  00892A  0101               	movlb	1	; () banked
 17075  00892C  1953               	xorwf	readbutton@key2& (0+255),w,b
 17076  00892E  A4D8               	btfss	status,2,c
 17077  008930  D003               	goto	l24491
 17078                           
 17079                           ; BSR set to: 1
 17080                           ;inputs_MC50.c: 486:  {;inputs_MC50.c: 487:         button_struct.current = key1;
 17081  008932  C07C  F04D         	movff	readbutton@key1,_button_struct+1	;volatile
 17082                           
 17083                           ;inputs_MC50.c: 488:  }
 17084  008936  D002               	goto	l24493
 17085  008938                     l24491:
 17086                           
 17087                           ; BSR set to: 1
 17088                           ;inputs_MC50.c: 490:     {;inputs_MC50.c: 491:         button_struct.current = 0x37;
 17089  008938  0E37               	movlw	55
 17090  00893A  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 17091  00893C                     l24493:
 17092                           
 17093                           ; BSR set to: 1
 17094                           ;inputs_MC50.c: 494:     if ( button_struct.current == 0x37 || ( button_struct.current !
      +                          = button_struct.old && button_struct.current == 0x00))
 17095  00893C  0E37               	movlw	55
 17096  00893E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 17097  008940  B4D8               	btfsc	status,2,c
 17098  008942  D007               	goto	u30450
 17099                           
 17100                           ; BSR set to: 1
 17101  008944  504C               	movf	_button_struct^0,w,c	;volatile
 17102  008946  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 17103  008948  B4D8               	btfsc	status,2,c
 17104  00894A  D007               	goto	l24501
 17105                           
 17106                           ; BSR set to: 1
 17107  00894C  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 17108  00894E  A4D8               	btfss	status,2,c
 17109  008950  D004               	goto	l24501
 17110  008952                     u30450:
 17111                           
 17112                           ; BSR set to: 1
 17113                           ;inputs_MC50.c: 495:  {;inputs_MC50.c: 496:   button_struct.processed=0;
 17114  008952  0E00               	movlw	0
 17115  008954  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 17116                           
 17117                           ;inputs_MC50.c: 497:         button_struct.timer=0;
 17118  008956  0E00               	movlw	0
 17119  008958  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 17120  00895A                     l24501:
 17121                           
 17122                           ; BSR set to: 1
 17123                           ;inputs_MC50.c: 500:  if ( button_struct.current != 0x37 )
 17124  00895A  0E37               	movlw	55
 17125  00895C  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 17126  00895E  B4D8               	btfsc	status,2,c
 17127  008960  D007               	goto	l24509
 17128                           
 17129                           ; BSR set to: 1
 17130                           ;inputs_MC50.c: 501:  {;inputs_MC50.c: 502:   button_struct.old = button_struct.current;
 17131  008962  C04D  F04C         	movff	_button_struct+1,_button_struct	;volatile
 17132                           
 17133                           ; BSR set to: 1
 17134                           ;inputs_MC50.c: 504:         if ( button_struct.timer < 250 )
 17135  008966  0EFA               	movlw	250
 17136  008968  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 17137  00896A  D004               	goto	l24511
 17138                           
 17139                           ; BSR set to: 1
 17140                           ;inputs_MC50.c: 505:         {;inputs_MC50.c: 506:             button_struct.timer++;
 17141  00896C  2A4E               	incf	(_button_struct+2)^0,f,c	;volatile
 17142  00896E  D002               	goto	l24511
 17143  008970                     l24509:
 17144                           
 17145                           ; BSR set to: 1
 17146                           ;inputs_MC50.c: 515:  {;inputs_MC50.c: 516:   button_struct.timer=0;
 17147  008970  0E00               	movlw	0
 17148  008972  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 17149  008974                     l24511:
 17150                           
 17151                           ; BSR set to: 1
 17152                           ;inputs_MC50.c: 520:  if ( button_struct.processed == 1 )
 17153  008974  044F               	decf	(_button_struct+3)^0,w,c	;volatile
 17154  008976  A4D8               	btfss	status,2,c
 17155  008978  0012               	return	
 17156                           
 17157                           ; BSR set to: 1
 17158                           ;inputs_MC50.c: 521:  {;inputs_MC50.c: 522:   button_struct.current = 0x37;
 17159  00897A  0E37               	movlw	55
 17160  00897C  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 17161                           
 17162                           ; BSR set to: 1
 17163  00897E  0012               	return		;funcret
 17164  008980                     __end_of_readbutton:
 17165                           	callstack 0
 17166                           
 17167 ;; *************** function _read_package *****************
 17168 ;; Defined at:
 17169 ;;		line 21 in file "eusartpackage.c"
 17170 ;; Parameters:    Size  Location     Type
 17171 ;;		None
 17172 ;; Auto vars:     Size  Location     Type
 17173 ;;  package         7   23[COMRAM] struct package_t
 17174 ;; Return value:  Size  Location     Type
 17175 ;;                  7   16[COMRAM] struct package_t
 17176 ;; Registers used:
 17177 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 17178 ;; Tracked objects:
 17179 ;;		On entry : 3F/0
 17180 ;;		On exit  : 3F/E
 17181 ;;		Unchanged: 0/0
 17182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17183 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17184 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17186 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17187 ;;Total ram usage:       14 bytes
 17188 ;; Hardware stack levels used: 1
 17189 ;; Hardware stack levels required when called: 5
 17190 ;; This function calls:
 17191 ;;		_EUSART1_Read
 17192 ;; This function is called by:
 17193 ;;		_main
 17194 ;; This function uses a non-reentrant model
 17195 ;;
 17196                           
 17197                           	psect	text54
 17198  008EE2                     __ptext54:
 17199                           	callstack 0
 17200  008EE2                     _read_package:
 17201                           	callstack 25
 17202                           
 17203                           ; BSR set to: 0
 17204                           ;eusartpackage.c: 22:         struct package_t package;;eusartpackage.c: 24:         if(
      +                          EUSART1_Read()!=0x0A){
 17205                           
 17206                           ; BSR set to: 1
 17207                           ;incstack = 0
 17208  008EE2  EC5B  F048         	call	_EUSART1_Read	;wreg free
 17209  008EE6  0A0A               	xorlw	10
 17210  008EE8  B4D8               	btfsc	status,2,c
 17211  008EEA  D00C               	goto	l24669
 17212  008EEC                     u30980:
 17213                           
 17214                           ; BSR set to: 14
 17215                           ;eusartpackage.c: 25:             package.valid=0;
 17216  008EEC  0E00               	movlw	0
 17217  008EEE  6E1E               	movwf	(read_package@package+6)^0,c
 17218                           
 17219                           ; BSR set to: 14
 17220                           ;eusartpackage.c: 26:             return package;
 17221  008EF0  EE20  F018         	lfsr	2,read_package@package
 17222  008EF4  EE00  F011         	lfsr	0,?_read_package
 17223  008EF8  0E06               	movlw	6
 17224  008EFA                     u30991:
 17225  008EFA  CFDB FFEB          	movff	plusw2,plusw0
 17226  008EFE  06E8               	decf	wreg,f,c
 17227  008F00  E2FC               	bc	u30991
 17228  008F02  0012               	return	
 17229  008F04                     l24669:
 17230                           
 17231                           ; BSR set to: 14
 17232                           ;eusartpackage.c: 29:             package.startbyte=0x0A;
 17233  008F04  0E0A               	movlw	10
 17234  008F06  6E1C               	movwf	(read_package@package+4)^0,c
 17235                           
 17236                           ; BSR set to: 14
 17237                           ;eusartpackage.c: 32:         package.functioncode=EUSART1_Read();
 17238  008F08  EC5B  F048         	call	_EUSART1_Read	;wreg free
 17239  008F0C  6E18               	movwf	read_package@package^0,c
 17240                           
 17241                           ; BSR set to: 14
 17242                           ;eusartpackage.c: 33:         package.address=EUSART1_Read();
 17243  008F0E  EC5B  F048         	call	_EUSART1_Read	;wreg free
 17244  008F12  6E19               	movwf	(read_package@package+1)^0,c
 17245                           
 17246                           ; BSR set to: 14
 17247                           ;eusartpackage.c: 34:         package.data.data8[0]=EUSART1_Read();
 17248  008F14  EC5B  F048         	call	_EUSART1_Read	;wreg free
 17249  008F18  6E1A               	movwf	(read_package@package+2)^0,c
 17250                           
 17251                           ; BSR set to: 14
 17252                           ;eusartpackage.c: 35:         package.data.data8[1]=EUSART1_Read();
 17253  008F1A  EC5B  F048         	call	_EUSART1_Read	;wreg free
 17254  008F1E  6E1B               	movwf	(read_package@package+3)^0,c
 17255                           
 17256                           ; BSR set to: 14
 17257                           ;eusartpackage.c: 38:         if(EUSART1_Read()!=0x0D){
 17258  008F20  EC5B  F048         	call	_EUSART1_Read	;wreg free
 17259  008F24  0A0D               	xorlw	13
 17260  008F26  A4D8               	btfss	status,2,c
 17261  008F28  D7E1               	goto	u30980
 17262                           
 17263                           ; BSR set to: 14
 17264                           ;eusartpackage.c: 43:             package.endbyte=0x0D;
 17265  008F2A  0E0D               	movlw	13
 17266  008F2C  6E1D               	movwf	(read_package@package+5)^0,c
 17267                           
 17268                           ; BSR set to: 14
 17269                           ;eusartpackage.c: 46:         package.valid=1;
 17270  008F2E  0E01               	movlw	1
 17271  008F30  D7DE               	goto	L75
 17272  008F32                     __end_of_read_package:
 17273                           	callstack 0
 17274                           
 17275 ;; *************** function _EUSART1_Read *****************
 17276 ;; Defined at:
 17277 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 17278 ;; Parameters:    Size  Location     Type
 17279 ;;		None
 17280 ;; Auto vars:     Size  Location     Type
 17281 ;;  readValue       1   15[COMRAM] unsigned char 
 17282 ;; Return value:  Size  Location     Type
 17283 ;;                  1    wreg      unsigned char 
 17284 ;; Registers used:
 17285 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17286 ;; Tracked objects:
 17287 ;;		On entry : 31/0
 17288 ;;		On exit  : 3F/E
 17289 ;;		Unchanged: 0/0
 17290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17292 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17294 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17295 ;;Total ram usage:        1 bytes
 17296 ;; Hardware stack levels used: 1
 17297 ;; Hardware stack levels required when called: 4
 17298 ;; This function calls:
 17299 ;;		Nothing
 17300 ;; This function is called by:
 17301 ;;		_read_package
 17302 ;; This function uses a non-reentrant model
 17303 ;;
 17304                           
 17305                           	psect	text55
 17306  0090B6                     __ptext55:
 17307                           	callstack 0
 17308  0090B6                     _EUSART1_Read:
 17309                           	callstack 25
 17310                           
 17311                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 17312                           
 17313                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 17314                           
 17315                           ; BSR set to: 14
 17316                           ;incstack = 0
 17317  0090B6  0100               	movlb	0	; () banked
 17318  0090B8  518A               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 17319  0090BA  B4D8               	btfsc	status,2,c
 17320  0090BC  D7FC               	goto	__ptext55
 17321                           
 17322                           ; BSR set to: 0
 17323                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 17324  0090BE  0E74               	movlw	low _eusart1RxStatusBuffer
 17325  0090C0  258B               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 17326  0090C2  6ED9               	movwf	fsr2l,c
 17327  0090C4  6ADA               	clrf	fsr2h,c
 17328  0090C6  0E02               	movlw	high _eusart1RxStatusBuffer
 17329  0090C8  22DA               	addwfc	fsr2h,f,c
 17330  0090CA  50DF               	movf	indf2,w,c
 17331  0090CC  0101               	movlb	1	; () banked
 17332  0090CE  6F54               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 17333                           
 17334                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 17335  0090D0  0E7C               	movlw	low _eusart1RxBuffer
 17336  0090D2  0100               	movlb	0	; () banked
 17337  0090D4  258B               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 17338  0090D6  6ED9               	movwf	fsr2l,c
 17339  0090D8  6ADA               	clrf	fsr2h,c
 17340  0090DA  0E02               	movlw	high _eusart1RxBuffer
 17341  0090DC  22DA               	addwfc	fsr2h,f,c
 17342  0090DE  50DF               	movf	indf2,w,c
 17343  0090E0  6E10               	movwf	EUSART1_Read@readValue^0,c
 17344                           
 17345                           ; BSR set to: 0
 17346  0090E2  2B8B               	incf	_eusart1RxTail& (0+255),f,b	;volatile
 17347                           
 17348                           ; BSR set to: 0
 17349                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 17350  0090E4  0E07               	movlw	7
 17351  0090E6  658B               	cpfsgt	_eusart1RxTail& (0+255),b
 17352  0090E8  D002               	goto	l22353
 17353                           
 17354                           ; BSR set to: 0
 17355                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 17356  0090EA  0E00               	movlw	0
 17357  0090EC  6F8B               	movwf	_eusart1RxTail& (0+255),b	;volatile
 17358  0090EE                     l22353:
 17359                           
 17360                           ; BSR set to: 0
 17361                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 17362  0090EE  010E               	movlb	14	; () banked
 17363  0090F0  9BC5               	bcf	197,5,b	;volatile
 17364                           
 17365                           ; BSR set to: 14
 17366                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 17367  0090F2  0100               	movlb	0	; () banked
 17368  0090F4  078A               	decf	_eusart1RxCount& (0+255),f,b	;volatile
 17369                           
 17370                           ; BSR set to: 0
 17371                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 17372  0090F6  010E               	movlb	14	; () banked
 17373  0090F8  8BC5               	bsf	197,5,b	;volatile
 17374                           
 17375                           ; BSR set to: 14
 17376                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 17377  0090FA  5010               	movf	EUSART1_Read@readValue^0,w,c
 17378                           
 17379                           ; BSR set to: 14
 17380  0090FC  0012               	return		;funcret
 17381  0090FE                     __end_of_EUSART1_Read:
 17382                           	callstack 0
 17383                           
 17384 ;; *************** function _readRFButtons *****************
 17385 ;; Defined at:
 17386 ;;		line 231 in file "inputs_MC50.c"
 17387 ;; Parameters:    Size  Location     Type
 17388 ;;		None
 17389 ;; Auto vars:     Size  Location     Type
 17390 ;;		None
 17391 ;; Return value:  Size  Location     Type
 17392 ;;                  1    wreg      void 
 17393 ;; Registers used:
 17394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17395 ;; Tracked objects:
 17396 ;;		On entry : 3F/1
 17397 ;;		On exit  : 3E/0
 17398 ;;		Unchanged: 0/0
 17399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17404 ;;Total ram usage:        0 bytes
 17405 ;; Hardware stack levels used: 1
 17406 ;; Hardware stack levels required when called: 15
 17407 ;; This function calls:
 17408 ;;		_DecryptPacket_12BIT
 17409 ;;		_keeloqDecryptPacket
 17410 ;; This function is called by:
 17411 ;;		_main
 17412 ;; This function uses a non-reentrant model
 17413 ;;
 17414                           
 17415                           	psect	text56
 17416  00610C                     __ptext56:
 17417                           	callstack 0
 17418  00610C                     _readRFButtons:
 17419                           	callstack 15
 17420                           
 17421                           ; BSR set to: 1
 17422                           ;inputs_MC50.c: 232:     static unsigned char key1 = 0;;inputs_MC50.c: 233:     static u
      +                          int32_t serial = 0;;inputs_MC50.c: 234:     static uint16_t rollingCode= 0;;inputs_MC50.
      +                          c: 235:     static TypeCMD keyType = 0;;inputs_MC50.c: 236:     static TypeRemote_st typ
      +                          eRemote;;inputs_MC50.c: 241:     if(RFFull)
 17423                           
 17424                           ; BSR set to: 14
 17425                           ;incstack = 0
 17426  00610C  0100               	movlb	0	; () banked
 17427  00610E  51D7               	movf	_RFFull& (0+255),w,b	;volatile
 17428  006110  B4D8               	btfsc	status,2,c
 17429  006112  D0BA               	goto	l24477
 17430                           
 17431                           ; BSR set to: 0
 17432                           ;inputs_MC50.c: 242:     {;inputs_MC50.c: 244:          if(RFFull_12BIT==0)
 17433  006114  5181               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
 17434  006116  A4D8               	btfss	status,2,c
 17435  006118  D00C               	goto	l24423
 17436                           
 17437                           ; BSR set to: 0
 17438                           ;inputs_MC50.c: 245:          {;inputs_MC50.c: 246:             keyType = keeloqDecryptP
      +                          acket(BufferRF,&classic_data);
 17439  00611A  0EC8               	movlw	low _BufferRF
 17440  00611C  6FE0               	movwf	keeloqDecryptPacket@data& (0+255),b
 17441  00611E  0E02               	movlw	high _BufferRF
 17442  006120  6FE1               	movwf	(keeloqDecryptPacket@data+1)& (0+255),b
 17443  006122  0E92               	movlw	low _classic_data
 17444  006124  6FE2               	movwf	keeloqDecryptPacket@classic_data& (0+255),b
 17445  006126  0E02               	movlw	high _classic_data
 17446  006128  6FE3               	movwf	(keeloqDecryptPacket@classic_data+1)& (0+255),b
 17447  00612A  EC23  F02C         	call	_keeloqDecryptPacket	;wreg free
 17448  00612E  0100               	movlb	0	; () banked
 17449  006130  D00A               	goto	L76
 17450  006132                     l24423:
 17451                           
 17452                           ; BSR set to: 0
 17453                           ;inputs_MC50.c: 249:          {;inputs_MC50.c: 250:             keyType = DecryptPacket_
      +                          12BIT(BufferRF,&classic_data);
 17454  006132  0EC8               	movlw	low _BufferRF
 17455  006134  6FE0               	movwf	DecryptPacket_12BIT@data& (0+255),b
 17456  006136  0E02               	movlw	high _BufferRF
 17457  006138  6FE1               	movwf	(DecryptPacket_12BIT@data+1)& (0+255),b
 17458  00613A  0E92               	movlw	low _classic_data
 17459  00613C  6FE2               	movwf	DecryptPacket_12BIT@classic_data& (0+255),b
 17460  00613E  0E02               	movlw	high _classic_data
 17461  006140  6FE3               	movwf	(DecryptPacket_12BIT@classic_data+1)& (0+255),b
 17462  006142  EC75  F03F         	call	_DecryptPacket_12BIT	;wreg free
 17463  006146                     L76:
 17464  006146  6F7E               	movwf	readRFButtons@keyType& (0+255),b
 17465                           
 17466                           ; BSR set to: 0
 17467                           ;inputs_MC50.c: 254:         key1 = classic_data.fcode1;
 17468  006148  C29E  F07F         	movff	_classic_data+12,readRFButtons@key1
 17469                           
 17470                           ; BSR set to: 0
 17471                           ;inputs_MC50.c: 255:         serial = classic_data.serialnumber;
 17472  00614C  C296  F142         	movff	_classic_data+4,readRFButtons@serial
 17473  006150  C297  F143         	movff	_classic_data+5,readRFButtons@serial+1
 17474  006154  C298  F144         	movff	_classic_data+6,readRFButtons@serial+2
 17475  006158  C299  F145         	movff	_classic_data+7,readRFButtons@serial+3
 17476                           
 17477                           ; BSR set to: 0
 17478                           ;inputs_MC50.c: 256:         rollingCode = classic_data.sync;
 17479  00615C  C29A  F148         	movff	_classic_data+8,readRFButtons@rollingCode
 17480  006160  C29B  F149         	movff	_classic_data+9,readRFButtons@rollingCode+1
 17481                           
 17482                           ; BSR set to: 0
 17483                           ;inputs_MC50.c: 257:         typeRemote = classic_data.type;
 17484  006164  C2A0  F07D         	movff	_classic_data+14,readRFButtons@typeRemote
 17485                           
 17486                           ; BSR set to: 0
 17487                           ;inputs_MC50.c: 270:         if (var_sys.LearningIsEnabled == YES){
 17488  006168  0101               	movlb	1	; () banked
 17489  00616A  057B               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 17490  00616C  A4D8               	btfss	status,2,c
 17491  00616E  D01E               	goto	l24445
 17492                           
 17493                           ; BSR set to: 1
 17494                           ;inputs_MC50.c: 272:              if (keyType==NoCMD || rfCMD.currentKey!=key1 || rfCMD.
      +                          currentSerial!=serial || keyType!=rfCMD.currentType)
 17495  006170  0100               	movlb	0	; () banked
 17496  006172  517E               	movf	readRFButtons@keyType& (0+255),w,b
 17497  006174  B4D8               	btfsc	status,2,c
 17498  006176  D044               	goto	u30320
 17499                           
 17500                           ; BSR set to: 0
 17501  006178  517F               	movf	readRFButtons@key1& (0+255),w,b
 17502  00617A  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17503  00617C  A4D8               	btfss	status,2,c
 17504  00617E  D040               	goto	u30320
 17505                           
 17506                           ; BSR set to: 0
 17507  006180  0101               	movlb	1	; () banked
 17508  006182  5142               	movf	readRFButtons@serial& (0+255),w,b
 17509  006184  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17510  006186  E13C               	bnz	l24457
 17511  006188  5143               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17512  00618A  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17513  00618C  E139               	bnz	l24457
 17514  00618E  5144               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17515  006190  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17516  006192  E136               	bnz	l24457
 17517  006194  5145               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17518  006196  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17519  006198  A4D8               	btfss	status,2,c
 17520  00619A  D032               	goto	u30320
 17521                           
 17522                           ; BSR set to: 1
 17523  00619C  0100               	movlb	0	; () banked
 17524  00619E  517E               	movf	readRFButtons@keyType& (0+255),w,b
 17525  0061A0  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17526  0061A2  A4D8               	btfss	status,2,c
 17527  0061A4  D02D               	goto	u30320
 17528  0061A6                     l1654:
 17529                           
 17530                           ;inputs_MC50.c: 274:                 rfCMD.timer=0;
 17531  0061A6  0E00               	movlw	0
 17532  0061A8  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17533                           
 17534                           ;inputs_MC50.c: 275:         }
 17535  0061AA  D039               	goto	l1657
 17536  0061AC                     l24445:
 17537                           
 17538                           ; BSR set to: 1
 17539  0061AC  0100               	movlb	0	; () banked
 17540  0061AE  517E               	movf	readRFButtons@keyType& (0+255),w,b
 17541  0061B0  B4D8               	btfsc	status,2,c
 17542  0061B2  D026               	goto	u30320
 17543                           
 17544                           ; BSR set to: 0
 17545  0061B4  517E               	movf	readRFButtons@keyType& (0+255),w,b
 17546  0061B6  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17547  0061B8  B4D8               	btfsc	status,2,c
 17548  0061BA  D00F               	goto	u30300
 17549                           
 17550                           ; BSR set to: 0
 17551  0061BC  BFA4               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17552  0061BE  D005               	goto	u30290
 17553  0061C0  51A4               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17554  0061C2  E10B               	bnz	l24453
 17555  0061C4  05A3               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17556  0061C6  B0D8               	btfsc	status,0,c
 17557  0061C8  D008               	goto	u30300
 17558  0061CA                     u30290:
 17559                           
 17560                           ; BSR set to: 0
 17561  0061CA  0101               	movlb	1	; () banked
 17562  0061CC  5148               	movf	readRFButtons@rollingCode& (0+255),w,b
 17563  0061CE  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17564  0061D0  E117               	bnz	l24457
 17565  0061D2  5149               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17566  0061D4  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17567  0061D6  A4D8               	btfss	status,2,c
 17568  0061D8  D013               	goto	u30320
 17569  0061DA                     u30300:
 17570  0061DA                     l24453:
 17571  0061DA  0100               	movlb	0	; () banked
 17572  0061DC  517F               	movf	readRFButtons@key1& (0+255),w,b
 17573  0061DE  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17574  0061E0  A4D8               	btfss	status,2,c
 17575  0061E2  D00E               	goto	u30320
 17576                           
 17577                           ; BSR set to: 0
 17578  0061E4  0101               	movlb	1	; () banked
 17579  0061E6  5142               	movf	readRFButtons@serial& (0+255),w,b
 17580  0061E8  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17581  0061EA  E10A               	bnz	u30320
 17582  0061EC  5143               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17583  0061EE  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17584  0061F0  E107               	bnz	u30320
 17585  0061F2  5144               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17586  0061F4  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17587  0061F6  E104               	bnz	u30320
 17588  0061F8  5145               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17589  0061FA  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17590  0061FC  B4D8               	btfsc	status,2,c
 17591  0061FE  D003               	goto	l24459
 17592  006200                     u30320:
 17593  006200                     l24457:
 17594                           
 17595                           ;inputs_MC50.c: 278:         {;inputs_MC50.c: 279:            rfCMD.processed=0;
 17596  006200  0E00               	movlw	0
 17597  006202  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 17598  006204  D7D0               	goto	l1654
 17599  006206                     l24459:
 17600                           
 17601                           ; BSR set to: 1
 17602  006206  0100               	movlb	0	; () banked
 17603  006208  BFA4               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17604  00620A  D005               	goto	u30330
 17605  00620C  51A4               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17606  00620E  E107               	bnz	l1657
 17607  006210  05A3               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17608  006212  B0D8               	btfsc	status,0,c
 17609  006214  D004               	goto	l1657
 17610  006216                     u30330:
 17611                           
 17612                           ; BSR set to: 0
 17613  006216  0E02               	movlw	2
 17614  006218  197D               	xorwf	readRFButtons@typeRemote& (0+255),w,b
 17615  00621A  B4D8               	btfsc	status,2,c
 17616  00621C  D7F1               	goto	u30320
 17617  00621E                     l1657:
 17618                           
 17619                           ;inputs_MC50.c: 289:         ts_system.TimeLastCommand=( 500/50);
 17620  00621E  0E00               	movlw	0
 17621  006220  0100               	movlb	0	; () banked
 17622  006222  6FA4               	movwf	(_ts_system+21)& (0+255),b	;volatile
 17623  006224  0E0A               	movlw	10
 17624  006226  6FA3               	movwf	(_ts_system+20)& (0+255),b	;volatile
 17625                           
 17626                           ; BSR set to: 0
 17627                           ;inputs_MC50.c: 291:         rfCMD.currentType=keyType;
 17628  006228  C07E  F03B         	movff	readRFButtons@keyType,_rfCMD	;volatile
 17629                           
 17630                           ;inputs_MC50.c: 292:         if
 17631  00622C  503B               	movf	_rfCMD^0,w,c	;volatile
 17632  00622E  B4D8               	btfsc	status,2,c
 17633  006230  D019               	goto	u30380
 17634                           
 17635                           ; BSR set to: 0
 17636  006232  517F               	movf	readRFButtons@key1& (0+255),w,b
 17637  006234  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17638  006236  A4D8               	btfss	status,2,c
 17639  006238  D015               	goto	u30380
 17640                           
 17641                           ; BSR set to: 0
 17642  00623A  0101               	movlb	1	; () banked
 17643  00623C  5142               	movf	readRFButtons@serial& (0+255),w,b
 17644  00623E  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17645  006240  E111               	bnz	l1667
 17646  006242  5143               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17647  006244  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17648  006246  E10E               	bnz	l1667
 17649  006248  5144               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17650  00624A  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17651  00624C  E10B               	bnz	l1667
 17652  00624E  5145               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17653  006250  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17654  006252  A4D8               	btfss	status,2,c
 17655  006254  D007               	goto	u30380
 17656                           
 17657                           ; BSR set to: 1
 17658  006256  5148               	movf	readRFButtons@rollingCode& (0+255),w,b
 17659  006258  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17660  00625A  E104               	bnz	u30380
 17661  00625C  5149               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17662  00625E  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17663  006260  B4D8               	btfsc	status,2,c
 17664  006262  D00E               	goto	l24475
 17665  006264                     u30380:
 17666  006264                     l1667:
 17667                           
 17668                           ;inputs_MC50.c: 299:         {;inputs_MC50.c: 300:             rfCMD.currentKey=key1;
 17669  006264  C07F  F03C         	movff	readRFButtons@key1,_rfCMD+1	;volatile
 17670                           
 17671                           ;inputs_MC50.c: 301:             rfCMD.currentSerial=serial;
 17672  006268  C142  F03D         	movff	readRFButtons@serial,_rfCMD+2	;volatile
 17673  00626C  C143  F03E         	movff	readRFButtons@serial+1,_rfCMD+3	;volatile
 17674  006270  C144  F03F         	movff	readRFButtons@serial+2,_rfCMD+4	;volatile
 17675  006274  C145  F040         	movff	readRFButtons@serial+3,_rfCMD+5	;volatile
 17676                           
 17677                           ;inputs_MC50.c: 302:             rfCMD.currentPosMem=classic_data.positionMem;
 17678  006278  C2A1  F043         	movff	_classic_data+15,_rfCMD+8	;volatile
 17679                           
 17680                           ;inputs_MC50.c: 303:             rfCMD.timer=0;
 17681  00627C  0E00               	movlw	0
 17682  00627E  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17683  006280                     l24475:
 17684                           
 17685                           ;inputs_MC50.c: 305:         rfCMD.currentRolling=rollingCode;
 17686  006280  C148  F041         	movff	readRFButtons@rollingCode,_rfCMD+6	;volatile
 17687  006284  C149  F042         	movff	readRFButtons@rollingCode+1,_rfCMD+7	;volatile
 17688  006288                     l24477:
 17689                           
 17690                           ;inputs_MC50.c: 310:     if(rfCMD.processed == 1)
 17691  006288  0445               	decf	(_rfCMD+10)^0,w,c	;volatile
 17692  00628A  A4D8               	btfss	status,2,c
 17693  00628C  D003               	goto	l24481
 17694                           
 17695                           ;inputs_MC50.c: 311:     {;inputs_MC50.c: 312:        rfCMD.currentType = NoCMD;
 17696  00628E  0E00               	movlw	0
 17697  006290  6E3B               	movwf	_rfCMD^0,c	;volatile
 17698                           
 17699                           ;inputs_MC50.c: 313:     }
 17700  006292  0012               	return	
 17701  006294                     l24481:
 17702  006294  503B               	movf	_rfCMD^0,w,c	;volatile
 17703  006296  B4D8               	btfsc	status,2,c
 17704  006298  0012               	return	
 17705                           
 17706                           ;inputs_MC50.c: 315:     {;inputs_MC50.c: 317:         if ( rfCMD.timer < 250 )
 17707  00629A  0EFA               	movlw	250
 17708  00629C  6044               	cpfslt	(_rfCMD+9)^0,c	;volatile
 17709  00629E  0012               	return	
 17710                           
 17711                           ;inputs_MC50.c: 318:         {;inputs_MC50.c: 319:             rfCMD.timer++;
 17712  0062A0  2A44               	incf	(_rfCMD+9)^0,f,c	;volatile
 17713  0062A2  0012               	return		;funcret
 17714  0062A4                     __end_of_readRFButtons:
 17715                           	callstack 0
 17716                           
 17717 ;; *************** function _keeloqDecryptPacket *****************
 17718 ;; Defined at:
 17719 ;;		line 299 in file "keeloqDecrypt_MC50.c"
 17720 ;; Parameters:    Size  Location     Type
 17721 ;;  data            2    8[BANK0 ] PTR unsigned char 
 17722 ;;		 -> BufferRF(9), 
 17723 ;;  classic_data    2   10[BANK0 ] PTR struct .
 17724 ;;		 -> classic_data(16), 
 17725 ;; Auto vars:     Size  Location     Type
 17726 ;;  commandType     1   17[BANK0 ] enum E10539
 17727 ;;  hop_error       1   16[BANK0 ] enum E10730
 17728 ;; Return value:  Size  Location     Type
 17729 ;;                  1    wreg      enum E10539
 17730 ;; Registers used:
 17731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17732 ;; Tracked objects:
 17733 ;;		On entry : 3F/0
 17734 ;;		On exit  : 3E/0
 17735 ;;		Unchanged: 0/0
 17736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17737 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17738 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17739 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17740 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17741 ;;Total ram usage:       10 bytes
 17742 ;; Hardware stack levels used: 1
 17743 ;; Hardware stack levels required when called: 14
 17744 ;; This function calls:
 17745 ;;		_DecCHK
 17746 ;;		_HopCHK
 17747 ;;		_keeloq_classic_decrypt_packet
 17748 ;;		_memcpy
 17749 ;;		_validateRemoteSerialNumber
 17750 ;;		_verifyProgramingMode
 17751 ;; This function is called by:
 17752 ;;		_readRFButtons
 17753 ;; This function uses a non-reentrant model
 17754 ;;
 17755                           
 17756                           	psect	text57
 17757  005846                     __ptext57:
 17758                           	callstack 0
 17759  005846                     _keeloqDecryptPacket:
 17760                           	callstack 15
 17761                           
 17762                           ; BSR set to: 0
 17763                           ;keeloqDecrypt_MC50.c: 299: TypeCMD keeloqDecryptPacket (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 300: {;keeloqDecrypt_MC50.c: 301:     result_code_t h
      +                          op_error;;keeloqDecrypt_MC50.c: 302:     TypeCMD commandType;;keeloqDecrypt_MC50.c: 303:
      +                               memcpy(classic_data, data, 8);
 17764                           
 17765                           ;incstack = 0
 17766  005846  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,memcpy@d1
 17767  00584A  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,memcpy@d1+1
 17768  00584E  C0E0  F012         	movff	keeloqDecryptPacket@data,memcpy@s1
 17769  005852  C0E1  F013         	movff	keeloqDecryptPacket@data+1,memcpy@s1+1
 17770  005856  0E00               	movlw	0
 17771  005858  6E15               	movwf	(memcpy@n+1)^0,c
 17772  00585A  0E08               	movlw	8
 17773  00585C  6E14               	movwf	memcpy@n^0,c
 17774  00585E  ECE6  F048         	call	_memcpy	;wreg free
 17775                           
 17776                           ;keeloqDecrypt_MC50.c: 304:     memcpy(&classic_data->sync, &classic_data->raw_data, 4);
 17777  005862  0E08               	movlw	8
 17778  005864  0100               	movlb	0	; () banked
 17779  005866  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17780  005868  6E10               	movwf	memcpy@d1^0,c
 17781  00586A  0E00               	movlw	0
 17782  00586C  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17783  00586E  6E11               	movwf	(memcpy@d1+1)^0,c
 17784  005870  C0E2  F012         	movff	keeloqDecryptPacket@classic_data,memcpy@s1
 17785  005874  C0E3  F013         	movff	keeloqDecryptPacket@classic_data+1,memcpy@s1+1
 17786  005878  0E00               	movlw	0
 17787  00587A  6E15               	movwf	(memcpy@n+1)^0,c
 17788  00587C  0E04               	movlw	4
 17789  00587E  6E14               	movwf	memcpy@n^0,c
 17790  005880  ECE6  F048         	call	_memcpy	;wreg free
 17791                           
 17792                           ;keeloqDecrypt_MC50.c: 305:     classic_data->fcode1 = *((uint8_t *) (&classic_data->ser
      +                          ialnumber) + 3) >> 4;
 17793  005884  0100               	movlb	0	; () banked
 17794  005886  EE20 F00C          	lfsr	2,12
 17795  00588A  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17796  00588C  26D9               	addwf	fsr2l,f,c
 17797  00588E  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17798  005890  22DA               	addwfc	fsr2h,f,c
 17799  005892  EE10 F007          	lfsr	1,7
 17800  005896  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17801  005898  26E1               	addwf	fsr1l,f,c
 17802  00589A  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17803  00589C  22E2               	addwfc	fsr1h,f,c
 17804  00589E  50E7               	movf	indf1,w,c
 17805  0058A0  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17806  0058A2  39E4               	swapf	??_keeloqDecryptPacket& (0+255),w,b
 17807  0058A4  0B0F               	andlw	15
 17808  0058A6  6EDF               	movwf	indf2,c
 17809                           
 17810                           ; BSR set to: 0
 17811                           ;keeloqDecrypt_MC50.c: 306:     commandType=verifyProgramingMode(classic_data);
 17812  0058A8  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,verifyProgramingMode@classic_data
 17813  0058AC  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,verifyProgramingMode@classic_data+1
 17814  0058B0  ECE4  F049         	call	_verifyProgramingMode	;wreg free
 17815  0058B4  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17816                           
 17817                           ; BSR set to: 0
 17818                           ;keeloqDecrypt_MC50.c: 308:     if(commandType==NoCMD)
 17819  0058B6  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17820  0058B8  A4D8               	btfss	status,2,c
 17821  0058BA  D019               	goto	l22689
 17822                           
 17823                           ; BSR set to: 0
 17824                           ;keeloqDecrypt_MC50.c: 309:     {;keeloqDecrypt_MC50.c: 310:         commandType=validat
      +                          eRemoteSerialNumber(classic_data->serialnumber,NO,&classic_data->positionMem);
 17825  0058BC  EE20 F004          	lfsr	2,4
 17826  0058C0  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17827  0058C2  26D9               	addwf	fsr2l,f,c
 17828  0058C4  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17829  0058C6  22DA               	addwfc	fsr2h,f,c
 17830  0058C8  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17831  0058CC  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17832  0058D0  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17833  0058D4  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17834  0058D8  0E00               	movlw	0
 17835  0058DA  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17836  0058DC  0E0F               	movlw	15
 17837  0058DE  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17838  0058E0  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17839  0058E2  0E00               	movlw	0
 17840  0058E4  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17841  0058E6  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17842  0058E8  ECE5  F02E         	call	_validateRemoteSerialNumber	;wreg free
 17843  0058EC  D005               	goto	L77
 17844  0058EE                     l22689:
 17845                           
 17846                           ; BSR set to: 0
 17847  0058EE  0101               	movlb	1	; () banked
 17848  0058F0  51B4               	movf	(_var_sys_NVM+14)& (0+255),w,b	;volatile
 17849  0058F2  A4D8               	btfss	status,2,c
 17850  0058F4  D003               	goto	l22693
 17851                           
 17852                           ; BSR set to: 1
 17853                           ;keeloqDecrypt_MC50.c: 313:     {;keeloqDecrypt_MC50.c: 314:         commandType=NoCMD;
 17854  0058F6  0E00               	movlw	0
 17855  0058F8                     L77:
 17856  0058F8  0100               	movlb	0	; () banked
 17857  0058FA  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17858  0058FC                     l22693:
 17859                           
 17860                           ;keeloqDecrypt_MC50.c: 316:     classic_data->serialnumber = classic_data->serialnumber 
      +                          & 0x0FFFFFFF;
 17861  0058FC  0100               	movlb	0	; () banked
 17862  0058FE  EE20 F004          	lfsr	2,4
 17863  005902  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17864  005904  26D9               	addwf	fsr2l,f,c
 17865  005906  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17866  005908  22DA               	addwfc	fsr2h,f,c
 17867  00590A  0EFF               	movlw	255
 17868  00590C  14DE               	andwf	postinc2,w,c
 17869  00590E  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17870  005910  0EFF               	movlw	255
 17871  005912  14DE               	andwf	postinc2,w,c
 17872  005914  6FE5               	movwf	(??_keeloqDecryptPacket+1)& (0+255),b
 17873  005916  0EFF               	movlw	255
 17874  005918  14DE               	andwf	postinc2,w,c
 17875  00591A  6FE6               	movwf	(??_keeloqDecryptPacket+2)& (0+255),b
 17876  00591C  0E0F               	movlw	15
 17877  00591E  14DE               	andwf	postinc2,w,c
 17878  005920  6FE7               	movwf	(??_keeloqDecryptPacket+3)& (0+255),b
 17879  005922  EE20 F004          	lfsr	2,4
 17880  005926  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17881  005928  26D9               	addwf	fsr2l,f,c
 17882  00592A  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17883  00592C  22DA               	addwfc	fsr2h,f,c
 17884  00592E  C0E4  FFDE         	movff	??_keeloqDecryptPacket,postinc2
 17885  005932  C0E5  FFDE         	movff	??_keeloqDecryptPacket+1,postinc2
 17886  005936  C0E6  FFDE         	movff	??_keeloqDecryptPacket+2,postinc2
 17887  00593A  C0E7  FFDE         	movff	??_keeloqDecryptPacket+3,postinc2
 17888                           
 17889                           ; BSR set to: 0
 17890                           ;keeloqDecrypt_MC50.c: 318:     keeloq_classic_decrypt_packet(classic_data);
 17891  00593E  C0E2  F038         	movff	keeloqDecryptPacket@classic_data,keeloq_classic_decrypt_packet@data
 17892  005942  C0E3  F039         	movff	keeloqDecryptPacket@classic_data+1,keeloq_classic_decrypt_packet@data+1
 17893  005946  EC71  F046         	call	_keeloq_classic_decrypt_packet	;wreg free
 17894                           
 17895                           ; BSR set to: 0
 17896                           ;keeloqDecrypt_MC50.c: 320:     if(commandType==NoCMD )
 17897  00594A  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17898  00594C  A4D8               	btfss	status,2,c
 17899  00594E  D01D               	goto	l22711
 17900                           
 17901                           ; BSR set to: 0
 17902                           ;keeloqDecrypt_MC50.c: 321:     {;keeloqDecrypt_MC50.c: 323:         if (DecCHK(classic_
      +                          data) == 0) {
 17903  005950  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17904  005954  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17905  005958  ECFE  F049         	call	_DecCHK	;wreg free
 17906  00595C  0900               	iorlw	0
 17907  00595E  A4D8               	btfss	status,2,c
 17908  005960  D009               	goto	l22703
 17909                           
 17910                           ;keeloqDecrypt_MC50.c: 324:             classic_data->type=Keeloq_NoRollingCode;
 17911  005962  0100               	movlb	0	; () banked
 17912  005964  EE20 F00E          	lfsr	2,14
 17913  005968  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17914  00596A  26D9               	addwf	fsr2l,f,c
 17915  00596C  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17916  00596E  22DA               	addwfc	fsr2h,f,c
 17917  005970  0E01               	movlw	1
 17918  005972  D008               	goto	L78
 17919  005974                     l22703:
 17920                           
 17921                           ;keeloqDecrypt_MC50.c: 328:         {;keeloqDecrypt_MC50.c: 329:             classic_dat
      +                          a->type=Keeloq_RollingCode;
 17922  005974  0100               	movlb	0	; () banked
 17923  005976  EE20 F00E          	lfsr	2,14
 17924  00597A  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17925  00597C  26D9               	addwf	fsr2l,f,c
 17926  00597E  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17927  005980  22DA               	addwfc	fsr2h,f,c
 17928  005982  0E00               	movlw	0
 17929  005984                     L78:
 17930  005984  6EDF               	movwf	indf2,c
 17931  005986                     l22705:
 17932                           
 17933                           ;keeloqDecrypt_MC50.c: 331:         return NoCMD;
 17934  005986  0E00               	movlw	0
 17935  005988  0012               	return	
 17936  00598A                     l22711:
 17937                           
 17938                           ; BSR set to: 0
 17939  00598A  0E06               	movlw	6
 17940  00598C  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17941  00598E  B4D8               	btfsc	status,2,c
 17942  005990  D004               	goto	u26780
 17943                           
 17944                           ; BSR set to: 0
 17945  005992  0E05               	movlw	5
 17946  005994  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17947  005996  A4D8               	btfss	status,2,c
 17948  005998  D01B               	goto	l22721
 17949  00599A                     u26780:
 17950                           
 17951                           ; BSR set to: 0
 17952                           ;keeloqDecrypt_MC50.c: 334:     {;keeloqDecrypt_MC50.c: 335:         if(validateRemoteSe
      +                          rialNumber(classic_data->serialnumber,YES,&classic_data->positionMem)==NoCMD)
 17953  00599A  EE20 F004          	lfsr	2,4
 17954  00599E  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17955  0059A0  26D9               	addwf	fsr2l,f,c
 17956  0059A2  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17957  0059A4  22DA               	addwfc	fsr2h,f,c
 17958  0059A6  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17959  0059AA  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17960  0059AE  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17961  0059B2  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17962  0059B6  0E01               	movlw	1
 17963  0059B8  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17964  0059BA  0E0F               	movlw	15
 17965  0059BC  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17966  0059BE  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17967  0059C0  0E00               	movlw	0
 17968  0059C2  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17969  0059C4  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17970  0059C6  ECE5  F02E         	call	_validateRemoteSerialNumber	;wreg free
 17971  0059CA  0900               	iorlw	0
 17972  0059CC  B4D8               	btfsc	status,2,c
 17973  0059CE  D7DB               	goto	l22705
 17974  0059D0                     l22721:
 17975                           
 17976                           ;keeloqDecrypt_MC50.c: 344:     if (DecCHK(classic_data) == 0)
 17977  0059D0  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17978  0059D4  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17979  0059D8  ECFE  F049         	call	_DecCHK	;wreg free
 17980  0059DC  0900               	iorlw	0
 17981  0059DE  A4D8               	btfss	status,2,c
 17982  0059E0  D00F               	goto	l22737
 17983                           
 17984                           ;keeloqDecrypt_MC50.c: 345:     {;keeloqDecrypt_MC50.c: 346:         if(var_sys_NVM.Only
      +                          RollingCode==YES) {
 17985  0059E2  0101               	movlb	1	; () banked
 17986  0059E4  05CC               	decf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
 17987  0059E6  B4D8               	btfsc	status,2,c
 17988  0059E8  D7CE               	goto	l22705
 17989                           
 17990                           ; BSR set to: 1
 17991                           ;keeloqDecrypt_MC50.c: 352:         {;keeloqDecrypt_MC50.c: 353:             classic_dat
      +                          a->type=Keeloq_NoRollingCode;
 17992  0059EA  0100               	movlb	0	; () banked
 17993  0059EC  EE20 F00E          	lfsr	2,14
 17994  0059F0  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17995  0059F2  26D9               	addwf	fsr2l,f,c
 17996  0059F4  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17997  0059F6  22DA               	addwfc	fsr2h,f,c
 17998  0059F8  0E01               	movlw	1
 17999  0059FA  6EDF               	movwf	indf2,c
 18000                           
 18001                           ; BSR set to: 0
 18002                           ;keeloqDecrypt_MC50.c: 354:             return commandType;
 18003  0059FC  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 18004  0059FE  0012               	return	
 18005  005A00                     l22737:
 18006                           
 18007                           ;keeloqDecrypt_MC50.c: 359:     hop_error = HopCHK(classic_data);
 18008  005A00  C0E2  F024         	movff	keeloqDecryptPacket@classic_data,HopCHK@data
 18009  005A04  C0E3  F025         	movff	keeloqDecryptPacket@classic_data+1,HopCHK@data+1
 18010  005A08  EC48  F040         	call	_HopCHK	;wreg free
 18011  005A0C  0100               	movlb	0	; () banked
 18012  005A0E  6FE8               	movwf	keeloqDecryptPacket@hop_error& (0+255),b
 18013                           
 18014                           ; BSR set to: 0
 18015                           ;keeloqDecrypt_MC50.c: 360:     if (hop_error != VALID_PACKET) {
 18016  005A10  05E8               	decf	keeloqDecryptPacket@hop_error& (0+255),w,b
 18017  005A12  A4D8               	btfss	status,2,c
 18018  005A14  D7B8               	goto	l22705
 18019                           
 18020                           ; BSR set to: 0
 18021                           ;keeloqDecrypt_MC50.c: 364:     classic_data->type=Keeloq_RollingCode;
 18022  005A16  EE20 F00E          	lfsr	2,14
 18023  005A1A  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 18024  005A1C  26D9               	addwf	fsr2l,f,c
 18025  005A1E  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 18026  005A20  22DA               	addwfc	fsr2h,f,c
 18027  005A22  0E00               	movlw	0
 18028  005A24  D7EA               	goto	L79
 18029  005A26                     __end_of_keeloqDecryptPacket:
 18030                           	callstack 0
 18031                           
 18032 ;; *************** function _verifyProgramingMode *****************
 18033 ;; Defined at:
 18034 ;;		line 401 in file "keeloqDecrypt_MC50.c"
 18035 ;; Parameters:    Size  Location     Type
 18036 ;;  classic_data    2   15[COMRAM] PTR struct .
 18037 ;;		 -> classic_data(16), 
 18038 ;; Auto vars:     Size  Location     Type
 18039 ;;		None
 18040 ;; Return value:  Size  Location     Type
 18041 ;;                  1    wreg      enum E10539
 18042 ;; Registers used:
 18043 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18044 ;; Tracked objects:
 18045 ;;		On entry : 3F/0
 18046 ;;		On exit  : 3F/0
 18047 ;;		Unchanged: 3F/0
 18048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18049 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18051 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18052 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18053 ;;Total ram usage:        3 bytes
 18054 ;; Hardware stack levels used: 1
 18055 ;; Hardware stack levels required when called: 4
 18056 ;; This function calls:
 18057 ;;		Nothing
 18058 ;; This function is called by:
 18059 ;;		_keeloqDecryptPacket
 18060 ;; This function uses a non-reentrant model
 18061 ;;
 18062                           
 18063                           	psect	text58
 18064  0093C8                     __ptext58:
 18065                           	callstack 0
 18066  0093C8                     _verifyProgramingMode:
 18067                           	callstack 24
 18068                           
 18069                           ; BSR set to: 0
 18070                           ;keeloqDecrypt_MC50.c: 401: TypeCMD verifyProgramingMode(classic_encoder_t* classic_data
      +                          );keeloqDecrypt_MC50.c: 402: {;keeloqDecrypt_MC50.c: 403:     if (classic_data->fcode1==
      +                          0x0A)
 18071                           
 18072                           ;incstack = 0
 18073  0093C8  EE20 F00C          	lfsr	2,12
 18074  0093CC  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 18075  0093CE  26D9               	addwf	fsr2l,f,c
 18076  0093D0  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 18077  0093D2  22DA               	addwfc	fsr2h,f,c
 18078  0093D4  0E0A               	movlw	10
 18079  0093D6  18DE               	xorwf	postinc2,w,c
 18080  0093D8  A4D8               	btfss	status,2,c
 18081  0093DA  D002               	goto	l21323
 18082                           
 18083                           ; BSR set to: 0
 18084                           ;keeloqDecrypt_MC50.c: 404:     {;keeloqDecrypt_MC50.c: 405:         return TypeProgramm
      +                          ingModeFull;
 18085  0093DC  0E06               	movlw	6
 18086  0093DE  0012               	return	
 18087  0093E0                     l21323:
 18088                           
 18089                           ; BSR set to: 0
 18090  0093E0  EE20 F00C          	lfsr	2,12
 18091  0093E4  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 18092  0093E6  26D9               	addwf	fsr2l,f,c
 18093  0093E8  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 18094  0093EA  22DA               	addwfc	fsr2h,f,c
 18095  0093EC  0E05               	movlw	5
 18096  0093EE  18DE               	xorwf	postinc2,w,c
 18097  0093F0  A4D8               	btfss	status,2,c
 18098  0093F2  D002               	goto	l21331
 18099                           
 18100                           ; BSR set to: 0
 18101                           ;keeloqDecrypt_MC50.c: 408:     {;keeloqDecrypt_MC50.c: 409:         return TypeProgramm
      +                          ingModeWalk;
 18102  0093F4  0E05               	movlw	5
 18103  0093F6  0012               	return	
 18104  0093F8                     l21331:
 18105                           
 18106                           ; BSR set to: 0
 18107                           ;keeloqDecrypt_MC50.c: 412:     {;keeloqDecrypt_MC50.c: 413:         return NoCMD;
 18108  0093F8  0E00               	movlw	0
 18109                           
 18110                           ; BSR set to: 0
 18111  0093FA  0012               	return		;funcret
 18112  0093FC                     __end_of_verifyProgramingMode:
 18113                           	callstack 0
 18114                           
 18115 ;; *************** function _keeloq_classic_decrypt_packet *****************
 18116 ;; Defined at:
 18117 ;;		line 390 in file "keeloqDecrypt_MC50.c"
 18118 ;; Parameters:    Size  Location     Type
 18119 ;;  data            2   55[COMRAM] PTR struct .
 18120 ;;		 -> classic_data(16), 
 18121 ;; Auto vars:     Size  Location     Type
 18122 ;;		None
 18123 ;; Return value:  Size  Location     Type
 18124 ;;                  1    wreg      void 
 18125 ;; Registers used:
 18126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18127 ;; Tracked objects:
 18128 ;;		On entry : 3F/0
 18129 ;;		On exit  : 3F/0
 18130 ;;		Unchanged: 0/0
 18131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18132 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18134 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18135 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18136 ;;Total ram usage:        5 bytes
 18137 ;; Hardware stack levels used: 1
 18138 ;; Hardware stack levels required when called: 7
 18139 ;; This function calls:
 18140 ;;		_Decrypt
 18141 ;;		_NormalKeyGen
 18142 ;; This function is called by:
 18143 ;;		_keeloqDecryptPacket
 18144 ;; This function uses a non-reentrant model
 18145 ;;
 18146                           
 18147                           	psect	text59
 18148  008CE2                     __ptext59:
 18149                           	callstack 0
 18150  008CE2                     _keeloq_classic_decrypt_packet:
 18151                           	callstack 21
 18152                           
 18153                           ; BSR set to: 0
 18154                           ;keeloqDecrypt_MC50.c: 393:     NormalKeyGen(&data->serialnumber);
 18155                           
 18156                           ; BSR set to: 0
 18157                           ;incstack = 0
 18158  008CE2  0E04               	movlw	4
 18159  008CE4  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 18160  008CE6  6E26               	movwf	NormalKeyGen@serial^0,c
 18161  008CE8  0E00               	movlw	0
 18162  008CEA  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 18163  008CEC  6E27               	movwf	(NormalKeyGen@serial+1)^0,c
 18164  008CEE  EC2F  F037         	call	_NormalKeyGen	;wreg free
 18165                           
 18166                           ;keeloqDecrypt_MC50.c: 395:     Decrypt((uint8_t*) & data->sync);
 18167  008CF2  0E08               	movlw	8
 18168  008CF4  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 18169  008CF6  6E1B               	movwf	Decrypt@packet^0,c
 18170  008CF8  0E00               	movlw	0
 18171  008CFA  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 18172  008CFC  6E1C               	movwf	(Decrypt@packet+1)^0,c
 18173  008CFE  ECE3  F03B         	call	_Decrypt	;wreg free
 18174                           
 18175                           ;keeloqDecrypt_MC50.c: 398:     data->fcode2 = (data->disc >> 12) & 0x0F;
 18176  008D02  EE20 F00D          	lfsr	2,13
 18177  008D06  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 18178  008D08  26D9               	addwf	fsr2l,f,c
 18179  008D0A  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 18180  008D0C  22DA               	addwfc	fsr2h,f,c
 18181  008D0E  EE10 F00A          	lfsr	1,10
 18182  008D12  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 18183  008D14  26E1               	addwf	fsr1l,f,c
 18184  008D16  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 18185  008D18  22E2               	addwfc	fsr1h,f,c
 18186  008D1A  CFE6 F0D8          	movff	postinc1,??_keeloq_classic_decrypt_packet
 18187  008D1E  CFE5 F0D9          	movff	postdec1,??_keeloq_classic_decrypt_packet+1
 18188  008D22  0E0C               	movlw	12
 18189  008D24  0100               	movlb	0	; () banked
 18190  008D26  6FDA               	movwf	(??_keeloq_classic_decrypt_packet+2)& (0+255),b
 18191  008D28                     u25025:
 18192  008D28  90D8               	bcf	status,0,c
 18193  008D2A  33D9               	rrcf	(??_keeloq_classic_decrypt_packet+1)& (0+255),f,b
 18194  008D2C  33D8               	rrcf	??_keeloq_classic_decrypt_packet& (0+255),f,b
 18195  008D2E  2FDA               	decfsz	(??_keeloq_classic_decrypt_packet+2)& (0+255),f,b
 18196  008D30  D7FB               	goto	u25025
 18197  008D32  51D8               	movf	??_keeloq_classic_decrypt_packet& (0+255),w,b
 18198  008D34  0B0F               	andlw	15
 18199  008D36  6EDF               	movwf	indf2,c
 18200                           
 18201                           ; BSR set to: 0
 18202  008D38  0012               	return		;funcret
 18203  008D3A                     __end_of_keeloq_classic_decrypt_packet:
 18204                           	callstack 0
 18205                           
 18206 ;; *************** function _NormalKeyGen *****************
 18207 ;; Defined at:
 18208 ;;		line 87 in file "keeloqDecrypt_MC50.c"
 18209 ;; Parameters:    Size  Location     Type
 18210 ;;  serial          2   37[COMRAM] PTR unsigned long 
 18211 ;;		 -> classic_data(16), 
 18212 ;; Auto vars:     Size  Location     Type
 18213 ;;  Buffer          8   47[COMRAM] unsigned char [8]
 18214 ;;  SKEYtemp        4   43[COMRAM] unsigned char [4]
 18215 ;;  HOPtemp         4   39[COMRAM] unsigned char [4]
 18216 ;; Return value:  Size  Location     Type
 18217 ;;                  1    wreg      void 
 18218 ;; Registers used:
 18219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18220 ;; Tracked objects:
 18221 ;;		On entry : 3F/0
 18222 ;;		On exit  : 0/0
 18223 ;;		Unchanged: 0/0
 18224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18225 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18226 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18228 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18229 ;;Total ram usage:       18 bytes
 18230 ;; Hardware stack levels used: 1
 18231 ;; Hardware stack levels required when called: 6
 18232 ;; This function calls:
 18233 ;;		_Decrypt
 18234 ;;		_LoadManufCode
 18235 ;;		_memcpy
 18236 ;; This function is called by:
 18237 ;;		_keeloq_classic_decrypt_packet
 18238 ;; This function uses a non-reentrant model
 18239 ;;
 18240                           
 18241                           	psect	text60
 18242  006E5E                     __ptext60:
 18243                           	callstack 0
 18244  006E5E                     _NormalKeyGen:
 18245                           	callstack 21
 18246                           
 18247                           ; BSR set to: 0
 18248                           ;keeloqDecrypt_MC50.c: 88:     static uint8_t SEED[4];;keeloqDecrypt_MC50.c: 89:     uin
      +                          t8_t Buffer[8];;keeloqDecrypt_MC50.c: 90:     uint8_t HOPtemp[4];;keeloqDecrypt_MC50.c: 
      +                          91:     uint8_t SKEYtemp[4];;keeloqDecrypt_MC50.c: 93:     memcpy(&Buffer[4], serial, 4)
      +                          ;
 18249                           
 18250                           ; BSR set to: 0
 18251                           ;incstack = 0
 18252  006E5E  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 18253  006E60  6E10               	movwf	memcpy@d1^0,c
 18254  006E62  6A11               	clrf	(memcpy@d1+1)^0,c
 18255  006E64  C026  F012         	movff	NormalKeyGen@serial,memcpy@s1
 18256  006E68  C027  F013         	movff	NormalKeyGen@serial+1,memcpy@s1+1
 18257  006E6C  0E00               	movlw	0
 18258  006E6E  6E15               	movwf	(memcpy@n+1)^0,c
 18259  006E70  0E04               	movlw	4
 18260  006E72  6E14               	movwf	memcpy@n^0,c
 18261  006E74  ECE6  F048         	call	_memcpy	;wreg free
 18262                           
 18263                           ;keeloqDecrypt_MC50.c: 95:     memcpy(HOPtemp, Buffer, 4);
 18264  006E78  0E28               	movlw	low NormalKeyGen@HOPtemp
 18265  006E7A  6E10               	movwf	memcpy@d1^0,c
 18266  006E7C  6A11               	clrf	(memcpy@d1+1)^0,c
 18267  006E7E  0E30               	movlw	low NormalKeyGen@Buffer
 18268  006E80  6E12               	movwf	memcpy@s1^0,c
 18269  006E82  6A13               	clrf	(memcpy@s1+1)^0,c
 18270  006E84  0E00               	movlw	0
 18271  006E86  6E15               	movwf	(memcpy@n+1)^0,c
 18272  006E88  0E04               	movlw	4
 18273  006E8A  6E14               	movwf	memcpy@n^0,c
 18274  006E8C  ECE6  F048         	call	_memcpy	;wreg free
 18275                           
 18276                           ;keeloqDecrypt_MC50.c: 97:     memcpy(SEED, &Buffer[4], 4);
 18277  006E90  0ED9               	movlw	low NormalKeyGen@SEED
 18278  006E92  6E10               	movwf	memcpy@d1^0,c
 18279  006E94  0E02               	movlw	high NormalKeyGen@SEED
 18280  006E96  6E11               	movwf	(memcpy@d1+1)^0,c
 18281  006E98  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 18282  006E9A  6E12               	movwf	memcpy@s1^0,c
 18283  006E9C  6A13               	clrf	(memcpy@s1+1)^0,c
 18284  006E9E  0E00               	movlw	0
 18285  006EA0  6E15               	movwf	(memcpy@n+1)^0,c
 18286  006EA2  0E04               	movlw	4
 18287  006EA4  6E14               	movwf	memcpy@n^0,c
 18288  006EA6  ECE6  F048         	call	_memcpy	;wreg free
 18289                           
 18290                           ;keeloqDecrypt_MC50.c: 98:     SEED[3] &= 0x0f;
 18291  006EAA  0E0F               	movlw	15
 18292  006EAC  0102               	movlb	2	; () banked
 18293  006EAE  17DC               	andwf	(NormalKeyGen@SEED+3)& (0+255),f,b
 18294                           
 18295                           ; BSR set to: 2
 18296                           ;keeloqDecrypt_MC50.c: 101:     memcpy(Buffer, SEED, 4);
 18297  006EB0  0E30               	movlw	low NormalKeyGen@Buffer
 18298  006EB2  6E10               	movwf	memcpy@d1^0,c
 18299  006EB4  6A11               	clrf	(memcpy@d1+1)^0,c
 18300  006EB6  0ED9               	movlw	low NormalKeyGen@SEED
 18301  006EB8  6E12               	movwf	memcpy@s1^0,c
 18302  006EBA  0E02               	movlw	high NormalKeyGen@SEED
 18303  006EBC  6E13               	movwf	(memcpy@s1+1)^0,c
 18304  006EBE  0E00               	movlw	0
 18305  006EC0  6E15               	movwf	(memcpy@n+1)^0,c
 18306  006EC2  0E04               	movlw	4
 18307  006EC4  6E14               	movwf	memcpy@n^0,c
 18308  006EC6  ECE6  F048         	call	_memcpy	;wreg free
 18309                           
 18310                           ;keeloqDecrypt_MC50.c: 102:     Buffer[3] |= 0x20;
 18311  006ECA  8A33               	bsf	(NormalKeyGen@Buffer+3)^0,5,c
 18312                           
 18313                           ;keeloqDecrypt_MC50.c: 103:     LoadManufCode();
 18314  006ECC  EC2D  F04C         	call	_LoadManufCode	;wreg free
 18315                           
 18316                           ; BSR set to: 2
 18317                           ;keeloqDecrypt_MC50.c: 104:     Decrypt(Buffer);
 18318  006ED0  0E30               	movlw	low NormalKeyGen@Buffer
 18319  006ED2  6E1B               	movwf	Decrypt@packet^0,c
 18320  006ED4  6A1C               	clrf	(Decrypt@packet+1)^0,c
 18321  006ED6  ECE3  F03B         	call	_Decrypt	;wreg free
 18322                           
 18323                           ;keeloqDecrypt_MC50.c: 105:     memcpy(SKEYtemp, Buffer, 4);
 18324  006EDA  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 18325  006EDC  6E10               	movwf	memcpy@d1^0,c
 18326  006EDE  6A11               	clrf	(memcpy@d1+1)^0,c
 18327  006EE0  0E30               	movlw	low NormalKeyGen@Buffer
 18328  006EE2  6E12               	movwf	memcpy@s1^0,c
 18329  006EE4  6A13               	clrf	(memcpy@s1+1)^0,c
 18330  006EE6  0E00               	movlw	0
 18331  006EE8  6E15               	movwf	(memcpy@n+1)^0,c
 18332  006EEA  0E04               	movlw	4
 18333  006EEC  6E14               	movwf	memcpy@n^0,c
 18334  006EEE  ECE6  F048         	call	_memcpy	;wreg free
 18335                           
 18336                           ;keeloqDecrypt_MC50.c: 108:     memcpy(Buffer, SEED, 4);
 18337  006EF2  0E30               	movlw	low NormalKeyGen@Buffer
 18338  006EF4  6E10               	movwf	memcpy@d1^0,c
 18339  006EF6  6A11               	clrf	(memcpy@d1+1)^0,c
 18340  006EF8  0ED9               	movlw	low NormalKeyGen@SEED
 18341  006EFA  6E12               	movwf	memcpy@s1^0,c
 18342  006EFC  0E02               	movlw	high NormalKeyGen@SEED
 18343  006EFE  6E13               	movwf	(memcpy@s1+1)^0,c
 18344  006F00  0E00               	movlw	0
 18345  006F02  6E15               	movwf	(memcpy@n+1)^0,c
 18346  006F04  0E04               	movlw	4
 18347  006F06  6E14               	movwf	memcpy@n^0,c
 18348  006F08  ECE6  F048         	call	_memcpy	;wreg free
 18349                           
 18350                           ;keeloqDecrypt_MC50.c: 109:     Buffer[3] |= 0x60;
 18351  006F0C  0E60               	movlw	96
 18352  006F0E  1233               	iorwf	(NormalKeyGen@Buffer+3)^0,f,c
 18353                           
 18354                           ;keeloqDecrypt_MC50.c: 110:     LoadManufCode();
 18355  006F10  EC2D  F04C         	call	_LoadManufCode	;wreg free
 18356                           
 18357                           ; BSR set to: 2
 18358                           ;keeloqDecrypt_MC50.c: 111:     Decrypt(Buffer);
 18359  006F14  0E30               	movlw	low NormalKeyGen@Buffer
 18360  006F16  6E1B               	movwf	Decrypt@packet^0,c
 18361  006F18  6A1C               	clrf	(Decrypt@packet+1)^0,c
 18362  006F1A  ECE3  F03B         	call	_Decrypt	;wreg free
 18363                           
 18364                           ;keeloqDecrypt_MC50.c: 112:     memcpy(&DKEY[4], Buffer, 4);
 18365  006F1E  0ED5               	movlw	low (_DKEY+4)
 18366  006F20  6E10               	movwf	memcpy@d1^0,c
 18367  006F22  0E02               	movlw	high (_DKEY+4)
 18368  006F24  6E11               	movwf	(memcpy@d1+1)^0,c
 18369  006F26  0E30               	movlw	low NormalKeyGen@Buffer
 18370  006F28  6E12               	movwf	memcpy@s1^0,c
 18371  006F2A  6A13               	clrf	(memcpy@s1+1)^0,c
 18372  006F2C  0E00               	movlw	0
 18373  006F2E  6E15               	movwf	(memcpy@n+1)^0,c
 18374  006F30  0E04               	movlw	4
 18375  006F32  6E14               	movwf	memcpy@n^0,c
 18376  006F34  ECE6  F048         	call	_memcpy	;wreg free
 18377                           
 18378                           ;keeloqDecrypt_MC50.c: 113:     memcpy(DKEY, SKEYtemp, 4);
 18379  006F38  0ED1               	movlw	low _DKEY
 18380  006F3A  6E10               	movwf	memcpy@d1^0,c
 18381  006F3C  0E02               	movlw	high _DKEY
 18382  006F3E  6E11               	movwf	(memcpy@d1+1)^0,c
 18383  006F40  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 18384  006F42  6E12               	movwf	memcpy@s1^0,c
 18385  006F44  6A13               	clrf	(memcpy@s1+1)^0,c
 18386  006F46  0E00               	movlw	0
 18387  006F48  6E15               	movwf	(memcpy@n+1)^0,c
 18388  006F4A  0E04               	movlw	4
 18389  006F4C  6E14               	movwf	memcpy@n^0,c
 18390  006F4E  ECE6  F048         	call	_memcpy	;wreg free
 18391                           
 18392                           ;keeloqDecrypt_MC50.c: 116:     memcpy(Buffer, HOPtemp, 4);
 18393  006F52  0E30               	movlw	low NormalKeyGen@Buffer
 18394  006F54  6E10               	movwf	memcpy@d1^0,c
 18395  006F56  6A11               	clrf	(memcpy@d1+1)^0,c
 18396  006F58  0E28               	movlw	low NormalKeyGen@HOPtemp
 18397  006F5A  6E12               	movwf	memcpy@s1^0,c
 18398  006F5C  6A13               	clrf	(memcpy@s1+1)^0,c
 18399  006F5E  0E00               	movlw	0
 18400  006F60  6E15               	movwf	(memcpy@n+1)^0,c
 18401  006F62  0E04               	movlw	4
 18402  006F64  6E14               	movwf	memcpy@n^0,c
 18403  006F66  ECE6  F048         	call	_memcpy	;wreg free
 18404  006F6A  0012               	return		;funcret
 18405  006F6C                     __end_of_NormalKeyGen:
 18406                           	callstack 0
 18407                           
 18408 ;; *************** function _LoadManufCode *****************
 18409 ;; Defined at:
 18410 ;;		line 63 in file "keeloqDecrypt_MC50.c"
 18411 ;; Parameters:    Size  Location     Type
 18412 ;;		None
 18413 ;; Auto vars:     Size  Location     Type
 18414 ;;		None
 18415 ;; Return value:  Size  Location     Type
 18416 ;;                  1    wreg      void 
 18417 ;; Registers used:
 18418 ;;		wreg, status,2
 18419 ;; Tracked objects:
 18420 ;;		On entry : 0/2
 18421 ;;		On exit  : 3F/2
 18422 ;;		Unchanged: 0/0
 18423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18428 ;;Total ram usage:        0 bytes
 18429 ;; Hardware stack levels used: 1
 18430 ;; Hardware stack levels required when called: 4
 18431 ;; This function calls:
 18432 ;;		Nothing
 18433 ;; This function is called by:
 18434 ;;		_NormalKeyGen
 18435 ;; This function uses a non-reentrant model
 18436 ;;
 18437                           
 18438                           	psect	text61
 18439  00985A                     __ptext61:
 18440                           	callstack 0
 18441  00985A                     _LoadManufCode:
 18442                           	callstack 22
 18443                           
 18444                           ;keeloqDecrypt_MC50.c: 64:     DKEY[0] = 0xFF;
 18445                           
 18446                           ;incstack = 0
 18447  00985A  0102               	movlb	2	; () banked
 18448  00985C  69D1               	setf	_DKEY& (0+255),b
 18449                           
 18450                           ; BSR set to: 2
 18451                           ;keeloqDecrypt_MC50.c: 65:     DKEY[1] = 0xCA;
 18452  00985E  0ECA               	movlw	202
 18453  009860  6FD2               	movwf	(_DKEY+1)& (0+255),b
 18454                           
 18455                           ;keeloqDecrypt_MC50.c: 66:     DKEY[2] = 0x76;
 18456  009862  0E76               	movlw	118
 18457  009864  6FD3               	movwf	(_DKEY+2)& (0+255),b
 18458                           
 18459                           ;keeloqDecrypt_MC50.c: 67:     DKEY[3] = 0x94;
 18460  009866  0E94               	movlw	148
 18461  009868  6FD4               	movwf	(_DKEY+3)& (0+255),b
 18462                           
 18463                           ;keeloqDecrypt_MC50.c: 68:     DKEY[4] = 0x22;
 18464  00986A  0E22               	movlw	34
 18465  00986C  6FD5               	movwf	(_DKEY+4)& (0+255),b
 18466                           
 18467                           ;keeloqDecrypt_MC50.c: 69:     DKEY[5] = 0x68;
 18468  00986E  0E68               	movlw	104
 18469  009870  6FD6               	movwf	(_DKEY+5)& (0+255),b
 18470                           
 18471                           ;keeloqDecrypt_MC50.c: 70:     DKEY[6] = 0x27;
 18472  009872  0E27               	movlw	39
 18473  009874  6FD7               	movwf	(_DKEY+6)& (0+255),b
 18474                           
 18475                           ;keeloqDecrypt_MC50.c: 71:     DKEY[7] = 0x57;
 18476  009876  0E57               	movlw	87
 18477  009878  6FD8               	movwf	(_DKEY+7)& (0+255),b
 18478                           
 18479                           ; BSR set to: 2
 18480  00987A  0012               	return		;funcret
 18481  00987C                     __end_of_LoadManufCode:
 18482                           	callstack 0
 18483                           
 18484 ;; *************** function _Decrypt *****************
 18485 ;; Defined at:
 18486 ;;		line 142 in file "keeloqDecrypt_MC50.c"
 18487 ;; Parameters:    Size  Location     Type
 18488 ;;  packet          2   26[COMRAM] PTR unsigned char 
 18489 ;;		 -> SecureKeyGen@HOPtemp(4), NormalKeyGen@Buffer(8), classic_data(16), 
 18490 ;; Auto vars:     Size  Location     Type
 18491 ;;  Buffer          4   33[COMRAM] unsigned char [4]
 18492 ;;  aux             1   32[COMRAM] unsigned char 
 18493 ;;  p               1   31[COMRAM] char 
 18494 ;;  j               1   30[COMRAM] unsigned char 
 18495 ;;  i               1   29[COMRAM] unsigned char 
 18496 ;;  key             1   28[COMRAM] unsigned char 
 18497 ;; Return value:  Size  Location     Type
 18498 ;;                  1    wreg      void 
 18499 ;; Registers used:
 18500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18501 ;; Tracked objects:
 18502 ;;		On entry : 0/0
 18503 ;;		On exit  : 0/0
 18504 ;;		Unchanged: 0/0
 18505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18507 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18509 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18510 ;;Total ram usage:       11 bytes
 18511 ;; Hardware stack levels used: 1
 18512 ;; Hardware stack levels required when called: 5
 18513 ;; This function calls:
 18514 ;;		_memcpy
 18515 ;; This function is called by:
 18516 ;;		_NormalKeyGen
 18517 ;;		_keeloq_classic_decrypt_packet
 18518 ;; This function uses a non-reentrant model
 18519 ;;
 18520                           
 18521                           	psect	text62
 18522  0077C6                     __ptext62:
 18523                           	callstack 0
 18524  0077C6                     _Decrypt:
 18525                           	callstack 21
 18526                           
 18527                           ;keeloqDecrypt_MC50.c: 143:     uint_fast8_t i, j;;keeloqDecrypt_MC50.c: 144:     uint8_
      +                          t key, aux;;keeloqDecrypt_MC50.c: 146:     int8_t p;;keeloqDecrypt_MC50.c: 147:     uint
      +                          8_t Buffer[4];;keeloqDecrypt_MC50.c: 149:     memcpy(Buffer, packet, 4);
 18528                           
 18529                           ; BSR set to: 2
 18530                           ;incstack = 0
 18531  0077C6  0E22               	movlw	low Decrypt@Buffer
 18532  0077C8  6E10               	movwf	memcpy@d1^0,c
 18533  0077CA  6A11               	clrf	(memcpy@d1+1)^0,c
 18534  0077CC  C01B  F012         	movff	Decrypt@packet,memcpy@s1
 18535  0077D0  C01C  F013         	movff	Decrypt@packet+1,memcpy@s1+1
 18536  0077D4  0E00               	movlw	0
 18537  0077D6  6E15               	movwf	(memcpy@n+1)^0,c
 18538  0077D8  0E04               	movlw	4
 18539  0077DA  6E14               	movwf	memcpy@n^0,c
 18540  0077DC  ECE6  F048         	call	_memcpy	;wreg free
 18541                           
 18542                           ;keeloqDecrypt_MC50.c: 151:     p = 1;
 18543  0077E0  0E01               	movlw	1
 18544  0077E2  6E20               	movwf	Decrypt@p^0,c
 18545                           
 18546                           ;keeloqDecrypt_MC50.c: 153:     for (j = 66; j > 0; j--) {
 18547  0077E4  0E42               	movlw	66
 18548  0077E6  6E1F               	movwf	Decrypt@j^0,c
 18549  0077E8                     l20297:
 18550                           
 18551                           ;keeloqDecrypt_MC50.c: 154:         key = DKEY[p--];
 18552  0077E8  0ED1               	movlw	low _DKEY
 18553  0077EA  2420               	addwf	Decrypt@p^0,w,c
 18554  0077EC  6ED9               	movwf	fsr2l,c
 18555  0077EE  6ADA               	clrf	fsr2h,c
 18556  0077F0  0E02               	movlw	high _DKEY
 18557  0077F2  22DA               	addwfc	fsr2h,f,c
 18558  0077F4  50DF               	movf	indf2,w,c
 18559  0077F6  6E1D               	movwf	Decrypt@key^0,c
 18560  0077F8  0620               	decf	Decrypt@p^0,f,c
 18561                           
 18562                           ;keeloqDecrypt_MC50.c: 155:         if (p < 0)
 18563  0077FA  AE20               	btfss	Decrypt@p^0,7,c
 18564  0077FC  D002               	goto	l20305
 18565                           
 18566                           ;keeloqDecrypt_MC50.c: 156:             p += 8;
 18567  0077FE  0E08               	movlw	8
 18568  007800  2620               	addwf	Decrypt@p^0,f,c
 18569  007802                     l20305:
 18570                           
 18571                           ;keeloqDecrypt_MC50.c: 157:         for (i = 8; i > 0; i--) {
 18572  007802  0E08               	movlw	8
 18573  007804  6E1E               	movwf	Decrypt@i^0,c
 18574  007806                     l1859:
 18575                           
 18576                           ;keeloqDecrypt_MC50.c: 159:             if ((( (Buffer[3]) & (1<<(6))) != 0)) {
 18577  007806  AC25               	btfss	(Decrypt@Buffer+3)^0,6,c
 18578  007808  D006               	goto	l1861
 18579                           
 18580                           ;keeloqDecrypt_MC50.c: 160:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18581  00780A  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18582  00780C  D002               	goto	l20315
 18583                           
 18584                           ;keeloqDecrypt_MC50.c: 161:                     aux = 0b00111010;
 18585  00780E  0E3A               	movlw	58
 18586  007810  D007               	goto	L80
 18587  007812                     l20315:
 18588                           
 18589                           ;keeloqDecrypt_MC50.c: 163:                     aux = 0b01011100;
 18590  007812  0E5C               	movlw	92
 18591  007814  D005               	goto	L80
 18592  007816                     l1861:
 18593                           
 18594                           ;keeloqDecrypt_MC50.c: 165:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18595  007816  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18596  007818  D002               	goto	l20319
 18597                           
 18598                           ;keeloqDecrypt_MC50.c: 166:                     aux = 0b01110100;
 18599  00781A  0E74               	movlw	116
 18600  00781C  D001               	goto	L80
 18601  00781E                     l20319:
 18602                           
 18603                           ;keeloqDecrypt_MC50.c: 168:                     aux = 0b00101110;
 18604  00781E  0E2E               	movlw	46
 18605  007820                     L80:
 18606  007820  6E21               	movwf	Decrypt@aux^0,c
 18607                           
 18608                           ;keeloqDecrypt_MC50.c: 172:             if ((( (Buffer[2]) & (1<<(3))) != 0))
 18609  007822  B624               	btfsc	(Decrypt@Buffer+2)^0,3,c
 18610                           
 18611                           ;keeloqDecrypt_MC50.c: 173:                 aux = (aux << 4) | (aux >> 4);
 18612  007824  3A21               	swapf	Decrypt@aux^0,f,c
 18613                           
 18614                           ;keeloqDecrypt_MC50.c: 174:             if ((( (Buffer[1]) & (1<<(0))) != 0))
 18615  007826  A023               	btfss	(Decrypt@Buffer+1)^0,0,c
 18616  007828  D004               	goto	l20327
 18617                           
 18618                           ;keeloqDecrypt_MC50.c: 175:                 aux <<= 2;
 18619  00782A  90D8               	bcf	status,0,c
 18620  00782C  3621               	rlcf	Decrypt@aux^0,f,c
 18621  00782E  90D8               	bcf	status,0,c
 18622  007830  3621               	rlcf	Decrypt@aux^0,f,c
 18623  007832                     l20327:
 18624                           
 18625                           ;keeloqDecrypt_MC50.c: 176:             if ((( (Buffer[0]) & (1<<(0))) != 0))
 18626  007832  A022               	btfss	Decrypt@Buffer^0,0,c
 18627  007834  D002               	goto	l1869
 18628                           
 18629                           ;keeloqDecrypt_MC50.c: 177:                 aux <<= 1;
 18630  007836  90D8               	bcf	status,0,c
 18631  007838  3621               	rlcf	Decrypt@aux^0,f,c
 18632  00783A                     l1869:
 18633                           
 18634                           ;keeloqDecrypt_MC50.c: 180:             aux ^= Buffer[1] ^ Buffer[3] ^ key;
 18635  00783A  5023               	movf	(Decrypt@Buffer+1)^0,w,c
 18636  00783C  1825               	xorwf	(Decrypt@Buffer+3)^0,w,c
 18637  00783E  181D               	xorwf	Decrypt@key^0,w,c
 18638  007840  1A21               	xorwf	Decrypt@aux^0,f,c
 18639                           
 18640                           ;keeloqDecrypt_MC50.c: 182:             Buffer[3] = (Buffer[3] << 1) | (Buffer[2] >> 7);
 18641  007842  90D8               	bcf	status,0,c
 18642  007844  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18643  007846  3425               	rlcf	(Decrypt@Buffer+3)^0,w,c
 18644  007848  6E25               	movwf	(Decrypt@Buffer+3)^0,c
 18645                           
 18646                           ;keeloqDecrypt_MC50.c: 183:             Buffer[2] = (Buffer[2] << 1) | (Buffer[1] >> 7);
 18647  00784A  90D8               	bcf	status,0,c
 18648  00784C  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18649  00784E  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18650  007850  6E24               	movwf	(Decrypt@Buffer+2)^0,c
 18651                           
 18652                           ;keeloqDecrypt_MC50.c: 184:             Buffer[1] = (Buffer[1] << 1) | (Buffer[0] >> 7);
 18653  007852  90D8               	bcf	status,0,c
 18654  007854  3422               	rlcf	Decrypt@Buffer^0,w,c
 18655  007856  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18656  007858  6E23               	movwf	(Decrypt@Buffer+1)^0,c
 18657                           
 18658                           ;keeloqDecrypt_MC50.c: 185:             Buffer[0] = (Buffer[0] << 1) | (aux >> 7);
 18659  00785A  90D8               	bcf	status,0,c
 18660  00785C  3421               	rlcf	Decrypt@aux^0,w,c
 18661  00785E  3422               	rlcf	Decrypt@Buffer^0,w,c
 18662  007860  6E22               	movwf	Decrypt@Buffer^0,c
 18663                           
 18664                           ;keeloqDecrypt_MC50.c: 188:             key <<= 1;
 18665  007862  90D8               	bcf	status,0,c
 18666  007864  361D               	rlcf	Decrypt@key^0,f,c
 18667                           
 18668                           ;keeloqDecrypt_MC50.c: 189:         }
 18669  007866  061E               	decf	Decrypt@i^0,f,c
 18670  007868  501E               	movf	Decrypt@i^0,w,c
 18671  00786A  A4D8               	btfss	status,2,c
 18672  00786C  D7CC               	goto	l1859
 18673                           
 18674                           ;keeloqDecrypt_MC50.c: 190:     }
 18675  00786E  061F               	decf	Decrypt@j^0,f,c
 18676  007870  501F               	movf	Decrypt@j^0,w,c
 18677  007872  A4D8               	btfss	status,2,c
 18678  007874  D7B9               	goto	l20297
 18679                           
 18680                           ;keeloqDecrypt_MC50.c: 192:     memcpy(packet, Buffer, 4);
 18681  007876  C01B  F010         	movff	Decrypt@packet,memcpy@d1
 18682  00787A  C01C  F011         	movff	Decrypt@packet+1,memcpy@d1+1
 18683  00787E  0E22               	movlw	low Decrypt@Buffer
 18684  007880  6E12               	movwf	memcpy@s1^0,c
 18685  007882  6A13               	clrf	(memcpy@s1+1)^0,c
 18686  007884  0E00               	movlw	0
 18687  007886  6E15               	movwf	(memcpy@n+1)^0,c
 18688  007888  0E04               	movlw	4
 18689  00788A  6E14               	movwf	memcpy@n^0,c
 18690  00788C  ECE6  F048         	call	_memcpy	;wreg free
 18691  007890  0012               	return		;funcret
 18692  007892                     __end_of_Decrypt:
 18693                           	callstack 0
 18694                           
 18695 ;; *************** function _HopCHK *****************
 18696 ;; Defined at:
 18697 ;;		line 236 in file "keeloqDecrypt_MC50.c"
 18698 ;; Parameters:    Size  Location     Type
 18699 ;;  data            2   35[COMRAM] PTR struct .
 18700 ;;		 -> classic_data(16), 
 18701 ;; Auto vars:     Size  Location     Type
 18702 ;;  hopDiff         2   37[COMRAM] short 
 18703 ;; Return value:  Size  Location     Type
 18704 ;;                  1    wreg      enum E10730
 18705 ;; Registers used:
 18706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18707 ;; Tracked objects:
 18708 ;;		On entry : 3E/0
 18709 ;;		On exit  : 3C/0
 18710 ;;		Unchanged: 0/0
 18711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18712 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18713 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18715 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18716 ;;Total ram usage:        4 bytes
 18717 ;; Hardware stack levels used: 1
 18718 ;; Hardware stack levels required when called: 6
 18719 ;; This function calls:
 18720 ;;		_ReqResync
 18721 ;;		_getHopCode
 18722 ;; This function is called by:
 18723 ;;		_keeloqDecryptPacket
 18724 ;; This function uses a non-reentrant model
 18725 ;;
 18726                           
 18727                           	psect	text63
 18728  008090                     __ptext63:
 18729                           	callstack 0
 18730  008090                     _HopCHK:
 18731                           	callstack 22
 18732                           
 18733                           ;keeloqDecrypt_MC50.c: 237:     int16_t hopDiff;;keeloqDecrypt_MC50.c: 238:     Hop = da
      +                          ta->sync;
 18734                           
 18735                           ;incstack = 0
 18736  008090  EE20 F008          	lfsr	2,8
 18737  008094  5024               	movf	HopCHK@data^0,w,c
 18738  008096  26D9               	addwf	fsr2l,f,c
 18739  008098  5025               	movf	(HopCHK@data+1)^0,w,c
 18740  00809A  22DA               	addwfc	fsr2h,f,c
 18741  00809C  CFDE F06A          	movff	postinc2,_Hop
 18742  0080A0  CFDD F06B          	movff	postdec2,_Hop+1
 18743                           
 18744                           ;keeloqDecrypt_MC50.c: 239:     EHop=getHopCode(data);
 18745  0080A4  C024  F016         	movff	HopCHK@data,getHopCode@data
 18746  0080A8  C025  F017         	movff	HopCHK@data+1,getHopCode@data+1
 18747  0080AC  EC7A  F035         	call	_getHopCode	;wreg free
 18748  0080B0  C016  F28C         	movff	?_getHopCode,_EHop
 18749  0080B4  C017  F28D         	movff	?_getHopCode+1,_EHop+1
 18750                           
 18751                           ;keeloqDecrypt_MC50.c: 241:     if (F2Chance)
 18752  0080B8  0101               	movlb	1	; () banked
 18753  0080BA  5152               	movf	_F2Chance& (0+255),w,b
 18754  0080BC  B4D8               	btfsc	status,2,c
 18755  0080BE  D010               	goto	l21295
 18756                           
 18757                           ; BSR set to: 1
 18758                           ;keeloqDecrypt_MC50.c: 242:         if (NextHop == Hop) {
 18759  0080C0  0100               	movlb	0	; () banked
 18760  0080C2  516A               	movf	_Hop& (0+255),w,b
 18761  0080C4  0102               	movlb	2	; () banked
 18762  0080C6  198E               	xorwf	_NextHop& (0+255),w,b
 18763  0080C8  E10B               	bnz	l21295
 18764  0080CA  0100               	movlb	0	; () banked
 18765  0080CC  516B               	movf	(_Hop+1)& (0+255),w,b
 18766  0080CE  0102               	movlb	2	; () banked
 18767  0080D0  198F               	xorwf	(_NextHop+1)& (0+255),w,b
 18768  0080D2  A4D8               	btfss	status,2,c
 18769  0080D4  D005               	goto	l21295
 18770                           
 18771                           ; BSR set to: 2
 18772                           ;keeloqDecrypt_MC50.c: 243:             F2Chance = 0;
 18773  0080D6  0E00               	movlw	0
 18774  0080D8  0101               	movlb	1	; () banked
 18775  0080DA  6F52               	movwf	_F2Chance& (0+255),b
 18776  0080DC                     l21291:
 18777                           
 18778                           ;keeloqDecrypt_MC50.c: 245:             return VALID_PACKET;
 18779  0080DC  0E01               	movlw	1
 18780  0080DE  0012               	return	
 18781  0080E0                     l21295:
 18782                           
 18783                           ;keeloqDecrypt_MC50.c: 249:     hopDiff = Hop - EHop;
 18784  0080E0  0102               	movlb	2	; () banked
 18785  0080E2  518C               	movf	_EHop& (0+255),w,b
 18786  0080E4  0100               	movlb	0	; () banked
 18787  0080E6  5D6A               	subwf	_Hop& (0+255),w,b
 18788  0080E8  6E26               	movwf	HopCHK@hopDiff^0,c
 18789  0080EA  0102               	movlb	2	; () banked
 18790  0080EC  518D               	movf	(_EHop+1)& (0+255),w,b
 18791  0080EE  0100               	movlb	0	; () banked
 18792  0080F0  596B               	subwfb	(_Hop+1)& (0+255),w,b
 18793  0080F2  6E27               	movwf	(HopCHK@hopDiff+1)^0,c
 18794                           
 18795                           ;keeloqDecrypt_MC50.c: 251:     if (hopDiff < 0) {
 18796  0080F4  AE27               	btfss	(HopCHK@hopDiff+1)^0,7,c
 18797  0080F6  D002               	goto	l21303
 18798                           
 18799                           ; BSR set to: 0
 18800                           ;keeloqDecrypt_MC50.c: 254:         return HOP_CHECK_FAIL;
 18801  0080F8  0E0A               	movlw	10
 18802  0080FA  0012               	return	
 18803  0080FC                     l21303:
 18804                           
 18805                           ; BSR set to: 0
 18806  0080FC  BE27               	btfsc	(HopCHK@hopDiff+1)^0,7,c
 18807  0080FE  D7EE               	goto	l21291
 18808  008100  5027               	movf	(HopCHK@hopDiff+1)^0,w,c
 18809  008102  E104               	bnz	u24990
 18810  008104  0E11               	movlw	17
 18811  008106  5C26               	subwf	HopCHK@hopDiff^0,w,c
 18812  008108  A0D8               	btfss	status,0,c
 18813  00810A  D7E8               	goto	l21291
 18814  00810C                     u24990:
 18815                           
 18816                           ; BSR set to: 0
 18817                           ;keeloqDecrypt_MC50.c: 257:         return ReqResync(Hop);
 18818  00810C  C06A  F010         	movff	_Hop,ReqResync@CurrentHop
 18819  008110  C06B  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18820  008114  ECE9  F04C         	call	_ReqResync	;wreg free
 18821  008118  0012               	return		;funcret
 18822  00811A                     __end_of_HopCHK:
 18823                           	callstack 0
 18824                           
 18825 ;; *************** function _getHopCode *****************
 18826 ;; Defined at:
 18827 ;;		line 266 in file "keeloqDecrypt_MC50.c"
 18828 ;; Parameters:    Size  Location     Type
 18829 ;;  data            2   21[COMRAM] PTR struct .
 18830 ;;		 -> classic_data(16), 
 18831 ;; Auto vars:     Size  Location     Type
 18832 ;;  tempHop         2   31[COMRAM] unsigned short 
 18833 ;;  i               1   34[COMRAM] unsigned char 
 18834 ;;  tempPos         1   33[COMRAM] char 
 18835 ;; Return value:  Size  Location     Type
 18836 ;;                  2   21[COMRAM] unsigned short 
 18837 ;; Registers used:
 18838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18839 ;; Tracked objects:
 18840 ;;		On entry : 3E/0
 18841 ;;		On exit  : 3C/0
 18842 ;;		Unchanged: 0/0
 18843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18844 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18845 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18846 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18847 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18848 ;;Total ram usage:       14 bytes
 18849 ;; Hardware stack levels used: 1
 18850 ;; Hardware stack levels required when called: 5
 18851 ;; This function calls:
 18852 ;;		_ReqResync
 18853 ;;		___wmul
 18854 ;; This function is called by:
 18855 ;;		_HopCHK
 18856 ;; This function uses a non-reentrant model
 18857 ;;
 18858                           
 18859                           	psect	text64
 18860  006AF4                     __ptext64:
 18861                           	callstack 0
 18862  006AF4                     _getHopCode:
 18863                           	callstack 22
 18864                           
 18865                           ;keeloqDecrypt_MC50.c: 268:     uint16_t tempHop=0;
 18866                           
 18867                           ;incstack = 0
 18868  006AF4  0E00               	movlw	0
 18869  006AF6  6E21               	movwf	(getHopCode@tempHop+1)^0,c
 18870  006AF8  0E00               	movlw	0
 18871  006AFA  6E20               	movwf	getHopCode@tempHop^0,c
 18872                           
 18873                           ;keeloqDecrypt_MC50.c: 269:     int8_t tempPos=-1;
 18874  006AFC  6822               	setf	getHopCode@tempPos^0,c
 18875                           
 18876                           ;keeloqDecrypt_MC50.c: 270:     for(i=0;i<25;i++)
 18877  006AFE  0E00               	movlw	0
 18878  006B00  6E23               	movwf	getHopCode@i^0,c
 18879  006B02                     l20577:
 18880                           
 18881                           ;keeloqDecrypt_MC50.c: 271:     {;keeloqDecrypt_MC50.c: 272:         if(listSyncValues[i
      +                          ].serial==data->serialnumber)
 18882  006B02  EE20 F004          	lfsr	2,4
 18883  006B06  5016               	movf	getHopCode@data^0,w,c
 18884  006B08  26D9               	addwf	fsr2l,f,c
 18885  006B0A  5017               	movf	(getHopCode@data+1)^0,w,c
 18886  006B0C  22DA               	addwfc	fsr2h,f,c
 18887  006B0E  5023               	movf	getHopCode@i^0,w,c
 18888  006B10  0D06               	mullw	6
 18889  006B12  0E00               	movlw	low _listSyncValues
 18890  006B14  24F3               	addwf	243,w,c
 18891  006B16  6EE1               	movwf	fsr1l,c
 18892  006B18  0E03               	movlw	high _listSyncValues
 18893  006B1A  20F4               	addwfc	prodh,w,c
 18894  006B1C  6EE2               	movwf	fsr1h,c
 18895  006B1E  50DE               	movf	postinc2,w,c
 18896  006B20  18E6               	xorwf	postinc1,w,c
 18897  006B22  E118               	bnz	l20583
 18898  006B24  50DE               	movf	postinc2,w,c
 18899  006B26  18E6               	xorwf	postinc1,w,c
 18900  006B28  E115               	bnz	l20583
 18901  006B2A  50DE               	movf	postinc2,w,c
 18902  006B2C  18E6               	xorwf	postinc1,w,c
 18903  006B2E  E112               	bnz	l20583
 18904  006B30  50DE               	movf	postinc2,w,c
 18905  006B32  18E6               	xorwf	postinc1,w,c
 18906  006B34  A4D8               	btfss	status,2,c
 18907  006B36  D00E               	goto	l20583
 18908                           
 18909                           ;keeloqDecrypt_MC50.c: 273:         {;keeloqDecrypt_MC50.c: 274:             tempHop=lis
      +                          tSyncValues[i].sync;
 18910  006B38  5023               	movf	getHopCode@i^0,w,c
 18911  006B3A  0D06               	mullw	6
 18912  006B3C  0E04               	movlw	low (_listSyncValues+4)
 18913  006B3E  24F3               	addwf	243,w,c
 18914  006B40  6ED9               	movwf	fsr2l,c
 18915  006B42  0E03               	movlw	high (_listSyncValues+4)
 18916  006B44  20F4               	addwfc	prodh,w,c
 18917  006B46  6EDA               	movwf	fsr2h,c
 18918  006B48  CFDE F020          	movff	postinc2,getHopCode@tempHop
 18919  006B4C  CFDD F021          	movff	postdec2,getHopCode@tempHop+1
 18920                           
 18921                           ;keeloqDecrypt_MC50.c: 275:             tempPos=i;
 18922  006B50  C023  F022         	movff	getHopCode@i,getHopCode@tempPos
 18923  006B54                     l20583:
 18924                           
 18925                           ;keeloqDecrypt_MC50.c: 278:     }
 18926  006B54  2A23               	incf	getHopCode@i^0,f,c
 18927  006B56  0E18               	movlw	24
 18928  006B58  6423               	cpfsgt	getHopCode@i^0,c
 18929  006B5A  D7D3               	goto	l20577
 18930                           
 18931                           ;keeloqDecrypt_MC50.c: 280:     if(tempPos<0)
 18932  006B5C  AE22               	btfss	getHopCode@tempPos^0,7,c
 18933  006B5E  D050               	goto	l20603
 18934                           
 18935                           ;keeloqDecrypt_MC50.c: 281:     {;keeloqDecrypt_MC50.c: 282:         listSyncValues[poin
      +                          tSync].serial=data->serialnumber;
 18936  006B60  EE20 F004          	lfsr	2,4
 18937  006B64  5016               	movf	getHopCode@data^0,w,c
 18938  006B66  26D9               	addwf	fsr2l,f,c
 18939  006B68  5017               	movf	(getHopCode@data+1)^0,w,c
 18940  006B6A  22DA               	addwfc	fsr2h,f,c
 18941  006B6C  C068  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18942  006B70  C069  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18943  006B74  0E00               	movlw	0
 18944  006B76  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18945  006B78  0E06               	movlw	6
 18946  006B7A  6E12               	movwf	___wmul@multiplicand^0,c
 18947  006B7C  ECD0  F04B         	call	___wmul	;wreg free
 18948  006B80  0E00               	movlw	low _listSyncValues
 18949  006B82  2410               	addwf	?___wmul^0,w,c
 18950  006B84  6EE1               	movwf	fsr1l,c
 18951  006B86  0E03               	movlw	high _listSyncValues
 18952  006B88  2011               	addwfc	(?___wmul+1)^0,w,c
 18953  006B8A  6EE2               	movwf	fsr1h,c
 18954  006B8C  CFDE FFE6          	movff	postinc2,postinc1
 18955  006B90  CFDE FFE6          	movff	postinc2,postinc1
 18956  006B94  CFDE FFE6          	movff	postinc2,postinc1
 18957  006B98  CFDE FFE6          	movff	postinc2,postinc1
 18958                           
 18959                           ;keeloqDecrypt_MC50.c: 283:         listSyncValues[pointSync].sync=data->sync;
 18960  006B9C  EE20 F008          	lfsr	2,8
 18961  006BA0  5016               	movf	getHopCode@data^0,w,c
 18962  006BA2  26D9               	addwf	fsr2l,f,c
 18963  006BA4  5017               	movf	(getHopCode@data+1)^0,w,c
 18964  006BA6  22DA               	addwfc	fsr2h,f,c
 18965  006BA8  C068  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18966  006BAC  C069  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18967  006BB0  0E00               	movlw	0
 18968  006BB2  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18969  006BB4  0E06               	movlw	6
 18970  006BB6  6E12               	movwf	___wmul@multiplicand^0,c
 18971  006BB8  ECD0  F04B         	call	___wmul	;wreg free
 18972  006BBC  0E04               	movlw	low (_listSyncValues+4)
 18973  006BBE  2410               	addwf	?___wmul^0,w,c
 18974  006BC0  6EE1               	movwf	fsr1l,c
 18975  006BC2  0E03               	movlw	high (_listSyncValues+4)
 18976  006BC4  2011               	addwfc	(?___wmul+1)^0,w,c
 18977  006BC6  6EE2               	movwf	fsr1h,c
 18978  006BC8  CFDE FFE6          	movff	postinc2,postinc1
 18979  006BCC  CFDD FFE5          	movff	postdec2,postdec1
 18980                           
 18981                           ;keeloqDecrypt_MC50.c: 284:         pointSync++;
 18982  006BD0  0100               	movlb	0	; () banked
 18983  006BD2  4B68               	infsnz	_pointSync& (0+255),f,b	;volatile
 18984  006BD4  2B69               	incf	(_pointSync+1)& (0+255),f,b	;volatile
 18985                           
 18986                           ; BSR set to: 0
 18987                           ;keeloqDecrypt_MC50.c: 285:         if(pointSync>=25)
 18988  006BD6  5169               	movf	(_pointSync+1)& (0+255),w,b	;volatile
 18989  006BD8  E104               	bnz	u24030
 18990  006BDA  0E19               	movlw	25
 18991  006BDC  5D68               	subwf	_pointSync& (0+255),w,b	;volatile
 18992  006BDE  A0D8               	btfss	status,0,c
 18993  006BE0  D004               	goto	l20597
 18994  006BE2                     u24030:
 18995                           
 18996                           ; BSR set to: 0
 18997                           ;keeloqDecrypt_MC50.c: 286:         {;keeloqDecrypt_MC50.c: 287:             pointSync=0
      +                          ;
 18998  006BE2  0E00               	movlw	0
 18999  006BE4  6F69               	movwf	(_pointSync+1)& (0+255),b	;volatile
 19000  006BE6  0E00               	movlw	0
 19001  006BE8  6F68               	movwf	_pointSync& (0+255),b	;volatile
 19002  006BEA                     l20597:
 19003                           
 19004                           ; BSR set to: 0
 19005                           ;keeloqDecrypt_MC50.c: 289:         return ReqResync(Hop);
 19006  006BEA  C06A  F010         	movff	_Hop,ReqResync@CurrentHop
 19007  006BEE  C06B  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 19008  006BF2  ECE9  F04C         	call	_ReqResync	;wreg free
 19009  006BF6  6E18               	movwf	??_getHopCode^0,c
 19010  006BF8  5018               	movf	??_getHopCode^0,w,c
 19011  006BFA  6E16               	movwf	?_getHopCode^0,c
 19012  006BFC  6A17               	clrf	(?_getHopCode+1)^0,c
 19013  006BFE  0012               	return	
 19014  006C00                     l20603:
 19015                           
 19016                           ;keeloqDecrypt_MC50.c: 292:     {;keeloqDecrypt_MC50.c: 293:         listSyncValues[temp
      +                          Pos].sync=Hop;
 19017  006C00  5022               	movf	getHopCode@tempPos^0,w,c
 19018  006C02  0D06               	mullw	6
 19019  006C04  0E04               	movlw	low (_listSyncValues+4)
 19020  006C06  24F3               	addwf	243,w,c
 19021  006C08  6ED9               	movwf	fsr2l,c
 19022  006C0A  0E03               	movlw	high (_listSyncValues+4)
 19023  006C0C  20F4               	addwfc	prodh,w,c
 19024  006C0E  6EDA               	movwf	fsr2h,c
 19025  006C10  C06A  FFDE         	movff	_Hop,postinc2
 19026  006C14  C06B  FFDD         	movff	_Hop+1,postdec2
 19027                           
 19028                           ;keeloqDecrypt_MC50.c: 296:     return tempHop;
 19029  006C18  C020  F016         	movff	getHopCode@tempHop,?_getHopCode
 19030  006C1C  C021  F017         	movff	getHopCode@tempHop+1,?_getHopCode+1
 19031  006C20  0012               	return		;funcret
 19032  006C22                     __end_of_getHopCode:
 19033                           	callstack 0
 19034                           
 19035 ;; *************** function _ReqResync *****************
 19036 ;; Defined at:
 19037 ;;		line 224 in file "keeloqDecrypt_MC50.c"
 19038 ;; Parameters:    Size  Location     Type
 19039 ;;  CurrentHop      2   15[COMRAM] unsigned short 
 19040 ;; Auto vars:     Size  Location     Type
 19041 ;;		None
 19042 ;; Return value:  Size  Location     Type
 19043 ;;                  1    wreg      enum E10730
 19044 ;; Registers used:
 19045 ;;		wreg, status,2, status,0
 19046 ;; Tracked objects:
 19047 ;;		On entry : 3F/0
 19048 ;;		On exit  : 3F/2
 19049 ;;		Unchanged: 0/0
 19050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19051 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19054 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19055 ;;Total ram usage:        2 bytes
 19056 ;; Hardware stack levels used: 1
 19057 ;; Hardware stack levels required when called: 4
 19058 ;; This function calls:
 19059 ;;		Nothing
 19060 ;; This function is called by:
 19061 ;;		_HopCHK
 19062 ;;		_getHopCode
 19063 ;; This function uses a non-reentrant model
 19064 ;;
 19065                           
 19066                           	psect	text65
 19067  0099D2                     __ptext65:
 19068                           	callstack 0
 19069  0099D2                     _ReqResync:
 19070                           	callstack 22
 19071                           
 19072                           ; BSR set to: 0
 19073                           ;keeloqDecrypt_MC50.c: 225:     F2Chance = 1;
 19074                           
 19075                           ;incstack = 0
 19076  0099D2  0E01               	movlw	1
 19077  0099D4  0101               	movlb	1	; () banked
 19078  0099D6  6F52               	movwf	_F2Chance& (0+255),b
 19079                           
 19080                           ; BSR set to: 1
 19081                           ;keeloqDecrypt_MC50.c: 226:     NextHop = CurrentHop + 1;
 19082  0099D8  0E01               	movlw	1
 19083  0099DA  2410               	addwf	ReqResync@CurrentHop^0,w,c
 19084  0099DC  0102               	movlb	2	; () banked
 19085  0099DE  6F8E               	movwf	_NextHop& (0+255),b
 19086  0099E0  0E00               	movlw	0
 19087  0099E2  2011               	addwfc	(ReqResync@CurrentHop+1)^0,w,c
 19088  0099E4  6F8F               	movwf	(_NextHop+1)& (0+255),b
 19089                           
 19090                           ; BSR set to: 2
 19091                           ;keeloqDecrypt_MC50.c: 228:     return RESYNC_REQ;
 19092  0099E6  0E09               	movlw	9
 19093                           
 19094                           ; BSR set to: 2
 19095  0099E8  0012               	return		;funcret
 19096  0099EA                     __end_of_ReqResync:
 19097                           	callstack 0
 19098                           
 19099 ;; *************** function _DecCHK *****************
 19100 ;; Defined at:
 19101 ;;		line 206 in file "keeloqDecrypt_MC50.c"
 19102 ;; Parameters:    Size  Location     Type
 19103 ;;  data            2   15[COMRAM] PTR struct .
 19104 ;;		 -> classic_data(16), 
 19105 ;; Auto vars:     Size  Location     Type
 19106 ;;		None
 19107 ;; Return value:  Size  Location     Type
 19108 ;;                  1    wreg      _Bool 
 19109 ;; Registers used:
 19110 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19111 ;; Tracked objects:
 19112 ;;		On entry : 3E/0
 19113 ;;		On exit  : 3E/0
 19114 ;;		Unchanged: 3E/0
 19115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19116 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19118 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19119 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19120 ;;Total ram usage:        4 bytes
 19121 ;; Hardware stack levels used: 1
 19122 ;; Hardware stack levels required when called: 4
 19123 ;; This function calls:
 19124 ;;		Nothing
 19125 ;; This function is called by:
 19126 ;;		_keeloqDecryptPacket
 19127 ;; This function uses a non-reentrant model
 19128 ;;
 19129                           
 19130                           	psect	text66
 19131  0093FC                     __ptext66:
 19132                           	callstack 0
 19133  0093FC                     _DecCHK:
 19134                           	callstack 24
 19135                           
 19136                           ;keeloqDecrypt_MC50.c: 208:     if (((data->fcode1 ^ data->fcode2) & 0x0f) != 0)
 19137                           
 19138                           ; BSR set to: 2
 19139                           ;incstack = 0
 19140  0093FC  EE20 F00D          	lfsr	2,13
 19141  009400  5010               	movf	DecCHK@data^0,w,c
 19142  009402  26D9               	addwf	fsr2l,f,c
 19143  009404  5011               	movf	(DecCHK@data+1)^0,w,c
 19144  009406  22DA               	addwfc	fsr2h,f,c
 19145  009408  50DF               	movf	indf2,w,c
 19146  00940A  6E12               	movwf	??_DecCHK^0,c
 19147  00940C  EE20 F00C          	lfsr	2,12
 19148  009410  5010               	movf	DecCHK@data^0,w,c
 19149  009412  26D9               	addwf	fsr2l,f,c
 19150  009414  5011               	movf	(DecCHK@data+1)^0,w,c
 19151  009416  22DA               	addwfc	fsr2h,f,c
 19152  009418  50DF               	movf	indf2,w,c
 19153  00941A  1812               	xorwf	??_DecCHK^0,w,c
 19154  00941C  6E13               	movwf	(??_DecCHK+1)^0,c
 19155  00941E  0E0F               	movlw	15
 19156  009420  1613               	andwf	(??_DecCHK+1)^0,f,c
 19157  009422  B4D8               	btfsc	status,2,c
 19158  009424  D002               	goto	l21277
 19159                           
 19160                           ;keeloqDecrypt_MC50.c: 209:         return 0;
 19161  009426  0E00               	movlw	0
 19162  009428  0012               	return	
 19163  00942A                     l21277:
 19164                           
 19165                           ;keeloqDecrypt_MC50.c: 211:     return 1;
 19166  00942A  0E01               	movlw	1
 19167  00942C  0012               	return		;funcret
 19168  00942E                     __end_of_DecCHK:
 19169                           	callstack 0
 19170                           
 19171 ;; *************** function _DecryptPacket_12BIT *****************
 19172 ;; Defined at:
 19173 ;;		line 370 in file "keeloqDecrypt_MC50.c"
 19174 ;; Parameters:    Size  Location     Type
 19175 ;;  data            2    8[BANK0 ] PTR unsigned char 
 19176 ;;		 -> BufferRF(9), 
 19177 ;;  classic_data    2   10[BANK0 ] PTR struct .
 19178 ;;		 -> classic_data(16), 
 19179 ;; Auto vars:     Size  Location     Type
 19180 ;;  commandType     1   12[BANK0 ] enum E10539
 19181 ;; Return value:  Size  Location     Type
 19182 ;;                  1    wreg      enum E10539
 19183 ;; Registers used:
 19184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19185 ;; Tracked objects:
 19186 ;;		On entry : 3F/0
 19187 ;;		On exit  : 3F/0
 19188 ;;		Unchanged: 0/0
 19189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19190 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19191 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19193 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19194 ;;Total ram usage:        5 bytes
 19195 ;; Hardware stack levels used: 1
 19196 ;; Hardware stack levels required when called: 14
 19197 ;; This function calls:
 19198 ;;		_memcpy
 19199 ;;		_validateRemoteSerialNumber
 19200 ;; This function is called by:
 19201 ;;		_readRFButtons
 19202 ;; This function uses a non-reentrant model
 19203 ;;
 19204                           
 19205                           	psect	text67
 19206  007EEA                     __ptext67:
 19207                           	callstack 0
 19208  007EEA                     _DecryptPacket_12BIT:
 19209                           	callstack 15
 19210                           
 19211                           ; BSR set to: 0
 19212                           ;keeloqDecrypt_MC50.c: 370: TypeCMD DecryptPacket_12BIT (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 371: {;keeloqDecrypt_MC50.c: 372:     TypeCMD command
      +                          Type;;keeloqDecrypt_MC50.c: 373:     memcpy(&classic_data->serialnumber, data, 4);
 19213                           
 19214                           ;incstack = 0
 19215  007EEA  0E04               	movlw	4
 19216  007EEC  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19217  007EEE  6E10               	movwf	memcpy@d1^0,c
 19218  007EF0  0E00               	movlw	0
 19219  007EF2  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19220  007EF4  6E11               	movwf	(memcpy@d1+1)^0,c
 19221  007EF6  C0E0  F012         	movff	DecryptPacket_12BIT@data,memcpy@s1
 19222  007EFA  C0E1  F013         	movff	DecryptPacket_12BIT@data+1,memcpy@s1+1
 19223  007EFE  0E00               	movlw	0
 19224  007F00  6E15               	movwf	(memcpy@n+1)^0,c
 19225  007F02  0E04               	movlw	4
 19226  007F04  6E14               	movwf	memcpy@n^0,c
 19227  007F06  ECE6  F048         	call	_memcpy	;wreg free
 19228                           
 19229                           ;keeloqDecrypt_MC50.c: 374:     commandType=validateRemoteSerialNumber(classic_data->ser
      +                          ialnumber,NO,&classic_data->positionMem);
 19230  007F0A  0100               	movlb	0	; () banked
 19231  007F0C  EE20 F004          	lfsr	2,4
 19232  007F10  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19233  007F12  26D9               	addwf	fsr2l,f,c
 19234  007F14  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19235  007F16  22DA               	addwfc	fsr2h,f,c
 19236  007F18  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 19237  007F1C  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 19238  007F20  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 19239  007F24  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 19240  007F28  0E00               	movlw	0
 19241  007F2A  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 19242  007F2C  0E0F               	movlw	15
 19243  007F2E  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19244  007F30  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 19245  007F32  0E00               	movlw	0
 19246  007F34  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19247  007F36  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 19248  007F38  ECE5  F02E         	call	_validateRemoteSerialNumber	;wreg free
 19249  007F3C  0100               	movlb	0	; () banked
 19250  007F3E  6FE4               	movwf	DecryptPacket_12BIT@commandType& (0+255),b
 19251                           
 19252                           ; BSR set to: 0
 19253                           ;keeloqDecrypt_MC50.c: 375:     classic_data->fcode1 = 0;
 19254  007F40  EE20 F00C          	lfsr	2,12
 19255  007F44  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19256  007F46  26D9               	addwf	fsr2l,f,c
 19257  007F48  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19258  007F4A  22DA               	addwfc	fsr2h,f,c
 19259  007F4C  0E00               	movlw	0
 19260  007F4E  6EDF               	movwf	indf2,c
 19261                           
 19262                           ; BSR set to: 0
 19263                           ;keeloqDecrypt_MC50.c: 376:     classic_data->sync = 0;
 19264  007F50  EE20 F008          	lfsr	2,8
 19265  007F54  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19266  007F56  26D9               	addwf	fsr2l,f,c
 19267  007F58  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19268  007F5A  22DA               	addwfc	fsr2h,f,c
 19269  007F5C  0E00               	movlw	0
 19270  007F5E  6EDE               	movwf	postinc2,c
 19271  007F60  0E00               	movlw	0
 19272  007F62  6EDD               	movwf	postdec2,c
 19273                           
 19274                           ; BSR set to: 0
 19275                           ;keeloqDecrypt_MC50.c: 377:     classic_data->type=DIP_12BIT;
 19276  007F64  EE20 F00E          	lfsr	2,14
 19277  007F68  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19278  007F6A  26D9               	addwf	fsr2l,f,c
 19279  007F6C  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19280  007F6E  22DA               	addwfc	fsr2h,f,c
 19281  007F70  0E02               	movlw	2
 19282  007F72  6EDF               	movwf	indf2,c
 19283                           
 19284                           ; BSR set to: 0
 19285                           ;keeloqDecrypt_MC50.c: 386:     return commandType;
 19286  007F74  51E4               	movf	DecryptPacket_12BIT@commandType& (0+255),w,b
 19287                           
 19288                           ; BSR set to: 0
 19289  007F76  0012               	return		;funcret
 19290  007F78                     __end_of_DecryptPacket_12BIT:
 19291                           	callstack 0
 19292                           
 19293 ;; *************** function _readInputs *****************
 19294 ;; Defined at:
 19295 ;;		line 528 in file "inputs_MC50.c"
 19296 ;; Parameters:    Size  Location     Type
 19297 ;;		None
 19298 ;; Auto vars:     Size  Location     Type
 19299 ;;		None
 19300 ;; Return value:  Size  Location     Type
 19301 ;;                  1    wreg      void 
 19302 ;; Registers used:
 19303 ;;		wreg, status,2, status,0
 19304 ;; Tracked objects:
 19305 ;;		On entry : 3E/0
 19306 ;;		On exit  : 3F/1
 19307 ;;		Unchanged: 0/0
 19308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19313 ;;Total ram usage:        0 bytes
 19314 ;; Hardware stack levels used: 1
 19315 ;; Hardware stack levels required when called: 4
 19316 ;; This function calls:
 19317 ;;		Nothing
 19318 ;; This function is called by:
 19319 ;;		_main
 19320 ;; This function uses a non-reentrant model
 19321 ;;
 19322                           
 19323                           	psect	text68
 19324  007168                     __ptext68:
 19325                           	callstack 0
 19326  007168                     _readInputs:
 19327                           	callstack 26
 19328                           
 19329                           ;inputs_MC50.c: 533:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoClose
      +                          AUX=PORTAbits.RA1;}
 19330                           
 19331                           ; BSR set to: 0
 19332                           ;incstack = 0
 19333  007168  0101               	movlb	1	; () banked
 19334  00716A  51C1               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 19335  00716C  A4D8               	btfss	status,2,c
 19336  00716E  D005               	goto	l24519
 19337                           
 19338                           ; BSR set to: 1
 19339  007170  0E00               	movlw	0
 19340  007172  B28D               	btfsc	141,1,c	;volatile
 19341  007174  0E01               	movlw	1
 19342  007176  6F39               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 19343  007178  D004               	goto	l24521
 19344  00717A                     l24519:
 19345                           
 19346                           ; BSR set to: 1
 19347  00717A  0E00               	movlw	0
 19348  00717C  B48D               	btfsc	141,2,c	;volatile
 19349  00717E  0E01               	movlw	1
 19350  007180  6F39               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 19351  007182                     l24521:
 19352                           
 19353                           ; BSR set to: 1
 19354                           ;inputs_MC50.c: 541:     if (fimdecurso.FimdeCursoCloseAUX==fimdecurso.FimdeCursoCloseOL
      +                          D)
 19355  007182  513A               	movf	(_fimdecurso+4)& (0+255),w,b	;volatile
 19356  007184  1939               	xorwf	(_fimdecurso+3)& (0+255),w,b	;volatile
 19357  007186  A4D8               	btfss	status,2,c
 19358  007188  D002               	goto	l1731
 19359                           
 19360                           ; BSR set to: 1
 19361                           ;inputs_MC50.c: 542:     {;inputs_MC50.c: 543:            fimdecurso.FimdeCursoCloseTime
      +                          r++;
 19362  00718A  2B3B               	incf	(_fimdecurso+5)& (0+255),f,b	;volatile
 19363                           
 19364                           ;inputs_MC50.c: 544:     }
 19365  00718C  D004               	goto	l1732
 19366  00718E                     l1731:
 19367                           
 19368                           ; BSR set to: 1
 19369                           ;inputs_MC50.c: 547:     {;inputs_MC50.c: 548:             fimdecurso.FimdeCursoCloseOLD
      +                           = fimdecurso.FimdeCursoCloseAUX;
 19370  00718E  C139  F13A         	movff	_fimdecurso+3,_fimdecurso+4	;volatile
 19371                           
 19372                           ; BSR set to: 1
 19373                           ;inputs_MC50.c: 549:             fimdecurso.FimdeCursoCloseTimer=0;
 19374  007192  0E00               	movlw	0
 19375  007194  6F3B               	movwf	(_fimdecurso+5)& (0+255),b	;volatile
 19376  007196                     l1732:
 19377                           
 19378                           ; BSR set to: 1
 19379                           ;inputs_MC50.c: 553:     if (fimdecurso.FimdeCursoCloseTimer>=( 50/50))
 19380  007196  513B               	movf	(_fimdecurso+5)& (0+255),w,b	;volatile
 19381  007198  A4D8               	btfss	status,2,c
 19382                           
 19383                           ; BSR set to: 1
 19384                           ;inputs_MC50.c: 554:     {;inputs_MC50.c: 555:         var_sys.FimCurso_CloseIsEnabled=f
      +                          imdecurso.FimdeCursoCloseAUX;
 19385  00719A  C139  F158         	movff	_fimdecurso+3,_var_sys+3	;volatile
 19386                           
 19387                           ; BSR set to: 1
 19388                           ;inputs_MC50.c: 564:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoOpenA
      +                          UX=PORTAbits.RA2;}
 19389  00719E  51C1               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 19390  0071A0  A4D8               	btfss	status,2,c
 19391  0071A2  D005               	goto	l24533
 19392                           
 19393                           ; BSR set to: 1
 19394  0071A4  0E00               	movlw	0
 19395  0071A6  B48D               	btfsc	141,2,c	;volatile
 19396  0071A8  0E01               	movlw	1
 19397  0071AA  6F36               	movwf	_fimdecurso& (0+255),b	;volatile
 19398  0071AC  D004               	goto	l24535
 19399  0071AE                     l24533:
 19400                           
 19401                           ; BSR set to: 1
 19402  0071AE  0E00               	movlw	0
 19403  0071B0  B28D               	btfsc	141,1,c	;volatile
 19404  0071B2  0E01               	movlw	1
 19405  0071B4  6F36               	movwf	_fimdecurso& (0+255),b	;volatile
 19406  0071B6                     l24535:
 19407                           
 19408                           ; BSR set to: 1
 19409                           ;inputs_MC50.c: 570:     if (fimdecurso.FimdeCursoOpenAUX==fimdecurso.FimdeCursoOpenOLD)
 19410  0071B6  5136               	movf	_fimdecurso& (0+255),w,b	;volatile
 19411  0071B8  1937               	xorwf	(_fimdecurso+1)& (0+255),w,b	;volatile
 19412  0071BA  A4D8               	btfss	status,2,c
 19413  0071BC  D002               	goto	l1736
 19414                           
 19415                           ; BSR set to: 1
 19416                           ;inputs_MC50.c: 571:     {;inputs_MC50.c: 572:            fimdecurso.FimdeCursoOpenTimer
      +                          ++;
 19417  0071BE  2B38               	incf	(_fimdecurso+2)& (0+255),f,b	;volatile
 19418                           
 19419                           ;inputs_MC50.c: 573:     }
 19420  0071C0  D004               	goto	l1737
 19421  0071C2                     l1736:
 19422                           
 19423                           ; BSR set to: 1
 19424                           ;inputs_MC50.c: 576:     {;inputs_MC50.c: 577:             fimdecurso.FimdeCursoOpenOLD 
      +                          = fimdecurso.FimdeCursoOpenAUX;
 19425  0071C2  C136  F137         	movff	_fimdecurso,_fimdecurso+1	;volatile
 19426                           
 19427                           ; BSR set to: 1
 19428                           ;inputs_MC50.c: 578:             fimdecurso.FimdeCursoOpenTimer=0;
 19429  0071C6  0E00               	movlw	0
 19430  0071C8  6F38               	movwf	(_fimdecurso+2)& (0+255),b	;volatile
 19431  0071CA                     l1737:
 19432                           
 19433                           ; BSR set to: 1
 19434                           ;inputs_MC50.c: 582:     if (fimdecurso.FimdeCursoOpenTimer>=( 50/50))
 19435  0071CA  5138               	movf	(_fimdecurso+2)& (0+255),w,b	;volatile
 19436  0071CC  A4D8               	btfss	status,2,c
 19437                           
 19438                           ; BSR set to: 1
 19439                           ;inputs_MC50.c: 583:     {;inputs_MC50.c: 584:         var_sys.FimCurso_OpenIsEnabled=fi
      +                          mdecurso.FimdeCursoOpenAUX;
 19440  0071CE  C136  F159         	movff	_fimdecurso,_var_sys+4	;volatile
 19441                           
 19442                           ; BSR set to: 1
 19443                           ;inputs_MC50.c: 589:     security.PhotoCellAUX=PORTAbits.RA4;
 19444  0071D2  0E00               	movlw	0
 19445  0071D4  B88D               	btfsc	141,4,c	;volatile
 19446  0071D6  0E01               	movlw	1
 19447  0071D8  6F2B               	movwf	_security& (0+255),b	;volatile
 19448                           
 19449                           ; BSR set to: 1
 19450                           ;inputs_MC50.c: 594:     if (security.PhotoCellAUX==security.PhotoCellOLD)
 19451  0071DA  512B               	movf	_security& (0+255),w,b	;volatile
 19452  0071DC  192C               	xorwf	(_security+1)& (0+255),w,b	;volatile
 19453  0071DE  A4D8               	btfss	status,2,c
 19454  0071E0  D002               	goto	l1739
 19455                           
 19456                           ; BSR set to: 1
 19457                           ;inputs_MC50.c: 595:     {;inputs_MC50.c: 596:            security.PhotoCellTimer++;
 19458  0071E2  2B2D               	incf	(_security+2)& (0+255),f,b	;volatile
 19459                           
 19460                           ;inputs_MC50.c: 597:     }
 19461  0071E4  D004               	goto	l1740
 19462  0071E6                     l1739:
 19463                           
 19464                           ; BSR set to: 1
 19465                           ;inputs_MC50.c: 600:     {;inputs_MC50.c: 601:             security.PhotoCellOLD = secur
      +                          ity.PhotoCellAUX;
 19466  0071E6  C12B  F12C         	movff	_security,_security+1	;volatile
 19467                           
 19468                           ; BSR set to: 1
 19469                           ;inputs_MC50.c: 602:             security.PhotoCellTimer=0;
 19470  0071EA  0E00               	movlw	0
 19471  0071EC  6F2D               	movwf	(_security+2)& (0+255),b	;volatile
 19472  0071EE                     l1740:
 19473                           
 19474                           ; BSR set to: 1
 19475                           ;inputs_MC50.c: 606:     if (security.PhotoCellTimer>=( 50/50))
 19476  0071EE  512D               	movf	(_security+2)& (0+255),w,b	;volatile
 19477  0071F0  A4D8               	btfss	status,2,c
 19478                           
 19479                           ; BSR set to: 1
 19480                           ;inputs_MC50.c: 607:     {;inputs_MC50.c: 608:         var_sys.photoCellIsObstructed=sec
      +                          urity.PhotoCellAUX;
 19481  0071F2  C12B  F156         	movff	_security,_var_sys+1	;volatile
 19482                           
 19483                           ; BSR set to: 1
 19484                           ;inputs_MC50.c: 612:     security.SecurityBarAUX=PORTAbits.RA5;
 19485  0071F6  0E00               	movlw	0
 19486  0071F8  BA8D               	btfsc	141,5,c	;volatile
 19487  0071FA  0E01               	movlw	1
 19488  0071FC  6F2E               	movwf	(_security+3)& (0+255),b	;volatile
 19489                           
 19490                           ; BSR set to: 1
 19491                           ;inputs_MC50.c: 616:     if (security.SecurityBarAUX==security.SecurityBarOLD)
 19492  0071FE  512F               	movf	(_security+4)& (0+255),w,b	;volatile
 19493  007200  192E               	xorwf	(_security+3)& (0+255),w,b	;volatile
 19494  007202  A4D8               	btfss	status,2,c
 19495  007204  D002               	goto	l1742
 19496                           
 19497                           ; BSR set to: 1
 19498                           ;inputs_MC50.c: 617:     {;inputs_MC50.c: 618:            security.SecurityBarTimer++;
 19499  007206  2B30               	incf	(_security+5)& (0+255),f,b	;volatile
 19500                           
 19501                           ;inputs_MC50.c: 619:     }
 19502  007208  D004               	goto	l1743
 19503  00720A                     l1742:
 19504                           
 19505                           ; BSR set to: 1
 19506                           ;inputs_MC50.c: 622:     {;inputs_MC50.c: 623:             security.SecurityBarOLD = sec
      +                          urity.SecurityBarAUX;
 19507  00720A  C12E  F12F         	movff	_security+3,_security+4	;volatile
 19508                           
 19509                           ; BSR set to: 1
 19510                           ;inputs_MC50.c: 624:             security.SecurityBarTimer=0;
 19511  00720E  0E00               	movlw	0
 19512  007210  6F30               	movwf	(_security+5)& (0+255),b	;volatile
 19513  007212                     l1743:
 19514                           
 19515                           ; BSR set to: 1
 19516                           ;inputs_MC50.c: 628:     if (security.SecurityBarTimer>=( 50/50))
 19517  007212  5130               	movf	(_security+5)& (0+255),w,b	;volatile
 19518  007214  A4D8               	btfss	status,2,c
 19519                           
 19520                           ; BSR set to: 1
 19521                           ;inputs_MC50.c: 629:     {;inputs_MC50.c: 630:         security.SecurityBarSTATE=securit
      +                          y.SecurityBarAUX;
 19522  007216  C12E  F131         	movff	_security+3,_security+6	;volatile
 19523                           
 19524                           ; BSR set to: 1
 19525                           ;inputs_MC50.c: 633:     security.SecurityBar8K2AUX=PORTAbits.RA6;
 19526  00721A  0E00               	movlw	0
 19527  00721C  BC8D               	btfsc	141,6,c	;volatile
 19528  00721E  0E01               	movlw	1
 19529  007220  6F32               	movwf	(_security+7)& (0+255),b	;volatile
 19530                           
 19531                           ; BSR set to: 1
 19532                           ;inputs_MC50.c: 637:     if (security.SecurityBar8K2AUX==security.SecurityBar8K2OLD)
 19533  007222  5133               	movf	(_security+8)& (0+255),w,b	;volatile
 19534  007224  1932               	xorwf	(_security+7)& (0+255),w,b	;volatile
 19535  007226  A4D8               	btfss	status,2,c
 19536  007228  D002               	goto	l1745
 19537                           
 19538                           ; BSR set to: 1
 19539                           ;inputs_MC50.c: 638:     {;inputs_MC50.c: 639:            security.SecurityBar8K2Timer++
      +                          ;
 19540  00722A  2B34               	incf	(_security+9)& (0+255),f,b	;volatile
 19541                           
 19542                           ;inputs_MC50.c: 640:     }
 19543  00722C  D004               	goto	l1746
 19544  00722E                     l1745:
 19545                           
 19546                           ; BSR set to: 1
 19547                           ;inputs_MC50.c: 643:     {;inputs_MC50.c: 644:             security.SecurityBar8K2OLD = 
      +                          security.SecurityBar8K2AUX;
 19548  00722E  C132  F133         	movff	_security+7,_security+8	;volatile
 19549                           
 19550                           ; BSR set to: 1
 19551                           ;inputs_MC50.c: 645:             security.SecurityBar8K2Timer=0;
 19552  007232  0E00               	movlw	0
 19553  007234  6F34               	movwf	(_security+9)& (0+255),b	;volatile
 19554  007236                     l1746:
 19555                           
 19556                           ; BSR set to: 1
 19557                           ;inputs_MC50.c: 649:     if (security.SecurityBar8K2Timer>=( 50/50))
 19558  007236  5134               	movf	(_security+9)& (0+255),w,b	;volatile
 19559  007238  A4D8               	btfss	status,2,c
 19560                           
 19561                           ; BSR set to: 1
 19562                           ;inputs_MC50.c: 650:     {;inputs_MC50.c: 651:         security.SecurityBar8K2STATE=secu
      +                          rity.SecurityBar8K2AUX;
 19563  00723A  C132  F135         	movff	_security+7,_security+10	;volatile
 19564                           
 19565                           ; BSR set to: 1
 19566                           ;inputs_MC50.c: 655:     if (var_sys_NVM.securityBandType == 0)
 19567  00723E  51B0               	movf	(_var_sys_NVM+10)& (0+255),w,b	;volatile
 19568  007240  A4D8               	btfss	status,2,c
 19569  007242  D00C               	goto	l1748
 19570                           
 19571                           ; BSR set to: 1
 19572                           ;inputs_MC50.c: 656:     {;inputs_MC50.c: 657:         if(security.SecurityBarSTATE==0 &
      +                          & security.SecurityBar8K2STATE==1)
 19573  007244  5131               	movf	(_security+6)& (0+255),w,b	;volatile
 19574  007246  A4D8               	btfss	status,2,c
 19575  007248  D006               	goto	l24581
 19576                           
 19577                           ; BSR set to: 1
 19578  00724A  0535               	decf	(_security+10)& (0+255),w,b	;volatile
 19579  00724C  A4D8               	btfss	status,2,c
 19580  00724E  D003               	goto	l24581
 19581                           
 19582                           ; BSR set to: 1
 19583                           ;inputs_MC50.c: 658:         {;inputs_MC50.c: 659:             var_sys.SecurityBarIsObst
      +                          ructed = NO;
 19584  007250  0E00               	movlw	0
 19585  007252  6F57               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19586                           
 19587                           ;inputs_MC50.c: 660:         }
 19588  007254  0012               	return	
 19589  007256                     l24581:
 19590                           
 19591                           ; BSR set to: 1
 19592                           ;inputs_MC50.c: 662:         {;inputs_MC50.c: 663:             var_sys.SecurityBarIsObst
      +                          ructed = YES;
 19593  007256  0E01               	movlw	1
 19594  007258  6F57               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19595  00725A  0012               	return	
 19596  00725C                     l1748:
 19597                           
 19598                           ; BSR set to: 1
 19599                           ;inputs_MC50.c: 667:     {;inputs_MC50.c: 668:         var_sys.SecurityBarIsObstructed =
      +                           security.SecurityBarSTATE;
 19600  00725C  C131  F157         	movff	_security+6,_var_sys+2	;volatile
 19601                           
 19602                           ; BSR set to: 1
 19603  007260  0012               	return		;funcret
 19604  007262                     __end_of_readInputs:
 19605                           	callstack 0
 19606                           
 19607 ;; *************** function _loadNVM_VarSystem *****************
 19608 ;; Defined at:
 19609 ;;		line 151 in file "controlMemory_MC50.c"
 19610 ;; Parameters:    Size  Location     Type
 19611 ;;		None
 19612 ;; Auto vars:     Size  Location     Type
 19613 ;;		None
 19614 ;; Return value:  Size  Location     Type
 19615 ;;                  1    wreg      void 
 19616 ;; Registers used:
 19617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19618 ;; Tracked objects:
 19619 ;;		On entry : 3F/0
 19620 ;;		On exit  : 0/0
 19621 ;;		Unchanged: 0/0
 19622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19627 ;;Total ram usage:        0 bytes
 19628 ;; Hardware stack levels used: 1
 19629 ;; Hardware stack levels required when called: 15
 19630 ;; This function calls:
 19631 ;;		_I2C1_Read1ByteRegister
 19632 ;;		_ResetDefaultMemory
 19633 ;;		_SaveNVM_VarSystem
 19634 ;;		_checkNVM_VarSystem
 19635 ;;		_i2c_readDataBlock
 19636 ;; This function is called by:
 19637 ;;		_main
 19638 ;; This function uses a non-reentrant model
 19639 ;;
 19640                           
 19641                           	psect	text69
 19642  0069BE                     __ptext69:
 19643                           	callstack 0
 19644  0069BE                     _loadNVM_VarSystem:
 19645                           	callstack 15
 19646                           
 19647                           ; BSR set to: 0
 19648                           ;controlMemory_MC50.c: 153:     if((I2C1_Read1ByteRegister(0x50, 0) == 0xFF) && (I2C1_Re
      +                          ad1ByteRegister(0x50, 16) == 0xFF))
 19649                           
 19650                           ; BSR set to: 1
 19651                           ;incstack = 0
 19652  0069BE  0E00               	movlw	0
 19653  0069C0  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19654  0069C2  0E50               	movlw	80
 19655  0069C4  EC16  F046         	call	_I2C1_Read1ByteRegister
 19656  0069C8  0AFF               	xorlw	255
 19657  0069CA  A4D8               	btfss	status,2,c
 19658  0069CC  D04C               	goto	l24385
 19659  0069CE  0E10               	movlw	16
 19660  0069D0  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19661  0069D2  0E50               	movlw	80
 19662  0069D4  EC16  F046         	call	_I2C1_Read1ByteRegister
 19663  0069D8  0AFF               	xorlw	255
 19664  0069DA  A4D8               	btfss	status,2,c
 19665  0069DC  D044               	goto	l24385
 19666                           
 19667                           ;controlMemory_MC50.c: 154:     {;controlMemory_MC50.c: 155:         ResetDefaultMemory(
      +                          SC);
 19668  0069DE  0E00               	movlw	0
 19669  0069E0  EC52  F031         	call	_ResetDefaultMemory
 19670                           
 19671                           ;controlMemory_MC50.c: 156:         var_sys_NVM.learningTimeToClose = 0;
 19672  0069E4  0E00               	movlw	0
 19673  0069E6  0101               	movlb	1	; () banked
 19674  0069E8  6FDE               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 19675  0069EA  0E00               	movlw	0
 19676  0069EC  6FDF               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 19677  0069EE  0E00               	movlw	0
 19678  0069F0  6FE0               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 19679  0069F2  0E00               	movlw	0
 19680  0069F4  6FE1               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 19681                           
 19682                           ; BSR set to: 1
 19683                           ;controlMemory_MC50.c: 157:         var_sys_NVM.learningTimeToOpen = 0;
 19684  0069F6  0E00               	movlw	0
 19685  0069F8  6FDA               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 19686  0069FA  0E00               	movlw	0
 19687  0069FC  6FDB               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 19688  0069FE  0E00               	movlw	0
 19689  006A00  6FDC               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 19690  006A02  0E00               	movlw	0
 19691  006A04  6FDD               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 19692                           
 19693                           ; BSR set to: 1
 19694                           ;controlMemory_MC50.c: 158:         var_sys_NVM.learningCurrentNormalClose = 0;
 19695  006A06  0E00               	movlw	0
 19696  006A08  6FD7               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 19697  006A0A  0E00               	movlw	0
 19698  006A0C  6FD6               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 19699                           
 19700                           ; BSR set to: 1
 19701                           ;controlMemory_MC50.c: 159:         var_sys_NVM.learningCurrentNormalOpen = 0;
 19702  006A0E  0E00               	movlw	0
 19703  006A10  6FD9               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 19704  006A12  0E00               	movlw	0
 19705  006A14  6FD8               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 19706                           
 19707                           ; BSR set to: 1
 19708                           ;controlMemory_MC50.c: 160:         var_sys_NVM.learningCurrentDecelarationClose = 0;
 19709  006A16  0E00               	movlw	0
 19710  006A18  6FCE               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 19711  006A1A  0E00               	movlw	0
 19712  006A1C  6FCF               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 19713  006A1E  0E00               	movlw	0
 19714  006A20  6FD0               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 19715  006A22  0E00               	movlw	0
 19716  006A24  6FD1               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 19717                           
 19718                           ; BSR set to: 1
 19719                           ;controlMemory_MC50.c: 161:         var_sys_NVM.learningCurrentDecelarationOpen = 0;
 19720  006A26  0E00               	movlw	0
 19721  006A28  6FD2               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 19722  006A2A  0E00               	movlw	0
 19723  006A2C  6FD3               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 19724  006A2E  0E00               	movlw	0
 19725  006A30  6FD4               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 19726  006A32  0E00               	movlw	0
 19727  006A34  6FD5               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 19728                           
 19729                           ;controlMemory_MC50.c: 162:         SaveNVM_VarSystem(pageMemoryLearningVars);
 19730  006A36  0E03               	movlw	3
 19731  006A38  EC7F  F048         	call	_SaveNVM_VarSystem
 19732                           
 19733                           ;controlMemory_MC50.c: 163:         var_sys_NVM.positionRemotesFull = 0;
 19734  006A3C  0E00               	movlw	0
 19735  006A3E  0101               	movlb	1	; () banked
 19736  006A40  6FC6               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
 19737                           
 19738                           ; BSR set to: 1
 19739                           ;controlMemory_MC50.c: 164:         var_sys_NVM.positionRemotesWalk = 0;
 19740  006A42  0E00               	movlw	0
 19741  006A44  6FC7               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
 19742                           
 19743                           ; BSR set to: 1
 19744                           ;controlMemory_MC50.c: 165:         var_sys_NVM.OnlyRollingCode = NO;
 19745  006A46  0E00               	movlw	0
 19746  006A48  6FCC               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
 19747                           
 19748                           ; BSR set to: 1
 19749                           ;controlMemory_MC50.c: 166:         var_sys_NVM.counterMoves = 0;
 19750  006A4A  0E00               	movlw	0
 19751  006A4C  6FC8               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 19752  006A4E  0E00               	movlw	0
 19753  006A50  6FC9               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 19754  006A52  0E00               	movlw	0
 19755  006A54  6FCA               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 19756  006A56  0E00               	movlw	0
 19757  006A58  6FCB               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 19758                           
 19759                           ;controlMemory_MC50.c: 167:        SaveNVM_VarSystem(pageMemoryCounters);
 19760  006A5A  0E02               	movlw	2
 19761  006A5C  EC7F  F048         	call	_SaveNVM_VarSystem
 19762                           
 19763                           ;controlMemory_MC50.c: 169:          var_sys_NVM.TypeofMotor = 0;
 19764  006A60  0E00               	movlw	0
 19765  006A62  0101               	movlb	1	; () banked
 19766  006A64  6FC2               	movwf	(_var_sys_NVM+28)& (0+255),b	;volatile
 19767  006A66                     l24385:
 19768                           
 19769                           ;controlMemory_MC50.c: 172:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryP * 16),(ch
      +                          ar*)&var_sys_NVM,16);
 19770  006A66  0E00               	movlw	0
 19771  006A68  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19772  006A6A  0E00               	movlw	0
 19773  006A6C  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19774  006A6E  0EA6               	movlw	low _var_sys_NVM
 19775  006A70  6E24               	movwf	i2c_readDataBlock@data^0,c
 19776  006A72  0E01               	movlw	high _var_sys_NVM
 19777  006A74  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 19778  006A76  0E00               	movlw	0
 19779  006A78  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19780  006A7A  0E10               	movlw	16
 19781  006A7C  6E26               	movwf	i2c_readDataBlock@len^0,c
 19782  006A7E  0E50               	movlw	80
 19783  006A80  EC8E  F042         	call	_i2c_readDataBlock
 19784                           
 19785                           ;controlMemory_MC50.c: 173:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryE * 16),(ch
      +                          ar*)&var_sys_NVM.homemPresente, 16);
 19786  006A84  0E00               	movlw	0
 19787  006A86  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19788  006A88  0E10               	movlw	16
 19789  006A8A  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19790  006A8C  0EB6               	movlw	low (_var_sys_NVM+16)
 19791  006A8E  6E24               	movwf	i2c_readDataBlock@data^0,c
 19792  006A90  0E01               	movlw	high (_var_sys_NVM+16)
 19793  006A92  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 19794  006A94  0E00               	movlw	0
 19795  006A96  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19796  006A98  0E10               	movlw	16
 19797  006A9A  6E26               	movwf	i2c_readDataBlock@len^0,c
 19798  006A9C  0E50               	movlw	80
 19799  006A9E  EC8E  F042         	call	_i2c_readDataBlock
 19800                           
 19801                           ;controlMemory_MC50.c: 174:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryCounters * 
      +                          16),(char*)&var_sys_NVM.positionRemotesFull,16);
 19802  006AA2  0E00               	movlw	0
 19803  006AA4  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19804  006AA6  0E20               	movlw	32
 19805  006AA8  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19806  006AAA  0EC6               	movlw	low (_var_sys_NVM+32)
 19807  006AAC  6E24               	movwf	i2c_readDataBlock@data^0,c
 19808  006AAE  0E01               	movlw	high (_var_sys_NVM+32)
 19809  006AB0  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 19810  006AB2  0E00               	movlw	0
 19811  006AB4  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19812  006AB6  0E10               	movlw	16
 19813  006AB8  6E26               	movwf	i2c_readDataBlock@len^0,c
 19814  006ABA  0E50               	movlw	80
 19815  006ABC  EC8E  F042         	call	_i2c_readDataBlock
 19816                           
 19817                           ;controlMemory_MC50.c: 175:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryLearningVar
      +                          s * 16),(char*)&var_sys_NVM.learningCurrentNormalClose, 16);
 19818  006AC0  0E00               	movlw	0
 19819  006AC2  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19820  006AC4  0E30               	movlw	48
 19821  006AC6  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19822  006AC8  0ED6               	movlw	low (_var_sys_NVM+48)
 19823  006ACA  6E24               	movwf	i2c_readDataBlock@data^0,c
 19824  006ACC  0E01               	movlw	high (_var_sys_NVM+48)
 19825  006ACE  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 19826  006AD0  0E00               	movlw	0
 19827  006AD2  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19828  006AD4  0E10               	movlw	16
 19829  006AD6  6E26               	movwf	i2c_readDataBlock@len^0,c
 19830  006AD8  0E50               	movlw	80
 19831  006ADA  EC8E  F042         	call	_i2c_readDataBlock
 19832                           
 19833                           ;controlMemory_MC50.c: 178:     checkNVM_VarSystem();
 19834  006ADE  EC1C  F02B         	call	_checkNVM_VarSystem	;wreg free
 19835                           
 19836                           ;controlMemory_MC50.c: 180:     var_sys.actualCounterMoves=var_sys_NVM.counterMoves;
 19837  006AE2  C1C8  F191         	movff	_var_sys_NVM+34,_var_sys+60	;volatile
 19838  006AE6  C1C9  F192         	movff	_var_sys_NVM+35,_var_sys+61	;volatile
 19839  006AEA  C1CA  F193         	movff	_var_sys_NVM+36,_var_sys+62	;volatile
 19840  006AEE  C1CB  F194         	movff	_var_sys_NVM+37,_var_sys+63	;volatile
 19841  006AF2  0012               	return		;funcret
 19842  006AF4                     __end_of_loadNVM_VarSystem:
 19843                           	callstack 0
 19844                           
 19845 ;; *************** function _checkNVM_VarSystem *****************
 19846 ;; Defined at:
 19847 ;;		line 326 in file "controlMemory_MC50.c"
 19848 ;; Parameters:    Size  Location     Type
 19849 ;;		None
 19850 ;; Auto vars:     Size  Location     Type
 19851 ;;  saveParam       1    5[BANK0 ] unsigned char 
 19852 ;; Return value:  Size  Location     Type
 19853 ;;                  1    wreg      void 
 19854 ;; Registers used:
 19855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19856 ;; Tracked objects:
 19857 ;;		On entry : 0/2
 19858 ;;		On exit  : 0/0
 19859 ;;		Unchanged: 0/0
 19860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19862 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19864 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19865 ;;Total ram usage:        1 bytes
 19866 ;; Hardware stack levels used: 1
 19867 ;; Hardware stack levels required when called: 14
 19868 ;; This function calls:
 19869 ;;		_SaveNVM_VarSystem
 19870 ;; This function is called by:
 19871 ;;		_loadNVM_VarSystem
 19872 ;; This function uses a non-reentrant model
 19873 ;;
 19874                           
 19875                           	psect	text70
 19876  005638                     __ptext70:
 19877                           	callstack 0
 19878  005638                     _checkNVM_VarSystem:
 19879                           	callstack 15
 19880                           
 19881                           ;controlMemory_MC50.c: 328:     char saveParam;;controlMemory_MC50.c: 331:     saveParam
      +                           = 0;
 19882                           
 19883                           ;incstack = 0
 19884  005638  0E00               	movlw	0
 19885  00563A  0100               	movlb	0	; () banked
 19886  00563C  6FDD               	movwf	checkNVM_VarSystem@saveParam& (0+255),b
 19887                           
 19888                           ; BSR set to: 0
 19889                           ;controlMemory_MC50.c: 339:     if ( var_sys_NVM.decelarationOpen>45 )
 19890  00563E  0E2D               	movlw	45
 19891  005640  0101               	movlb	1	; () banked
 19892  005642  65A6               	cpfsgt	_var_sys_NVM& (0+255),b	;volatile
 19893  005644  D005               	goto	l22573
 19894                           
 19895                           ; BSR set to: 1
 19896                           ;controlMemory_MC50.c: 340:     {;controlMemory_MC50.c: 342:         var_sys_NVM.decelar
      +                          ationOpen = 3;
 19897  005646  0E03               	movlw	3
 19898  005648  6FA6               	movwf	_var_sys_NVM& (0+255),b	;volatile
 19899                           
 19900                           ;controlMemory_MC50.c: 343:         saveParam=1;
 19901  00564A  0E01               	movlw	1
 19902  00564C  0100               	movlb	0	; () banked
 19903  00564E  6FDD               	movwf	checkNVM_VarSystem@saveParam& (0+255),b
 19904  005650                     l22573:
 19905                           
 19906                           ;controlMemory_MC50.c: 346:     if ( var_sys_NVM.decelarationClose>45 )
 19907  005650  0E2D               	movlw	45
 19908  005652  0101               	movlb	1	; () banked
 19909  005654  65A7               	cpfsgt	(_var_sys_NVM+1)& (0+255),b	;volatile
 19910  005656  D005               	goto	l1495
 19911                           
 19912                           ; BSR set to: 1
 19913                           ;controlMemory_MC50.c: 347:     {;controlMemory_MC50.c: 349:         var_sys_NVM.decelar
      +                          ationClose = 3;
 19914  005658  0E03               	movlw	3
 19915  00565A  6FA7               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 19916                           
 19917                           ;controlMemory_MC50.c: 350:         saveParam=1;
 19918  00565C  0E01               	movlw	1
 19919  00565E  0100               	movlb	0	; () banked
 19920  005660  6FDD               	movwf	checkNVM_VarSystem@saveParam& (0+255),b
 19921  005662                     l1495:
 19922                           
 19923                           ;controlMemory_MC50.c: 353:     if ( (var_sys_NVM.motorPower<1) || (var_sys_NVM.motorPow
      +                          er>9) )
 19924  005662  0101               	movlb	1	; () banked
 19925  005664  51A8               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 19926  005666  B4D8               	btfsc	status,2,c
 19927  005668  D003               	goto	u26460
 19928                           
 19929                           ; BSR set to: 1
 19930  00566A  0E09               	movlw	9
 19931  00566C  65A8               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 19932  00566E  D005               	goto	l22581
 19933  005670                     u26460:
 19934                           
 19935                           ; BSR set to: 1
 19936                           ;controlMemory_MC50.c: 354:     {;controlMemory_MC50.c: 356:         var_sys_NVM.motorPo
      +                          wer = 9;
 19937  005670  0E09               	movlw	9
 19938  005672  6FA8               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 19939                           
 19940                           ;controlMemory_MC50.c: 357:         saveParam=1;
 19941  005674  0E01               	movlw	1
 19942  005676  0100               	movlb	0	; () banked
 19943  005678  6FDD               	movwf	checkNVM_VarSystem@saveParam& (0+255),b
 19944  00567A                     l22581:
 19945                           
 19946                           ;controlMemory_MC50.c: 360:     if ( var_sys_NVM.motorSensitivity>9 )
 19947  00567A  0E09               	movlw	9
 19948  00567C  0101               	movlb	1	; () banked
 19949  00567E  65A9               	cpfsgt	(_var_sys_NVM+3)& (0+255),b	;volatile
 19950  005680  D005               	goto	l22585
 19951                           
 19952                           ; BSR set to: 1
 19953                           ;controlMemory_MC50.c: 361:     {;controlMemory_MC50.c: 363:         var_sys_NVM.motorSe
      +                          nsitivity = 0;
 19954  005682  0E00               	movlw	0
 19955  005684  6FA9               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 19956                           
 19957                           ;controlMemory_MC50.c: 364:         saveParam=1;
 19958  005686  0E01               	movlw	1
 19959  005688  0100               	movlb	0	; () banked
 19960  00568A  6FDD               	movwf	checkNVM_VarSystem@saveParam& (0+255),b
 19961  00568C                     l22585:
 19962                           
 19963                           ;controlMemory_MC50.c: 367:     if ( var_sys_NVM.walkTime>99 )
 19964  00568C  0E63               	movlw	99
 19965  00568E  0101               	movlb	1	; () banked
 19966  005690  65AA               	cpfsgt	(_var_sys_NVM+4)& (0+255),b	;volatile
 19967  005692  D005               	goto	l22589
 19968                           
 19969                           ; BSR set to: 1
 19970                           ;controlMemory_MC50.c: 368:     {;controlMemory_MC50.c: 370:         var_sys_NVM.walkTim
      +                          e = 10;
 19971  005694  0E0A               	movlw	10
 19972  005696  6FAA               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 19973                           
 19974                           ;controlMemory_MC50.c: 371:         saveParam=1;
 19975  005698  0E01               	movlw	1
 19976  00569A  0100               	movlb	0	; () banked
 19977  00569C  6FDD               	movwf	checkNVM_VarSystem@saveParam& (0+255),b
 19978  00569E                     l22589:
 19979                           
 19980                           ;controlMemory_MC50.c: 374:     if ( var_sys_NVM.autoTimeFullClose>99 )
 19981  00569E  0E63               	movlw	99
 19982  0056A0  0101               	movlb	1	; () banked
 19983  0056A2  65AB               	cpfsgt	(_var_sys_NVM+5)& (0+255),b	;volatile
 19984  0056A4  D005               	goto	l22593
 19985                           
 19986                           ; BSR set to: 1
 19987                           ;controlMemory_MC50.c: 375:     {;controlMemory_MC50.c: 377:         var_sys_NVM.autoTim
      +                          eFullClose = 0;
 19988  0056A6  0E00               	movlw	0
 19989  0056A8  6FAB               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 19990                           
 19991                           ;controlMemory_MC50.c: 378:         saveParam=1;
 19992  0056AA  0E01               	movlw	1
 19993  0056AC  0100               	movlb	0	; () banked
 19994  0056AE  6FDD               	movwf	checkNVM_VarSystem@saveParam& (0+255),b
 19995  0056B0                     l22593:
 19996                           
 19997                           ;controlMemory_MC50.c: 381:     if ( var_sys_NVM.autoTimeWalkClose>99 )
 19998  0056B0  0E63               	movlw	99
 19999  0056B2  0101               	movlb	1	; () banked
 20000  0056B4  65AC               	cpfsgt	(_var_sys_NVM+6)& (0+255),b	;volatile
 20001  0056B6  D005               	goto	l22597
 20002                           
 20003                           ; BSR set to: 1
 20004                           ;controlMemory_MC50.c: 382:     {;controlMemory_MC50.c: 384:         var_sys_NVM.autoTim
      +                          eWalkClose = 0;
 20005  0056B8  0E00               	movlw	0
 20006  0056BA  6FAC               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20007                           
 20008                           ;controlMemory_MC50.c: 385:         saveParam=1;
 20009  0056BC  0E01               	movlw	1
 20010  0056BE  0100               	movlb	0	; () banked
 20011  0056C0  6FDD               	movwf	checkNVM_VarSystem@saveParam& (0+255),b
 20012  0056C2                     l22597:
 20013                           
 20014                           ;controlMemory_MC50.c: 388:     if ( var_sys_NVM.photoCellIsON>1 )
 20015  0056C2  0E01               	movlw	1
 20016  0056C4  0101               	movlb	1	; () banked
 20017  0056C6  65AD               	cpfsgt	(_var_sys_NVM+7)& (0+255),b	;volatile
 20018  0056C8  D005               	goto	l22601
 20019                           
 20020                           ; BSR set to: 1
 20021                           ;controlMemory_MC50.c: 389:     {;controlMemory_MC50.c: 391:         var_sys_NVM.photoCe
      +                          llIsON = 0;
 20022  0056CA  0E00               	movlw	0
 20023  0056CC  6FAD               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 20024                           
 20025                           ;controlMemory_MC50.c: 392:         saveParam=1;
 20026  0056CE  0E01               	movlw	1
 20027  0056D0  0100               	movlb	0	; () banked
 20028  0056D2  6FDD               	movwf	checkNVM_VarSystem@saveParam& (0+255),b
 20029  0056D4                     l22601:
 20030                           
 20031                           ;controlMemory_MC50.c: 395:     if ( var_sys_NVM.photoCellInOpen>1 )
 20032  0056D4  0E01               	movlw	1
 20033  0056D6  0101               	movlb	1	; () banked
 20034  0056D8  65AE               	cpfsgt	(_var_sys_NVM+8)& (0+255),b	;volatile
 20035  0056DA  D005               	goto	l22605
 20036                           
 20037                           ; BSR set to: 1
 20038                           ;controlMemory_MC50.c: 396:     {;controlMemory_MC50.c: 398:         var_sys_NVM.photoCe
      +                          llInOpen = 0;
 20039  0056DC  0E00               	movlw	0
 20040  0056DE  6FAE               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 20041                           
 20042                           ;controlMemory_MC50.c: 399:         saveParam=1;
 20043  0056E0  0E01               	movlw	1
 20044  0056E2  0100               	movlb	0	; () banked
 20045  0056E4  6FDD               	movwf	checkNVM_VarSystem@saveParam& (0+255),b
 20046  0056E6                     l22605:
 20047                           
 20048                           ;controlMemory_MC50.c: 402:     if ( var_sys_NVM.securityBandIsON>1 )
 20049  0056E6  0E01               	movlw	1
 20050  0056E8  0101               	movlb	1	; () banked
 20051  0056EA  65AF               	cpfsgt	(_var_sys_NVM+9)& (0+255),b	;volatile
 20052  0056EC  D005               	goto	l22609
 20053                           
 20054                           ; BSR set to: 1
 20055                           ;controlMemory_MC50.c: 403:     {;controlMemory_MC50.c: 405:         var_sys_NVM.securit
      +                          yBandIsON = 0 ;
 20056  0056EE  0E00               	movlw	0
 20057  0056F0  6FAF               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 20058                           
 20059                           ;controlMemory_MC50.c: 406:         saveParam=1;
 20060  0056F2  0E01               	movlw	1
 20061  0056F4  0100               	movlb	0	; () banked
 20062  0056F6  6FDD               	movwf	checkNVM_VarSystem@saveParam& (0+255),b
 20063  0056F8                     l22609:
 20064                           
 20065                           ;controlMemory_MC50.c: 409:     if ( var_sys_NVM.securityBandType>1 )
 20066  0056F8  0E01               	movlw	1
 20067  0056FA  0101               	movlb	1	; () banked
 20068  0056FC  65B0               	cpfsgt	(_var_sys_NVM+10)& (0+255),b	;volatile
 20069  0056FE  D005               	goto	l22613
 20070                           
 20071                           ; BSR set to: 1
 20072                           ;controlMemory_MC50.c: 410:     {;controlMemory_MC50.c: 412:         var_sys_NVM.securit
      +                          yBandType = 1;
 20073  005700  0E01               	movlw	1
 20074  005702  6FB0               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 20075                           
 20076                           ;controlMemory_MC50.c: 413:         saveParam=1;
 20077  005704  0E01               	movlw	1
 20078  005706  0100               	movlb	0	; () banked
 20079  005708  6FDD               	movwf	checkNVM_VarSystem@saveParam& (0+255),b
 20080  00570A                     l22613:
 20081                           
 20082                           ;controlMemory_MC50.c: 416:     if ( var_sys_NVM.securityBandInOpen>1 )
 20083  00570A  0E01               	movlw	1
 20084  00570C  0101               	movlb	1	; () banked
 20085  00570E  65B1               	cpfsgt	(_var_sys_NVM+11)& (0+255),b	;volatile
 20086  005710  D005               	goto	l22617
 20087                           
 20088                           ; BSR set to: 1
 20089                           ;controlMemory_MC50.c: 417:     {;controlMemory_MC50.c: 419:         var_sys_NVM.securit
      +                          yBandInOpen = 0;
 20090  005712  0E00               	movlw	0
 20091  005714  6FB1               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 20092                           
 20093                           ;controlMemory_MC50.c: 420:         saveParam=1;
 20094  005716  0E01               	movlw	1
 20095  005718  0100               	movlb	0	; () banked
 20096  00571A  6FDD               	movwf	checkNVM_VarSystem@saveParam& (0+255),b
 20097  00571C                     l22617:
 20098                           
 20099                           ;controlMemory_MC50.c: 423:     if ( var_sys_NVM.operationMode>2 )
 20100  00571C  0E02               	movlw	2
 20101  00571E  0101               	movlb	1	; () banked
 20102  005720  65B2               	cpfsgt	(_var_sys_NVM+12)& (0+255),b	;volatile
 20103  005722  D005               	goto	l22621
 20104                           
 20105                           ; BSR set to: 1
 20106                           ;controlMemory_MC50.c: 424:     {;controlMemory_MC50.c: 426:         var_sys_NVM.operati
      +                          onMode = 0;
 20107  005724  0E00               	movlw	0
 20108  005726  6FB2               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20109                           
 20110                           ;controlMemory_MC50.c: 427:         saveParam=1;
 20111  005728  0E01               	movlw	1
 20112  00572A  0100               	movlb	0	; () banked
 20113  00572C  6FDD               	movwf	checkNVM_VarSystem@saveParam& (0+255),b
 20114  00572E                     l22621:
 20115                           
 20116                           ;controlMemory_MC50.c: 430:     if ( var_sys_NVM.flashLightMode>3 )
 20117  00572E  0E03               	movlw	3
 20118  005730  0101               	movlb	1	; () banked
 20119  005732  65B3               	cpfsgt	(_var_sys_NVM+13)& (0+255),b	;volatile
 20120  005734  D005               	goto	l22625
 20121                           
 20122                           ; BSR set to: 1
 20123                           ;controlMemory_MC50.c: 431:     {;controlMemory_MC50.c: 433:         var_sys_NVM.flashLi
      +                          ghtMode = 0;
 20124  005736  0E00               	movlw	0
 20125  005738  6FB3               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 20126                           
 20127                           ;controlMemory_MC50.c: 434:         saveParam=1;
 20128  00573A  0E01               	movlw	1
 20129  00573C  0100               	movlb	0	; () banked
 20130  00573E  6FDD               	movwf	checkNVM_VarSystem@saveParam& (0+255),b
 20131  005740                     l22625:
 20132                           
 20133                           ;controlMemory_MC50.c: 437:     if ( var_sys_NVM.programmingDistance>1 )
 20134  005740  0E01               	movlw	1
 20135  005742  0101               	movlb	1	; () banked
 20136  005744  65B4               	cpfsgt	(_var_sys_NVM+14)& (0+255),b	;volatile
 20137  005746  D005               	goto	l22629
 20138                           
 20139                           ; BSR set to: 1
 20140                           ;controlMemory_MC50.c: 438:     {;controlMemory_MC50.c: 440:         var_sys_NVM.program
      +                          mingDistance = 0;
 20141  005748  0E00               	movlw	0
 20142  00574A  6FB4               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 20143                           
 20144                           ;controlMemory_MC50.c: 441:         saveParam=1;
 20145  00574C  0E01               	movlw	1
 20146  00574E  0100               	movlb	0	; () banked
 20147  005750  6FDD               	movwf	checkNVM_VarSystem@saveParam& (0+255),b
 20148  005752                     l22629:
 20149                           
 20150                           ;controlMemory_MC50.c: 444:     if ( var_sys_NVM.decelarationSensivity>9 )
 20151  005752  0E09               	movlw	9
 20152  005754  0101               	movlb	1	; () banked
 20153  005756  65B5               	cpfsgt	(_var_sys_NVM+15)& (0+255),b	;volatile
 20154  005758  D005               	goto	l22633
 20155                           
 20156                           ; BSR set to: 1
 20157                           ;controlMemory_MC50.c: 445:     {;controlMemory_MC50.c: 447:         var_sys_NVM.decelar
      +                          ationSensivity = 0;
 20158  00575A  0E00               	movlw	0
 20159  00575C  6FB5               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 20160                           
 20161                           ;controlMemory_MC50.c: 448:         saveParam=1;
 20162  00575E  0E01               	movlw	1
 20163  005760  0100               	movlb	0	; () banked
 20164  005762  6FDD               	movwf	checkNVM_VarSystem@saveParam& (0+255),b
 20165  005764                     l22633:
 20166                           
 20167                           ;controlMemory_MC50.c: 453:     if ( var_sys_NVM.homemPresente>2 )
 20168  005764  0E02               	movlw	2
 20169  005766  0101               	movlb	1	; () banked
 20170  005768  65B6               	cpfsgt	(_var_sys_NVM+16)& (0+255),b	;volatile
 20171  00576A  D005               	goto	l22637
 20172                           
 20173                           ; BSR set to: 1
 20174                           ;controlMemory_MC50.c: 454:     {;controlMemory_MC50.c: 456:         var_sys_NVM.homemPr
      +                          esente = 0;
 20175  00576C  0E00               	movlw	0
 20176  00576E  6FB6               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 20177                           
 20178                           ;controlMemory_MC50.c: 457:         saveParam=1;
 20179  005770  0E01               	movlw	1
 20180  005772  0100               	movlb	0	; () banked
 20181  005774  6FDD               	movwf	checkNVM_VarSystem@saveParam& (0+255),b
 20182  005776                     l22637:
 20183                           
 20184                           ;controlMemory_MC50.c: 460:     if ( var_sys_NVM.logicDigital>1 )
 20185  005776  0E01               	movlw	1
 20186  005778  0101               	movlb	1	; () banked
 20187  00577A  65B7               	cpfsgt	(_var_sys_NVM+17)& (0+255),b	;volatile
 20188  00577C  D005               	goto	l22641
 20189                           
 20190                           ; BSR set to: 1
 20191                           ;controlMemory_MC50.c: 461:     {;controlMemory_MC50.c: 463:         var_sys_NVM.logicDi
      +                          gital = 0;
 20192  00577E  0E00               	movlw	0
 20193  005780  6FB7               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20194                           
 20195                           ;controlMemory_MC50.c: 464:         saveParam=1;
 20196  005782  0E01               	movlw	1
 20197  005784  0100               	movlb	0	; () banked
 20198  005786  6FDD               	movwf	checkNVM_VarSystem@saveParam& (0+255),b
 20199  005788                     l22641:
 20200                           
 20201                           ;controlMemory_MC50.c: 467:     if ( var_sys_NVM.softStart>9 )
 20202  005788  0E09               	movlw	9
 20203  00578A  0101               	movlb	1	; () banked
 20204  00578C  65B8               	cpfsgt	(_var_sys_NVM+18)& (0+255),b	;volatile
 20205  00578E  D005               	goto	l22645
 20206                           
 20207                           ; BSR set to: 1
 20208                           ;controlMemory_MC50.c: 468:     {;controlMemory_MC50.c: 470:         var_sys_NVM.softSta
      +                          rt = 0;
 20209  005790  0E00               	movlw	0
 20210  005792  6FB8               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20211                           
 20212                           ;controlMemory_MC50.c: 471:         saveParam=1;
 20213  005794  0E01               	movlw	1
 20214  005796  0100               	movlb	0	; () banked
 20215  005798  6FDD               	movwf	checkNVM_VarSystem@saveParam& (0+255),b
 20216  00579A                     l22645:
 20217                           
 20218                           ;controlMemory_MC50.c: 475:     if ( var_sys_NVM.ligthTime>99 )
 20219  00579A  0E63               	movlw	99
 20220  00579C  0101               	movlb	1	; () banked
 20221  00579E  65BA               	cpfsgt	(_var_sys_NVM+20)& (0+255),b	;volatile
 20222  0057A0  D005               	goto	l22649
 20223                           
 20224                           ; BSR set to: 1
 20225                           ;controlMemory_MC50.c: 476:     {;controlMemory_MC50.c: 478:         var_sys_NVM.ligthTi
      +                          me = 3;
 20226  0057A2  0E03               	movlw	3
 20227  0057A4  6FBA               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 20228                           
 20229                           ;controlMemory_MC50.c: 479:         saveParam=1;
 20230  0057A6  0E01               	movlw	1
 20231  0057A8  0100               	movlb	0	; () banked
 20232  0057AA  6FDD               	movwf	checkNVM_VarSystem@saveParam& (0+255),b
 20233  0057AC                     l22649:
 20234                           
 20235                           ;controlMemory_MC50.c: 482:     if ( var_sys_NVM.folow_me>9 )
 20236  0057AC  0E09               	movlw	9
 20237  0057AE  0101               	movlb	1	; () banked
 20238  0057B0  65BB               	cpfsgt	(_var_sys_NVM+21)& (0+255),b	;volatile
 20239  0057B2  D005               	goto	l22653
 20240                           
 20241                           ; BSR set to: 1
 20242                           ;controlMemory_MC50.c: 483:     {;controlMemory_MC50.c: 485:         var_sys_NVM.folow_m
      +                          e = 0;
 20243  0057B4  0E00               	movlw	0
 20244  0057B6  6FBB               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 20245                           
 20246                           ;controlMemory_MC50.c: 486:         saveParam=1;
 20247  0057B8  0E01               	movlw	1
 20248  0057BA  0100               	movlb	0	; () banked
 20249  0057BC  6FDD               	movwf	checkNVM_VarSystem@saveParam& (0+255),b
 20250  0057BE                     l22653:
 20251                           
 20252                           ;controlMemory_MC50.c: 491:     if ( var_sys_NVM.electricBrake>1 )
 20253  0057BE  0E01               	movlw	1
 20254  0057C0  0101               	movlb	1	; () banked
 20255  0057C2  65BD               	cpfsgt	(_var_sys_NVM+23)& (0+255),b	;volatile
 20256  0057C4  D005               	goto	l1517
 20257                           
 20258                           ; BSR set to: 1
 20259                           ;controlMemory_MC50.c: 492:     {;controlMemory_MC50.c: 494:         var_sys_NVM.electri
      +                          cBrake = 0;
 20260  0057C6  0E00               	movlw	0
 20261  0057C8  6FBD               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 20262                           
 20263                           ;controlMemory_MC50.c: 495:         saveParam=1;
 20264  0057CA  0E01               	movlw	1
 20265  0057CC  0100               	movlb	0	; () banked
 20266  0057CE  6FDD               	movwf	checkNVM_VarSystem@saveParam& (0+255),b
 20267  0057D0                     l1517:
 20268                           
 20269                           ;controlMemory_MC50.c: 498:     if ( (var_sys_NVM.velocityDecelaration<1) || (var_sys_NV
      +                          M.velocityDecelaration>9) )
 20270  0057D0  0101               	movlb	1	; () banked
 20271  0057D2  51BE               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 20272  0057D4  B4D8               	btfsc	status,2,c
 20273  0057D6  D003               	goto	u26670
 20274                           
 20275                           ; BSR set to: 1
 20276  0057D8  0E09               	movlw	9
 20277  0057DA  65BE               	cpfsgt	(_var_sys_NVM+24)& (0+255),b	;volatile
 20278  0057DC  D005               	goto	l22661
 20279  0057DE                     u26670:
 20280                           
 20281                           ; BSR set to: 1
 20282                           ;controlMemory_MC50.c: 499:     {;controlMemory_MC50.c: 501:         var_sys_NVM.velocit
      +                          yDecelaration = 5;
 20283  0057DE  0E05               	movlw	5
 20284  0057E0  6FBE               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20285                           
 20286                           ;controlMemory_MC50.c: 502:         saveParam=1;
 20287  0057E2  0E01               	movlw	1
 20288  0057E4  0100               	movlb	0	; () banked
 20289  0057E6  6FDD               	movwf	checkNVM_VarSystem@saveParam& (0+255),b
 20290  0057E8                     l22661:
 20291                           
 20292                           ;controlMemory_MC50.c: 505:     if ( var_sys_NVM.flashRGBMode>3 )
 20293  0057E8  0E03               	movlw	3
 20294  0057EA  0101               	movlb	1	; () banked
 20295  0057EC  65BF               	cpfsgt	(_var_sys_NVM+25)& (0+255),b	;volatile
 20296  0057EE  D005               	goto	l22665
 20297                           
 20298                           ; BSR set to: 1
 20299                           ;controlMemory_MC50.c: 506:     {;controlMemory_MC50.c: 508:         var_sys_NVM.flashRG
      +                          BMode = 3;
 20300  0057F0  0E03               	movlw	3
 20301  0057F2  6FBF               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20302                           
 20303                           ;controlMemory_MC50.c: 509:         saveParam=1;
 20304  0057F4  0E01               	movlw	1
 20305  0057F6  0100               	movlb	0	; () banked
 20306  0057F8  6FDD               	movwf	checkNVM_VarSystem@saveParam& (0+255),b
 20307  0057FA                     l22665:
 20308                           
 20309                           ;controlMemory_MC50.c: 511:         if ( var_sys_NVM.Stopboton > 1 )
 20310  0057FA  0E01               	movlw	1
 20311  0057FC  0101               	movlb	1	; () banked
 20312  0057FE  65BC               	cpfsgt	(_var_sys_NVM+22)& (0+255),b	;volatile
 20313  005800  D005               	goto	l22669
 20314                           
 20315                           ; BSR set to: 1
 20316                           ;controlMemory_MC50.c: 512:     {;controlMemory_MC50.c: 514:         var_sys_NVM.Stopbot
      +                          on = 0 ;
 20317  005802  0E00               	movlw	0
 20318  005804  6FBC               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20319                           
 20320                           ;controlMemory_MC50.c: 515:         saveParam=1;
 20321  005806  0E01               	movlw	1
 20322  005808  0100               	movlb	0	; () banked
 20323  00580A  6FDD               	movwf	checkNVM_VarSystem@saveParam& (0+255),b
 20324  00580C                     l22669:
 20325                           
 20326                           ;controlMemory_MC50.c: 517:         if ( var_sys_NVM.Direction_motor>1 )
 20327  00580C  0E01               	movlw	1
 20328  00580E  0101               	movlb	1	; () banked
 20329  005810  65C1               	cpfsgt	(_var_sys_NVM+27)& (0+255),b	;volatile
 20330  005812  D005               	goto	l22673
 20331                           
 20332                           ; BSR set to: 1
 20333                           ;controlMemory_MC50.c: 518:     {;controlMemory_MC50.c: 520:         var_sys_NVM.Directi
      +                          on_motor = 1;
 20334  005814  0E01               	movlw	1
 20335  005816  6FC1               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20336                           
 20337                           ;controlMemory_MC50.c: 521:         saveParam=1;
 20338  005818  0E01               	movlw	1
 20339  00581A  0100               	movlb	0	; () banked
 20340  00581C  6FDD               	movwf	checkNVM_VarSystem@saveParam& (0+255),b
 20341  00581E                     l22673:
 20342                           
 20343                           ;controlMemory_MC50.c: 523:         if ( var_sys_NVM.softstop>9 )
 20344  00581E  0E09               	movlw	9
 20345  005820  0101               	movlb	1	; () banked
 20346  005822  65B9               	cpfsgt	(_var_sys_NVM+19)& (0+255),b	;volatile
 20347  005824  D005               	goto	l1524
 20348                           
 20349                           ; BSR set to: 1
 20350                           ;controlMemory_MC50.c: 524:     {;controlMemory_MC50.c: 526:         var_sys_NVM.softsto
      +                          p = 0;
 20351  005826  0E00               	movlw	0
 20352  005828  6FB9               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20353                           
 20354                           ;controlMemory_MC50.c: 527:         saveParam=1;
 20355  00582A  0E01               	movlw	1
 20356  00582C  0100               	movlb	0	; () banked
 20357  00582E  6FDD               	movwf	checkNVM_VarSystem@saveParam& (0+255),b
 20358  005830                     l1524:
 20359                           
 20360                           ;controlMemory_MC50.c: 552:     if ( saveParam != 0 )
 20361  005830  0100               	movlb	0	; () banked
 20362  005832  51DD               	movf	checkNVM_VarSystem@saveParam& (0+255),w,b
 20363  005834  B4D8               	btfsc	status,2,c
 20364  005836  0012               	return	
 20365                           
 20366                           ; BSR set to: 0
 20367                           ;controlMemory_MC50.c: 553:     {;controlMemory_MC50.c: 554:         SaveNVM_VarSystem(p
      +                          ageMemoryP);
 20368  005838  0E00               	movlw	0
 20369  00583A  EC7F  F048         	call	_SaveNVM_VarSystem
 20370                           
 20371                           ;controlMemory_MC50.c: 555:         SaveNVM_VarSystem(pageMemoryE);
 20372  00583E  0E01               	movlw	1
 20373  005840  EC7F  F048         	call	_SaveNVM_VarSystem
 20374  005844  0012               	return		;funcret
 20375  005846                     __end_of_checkNVM_VarSystem:
 20376                           	callstack 0
 20377                           
 20378 ;; *************** function _ResetDefaultMemory *****************
 20379 ;; Defined at:
 20380 ;;		line 198 in file "controlMemory_MC50.c"
 20381 ;; Parameters:    Size  Location     Type
 20382 ;;  type            1    wreg     unsigned char 
 20383 ;; Auto vars:     Size  Location     Type
 20384 ;;  type            1    5[BANK0 ] unsigned char 
 20385 ;; Return value:  Size  Location     Type
 20386 ;;                  1    wreg      void 
 20387 ;; Registers used:
 20388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20389 ;; Tracked objects:
 20390 ;;		On entry : 30/1
 20391 ;;		On exit  : 0/0
 20392 ;;		Unchanged: 0/0
 20393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20395 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20397 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20398 ;;Total ram usage:        1 bytes
 20399 ;; Hardware stack levels used: 1
 20400 ;; Hardware stack levels required when called: 14
 20401 ;; This function calls:
 20402 ;;		_SaveNVM_VarSystem
 20403 ;; This function is called by:
 20404 ;;		_loadNVM_VarSystem
 20405 ;;		_sm_execute_menuConfiguration
 20406 ;; This function uses a non-reentrant model
 20407 ;;
 20408                           
 20409                           	psect	text71
 20410  0062A4                     __ptext71:
 20411                           	callstack 0
 20412  0062A4                     _ResetDefaultMemory:
 20413                           	callstack 14
 20414                           
 20415                           ;incstack = 0
 20416                           ;ResetDefaultMemory@type stored from wreg
 20417  0062A4  0100               	movlb	0	; () banked
 20418  0062A6  6FDD               	movwf	ResetDefaultMemory@type& (0+255),b
 20419                           
 20420                           ;controlMemory_MC50.c: 198: void ResetDefaultMemory(unsigned char type);controlMemory_MC
      +                          50.c: 199: {;controlMemory_MC50.c: 202:     var_sys_NVM.decelarationOpen = 3;
 20421  0062A8  0E03               	movlw	3
 20422  0062AA  0101               	movlb	1	; () banked
 20423  0062AC  6FA6               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20424                           
 20425                           ;controlMemory_MC50.c: 203:     var_sys_NVM.motorPower = 9;
 20426  0062AE  0E09               	movlw	9
 20427  0062B0  6FA8               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 20428                           
 20429                           ;controlMemory_MC50.c: 204:     var_sys_NVM.decelarationClose = 3;
 20430  0062B2  0E03               	movlw	3
 20431  0062B4  6FA7               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20432                           
 20433                           ;controlMemory_MC50.c: 205:     var_sys_NVM.photoCellIsON = 0;
 20434  0062B6  0E00               	movlw	0
 20435  0062B8  6FAD               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 20436                           
 20437                           ;controlMemory_MC50.c: 206:     var_sys_NVM.photoCellInOpen = 0;
 20438  0062BA  0E00               	movlw	0
 20439  0062BC  6FAE               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 20440                           
 20441                           ;controlMemory_MC50.c: 207:     var_sys_NVM.securityBandIsON = 0 ;
 20442  0062BE  0E00               	movlw	0
 20443  0062C0  6FAF               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 20444                           
 20445                           ;controlMemory_MC50.c: 208:     var_sys_NVM.securityBandType = 1;
 20446  0062C2  0E01               	movlw	1
 20447  0062C4  6FB0               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 20448                           
 20449                           ;controlMemory_MC50.c: 209:     var_sys_NVM.securityBandInOpen = 0;
 20450  0062C6  0E00               	movlw	0
 20451  0062C8  6FB1               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 20452                           
 20453                           ;controlMemory_MC50.c: 210:     var_sys_NVM.flashLightMode = 0;
 20454  0062CA  0E00               	movlw	0
 20455  0062CC  6FB3               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 20456                           
 20457                           ;controlMemory_MC50.c: 211:     var_sys_NVM.programmingDistance = 0;
 20458  0062CE  0E00               	movlw	0
 20459  0062D0  6FB4               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 20460                           
 20461                           ;controlMemory_MC50.c: 212:     var_sys_NVM.decelarationSensivity = 0;
 20462  0062D2  0E00               	movlw	0
 20463  0062D4  6FB5               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 20464                           
 20465                           ;controlMemory_MC50.c: 213:     var_sys_NVM.homemPresente = 0;
 20466  0062D6  0E00               	movlw	0
 20467  0062D8  6FB6               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 20468                           
 20469                           ;controlMemory_MC50.c: 214:     var_sys_NVM.autoTimeWalkClose = 0;
 20470  0062DA  0E00               	movlw	0
 20471  0062DC  6FAC               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20472                           
 20473                           ;controlMemory_MC50.c: 215:     var_sys_NVM.ligthTime = 3;
 20474  0062DE  0E03               	movlw	3
 20475  0062E0  6FBA               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 20476                           
 20477                           ;controlMemory_MC50.c: 216:     var_sys_NVM.folow_me = 0;
 20478  0062E2  0E00               	movlw	0
 20479  0062E4  6FBB               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 20480                           
 20481                           ;controlMemory_MC50.c: 217:     var_sys_NVM.electricBrake = 0;
 20482  0062E6  0E00               	movlw	0
 20483  0062E8  6FBD               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 20484                           
 20485                           ;controlMemory_MC50.c: 218:     var_sys_NVM.autoTimeWalkClose = 0;
 20486  0062EA  0E00               	movlw	0
 20487  0062EC  6FAC               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20488                           
 20489                           ;controlMemory_MC50.c: 219:     var_sys_NVM.Direction_motor = 1 ;
 20490  0062EE  0E01               	movlw	1
 20491  0062F0  6FC1               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20492                           
 20493                           ; BSR set to: 1
 20494                           ;controlMemory_MC50.c: 222:     if (type == SC){
 20495  0062F2  0100               	movlb	0	; () banked
 20496  0062F4  51DD               	movf	ResetDefaultMemory@type& (0+255),w,b
 20497  0062F6  A4D8               	btfss	status,2,c
 20498  0062F8  D015               	goto	l21003
 20499                           
 20500                           ; BSR set to: 0
 20501                           ;controlMemory_MC50.c: 224:         var_sys_NVM.motorSensitivity = 0;
 20502  0062FA  0E00               	movlw	0
 20503  0062FC  0101               	movlb	1	; () banked
 20504  0062FE  6FA9               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20505                           
 20506                           ;controlMemory_MC50.c: 225:         var_sys_NVM.logicDigital = 0;
 20507  006300  0E00               	movlw	0
 20508  006302  6FB7               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20509                           
 20510                           ;controlMemory_MC50.c: 226:         var_sys_NVM.Stopboton = 0;
 20511  006304  0E00               	movlw	0
 20512  006306  6FBC               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20513                           
 20514                           ;controlMemory_MC50.c: 227:         var_sys_NVM.autoTimeFullClose = 0;
 20515  006308  0E00               	movlw	0
 20516  00630A  6FAB               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20517                           
 20518                           ;controlMemory_MC50.c: 228:         var_sys_NVM.operationMode = 0;
 20519  00630C  0E00               	movlw	0
 20520  00630E  6FB2               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20521                           
 20522                           ;controlMemory_MC50.c: 229:         var_sys_NVM.velocityDecelaration = 5;
 20523  006310  0E05               	movlw	5
 20524  006312  6FBE               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20525                           
 20526                           ;controlMemory_MC50.c: 230:         var_sys_NVM.flashRGBMode = 3;
 20527  006314  0E03               	movlw	3
 20528  006316  6FBF               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20529                           
 20530                           ;controlMemory_MC50.c: 231:         var_sys_NVM.softstop = 0;
 20531  006318  0E00               	movlw	0
 20532  00631A  6FB9               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20533                           
 20534                           ;controlMemory_MC50.c: 232:         var_sys_NVM.softStart = 0;
 20535  00631C  0E00               	movlw	0
 20536  00631E  6FB8               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20537                           
 20538                           ;controlMemory_MC50.c: 233:         var_sys_NVM.walkTime = 10;
 20539  006320  0E0A               	movlw	10
 20540  006322  D03B               	goto	L81
 20541  006324                     l21003:
 20542                           
 20543                           ; BSR set to: 0
 20544  006324  05DD               	decf	ResetDefaultMemory@type& (0+255),w,b
 20545  006326  A4D8               	btfss	status,2,c
 20546  006328  D01C               	goto	l21007
 20547                           
 20548                           ; BSR set to: 0
 20549                           ;controlMemory_MC50.c: 237:         var_sys_NVM.decelarationClose = 4;
 20550  00632A  0E04               	movlw	4
 20551  00632C  0101               	movlb	1	; () banked
 20552  00632E  6FA7               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20553                           
 20554                           ;controlMemory_MC50.c: 238:         var_sys_NVM.decelarationOpen = 4;
 20555  006330  0E04               	movlw	4
 20556  006332  6FA6               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20557                           
 20558                           ;controlMemory_MC50.c: 239:         var_sys_NVM.motorSensitivity = 4;
 20559  006334  0E04               	movlw	4
 20560  006336  6FA9               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20561                           
 20562                           ;controlMemory_MC50.c: 240:         var_sys_NVM.logicDigital = 1;
 20563  006338  0E01               	movlw	1
 20564  00633A  6FB7               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20565                           
 20566                           ;controlMemory_MC50.c: 241:         var_sys_NVM.Stopboton = 1;
 20567  00633C  0E01               	movlw	1
 20568  00633E  6FBC               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20569                           
 20570                           ;controlMemory_MC50.c: 242:         var_sys_NVM.autoTimeFullClose = 0;
 20571  006340  0E00               	movlw	0
 20572  006342  6FAB               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20573                           
 20574                           ;controlMemory_MC50.c: 243:         var_sys_NVM.operationMode = 0;
 20575  006344  0E00               	movlw	0
 20576  006346  6FB2               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20577                           
 20578                           ;controlMemory_MC50.c: 244:         var_sys_NVM.velocityDecelaration = 5;
 20579  006348  0E05               	movlw	5
 20580  00634A  6FBE               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20581                           
 20582                           ;controlMemory_MC50.c: 245:         var_sys_NVM.flashRGBMode = 3;
 20583  00634C  0E03               	movlw	3
 20584  00634E  6FBF               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20585                           
 20586                           ;controlMemory_MC50.c: 246:         var_sys_NVM.softstop = 0;
 20587  006350  0E00               	movlw	0
 20588  006352  6FB9               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20589                           
 20590                           ;controlMemory_MC50.c: 247:         var_sys_NVM.softStart = 5;
 20591  006354  0E05               	movlw	5
 20592  006356  6FB8               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20593                           
 20594                           ;controlMemory_MC50.c: 248:         var_sys_NVM.walkTime = 0;
 20595  006358  0E00               	movlw	0
 20596  00635A  6FAA               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20597                           
 20598                           ;controlMemory_MC50.c: 249:         var_sys_NVM.Direction_motor = 0 ;
 20599  00635C  0E00               	movlw	0
 20600  00635E  6FC1               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20601                           
 20602                           ;controlMemory_MC50.c: 251:     }
 20603  006360  D01D               	goto	l21011
 20604  006362                     l21007:
 20605                           
 20606                           ; BSR set to: 0
 20607  006362  0E02               	movlw	2
 20608  006364  19DD               	xorwf	ResetDefaultMemory@type& (0+255),w,b
 20609  006366  A4D8               	btfss	status,2,c
 20610  006368  D019               	goto	l21011
 20611                           
 20612                           ; BSR set to: 0
 20613                           ;controlMemory_MC50.c: 253:         var_sys_NVM.decelarationClose = 6;
 20614  00636A  0E06               	movlw	6
 20615  00636C  0101               	movlb	1	; () banked
 20616  00636E  6FA7               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20617                           
 20618                           ;controlMemory_MC50.c: 254:         var_sys_NVM.decelarationOpen = 2;
 20619  006370  0E02               	movlw	2
 20620  006372  6FA6               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20621                           
 20622                           ;controlMemory_MC50.c: 255:         var_sys_NVM.motorSensitivity = 0;
 20623  006374  0E00               	movlw	0
 20624  006376  6FA9               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20625                           
 20626                           ;controlMemory_MC50.c: 256:         var_sys_NVM.logicDigital = 0;
 20627  006378  0E00               	movlw	0
 20628  00637A  6FB7               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20629                           
 20630                           ;controlMemory_MC50.c: 257:         var_sys_NVM.Stopboton = 0;
 20631  00637C  0E00               	movlw	0
 20632  00637E  6FBC               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20633                           
 20634                           ;controlMemory_MC50.c: 258:         var_sys_NVM.autoTimeFullClose = 0;
 20635  006380  0E00               	movlw	0
 20636  006382  6FAB               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20637                           
 20638                           ;controlMemory_MC50.c: 259:         var_sys_NVM.operationMode = 2;
 20639  006384  0E02               	movlw	2
 20640  006386  6FB2               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20641                           
 20642                           ;controlMemory_MC50.c: 260:         var_sys_NVM.velocityDecelaration = 5;
 20643  006388  0E05               	movlw	5
 20644  00638A  6FBE               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20645                           
 20646                           ;controlMemory_MC50.c: 261:         var_sys_NVM.flashRGBMode = 1;
 20647  00638C  0E01               	movlw	1
 20648  00638E  6FBF               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20649                           
 20650                           ;controlMemory_MC50.c: 262:         var_sys_NVM.softstop = 5;
 20651  006390  0E05               	movlw	5
 20652  006392  6FB9               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20653                           
 20654                           ;controlMemory_MC50.c: 263:         var_sys_NVM.softStart = 0;
 20655  006394  0E00               	movlw	0
 20656  006396  6FB8               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20657                           
 20658                           ;controlMemory_MC50.c: 264:         var_sys_NVM.walkTime = 0;
 20659  006398  0E00               	movlw	0
 20660  00639A                     L81:
 20661  00639A  6FAA               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20662  00639C                     l21011:
 20663                           
 20664                           ;controlMemory_MC50.c: 272:     SaveNVM_VarSystem(pageMemoryE);
 20665  00639C  0E01               	movlw	1
 20666  00639E  EC7F  F048         	call	_SaveNVM_VarSystem
 20667                           
 20668                           ;controlMemory_MC50.c: 273:     SaveNVM_VarSystem(pageMemoryP);
 20669  0063A2  0E00               	movlw	0
 20670  0063A4  EC7F  F048         	call	_SaveNVM_VarSystem
 20671                           
 20672                           ;controlMemory_MC50.c: 278:     var_sys_NVM.learningTimeToClose = 0;
 20673  0063A8  0E00               	movlw	0
 20674  0063AA  0101               	movlb	1	; () banked
 20675  0063AC  6FDE               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 20676  0063AE  0E00               	movlw	0
 20677  0063B0  6FDF               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 20678  0063B2  0E00               	movlw	0
 20679  0063B4  6FE0               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 20680  0063B6  0E00               	movlw	0
 20681  0063B8  6FE1               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 20682                           
 20683                           ;controlMemory_MC50.c: 279:     var_sys_NVM.learningTimeToOpen = 0;
 20684  0063BA  0E00               	movlw	0
 20685  0063BC  6FDA               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 20686  0063BE  0E00               	movlw	0
 20687  0063C0  6FDB               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 20688  0063C2  0E00               	movlw	0
 20689  0063C4  6FDC               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 20690  0063C6  0E00               	movlw	0
 20691  0063C8  6FDD               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 20692                           
 20693                           ;controlMemory_MC50.c: 280:     var_sys_NVM.learningCurrentNormalClose = 0;
 20694  0063CA  0E00               	movlw	0
 20695  0063CC  6FD7               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 20696  0063CE  0E00               	movlw	0
 20697  0063D0  6FD6               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 20698                           
 20699                           ;controlMemory_MC50.c: 281:     var_sys_NVM.learningCurrentNormalOpen = 0;
 20700  0063D2  0E00               	movlw	0
 20701  0063D4  6FD9               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 20702  0063D6  0E00               	movlw	0
 20703  0063D8  6FD8               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 20704                           
 20705                           ;controlMemory_MC50.c: 282:     var_sys_NVM.learningCurrentDecelarationClose = 0;
 20706  0063DA  0E00               	movlw	0
 20707  0063DC  6FCE               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 20708  0063DE  0E00               	movlw	0
 20709  0063E0  6FCF               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 20710  0063E2  0E00               	movlw	0
 20711  0063E4  6FD0               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 20712  0063E6  0E00               	movlw	0
 20713  0063E8  6FD1               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 20714                           
 20715                           ;controlMemory_MC50.c: 283:     var_sys_NVM.learningCurrentDecelarationOpen = 0;
 20716  0063EA  0E00               	movlw	0
 20717  0063EC  6FD2               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 20718  0063EE  0E00               	movlw	0
 20719  0063F0  6FD3               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 20720  0063F2  0E00               	movlw	0
 20721  0063F4  6FD4               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 20722  0063F6  0E00               	movlw	0
 20723  0063F8  6FD5               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 20724                           
 20725                           ; BSR set to: 1
 20726                           ;controlMemory_MC50.c: 289:     if ((PORTAbits.RA2 == 0) && (PORTAbits.RA1 == 0) && (POR
      +                          TBbits.RB0 == 0)&&(PORTAbits.RA5==0)){
 20727  0063FA  A48D               	btfss	141,2,c	;volatile
 20728                           
 20729                           ; BSR set to: 1
 20730  0063FC  B28D               	btfsc	141,1,c	;volatile
 20731  0063FE  D013               	goto	l21025
 20732                           
 20733                           ; BSR set to: 1
 20734  006400  A08E               	btfss	142,0,c	;volatile
 20735                           
 20736                           ; BSR set to: 1
 20737  006402  BA8D               	btfsc	141,5,c	;volatile
 20738  006404  D010               	goto	l21025
 20739                           
 20740                           ; BSR set to: 1
 20741                           ;controlMemory_MC50.c: 290:      var_sys.actualCounterMoves = 0;
 20742  006406  0E00               	movlw	0
 20743  006408  6F91               	movwf	(_var_sys+60)& (0+255),b	;volatile
 20744  00640A  0E00               	movlw	0
 20745  00640C  6F92               	movwf	(_var_sys+61)& (0+255),b	;volatile
 20746  00640E  0E00               	movlw	0
 20747  006410  6F93               	movwf	(_var_sys+62)& (0+255),b	;volatile
 20748  006412  0E00               	movlw	0
 20749  006414  6F94               	movwf	(_var_sys+63)& (0+255),b	;volatile
 20750                           
 20751                           ;controlMemory_MC50.c: 291:      var_sys_NVM.counterMoves = 0;
 20752  006416  0E00               	movlw	0
 20753  006418  6FC8               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 20754  00641A  0E00               	movlw	0
 20755  00641C  6FC9               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 20756  00641E  0E00               	movlw	0
 20757  006420  6FCA               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 20758  006422  0E00               	movlw	0
 20759  006424  6FCB               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 20760  006426                     l21025:
 20761                           
 20762                           ; BSR set to: 1
 20763                           ;controlMemory_MC50.c: 296:     SaveNVM_VarSystem(pageMemoryCounters);
 20764  006426  0E02               	movlw	2
 20765  006428  EC7F  F048         	call	_SaveNVM_VarSystem
 20766                           
 20767                           ;controlMemory_MC50.c: 297:     SaveNVM_VarSystem(pageMemoryLearningVars);
 20768  00642C  0E03               	movlw	3
 20769  00642E  EC7F  F048         	call	_SaveNVM_VarSystem
 20770  006432  0012               	return		;funcret
 20771  006434                     __end_of_ResetDefaultMemory:
 20772                           	callstack 0
 20773                           
 20774 ;; *************** function _I2C1_Read1ByteRegister *****************
 20775 ;; Defined at:
 20776 ;;		line 65 in file "mcc_generated_files/examples/i2c1_master_example.c"
 20777 ;; Parameters:    Size  Location     Type
 20778 ;;  address         1    wreg     unsigned char 
 20779 ;;  reg             1   33[COMRAM] unsigned char 
 20780 ;; Auto vars:     Size  Location     Type
 20781 ;;  address         1   34[COMRAM] unsigned char 
 20782 ;;  returnValue     1   35[COMRAM] unsigned char 
 20783 ;; Return value:  Size  Location     Type
 20784 ;;                  1    wreg      unsigned char 
 20785 ;; Registers used:
 20786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20787 ;; Tracked objects:
 20788 ;;		On entry : 31/0
 20789 ;;		On exit  : 33/2
 20790 ;;		Unchanged: 0/0
 20791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20792 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20793 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20795 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20796 ;;Total ram usage:        3 bytes
 20797 ;; Hardware stack levels used: 1
 20798 ;; Hardware stack levels required when called: 12
 20799 ;; This function calls:
 20800 ;;		_I2C1_Close
 20801 ;;		_I2C1_MasterWrite
 20802 ;;		_I2C1_Open
 20803 ;;		_I2C1_SetAddressNackCallback
 20804 ;;		_I2C1_SetBuffer
 20805 ;;		_I2C1_SetDataCompleteCallback
 20806 ;; This function is called by:
 20807 ;;		_loadNVM_VarSystem
 20808 ;; This function uses a non-reentrant model
 20809 ;;
 20810                           
 20811                           	psect	text72
 20812  008C2C                     __ptext72:
 20813                           	callstack 0
 20814  008C2C                     _I2C1_Read1ByteRegister:
 20815                           	callstack 17
 20816                           
 20817                           ;incstack = 0
 20818                           ;I2C1_Read1ByteRegister@address stored from wreg
 20819  008C2C  6E23               	movwf	I2C1_Read1ByteRegister@address^0,c
 20820                           
 20821                           ;mcc_generated_files/examples/i2c1_master_example.c: 65: uint8_t I2C1_Read1ByteRegister(
      +                          i2c1_address_t address, uint8_t reg);mcc_generated_files/examples/i2c1_master_example.c:
      +                           66: {;mcc_generated_files/examples/i2c1_master_example.c: 67:     uint8_t returnValue =
      +                           0x00;
 20822  008C2E  0E00               	movlw	0
 20823  008C30  6E24               	movwf	I2C1_Read1ByteRegister@returnValue^0,c
 20824  008C32                     l22365:
 20825  008C32  5023               	movf	I2C1_Read1ByteRegister@address^0,w,c
 20826  008C34  EC11  F041         	call	_I2C1_Open
 20827  008C38  0900               	iorlw	0
 20828  008C3A  B4D8               	btfsc	status,2,c
 20829  008C3C  D7FA               	goto	l22365
 20830                           
 20831                           ;mcc_generated_files/examples/i2c1_master_example.c: 70:     I2C1_SetDataCompleteCallbac
      +                          k(rd1RegCompleteHandler,&returnValue);
 20832  008C3E  0EFA               	movlw	low _rd1RegCompleteHandler@i2c1_master_example$F500
 20833  008C40  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 20834  008C42  0E95               	movlw	high _rd1RegCompleteHandler@i2c1_master_example$F500
 20835  008C44  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 20836  008C46  0E24               	movlw	low I2C1_Read1ByteRegister@returnValue
 20837  008C48  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 20838  008C4A  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 20839  008C4C  EC19  F04D         	call	_I2C1_SetDataCompleteCallback	;wreg free
 20840                           
 20841                           ;mcc_generated_files/examples/i2c1_master_example.c: 71:     I2C1_SetBuffer(&reg,1);
 20842  008C50  0E22               	movlw	low I2C1_Read1ByteRegister@reg
 20843  008C52  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 20844  008C54  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 20845  008C56  0E00               	movlw	0
 20846  008C58  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 20847  008C5A  0E01               	movlw	1
 20848  008C5C  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 20849  008C5E  ECD0  F04C         	call	_I2C1_SetBuffer	;wreg free
 20850                           
 20851                           ; BSR set to: 2
 20852                           ;mcc_generated_files/examples/i2c1_master_example.c: 72:     I2C1_SetAddressNackCallback
      +                          (((void*)0),((void*)0));
 20853  008C62  0E00               	movlw	0
 20854  008C64  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 20855  008C66  0E00               	movlw	0
 20856  008C68  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 20857  008C6A  0E00               	movlw	0
 20858  008C6C  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 20859  008C6E  0E00               	movlw	0
 20860  008C70  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 20861  008C72  EC01  F04D         	call	_I2C1_SetAddressNackCallback	;wreg free
 20862                           
 20863                           ;mcc_generated_files/examples/i2c1_master_example.c: 73:     I2C1_MasterWrite();
 20864  008C76  ECD9  F04D         	call	_I2C1_MasterWrite	;wreg free
 20865  008C7A                     l22375:
 20866  008C7A  EC4F  F04C         	call	_I2C1_Close	;wreg free
 20867  008C7E  06E8               	decf	wreg,f,c
 20868  008C80  B4D8               	btfsc	status,2,c
 20869  008C82  D7FB               	goto	l22375
 20870                           
 20871                           ;mcc_generated_files/examples/i2c1_master_example.c: 76:     return returnValue;
 20872  008C84  5024               	movf	I2C1_Read1ByteRegister@returnValue^0,w,c
 20873  008C86  0012               	return		;funcret
 20874  008C88                     __end_of_I2C1_Read1ByteRegister:
 20875                           	callstack 0
 20876                           
 20877 ;; *************** function _getKeyPressed *****************
 20878 ;; Defined at:
 20879 ;;		line 217 in file "inputs_MC50.c"
 20880 ;; Parameters:    Size  Location     Type
 20881 ;;		None
 20882 ;; Auto vars:     Size  Location     Type
 20883 ;;  temp            1   15[COMRAM] char 
 20884 ;; Return value:  Size  Location     Type
 20885 ;;                  1    wreg      char 
 20886 ;; Registers used:
 20887 ;;		wreg, status,2, status,0
 20888 ;; Tracked objects:
 20889 ;;		On entry : 3E/1
 20890 ;;		On exit  : 3D/0
 20891 ;;		Unchanged: 0/0
 20892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20894 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20896 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20897 ;;Total ram usage:        1 bytes
 20898 ;; Hardware stack levels used: 1
 20899 ;; Hardware stack levels required when called: 4
 20900 ;; This function calls:
 20901 ;;		Nothing
 20902 ;; This function is called by:
 20903 ;;		_main
 20904 ;; This function uses a non-reentrant model
 20905 ;;
 20906                           
 20907                           	psect	text73
 20908  0099EA                     __ptext73:
 20909                           	callstack 0
 20910  0099EA                     _getKeyPressed:
 20911                           	callstack 26
 20912                           
 20913                           ;inputs_MC50.c: 218:     signed char temp=-1;
 20914                           
 20915                           ;incstack = 0
 20916  0099EA  6810               	setf	getKeyPressed@temp^0,c
 20917                           
 20918                           ;inputs_MC50.c: 219:     if(RFFull)
 20919  0099EC  0100               	movlb	0	; () banked
 20920  0099EE  51D7               	movf	_RFFull& (0+255),w,b	;volatile
 20921  0099F0  B4D8               	btfsc	status,2,c
 20922  0099F2  D005               	goto	l24413
 20923                           
 20924                           ; BSR set to: 0
 20925                           ;inputs_MC50.c: 220:     {;inputs_MC50.c: 221:         temp=(BufferRF[7]&0xF0)>>4;
 20926  0099F4  0102               	movlb	2	; () banked
 20927  0099F6  39CF               	swapf	(_BufferRF+7)& (0+255),w,b
 20928  0099F8  0B0F               	andlw	15
 20929  0099FA  0B0F               	andlw	15
 20930  0099FC  6E10               	movwf	getKeyPressed@temp^0,c
 20931  0099FE                     l24413:
 20932                           
 20933                           ;inputs_MC50.c: 223:     return temp;
 20934  0099FE  5010               	movf	getKeyPressed@temp^0,w,c
 20935  009A00  0012               	return		;funcret
 20936  009A02                     __end_of_getKeyPressed:
 20937                           	callstack 0
 20938                           
 20939 ;; *************** function _eusartparser *****************
 20940 ;; Defined at:
 20941 ;;		line 488 in file "eusartparser.c"
 20942 ;; Parameters:    Size  Location     Type
 20943 ;;  package         2    8[BANK0 ] PTR struct package_t
 20944 ;;		 -> main@package(7), 
 20945 ;; Auto vars:     Size  Location     Type
 20946 ;;  i               1   28[BANK0 ] unsigned char 
 20947 ;;  i               1   25[BANK0 ] unsigned char 
 20948 ;;  i               1   29[BANK0 ] unsigned char 
 20949 ;;  i               1   26[BANK0 ] unsigned char 
 20950 ;;  i               1   30[BANK0 ] unsigned char 
 20951 ;;  i               1   24[BANK0 ] unsigned char 
 20952 ;;  i               1   23[BANK0 ] unsigned char 
 20953 ;;  i               1   19[BANK0 ] unsigned char 
 20954 ;;  i               1   18[BANK0 ] unsigned char 
 20955 ;;  i               1   27[BANK0 ] unsigned char 
 20956 ;;  i               1   22[BANK0 ] unsigned char 
 20957 ;;  i               1   21[BANK0 ] unsigned char 
 20958 ;;  i               1   17[BANK0 ] unsigned char 
 20959 ;;  i               1   16[BANK0 ] unsigned char 
 20960 ;;  a               7    0        struct package_t
 20961 ;;  serial          4   32[BANK0 ] unsigned long 
 20962 ;;  relcounter      1   31[BANK0 ] unsigned char 
 20963 ;;  pos             1   20[BANK0 ] unsigned char 
 20964 ;; Return value:  Size  Location     Type
 20965 ;;                  1    wreg      void 
 20966 ;; Registers used:
 20967 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 20968 ;; Tracked objects:
 20969 ;;		On entry : 3F/0
 20970 ;;		On exit  : 0/0
 20971 ;;		Unchanged: 0/0
 20972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20973 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20974 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20975 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20976 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20977 ;;Total ram usage:       28 bytes
 20978 ;; Hardware stack levels used: 1
 20979 ;; Hardware stack levels required when called: 14
 20980 ;; This function calls:
 20981 ;;		_ReadSerial
 20982 ;;		_RemoveSerial
 20983 ;;		_SaveNVM_VarSystem
 20984 ;;		_cmdMemoryIsEmpty
 20985 ;;		_confirmpackage
 20986 ;;		_read_eusartparser
 20987 ;;		_saveNewSerial
 20988 ;;		_updateChangesToUart
 20989 ;;		_validateRemoteSerialNumber
 20990 ;;		_write_eusartparser
 20991 ;;		_write_package
 20992 ;; This function is called by:
 20993 ;;		_main
 20994 ;; This function uses a non-reentrant model
 20995 ;;
 20996                           
 20997                           	psect	text74
 20998  000F22                     __ptext74:
 20999                           	callstack 0
 21000  000F22                     _eusartparser:
 21001                           	callstack 16
 21002                           
 21003                           ; BSR set to: 0
 21004                           ;eusartparser.c: 489:     struct package_t a;;eusartparser.c: 490:     uint8_t relcounte
      +                          r;;eusartparser.c: 491:     static _Bool save_f=0;;eusartparser.c: 492:     static uint1
      +                          6_t buffer=0x0000;;eusartparser.c: 493:     uint32_t serial;;eusartparser.c: 494:     ch
      +                          ar pos;;eusartparser.c: 496:     switch(package->functioncode){
 21005                           
 21006                           ;incstack = 0
 21007  000F22  EF53  F00C         	goto	l27569
 21008  000F26                     l27121:
 21009                           
 21010                           ; BSR set to: 0
 21011                           ;eusartparser.c: 498:             read_eusartparser(package);
 21012  000F26  C0E0  F018         	movff	eusartparser@package,read_eusartparser@package
 21013  000F2A  C0E1  F019         	movff	eusartparser@package+1,read_eusartparser@package+1
 21014  000F2E  ECBC  F026         	call	_read_eusartparser	;wreg free
 21015  000F32                     l27123:
 21016                           
 21017                           ;eusartparser.c: 499:             confirmpackage(package, 1);
 21018  000F32  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 21019  000F36  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 21020  000F3A  0E01               	movlw	1
 21021  000F3C  6E14               	movwf	confirmpackage@confirm^0,c
 21022  000F3E  EC44  F046         	call	_confirmpackage	;wreg free
 21023  000F42                     l27125:
 21024                           
 21025                           ;eusartparser.c: 500:             write_package(*package);
 21026  000F42  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21027  000F46  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21028  000F4A  EE00  F011         	lfsr	0,write_package@package
 21029  000F4E  0E06               	movlw	6
 21030  000F50                     u33931:
 21031  000F50  CFDB FFEB          	movff	plusw2,plusw0
 21032  000F54  06E8               	decf	wreg,f,c
 21033  000F56  E2FC               	bc	u33931
 21034  000F58  EC8F  F04A         	call	_write_package	;wreg free
 21035                           
 21036                           ;eusartparser.c: 501:             break;
 21037  000F5C  0012               	return	
 21038  000F5E                     l27127:
 21039                           
 21040                           ; BSR set to: 0
 21041                           ;eusartparser.c: 504:             done_changes=1;
 21042  000F5E  0E01               	movlw	1
 21043  000F60  0101               	movlb	1	; () banked
 21044  000F62  6F4E               	movwf	_done_changes& (0+255),b
 21045                           
 21046                           ;eusartparser.c: 505:             if(programmer_enable){
 21047  000F64  0100               	movlb	0	; () banked
 21048  000F66  517B               	movf	_programmer_enable& (0+255),w,b
 21049  000F68  B4D8               	btfsc	status,2,c
 21050  000F6A  D00E               	goto	l27135
 21051                           
 21052                           ; BSR set to: 0
 21053                           ;eusartparser.c: 506:                 write_eusartparser(*package);
 21054  000F6C  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21055  000F70  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21056  000F74  EE00  F016         	lfsr	0,write_eusartparser@package
 21057  000F78  0E06               	movlw	6
 21058  000F7A                     u33951:
 21059  000F7A  CFDB FFEB          	movff	plusw2,plusw0
 21060  000F7E  06E8               	decf	wreg,f,c
 21061  000F80  E2FC               	bc	u33951
 21062  000F82  EC40  F01A         	call	_write_eusartparser	;wreg free
 21063  000F86  D7D5               	goto	l27123
 21064  000F88                     l27135:
 21065                           
 21066                           ;eusartparser.c: 511:                 confirmpackage(package, 0);
 21067  000F88  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 21068  000F8C  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 21069  000F90  0E00               	movlw	0
 21070  000F92  6E14               	movwf	confirmpackage@confirm^0,c
 21071  000F94  EC44  F046         	call	_confirmpackage	;wreg free
 21072  000F98  D7D4               	goto	l27125
 21073  000F9A                     l27139:
 21074                           
 21075                           ; BSR set to: 0
 21076                           ;eusartparser.c: 517:             if(programmer_enable){
 21077  000F9A  517B               	movf	_programmer_enable& (0+255),w,b
 21078  000F9C  B4D8               	btfsc	status,2,c
 21079  000F9E  D00A               	goto	l27145
 21080                           
 21081                           ; BSR set to: 0
 21082                           ;eusartparser.c: 518:                 SaveNVM_VarSystem(pageMemoryE);
 21083  000FA0  0E01               	movlw	1
 21084  000FA2  EC7F  F048         	call	_SaveNVM_VarSystem
 21085                           
 21086                           ;eusartparser.c: 519:                 SaveNVM_VarSystem(pageMemoryP);
 21087  000FA6  0E00               	movlw	0
 21088  000FA8  EC7F  F048         	call	_SaveNVM_VarSystem
 21089                           
 21090                           ;eusartparser.c: 520:                 programmer_enable=0;
 21091  000FAC  0E00               	movlw	0
 21092  000FAE  0100               	movlb	0	; () banked
 21093  000FB0  6F7B               	movwf	_programmer_enable& (0+255),b
 21094                           
 21095                           ;eusartparser.c: 521:             }
 21096  000FB2  D01D               	goto	l27157
 21097  000FB4                     l27145:
 21098                           
 21099                           ; BSR set to: 0
 21100                           ;eusartparser.c: 523:                 if((sm_state_Main_t)main_stateMachine.current_stat
      +                          e==st_standBy){}
 21101  000FB4  0101               	movlb	1	; () banked
 21102  000FB6  51F1               	movf	_main_stateMachine& (0+255),w,b
 21103  000FB8  B4D8               	btfsc	status,2,c
 21104  000FBA  D019               	goto	l27157
 21105                           
 21106                           ; BSR set to: 1
 21107                           ;eusartparser.c: 526:                     package->data.data16=(uint16_t)2;
 21108  000FBC  0100               	movlb	0	; () banked
 21109  000FBE  EE20 F002          	lfsr	2,2
 21110  000FC2  51E0               	movf	eusartparser@package& (0+255),w,b
 21111  000FC4  26D9               	addwf	fsr2l,f,c
 21112  000FC6  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21113  000FC8  22DA               	addwfc	fsr2h,f,c
 21114  000FCA  0E02               	movlw	2
 21115  000FCC  6EDE               	movwf	postinc2,c
 21116  000FCE  0E00               	movlw	0
 21117  000FD0  6EDD               	movwf	postdec2,c
 21118                           
 21119                           ; BSR set to: 0
 21120                           ;eusartparser.c: 527:                     write_package(*package);
 21121  000FD2  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21122  000FD6  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21123  000FDA  EE00  F011         	lfsr	0,write_package@package
 21124  000FDE  0E06               	movlw	6
 21125  000FE0                     u33981:
 21126  000FE0  CFDB FFEB          	movff	plusw2,plusw0
 21127  000FE4  06E8               	decf	wreg,f,c
 21128  000FE6  E2FC               	bc	u33981
 21129  000FE8  EC8F  F04A         	call	_write_package	;wreg free
 21130  000FEC  D7CD               	goto	l27135
 21131  000FEE                     l27157:
 21132                           
 21133                           ;eusartparser.c: 534:             package->data.data16=(uint16_t)programmer_enable;
 21134  000FEE  0100               	movlb	0	; () banked
 21135  000FF0  517B               	movf	_programmer_enable& (0+255),w,b
 21136  000FF2  6FE2               	movwf	??_eusartparser& (0+255),b
 21137  000FF4  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21138  000FF6  EE20 F002          	lfsr	2,2
 21139  000FFA  51E0               	movf	eusartparser@package& (0+255),w,b
 21140  000FFC  26D9               	addwf	fsr2l,f,c
 21141  000FFE  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21142  001000  22DA               	addwfc	fsr2h,f,c
 21143  001002  C0E2  FFDE         	movff	??_eusartparser,postinc2
 21144  001006  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 21145                           
 21146                           ; BSR set to: 0
 21147                           ;eusartparser.c: 535:             write_package(*package);
 21148  00100A  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21149  00100E  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21150  001012  EE00  F011         	lfsr	0,write_package@package
 21151  001016  0E06               	movlw	6
 21152  001018                     u33991:
 21153  001018  CFDB FFEB          	movff	plusw2,plusw0
 21154  00101C  06E8               	decf	wreg,f,c
 21155  00101E  E2FC               	bc	u33991
 21156  001020  EC8F  F04A         	call	_write_package	;wreg free
 21157                           
 21158                           ;eusartparser.c: 536:             confirmpackage(package, 1);
 21159  001024  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 21160  001028  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 21161  00102C  0E01               	movlw	1
 21162  00102E  6E14               	movwf	confirmpackage@confirm^0,c
 21163  001030  EC44  F046         	call	_confirmpackage	;wreg free
 21164                           
 21165                           ;eusartparser.c: 537:             write_package(*package);
 21166  001034  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21167  001038  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21168  00103C  EE00  F011         	lfsr	0,write_package@package
 21169  001040  0E06               	movlw	6
 21170  001042                     u34001:
 21171  001042  CFDB FFEB          	movff	plusw2,plusw0
 21172  001046  06E8               	decf	wreg,f,c
 21173  001048  E2FC               	bc	u34001
 21174  00104A  EC8F  F04A         	call	_write_package	;wreg free
 21175                           
 21176                           ;eusartparser.c: 539:             if(done_changes==1)
 21177  00104E  0101               	movlb	1	; () banked
 21178  001050  054E               	decf	_done_changes& (0+255),w,b
 21179  001052  B4D8               	btfsc	status,2,c
 21180                           
 21181                           ; BSR set to: 1
 21182                           ;eusartparser.c: 540:                 updateChangesToUart();
 21183  001054  EC8A  F045         	call	_updateChangesToUart	;wreg free
 21184                           
 21185                           ;eusartparser.c: 541:             done_changes=0;
 21186  001058  0E00               	movlw	0
 21187  00105A  0101               	movlb	1	; () banked
 21188  00105C  6F4E               	movwf	_done_changes& (0+255),b
 21189                           
 21190                           ;eusartparser.c: 542:             break;
 21191  00105E  0012               	return	
 21192  001060                     l27175:
 21193                           
 21194                           ; BSR set to: 0
 21195                           ;eusartparser.c: 548:                 package->address=0x00;
 21196  001060  EE20 F001          	lfsr	2,1
 21197  001064  51E0               	movf	eusartparser@package& (0+255),w,b
 21198  001066  26D9               	addwf	fsr2l,f,c
 21199  001068  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21200  00106A  22DA               	addwfc	fsr2h,f,c
 21201  00106C  0E00               	movlw	0
 21202  00106E  6EDF               	movwf	indf2,c
 21203                           
 21204                           ;eusartparser.c: 549:                 package->data.data16=var_sys_NVM.positionRemotesFu
      +                          ll;
 21205  001070  0101               	movlb	1	; () banked
 21206  001072  51C6               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21207  001074  0100               	movlb	0	; () banked
 21208  001076  6FE2               	movwf	??_eusartparser& (0+255),b
 21209  001078  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21210  00107A  EE20 F002          	lfsr	2,2
 21211  00107E  51E0               	movf	eusartparser@package& (0+255),w,b
 21212  001080  26D9               	addwf	fsr2l,f,c
 21213  001082  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21214  001084  22DA               	addwfc	fsr2h,f,c
 21215  001086  C0E2  FFDE         	movff	??_eusartparser,postinc2
 21216  00108A  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 21217                           
 21218                           ; BSR set to: 0
 21219                           ;eusartparser.c: 550:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 21220  00108E  0E00               	movlw	0
 21221  001090  6FE8               	movwf	eusartparser@i& (0+255),b
 21222  001092  D014               	goto	l27185
 21223  001094                     l27179:
 21224                           
 21225                           ; BSR set to: 0
 21226                           ;eusartparser.c: 551:                 if(cmdMemoryIsEmpty(0,i)==1)
 21227  001094  C0E8  F02E         	movff	eusartparser@i,cmdMemoryIsEmpty@position
 21228  001098  0E00               	movlw	0
 21229  00109A  ECE3  F03E         	call	_cmdMemoryIsEmpty
 21230  00109E  06E8               	decf	wreg,f,c
 21231  0010A0  A4D8               	btfss	status,2,c
 21232  0010A2  D00A               	goto	l27183
 21233                           
 21234                           ;eusartparser.c: 552:                     package->data.data16--;
 21235  0010A4  0100               	movlb	0	; () banked
 21236  0010A6  EE20 F002          	lfsr	2,2
 21237  0010AA  51E0               	movf	eusartparser@package& (0+255),w,b
 21238  0010AC  26D9               	addwf	fsr2l,f,c
 21239  0010AE  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21240  0010B0  22DA               	addwfc	fsr2h,f,c
 21241  0010B2  06DE               	decf	postinc2,f,c
 21242  0010B4  0E00               	movlw	0
 21243  0010B6  5ADD               	subwfb	postdec2,f,c
 21244  0010B8                     l27183:
 21245  0010B8  0100               	movlb	0	; () banked
 21246  0010BA  2BE8               	incf	eusartparser@i& (0+255),f,b
 21247  0010BC                     l27185:
 21248                           
 21249                           ; BSR set to: 0
 21250  0010BC  0101               	movlb	1	; () banked
 21251  0010BE  51C6               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21252  0010C0  0100               	movlb	0	; () banked
 21253  0010C2  5DE8               	subwf	eusartparser@i& (0+255),w,b
 21254  0010C4  A0D8               	btfss	status,0,c
 21255  0010C6  D7E6               	goto	l27179
 21256  0010C8                     u34030:
 21257                           
 21258                           ; BSR set to: 0
 21259                           ;eusartparser.c: 553:                 write_package(*package);
 21260  0010C8  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21261  0010CC  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21262  0010D0  EE00  F011         	lfsr	0,write_package@package
 21263  0010D4  0E06               	movlw	6
 21264  0010D6                     u34041:
 21265  0010D6  CFDB FFEB          	movff	plusw2,plusw0
 21266  0010DA  06E8               	decf	wreg,f,c
 21267  0010DC  E2FC               	bc	u34041
 21268  0010DE  EC8F  F04A         	call	_write_package	;wreg free
 21269  0010E2  D727               	goto	l27123
 21270  0010E4                     l27193:
 21271                           
 21272                           ; BSR set to: 0
 21273                           ;eusartparser.c: 559:             package->address=0x00;
 21274  0010E4  EE20 F001          	lfsr	2,1
 21275  0010E8  51E0               	movf	eusartparser@package& (0+255),w,b
 21276  0010EA  26D9               	addwf	fsr2l,f,c
 21277  0010EC  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21278  0010EE  22DA               	addwfc	fsr2h,f,c
 21279  0010F0  0E00               	movlw	0
 21280  0010F2  6EDF               	movwf	indf2,c
 21281                           
 21282                           ;eusartparser.c: 560:             package->data.data16=0;
 21283  0010F4  EE20 F002          	lfsr	2,2
 21284  0010F8  51E0               	movf	eusartparser@package& (0+255),w,b
 21285  0010FA  26D9               	addwf	fsr2l,f,c
 21286  0010FC  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21287  0010FE  22DA               	addwfc	fsr2h,f,c
 21288  001100  0E00               	movlw	0
 21289  001102  6EDE               	movwf	postinc2,c
 21290  001104  0E00               	movlw	0
 21291  001106  6EDD               	movwf	postdec2,c
 21292                           
 21293                           ; BSR set to: 0
 21294                           ;eusartparser.c: 561:             for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;i++)
 21295  001108  0E00               	movlw	0
 21296  00110A  6FE9               	movwf	eusartparser@i_7474& (0+255),b
 21297  00110C  D014               	goto	l27203
 21298  00110E                     l27197:
 21299                           
 21300                           ; BSR set to: 0
 21301                           ;eusartparser.c: 562:             if(cmdMemoryIsEmpty(0,i)==1)
 21302  00110E  C0E9  F02E         	movff	eusartparser@i_7474,cmdMemoryIsEmpty@position
 21303  001112  0E00               	movlw	0
 21304  001114  ECE3  F03E         	call	_cmdMemoryIsEmpty
 21305  001118  06E8               	decf	wreg,f,c
 21306  00111A  A4D8               	btfss	status,2,c
 21307  00111C  D00A               	goto	l27201
 21308                           
 21309                           ;eusartparser.c: 563:                 package->data.data16++;
 21310  00111E  0100               	movlb	0	; () banked
 21311  001120  EE20 F002          	lfsr	2,2
 21312  001124  51E0               	movf	eusartparser@package& (0+255),w,b
 21313  001126  26D9               	addwf	fsr2l,f,c
 21314  001128  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21315  00112A  22DA               	addwfc	fsr2h,f,c
 21316  00112C  2ADE               	incf	postinc2,f,c
 21317  00112E  0E00               	movlw	0
 21318  001130  22DD               	addwfc	postdec2,f,c
 21319  001132                     l27201:
 21320  001132  0100               	movlb	0	; () banked
 21321  001134  2BE9               	incf	eusartparser@i_7474& (0+255),f,b
 21322  001136                     l27203:
 21323                           
 21324                           ; BSR set to: 0
 21325  001136  0101               	movlb	1	; () banked
 21326  001138  51C6               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21327  00113A  0100               	movlb	0	; () banked
 21328  00113C  5DE9               	subwf	eusartparser@i_7474& (0+255),w,b
 21329  00113E  B0D8               	btfsc	status,0,c
 21330  001140  D7C3               	goto	u34030
 21331  001142  D7E5               	goto	l27197
 21332  001144                     l27211:
 21333                           
 21334                           ; BSR set to: 0
 21335                           ;eusartparser.c: 569:             relcounter=0;
 21336  001144  0E00               	movlw	0
 21337  001146  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 21338                           
 21339                           ;eusartparser.c: 570:             for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;i++)
 21340  001148  0E00               	movlw	0
 21341  00114A  6FED               	movwf	eusartparser@i_7475& (0+255),b
 21342  00114C  D02E               	goto	l27223
 21343  00114E                     l27213:
 21344                           
 21345                           ; BSR set to: 0
 21346                           ;eusartparser.c: 571:                 if(cmdMemoryIsEmpty(0,i)==0){
 21347  00114E  C0ED  F02E         	movff	eusartparser@i_7475,cmdMemoryIsEmpty@position
 21348  001152  0E00               	movlw	0
 21349  001154  ECE3  F03E         	call	_cmdMemoryIsEmpty
 21350  001158  0900               	iorlw	0
 21351  00115A  A4D8               	btfss	status,2,c
 21352  00115C  D024               	goto	l27221
 21353                           
 21354                           ;eusartparser.c: 572:                     package->data.data16=(uint16_t)i;
 21355  00115E  0100               	movlb	0	; () banked
 21356  001160  51ED               	movf	eusartparser@i_7475& (0+255),w,b
 21357  001162  6FE2               	movwf	??_eusartparser& (0+255),b
 21358  001164  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21359  001166  EE20 F002          	lfsr	2,2
 21360  00116A  51E0               	movf	eusartparser@package& (0+255),w,b
 21361  00116C  26D9               	addwf	fsr2l,f,c
 21362  00116E  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21363  001170  22DA               	addwfc	fsr2h,f,c
 21364  001172  C0E2  FFDE         	movff	??_eusartparser,postinc2
 21365  001176  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 21366                           
 21367                           ;eusartparser.c: 573:                     package->address=relcounter;
 21368  00117A  EE20 F001          	lfsr	2,1
 21369  00117E  51E0               	movf	eusartparser@package& (0+255),w,b
 21370  001180  26D9               	addwf	fsr2l,f,c
 21371  001182  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21372  001184  22DA               	addwfc	fsr2h,f,c
 21373  001186  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 21374                           
 21375                           ; BSR set to: 0
 21376                           ;eusartparser.c: 574:                     relcounter++;
 21377  00118A  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 21378                           
 21379                           ; BSR set to: 0
 21380                           ;eusartparser.c: 575:                     write_package(*package);
 21381  00118C  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21382  001190  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21383  001194  EE00  F011         	lfsr	0,write_package@package
 21384  001198  0E06               	movlw	6
 21385  00119A                     u34081:
 21386  00119A  CFDB FFEB          	movff	plusw2,plusw0
 21387  00119E  06E8               	decf	wreg,f,c
 21388  0011A0  E2FC               	bc	u34081
 21389  0011A2  EC8F  F04A         	call	_write_package	;wreg free
 21390  0011A6                     l27221:
 21391  0011A6  0100               	movlb	0	; () banked
 21392  0011A8  2BED               	incf	eusartparser@i_7475& (0+255),f,b
 21393  0011AA                     l27223:
 21394                           
 21395                           ; BSR set to: 0
 21396  0011AA  0101               	movlb	1	; () banked
 21397  0011AC  51C6               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21398  0011AE  0100               	movlb	0	; () banked
 21399  0011B0  5DED               	subwf	eusartparser@i_7475& (0+255),w,b
 21400  0011B2  B0D8               	btfsc	status,0,c
 21401  0011B4  D6BE               	goto	l27123
 21402  0011B6  D7CB               	goto	l27213
 21403  0011B8                     l27229:
 21404                           
 21405                           ; BSR set to: 0
 21406                           ;eusartparser.c: 581:             relcounter=0;
 21407  0011B8  0E00               	movlw	0
 21408  0011BA  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 21409                           
 21410                           ;eusartparser.c: 582:             for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;i++)
 21411  0011BC  0E00               	movlw	0
 21412  0011BE  6FEE               	movwf	eusartparser@i_7476& (0+255),b
 21413  0011C0  D02E               	goto	l27241
 21414  0011C2                     l27231:
 21415                           
 21416                           ; BSR set to: 0
 21417                           ;eusartparser.c: 583:                 if(cmdMemoryIsEmpty(0,i)==1){
 21418  0011C2  C0EE  F02E         	movff	eusartparser@i_7476,cmdMemoryIsEmpty@position
 21419  0011C6  0E00               	movlw	0
 21420  0011C8  ECE3  F03E         	call	_cmdMemoryIsEmpty
 21421  0011CC  06E8               	decf	wreg,f,c
 21422  0011CE  A4D8               	btfss	status,2,c
 21423  0011D0  D024               	goto	l27239
 21424                           
 21425                           ;eusartparser.c: 584:                     package->data.data16=(uint16_t)i;
 21426  0011D2  0100               	movlb	0	; () banked
 21427  0011D4  51EE               	movf	eusartparser@i_7476& (0+255),w,b
 21428  0011D6  6FE2               	movwf	??_eusartparser& (0+255),b
 21429  0011D8  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21430  0011DA  EE20 F002          	lfsr	2,2
 21431  0011DE  51E0               	movf	eusartparser@package& (0+255),w,b
 21432  0011E0  26D9               	addwf	fsr2l,f,c
 21433  0011E2  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21434  0011E4  22DA               	addwfc	fsr2h,f,c
 21435  0011E6  C0E2  FFDE         	movff	??_eusartparser,postinc2
 21436  0011EA  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 21437                           
 21438                           ;eusartparser.c: 585:                     package->address=relcounter;
 21439  0011EE  EE20 F001          	lfsr	2,1
 21440  0011F2  51E0               	movf	eusartparser@package& (0+255),w,b
 21441  0011F4  26D9               	addwf	fsr2l,f,c
 21442  0011F6  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21443  0011F8  22DA               	addwfc	fsr2h,f,c
 21444  0011FA  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 21445                           
 21446                           ; BSR set to: 0
 21447                           ;eusartparser.c: 586:                     relcounter++;
 21448  0011FE  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 21449                           
 21450                           ; BSR set to: 0
 21451                           ;eusartparser.c: 587:                     write_package(*package);
 21452  001200  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21453  001204  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21454  001208  EE00  F011         	lfsr	0,write_package@package
 21455  00120C  0E06               	movlw	6
 21456  00120E                     u34111:
 21457  00120E  CFDB FFEB          	movff	plusw2,plusw0
 21458  001212  06E8               	decf	wreg,f,c
 21459  001214  E2FC               	bc	u34111
 21460  001216  EC8F  F04A         	call	_write_package	;wreg free
 21461  00121A                     l27239:
 21462  00121A  0100               	movlb	0	; () banked
 21463  00121C  2BEE               	incf	eusartparser@i_7476& (0+255),f,b
 21464  00121E                     l27241:
 21465                           
 21466                           ; BSR set to: 0
 21467  00121E  0101               	movlb	1	; () banked
 21468  001220  51C6               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21469  001222  0100               	movlb	0	; () banked
 21470  001224  5DEE               	subwf	eusartparser@i_7476& (0+255),w,b
 21471  001226  B0D8               	btfsc	status,0,c
 21472  001228  D684               	goto	l27123
 21473  00122A  D7CB               	goto	l27231
 21474  00122C                     l27247:
 21475                           
 21476                           ; BSR set to: 0
 21477                           ;eusartparser.c: 593:             done_changes=1;
 21478  00122C  0E01               	movlw	1
 21479  00122E  0101               	movlb	1	; () banked
 21480  001230  6F4E               	movwf	_done_changes& (0+255),b
 21481                           
 21482                           ;eusartparser.c: 594:             if(programmer_enable){
 21483  001232  0100               	movlb	0	; () banked
 21484  001234  517B               	movf	_programmer_enable& (0+255),w,b
 21485  001236  B4D8               	btfsc	status,2,c
 21486  001238  D6A7               	goto	l27135
 21487                           
 21488                           ; BSR set to: 0
 21489                           ;eusartparser.c: 595:                 if(save_f==0){
 21490  00123A  516E               	movf	eusartparser@save_f& (0+255),w,b
 21491  00123C  A4D8               	btfss	status,2,c
 21492  00123E  D023               	goto	l27259
 21493  001240                     u34140:
 21494                           
 21495                           ; BSR set to: 0
 21496                           ;eusartparser.c: 596:                     buffer=package->data.data16;
 21497  001240  EE20 F002          	lfsr	2,2
 21498  001244  51E0               	movf	eusartparser@package& (0+255),w,b
 21499  001246  26D9               	addwf	fsr2l,f,c
 21500  001248  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21501  00124A  22DA               	addwfc	fsr2h,f,c
 21502  00124C  CFDE F146          	movff	postinc2,eusartparser@buffer
 21503  001250  CFDD F147          	movff	postdec2,eusartparser@buffer+1
 21504                           
 21505                           ; BSR set to: 0
 21506                           ;eusartparser.c: 597:                     confirmpackage(package, 1);
 21507  001254  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 21508  001258  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 21509  00125C  0E01               	movlw	1
 21510  00125E  6E14               	movwf	confirmpackage@confirm^0,c
 21511  001260  EC44  F046         	call	_confirmpackage	;wreg free
 21512                           
 21513                           ;eusartparser.c: 598:                     write_package(*package);
 21514  001264  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21515  001268  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21516  00126C  EE00  F011         	lfsr	0,write_package@package
 21517  001270  0E06               	movlw	6
 21518  001272                     u34151:
 21519  001272  CFDB FFEB          	movff	plusw2,plusw0
 21520  001276  06E8               	decf	wreg,f,c
 21521  001278  E2FC               	bc	u34151
 21522  00127A  EC8F  F04A         	call	_write_package	;wreg free
 21523                           
 21524                           ;eusartparser.c: 599:                     save_f=1;
 21525  00127E  0E01               	movlw	1
 21526  001280  0100               	movlb	0	; () banked
 21527  001282  6F6E               	movwf	eusartparser@save_f& (0+255),b
 21528                           
 21529                           ;eusartparser.c: 600:                 }
 21530  001284  0012               	return	
 21531  001286                     l27259:
 21532                           
 21533                           ; BSR set to: 0
 21534                           ;eusartparser.c: 602:                     serial=((uint32_t)buffer<<16)+(uint32_t)packag
      +                          e->data.data16;
 21535  001286  EE20 F002          	lfsr	2,2
 21536  00128A  51E0               	movf	eusartparser@package& (0+255),w,b
 21537  00128C  26D9               	addwf	fsr2l,f,c
 21538  00128E  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21539  001290  22DA               	addwfc	fsr2h,f,c
 21540  001292  CFDE F0E2          	movff	postinc2,??_eusartparser
 21541  001296  CFDD F0E3          	movff	postdec2,??_eusartparser+1
 21542  00129A  0101               	movlb	1	; () banked
 21543  00129C  5146               	movf	eusartparser@buffer& (0+255),w,b
 21544  00129E  0100               	movlb	0	; () banked
 21545  0012A0  6FE4               	movwf	(??_eusartparser+2)& (0+255),b
 21546  0012A2  0101               	movlb	1	; () banked
 21547  0012A4  5147               	movf	(eusartparser@buffer+1)& (0+255),w,b
 21548  0012A6  0100               	movlb	0	; () banked
 21549  0012A8  6FE5               	movwf	(??_eusartparser+3)& (0+255),b
 21550  0012AA  6BE6               	clrf	(??_eusartparser+4)& (0+255),b
 21551  0012AC  6BE7               	clrf	(??_eusartparser+5)& (0+255),b
 21552  0012AE  C0E5  F0E7         	movff	??_eusartparser+3,??_eusartparser+5
 21553  0012B2  C0E4  F0E6         	movff	??_eusartparser+2,??_eusartparser+4
 21554  0012B6  6BE5               	clrf	(??_eusartparser+3)& (0+255),b
 21555  0012B8  6BE4               	clrf	(??_eusartparser+2)& (0+255),b
 21556  0012BA  51E2               	movf	??_eusartparser& (0+255),w,b
 21557  0012BC  25E4               	addwf	(??_eusartparser+2)& (0+255),w,b
 21558  0012BE  6FF8               	movwf	eusartparser@serial& (0+255),b
 21559  0012C0  51E3               	movf	(??_eusartparser+1)& (0+255),w,b
 21560  0012C2  21E5               	addwfc	(??_eusartparser+3)& (0+255),w,b
 21561  0012C4  6FF9               	movwf	(eusartparser@serial+1)& (0+255),b
 21562  0012C6  0E00               	movlw	0
 21563  0012C8  21E6               	addwfc	(??_eusartparser+4)& (0+255),w,b
 21564  0012CA  6FFA               	movwf	(eusartparser@serial+2)& (0+255),b
 21565  0012CC  0E00               	movlw	0
 21566  0012CE  21E7               	addwfc	(??_eusartparser+5)& (0+255),w,b
 21567  0012D0  6FFB               	movwf	(eusartparser@serial+3)& (0+255),b
 21568                           
 21569                           ; BSR set to: 0
 21570                           ;eusartparser.c: 603:                     if(validateRemoteSerialNumber(serial, NO, &pos
      +                          )==NoCMD){
 21571  0012D2  C0F8  F02E         	movff	eusartparser@serial,validateRemoteSerialNumber@serial
 21572  0012D6  C0F9  F02F         	movff	eusartparser@serial+1,validateRemoteSerialNumber@serial+1
 21573  0012DA  C0FA  F030         	movff	eusartparser@serial+2,validateRemoteSerialNumber@serial+2
 21574  0012DE  C0FB  F031         	movff	eusartparser@serial+3,validateRemoteSerialNumber@serial+3
 21575  0012E2  0E00               	movlw	0
 21576  0012E4  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 21577  0012E6  0EEC               	movlw	low eusartparser@pos
 21578  0012E8  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 21579  0012EA  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
 21580  0012EC  ECE5  F02E         	call	_validateRemoteSerialNumber	;wreg free
 21581  0012F0  0900               	iorlw	0
 21582  0012F2  A4D8               	btfss	status,2,c
 21583  0012F4  D04F               	goto	u34210
 21584                           
 21585                           ;eusartparser.c: 604:                         for(uint8_t i=0;;i++)
 21586  0012F6  0E00               	movlw	0
 21587  0012F8  0100               	movlb	0	; () banked
 21588  0012FA  6FF1               	movwf	eusartparser@i_7477& (0+255),b
 21589  0012FC                     l27265:
 21590                           
 21591                           ; BSR set to: 0
 21592                           ;eusartparser.c: 605:                             if(cmdMemoryIsEmpty(0,i)==1&&package->
      +                          address==0){
 21593  0012FC  C0F1  F02E         	movff	eusartparser@i_7477,cmdMemoryIsEmpty@position
 21594  001300  0E00               	movlw	0
 21595  001302  ECE3  F03E         	call	_cmdMemoryIsEmpty
 21596  001306  06E8               	decf	wreg,f,c
 21597  001308  A4D8               	btfss	status,2,c
 21598  00130A  D02D               	goto	l27277
 21599  00130C  0100               	movlb	0	; () banked
 21600  00130E  EE20 F001          	lfsr	2,1
 21601  001312  51E0               	movf	eusartparser@package& (0+255),w,b
 21602  001314  26D9               	addwf	fsr2l,f,c
 21603  001316  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21604  001318  22DA               	addwfc	fsr2h,f,c
 21605  00131A  50DF               	movf	indf2,w,c
 21606  00131C  A4D8               	btfss	status,2,c
 21607  00131E  D023               	goto	l27277
 21608                           
 21609                           ; BSR set to: 0
 21610                           ;eusartparser.c: 606:                                 saveNewSerial(0,serial,i);
 21611  001320  C0F8  F0D8         	movff	eusartparser@serial,saveNewSerial@tempSerial
 21612  001324  C0F9  F0D9         	movff	eusartparser@serial+1,saveNewSerial@tempSerial+1
 21613  001328  C0FA  F0DA         	movff	eusartparser@serial+2,saveNewSerial@tempSerial+2
 21614  00132C  C0FB  F0DB         	movff	eusartparser@serial+3,saveNewSerial@tempSerial+3
 21615  001330  C0F1  F0DC         	movff	eusartparser@i_7477,saveNewSerial@position
 21616  001334  0E00               	movlw	0
 21617  001336  EC04  F043         	call	_saveNewSerial
 21618  00133A                     l27271:
 21619                           
 21620                           ;eusartparser.c: 607:                                 confirmpackage(package, 1);
 21621  00133A  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 21622  00133E  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 21623  001342  0E01               	movlw	1
 21624  001344  6E14               	movwf	confirmpackage@confirm^0,c
 21625  001346  EC44  F046         	call	_confirmpackage	;wreg free
 21626  00134A                     l27273:
 21627                           
 21628                           ;eusartparser.c: 608:                                 write_package(*package);
 21629  00134A  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21630  00134E  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21631  001352  EE00  F011         	lfsr	0,write_package@package
 21632  001356  0E06               	movlw	6
 21633  001358                     u34191:
 21634  001358  CFDB FFEB          	movff	plusw2,plusw0
 21635  00135C  06E8               	decf	wreg,f,c
 21636  00135E  E2FC               	bc	u34191
 21637  001360  EC8F  F04A         	call	_write_package	;wreg free
 21638                           
 21639                           ;eusartparser.c: 609:                                 break;
 21640  001364  D023               	goto	l27293
 21641  001366                     l27277:
 21642  001366  C0F1  F02E         	movff	eusartparser@i_7477,cmdMemoryIsEmpty@position
 21643  00136A  0E00               	movlw	0
 21644  00136C  ECE3  F03E         	call	_cmdMemoryIsEmpty
 21645  001370  06E8               	decf	wreg,f,c
 21646  001372  A4D8               	btfss	status,2,c
 21647  001374  D009               	goto	l27281
 21648                           
 21649                           ;eusartparser.c: 612:                                 package->address--;
 21650  001376  0100               	movlb	0	; () banked
 21651  001378  EE20 F001          	lfsr	2,1
 21652  00137C  51E0               	movf	eusartparser@package& (0+255),w,b
 21653  00137E  26D9               	addwf	fsr2l,f,c
 21654  001380  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21655  001382  22DA               	addwfc	fsr2h,f,c
 21656  001384  06DF               	decf	indf2,f,c
 21657                           
 21658                           ;eusartparser.c: 613:                             }
 21659  001386  D00F               	goto	l27287
 21660  001388                     l27281:
 21661  001388  0100               	movlb	0	; () banked
 21662  00138A  51F1               	movf	eusartparser@i_7477& (0+255),w,b
 21663  00138C  0101               	movlb	1	; () banked
 21664  00138E  19C6               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21665  001390  A4D8               	btfss	status,2,c
 21666  001392  D009               	goto	l27287
 21667  001394                     u34210:
 21668                           
 21669                           ;eusartparser.c: 615:                                 confirmpackage(package, 0);
 21670  001394  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 21671  001398  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 21672  00139C  0E00               	movlw	0
 21673  00139E  6E14               	movwf	confirmpackage@confirm^0,c
 21674  0013A0  EC44  F046         	call	_confirmpackage	;wreg free
 21675  0013A4  D7D2               	goto	l27273
 21676  0013A6                     l27287:
 21677  0013A6  0100               	movlb	0	; () banked
 21678  0013A8  2BF1               	incf	eusartparser@i_7477& (0+255),f,b
 21679  0013AA  D7A8               	goto	l27265
 21680  0013AC                     l27293:
 21681                           
 21682                           ;eusartparser.c: 624:                     save_f=0;
 21683  0013AC  0E00               	movlw	0
 21684  0013AE  0100               	movlb	0	; () banked
 21685  0013B0  6F6E               	movwf	eusartparser@save_f& (0+255),b
 21686  0013B2  0012               	return	
 21687  0013B4                     l27299:
 21688                           
 21689                           ; BSR set to: 0
 21690                           ;eusartparser.c: 633:             done_changes=1;
 21691  0013B4  0E01               	movlw	1
 21692  0013B6  0101               	movlb	1	; () banked
 21693  0013B8  6F4E               	movwf	_done_changes& (0+255),b
 21694                           
 21695                           ;eusartparser.c: 634:             if(programmer_enable){
 21696  0013BA  0100               	movlb	0	; () banked
 21697  0013BC  517B               	movf	_programmer_enable& (0+255),w,b
 21698  0013BE  B4D8               	btfsc	status,2,c
 21699  0013C0  D5E3               	goto	l27135
 21700                           
 21701                           ; BSR set to: 0
 21702                           ;eusartparser.c: 635:                 for(uint8_t i=0;;i++)
 21703  0013C2  0E00               	movlw	0
 21704  0013C4  6FF2               	movwf	eusartparser@i_7478& (0+255),b
 21705  0013C6                     l27303:
 21706                           
 21707                           ; BSR set to: 0
 21708                           ;eusartparser.c: 636:                     if(cmdMemoryIsEmpty(0,i)==0&&package->address=
      +                          =0){
 21709  0013C6  C0F2  F02E         	movff	eusartparser@i_7478,cmdMemoryIsEmpty@position
 21710  0013CA  0E00               	movlw	0
 21711  0013CC  ECE3  F03E         	call	_cmdMemoryIsEmpty
 21712  0013D0  0900               	iorlw	0
 21713  0013D2  A4D8               	btfss	status,2,c
 21714  0013D4  D010               	goto	l27317
 21715  0013D6  0100               	movlb	0	; () banked
 21716  0013D8  EE20 F001          	lfsr	2,1
 21717  0013DC  51E0               	movf	eusartparser@package& (0+255),w,b
 21718  0013DE  26D9               	addwf	fsr2l,f,c
 21719  0013E0  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21720  0013E2  22DA               	addwfc	fsr2h,f,c
 21721  0013E4  50DF               	movf	indf2,w,c
 21722  0013E6  A4D8               	btfss	status,2,c
 21723  0013E8  D006               	goto	l27317
 21724                           
 21725                           ; BSR set to: 0
 21726                           ;eusartparser.c: 637:                         RemoveSerial(0, i);
 21727  0013EA  C0F2  F0D8         	movff	eusartparser@i_7478,RemoveSerial@position
 21728  0013EE  0E00               	movlw	0
 21729  0013F0  ECCF  F040         	call	_RemoveSerial
 21730  0013F4  D7A2               	goto	l27271
 21731  0013F6                     l27317:
 21732  0013F6  C0F2  F02E         	movff	eusartparser@i_7478,cmdMemoryIsEmpty@position
 21733  0013FA  0E00               	movlw	0
 21734  0013FC  ECE3  F03E         	call	_cmdMemoryIsEmpty
 21735  001400  0900               	iorlw	0
 21736  001402  A4D8               	btfss	status,2,c
 21737  001404  D009               	goto	l27321
 21738                           
 21739                           ;eusartparser.c: 644:                         package->address--;
 21740  001406  0100               	movlb	0	; () banked
 21741  001408  EE20 F001          	lfsr	2,1
 21742  00140C  51E0               	movf	eusartparser@package& (0+255),w,b
 21743  00140E  26D9               	addwf	fsr2l,f,c
 21744  001410  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21745  001412  22DA               	addwfc	fsr2h,f,c
 21746  001414  06DF               	decf	indf2,f,c
 21747                           
 21748                           ;eusartparser.c: 645:                     }
 21749  001416  D006               	goto	l27329
 21750  001418                     l27321:
 21751  001418  0100               	movlb	0	; () banked
 21752  00141A  51F2               	movf	eusartparser@i_7478& (0+255),w,b
 21753  00141C  0101               	movlb	1	; () banked
 21754  00141E  19C6               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21755  001420  B4D8               	btfsc	status,2,c
 21756  001422  D7B8               	goto	u34210
 21757  001424                     l27329:
 21758  001424  0100               	movlb	0	; () banked
 21759  001426  2BF2               	incf	eusartparser@i_7478& (0+255),f,b
 21760  001428  D7CE               	goto	l27303
 21761  00142A                     l27335:
 21762                           
 21763                           ; BSR set to: 0
 21764                           ;eusartparser.c: 659:             for(uint8_t i=0;;i++)
 21765  00142A  0E00               	movlw	0
 21766  00142C  6FF3               	movwf	eusartparser@i_7479& (0+255),b
 21767  00142E                     l27337:
 21768                           
 21769                           ; BSR set to: 0
 21770                           ;eusartparser.c: 660:                 if(cmdMemoryIsEmpty(0,i)==0&&package->address==0){
 21771  00142E  C0F3  F02E         	movff	eusartparser@i_7479,cmdMemoryIsEmpty@position
 21772  001432  0E00               	movlw	0
 21773  001434  ECE3  F03E         	call	_cmdMemoryIsEmpty
 21774  001438  0900               	iorlw	0
 21775  00143A  A4D8               	btfss	status,2,c
 21776  00143C  D02A               	goto	l27357
 21777  00143E  0100               	movlb	0	; () banked
 21778  001440  EE20 F001          	lfsr	2,1
 21779  001444  51E0               	movf	eusartparser@package& (0+255),w,b
 21780  001446  26D9               	addwf	fsr2l,f,c
 21781  001448  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21782  00144A  22DA               	addwfc	fsr2h,f,c
 21783  00144C  50DF               	movf	indf2,w,c
 21784  00144E  A4D8               	btfss	status,2,c
 21785  001450  D020               	goto	l27357
 21786                           
 21787                           ; BSR set to: 0
 21788                           ;eusartparser.c: 661:                     ReadSerial(0, &serial, i);
 21789  001452  0EF8               	movlw	low eusartparser@serial
 21790  001454  6E2E               	movwf	ReadSerial@tempSerial^0,c
 21791  001456  C0F3  F02F         	movff	eusartparser@i_7479,ReadSerial@position
 21792  00145A  0E00               	movlw	0
 21793  00145C  EC76  F043         	call	_ReadSerial
 21794                           
 21795                           ;eusartparser.c: 662:                     package->data.data16=(uint16_t)serial;
 21796  001460  0100               	movlb	0	; () banked
 21797  001462  EE20 F002          	lfsr	2,2
 21798  001466  51E0               	movf	eusartparser@package& (0+255),w,b
 21799  001468  26D9               	addwf	fsr2l,f,c
 21800  00146A  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21801  00146C  22DA               	addwfc	fsr2h,f,c
 21802  00146E  C0F8  FFDE         	movff	eusartparser@serial,postinc2
 21803  001472  C0F9  FFDD         	movff	eusartparser@serial+1,postdec2
 21804                           
 21805                           ; BSR set to: 0
 21806                           ;eusartparser.c: 663:                     write_package(*package);
 21807  001476  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21808  00147A  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21809  00147E  EE00  F011         	lfsr	0,write_package@package
 21810  001482  0E06               	movlw	6
 21811  001484                     u34291:
 21812  001484  CFDB FFEB          	movff	plusw2,plusw0
 21813  001488  06E8               	decf	wreg,f,c
 21814  00148A  E2FC               	bc	u34291
 21815  00148C  EC8F  F04A         	call	_write_package	;wreg free
 21816  001490  D1E0               	goto	l27541
 21817  001492                     l27357:
 21818  001492  C0F3  F02E         	movff	eusartparser@i_7479,cmdMemoryIsEmpty@position
 21819  001496  0E00               	movlw	0
 21820  001498  ECE3  F03E         	call	_cmdMemoryIsEmpty
 21821  00149C  0900               	iorlw	0
 21822  00149E  A4D8               	btfss	status,2,c
 21823  0014A0  D009               	goto	l27361
 21824                           
 21825                           ;eusartparser.c: 671:                     package->address--;
 21826  0014A2  0100               	movlb	0	; () banked
 21827  0014A4  EE20 F001          	lfsr	2,1
 21828  0014A8  51E0               	movf	eusartparser@package& (0+255),w,b
 21829  0014AA  26D9               	addwf	fsr2l,f,c
 21830  0014AC  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21831  0014AE  22DA               	addwfc	fsr2h,f,c
 21832  0014B0  06DF               	decf	indf2,f,c
 21833                           
 21834                           ;eusartparser.c: 672:                 }
 21835  0014B2  D006               	goto	l27367
 21836  0014B4                     l27361:
 21837  0014B4  0100               	movlb	0	; () banked
 21838  0014B6  51F3               	movf	eusartparser@i_7479& (0+255),w,b
 21839  0014B8  0101               	movlb	1	; () banked
 21840  0014BA  19C6               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21841  0014BC  B4D8               	btfsc	status,2,c
 21842  0014BE  D564               	goto	l27135
 21843  0014C0                     l27367:
 21844  0014C0  0100               	movlb	0	; () banked
 21845  0014C2  2BF3               	incf	eusartparser@i_7479& (0+255),f,b
 21846  0014C4  D7B4               	goto	l27337
 21847  0014C6                     l27369:
 21848                           
 21849                           ; BSR set to: 0
 21850                           ;eusartparser.c: 680:                 package->address=0x00;
 21851  0014C6  EE20 F001          	lfsr	2,1
 21852  0014CA  51E0               	movf	eusartparser@package& (0+255),w,b
 21853  0014CC  26D9               	addwf	fsr2l,f,c
 21854  0014CE  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21855  0014D0  22DA               	addwfc	fsr2h,f,c
 21856  0014D2  0E00               	movlw	0
 21857  0014D4  6EDF               	movwf	indf2,c
 21858                           
 21859                           ;eusartparser.c: 681:                 package->data.data16=var_sys_NVM.positionRemotesWa
      +                          lk;
 21860  0014D6  0101               	movlb	1	; () banked
 21861  0014D8  51C7               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21862  0014DA  0100               	movlb	0	; () banked
 21863  0014DC  6FE2               	movwf	??_eusartparser& (0+255),b
 21864  0014DE  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21865  0014E0  EE20 F002          	lfsr	2,2
 21866  0014E4  51E0               	movf	eusartparser@package& (0+255),w,b
 21867  0014E6  26D9               	addwf	fsr2l,f,c
 21868  0014E8  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21869  0014EA  22DA               	addwfc	fsr2h,f,c
 21870  0014EC  C0E2  FFDE         	movff	??_eusartparser,postinc2
 21871  0014F0  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 21872                           
 21873                           ; BSR set to: 0
 21874                           ;eusartparser.c: 682:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesWalk;
      +                          i++)
 21875  0014F4  0E00               	movlw	0
 21876  0014F6  6FEA               	movwf	eusartparser@i_7481& (0+255),b
 21877  0014F8  D014               	goto	l27379
 21878  0014FA                     l27373:
 21879                           
 21880                           ; BSR set to: 0
 21881                           ;eusartparser.c: 683:                 if(cmdMemoryIsEmpty(1,i)==1)
 21882  0014FA  C0EA  F02E         	movff	eusartparser@i_7481,cmdMemoryIsEmpty@position
 21883  0014FE  0E01               	movlw	1
 21884  001500  ECE3  F03E         	call	_cmdMemoryIsEmpty
 21885  001504  06E8               	decf	wreg,f,c
 21886  001506  A4D8               	btfss	status,2,c
 21887  001508  D00A               	goto	l27377
 21888                           
 21889                           ;eusartparser.c: 684:                     package->data.data16--;
 21890  00150A  0100               	movlb	0	; () banked
 21891  00150C  EE20 F002          	lfsr	2,2
 21892  001510  51E0               	movf	eusartparser@package& (0+255),w,b
 21893  001512  26D9               	addwf	fsr2l,f,c
 21894  001514  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21895  001516  22DA               	addwfc	fsr2h,f,c
 21896  001518  06DE               	decf	postinc2,f,c
 21897  00151A  0E00               	movlw	0
 21898  00151C  5ADD               	subwfb	postdec2,f,c
 21899  00151E                     l27377:
 21900  00151E  0100               	movlb	0	; () banked
 21901  001520  2BEA               	incf	eusartparser@i_7481& (0+255),f,b
 21902  001522                     l27379:
 21903                           
 21904                           ; BSR set to: 0
 21905  001522  0101               	movlb	1	; () banked
 21906  001524  51C7               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21907  001526  0100               	movlb	0	; () banked
 21908  001528  5DEA               	subwf	eusartparser@i_7481& (0+255),w,b
 21909  00152A  B0D8               	btfsc	status,0,c
 21910  00152C  D5CD               	goto	u34030
 21911  00152E  D7E5               	goto	l27373
 21912  001530                     l27387:
 21913                           
 21914                           ; BSR set to: 0
 21915                           ;eusartparser.c: 691:             package->address=0x00;
 21916  001530  EE20 F001          	lfsr	2,1
 21917  001534  51E0               	movf	eusartparser@package& (0+255),w,b
 21918  001536  26D9               	addwf	fsr2l,f,c
 21919  001538  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21920  00153A  22DA               	addwfc	fsr2h,f,c
 21921  00153C  0E00               	movlw	0
 21922  00153E  6EDF               	movwf	indf2,c
 21923                           
 21924                           ;eusartparser.c: 692:             package->data.data16=0;
 21925  001540  EE20 F002          	lfsr	2,2
 21926  001544  51E0               	movf	eusartparser@package& (0+255),w,b
 21927  001546  26D9               	addwf	fsr2l,f,c
 21928  001548  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21929  00154A  22DA               	addwfc	fsr2h,f,c
 21930  00154C  0E00               	movlw	0
 21931  00154E  6EDE               	movwf	postinc2,c
 21932  001550  0E00               	movlw	0
 21933  001552  6EDD               	movwf	postdec2,c
 21934                           
 21935                           ; BSR set to: 0
 21936                           ;eusartparser.c: 693:             for(uint8_t i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 21937  001554  0E00               	movlw	0
 21938  001556  6FEB               	movwf	eusartparser@i_7482& (0+255),b
 21939  001558  D014               	goto	l27397
 21940  00155A                     l27391:
 21941                           
 21942                           ; BSR set to: 0
 21943                           ;eusartparser.c: 694:             if(cmdMemoryIsEmpty(1,i)==1)
 21944  00155A  C0EB  F02E         	movff	eusartparser@i_7482,cmdMemoryIsEmpty@position
 21945  00155E  0E01               	movlw	1
 21946  001560  ECE3  F03E         	call	_cmdMemoryIsEmpty
 21947  001564  06E8               	decf	wreg,f,c
 21948  001566  A4D8               	btfss	status,2,c
 21949  001568  D00A               	goto	l27395
 21950                           
 21951                           ;eusartparser.c: 695:                 package->data.data16++;
 21952  00156A  0100               	movlb	0	; () banked
 21953  00156C  EE20 F002          	lfsr	2,2
 21954  001570  51E0               	movf	eusartparser@package& (0+255),w,b
 21955  001572  26D9               	addwf	fsr2l,f,c
 21956  001574  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21957  001576  22DA               	addwfc	fsr2h,f,c
 21958  001578  2ADE               	incf	postinc2,f,c
 21959  00157A  0E00               	movlw	0
 21960  00157C  22DD               	addwfc	postdec2,f,c
 21961  00157E                     l27395:
 21962  00157E  0100               	movlb	0	; () banked
 21963  001580  2BEB               	incf	eusartparser@i_7482& (0+255),f,b
 21964  001582                     l27397:
 21965                           
 21966                           ; BSR set to: 0
 21967  001582  0101               	movlb	1	; () banked
 21968  001584  51C7               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21969  001586  0100               	movlb	0	; () banked
 21970  001588  5DEB               	subwf	eusartparser@i_7482& (0+255),w,b
 21971  00158A  B0D8               	btfsc	status,0,c
 21972  00158C  D59D               	goto	u34030
 21973  00158E  D7E5               	goto	l27391
 21974  001590                     l27405:
 21975                           
 21976                           ; BSR set to: 0
 21977                           ;eusartparser.c: 701:             relcounter=0;
 21978  001590  0E00               	movlw	0
 21979  001592  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 21980                           
 21981                           ;eusartparser.c: 702:             for(uint8_t i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 21982  001594  0E00               	movlw	0
 21983  001596  6FEF               	movwf	eusartparser@i_7483& (0+255),b
 21984  001598  D02E               	goto	l27417
 21985  00159A                     l27407:
 21986                           
 21987                           ; BSR set to: 0
 21988                           ;eusartparser.c: 703:                 if(cmdMemoryIsEmpty(1,i)==0){
 21989  00159A  C0EF  F02E         	movff	eusartparser@i_7483,cmdMemoryIsEmpty@position
 21990  00159E  0E01               	movlw	1
 21991  0015A0  ECE3  F03E         	call	_cmdMemoryIsEmpty
 21992  0015A4  0900               	iorlw	0
 21993  0015A6  A4D8               	btfss	status,2,c
 21994  0015A8  D024               	goto	l27415
 21995                           
 21996                           ;eusartparser.c: 704:                     package->data.data16=(uint16_t)i;
 21997  0015AA  0100               	movlb	0	; () banked
 21998  0015AC  51EF               	movf	eusartparser@i_7483& (0+255),w,b
 21999  0015AE  6FE2               	movwf	??_eusartparser& (0+255),b
 22000  0015B0  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 22001  0015B2  EE20 F002          	lfsr	2,2
 22002  0015B6  51E0               	movf	eusartparser@package& (0+255),w,b
 22003  0015B8  26D9               	addwf	fsr2l,f,c
 22004  0015BA  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 22005  0015BC  22DA               	addwfc	fsr2h,f,c
 22006  0015BE  C0E2  FFDE         	movff	??_eusartparser,postinc2
 22007  0015C2  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 22008                           
 22009                           ;eusartparser.c: 705:                     package->address=relcounter;
 22010  0015C6  EE20 F001          	lfsr	2,1
 22011  0015CA  51E0               	movf	eusartparser@package& (0+255),w,b
 22012  0015CC  26D9               	addwf	fsr2l,f,c
 22013  0015CE  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 22014  0015D0  22DA               	addwfc	fsr2h,f,c
 22015  0015D2  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 22016                           
 22017                           ; BSR set to: 0
 22018                           ;eusartparser.c: 706:                     relcounter++;
 22019  0015D6  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 22020                           
 22021                           ; BSR set to: 0
 22022                           ;eusartparser.c: 707:                     write_package(*package);
 22023  0015D8  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 22024  0015DC  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 22025  0015E0  EE00  F011         	lfsr	0,write_package@package
 22026  0015E4  0E06               	movlw	6
 22027  0015E6                     u34371:
 22028  0015E6  CFDB FFEB          	movff	plusw2,plusw0
 22029  0015EA  06E8               	decf	wreg,f,c
 22030  0015EC  E2FC               	bc	u34371
 22031  0015EE  EC8F  F04A         	call	_write_package	;wreg free
 22032  0015F2                     l27415:
 22033  0015F2  0100               	movlb	0	; () banked
 22034  0015F4  2BEF               	incf	eusartparser@i_7483& (0+255),f,b
 22035  0015F6                     l27417:
 22036                           
 22037                           ; BSR set to: 0
 22038  0015F6  0101               	movlb	1	; () banked
 22039  0015F8  51C7               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 22040  0015FA  0100               	movlb	0	; () banked
 22041  0015FC  5DEF               	subwf	eusartparser@i_7483& (0+255),w,b
 22042  0015FE  B0D8               	btfsc	status,0,c
 22043  001600  D498               	goto	l27123
 22044  001602  D7CB               	goto	l27407
 22045  001604                     l27423:
 22046                           
 22047                           ; BSR set to: 0
 22048                           ;eusartparser.c: 713:             relcounter=0;
 22049  001604  0E00               	movlw	0
 22050  001606  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 22051                           
 22052                           ;eusartparser.c: 714:             for(uint8_t i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 22053  001608  0E00               	movlw	0
 22054  00160A  6FF0               	movwf	eusartparser@i_7484& (0+255),b
 22055  00160C  D02E               	goto	l27435
 22056  00160E                     l27425:
 22057                           
 22058                           ; BSR set to: 0
 22059                           ;eusartparser.c: 715:                 if(cmdMemoryIsEmpty(1,i)==1){
 22060  00160E  C0F0  F02E         	movff	eusartparser@i_7484,cmdMemoryIsEmpty@position
 22061  001612  0E01               	movlw	1
 22062  001614  ECE3  F03E         	call	_cmdMemoryIsEmpty
 22063  001618  06E8               	decf	wreg,f,c
 22064  00161A  A4D8               	btfss	status,2,c
 22065  00161C  D024               	goto	l27433
 22066                           
 22067                           ;eusartparser.c: 716:                     package->data.data16=(uint16_t)i;
 22068  00161E  0100               	movlb	0	; () banked
 22069  001620  51F0               	movf	eusartparser@i_7484& (0+255),w,b
 22070  001622  6FE2               	movwf	??_eusartparser& (0+255),b
 22071  001624  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 22072  001626  EE20 F002          	lfsr	2,2
 22073  00162A  51E0               	movf	eusartparser@package& (0+255),w,b
 22074  00162C  26D9               	addwf	fsr2l,f,c
 22075  00162E  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 22076  001630  22DA               	addwfc	fsr2h,f,c
 22077  001632  C0E2  FFDE         	movff	??_eusartparser,postinc2
 22078  001636  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 22079                           
 22080                           ;eusartparser.c: 717:                     package->address=relcounter;
 22081  00163A  EE20 F001          	lfsr	2,1
 22082  00163E  51E0               	movf	eusartparser@package& (0+255),w,b
 22083  001640  26D9               	addwf	fsr2l,f,c
 22084  001642  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 22085  001644  22DA               	addwfc	fsr2h,f,c
 22086  001646  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 22087                           
 22088                           ; BSR set to: 0
 22089                           ;eusartparser.c: 718:                     relcounter++;
 22090  00164A  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 22091                           
 22092                           ; BSR set to: 0
 22093                           ;eusartparser.c: 719:                     write_package(*package);
 22094  00164C  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 22095  001650  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 22096  001654  EE00  F011         	lfsr	0,write_package@package
 22097  001658  0E06               	movlw	6
 22098  00165A                     u34401:
 22099  00165A  CFDB FFEB          	movff	plusw2,plusw0
 22100  00165E  06E8               	decf	wreg,f,c
 22101  001660  E2FC               	bc	u34401
 22102  001662  EC8F  F04A         	call	_write_package	;wreg free
 22103  001666                     l27433:
 22104  001666  0100               	movlb	0	; () banked
 22105  001668  2BF0               	incf	eusartparser@i_7484& (0+255),f,b
 22106  00166A                     l27435:
 22107                           
 22108                           ; BSR set to: 0
 22109  00166A  0101               	movlb	1	; () banked
 22110  00166C  51C7               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 22111  00166E  0100               	movlb	0	; () banked
 22112  001670  5DF0               	subwf	eusartparser@i_7484& (0+255),w,b
 22113  001672  B0D8               	btfsc	status,0,c
 22114  001674  D45E               	goto	l27123
 22115  001676  D7CB               	goto	l27425
 22116  001678                     l27441:
 22117                           
 22118                           ; BSR set to: 0
 22119                           ;eusartparser.c: 725:             done_changes=1;
 22120  001678  0E01               	movlw	1
 22121  00167A  0101               	movlb	1	; () banked
 22122  00167C  6F4E               	movwf	_done_changes& (0+255),b
 22123                           
 22124                           ;eusartparser.c: 726:             if(programmer_enable){
 22125  00167E  0100               	movlb	0	; () banked
 22126  001680  517B               	movf	_programmer_enable& (0+255),w,b
 22127  001682  B4D8               	btfsc	status,2,c
 22128  001684  D481               	goto	l27135
 22129                           
 22130                           ; BSR set to: 0
 22131                           ;eusartparser.c: 727:                 if(save_f==0){
 22132  001686  516E               	movf	eusartparser@save_f& (0+255),w,b
 22133  001688  B4D8               	btfsc	status,2,c
 22134  00168A  D5DA               	goto	u34140
 22135                           
 22136                           ; BSR set to: 0
 22137                           ;eusartparser.c: 734:                     serial=((uint32_t)buffer<<16)+(uint32_t)packag
      +                          e->data.data16;
 22138                           
 22139                           ; BSR set to: 0
 22140                           ;eusartparser.c: 728:                     buffer=package->data.data16;
 22141  00168C  EE20 F002          	lfsr	2,2
 22142  001690  51E0               	movf	eusartparser@package& (0+255),w,b
 22143  001692  26D9               	addwf	fsr2l,f,c
 22144  001694  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 22145  001696  22DA               	addwfc	fsr2h,f,c
 22146  001698  CFDE F0E2          	movff	postinc2,??_eusartparser
 22147  00169C  CFDD F0E3          	movff	postdec2,??_eusartparser+1
 22148  0016A0  0101               	movlb	1	; () banked
 22149  0016A2  5146               	movf	eusartparser@buffer& (0+255),w,b
 22150  0016A4  0100               	movlb	0	; () banked
 22151  0016A6  6FE4               	movwf	(??_eusartparser+2)& (0+255),b
 22152  0016A8  0101               	movlb	1	; () banked
 22153  0016AA  5147               	movf	(eusartparser@buffer+1)& (0+255),w,b
 22154  0016AC  0100               	movlb	0	; () banked
 22155  0016AE  6FE5               	movwf	(??_eusartparser+3)& (0+255),b
 22156  0016B0  6BE6               	clrf	(??_eusartparser+4)& (0+255),b
 22157  0016B2  6BE7               	clrf	(??_eusartparser+5)& (0+255),b
 22158  0016B4  C0E5  F0E7         	movff	??_eusartparser+3,??_eusartparser+5
 22159  0016B8  C0E4  F0E6         	movff	??_eusartparser+2,??_eusartparser+4
 22160  0016BC  6BE5               	clrf	(??_eusartparser+3)& (0+255),b
 22161  0016BE  6BE4               	clrf	(??_eusartparser+2)& (0+255),b
 22162  0016C0  51E2               	movf	??_eusartparser& (0+255),w,b
 22163  0016C2  25E4               	addwf	(??_eusartparser+2)& (0+255),w,b
 22164  0016C4  6FF8               	movwf	eusartparser@serial& (0+255),b
 22165  0016C6  51E3               	movf	(??_eusartparser+1)& (0+255),w,b
 22166  0016C8  21E5               	addwfc	(??_eusartparser+3)& (0+255),w,b
 22167  0016CA  6FF9               	movwf	(eusartparser@serial+1)& (0+255),b
 22168  0016CC  0E00               	movlw	0
 22169  0016CE  21E6               	addwfc	(??_eusartparser+4)& (0+255),w,b
 22170  0016D0  6FFA               	movwf	(eusartparser@serial+2)& (0+255),b
 22171  0016D2  0E00               	movlw	0
 22172  0016D4  21E7               	addwfc	(??_eusartparser+5)& (0+255),w,b
 22173  0016D6  6FFB               	movwf	(eusartparser@serial+3)& (0+255),b
 22174                           
 22175                           ; BSR set to: 0
 22176                           ;eusartparser.c: 735:                     if(validateRemoteSerialNumber(serial, NO, &pos
      +                          )==NoCMD){
 22177  0016D8  C0F8  F02E         	movff	eusartparser@serial,validateRemoteSerialNumber@serial
 22178  0016DC  C0F9  F02F         	movff	eusartparser@serial+1,validateRemoteSerialNumber@serial+1
 22179  0016E0  C0FA  F030         	movff	eusartparser@serial+2,validateRemoteSerialNumber@serial+2
 22180  0016E4  C0FB  F031         	movff	eusartparser@serial+3,validateRemoteSerialNumber@serial+3
 22181  0016E8  0E00               	movlw	0
 22182  0016EA  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 22183  0016EC  0EEC               	movlw	low eusartparser@pos
 22184  0016EE  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 22185  0016F0  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
 22186  0016F2  ECE5  F02E         	call	_validateRemoteSerialNumber	;wreg free
 22187  0016F6  0900               	iorlw	0
 22188  0016F8  A4D8               	btfss	status,2,c
 22189  0016FA  D64C               	goto	u34210
 22190                           
 22191                           ;eusartparser.c: 736:                         for(uint8_t i=0;;i++)
 22192  0016FC  0E00               	movlw	0
 22193  0016FE  0100               	movlb	0	; () banked
 22194  001700  6FF4               	movwf	eusartparser@i_7485& (0+255),b
 22195  001702                     l27459:
 22196                           
 22197                           ; BSR set to: 0
 22198                           ;eusartparser.c: 737:                             if(cmdMemoryIsEmpty(1,i)==1&&package->
      +                          address==0){
 22199  001702  C0F4  F02E         	movff	eusartparser@i_7485,cmdMemoryIsEmpty@position
 22200  001706  0E01               	movlw	1
 22201  001708  ECE3  F03E         	call	_cmdMemoryIsEmpty
 22202  00170C  06E8               	decf	wreg,f,c
 22203  00170E  A4D8               	btfss	status,2,c
 22204  001710  D018               	goto	l27471
 22205  001712  0100               	movlb	0	; () banked
 22206  001714  EE20 F001          	lfsr	2,1
 22207  001718  51E0               	movf	eusartparser@package& (0+255),w,b
 22208  00171A  26D9               	addwf	fsr2l,f,c
 22209  00171C  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 22210  00171E  22DA               	addwfc	fsr2h,f,c
 22211  001720  50DF               	movf	indf2,w,c
 22212  001722  A4D8               	btfss	status,2,c
 22213  001724  D00E               	goto	l27471
 22214                           
 22215                           ; BSR set to: 0
 22216                           ;eusartparser.c: 738:                                 saveNewSerial(1,serial,i);
 22217  001726  C0F8  F0D8         	movff	eusartparser@serial,saveNewSerial@tempSerial
 22218  00172A  C0F9  F0D9         	movff	eusartparser@serial+1,saveNewSerial@tempSerial+1
 22219  00172E  C0FA  F0DA         	movff	eusartparser@serial+2,saveNewSerial@tempSerial+2
 22220  001732  C0FB  F0DB         	movff	eusartparser@serial+3,saveNewSerial@tempSerial+3
 22221  001736  C0F4  F0DC         	movff	eusartparser@i_7485,saveNewSerial@position
 22222  00173A  0E01               	movlw	1
 22223  00173C  EC04  F043         	call	_saveNewSerial
 22224  001740  D5FC               	goto	l27271
 22225  001742                     l27471:
 22226  001742  C0F4  F02E         	movff	eusartparser@i_7485,cmdMemoryIsEmpty@position
 22227  001746  0E01               	movlw	1
 22228  001748  ECE3  F03E         	call	_cmdMemoryIsEmpty
 22229  00174C  06E8               	decf	wreg,f,c
 22230  00174E  A4D8               	btfss	status,2,c
 22231  001750  D009               	goto	l27475
 22232                           
 22233                           ;eusartparser.c: 744:                                 package->address--;
 22234  001752  0100               	movlb	0	; () banked
 22235  001754  EE20 F001          	lfsr	2,1
 22236  001758  51E0               	movf	eusartparser@package& (0+255),w,b
 22237  00175A  26D9               	addwf	fsr2l,f,c
 22238  00175C  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 22239  00175E  22DA               	addwfc	fsr2h,f,c
 22240  001760  06DF               	decf	indf2,f,c
 22241                           
 22242                           ;eusartparser.c: 745:                             }
 22243  001762  D006               	goto	l27481
 22244  001764                     l27475:
 22245  001764  0100               	movlb	0	; () banked
 22246  001766  51F4               	movf	eusartparser@i_7485& (0+255),w,b
 22247  001768  0101               	movlb	1	; () banked
 22248  00176A  19C7               	xorwf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 22249  00176C  B4D8               	btfsc	status,2,c
 22250  00176E  D612               	goto	u34210
 22251  001770                     l27481:
 22252  001770  0100               	movlb	0	; () banked
 22253  001772  2BF4               	incf	eusartparser@i_7485& (0+255),f,b
 22254  001774  D7C6               	goto	l27459
 22255  001776                     l27493:
 22256                           
 22257                           ; BSR set to: 0
 22258                           ;eusartparser.c: 765:             done_changes=1;
 22259  001776  0E01               	movlw	1
 22260  001778  0101               	movlb	1	; () banked
 22261  00177A  6F4E               	movwf	_done_changes& (0+255),b
 22262                           
 22263                           ;eusartparser.c: 766:             if(programmer_enable){
 22264  00177C  0100               	movlb	0	; () banked
 22265  00177E  517B               	movf	_programmer_enable& (0+255),w,b
 22266  001780  B4D8               	btfsc	status,2,c
 22267  001782  D402               	goto	l27135
 22268                           
 22269                           ; BSR set to: 0
 22270                           ;eusartparser.c: 767:                 for(uint8_t i=0;;i++)
 22271  001784  0E00               	movlw	0
 22272  001786  6FF5               	movwf	eusartparser@i_7486& (0+255),b
 22273  001788                     l27497:
 22274                           
 22275                           ; BSR set to: 0
 22276                           ;eusartparser.c: 768:                     if(cmdMemoryIsEmpty(1,i)==0&&package->address=
      +                          =0){
 22277  001788  C0F5  F02E         	movff	eusartparser@i_7486,cmdMemoryIsEmpty@position
 22278  00178C  0E01               	movlw	1
 22279  00178E  ECE3  F03E         	call	_cmdMemoryIsEmpty
 22280  001792  0900               	iorlw	0
 22281  001794  A4D8               	btfss	status,2,c
 22282  001796  D010               	goto	l27511
 22283  001798  0100               	movlb	0	; () banked
 22284  00179A  EE20 F001          	lfsr	2,1
 22285  00179E  51E0               	movf	eusartparser@package& (0+255),w,b
 22286  0017A0  26D9               	addwf	fsr2l,f,c
 22287  0017A2  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 22288  0017A4  22DA               	addwfc	fsr2h,f,c
 22289  0017A6  50DF               	movf	indf2,w,c
 22290  0017A8  A4D8               	btfss	status,2,c
 22291  0017AA  D006               	goto	l27511
 22292                           
 22293                           ; BSR set to: 0
 22294                           ;eusartparser.c: 769:                         RemoveSerial(1, i);
 22295  0017AC  C0F5  F0D8         	movff	eusartparser@i_7486,RemoveSerial@position
 22296  0017B0  0E01               	movlw	1
 22297  0017B2  ECCF  F040         	call	_RemoveSerial
 22298  0017B6  D5C1               	goto	l27271
 22299  0017B8                     l27511:
 22300  0017B8  C0F5  F02E         	movff	eusartparser@i_7486,cmdMemoryIsEmpty@position
 22301  0017BC  0E01               	movlw	1
 22302  0017BE  ECE3  F03E         	call	_cmdMemoryIsEmpty
 22303  0017C2  0900               	iorlw	0
 22304  0017C4  A4D8               	btfss	status,2,c
 22305  0017C6  D009               	goto	l27515
 22306                           
 22307                           ;eusartparser.c: 776:                         package->address--;
 22308  0017C8  0100               	movlb	0	; () banked
 22309  0017CA  EE20 F001          	lfsr	2,1
 22310  0017CE  51E0               	movf	eusartparser@package& (0+255),w,b
 22311  0017D0  26D9               	addwf	fsr2l,f,c
 22312  0017D2  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 22313  0017D4  22DA               	addwfc	fsr2h,f,c
 22314  0017D6  06DF               	decf	indf2,f,c
 22315                           
 22316                           ;eusartparser.c: 777:                     }
 22317  0017D8  D006               	goto	l27523
 22318  0017DA                     l27515:
 22319  0017DA  0100               	movlb	0	; () banked
 22320  0017DC  51F5               	movf	eusartparser@i_7486& (0+255),w,b
 22321  0017DE  0101               	movlb	1	; () banked
 22322  0017E0  19C7               	xorwf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 22323  0017E2  B4D8               	btfsc	status,2,c
 22324  0017E4  D5D7               	goto	u34210
 22325  0017E6                     l27523:
 22326  0017E6  0100               	movlb	0	; () banked
 22327  0017E8  2BF5               	incf	eusartparser@i_7486& (0+255),f,b
 22328  0017EA  D7CE               	goto	l27497
 22329  0017EC                     l27529:
 22330                           
 22331                           ; BSR set to: 0
 22332                           ;eusartparser.c: 791:             for(uint8_t i=0;;i++)
 22333  0017EC  0E00               	movlw	0
 22334  0017EE  6FF6               	movwf	eusartparser@i_7487& (0+255),b
 22335  0017F0                     l27531:
 22336                           
 22337                           ; BSR set to: 0
 22338                           ;eusartparser.c: 792:                 if(cmdMemoryIsEmpty(1,i)==0&&package->address==0){
 22339  0017F0  C0F6  F02E         	movff	eusartparser@i_7487,cmdMemoryIsEmpty@position
 22340  0017F4  0E01               	movlw	1
 22341  0017F6  ECE3  F03E         	call	_cmdMemoryIsEmpty
 22342  0017FA  0900               	iorlw	0
 22343  0017FC  A4D8               	btfss	status,2,c
 22344  0017FE  D035               	goto	l27551
 22345  001800  0100               	movlb	0	; () banked
 22346  001802  EE20 F001          	lfsr	2,1
 22347  001806  51E0               	movf	eusartparser@package& (0+255),w,b
 22348  001808  26D9               	addwf	fsr2l,f,c
 22349  00180A  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 22350  00180C  22DA               	addwfc	fsr2h,f,c
 22351  00180E  50DF               	movf	indf2,w,c
 22352  001810  A4D8               	btfss	status,2,c
 22353  001812  D02B               	goto	l27551
 22354                           
 22355                           ; BSR set to: 0
 22356                           ;eusartparser.c: 793:                     ReadSerial(1, &serial, i);
 22357  001814  0EF8               	movlw	low eusartparser@serial
 22358  001816  6E2E               	movwf	ReadSerial@tempSerial^0,c
 22359  001818  C0F6  F02F         	movff	eusartparser@i_7487,ReadSerial@position
 22360  00181C  0E01               	movlw	1
 22361  00181E  EC76  F043         	call	_ReadSerial
 22362                           
 22363                           ;eusartparser.c: 794:                     package->data.data16=(uint16_t)serial;
 22364  001822  0100               	movlb	0	; () banked
 22365  001824  EE20 F002          	lfsr	2,2
 22366  001828  51E0               	movf	eusartparser@package& (0+255),w,b
 22367  00182A  26D9               	addwf	fsr2l,f,c
 22368  00182C  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 22369  00182E  22DA               	addwfc	fsr2h,f,c
 22370  001830  C0F8  FFDE         	movff	eusartparser@serial,postinc2
 22371  001834  C0F9  FFDD         	movff	eusartparser@serial+1,postdec2
 22372                           
 22373                           ; BSR set to: 0
 22374                           ;eusartparser.c: 795:                     write_package(*package);
 22375  001838  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 22376  00183C  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 22377  001840  EE00  F011         	lfsr	0,write_package@package
 22378  001844  0E06               	movlw	6
 22379  001846                     u34561:
 22380  001846  CFDB FFEB          	movff	plusw2,plusw0
 22381  00184A  06E8               	decf	wreg,f,c
 22382  00184C  E2FC               	bc	u34561
 22383  00184E  EC8F  F04A         	call	_write_package	;wreg free
 22384  001852                     l27541:
 22385                           
 22386                           ;eusartparser.c: 796:                     package->data.data16=(uint16_t)(serial>>16);
 22387  001852  0100               	movlb	0	; () banked
 22388  001854  EE20 F002          	lfsr	2,2
 22389  001858  51E0               	movf	eusartparser@package& (0+255),w,b
 22390  00185A  26D9               	addwf	fsr2l,f,c
 22391  00185C  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 22392  00185E  22DA               	addwfc	fsr2h,f,c
 22393  001860  C0FA  FFDE         	movff	eusartparser@serial+2,postinc2
 22394  001864  C0FB  FFDD         	movff	eusartparser@serial+3,postdec2
 22395  001868  D42F               	goto	u34030
 22396  00186A                     l27551:
 22397  00186A  C0F6  F02E         	movff	eusartparser@i_7487,cmdMemoryIsEmpty@position
 22398  00186E  0E01               	movlw	1
 22399  001870  ECE3  F03E         	call	_cmdMemoryIsEmpty
 22400  001874  0900               	iorlw	0
 22401  001876  A4D8               	btfss	status,2,c
 22402  001878  D009               	goto	l27555
 22403                           
 22404                           ;eusartparser.c: 803:                     package->address--;
 22405  00187A  0100               	movlb	0	; () banked
 22406  00187C  EE20 F001          	lfsr	2,1
 22407  001880  51E0               	movf	eusartparser@package& (0+255),w,b
 22408  001882  26D9               	addwf	fsr2l,f,c
 22409  001884  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 22410  001886  22DA               	addwfc	fsr2h,f,c
 22411  001888  06DF               	decf	indf2,f,c
 22412                           
 22413                           ;eusartparser.c: 804:                 }
 22414  00188A  D007               	goto	l27561
 22415  00188C                     l27555:
 22416  00188C  0100               	movlb	0	; () banked
 22417  00188E  51F6               	movf	eusartparser@i_7487& (0+255),w,b
 22418  001890  0101               	movlb	1	; () banked
 22419  001892  19C7               	xorwf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 22420  001894  B4D8               	btfsc	status,2,c
 22421  001896  EFC4  F007         	goto	l27135
 22422  00189A                     l27561:
 22423  00189A  0100               	movlb	0	; () banked
 22424  00189C  2BF6               	incf	eusartparser@i_7487& (0+255),f,b
 22425  00189E  D7A8               	goto	l27531
 22426  0018A0                     l27563:
 22427                           
 22428                           ; BSR set to: 0
 22429                           ;eusartparser.c: 812:             updateChangesToUart();
 22430  0018A0  EC8A  F045         	call	_updateChangesToUart	;wreg free
 22431                           
 22432                           ;eusartparser.c: 813:             break;
 22433  0018A4  0012               	return	
 22434  0018A6                     l27569:
 22435                           
 22436                           ; BSR set to: 0
 22437  0018A6  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 22438  0018AA  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 22439  0018AE  50DF               	movf	indf2,w,c
 22440  0018B0  6FE2               	movwf	??_eusartparser& (0+255),b
 22441  0018B2  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 22442                           
 22443                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22444                           ; Switch size 1, requested type "simple"
 22445                           ; Number of cases is 1, Range of values is 0 to 0
 22446                           ; switch strategies available:
 22447                           ; Name         Instructions Cycles
 22448                           ; simple_byte            4     3 (average)
 22449                           ;	Chosen strategy is simple_byte
 22450  0018B4  51E3               	movf	(??_eusartparser+1)& (0+255),w,b
 22451  0018B6  0A00               	xorlw	0	; case 0
 22452  0018B8  A4D8               	btfss	status,2,c
 22453  0018BA  EFC4  F007         	goto	l27135
 22454                           
 22455                           ; BSR set to: 0
 22456                           ; Switch size 1, requested type "simple"
 22457                           ; Number of cases is 19, Range of values is 0 to 18
 22458                           ; switch strategies available:
 22459                           ; Name         Instructions Cycles
 22460                           ; simple_byte           58    30 (average)
 22461                           ;	Chosen strategy is simple_byte
 22462  0018BE  51E2               	movf	??_eusartparser& (0+255),w,b
 22463  0018C0  0A00               	xorlw	0	; case 0
 22464  0018C2  B4D8               	btfsc	status,2,c
 22465  0018C4  EF93  F007         	goto	l27121
 22466  0018C8  0A01               	xorlw	1	; case 1
 22467  0018CA  B4D8               	btfsc	status,2,c
 22468  0018CC  EFAF  F007         	goto	l27127
 22469  0018D0  0A03               	xorlw	3	; case 2
 22470  0018D2  B4D8               	btfsc	status,2,c
 22471  0018D4  EFCD  F007         	goto	l27139
 22472  0018D8  0A01               	xorlw	1	; case 3
 22473  0018DA  B4D8               	btfsc	status,2,c
 22474  0018DC  EF99  F007         	goto	l27123
 22475  0018E0  0A07               	xorlw	7	; case 4
 22476  0018E2  B4D8               	btfsc	status,2,c
 22477  0018E4  EF30  F008         	goto	l27175
 22478  0018E8  0A01               	xorlw	1	; case 5
 22479  0018EA  B4D8               	btfsc	status,2,c
 22480  0018EC  EF72  F008         	goto	l27193
 22481  0018F0  0A03               	xorlw	3	; case 6
 22482  0018F2  B4D8               	btfsc	status,2,c
 22483  0018F4  D427               	goto	l27211
 22484  0018F6  0A01               	xorlw	1	; case 7
 22485  0018F8  B4D8               	btfsc	status,2,c
 22486  0018FA  D45E               	goto	l27229
 22487  0018FC  0A0F               	xorlw	15	; case 8
 22488  0018FE  B4D8               	btfsc	status,2,c
 22489  001900  D495               	goto	l27247
 22490  001902  0A01               	xorlw	1	; case 9
 22491  001904  B4D8               	btfsc	status,2,c
 22492  001906  D556               	goto	l27299
 22493  001908  0A03               	xorlw	3	; case 10
 22494  00190A  B4D8               	btfsc	status,2,c
 22495  00190C  D58E               	goto	l27335
 22496  00190E  0A01               	xorlw	1	; case 11
 22497  001910  B4D8               	btfsc	status,2,c
 22498  001912  D5D9               	goto	l27369
 22499  001914  0A07               	xorlw	7	; case 12
 22500  001916  B4D8               	btfsc	status,2,c
 22501  001918  D60B               	goto	l27387
 22502  00191A  0A01               	xorlw	1	; case 13
 22503  00191C  B4D8               	btfsc	status,2,c
 22504  00191E  D638               	goto	l27405
 22505  001920  0A03               	xorlw	3	; case 14
 22506  001922  B4D8               	btfsc	status,2,c
 22507  001924  D66F               	goto	l27423
 22508  001926  0A01               	xorlw	1	; case 15
 22509  001928  B4D8               	btfsc	status,2,c
 22510  00192A  D6A6               	goto	l27441
 22511  00192C  0A1F               	xorlw	31	; case 16
 22512  00192E  B4D8               	btfsc	status,2,c
 22513  001930  D722               	goto	l27493
 22514  001932  0A01               	xorlw	1	; case 17
 22515  001934  B4D8               	btfsc	status,2,c
 22516  001936  D75A               	goto	l27529
 22517  001938  0A03               	xorlw	3	; case 18
 22518  00193A  B4D8               	btfsc	status,2,c
 22519  00193C  D7B1               	goto	l27563
 22520  00193E  EFC4  F007         	goto	l27135
 22521  001942                     __end_of_eusartparser:
 22522                           	callstack 0
 22523                           
 22524 ;; *************** function _write_eusartparser *****************
 22525 ;; Defined at:
 22526 ;;		line 440 in file "eusartparser.c"
 22527 ;; Parameters:    Size  Location     Type
 22528 ;;  package         7   21[COMRAM] struct package_t
 22529 ;; Auto vars:     Size  Location     Type
 22530 ;;  i               2   48[COMRAM] int 
 22531 ;; Return value:  Size  Location     Type
 22532 ;;                  1    wreg      void 
 22533 ;; Registers used:
 22534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22535 ;; Tracked objects:
 22536 ;;		On entry : 3F/0
 22537 ;;		On exit  : 0/0
 22538 ;;		Unchanged: 0/0
 22539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22540 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22541 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22542 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22543 ;;      Totals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22544 ;;Total ram usage:       29 bytes
 22545 ;; Hardware stack levels used: 1
 22546 ;; Hardware stack levels required when called: 5
 22547 ;; This function calls:
 22548 ;;		___wmul
 22549 ;; This function is called by:
 22550 ;;		_eusartparser
 22551 ;; This function uses a non-reentrant model
 22552 ;;
 22553                           
 22554                           	psect	text75
 22555  003480                     __ptext75:
 22556                           	callstack 0
 22557  003480                     _write_eusartparser:
 22558                           	callstack 24
 22559                           
 22560                           ; BSR set to: 0
 22561                           ;eusartparser.c: 441:     for (int i=0;i<sizeof(systemVarAddresses)/sizeof(systemVarAddr
      +                          esses[0]);i++){
 22562                           
 22563                           ;incstack = 0
 22564  003480  0E00               	movlw	0
 22565  003482  6E32               	movwf	(write_eusartparser@i+1)^0,c
 22566  003484  0E00               	movlw	0
 22567  003486  6E31               	movwf	write_eusartparser@i^0,c
 22568  003488                     l24111:
 22569                           
 22570                           ;eusartparser.c: 442:         if(systemVarAddresses[i].key==package.address){
 22571  003488  C031  F010         	movff	write_eusartparser@i,___wmul@multiplier
 22572  00348C  C032  F011         	movff	write_eusartparser@i+1,___wmul@multiplier+1
 22573  003490  0E00               	movlw	0
 22574  003492  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 22575  003494  0E05               	movlw	5
 22576  003496  6E12               	movwf	___wmul@multiplicand^0,c
 22577  003498  ECD0  F04B         	call	___wmul	;wreg free
 22578  00349C  0E03               	movlw	low (_systemVarAddresses+3)
 22579  00349E  2410               	addwf	?___wmul^0,w,c
 22580  0034A0  6ED9               	movwf	fsr2l,c
 22581  0034A2  0E04               	movlw	high (_systemVarAddresses+3)
 22582  0034A4  2011               	addwfc	(?___wmul+1)^0,w,c
 22583  0034A6  6EDA               	movwf	fsr2h,c
 22584  0034A8  5017               	movf	(write_eusartparser@package+1)^0,w,c
 22585  0034AA  18DE               	xorwf	postinc2,w,c
 22586  0034AC  B4D8               	btfsc	status,2,c
 22587  0034AE  D10A               	goto	l24125
 22588  0034B0  D12A               	goto	l24127
 22589  0034B2                     l24115:
 22590                           
 22591                           ;eusartparser.c: 445:                     *(uint8_t*)(systemVarAddresses[i].address)=pac
      +                          kage.data.data8[systemVarAddresses[i].byte];
 22592  0034B2  C031  F010         	movff	write_eusartparser@i,___wmul@multiplier
 22593  0034B6  C032  F011         	movff	write_eusartparser@i+1,___wmul@multiplier+1
 22594  0034BA  0E00               	movlw	0
 22595  0034BC  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 22596  0034BE  0E05               	movlw	5
 22597  0034C0  6E12               	movwf	___wmul@multiplicand^0,c
 22598  0034C2  ECD0  F04B         	call	___wmul	;wreg free
 22599  0034C6  0E02               	movlw	low (_systemVarAddresses+2)
 22600  0034C8  2410               	addwf	?___wmul^0,w,c
 22601  0034CA  6ED9               	movwf	fsr2l,c
 22602  0034CC  0E04               	movlw	high (_systemVarAddresses+2)
 22603  0034CE  2011               	addwfc	(?___wmul+1)^0,w,c
 22604  0034D0  6EDA               	movwf	fsr2h,c
 22605  0034D2  50DF               	movf	indf2,w,c
 22606  0034D4  6E1D               	movwf	??_write_eusartparser^0,c
 22607  0034D6  0E02               	movlw	2
 22608  0034D8  261D               	addwf	??_write_eusartparser^0,f,c
 22609  0034DA  501D               	movf	??_write_eusartparser^0,w,c
 22610  0034DC  0F16               	addlw	low write_eusartparser@package
 22611  0034DE  6ED9               	movwf	fsr2l,c
 22612  0034E0  6ADA               	clrf	fsr2h,c
 22613  0034E2  C031  F010         	movff	write_eusartparser@i,___wmul@multiplier
 22614  0034E6  C032  F011         	movff	write_eusartparser@i+1,___wmul@multiplier+1
 22615  0034EA  0E00               	movlw	0
 22616  0034EC  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 22617  0034EE  0E05               	movlw	5
 22618  0034F0  6E12               	movwf	___wmul@multiplicand^0,c
 22619  0034F2  ECD0  F04B         	call	___wmul	;wreg free
 22620  0034F6  0E00               	movlw	low _systemVarAddresses
 22621  0034F8  2410               	addwf	?___wmul^0,w,c
 22622  0034FA  6EE1               	movwf	fsr1l,c
 22623  0034FC  0E04               	movlw	high _systemVarAddresses
 22624  0034FE  2011               	addwfc	(?___wmul+1)^0,w,c
 22625  003500  6EE2               	movwf	fsr1h,c
 22626  003502  CFE6 F01E          	movff	postinc1,??_write_eusartparser+1
 22627  003506  CFE5 F01F          	movff	postdec1,??_write_eusartparser+2
 22628  00350A  C01E  FFE1         	movff	??_write_eusartparser+1,fsr1l
 22629  00350E  C01F  FFE2         	movff	??_write_eusartparser+2,fsr1h
 22630  003512  CFDF FFE7          	movff	indf2,indf1
 22631                           
 22632                           ;eusartparser.c: 446:                     continue;
 22633  003516  D1D7               	goto	l24135
 22634  003518                     l24117:
 22635                           
 22636                           ;eusartparser.c: 448:                     *(uint16_t*)(systemVarAddresses[i].address)=pa
      +                          ckage.data.data16;
 22637  003518  C031  F010         	movff	write_eusartparser@i,___wmul@multiplier
 22638  00351C  C032  F011         	movff	write_eusartparser@i+1,___wmul@multiplier+1
 22639  003520  0E00               	movlw	0
 22640  003522  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 22641  003524  0E05               	movlw	5
 22642  003526  6E12               	movwf	___wmul@multiplicand^0,c
 22643  003528  ECD0  F04B         	call	___wmul	;wreg free
 22644  00352C  0E00               	movlw	low _systemVarAddresses
 22645  00352E  2410               	addwf	?___wmul^0,w,c
 22646  003530  6ED9               	movwf	fsr2l,c
 22647  003532  0E04               	movlw	high _systemVarAddresses
 22648  003534  2011               	addwfc	(?___wmul+1)^0,w,c
 22649  003536  6EDA               	movwf	fsr2h,c
 22650  003538  CFDE F01D          	movff	postinc2,??_write_eusartparser
 22651  00353C  CFDD F01E          	movff	postdec2,??_write_eusartparser+1
 22652  003540  C01D  FFD9         	movff	??_write_eusartparser,fsr2l
 22653  003544  C01E  FFDA         	movff	??_write_eusartparser+1,fsr2h
 22654  003548  C018  FFDE         	movff	write_eusartparser@package+2,postinc2
 22655  00354C  C019  FFDD         	movff	write_eusartparser@package+3,postdec2
 22656                           
 22657                           ;eusartparser.c: 449:                     break;
 22658  003550  D0DA               	goto	l24127
 22659  003552                     l24119:
 22660                           
 22661                           ;eusartparser.c: 451:                     *(uint32_t*)(systemVarAddresses[i].address)=*(
      +                          uint32_t*)(systemVarAddresses[i].address)|((uint32_t)(package.data.data16&0xFFFF)<<(uint
      +                          8_t)(1*16));
 22662  003552  C031  F010         	movff	write_eusartparser@i,___wmul@multiplier
 22663  003556  C032  F011         	movff	write_eusartparser@i+1,___wmul@multiplier+1
 22664  00355A  0E00               	movlw	0
 22665  00355C  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 22666  00355E  0E05               	movlw	5
 22667  003560  6E12               	movwf	___wmul@multiplicand^0,c
 22668  003562  ECD0  F04B         	call	___wmul	;wreg free
 22669  003566  0E00               	movlw	low _systemVarAddresses
 22670  003568  2410               	addwf	?___wmul^0,w,c
 22671  00356A  6ED9               	movwf	fsr2l,c
 22672  00356C  0E04               	movlw	high _systemVarAddresses
 22673  00356E  2011               	addwfc	(?___wmul+1)^0,w,c
 22674  003570  6EDA               	movwf	fsr2h,c
 22675  003572  CFDE F01D          	movff	postinc2,??_write_eusartparser
 22676  003576  CFDD F01E          	movff	postdec2,??_write_eusartparser+1
 22677  00357A  C01D  FFD9         	movff	??_write_eusartparser,fsr2l
 22678  00357E  C01E  FFDA         	movff	??_write_eusartparser+1,fsr2h
 22679  003582  CFDE F01F          	movff	postinc2,??_write_eusartparser+2
 22680  003586  CFDE F020          	movff	postinc2,??_write_eusartparser+3
 22681  00358A  CFDE F021          	movff	postinc2,??_write_eusartparser+4
 22682  00358E  CFDE F022          	movff	postinc2,??_write_eusartparser+5
 22683  003592  5018               	movf	(write_eusartparser@package+2)^0,w,c
 22684  003594  6E23               	movwf	(??_write_eusartparser+6)^0,c
 22685  003596  5019               	movf	(write_eusartparser@package+3)^0,w,c
 22686  003598  6E24               	movwf	(??_write_eusartparser+7)^0,c
 22687  00359A  6A25               	clrf	(??_write_eusartparser+8)^0,c
 22688  00359C  6A26               	clrf	(??_write_eusartparser+9)^0,c
 22689  00359E  C024  F026         	movff	??_write_eusartparser+7,??_write_eusartparser+9
 22690  0035A2  C023  F025         	movff	??_write_eusartparser+6,??_write_eusartparser+8
 22691  0035A6  6A24               	clrf	(??_write_eusartparser+7)^0,c
 22692  0035A8  6A23               	clrf	(??_write_eusartparser+6)^0,c
 22693  0035AA  501F               	movf	(??_write_eusartparser+2)^0,w,c
 22694  0035AC  1023               	iorwf	(??_write_eusartparser+6)^0,w,c
 22695  0035AE  6E27               	movwf	(??_write_eusartparser+10)^0,c
 22696  0035B0  5020               	movf	(??_write_eusartparser+3)^0,w,c
 22697  0035B2  1024               	iorwf	(??_write_eusartparser+7)^0,w,c
 22698  0035B4  6E28               	movwf	(??_write_eusartparser+11)^0,c
 22699  0035B6  5021               	movf	(??_write_eusartparser+4)^0,w,c
 22700  0035B8  1025               	iorwf	(??_write_eusartparser+8)^0,w,c
 22701  0035BA  6E29               	movwf	(??_write_eusartparser+12)^0,c
 22702  0035BC  5022               	movf	(??_write_eusartparser+5)^0,w,c
 22703  0035BE  1026               	iorwf	(??_write_eusartparser+9)^0,w,c
 22704  0035C0  6E2A               	movwf	(??_write_eusartparser+13)^0,c
 22705  0035C2  C031  F010         	movff	write_eusartparser@i,___wmul@multiplier
 22706  0035C6  C032  F011         	movff	write_eusartparser@i+1,___wmul@multiplier+1
 22707  0035CA  0E00               	movlw	0
 22708  0035CC  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 22709  0035CE  0E05               	movlw	5
 22710  0035D0  6E12               	movwf	___wmul@multiplicand^0,c
 22711  0035D2  ECD0  F04B         	call	___wmul	;wreg free
 22712  0035D6  0E00               	movlw	low _systemVarAddresses
 22713  0035D8  2410               	addwf	?___wmul^0,w,c
 22714  0035DA  6ED9               	movwf	fsr2l,c
 22715  0035DC  0E04               	movlw	high _systemVarAddresses
 22716  0035DE  2011               	addwfc	(?___wmul+1)^0,w,c
 22717  0035E0  6EDA               	movwf	fsr2h,c
 22718  0035E2  CFDE F02B          	movff	postinc2,??_write_eusartparser+14
 22719  0035E6  CFDD F02C          	movff	postdec2,??_write_eusartparser+15
 22720  0035EA  C02B  FFD9         	movff	??_write_eusartparser+14,fsr2l
 22721  0035EE  C02C  FFDA         	movff	??_write_eusartparser+15,fsr2h
 22722  0035F2  C027  FFDE         	movff	??_write_eusartparser+10,postinc2
 22723  0035F6  C028  FFDE         	movff	??_write_eusartparser+11,postinc2
 22724  0035FA  C029  FFDE         	movff	??_write_eusartparser+12,postinc2
 22725  0035FE  C02A  FFDE         	movff	??_write_eusartparser+13,postinc2
 22726                           
 22727                           ;eusartparser.c: 452:                     *(uint32_t*)(systemVarAddresses[i].address)=*(
      +                          uint32_t*)(systemVarAddresses[i].address)&~((uint32_t)(~package.data.data16&0xFFFF)<<(ui
      +                          nt8_t)(1*16));
 22728  003602  C031  F010         	movff	write_eusartparser@i,___wmul@multiplier
 22729  003606  C032  F011         	movff	write_eusartparser@i+1,___wmul@multiplier+1
 22730  00360A  0E00               	movlw	0
 22731  00360C  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 22732  00360E  0E05               	movlw	5
 22733  003610  6E12               	movwf	___wmul@multiplicand^0,c
 22734  003612  ECD0  F04B         	call	___wmul	;wreg free
 22735  003616  0E00               	movlw	low _systemVarAddresses
 22736  003618  2410               	addwf	?___wmul^0,w,c
 22737  00361A  6ED9               	movwf	fsr2l,c
 22738  00361C  0E04               	movlw	high _systemVarAddresses
 22739  00361E  2011               	addwfc	(?___wmul+1)^0,w,c
 22740  003620  6EDA               	movwf	fsr2h,c
 22741  003622  CFDE F01D          	movff	postinc2,??_write_eusartparser
 22742  003626  CFDD F01E          	movff	postdec2,??_write_eusartparser+1
 22743  00362A  C01D  FFD9         	movff	??_write_eusartparser,fsr2l
 22744  00362E  C01E  FFDA         	movff	??_write_eusartparser+1,fsr2h
 22745  003632  CFDE F01F          	movff	postinc2,??_write_eusartparser+2
 22746  003636  CFDE F020          	movff	postinc2,??_write_eusartparser+3
 22747  00363A  CFDE F021          	movff	postinc2,??_write_eusartparser+4
 22748  00363E  CFDE F022          	movff	postinc2,??_write_eusartparser+5
 22749  003642  1C18               	comf	(write_eusartparser@package+2)^0,w,c
 22750  003644  6E23               	movwf	(??_write_eusartparser+6)^0,c
 22751  003646  1C19               	comf	(write_eusartparser@package+3)^0,w,c
 22752  003648  6E24               	movwf	(??_write_eusartparser+7)^0,c
 22753  00364A  6A25               	clrf	(??_write_eusartparser+8)^0,c
 22754  00364C  6A26               	clrf	(??_write_eusartparser+9)^0,c
 22755  00364E  C024  F026         	movff	??_write_eusartparser+7,??_write_eusartparser+9
 22756  003652  C023  F025         	movff	??_write_eusartparser+6,??_write_eusartparser+8
 22757  003656  6A24               	clrf	(??_write_eusartparser+7)^0,c
 22758  003658  6A23               	clrf	(??_write_eusartparser+6)^0,c
 22759  00365A  1C23               	comf	(??_write_eusartparser+6)^0,w,c
 22760  00365C  6E27               	movwf	(??_write_eusartparser+10)^0,c
 22761  00365E  1C24               	comf	(??_write_eusartparser+7)^0,w,c
 22762  003660  6E28               	movwf	(??_write_eusartparser+11)^0,c
 22763  003662  1C25               	comf	(??_write_eusartparser+8)^0,w,c
 22764  003664  6E29               	movwf	(??_write_eusartparser+12)^0,c
 22765  003666  1C26               	comf	(??_write_eusartparser+9)^0,w,c
 22766  003668  6E2A               	movwf	(??_write_eusartparser+13)^0,c
 22767  00366A  501F               	movf	(??_write_eusartparser+2)^0,w,c
 22768  00366C  1427               	andwf	(??_write_eusartparser+10)^0,w,c
 22769  00366E  6E2B               	movwf	(??_write_eusartparser+14)^0,c
 22770  003670  5020               	movf	(??_write_eusartparser+3)^0,w,c
 22771  003672  1428               	andwf	(??_write_eusartparser+11)^0,w,c
 22772  003674  6E2C               	movwf	(??_write_eusartparser+15)^0,c
 22773  003676  5021               	movf	(??_write_eusartparser+4)^0,w,c
 22774  003678  1429               	andwf	(??_write_eusartparser+12)^0,w,c
 22775  00367A  6E2D               	movwf	(??_write_eusartparser+16)^0,c
 22776  00367C  5022               	movf	(??_write_eusartparser+5)^0,w,c
 22777  00367E  142A               	andwf	(??_write_eusartparser+13)^0,w,c
 22778  003680  6E2E               	movwf	(??_write_eusartparser+17)^0,c
 22779  003682  C031  F010         	movff	write_eusartparser@i,___wmul@multiplier
 22780  003686  C032  F011         	movff	write_eusartparser@i+1,___wmul@multiplier+1
 22781  00368A  0E00               	movlw	0
 22782  00368C  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 22783  00368E  0E05               	movlw	5
 22784  003690  6E12               	movwf	___wmul@multiplicand^0,c
 22785  003692  ECD0  F04B         	call	___wmul	;wreg free
 22786  003696  0E00               	movlw	low _systemVarAddresses
 22787  003698  2410               	addwf	?___wmul^0,w,c
 22788  00369A  6ED9               	movwf	fsr2l,c
 22789  00369C  0E04               	movlw	high _systemVarAddresses
 22790  00369E  2011               	addwfc	(?___wmul+1)^0,w,c
 22791  0036A0  6EDA               	movwf	fsr2h,c
 22792  0036A2  CFDE F02F          	movff	postinc2,??_write_eusartparser+18
 22793  0036A6  CFDD F030          	movff	postdec2,??_write_eusartparser+19
 22794  0036AA  C02F  FFD9         	movff	??_write_eusartparser+18,fsr2l
 22795  0036AE  C030  FFDA         	movff	??_write_eusartparser+19,fsr2h
 22796  0036B2  C02B  FFDE         	movff	??_write_eusartparser+14,postinc2
 22797  0036B6  C02C  FFDE         	movff	??_write_eusartparser+15,postinc2
 22798  0036BA  C02D  FFDE         	movff	??_write_eusartparser+16,postinc2
 22799  0036BE  C02E  FFDE         	movff	??_write_eusartparser+17,postinc2
 22800  0036C2  0012               	return	
 22801  0036C4                     l24125:
 22802  0036C4  C031  F010         	movff	write_eusartparser@i,___wmul@multiplier
 22803  0036C8  C032  F011         	movff	write_eusartparser@i+1,___wmul@multiplier+1
 22804  0036CC  0E00               	movlw	0
 22805  0036CE  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 22806  0036D0  0E05               	movlw	5
 22807  0036D2  6E12               	movwf	___wmul@multiplicand^0,c
 22808  0036D4  ECD0  F04B         	call	___wmul	;wreg free
 22809  0036D8  0E04               	movlw	low (_systemVarAddresses+4)
 22810  0036DA  2410               	addwf	?___wmul^0,w,c
 22811  0036DC  6ED9               	movwf	fsr2l,c
 22812  0036DE  0E04               	movlw	high (_systemVarAddresses+4)
 22813  0036E0  2011               	addwfc	(?___wmul+1)^0,w,c
 22814  0036E2  6EDA               	movwf	fsr2h,c
 22815  0036E4  50DF               	movf	indf2,w,c
 22816  0036E6  6E1D               	movwf	??_write_eusartparser^0,c
 22817  0036E8  6A1E               	clrf	(??_write_eusartparser+1)^0,c
 22818                           
 22819                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22820                           ; Switch size 1, requested type "simple"
 22821                           ; Number of cases is 1, Range of values is 0 to 0
 22822                           ; switch strategies available:
 22823                           ; Name         Instructions Cycles
 22824                           ; simple_byte            4     3 (average)
 22825                           ;	Chosen strategy is simple_byte
 22826  0036EA  501E               	movf	(??_write_eusartparser+1)^0,w,c
 22827  0036EC  0A00               	xorlw	0	; case 0
 22828  0036EE  A4D8               	btfss	status,2,c
 22829  0036F0  D00A               	goto	l24127
 22830                           
 22831                           ; Switch size 1, requested type "simple"
 22832                           ; Number of cases is 3, Range of values is 0 to 2
 22833                           ; switch strategies available:
 22834                           ; Name         Instructions Cycles
 22835                           ; simple_byte           10     6 (average)
 22836                           ;	Chosen strategy is simple_byte
 22837  0036F2  501D               	movf	??_write_eusartparser^0,w,c
 22838  0036F4  0A00               	xorlw	0	; case 0
 22839  0036F6  B4D8               	btfsc	status,2,c
 22840  0036F8  D6DC               	goto	l24115
 22841  0036FA  0A01               	xorlw	1	; case 1
 22842  0036FC  B4D8               	btfsc	status,2,c
 22843  0036FE  D70C               	goto	l24117
 22844  003700  0A03               	xorlw	3	; case 2
 22845  003702  B4D8               	btfsc	status,2,c
 22846  003704  D726               	goto	l24119
 22847  003706                     l24127:
 22848                           
 22849                           ;eusartparser.c: 459:         if((systemVarAddresses[i].key==package.address-1)&&(system
      +                          VarAddresses[i].size==B32)){
 22850  003706  C031  F010         	movff	write_eusartparser@i,___wmul@multiplier
 22851  00370A  C032  F011         	movff	write_eusartparser@i+1,___wmul@multiplier+1
 22852  00370E  0E00               	movlw	0
 22853  003710  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 22854  003712  0E05               	movlw	5
 22855  003714  6E12               	movwf	___wmul@multiplicand^0,c
 22856  003716  ECD0  F04B         	call	___wmul	;wreg free
 22857  00371A  0E03               	movlw	low (_systemVarAddresses+3)
 22858  00371C  2410               	addwf	?___wmul^0,w,c
 22859  00371E  6ED9               	movwf	fsr2l,c
 22860  003720  0E04               	movlw	high (_systemVarAddresses+3)
 22861  003722  2011               	addwfc	(?___wmul+1)^0,w,c
 22862  003724  6EDA               	movwf	fsr2h,c
 22863  003726  50DF               	movf	indf2,w,c
 22864  003728  6E1D               	movwf	??_write_eusartparser^0,c
 22865  00372A  6A1E               	clrf	(??_write_eusartparser+1)^0,c
 22866  00372C  0EFF               	movlw	255
 22867  00372E  6E1F               	movwf	(??_write_eusartparser+2)^0,c
 22868  003730  0EFF               	movlw	255
 22869  003732  6E20               	movwf	(??_write_eusartparser+3)^0,c
 22870  003734  5017               	movf	(write_eusartparser@package+1)^0,w,c
 22871  003736  6E21               	movwf	(??_write_eusartparser+4)^0,c
 22872  003738  6A22               	clrf	(??_write_eusartparser+5)^0,c
 22873  00373A  501F               	movf	(??_write_eusartparser+2)^0,w,c
 22874  00373C  2621               	addwf	(??_write_eusartparser+4)^0,f,c
 22875  00373E  5020               	movf	(??_write_eusartparser+3)^0,w,c
 22876  003740  2222               	addwfc	(??_write_eusartparser+5)^0,f,c
 22877  003742  501D               	movf	??_write_eusartparser^0,w,c
 22878  003744  1821               	xorwf	(??_write_eusartparser+4)^0,w,c
 22879  003746  E103               	bnz	u29671
 22880  003748  501E               	movf	(??_write_eusartparser+1)^0,w,c
 22881  00374A  1822               	xorwf	(??_write_eusartparser+5)^0,w,c
 22882  00374C  A4D8               	btfss	status,2,c
 22883  00374E                     u29671:
 22884  00374E  D0BB               	goto	l24135
 22885  003750  C031  F010         	movff	write_eusartparser@i,___wmul@multiplier
 22886  003754  C032  F011         	movff	write_eusartparser@i+1,___wmul@multiplier+1
 22887  003758  0E00               	movlw	0
 22888  00375A  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 22889  00375C  0E05               	movlw	5
 22890  00375E  6E12               	movwf	___wmul@multiplicand^0,c
 22891  003760  ECD0  F04B         	call	___wmul	;wreg free
 22892  003764  0E04               	movlw	low (_systemVarAddresses+4)
 22893  003766  2410               	addwf	?___wmul^0,w,c
 22894  003768  6ED9               	movwf	fsr2l,c
 22895  00376A  0E04               	movlw	high (_systemVarAddresses+4)
 22896  00376C  2011               	addwfc	(?___wmul+1)^0,w,c
 22897  00376E  6EDA               	movwf	fsr2h,c
 22898  003770  0E02               	movlw	2
 22899  003772  18DE               	xorwf	postinc2,w,c
 22900  003774  A4D8               	btfss	status,2,c
 22901  003776  D0A7               	goto	l24135
 22902                           
 22903                           ;eusartparser.c: 460:             *(uint32_t*)(systemVarAddresses[i].address)=*(uint32_t
      +                          *)(systemVarAddresses[i].address)|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*1
      +                          6));
 22904  003778  C031  F010         	movff	write_eusartparser@i,___wmul@multiplier
 22905  00377C  C032  F011         	movff	write_eusartparser@i+1,___wmul@multiplier+1
 22906  003780  0E00               	movlw	0
 22907  003782  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 22908  003784  0E05               	movlw	5
 22909  003786  6E12               	movwf	___wmul@multiplicand^0,c
 22910  003788  ECD0  F04B         	call	___wmul	;wreg free
 22911  00378C  0E00               	movlw	low _systemVarAddresses
 22912  00378E  2410               	addwf	?___wmul^0,w,c
 22913  003790  6ED9               	movwf	fsr2l,c
 22914  003792  0E04               	movlw	high _systemVarAddresses
 22915  003794  2011               	addwfc	(?___wmul+1)^0,w,c
 22916  003796  6EDA               	movwf	fsr2h,c
 22917  003798  CFDE F01D          	movff	postinc2,??_write_eusartparser
 22918  00379C  CFDD F01E          	movff	postdec2,??_write_eusartparser+1
 22919  0037A0  C01D  FFD9         	movff	??_write_eusartparser,fsr2l
 22920  0037A4  C01E  FFDA         	movff	??_write_eusartparser+1,fsr2h
 22921  0037A8  CFDE F01F          	movff	postinc2,??_write_eusartparser+2
 22922  0037AC  CFDE F020          	movff	postinc2,??_write_eusartparser+3
 22923  0037B0  CFDE F021          	movff	postinc2,??_write_eusartparser+4
 22924  0037B4  CFDE F022          	movff	postinc2,??_write_eusartparser+5
 22925  0037B8  5018               	movf	(write_eusartparser@package+2)^0,w,c
 22926  0037BA  101F               	iorwf	(??_write_eusartparser+2)^0,w,c
 22927  0037BC  6E23               	movwf	(??_write_eusartparser+6)^0,c
 22928  0037BE  5019               	movf	(write_eusartparser@package+3)^0,w,c
 22929  0037C0  1020               	iorwf	(??_write_eusartparser+3)^0,w,c
 22930  0037C2  6E24               	movwf	(??_write_eusartparser+7)^0,c
 22931  0037C4  0E00               	movlw	0
 22932  0037C6  1021               	iorwf	(??_write_eusartparser+4)^0,w,c
 22933  0037C8  6E25               	movwf	(??_write_eusartparser+8)^0,c
 22934  0037CA  0E00               	movlw	0
 22935  0037CC  1022               	iorwf	(??_write_eusartparser+5)^0,w,c
 22936  0037CE  6E26               	movwf	(??_write_eusartparser+9)^0,c
 22937  0037D0  C031  F010         	movff	write_eusartparser@i,___wmul@multiplier
 22938  0037D4  C032  F011         	movff	write_eusartparser@i+1,___wmul@multiplier+1
 22939  0037D8  0E00               	movlw	0
 22940  0037DA  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 22941  0037DC  0E05               	movlw	5
 22942  0037DE  6E12               	movwf	___wmul@multiplicand^0,c
 22943  0037E0  ECD0  F04B         	call	___wmul	;wreg free
 22944  0037E4  0E00               	movlw	low _systemVarAddresses
 22945  0037E6  2410               	addwf	?___wmul^0,w,c
 22946  0037E8  6ED9               	movwf	fsr2l,c
 22947  0037EA  0E04               	movlw	high _systemVarAddresses
 22948  0037EC  2011               	addwfc	(?___wmul+1)^0,w,c
 22949  0037EE  6EDA               	movwf	fsr2h,c
 22950  0037F0  CFDE F027          	movff	postinc2,??_write_eusartparser+10
 22951  0037F4  CFDD F028          	movff	postdec2,??_write_eusartparser+11
 22952  0037F8  C027  FFD9         	movff	??_write_eusartparser+10,fsr2l
 22953  0037FC  C028  FFDA         	movff	??_write_eusartparser+11,fsr2h
 22954  003800  C023  FFDE         	movff	??_write_eusartparser+6,postinc2
 22955  003804  C024  FFDE         	movff	??_write_eusartparser+7,postinc2
 22956  003808  C025  FFDE         	movff	??_write_eusartparser+8,postinc2
 22957  00380C  C026  FFDE         	movff	??_write_eusartparser+9,postinc2
 22958                           
 22959                           ;eusartparser.c: 461:             *(uint32_t*)(systemVarAddresses[i].address)=*(uint32_t
      +                          *)(systemVarAddresses[i].address)&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0
      +                          *16));
 22960  003810  C031  F010         	movff	write_eusartparser@i,___wmul@multiplier
 22961  003814  C032  F011         	movff	write_eusartparser@i+1,___wmul@multiplier+1
 22962  003818  0E00               	movlw	0
 22963  00381A  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 22964  00381C  0E05               	movlw	5
 22965  00381E  6E12               	movwf	___wmul@multiplicand^0,c
 22966  003820  ECD0  F04B         	call	___wmul	;wreg free
 22967  003824  0E00               	movlw	low _systemVarAddresses
 22968  003826  2410               	addwf	?___wmul^0,w,c
 22969  003828  6ED9               	movwf	fsr2l,c
 22970  00382A  0E04               	movlw	high _systemVarAddresses
 22971  00382C  2011               	addwfc	(?___wmul+1)^0,w,c
 22972  00382E  6EDA               	movwf	fsr2h,c
 22973  003830  CFDE F01D          	movff	postinc2,??_write_eusartparser
 22974  003834  CFDD F01E          	movff	postdec2,??_write_eusartparser+1
 22975  003838  C01D  FFD9         	movff	??_write_eusartparser,fsr2l
 22976  00383C  C01E  FFDA         	movff	??_write_eusartparser+1,fsr2h
 22977  003840  CFDE F01F          	movff	postinc2,??_write_eusartparser+2
 22978  003844  CFDE F020          	movff	postinc2,??_write_eusartparser+3
 22979  003848  CFDE F021          	movff	postinc2,??_write_eusartparser+4
 22980  00384C  CFDE F022          	movff	postinc2,??_write_eusartparser+5
 22981  003850  1C18               	comf	(write_eusartparser@package+2)^0,w,c
 22982  003852  6E23               	movwf	(??_write_eusartparser+6)^0,c
 22983  003854  1C19               	comf	(write_eusartparser@package+3)^0,w,c
 22984  003856  6E24               	movwf	(??_write_eusartparser+7)^0,c
 22985  003858  6A25               	clrf	(??_write_eusartparser+8)^0,c
 22986  00385A  6A26               	clrf	(??_write_eusartparser+9)^0,c
 22987  00385C  1C23               	comf	(??_write_eusartparser+6)^0,w,c
 22988  00385E  6E27               	movwf	(??_write_eusartparser+10)^0,c
 22989  003860  1C24               	comf	(??_write_eusartparser+7)^0,w,c
 22990  003862  6E28               	movwf	(??_write_eusartparser+11)^0,c
 22991  003864  1C25               	comf	(??_write_eusartparser+8)^0,w,c
 22992  003866  6E29               	movwf	(??_write_eusartparser+12)^0,c
 22993  003868  1C26               	comf	(??_write_eusartparser+9)^0,w,c
 22994  00386A  6E2A               	movwf	(??_write_eusartparser+13)^0,c
 22995  00386C  501F               	movf	(??_write_eusartparser+2)^0,w,c
 22996  00386E  1427               	andwf	(??_write_eusartparser+10)^0,w,c
 22997  003870  6E2B               	movwf	(??_write_eusartparser+14)^0,c
 22998  003872  5020               	movf	(??_write_eusartparser+3)^0,w,c
 22999  003874  1428               	andwf	(??_write_eusartparser+11)^0,w,c
 23000  003876  6E2C               	movwf	(??_write_eusartparser+15)^0,c
 23001  003878  5021               	movf	(??_write_eusartparser+4)^0,w,c
 23002  00387A  1429               	andwf	(??_write_eusartparser+12)^0,w,c
 23003  00387C  6E2D               	movwf	(??_write_eusartparser+16)^0,c
 23004  00387E  5022               	movf	(??_write_eusartparser+5)^0,w,c
 23005  003880  142A               	andwf	(??_write_eusartparser+13)^0,w,c
 23006  003882  6E2E               	movwf	(??_write_eusartparser+17)^0,c
 23007  003884  C031  F010         	movff	write_eusartparser@i,___wmul@multiplier
 23008  003888  C032  F011         	movff	write_eusartparser@i+1,___wmul@multiplier+1
 23009  00388C  0E00               	movlw	0
 23010  00388E  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 23011  003890  0E05               	movlw	5
 23012  003892  6E12               	movwf	___wmul@multiplicand^0,c
 23013  003894  ECD0  F04B         	call	___wmul	;wreg free
 23014  003898  0E00               	movlw	low _systemVarAddresses
 23015  00389A  2410               	addwf	?___wmul^0,w,c
 23016  00389C  6ED9               	movwf	fsr2l,c
 23017  00389E  0E04               	movlw	high _systemVarAddresses
 23018  0038A0  2011               	addwfc	(?___wmul+1)^0,w,c
 23019  0038A2  6EDA               	movwf	fsr2h,c
 23020  0038A4  CFDE F02F          	movff	postinc2,??_write_eusartparser+18
 23021  0038A8  CFDD F030          	movff	postdec2,??_write_eusartparser+19
 23022  0038AC  C02F  FFD9         	movff	??_write_eusartparser+18,fsr2l
 23023  0038B0  C030  FFDA         	movff	??_write_eusartparser+19,fsr2h
 23024  0038B4  C02B  FFDE         	movff	??_write_eusartparser+14,postinc2
 23025  0038B8  C02C  FFDE         	movff	??_write_eusartparser+15,postinc2
 23026  0038BC  C02D  FFDE         	movff	??_write_eusartparser+16,postinc2
 23027  0038C0  C02E  FFDE         	movff	??_write_eusartparser+17,postinc2
 23028  0038C4  0012               	return	
 23029  0038C6                     l24135:
 23030  0038C6  4A31               	infsnz	write_eusartparser@i^0,f,c
 23031  0038C8  2A32               	incf	(write_eusartparser@i+1)^0,f,c
 23032  0038CA  5032               	movf	(write_eusartparser@i+1)^0,w,c
 23033  0038CC  E105               	bnz	u29690
 23034  0038CE  0E2F               	movlw	47
 23035  0038D0  5C31               	subwf	write_eusartparser@i^0,w,c
 23036  0038D2  B0D8               	btfsc	status,0,c
 23037  0038D4  0012               	return	
 23038  0038D6  D5D8               	goto	l24111
 23039  0038D8                     u29690:
 23040  0038D8  0012               	return		;funcret
 23041  0038DA                     __end_of_write_eusartparser:
 23042                           	callstack 0
 23043                           
 23044 ;; *************** function _validateRemoteSerialNumber *****************
 23045 ;; Defined at:
 23046 ;;		line 27 in file "controlMemory_MC50.c"
 23047 ;; Parameters:    Size  Location     Type
 23048 ;;  serial          4   45[COMRAM] unsigned long 
 23049 ;;  VerifyOnlySe    1   49[COMRAM] enum E10564
 23050 ;;  position        2   50[COMRAM] PTR unsigned char 
 23051 ;;		 -> eusartparser@pos(1), controlSelectRemote@pos(1), classic_data(16), 
 23052 ;; Auto vars:     Size  Location     Type
 23053 ;;  mask            4   52[COMRAM] unsigned long 
 23054 ;;  i               1   57[COMRAM] unsigned char 
 23055 ;;  j               1   56[COMRAM] unsigned char 
 23056 ;; Return value:  Size  Location     Type
 23057 ;;                  1    wreg      enum E10539
 23058 ;; Registers used:
 23059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23060 ;; Tracked objects:
 23061 ;;		On entry : 3F/0
 23062 ;;		On exit  : 3E/0
 23063 ;;		Unchanged: 0/0
 23064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23065 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23066 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23067 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23068 ;;      Totals:        13       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23069 ;;Total ram usage:       21 bytes
 23070 ;; Hardware stack levels used: 1
 23071 ;; Hardware stack levels required when called: 13
 23072 ;; This function calls:
 23073 ;;		_i2c_readDataBlock
 23074 ;; This function is called by:
 23075 ;;		_keeloqDecryptPacket
 23076 ;;		_DecryptPacket_12BIT
 23077 ;;		_controlSelectRemote
 23078 ;;		_eusartparser
 23079 ;; This function uses a non-reentrant model
 23080 ;;
 23081                           
 23082                           	psect	text76
 23083  005DCA                     __ptext76:
 23084                           	callstack 0
 23085  005DCA                     _validateRemoteSerialNumber:
 23086                           	callstack 14
 23087                           
 23088                           ; BSR set to: 0
 23089                           ;controlMemory_MC50.c: 29:     char j=0;
 23090                           
 23091                           ;incstack = 0
 23092  005DCA  0E00               	movlw	0
 23093  005DCC  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 23094                           
 23095                           ; BSR set to: 0
 23096                           ;controlMemory_MC50.c: 30:     unsigned long mask;;controlMemory_MC50.c: 33:     if(Veri
      +                          fyOnlySerial==YES)
 23097  005DCE  0432               	decf	validateRemoteSerialNumber@VerifyOnlySerial^0,w,c
 23098  005DD0  A4D8               	btfss	status,2,c
 23099  005DD2  D009               	goto	l1436
 23100                           
 23101                           ; BSR set to: 0
 23102                           ;controlMemory_MC50.c: 34:     {;controlMemory_MC50.c: 35:         mask=0x0FFFFFFF;
 23103  005DD4  0EFF               	movlw	255
 23104  005DD6  6E35               	movwf	validateRemoteSerialNumber@mask^0,c
 23105  005DD8  0EFF               	movlw	255
 23106  005DDA  6E36               	movwf	(validateRemoteSerialNumber@mask+1)^0,c
 23107  005DDC  0EFF               	movlw	255
 23108  005DDE  6E37               	movwf	(validateRemoteSerialNumber@mask+2)^0,c
 23109  005DE0  0E0F               	movlw	15
 23110  005DE2  6E38               	movwf	(validateRemoteSerialNumber@mask+3)^0,c
 23111                           
 23112                           ;controlMemory_MC50.c: 36:     }
 23113  005DE4  D004               	goto	l20421
 23114  005DE6                     l1436:
 23115                           
 23116                           ; BSR set to: 0
 23117                           ;controlMemory_MC50.c: 38:     {;controlMemory_MC50.c: 39:         mask=0xFFFFFFFF;
 23118  005DE6  6835               	setf	validateRemoteSerialNumber@mask^0,c
 23119  005DE8  6836               	setf	(validateRemoteSerialNumber@mask+1)^0,c
 23120  005DEA  6837               	setf	(validateRemoteSerialNumber@mask+2)^0,c
 23121  005DEC  6838               	setf	(validateRemoteSerialNumber@mask+3)^0,c
 23122  005DEE                     l20421:
 23123                           
 23124                           ; BSR set to: 0
 23125                           ;controlMemory_MC50.c: 42:     for (i=0;i<var_sys_NVM.positionRemotesFull;i++)
 23126  005DEE  0E00               	movlw	0
 23127  005DF0  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 23128  005DF2  D057               	goto	l20439
 23129  005DF4                     l20423:
 23130                           
 23131                           ; BSR set to: 1
 23132                           ;controlMemory_MC50.c: 43:     {;controlMemory_MC50.c: 44:         if(i%4==0)
 23133  005DF4  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 23134  005DF8  0E03               	movlw	3
 23135  005DFA  0100               	movlb	0	; () banked
 23136  005DFC  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 23137  005DFE  A4D8               	btfss	status,2,c
 23138  005E00  D01C               	goto	l20429
 23139                           
 23140                           ; BSR set to: 0
 23141                           ;controlMemory_MC50.c: 45:         {;controlMemory_MC50.c: 46:             j=0;
 23142  005E02  0E00               	movlw	0
 23143  005E04  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 23144                           
 23145                           ; BSR set to: 0
 23146                           ;controlMemory_MC50.c: 48:             i2c_readDataBlock(0x50, (uint16_t)(0x0200 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 23147  005E06  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 23148  005E08  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 23149  005E0A  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 23150  005E0C  90D8               	bcf	status,0,c
 23151  005E0E  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 23152  005E10  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 23153  005E12  90D8               	bcf	status,0,c
 23154  005E14  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 23155  005E16  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 23156  005E18  0E00               	movlw	0
 23157  005E1A  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 23158  005E1C  6E22               	movwf	i2c_readDataBlock@reg^0,c
 23159  005E1E  0E02               	movlw	2
 23160  005E20  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 23161  005E22  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 23162  005E24  0EA2               	movlw	low _memoryTEMP
 23163  005E26  6E24               	movwf	i2c_readDataBlock@data^0,c
 23164  005E28  0E02               	movlw	high _memoryTEMP
 23165  005E2A  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 23166  005E2C  0E00               	movlw	0
 23167  005E2E  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 23168  005E30  0E10               	movlw	16
 23169  005E32  6E26               	movwf	i2c_readDataBlock@len^0,c
 23170  005E34  0E50               	movlw	80
 23171  005E36  EC8E  F042         	call	_i2c_readDataBlock
 23172  005E3A                     l20429:
 23173                           
 23174                           ;controlMemory_MC50.c: 50:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 23175  005E3A  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 23176  005E3C  0D04               	mullw	4
 23177  005E3E  0EA2               	movlw	low _memoryTEMP
 23178  005E40  24F3               	addwf	243,w,c
 23179  005E42  6ED9               	movwf	fsr2l,c
 23180  005E44  0E02               	movlw	high _memoryTEMP
 23181  005E46  20F4               	addwfc	prodh,w,c
 23182  005E48  6EDA               	movwf	fsr2h,c
 23183  005E4A  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 23184  005E4E  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 23185  005E52  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 23186  005E56  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 23187  005E5A  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 23188  005E5C  0100               	movlb	0	; () banked
 23189  005E5E  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 23190  005E60  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 23191  005E62  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 23192  005E64  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 23193  005E66  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 23194  005E68  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 23195  005E6A  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 23196  005E6C  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 23197  005E6E  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 23198  005E70  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 23199  005E72  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 23200  005E74  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 23201  005E76  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 23202  005E78  E112               	bnz	l20437
 23203  005E7A  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 23204  005E7C  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 23205  005E7E  E10F               	bnz	l20437
 23206  005E80  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 23207  005E82  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 23208  005E84  E10C               	bnz	l20437
 23209  005E86  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 23210  005E88  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 23211  005E8A  A4D8               	btfss	status,2,c
 23212  005E8C  D008               	goto	l20437
 23213                           
 23214                           ; BSR set to: 0
 23215                           ;controlMemory_MC50.c: 51:         {;controlMemory_MC50.c: 53:             position[0]=i
      +                          ;
 23216  005E8E  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 23217  005E92  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 23218  005E96  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 23219                           
 23220                           ; BSR set to: 0
 23221                           ;controlMemory_MC50.c: 54:             return TypeFull;
 23222  005E9A  0E01               	movlw	1
 23223  005E9C  0012               	return	
 23224  005E9E                     l20437:
 23225                           
 23226                           ; BSR set to: 0
 23227                           ;controlMemory_MC50.c: 57:         j++;
 23228  005E9E  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 23229                           
 23230                           ;controlMemory_MC50.c: 59:     }
 23231  005EA0  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 23232  005EA2                     l20439:
 23233                           
 23234                           ; BSR set to: 0
 23235  005EA2  0101               	movlb	1	; () banked
 23236  005EA4  51C6               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 23237  005EA6  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 23238  005EA8  A0D8               	btfss	status,0,c
 23239  005EAA  D7A4               	goto	l20423
 23240                           
 23241                           ; BSR set to: 1
 23242                           ;controlMemory_MC50.c: 61:     for (i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 23243  005EAC  0E00               	movlw	0
 23244  005EAE  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 23245  005EB0  D057               	goto	l20459
 23246  005EB2                     l20443:
 23247                           
 23248                           ; BSR set to: 1
 23249                           ;controlMemory_MC50.c: 62:     {;controlMemory_MC50.c: 63:         if(i%4==0)
 23250  005EB2  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 23251  005EB6  0E03               	movlw	3
 23252  005EB8  0100               	movlb	0	; () banked
 23253  005EBA  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 23254  005EBC  A4D8               	btfss	status,2,c
 23255  005EBE  D01C               	goto	l20449
 23256                           
 23257                           ; BSR set to: 0
 23258                           ;controlMemory_MC50.c: 64:         {;controlMemory_MC50.c: 65:             j=0;
 23259  005EC0  0E00               	movlw	0
 23260  005EC2  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 23261                           
 23262                           ; BSR set to: 0
 23263                           ;controlMemory_MC50.c: 66:             i2c_readDataBlock(0x50, (uint16_t)(0x0500 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 23264  005EC4  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 23265  005EC6  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 23266  005EC8  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 23267  005ECA  90D8               	bcf	status,0,c
 23268  005ECC  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 23269  005ECE  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 23270  005ED0  90D8               	bcf	status,0,c
 23271  005ED2  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 23272  005ED4  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 23273  005ED6  0E00               	movlw	0
 23274  005ED8  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 23275  005EDA  6E22               	movwf	i2c_readDataBlock@reg^0,c
 23276  005EDC  0E05               	movlw	5
 23277  005EDE  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 23278  005EE0  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 23279  005EE2  0EA2               	movlw	low _memoryTEMP
 23280  005EE4  6E24               	movwf	i2c_readDataBlock@data^0,c
 23281  005EE6  0E02               	movlw	high _memoryTEMP
 23282  005EE8  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 23283  005EEA  0E00               	movlw	0
 23284  005EEC  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 23285  005EEE  0E10               	movlw	16
 23286  005EF0  6E26               	movwf	i2c_readDataBlock@len^0,c
 23287  005EF2  0E50               	movlw	80
 23288  005EF4  EC8E  F042         	call	_i2c_readDataBlock
 23289  005EF8                     l20449:
 23290                           
 23291                           ;controlMemory_MC50.c: 69:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 23292  005EF8  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 23293  005EFA  0D04               	mullw	4
 23294  005EFC  0EA2               	movlw	low _memoryTEMP
 23295  005EFE  24F3               	addwf	243,w,c
 23296  005F00  6ED9               	movwf	fsr2l,c
 23297  005F02  0E02               	movlw	high _memoryTEMP
 23298  005F04  20F4               	addwfc	prodh,w,c
 23299  005F06  6EDA               	movwf	fsr2h,c
 23300  005F08  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 23301  005F0C  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 23302  005F10  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 23303  005F14  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 23304  005F18  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 23305  005F1A  0100               	movlb	0	; () banked
 23306  005F1C  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 23307  005F1E  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 23308  005F20  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 23309  005F22  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 23310  005F24  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 23311  005F26  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 23312  005F28  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 23313  005F2A  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 23314  005F2C  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 23315  005F2E  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 23316  005F30  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 23317  005F32  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 23318  005F34  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 23319  005F36  E112               	bnz	l20457
 23320  005F38  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 23321  005F3A  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 23322  005F3C  E10F               	bnz	l20457
 23323  005F3E  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 23324  005F40  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 23325  005F42  E10C               	bnz	l20457
 23326  005F44  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 23327  005F46  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 23328  005F48  A4D8               	btfss	status,2,c
 23329  005F4A  D008               	goto	l20457
 23330                           
 23331                           ; BSR set to: 0
 23332                           ;controlMemory_MC50.c: 70:         {;controlMemory_MC50.c: 72:             position[0]=i
      +                          ;
 23333  005F4C  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 23334  005F50  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 23335  005F54  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 23336                           
 23337                           ; BSR set to: 0
 23338                           ;controlMemory_MC50.c: 73:             return TypeWalk;
 23339  005F58  0E02               	movlw	2
 23340  005F5A  0012               	return	
 23341  005F5C                     l20457:
 23342                           
 23343                           ; BSR set to: 0
 23344                           ;controlMemory_MC50.c: 75:         j++;
 23345  005F5C  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 23346                           
 23347                           ;controlMemory_MC50.c: 76:     }
 23348  005F5E  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 23349  005F60                     l20459:
 23350  005F60  0101               	movlb	1	; () banked
 23351  005F62  51C7               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 23352  005F64  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 23353  005F66  A0D8               	btfss	status,0,c
 23354  005F68  D7A4               	goto	l20443
 23355                           
 23356                           ; BSR set to: 1
 23357                           ;controlMemory_MC50.c: 78:     return NoCMD;
 23358  005F6A  0E00               	movlw	0
 23359  005F6C  0012               	return		;funcret
 23360  005F6E                     __end_of_validateRemoteSerialNumber:
 23361                           	callstack 0
 23362                           
 23363 ;; *************** function _updateChangesToUart *****************
 23364 ;; Defined at:
 23365 ;;		line 1162 in file "eusartparser.c"
 23366 ;; Parameters:    Size  Location     Type
 23367 ;;		None
 23368 ;; Auto vars:     Size  Location     Type
 23369 ;;  i               1   33[COMRAM] unsigned char 
 23370 ;;  package         7   34[COMRAM] struct package_t
 23371 ;; Return value:  Size  Location     Type
 23372 ;;                  1    wreg      void 
 23373 ;; Registers used:
 23374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23375 ;; Tracked objects:
 23376 ;;		On entry : 3E/1
 23377 ;;		On exit  : 0/0
 23378 ;;		Unchanged: 0/0
 23379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23381 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23383 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23384 ;;Total ram usage:        8 bytes
 23385 ;; Hardware stack levels used: 1
 23386 ;; Hardware stack levels required when called: 7
 23387 ;; This function calls:
 23388 ;;		_confirmpackage
 23389 ;;		_init_package
 23390 ;;		_read_eusartparser
 23391 ;;		_write_package
 23392 ;; This function is called by:
 23393 ;;		_eusartparser
 23394 ;; This function uses a non-reentrant model
 23395 ;;
 23396                           
 23397                           	psect	text77
 23398  008B14                     __ptext77:
 23399                           	callstack 0
 23400  008B14                     _updateChangesToUart:
 23401                           	callstack 22
 23402                           
 23403                           ;eusartparser.c: 1163:     struct package_t package;;eusartparser.c: 1164:     init_pack
      +                          age(&package);
 23404                           
 23405                           ;incstack = 0
 23406  008B14  0E23               	movlw	low updateChangesToUart@package
 23407  008B16  6E10               	movwf	init_package@package^0,c
 23408  008B18  6A11               	clrf	(init_package@package+1)^0,c
 23409  008B1A  EC17  F04A         	call	_init_package	;wreg free
 23410                           
 23411                           ;eusartparser.c: 1165:     package.functioncode=0x12;
 23412  008B1E  0E12               	movlw	18
 23413  008B20  6E23               	movwf	updateChangesToUart@package^0,c
 23414                           
 23415                           ;eusartparser.c: 1166:     package.address=0x00;
 23416  008B22  0E00               	movlw	0
 23417  008B24  6E24               	movwf	(updateChangesToUart@package+1)^0,c
 23418                           
 23419                           ;eusartparser.c: 1167:     package.data.data16=0x0000;
 23420  008B26  0E00               	movlw	0
 23421  008B28  6E26               	movwf	(updateChangesToUart@package+3)^0,c
 23422  008B2A  0E00               	movlw	0
 23423  008B2C  6E25               	movwf	(updateChangesToUart@package+2)^0,c
 23424                           
 23425                           ;eusartparser.c: 1168:     package.functioncode=0x00;
 23426  008B2E  0E00               	movlw	0
 23427  008B30  6E23               	movwf	updateChangesToUart@package^0,c
 23428                           
 23429                           ;eusartparser.c: 1169:     for (uint8_t i=0x00;i<=sizeof(systemVarAddresses)/sizeof(syst
      +                          emVarAddresses[0]);i++){
 23430  008B32  0E00               	movlw	0
 23431  008B34  6E22               	movwf	updateChangesToUart@i^0,c
 23432  008B36                     l3779:
 23433                           
 23434                           ;eusartparser.c: 1170:         package.address=i;
 23435  008B36  C022  F024         	movff	updateChangesToUart@i,updateChangesToUart@package+1
 23436                           
 23437                           ;eusartparser.c: 1171:         read_eusartparser(&package);
 23438  008B3A  0E23               	movlw	low updateChangesToUart@package
 23439  008B3C  6E18               	movwf	read_eusartparser@package^0,c
 23440  008B3E  6A19               	clrf	(read_eusartparser@package+1)^0,c
 23441  008B40  ECBC  F026         	call	_read_eusartparser	;wreg free
 23442                           
 23443                           ;eusartparser.c: 1172:     }
 23444  008B44  2A22               	incf	updateChangesToUart@i^0,f,c
 23445  008B46  0E2F               	movlw	47
 23446  008B48  6422               	cpfsgt	updateChangesToUart@i^0,c
 23447  008B4A  D7F5               	goto	l3779
 23448                           
 23449                           ;eusartparser.c: 1173:     confirmpackage(&package, 1);
 23450  008B4C  0E23               	movlw	low updateChangesToUart@package
 23451  008B4E  6E12               	movwf	confirmpackage@package^0,c
 23452  008B50  6A13               	clrf	(confirmpackage@package+1)^0,c
 23453  008B52  0E01               	movlw	1
 23454  008B54  6E14               	movwf	confirmpackage@confirm^0,c
 23455  008B56  EC44  F046         	call	_confirmpackage	;wreg free
 23456                           
 23457                           ;eusartparser.c: 1174:     write_package(package);
 23458  008B5A  EE20  F023         	lfsr	2,updateChangesToUart@package
 23459  008B5E  EE00  F011         	lfsr	0,write_package@package
 23460  008B62  0E06               	movlw	6
 23461  008B64                     u33921:
 23462  008B64  CFDB FFEB          	movff	plusw2,plusw0
 23463  008B68  06E8               	decf	wreg,f,c
 23464  008B6A  E2FC               	bc	u33921
 23465  008B6C  EC8F  F04A         	call	_write_package	;wreg free
 23466  008B70  0012               	return		;funcret
 23467  008B72                     __end_of_updateChangesToUart:
 23468                           	callstack 0
 23469                           
 23470 ;; *************** function _read_eusartparser *****************
 23471 ;; Defined at:
 23472 ;;		line 246 in file "eusartparser.c"
 23473 ;; Parameters:    Size  Location     Type
 23474 ;;  package         2   23[COMRAM] PTR struct package_t
 23475 ;;		 -> updateChangesToUart@package(7), main@package(7), 
 23476 ;; Auto vars:     Size  Location     Type
 23477 ;;  i               2   31[COMRAM] int 
 23478 ;;  state           1   30[COMRAM] _Bool 
 23479 ;; Return value:  Size  Location     Type
 23480 ;;                  1    wreg      _Bool 
 23481 ;; Registers used:
 23482 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23483 ;; Tracked objects:
 23484 ;;		On entry : 0/0
 23485 ;;		On exit  : 0/0
 23486 ;;		Unchanged: 0/0
 23487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23489 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23490 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23491 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23492 ;;Total ram usage:       10 bytes
 23493 ;; Hardware stack levels used: 1
 23494 ;; Hardware stack levels required when called: 6
 23495 ;; This function calls:
 23496 ;;		___wmul
 23497 ;;		_write_package
 23498 ;; This function is called by:
 23499 ;;		_eusartparser
 23500 ;;		_updateChangesToUart
 23501 ;; This function uses a non-reentrant model
 23502 ;;
 23503                           
 23504                           	psect	text78
 23505  004D78                     __ptext78:
 23506                           	callstack 0
 23507  004D78                     _read_eusartparser:
 23508                           	callstack 22
 23509                           
 23510                           ;eusartparser.c: 247:     _Bool state=0;
 23511                           
 23512                           ;incstack = 0
 23513  004D78  0E00               	movlw	0
 23514  004D7A  6E1F               	movwf	read_eusartparser@state^0,c
 23515                           
 23516                           ;eusartparser.c: 248:     package->data.data16=0x0000;
 23517  004D7C  EE20 F002          	lfsr	2,2
 23518  004D80  5018               	movf	read_eusartparser@package^0,w,c
 23519  004D82  26D9               	addwf	fsr2l,f,c
 23520  004D84  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23521  004D86  22DA               	addwfc	fsr2h,f,c
 23522  004D88  0E00               	movlw	0
 23523  004D8A  6EDE               	movwf	postinc2,c
 23524  004D8C  0E00               	movlw	0
 23525  004D8E  6EDD               	movwf	postdec2,c
 23526                           
 23527                           ;eusartparser.c: 249:     for (int i=0;i<sizeof(systemVarAddresses)/sizeof(systemVarAddr
      +                          esses[0]);i++)
 23528  004D90  0E00               	movlw	0
 23529  004D92  6E21               	movwf	(read_eusartparser@i+1)^0,c
 23530  004D94  0E00               	movlw	0
 23531  004D96  6E20               	movwf	read_eusartparser@i^0,c
 23532  004D98                     l27043:
 23533                           
 23534                           ;eusartparser.c: 250:         if(systemVarAddresses[i].key==package->address){
 23535  004D98  EE20 F001          	lfsr	2,1
 23536  004D9C  5018               	movf	read_eusartparser@package^0,w,c
 23537  004D9E  26D9               	addwf	fsr2l,f,c
 23538  004DA0  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23539  004DA2  22DA               	addwfc	fsr2h,f,c
 23540  004DA4  C020  F010         	movff	read_eusartparser@i,___wmul@multiplier
 23541  004DA8  C021  F011         	movff	read_eusartparser@i+1,___wmul@multiplier+1
 23542  004DAC  0E00               	movlw	0
 23543  004DAE  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 23544  004DB0  0E05               	movlw	5
 23545  004DB2  6E12               	movwf	___wmul@multiplicand^0,c
 23546  004DB4  ECD0  F04B         	call	___wmul	;wreg free
 23547  004DB8  0E03               	movlw	low (_systemVarAddresses+3)
 23548  004DBA  2410               	addwf	?___wmul^0,w,c
 23549  004DBC  6EE1               	movwf	fsr1l,c
 23550  004DBE  0E04               	movlw	high (_systemVarAddresses+3)
 23551  004DC0  2011               	addwfc	(?___wmul+1)^0,w,c
 23552  004DC2  6EE2               	movwf	fsr1h,c
 23553  004DC4  50DE               	movf	postinc2,w,c
 23554  004DC6  18E6               	xorwf	postinc1,w,c
 23555  004DC8  B4D8               	btfsc	status,2,c
 23556  004DCA  D0BA               	goto	l27063
 23557  004DCC  D0DC               	goto	l27067
 23558  004DCE                     l27047:
 23559                           
 23560                           ;eusartparser.c: 253:                     package->data.data8[systemVarAddresses[i].byte
      +                          ]=*(uint8_t*)(systemVarAddresses[i].address);
 23561  004DCE  C020  F010         	movff	read_eusartparser@i,___wmul@multiplier
 23562  004DD2  C021  F011         	movff	read_eusartparser@i+1,___wmul@multiplier+1
 23563  004DD6  0E00               	movlw	0
 23564  004DD8  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 23565  004DDA  0E05               	movlw	5
 23566  004DDC  6E12               	movwf	___wmul@multiplicand^0,c
 23567  004DDE  ECD0  F04B         	call	___wmul	;wreg free
 23568  004DE2  0E00               	movlw	low _systemVarAddresses
 23569  004DE4  2410               	addwf	?___wmul^0,w,c
 23570  004DE6  6ED9               	movwf	fsr2l,c
 23571  004DE8  0E04               	movlw	high _systemVarAddresses
 23572  004DEA  2011               	addwfc	(?___wmul+1)^0,w,c
 23573  004DEC  6EDA               	movwf	fsr2h,c
 23574  004DEE  CFDE F01A          	movff	postinc2,??_read_eusartparser
 23575  004DF2  CFDD F01B          	movff	postdec2,??_read_eusartparser+1
 23576  004DF6  C01A  FFD9         	movff	??_read_eusartparser,fsr2l
 23577  004DFA  C01B  FFDA         	movff	??_read_eusartparser+1,fsr2h
 23578  004DFE  C020  F010         	movff	read_eusartparser@i,___wmul@multiplier
 23579  004E02  C021  F011         	movff	read_eusartparser@i+1,___wmul@multiplier+1
 23580  004E06  0E00               	movlw	0
 23581  004E08  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 23582  004E0A  0E05               	movlw	5
 23583  004E0C  6E12               	movwf	___wmul@multiplicand^0,c
 23584  004E0E  ECD0  F04B         	call	___wmul	;wreg free
 23585  004E12  0E02               	movlw	low (_systemVarAddresses+2)
 23586  004E14  2410               	addwf	?___wmul^0,w,c
 23587  004E16  6EE1               	movwf	fsr1l,c
 23588  004E18  0E04               	movlw	high (_systemVarAddresses+2)
 23589  004E1A  2011               	addwfc	(?___wmul+1)^0,w,c
 23590  004E1C  6EE2               	movwf	fsr1h,c
 23591  004E1E  50E7               	movf	indf1,w,c
 23592  004E20  6E1C               	movwf	(??_read_eusartparser+2)^0,c
 23593  004E22  501C               	movf	(??_read_eusartparser+2)^0,w,c
 23594  004E24  2418               	addwf	read_eusartparser@package^0,w,c
 23595  004E26  6E1D               	movwf	(??_read_eusartparser+3)^0,c
 23596  004E28  0E00               	movlw	0
 23597  004E2A  2019               	addwfc	(read_eusartparser@package+1)^0,w,c
 23598  004E2C  6E1E               	movwf	(??_read_eusartparser+4)^0,c
 23599  004E2E  0E02               	movlw	2
 23600  004E30  241D               	addwf	(??_read_eusartparser+3)^0,w,c
 23601  004E32  6EE1               	movwf	fsr1l,c
 23602  004E34  0E00               	movlw	0
 23603  004E36  201E               	addwfc	(??_read_eusartparser+4)^0,w,c
 23604  004E38  6EE2               	movwf	fsr1h,c
 23605  004E3A  CFDF FFE7          	movff	indf2,indf1
 23606                           
 23607                           ;eusartparser.c: 254:                     break;
 23608  004E3E  D0A1               	goto	l27065
 23609  004E40                     l27049:
 23610                           
 23611                           ;eusartparser.c: 256:                     package->data.data16=*(uint16_t*)(systemVarAdd
      +                          resses[i].address);
 23612  004E40  C020  F010         	movff	read_eusartparser@i,___wmul@multiplier
 23613  004E44  C021  F011         	movff	read_eusartparser@i+1,___wmul@multiplier+1
 23614  004E48  0E00               	movlw	0
 23615  004E4A  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 23616  004E4C  0E05               	movlw	5
 23617  004E4E  6E12               	movwf	___wmul@multiplicand^0,c
 23618  004E50  ECD0  F04B         	call	___wmul	;wreg free
 23619  004E54  0E00               	movlw	low _systemVarAddresses
 23620  004E56  2410               	addwf	?___wmul^0,w,c
 23621  004E58  6ED9               	movwf	fsr2l,c
 23622  004E5A  0E04               	movlw	high _systemVarAddresses
 23623  004E5C  2011               	addwfc	(?___wmul+1)^0,w,c
 23624  004E5E  6EDA               	movwf	fsr2h,c
 23625  004E60  CFDE F01A          	movff	postinc2,??_read_eusartparser
 23626  004E64  CFDD F01B          	movff	postdec2,??_read_eusartparser+1
 23627  004E68  C01A  FFD9         	movff	??_read_eusartparser,fsr2l
 23628  004E6C  C01B  FFDA         	movff	??_read_eusartparser+1,fsr2h
 23629  004E70  EE10 F002          	lfsr	1,2
 23630  004E74  5018               	movf	read_eusartparser@package^0,w,c
 23631  004E76  26E1               	addwf	fsr1l,f,c
 23632  004E78  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23633  004E7A  22E2               	addwfc	fsr1h,f,c
 23634  004E7C  CFDE FFE6          	movff	postinc2,postinc1
 23635  004E80  CFDD FFE5          	movff	postdec2,postdec1
 23636                           
 23637                           ;eusartparser.c: 257:                     break;
 23638  004E84  D07E               	goto	l27065
 23639  004E86                     l27051:
 23640                           
 23641                           ;eusartparser.c: 259:                     package->data.data16=*(((uint16_t*)systemVarAd
      +                          dresses[i].address)+1);
 23642  004E86  C020  F010         	movff	read_eusartparser@i,___wmul@multiplier
 23643  004E8A  C021  F011         	movff	read_eusartparser@i+1,___wmul@multiplier+1
 23644  004E8E  0E00               	movlw	0
 23645  004E90  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 23646  004E92  0E05               	movlw	5
 23647  004E94  6E12               	movwf	___wmul@multiplicand^0,c
 23648  004E96  ECD0  F04B         	call	___wmul	;wreg free
 23649  004E9A  0E00               	movlw	low _systemVarAddresses
 23650  004E9C  2410               	addwf	?___wmul^0,w,c
 23651  004E9E  6ED9               	movwf	fsr2l,c
 23652  004EA0  0E04               	movlw	high _systemVarAddresses
 23653  004EA2  2011               	addwfc	(?___wmul+1)^0,w,c
 23654  004EA4  6EDA               	movwf	fsr2h,c
 23655  004EA6  EE10 F002          	lfsr	1,2
 23656  004EAA  50DE               	movf	postinc2,w,c
 23657  004EAC  26E1               	addwf	fsr1l,f,c
 23658  004EAE  50DD               	movf	postdec2,w,c
 23659  004EB0  22E2               	addwfc	fsr1h,f,c
 23660  004EB2  EE20 F002          	lfsr	2,2
 23661  004EB6  5018               	movf	read_eusartparser@package^0,w,c
 23662  004EB8  26D9               	addwf	fsr2l,f,c
 23663  004EBA  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23664  004EBC  22DA               	addwfc	fsr2h,f,c
 23665  004EBE  CFE6 FFDE          	movff	postinc1,postinc2
 23666  004EC2  CFE5 FFDD          	movff	postdec1,postdec2
 23667                           
 23668                           ;eusartparser.c: 260:                     write_package(*package);
 23669  004EC6  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23670  004ECA  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23671  004ECE  EE00  F011         	lfsr	0,write_package@package
 23672  004ED2  0E06               	movlw	6
 23673  004ED4                     u33851:
 23674  004ED4  CFDB FFEB          	movff	plusw2,plusw0
 23675  004ED8  06E8               	decf	wreg,f,c
 23676  004EDA  E2FC               	bc	u33851
 23677  004EDC  EC8F  F04A         	call	_write_package	;wreg free
 23678                           
 23679                           ;eusartparser.c: 261:                     package->data.data16=*(((uint16_t*)systemVarAd
      +                          dresses[i].address)+0);
 23680  004EE0  C020  F010         	movff	read_eusartparser@i,___wmul@multiplier
 23681  004EE4  C021  F011         	movff	read_eusartparser@i+1,___wmul@multiplier+1
 23682  004EE8  0E00               	movlw	0
 23683  004EEA  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 23684  004EEC  0E05               	movlw	5
 23685  004EEE  6E12               	movwf	___wmul@multiplicand^0,c
 23686  004EF0  ECD0  F04B         	call	___wmul	;wreg free
 23687  004EF4  0E00               	movlw	low _systemVarAddresses
 23688  004EF6  2410               	addwf	?___wmul^0,w,c
 23689  004EF8  6ED9               	movwf	fsr2l,c
 23690  004EFA  0E04               	movlw	high _systemVarAddresses
 23691  004EFC  2011               	addwfc	(?___wmul+1)^0,w,c
 23692  004EFE  6EDA               	movwf	fsr2h,c
 23693  004F00  CFDE F01A          	movff	postinc2,??_read_eusartparser
 23694  004F04  CFDD F01B          	movff	postdec2,??_read_eusartparser+1
 23695  004F08  C01A  FFD9         	movff	??_read_eusartparser,fsr2l
 23696  004F0C  C01B  FFDA         	movff	??_read_eusartparser+1,fsr2h
 23697  004F10  EE10 F002          	lfsr	1,2
 23698  004F14  5018               	movf	read_eusartparser@package^0,w,c
 23699  004F16  26E1               	addwf	fsr1l,f,c
 23700  004F18  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23701  004F1A  22E2               	addwfc	fsr1h,f,c
 23702  004F1C  CFDE FFE6          	movff	postinc2,postinc1
 23703  004F20  CFDD FFE5          	movff	postdec2,postdec1
 23704                           
 23705                           ;eusartparser.c: 262:                     write_package(*package);
 23706  004F24  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23707  004F28  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23708  004F2C  EE00  F011         	lfsr	0,write_package@package
 23709  004F30  0E06               	movlw	6
 23710  004F32                     u33861:
 23711  004F32  CFDB FFEB          	movff	plusw2,plusw0
 23712  004F36  06E8               	decf	wreg,f,c
 23713  004F38  E2FC               	bc	u33861
 23714  004F3A  EC8F  F04A         	call	_write_package	;wreg free
 23715  004F3E  0012               	return	
 23716  004F40                     l27063:
 23717  004F40  C020  F010         	movff	read_eusartparser@i,___wmul@multiplier
 23718  004F44  C021  F011         	movff	read_eusartparser@i+1,___wmul@multiplier+1
 23719  004F48  0E00               	movlw	0
 23720  004F4A  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 23721  004F4C  0E05               	movlw	5
 23722  004F4E  6E12               	movwf	___wmul@multiplicand^0,c
 23723  004F50  ECD0  F04B         	call	___wmul	;wreg free
 23724  004F54  0E04               	movlw	low (_systemVarAddresses+4)
 23725  004F56  2410               	addwf	?___wmul^0,w,c
 23726  004F58  6ED9               	movwf	fsr2l,c
 23727  004F5A  0E04               	movlw	high (_systemVarAddresses+4)
 23728  004F5C  2011               	addwfc	(?___wmul+1)^0,w,c
 23729  004F5E  6EDA               	movwf	fsr2h,c
 23730  004F60  50DF               	movf	indf2,w,c
 23731  004F62  6E1A               	movwf	??_read_eusartparser^0,c
 23732  004F64  6A1B               	clrf	(??_read_eusartparser+1)^0,c
 23733                           
 23734                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23735                           ; Switch size 1, requested type "simple"
 23736                           ; Number of cases is 1, Range of values is 0 to 0
 23737                           ; switch strategies available:
 23738                           ; Name         Instructions Cycles
 23739                           ; simple_byte            4     3 (average)
 23740                           ;	Chosen strategy is simple_byte
 23741  004F66  501B               	movf	(??_read_eusartparser+1)^0,w,c
 23742  004F68  0A00               	xorlw	0	; case 0
 23743  004F6A  A4D8               	btfss	status,2,c
 23744  004F6C  D00A               	goto	l27065
 23745                           
 23746                           ; Switch size 1, requested type "simple"
 23747                           ; Number of cases is 3, Range of values is 0 to 2
 23748                           ; switch strategies available:
 23749                           ; Name         Instructions Cycles
 23750                           ; simple_byte           10     6 (average)
 23751                           ;	Chosen strategy is simple_byte
 23752  004F6E  501A               	movf	??_read_eusartparser^0,w,c
 23753  004F70  0A00               	xorlw	0	; case 0
 23754  004F72  B4D8               	btfsc	status,2,c
 23755  004F74  D72C               	goto	l27047
 23756  004F76  0A01               	xorlw	1	; case 1
 23757  004F78  B4D8               	btfsc	status,2,c
 23758  004F7A  D762               	goto	l27049
 23759  004F7C  0A03               	xorlw	3	; case 2
 23760  004F7E  B4D8               	btfsc	status,2,c
 23761  004F80  D782               	goto	l27051
 23762  004F82                     l27065:
 23763                           
 23764                           ;eusartparser.c: 269:             state=1;
 23765  004F82  0E01               	movlw	1
 23766  004F84  6E1F               	movwf	read_eusartparser@state^0,c
 23767  004F86                     l27067:
 23768  004F86  4A20               	infsnz	read_eusartparser@i^0,f,c
 23769  004F88  2A21               	incf	(read_eusartparser@i+1)^0,f,c
 23770  004F8A  5021               	movf	(read_eusartparser@i+1)^0,w,c
 23771  004F8C  E104               	bnz	u33870
 23772  004F8E  0E2F               	movlw	47
 23773  004F90  5C20               	subwf	read_eusartparser@i^0,w,c
 23774  004F92  A0D8               	btfss	status,0,c
 23775  004F94  D701               	goto	l27043
 23776  004F96                     u33870:
 23777                           
 23778                           ;eusartparser.c: 271:     if(state)
 23779  004F96  501F               	movf	read_eusartparser@state^0,w,c
 23780  004F98  B4D8               	btfsc	status,2,c
 23781  004F9A  0012               	return	
 23782                           
 23783                           ;eusartparser.c: 272:         write_package(*package);
 23784  004F9C  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23785  004FA0  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23786  004FA4  EE00  F011         	lfsr	0,write_package@package
 23787  004FA8  0E06               	movlw	6
 23788  004FAA                     u33891:
 23789  004FAA  CFDB FFEB          	movff	plusw2,plusw0
 23790  004FAE  06E8               	decf	wreg,f,c
 23791  004FB0  E2FC               	bc	u33891
 23792  004FB2  EC8F  F04A         	call	_write_package	;wreg free
 23793  004FB6  0012               	return		;funcret
 23794  004FB8                     __end_of_read_eusartparser:
 23795                           	callstack 0
 23796                           
 23797 ;; *************** function _write_package *****************
 23798 ;; Defined at:
 23799 ;;		line 50 in file "eusartpackage.c"
 23800 ;; Parameters:    Size  Location     Type
 23801 ;;  package         7   16[COMRAM] const struct package_t
 23802 ;; Auto vars:     Size  Location     Type
 23803 ;;		None
 23804 ;; Return value:  Size  Location     Type
 23805 ;;                  1    wreg      void 
 23806 ;; Registers used:
 23807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23808 ;; Tracked objects:
 23809 ;;		On entry : 0/0
 23810 ;;		On exit  : 0/0
 23811 ;;		Unchanged: 0/0
 23812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23813 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23816 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23817 ;;Total ram usage:        7 bytes
 23818 ;; Hardware stack levels used: 1
 23819 ;; Hardware stack levels required when called: 5
 23820 ;; This function calls:
 23821 ;;		_EUSART1_Write
 23822 ;; This function is called by:
 23823 ;;		_read_eusartparser
 23824 ;;		_eusartparser
 23825 ;;		_updateChangesToUart
 23826 ;; This function uses a non-reentrant model
 23827 ;;
 23828                           
 23829                           	psect	text79
 23830  00951E                     __ptext79:
 23831                           	callstack 0
 23832  00951E                     _write_package:
 23833                           	callstack 24
 23834                           
 23835                           ;eusartpackage.c: 52:         if(package.valid==0)
 23836                           
 23837                           ;incstack = 0
 23838  00951E  5017               	movf	(write_package@package+6)^0,w,c
 23839  009520  B4D8               	btfsc	status,2,c
 23840  009522  0012               	return	
 23841                           
 23842                           ;eusartpackage.c: 56:         EUSART1_Write(package.startbyte);
 23843  009524  5015               	movf	(write_package@package+4)^0,w,c
 23844  009526  EC29  F049         	call	_EUSART1_Write
 23845                           
 23846                           ;eusartpackage.c: 57:         EUSART1_Write(package.functioncode);
 23847  00952A  5011               	movf	write_package@package^0,w,c
 23848  00952C  EC29  F049         	call	_EUSART1_Write
 23849                           
 23850                           ;eusartpackage.c: 58:         EUSART1_Write(package.address);
 23851  009530  5012               	movf	(write_package@package+1)^0,w,c
 23852  009532  EC29  F049         	call	_EUSART1_Write
 23853                           
 23854                           ;eusartpackage.c: 59:         EUSART1_Write(package.data.data8[0]);
 23855  009536  5013               	movf	(write_package@package+2)^0,w,c
 23856  009538  EC29  F049         	call	_EUSART1_Write
 23857                           
 23858                           ;eusartpackage.c: 60:         EUSART1_Write(package.data.data8[1]);
 23859  00953C  5014               	movf	(write_package@package+3)^0,w,c
 23860  00953E  EC29  F049         	call	_EUSART1_Write
 23861                           
 23862                           ;eusartpackage.c: 61:         EUSART1_Write(package.endbyte);
 23863  009542  5016               	movf	(write_package@package+5)^0,w,c
 23864  009544  EC29  F049         	call	_EUSART1_Write
 23865  009548  0012               	return		;funcret
 23866  00954A                     __end_of_write_package:
 23867                           	callstack 0
 23868                           
 23869 ;; *************** function _EUSART1_Write *****************
 23870 ;; Defined at:
 23871 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 23872 ;; Parameters:    Size  Location     Type
 23873 ;;  txData          1    wreg     unsigned char 
 23874 ;; Auto vars:     Size  Location     Type
 23875 ;;  txData          1   15[COMRAM] unsigned char 
 23876 ;; Return value:  Size  Location     Type
 23877 ;;                  1    wreg      void 
 23878 ;; Registers used:
 23879 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23880 ;; Tracked objects:
 23881 ;;		On entry : 0/0
 23882 ;;		On exit  : 3F/E
 23883 ;;		Unchanged: 0/0
 23884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23886 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23888 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23889 ;;Total ram usage:        1 bytes
 23890 ;; Hardware stack levels used: 1
 23891 ;; Hardware stack levels required when called: 4
 23892 ;; This function calls:
 23893 ;;		Nothing
 23894 ;; This function is called by:
 23895 ;;		_write_package
 23896 ;; This function uses a non-reentrant model
 23897 ;;
 23898                           
 23899                           	psect	text80
 23900  009252                     __ptext80:
 23901                           	callstack 0
 23902  009252                     _EUSART1_Write:
 23903                           	callstack 24
 23904                           
 23905                           ;incstack = 0
 23906                           ;EUSART1_Write@txData stored from wreg
 23907  009252  6E10               	movwf	EUSART1_Write@txData^0,c
 23908  009254                     
 23909                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 23910                           
 23911                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 23912  009254  0101               	movlb	1	; () banked
 23913  009256  51FD               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 23914  009258  B4D8               	btfsc	status,2,c
 23915  00925A  D7FC               	goto	l20227
 23916                           
 23917                           ; BSR set to: 1
 23918                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 23919  00925C  010E               	movlb	14	; () banked
 23920  00925E  B9C5               	btfsc	197,4,b	;volatile
 23921  009260  D003               	goto	l100
 23922                           
 23923                           ; BSR set to: 14
 23924                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 23925  009262  C010  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
 23926                           
 23927                           ;mcc_generated_files/eusart1.c: 182:     }
 23928  009266  D012               	goto	l20243
 23929  009268                     l100:
 23930                           
 23931                           ; BSR set to: 14
 23932                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 23933  009268  99C5               	bcf	197,4,b	;volatile
 23934                           
 23935                           ; BSR set to: 14
 23936                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 23937  00926A  0E84               	movlw	low _eusart1TxBuffer
 23938  00926C  0100               	movlb	0	; () banked
 23939  00926E  258E               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 23940  009270  6ED9               	movwf	fsr2l,c
 23941  009272  6ADA               	clrf	fsr2h,c
 23942  009274  0E02               	movlw	high _eusart1TxBuffer
 23943  009276  22DA               	addwfc	fsr2h,f,c
 23944  009278  C010  FFDF         	movff	EUSART1_Write@txData,indf2
 23945                           
 23946                           ; BSR set to: 0
 23947  00927C  2B8E               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 23948                           
 23949                           ; BSR set to: 0
 23950                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 23951  00927E  0E07               	movlw	7
 23952  009280  658E               	cpfsgt	_eusart1TxHead& (0+255),b
 23953  009282  D002               	goto	l20241
 23954                           
 23955                           ; BSR set to: 0
 23956                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 23957  009284  0E00               	movlw	0
 23958  009286  6F8E               	movwf	_eusart1TxHead& (0+255),b	;volatile
 23959  009288                     l20241:
 23960                           
 23961                           ; BSR set to: 0
 23962                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 23963  009288  0101               	movlb	1	; () banked
 23964  00928A  07FD               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 23965  00928C                     l20243:
 23966                           
 23967                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 23968  00928C  010E               	movlb	14	; () banked
 23969  00928E  89C5               	bsf	197,4,b	;volatile
 23970                           
 23971                           ; BSR set to: 14
 23972  009290  0012               	return		;funcret
 23973  009292                     __end_of_EUSART1_Write:
 23974                           	callstack 0
 23975                           
 23976 ;; *************** function _confirmpackage *****************
 23977 ;; Defined at:
 23978 ;;		line 473 in file "eusartparser.c"
 23979 ;; Parameters:    Size  Location     Type
 23980 ;;  package         2   17[COMRAM] PTR struct package_t
 23981 ;;		 -> updateChangesToUart@package(7), main@package(7), 
 23982 ;;  confirm         1   19[COMRAM] _Bool 
 23983 ;; Auto vars:     Size  Location     Type
 23984 ;;		None
 23985 ;; Return value:  Size  Location     Type
 23986 ;;                  1    wreg      void 
 23987 ;; Registers used:
 23988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23989 ;; Tracked objects:
 23990 ;;		On entry : 0/0
 23991 ;;		On exit  : 0/0
 23992 ;;		Unchanged: 0/0
 23993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23994 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23997 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23998 ;;Total ram usage:        3 bytes
 23999 ;; Hardware stack levels used: 1
 24000 ;; Hardware stack levels required when called: 5
 24001 ;; This function calls:
 24002 ;;		_init_package
 24003 ;; This function is called by:
 24004 ;;		_eusartparser
 24005 ;;		_updateChangesToUart
 24006 ;; This function uses a non-reentrant model
 24007 ;;
 24008                           
 24009                           	psect	text81
 24010  008C88                     __ptext81:
 24011                           	callstack 0
 24012  008C88                     _confirmpackage:
 24013                           	callstack 23
 24014                           
 24015                           ;eusartparser.c: 474:     init_package(package);
 24016                           
 24017                           ; BSR set to: 14
 24018                           ;incstack = 0
 24019  008C88  C012  F010         	movff	confirmpackage@package,init_package@package
 24020  008C8C  C013  F011         	movff	confirmpackage@package+1,init_package@package+1
 24021  008C90  EC17  F04A         	call	_init_package	;wreg free
 24022                           
 24023                           ;eusartparser.c: 475:     package->functioncode=0x03;
 24024  008C94  C012  FFD9         	movff	confirmpackage@package,fsr2l
 24025  008C98  C013  FFDA         	movff	confirmpackage@package+1,fsr2h
 24026  008C9C  0E03               	movlw	3
 24027  008C9E  6EDF               	movwf	indf2,c
 24028                           
 24029                           ;eusartparser.c: 476:     package->address=0x00;
 24030  008CA0  EE20 F001          	lfsr	2,1
 24031  008CA4  5012               	movf	confirmpackage@package^0,w,c
 24032  008CA6  26D9               	addwf	fsr2l,f,c
 24033  008CA8  5013               	movf	(confirmpackage@package+1)^0,w,c
 24034  008CAA  22DA               	addwfc	fsr2h,f,c
 24035  008CAC  0E00               	movlw	0
 24036  008CAE  6EDF               	movwf	indf2,c
 24037                           
 24038                           ;eusartparser.c: 477:     if(confirm==1)
 24039  008CB0  0414               	decf	confirmpackage@confirm^0,w,c
 24040  008CB2  A4D8               	btfss	status,2,c
 24041  008CB4  D00B               	goto	l27091
 24042                           
 24043                           ;eusartparser.c: 478:         package->data.data16=0x0001;
 24044  008CB6  EE20 F002          	lfsr	2,2
 24045  008CBA  5012               	movf	confirmpackage@package^0,w,c
 24046  008CBC  26D9               	addwf	fsr2l,f,c
 24047  008CBE  5013               	movf	(confirmpackage@package+1)^0,w,c
 24048  008CC0  22DA               	addwfc	fsr2h,f,c
 24049  008CC2  0E01               	movlw	1
 24050  008CC4  6EDE               	movwf	postinc2,c
 24051  008CC6  0E00               	movlw	0
 24052  008CC8  6EDD               	movwf	postdec2,c
 24053  008CCA  0012               	return	
 24054  008CCC                     l27091:
 24055                           
 24056                           ;eusartparser.c: 480:         package->data.data16=0x0000;
 24057  008CCC  EE20 F002          	lfsr	2,2
 24058  008CD0  5012               	movf	confirmpackage@package^0,w,c
 24059  008CD2  26D9               	addwf	fsr2l,f,c
 24060  008CD4  5013               	movf	(confirmpackage@package+1)^0,w,c
 24061  008CD6  22DA               	addwfc	fsr2h,f,c
 24062  008CD8  0E00               	movlw	0
 24063  008CDA  6EDE               	movwf	postinc2,c
 24064  008CDC  0E00               	movlw	0
 24065  008CDE  6EDD               	movwf	postdec2,c
 24066  008CE0  0012               	return		;funcret
 24067  008CE2                     __end_of_confirmpackage:
 24068                           	callstack 0
 24069                           
 24070 ;; *************** function _init_package *****************
 24071 ;; Defined at:
 24072 ;;		line 11 in file "eusartpackage.c"
 24073 ;; Parameters:    Size  Location     Type
 24074 ;;  package         2   15[COMRAM] PTR struct package_t
 24075 ;;		 -> updateChangesToUart@package(7), main@package(7), 
 24076 ;; Auto vars:     Size  Location     Type
 24077 ;;		None
 24078 ;; Return value:  Size  Location     Type
 24079 ;;                  1    wreg      void 
 24080 ;; Registers used:
 24081 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24082 ;; Tracked objects:
 24083 ;;		On entry : 0/1
 24084 ;;		On exit  : 0/0
 24085 ;;		Unchanged: 0/0
 24086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24087 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24090 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24091 ;;Total ram usage:        2 bytes
 24092 ;; Hardware stack levels used: 1
 24093 ;; Hardware stack levels required when called: 4
 24094 ;; This function calls:
 24095 ;;		Nothing
 24096 ;; This function is called by:
 24097 ;;		_confirmpackage
 24098 ;;		_updateChangesToUart
 24099 ;; This function uses a non-reentrant model
 24100 ;;
 24101                           
 24102                           	psect	text82
 24103  00942E                     __ptext82:
 24104                           	callstack 0
 24105  00942E                     _init_package:
 24106                           	callstack 24
 24107                           
 24108                           ;eusartpackage.c: 12:         package->startbyte=0x0A;
 24109                           
 24110                           ;incstack = 0
 24111  00942E  EE20 F004          	lfsr	2,4
 24112  009432  5010               	movf	init_package@package^0,w,c
 24113  009434  26D9               	addwf	fsr2l,f,c
 24114  009436  5011               	movf	(init_package@package+1)^0,w,c
 24115  009438  22DA               	addwfc	fsr2h,f,c
 24116  00943A  0E0A               	movlw	10
 24117  00943C  6EDF               	movwf	indf2,c
 24118                           
 24119                           ;eusartpackage.c: 13:         package->endbyte=0x0D;
 24120  00943E  EE20 F005          	lfsr	2,5
 24121  009442  5010               	movf	init_package@package^0,w,c
 24122  009444  26D9               	addwf	fsr2l,f,c
 24123  009446  5011               	movf	(init_package@package+1)^0,w,c
 24124  009448  22DA               	addwfc	fsr2h,f,c
 24125  00944A  0E0D               	movlw	13
 24126  00944C  6EDF               	movwf	indf2,c
 24127                           
 24128                           ;eusartpackage.c: 14:         package->valid=1;
 24129  00944E  EE20 F006          	lfsr	2,6
 24130  009452  5010               	movf	init_package@package^0,w,c
 24131  009454  26D9               	addwf	fsr2l,f,c
 24132  009456  5011               	movf	(init_package@package+1)^0,w,c
 24133  009458  22DA               	addwfc	fsr2h,f,c
 24134  00945A  0E01               	movlw	1
 24135  00945C  6EDF               	movwf	indf2,c
 24136  00945E  0012               	return		;funcret
 24137  009460                     __end_of_init_package:
 24138                           	callstack 0
 24139                           
 24140 ;; *************** function _saveNewSerial *****************
 24141 ;; Defined at:
 24142 ;;		line 81 in file "controlMemory_MC50.c"
 24143 ;; Parameters:    Size  Location     Type
 24144 ;;  cmdType         1    wreg     unsigned char 
 24145 ;;  tempSerial      4    0[BANK0 ] unsigned long 
 24146 ;;  position        1    4[BANK0 ] unsigned char 
 24147 ;; Auto vars:     Size  Location     Type
 24148 ;;  cmdType         1    7[BANK0 ] unsigned char 
 24149 ;; Return value:  Size  Location     Type
 24150 ;;                  1    wreg      void 
 24151 ;; Registers used:
 24152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24153 ;; Tracked objects:
 24154 ;;		On entry : 3E/1
 24155 ;;		On exit  : 0/0
 24156 ;;		Unchanged: 0/0
 24157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24158 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24159 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24160 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24161 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24162 ;;Total ram usage:        8 bytes
 24163 ;; Hardware stack levels used: 1
 24164 ;; Hardware stack levels required when called: 13
 24165 ;; This function calls:
 24166 ;;		_i2c_writeNBytes
 24167 ;; This function is called by:
 24168 ;;		_controlSelectRemote
 24169 ;;		_eusartparser
 24170 ;; This function uses a non-reentrant model
 24171 ;;
 24172                           
 24173                           	psect	text83
 24174  008608                     __ptext83:
 24175                           	callstack 0
 24176  008608                     _saveNewSerial:
 24177                           	callstack 14
 24178                           
 24179                           ;incstack = 0
 24180                           ;saveNewSerial@cmdType stored from wreg
 24181  008608  0100               	movlb	0	; () banked
 24182  00860A  6FDF               	movwf	saveNewSerial@cmdType& (0+255),b
 24183                           
 24184                           ;controlMemory_MC50.c: 81: void saveNewSerial(char cmdType,unsigned long tempSerial, cha
      +                          r position);controlMemory_MC50.c: 82: {;controlMemory_MC50.c: 83:     if(cmdType==0)
 24185  00860C  0100               	movlb	0	; () banked
 24186  00860E  51DF               	movf	saveNewSerial@cmdType& (0+255),w,b
 24187  008610  A4D8               	btfss	status,2,c
 24188  008612  D01A               	goto	l20469
 24189                           
 24190                           ; BSR set to: 0
 24191                           ;controlMemory_MC50.c: 84:     {;controlMemory_MC50.c: 86:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
 24192  008614  51DC               	movf	saveNewSerial@position& (0+255),w,b
 24193  008616  6FDD               	movwf	??_saveNewSerial& (0+255),b
 24194  008618  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
 24195  00861A  90D8               	bcf	status,0,c
 24196  00861C  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 24197  00861E  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 24198  008620  90D8               	bcf	status,0,c
 24199  008622  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 24200  008624  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 24201  008626  0E00               	movlw	0
 24202  008628  25DD               	addwf	??_saveNewSerial& (0+255),w,b
 24203  00862A  6E22               	movwf	i2c_writeNBytes@reg^0,c
 24204  00862C  0E02               	movlw	2
 24205  00862E  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
 24206  008630  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 24207  008632  0ED8               	movlw	low saveNewSerial@tempSerial
 24208  008634  6E24               	movwf	i2c_writeNBytes@data^0,c
 24209  008636  6A25               	clrf	(i2c_writeNBytes@data+1)^0,c
 24210  008638  0E00               	movlw	0
 24211  00863A  6E27               	movwf	(i2c_writeNBytes@len+1)^0,c
 24212  00863C  0E04               	movlw	4
 24213  00863E  6E26               	movwf	i2c_writeNBytes@len^0,c
 24214  008640  0E50               	movlw	80
 24215  008642  ECC9  F042         	call	_i2c_writeNBytes
 24216                           
 24217                           ;controlMemory_MC50.c: 87:     }
 24218  008646  0012               	return	
 24219  008648                     l20469:
 24220                           
 24221                           ; BSR set to: 0
 24222                           ;controlMemory_MC50.c: 89:     {;controlMemory_MC50.c: 91:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
 24223  008648  51DC               	movf	saveNewSerial@position& (0+255),w,b
 24224  00864A  6FDD               	movwf	??_saveNewSerial& (0+255),b
 24225  00864C  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
 24226  00864E  90D8               	bcf	status,0,c
 24227  008650  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 24228  008652  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 24229  008654  90D8               	bcf	status,0,c
 24230  008656  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 24231  008658  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 24232  00865A  0E00               	movlw	0
 24233  00865C  25DD               	addwf	??_saveNewSerial& (0+255),w,b
 24234  00865E  6E22               	movwf	i2c_writeNBytes@reg^0,c
 24235  008660  0E05               	movlw	5
 24236  008662  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
 24237  008664  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 24238  008666  0ED8               	movlw	low saveNewSerial@tempSerial
 24239  008668  6E24               	movwf	i2c_writeNBytes@data^0,c
 24240  00866A  6A25               	clrf	(i2c_writeNBytes@data+1)^0,c
 24241  00866C  0E00               	movlw	0
 24242  00866E  6E27               	movwf	(i2c_writeNBytes@len+1)^0,c
 24243  008670  0E04               	movlw	4
 24244  008672  6E26               	movwf	i2c_writeNBytes@len^0,c
 24245  008674  0E50               	movlw	80
 24246  008676  ECC9  F042         	call	_i2c_writeNBytes
 24247  00867A  0012               	return		;funcret
 24248  00867C                     __end_of_saveNewSerial:
 24249                           	callstack 0
 24250                           
 24251 ;; *************** function _cmdMemoryIsEmpty *****************
 24252 ;; Defined at:
 24253 ;;		line 122 in file "controlMemory_MC50.c"
 24254 ;; Parameters:    Size  Location     Type
 24255 ;;  cmdType         1    wreg     unsigned char 
 24256 ;;  position        1   45[COMRAM] unsigned char 
 24257 ;; Auto vars:     Size  Location     Type
 24258 ;;  cmdType         1   48[COMRAM] unsigned char 
 24259 ;;  tempSerial      4   49[COMRAM] unsigned long 
 24260 ;; Return value:  Size  Location     Type
 24261 ;;                  1    wreg      unsigned char 
 24262 ;; Registers used:
 24263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24264 ;; Tracked objects:
 24265 ;;		On entry : 0/1
 24266 ;;		On exit  : 0/0
 24267 ;;		Unchanged: 0/0
 24268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24269 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24270 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24271 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24272 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24273 ;;Total ram usage:        8 bytes
 24274 ;; Hardware stack levels used: 1
 24275 ;; Hardware stack levels required when called: 13
 24276 ;; This function calls:
 24277 ;;		_i2c_readDataBlock
 24278 ;; This function is called by:
 24279 ;;		_setValueToEdit
 24280 ;;		_controlSelectRemote
 24281 ;;		_eusartparser
 24282 ;; This function uses a non-reentrant model
 24283 ;;
 24284                           
 24285                           	psect	text84
 24286  007DC6                     __ptext84:
 24287                           	callstack 0
 24288  007DC6                     _cmdMemoryIsEmpty:
 24289                           	callstack 14
 24290                           
 24291                           ;incstack = 0
 24292                           ;cmdMemoryIsEmpty@cmdType stored from wreg
 24293  007DC6  6E31               	movwf	cmdMemoryIsEmpty@cmdType^0,c
 24294                           
 24295                           ;controlMemory_MC50.c: 122: char cmdMemoryIsEmpty(char cmdType, char position);controlMe
      +                          mory_MC50.c: 123: {;controlMemory_MC50.c: 124:     unsigned long tempSerial=0;
 24296  007DC8  0E00               	movlw	0
 24297  007DCA  6E32               	movwf	cmdMemoryIsEmpty@tempSerial^0,c
 24298  007DCC  0E00               	movlw	0
 24299  007DCE  6E33               	movwf	(cmdMemoryIsEmpty@tempSerial+1)^0,c
 24300  007DD0  0E00               	movlw	0
 24301  007DD2  6E34               	movwf	(cmdMemoryIsEmpty@tempSerial+2)^0,c
 24302  007DD4  0E00               	movlw	0
 24303  007DD6  6E35               	movwf	(cmdMemoryIsEmpty@tempSerial+3)^0,c
 24304                           
 24305                           ;controlMemory_MC50.c: 127:      if(cmdType==0)
 24306  007DD8  5031               	movf	cmdMemoryIsEmpty@cmdType^0,w,c
 24307  007DDA  A4D8               	btfss	status,2,c
 24308  007DDC  D01A               	goto	l20485
 24309                           
 24310                           ;controlMemory_MC50.c: 128:     {;controlMemory_MC50.c: 129:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0200 + (position * 4)),(char*)&tempSerial, 4);
 24311  007DDE  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
 24312  007DE0  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
 24313  007DE2  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
 24314  007DE4  90D8               	bcf	status,0,c
 24315  007DE6  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24316  007DE8  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24317  007DEA  90D8               	bcf	status,0,c
 24318  007DEC  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24319  007DEE  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24320  007DF0  0E00               	movlw	0
 24321  007DF2  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
 24322  007DF4  6E22               	movwf	i2c_readDataBlock@reg^0,c
 24323  007DF6  0E02               	movlw	2
 24324  007DF8  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
 24325  007DFA  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 24326  007DFC  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
 24327  007DFE  6E24               	movwf	i2c_readDataBlock@data^0,c
 24328  007E00  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 24329  007E02  0E00               	movlw	0
 24330  007E04  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 24331  007E06  0E04               	movlw	4
 24332  007E08  6E26               	movwf	i2c_readDataBlock@len^0,c
 24333  007E0A  0E50               	movlw	80
 24334  007E0C  EC8E  F042         	call	_i2c_readDataBlock
 24335                           
 24336                           ;controlMemory_MC50.c: 130:     }
 24337  007E10  D019               	goto	l20487
 24338  007E12                     l20485:
 24339                           
 24340                           ;controlMemory_MC50.c: 132:     {;controlMemory_MC50.c: 133:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0500 + (position * 4)),(char*)&tempSerial, 4);
 24341  007E12  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
 24342  007E14  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
 24343  007E16  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
 24344  007E18  90D8               	bcf	status,0,c
 24345  007E1A  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24346  007E1C  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24347  007E1E  90D8               	bcf	status,0,c
 24348  007E20  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24349  007E22  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24350  007E24  0E00               	movlw	0
 24351  007E26  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
 24352  007E28  6E22               	movwf	i2c_readDataBlock@reg^0,c
 24353  007E2A  0E05               	movlw	5
 24354  007E2C  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
 24355  007E2E  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 24356  007E30  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
 24357  007E32  6E24               	movwf	i2c_readDataBlock@data^0,c
 24358  007E34  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 24359  007E36  0E00               	movlw	0
 24360  007E38  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 24361  007E3A  0E04               	movlw	4
 24362  007E3C  6E26               	movwf	i2c_readDataBlock@len^0,c
 24363  007E3E  0E50               	movlw	80
 24364  007E40  EC8E  F042         	call	_i2c_readDataBlock
 24365  007E44                     l20487:
 24366                           
 24367                           ;controlMemory_MC50.c: 136:      if( tempSerial==0)
 24368  007E44  5032               	movf	cmdMemoryIsEmpty@tempSerial^0,w,c
 24369  007E46  1033               	iorwf	(cmdMemoryIsEmpty@tempSerial+1)^0,w,c
 24370  007E48  1034               	iorwf	(cmdMemoryIsEmpty@tempSerial+2)^0,w,c
 24371  007E4A  1035               	iorwf	(cmdMemoryIsEmpty@tempSerial+3)^0,w,c
 24372  007E4C  A4D8               	btfss	status,2,c
 24373  007E4E  D002               	goto	l20495
 24374                           
 24375                           ;controlMemory_MC50.c: 137:      {;controlMemory_MC50.c: 138:          return 1;
 24376  007E50  0E01               	movlw	1
 24377  007E52  0012               	return	
 24378  007E54                     l20495:
 24379                           
 24380                           ;controlMemory_MC50.c: 141:      {;controlMemory_MC50.c: 142:          return 0;
 24381  007E54  0E00               	movlw	0
 24382  007E56  0012               	return		;funcret
 24383  007E58                     __end_of_cmdMemoryIsEmpty:
 24384                           	callstack 0
 24385                           
 24386 ;; *************** function _RemoveSerial *****************
 24387 ;; Defined at:
 24388 ;;		line 95 in file "controlMemory_MC50.c"
 24389 ;; Parameters:    Size  Location     Type
 24390 ;;  cmdType         1    wreg     unsigned char 
 24391 ;;  position        1    0[BANK0 ] unsigned char 
 24392 ;; Auto vars:     Size  Location     Type
 24393 ;;  cmdType         1    3[BANK0 ] unsigned char 
 24394 ;;  tempSerial      4    4[BANK0 ] unsigned long 
 24395 ;; Return value:  Size  Location     Type
 24396 ;;                  1    wreg      void 
 24397 ;; Registers used:
 24398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24399 ;; Tracked objects:
 24400 ;;		On entry : 3E/1
 24401 ;;		On exit  : 0/0
 24402 ;;		Unchanged: 0/0
 24403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24404 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24405 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24406 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24407 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24408 ;;Total ram usage:        8 bytes
 24409 ;; Hardware stack levels used: 1
 24410 ;; Hardware stack levels required when called: 13
 24411 ;; This function calls:
 24412 ;;		_i2c_writeNBytes
 24413 ;; This function is called by:
 24414 ;;		_controlSelectRemote
 24415 ;;		_eusartparser
 24416 ;; This function uses a non-reentrant model
 24417 ;;
 24418                           
 24419                           	psect	text85
 24420  00819E                     __ptext85:
 24421                           	callstack 0
 24422  00819E                     _RemoveSerial:
 24423                           	callstack 14
 24424                           
 24425                           ;incstack = 0
 24426                           ;RemoveSerial@cmdType stored from wreg
 24427  00819E  0100               	movlb	0	; () banked
 24428  0081A0  6FDB               	movwf	RemoveSerial@cmdType& (0+255),b
 24429                           
 24430                           ;controlMemory_MC50.c: 95: void RemoveSerial(char cmdType, char position);controlMemory_
      +                          MC50.c: 96: {;controlMemory_MC50.c: 97:     unsigned long tempSerial=0;
 24431  0081A2  0E00               	movlw	0
 24432  0081A4  0100               	movlb	0	; () banked
 24433  0081A6  6FDC               	movwf	RemoveSerial@tempSerial& (0+255),b
 24434  0081A8  0E00               	movlw	0
 24435  0081AA  6FDD               	movwf	(RemoveSerial@tempSerial+1)& (0+255),b
 24436  0081AC  0E00               	movlw	0
 24437  0081AE  6FDE               	movwf	(RemoveSerial@tempSerial+2)& (0+255),b
 24438  0081B0  0E00               	movlw	0
 24439  0081B2  6FDF               	movwf	(RemoveSerial@tempSerial+3)& (0+255),b
 24440                           
 24441                           ; BSR set to: 0
 24442                           ;controlMemory_MC50.c: 100:     if(cmdType==0)
 24443  0081B4  51DB               	movf	RemoveSerial@cmdType& (0+255),w,b
 24444  0081B6  A4D8               	btfss	status,2,c
 24445  0081B8  D01A               	goto	l20477
 24446                           
 24447                           ; BSR set to: 0
 24448                           ;controlMemory_MC50.c: 101:     {;controlMemory_MC50.c: 102:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
 24449  0081BA  51D8               	movf	RemoveSerial@position& (0+255),w,b
 24450  0081BC  6FD9               	movwf	??_RemoveSerial& (0+255),b
 24451  0081BE  6BDA               	clrf	(??_RemoveSerial+1)& (0+255),b
 24452  0081C0  90D8               	bcf	status,0,c
 24453  0081C2  37D9               	rlcf	??_RemoveSerial& (0+255),f,b
 24454  0081C4  37DA               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 24455  0081C6  90D8               	bcf	status,0,c
 24456  0081C8  37D9               	rlcf	??_RemoveSerial& (0+255),f,b
 24457  0081CA  37DA               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 24458  0081CC  0E00               	movlw	0
 24459  0081CE  25D9               	addwf	??_RemoveSerial& (0+255),w,b
 24460  0081D0  6E22               	movwf	i2c_writeNBytes@reg^0,c
 24461  0081D2  0E02               	movlw	2
 24462  0081D4  21DA               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
 24463  0081D6  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 24464  0081D8  0EDC               	movlw	low RemoveSerial@tempSerial
 24465  0081DA  6E24               	movwf	i2c_writeNBytes@data^0,c
 24466  0081DC  6A25               	clrf	(i2c_writeNBytes@data+1)^0,c
 24467  0081DE  0E00               	movlw	0
 24468  0081E0  6E27               	movwf	(i2c_writeNBytes@len+1)^0,c
 24469  0081E2  0E04               	movlw	4
 24470  0081E4  6E26               	movwf	i2c_writeNBytes@len^0,c
 24471  0081E6  0E50               	movlw	80
 24472  0081E8  ECC9  F042         	call	_i2c_writeNBytes
 24473                           
 24474                           ;controlMemory_MC50.c: 103:     }
 24475  0081EC  0012               	return	
 24476  0081EE                     l20477:
 24477                           
 24478                           ; BSR set to: 0
 24479                           ;controlMemory_MC50.c: 105:     {;controlMemory_MC50.c: 106:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
 24480  0081EE  51D8               	movf	RemoveSerial@position& (0+255),w,b
 24481  0081F0  6FD9               	movwf	??_RemoveSerial& (0+255),b
 24482  0081F2  6BDA               	clrf	(??_RemoveSerial+1)& (0+255),b
 24483  0081F4  90D8               	bcf	status,0,c
 24484  0081F6  37D9               	rlcf	??_RemoveSerial& (0+255),f,b
 24485  0081F8  37DA               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 24486  0081FA  90D8               	bcf	status,0,c
 24487  0081FC  37D9               	rlcf	??_RemoveSerial& (0+255),f,b
 24488  0081FE  37DA               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 24489  008200  0E00               	movlw	0
 24490  008202  25D9               	addwf	??_RemoveSerial& (0+255),w,b
 24491  008204  6E22               	movwf	i2c_writeNBytes@reg^0,c
 24492  008206  0E05               	movlw	5
 24493  008208  21DA               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
 24494  00820A  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 24495  00820C  0EDC               	movlw	low RemoveSerial@tempSerial
 24496  00820E  6E24               	movwf	i2c_writeNBytes@data^0,c
 24497  008210  6A25               	clrf	(i2c_writeNBytes@data+1)^0,c
 24498  008212  0E00               	movlw	0
 24499  008214  6E27               	movwf	(i2c_writeNBytes@len+1)^0,c
 24500  008216  0E04               	movlw	4
 24501  008218  6E26               	movwf	i2c_writeNBytes@len^0,c
 24502  00821A  0E50               	movlw	80
 24503  00821C  ECC9  F042         	call	_i2c_writeNBytes
 24504  008220  0012               	return		;funcret
 24505  008222                     __end_of_RemoveSerial:
 24506                           	callstack 0
 24507                           
 24508 ;; *************** function _ReadSerial *****************
 24509 ;; Defined at:
 24510 ;;		line 110 in file "controlMemory_MC50.c"
 24511 ;; Parameters:    Size  Location     Type
 24512 ;;  cmdType         1    wreg     unsigned char 
 24513 ;;  tempSerial      1   45[COMRAM] PTR unsigned long 
 24514 ;;		 -> eusartparser@serial(4), 
 24515 ;;  position        1   46[COMRAM] unsigned char 
 24516 ;; Auto vars:     Size  Location     Type
 24517 ;;  cmdType         1   49[COMRAM] unsigned char 
 24518 ;; Return value:  Size  Location     Type
 24519 ;;                  1    wreg      void 
 24520 ;; Registers used:
 24521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24522 ;; Tracked objects:
 24523 ;;		On entry : 3F/0
 24524 ;;		On exit  : 0/0
 24525 ;;		Unchanged: 0/0
 24526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24527 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24528 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24529 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24530 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24531 ;;Total ram usage:        5 bytes
 24532 ;; Hardware stack levels used: 1
 24533 ;; Hardware stack levels required when called: 13
 24534 ;; This function calls:
 24535 ;;		_i2c_readDataBlock
 24536 ;; This function is called by:
 24537 ;;		_eusartparser
 24538 ;; This function uses a non-reentrant model
 24539 ;;
 24540                           
 24541                           	psect	text86
 24542  0086EC                     __ptext86:
 24543                           	callstack 0
 24544  0086EC                     _ReadSerial:
 24545                           	callstack 16
 24546                           
 24547                           ;incstack = 0
 24548                           ;ReadSerial@cmdType stored from wreg
 24549  0086EC  6E32               	movwf	ReadSerial@cmdType^0,c
 24550                           
 24551                           ;controlMemory_MC50.c: 110: void ReadSerial(char cmdType, unsigned long* tempSerial, cha
      +                          r position);controlMemory_MC50.c: 111: {;controlMemory_MC50.c: 112:     if(cmdType==0)
 24552  0086EE  5032               	movf	ReadSerial@cmdType^0,w,c
 24553  0086F0  A4D8               	btfss	status,2,c
 24554  0086F2  D01A               	goto	l22565
 24555                           
 24556                           ;controlMemory_MC50.c: 113:     {;controlMemory_MC50.c: 114:        i2c_readDataBlock(0x
      +                          50, (uint16_t)(0x0200 + (position * 4)), (char*)tempSerial, 4);
 24557  0086F4  502F               	movf	ReadSerial@position^0,w,c
 24558  0086F6  6E30               	movwf	??_ReadSerial^0,c
 24559  0086F8  6A31               	clrf	(??_ReadSerial+1)^0,c
 24560  0086FA  90D8               	bcf	status,0,c
 24561  0086FC  3630               	rlcf	??_ReadSerial^0,f,c
 24562  0086FE  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 24563  008700  90D8               	bcf	status,0,c
 24564  008702  3630               	rlcf	??_ReadSerial^0,f,c
 24565  008704  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 24566  008706  0E00               	movlw	0
 24567  008708  2430               	addwf	??_ReadSerial^0,w,c
 24568  00870A  6E22               	movwf	i2c_readDataBlock@reg^0,c
 24569  00870C  0E02               	movlw	2
 24570  00870E  2031               	addwfc	(??_ReadSerial+1)^0,w,c
 24571  008710  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 24572  008712  C02E  F024         	movff	ReadSerial@tempSerial,i2c_readDataBlock@data
 24573  008716  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 24574  008718  0E00               	movlw	0
 24575  00871A  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 24576  00871C  0E04               	movlw	4
 24577  00871E  6E26               	movwf	i2c_readDataBlock@len^0,c
 24578  008720  0E50               	movlw	80
 24579  008722  EC8E  F042         	call	_i2c_readDataBlock
 24580                           
 24581                           ;controlMemory_MC50.c: 115:     }
 24582  008726  0012               	return	
 24583  008728                     l22565:
 24584                           
 24585                           ;controlMemory_MC50.c: 117:     {;controlMemory_MC50.c: 118:        i2c_readDataBlock(0x
      +                          50, (uint16_t)(0x0500 + (position * 4)), (char*)tempSerial, 4);
 24586  008728  502F               	movf	ReadSerial@position^0,w,c
 24587  00872A  6E30               	movwf	??_ReadSerial^0,c
 24588  00872C  6A31               	clrf	(??_ReadSerial+1)^0,c
 24589  00872E  90D8               	bcf	status,0,c
 24590  008730  3630               	rlcf	??_ReadSerial^0,f,c
 24591  008732  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 24592  008734  90D8               	bcf	status,0,c
 24593  008736  3630               	rlcf	??_ReadSerial^0,f,c
 24594  008738  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 24595  00873A  0E00               	movlw	0
 24596  00873C  2430               	addwf	??_ReadSerial^0,w,c
 24597  00873E  6E22               	movwf	i2c_readDataBlock@reg^0,c
 24598  008740  0E05               	movlw	5
 24599  008742  2031               	addwfc	(??_ReadSerial+1)^0,w,c
 24600  008744  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 24601  008746  C02E  F024         	movff	ReadSerial@tempSerial,i2c_readDataBlock@data
 24602  00874A  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 24603  00874C  0E00               	movlw	0
 24604  00874E  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 24605  008750  0E04               	movlw	4
 24606  008752  6E26               	movwf	i2c_readDataBlock@len^0,c
 24607  008754  0E50               	movlw	80
 24608  008756  EC8E  F042         	call	_i2c_readDataBlock
 24609  00875A  0012               	return		;funcret
 24610  00875C                     __end_of_ReadSerial:
 24611                           	callstack 0
 24612                           
 24613 ;; *************** function _i2c_readDataBlock *****************
 24614 ;; Defined at:
 24615 ;;		line 147 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 24616 ;; Parameters:    Size  Location     Type
 24617 ;;  address         1    wreg     unsigned char 
 24618 ;;  reg             2   33[COMRAM] unsigned short 
 24619 ;;  data            2   35[COMRAM] PTR void 
 24620 ;;		 -> eusartparser@serial(4), var_sys_NVM.homemPresente(1), cmdMemoryIsEmpty@tempSerial(4), var_sys_NVM.positionRemote
      +sFull(1), 
 24621 ;;		 -> memoryTEMP(16), var_sys_NVM.learningCurrentNormalClose(2), var_sys_NVM(64), 
 24622 ;;  len             2   37[COMRAM] unsigned int 
 24623 ;; Auto vars:     Size  Location     Type
 24624 ;;  address         1   40[COMRAM] unsigned char 
 24625 ;;  d               4   41[COMRAM] struct .
 24626 ;; Return value:  Size  Location     Type
 24627 ;;                  1    wreg      void 
 24628 ;; Registers used:
 24629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24630 ;; Tracked objects:
 24631 ;;		On entry : 0/2
 24632 ;;		On exit  : 0/0
 24633 ;;		Unchanged: 0/0
 24634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24635 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24636 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24637 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24638 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24639 ;;Total ram usage:       12 bytes
 24640 ;; Hardware stack levels used: 1
 24641 ;; Hardware stack levels required when called: 12
 24642 ;; This function calls:
 24643 ;;		_I2C1_Close
 24644 ;;		_I2C1_MasterWrite
 24645 ;;		_I2C1_Open
 24646 ;;		_I2C1_SetAddressNackCallback
 24647 ;;		_I2C1_SetBuffer
 24648 ;;		_I2C1_SetDataCompleteCallback
 24649 ;; This function is called by:
 24650 ;;		_validateRemoteSerialNumber
 24651 ;;		_ReadSerial
 24652 ;;		_cmdMemoryIsEmpty
 24653 ;;		_loadNVM_VarSystem
 24654 ;; This function uses a non-reentrant model
 24655 ;;
 24656                           
 24657                           	psect	text87
 24658  00851C                     __ptext87:
 24659                           	callstack 0
 24660  00851C                     _i2c_readDataBlock:
 24661                           	callstack 14
 24662                           
 24663                           ;incstack = 0
 24664                           ;i2c_readDataBlock@address stored from wreg
 24665  00851C  6E29               	movwf	i2c_readDataBlock@address^0,c
 24666                           
 24667                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147: void i2c_readDataBlock(i2c1_addre
      +                          ss_t address, uint16_t reg, void *data, size_t len);mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 148: {;mcc_generated_files/drivers/i2c_simple_master.c: 149:     buf_t d;;m
      +                          cc_generated_files/drivers/i2c_simple_master.c: 150:     d.data = data;
 24668  00851E  C024  F02C         	movff	i2c_readDataBlock@data,i2c_readDataBlock@d+2
 24669  008522  C025  F02D         	movff	i2c_readDataBlock@data+1,i2c_readDataBlock@d+3
 24670                           
 24671                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151:     d.len = len;
 24672  008526  C026  F02A         	movff	i2c_readDataBlock@len,i2c_readDataBlock@d
 24673  00852A  C027  F02B         	movff	i2c_readDataBlock@len+1,i2c_readDataBlock@d+1
 24674  00852E                     l20263:
 24675  00852E  5023               	movf	(i2c_readDataBlock@reg+1)^0,w,c
 24676  008530  1029               	iorwf	i2c_readDataBlock@address^0,w,c
 24677  008532  EC11  F041         	call	_I2C1_Open
 24678  008536  0900               	iorlw	0
 24679  008538  B4D8               	btfsc	status,2,c
 24680  00853A  D7F9               	goto	l20263
 24681                           
 24682                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          rdBlkRegCompleteHandler,&d);
 24683  00853C  0ED2               	movlw	low _rdBlkRegCompleteHandler
 24684  00853E  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 24685  008540  0E92               	movlw	high _rdBlkRegCompleteHandler
 24686  008542  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 24687  008544  0E2A               	movlw	low i2c_readDataBlock@d
 24688  008546  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 24689  008548  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 24690  00854A  EC19  F04D         	call	_I2C1_SetDataCompleteCallback	;wreg free
 24691                           
 24692                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     I2C1_SetBuffer(&reg,1);
 24693  00854E  0E22               	movlw	low i2c_readDataBlock@reg
 24694  008550  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 24695  008552  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 24696  008554  0E00               	movlw	0
 24697  008556  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 24698  008558  0E01               	movlw	1
 24699  00855A  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 24700  00855C  ECD0  F04C         	call	_I2C1_SetBuffer	;wreg free
 24701                           
 24702                           ; BSR set to: 2
 24703                           ;mcc_generated_files/drivers/i2c_simple_master.c: 156:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 24704  008560  0E00               	movlw	0
 24705  008562  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 24706  008564  0E00               	movlw	0
 24707  008566  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 24708  008568  0E00               	movlw	0
 24709  00856A  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 24710  00856C  0E00               	movlw	0
 24711  00856E  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 24712  008570  EC01  F04D         	call	_I2C1_SetAddressNackCallback	;wreg free
 24713                           
 24714                           ;mcc_generated_files/drivers/i2c_simple_master.c: 157:     I2C1_MasterWrite();
 24715  008574  ECD9  F04D         	call	_I2C1_MasterWrite	;wreg free
 24716  008578                     l20273:
 24717  008578  EC4F  F04C         	call	_I2C1_Close	;wreg free
 24718  00857C  06E8               	decf	wreg,f,c
 24719  00857E  B4D8               	btfsc	status,2,c
 24720  008580  D7FB               	goto	l20273
 24721                           
 24722                           ;mcc_generated_files/drivers/i2c_simple_master.c: 159:     _delay((unsigned long)((10)*(
      +                          64000000/4000.0)));
 24723  008582  0ED0               	movlw	208
 24724  008584  6E28               	movwf	??_i2c_readDataBlock^0,c
 24725  008586  0ECA               	movlw	202
 24726  008588                     u34667:
 24727  008588  2EE8               	decfsz	wreg,f,c
 24728  00858A  D7FE               	bra	u34667
 24729  00858C  2E28               	decfsz	??_i2c_readDataBlock^0,f,c
 24730  00858E  D7FC               	bra	u34667
 24731  008590  0012               	return		;funcret
 24732  008592                     __end_of_i2c_readDataBlock:
 24733                           	callstack 0
 24734                           
 24735 ;; *************** function _WWDT_TimerClear *****************
 24736 ;; Defined at:
 24737 ;;		line 128 in file "mcc_generated_files/mcc.c"
 24738 ;; Parameters:    Size  Location     Type
 24739 ;;		None
 24740 ;; Auto vars:     Size  Location     Type
 24741 ;;  state           1   15[COMRAM] _Bool 
 24742 ;;  readBack        1    0        unsigned char 
 24743 ;; Return value:  Size  Location     Type
 24744 ;;                  1    wreg      void 
 24745 ;; Registers used:
 24746 ;;		wreg, status,2
 24747 ;; Tracked objects:
 24748 ;;		On entry : 0/0
 24749 ;;		On exit  : 0/0
 24750 ;;		Unchanged: 0/0
 24751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24753 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24755 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24756 ;;Total ram usage:        1 bytes
 24757 ;; Hardware stack levels used: 1
 24758 ;; Hardware stack levels required when called: 4
 24759 ;; This function calls:
 24760 ;;		Nothing
 24761 ;; This function is called by:
 24762 ;;		_main
 24763 ;; This function uses a non-reentrant model
 24764 ;;
 24765                           
 24766                           	psect	text88
 24767  0098FE                     __ptext88:
 24768                           	callstack 0
 24769  0098FE                     _WWDT_TimerClear:
 24770                           	callstack 26
 24771                           
 24772                           ;mcc_generated_files/mcc.c: 134:     _Bool state = GIE;
 24773                           
 24774                           ;incstack = 0
 24775  0098FE  0E00               	movlw	0
 24776  009900  BEF2               	btfsc	4082,7,c	;volatile
 24777  009902  0E01               	movlw	1
 24778  009904  6E10               	movwf	WWDT_TimerClear@state^0,c
 24779                           
 24780                           ;mcc_generated_files/mcc.c: 135:     GIE = 0;
 24781  009906  9EF2               	bcf	4082,7,c	;volatile
 24782  009908  010E               	movlb	14	; () banked
 24783  00990A  51D2               	movf	210,w,b	;volatile
 24784  00990C  0004               	clrwdt		;# 
 24785                           
 24786                           ;mcc_generated_files/mcc.c: 138:     GIE = state;
 24787  00990E  B010               	btfsc	WWDT_TimerClear@state^0,0,c
 24788  009910  D002               	bra	u29985
 24789  009912  9EF2               	bcf	4082,7,c	;volatile
 24790  009914  D001               	bra	u29986
 24791  009916                     u29985:
 24792  009916  8EF2               	bsf	4082,7,c	;volatile
 24793  009918                     u29986:
 24794  009918  0012               	return		;funcret
 24795  00991A                     __end_of_WWDT_TimerClear:
 24796                           	callstack 0
 24797                           
 24798 ;; *************** function _WWDT_SoftEnable *****************
 24799 ;; Defined at:
 24800 ;;		line 104 in file "mcc_generated_files/mcc.c"
 24801 ;; Parameters:    Size  Location     Type
 24802 ;;		None
 24803 ;; Auto vars:     Size  Location     Type
 24804 ;;		None
 24805 ;; Return value:  Size  Location     Type
 24806 ;;                  1    wreg      void 
 24807 ;; Registers used:
 24808 ;;		None
 24809 ;; Tracked objects:
 24810 ;;		On entry : 3F/E
 24811 ;;		On exit  : 3F/E
 24812 ;;		Unchanged: 0/0
 24813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24818 ;;Total ram usage:        0 bytes
 24819 ;; Hardware stack levels used: 1
 24820 ;; Hardware stack levels required when called: 4
 24821 ;; This function calls:
 24822 ;;		Nothing
 24823 ;; This function is called by:
 24824 ;;		_main
 24825 ;; This function uses a non-reentrant model
 24826 ;;
 24827                           
 24828                           	psect	text89
 24829  009C38                     __ptext89:
 24830                           	callstack 0
 24831  009C38                     _WWDT_SoftEnable:
 24832                           	callstack 26
 24833                           
 24834                           ; BSR set to: 14
 24835                           ;mcc_generated_files/mcc.c: 107:     WDTCON0bits.SEN=1;
 24836                           
 24837                           ;incstack = 0
 24838  009C38  81D2               	bsf	210,0,b	;volatile
 24839                           
 24840                           ; BSR set to: 14
 24841  009C3A  0012               	return		;funcret
 24842  009C3C                     __end_of_WWDT_SoftEnable:
 24843                           	callstack 0
 24844                           
 24845 ;; *************** function _ShowVersion *****************
 24846 ;; Defined at:
 24847 ;;		line 254 in file "main_MC50.c"
 24848 ;; Parameters:    Size  Location     Type
 24849 ;;		None
 24850 ;; Auto vars:     Size  Location     Type
 24851 ;;		None
 24852 ;; Return value:  Size  Location     Type
 24853 ;;                  1    wreg      void 
 24854 ;; Registers used:
 24855 ;;		wreg, status,2, status,0, cstack
 24856 ;; Tracked objects:
 24857 ;;		On entry : 3F/1
 24858 ;;		On exit  : 3F/0
 24859 ;;		Unchanged: 0/0
 24860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24865 ;;Total ram usage:        0 bytes
 24866 ;; Hardware stack levels used: 1
 24867 ;; Hardware stack levels required when called: 5
 24868 ;; This function calls:
 24869 ;;		_SetSegmentValue
 24870 ;; This function is called by:
 24871 ;;		_main
 24872 ;; This function uses a non-reentrant model
 24873 ;;
 24874                           
 24875                           	psect	text90
 24876  008980                     __ptext90:
 24877                           	callstack 0
 24878  008980                     _ShowVersion:
 24879                           	callstack 25
 24880                           
 24881                           ; BSR set to: 1
 24882                           ;main_MC50.c: 256:     if(ts_system.TimeShowVersion<=0)
 24883                           
 24884                           ; BSR set to: 14
 24885                           ;incstack = 0
 24886  008980  0100               	movlb	0	; () banked
 24887  008982  BFCC               	btfsc	(_ts_system+61)& (0+255),7,b	;volatile
 24888  008984  D005               	goto	u31670
 24889  008986  51CC               	movf	(_ts_system+61)& (0+255),w,b	;volatile
 24890  008988  E130               	bnz	l2052
 24891  00898A  05CB               	decf	(_ts_system+60)& (0+255),w,b	;volatile
 24892  00898C  B0D8               	btfsc	status,0,c
 24893  00898E  0012               	return	
 24894  008990                     u31670:
 24895                           
 24896                           ; BSR set to: 0
 24897                           ;main_MC50.c: 257:     {;main_MC50.c: 259:             if(var_sys.StateVersion==0)
 24898  008990  0101               	movlb	1	; () banked
 24899  008992  519E               	movf	(_var_sys+73)& (0+255),w,b	;volatile
 24900  008994  A4D8               	btfss	status,2,c
 24901  008996  D006               	goto	l25159
 24902                           
 24903                           ; BSR set to: 1
 24904                           ;main_MC50.c: 260:             {;main_MC50.c: 261:                 SetSegmentValue((1/10
      +                          )%10,(1/1)%10);
 24905  008998  0E01               	movlw	1
 24906  00899A  6E1C               	movwf	SetSegmentValue@d2^0,c
 24907  00899C  0E00               	movlw	0
 24908  00899E  ECC3  F04C         	call	_SetSegmentValue
 24909                           
 24910                           ;main_MC50.c: 262:             }
 24911  0089A2  D01C               	goto	l2047
 24912  0089A4                     l25159:
 24913                           
 24914                           ; BSR set to: 1
 24915  0089A4  059E               	decf	(_var_sys+73)& (0+255),w,b	;volatile
 24916  0089A6  A4D8               	btfss	status,2,c
 24917  0089A8  D006               	goto	l25163
 24918                           
 24919                           ; BSR set to: 1
 24920                           ;main_MC50.c: 264:             {;main_MC50.c: 265:                 SetSegmentValue(dr, (
      +                          180/100)%10);
 24921  0089AA  0E01               	movlw	1
 24922  0089AC  6E1C               	movwf	SetSegmentValue@d2^0,c
 24923  0089AE  0E14               	movlw	20
 24924  0089B0  ECC3  F04C         	call	_SetSegmentValue
 24925                           
 24926                           ;main_MC50.c: 266:             }
 24927  0089B4  D013               	goto	l2047
 24928  0089B6                     l25163:
 24929                           
 24930                           ; BSR set to: 1
 24931  0089B6  0E02               	movlw	2
 24932  0089B8  199E               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 24933  0089BA  A4D8               	btfss	status,2,c
 24934  0089BC  D006               	goto	l25167
 24935                           
 24936                           ; BSR set to: 1
 24937                           ;main_MC50.c: 268:             {;main_MC50.c: 269:                 SetSegmentValue((180/
      +                          10)%10,(180/1)%10);
 24938  0089BE  0E00               	movlw	0
 24939  0089C0  6E1C               	movwf	SetSegmentValue@d2^0,c
 24940  0089C2  0E08               	movlw	8
 24941  0089C4  ECC3  F04C         	call	_SetSegmentValue
 24942                           
 24943                           ;main_MC50.c: 270:             }
 24944  0089C8  D009               	goto	l2047
 24945  0089CA                     l25167:
 24946                           
 24947                           ; BSR set to: 1
 24948  0089CA  0E03               	movlw	3
 24949  0089CC  199E               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 24950  0089CE  A4D8               	btfss	status,2,c
 24951  0089D0  D005               	goto	l2047
 24952                           
 24953                           ; BSR set to: 1
 24954                           ;main_MC50.c: 272:             {;main_MC50.c: 273:                SetSegmentValue(dr, d2
      +                          );
 24955  0089D2  0E02               	movlw	2
 24956  0089D4  6E1C               	movwf	SetSegmentValue@d2^0,c
 24957  0089D6  0E14               	movlw	20
 24958  0089D8  ECC3  F04C         	call	_SetSegmentValue
 24959  0089DC                     l2047:
 24960                           
 24961                           ;main_MC50.c: 282:         var_sys.StateVersion++;
 24962                           
 24963                           ; BSR set to: 1
 24964  0089DC  0101               	movlb	1	; () banked
 24965  0089DE  2B9E               	incf	(_var_sys+73)& (0+255),f,b	;volatile
 24966                           
 24967                           ; BSR set to: 1
 24968                           ;main_MC50.c: 283:         ts_system.TimeShowVersion=(1000/50);
 24969  0089E0  0E00               	movlw	0
 24970  0089E2  0100               	movlb	0	; () banked
 24971  0089E4  6FCC               	movwf	(_ts_system+61)& (0+255),b	;volatile
 24972  0089E6  0E14               	movlw	20
 24973  0089E8  6FCB               	movwf	(_ts_system+60)& (0+255),b	;volatile
 24974  0089EA                     l2052:
 24975                           
 24976                           ; BSR set to: 0
 24977  0089EA  0012               	return		;funcret
 24978  0089EC                     __end_of_ShowVersion:
 24979                           	callstack 0
 24980                           
 24981 ;; *************** function _SetSegmentValue *****************
 24982 ;; Defined at:
 24983 ;;		line 112 in file "outputs_MC50.c"
 24984 ;; Parameters:    Size  Location     Type
 24985 ;;  d1              1    wreg     unsigned char 
 24986 ;;  d2              1   27[COMRAM] unsigned char 
 24987 ;; Auto vars:     Size  Location     Type
 24988 ;;  d1              1   28[COMRAM] unsigned char 
 24989 ;; Return value:  Size  Location     Type
 24990 ;;                  1    wreg      void 
 24991 ;; Registers used:
 24992 ;;		wreg, status,2
 24993 ;; Tracked objects:
 24994 ;;		On entry : 0/0
 24995 ;;		On exit  : 3F/0
 24996 ;;		Unchanged: 0/0
 24997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24998 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24999 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25001 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25002 ;;Total ram usage:        2 bytes
 25003 ;; Hardware stack levels used: 1
 25004 ;; Hardware stack levels required when called: 4
 25005 ;; This function calls:
 25006 ;;		Nothing
 25007 ;; This function is called by:
 25008 ;;		_main
 25009 ;;		_ShowVersion
 25010 ;;		_controlSelectRemote
 25011 ;; This function uses a non-reentrant model
 25012 ;;
 25013                           
 25014                           	psect	text91
 25015  009986                     __ptext91:
 25016                           	callstack 0
 25017  009986                     _SetSegmentValue:
 25018                           	callstack 23
 25019                           
 25020                           ; BSR set to: 0
 25021                           ;incstack = 0
 25022                           ;SetSegmentValue@d1 stored from wreg
 25023  009986  6E1D               	movwf	SetSegmentValue@d1^0,c
 25024                           
 25025                           ;outputs_MC50.c: 112: void SetSegmentValue(char d1, char d2);outputs_MC50.c: 113: {;outp
      +                          uts_MC50.c: 117:         dispStruct.display_grp.value_display1=d1;
 25026  009988  C01D  F060         	movff	SetSegmentValue@d1,_dispStruct	;volatile
 25027                           
 25028                           ;outputs_MC50.c: 118:         dispStruct.display_grp.value_display2=d2;
 25029  00998C  C01C  F061         	movff	SetSegmentValue@d2,_dispStruct+1	;volatile
 25030                           
 25031                           ;outputs_MC50.c: 119:         dispStruct.intermitentFreq=0;
 25032  009990  0E00               	movlw	0
 25033  009992  0100               	movlb	0	; () banked
 25034  009994  6F64               	movwf	(_dispStruct+4)& (0+255),b	;volatile
 25035  009996  0E00               	movlw	0
 25036  009998  6F63               	movwf	(_dispStruct+3)& (0+255),b	;volatile
 25037                           
 25038                           ; BSR set to: 0
 25039                           ;outputs_MC50.c: 120:         dispStruct.upFase=0;
 25040  00999A  0E00               	movlw	0
 25041  00999C  6F65               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 25042                           
 25043                           ; BSR set to: 0
 25044  00999E  0012               	return		;funcret
 25045  0099A0                     __end_of_SetSegmentValue:
 25046                           	callstack 0
 25047                           
 25048 ;; *************** function _SYSTEM_Initialize *****************
 25049 ;; Defined at:
 25050 ;;		line 50 in file "mcc_generated_files/mcc.c"
 25051 ;; Parameters:    Size  Location     Type
 25052 ;;		None
 25053 ;; Auto vars:     Size  Location     Type
 25054 ;;		None
 25055 ;; Return value:  Size  Location     Type
 25056 ;;                  1    wreg      void 
 25057 ;; Registers used:
 25058 ;;		wreg, status,2, status,0, cstack
 25059 ;; Tracked objects:
 25060 ;;		On entry : 3F/0
 25061 ;;		On exit  : 3F/E
 25062 ;;		Unchanged: 0/0
 25063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25068 ;;Total ram usage:        0 bytes
 25069 ;; Hardware stack levels used: 1
 25070 ;; Hardware stack levels required when called: 6
 25071 ;; This function calls:
 25072 ;;		_ADCC_Initialize
 25073 ;;		_EUSART1_Initialize
 25074 ;;		_I2C1_Initialize
 25075 ;;		_INTERRUPT_Initialize
 25076 ;;		_OSCILLATOR_Initialize
 25077 ;;		_PIN_MANAGER_Initialize
 25078 ;;		_PMD_Initialize
 25079 ;;		_TMR0_Initialize
 25080 ;;		_TMR1_Initialize
 25081 ;;		_TMR2_Initialize
 25082 ;;		_WWDT_Initialize
 25083 ;; This function is called by:
 25084 ;;		_main
 25085 ;; This function uses a non-reentrant model
 25086 ;;
 25087                           
 25088                           	psect	text92
 25089  0094F0                     __ptext92:
 25090                           	callstack 0
 25091  0094F0                     _SYSTEM_Initialize:
 25092                           	callstack 24
 25093                           
 25094                           ; BSR set to: 0
 25095                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 25096                           
 25097                           ; BSR set to: 0
 25098                           ;incstack = 0
 25099  0094F0  EC1E  F04E         	call	_INTERRUPT_Initialize	;wreg free
 25100                           
 25101                           ; BSR set to: 0
 25102                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 25103  0094F4  EC8D  F04C         	call	_PMD_Initialize	;wreg free
 25104                           
 25105                           ; BSR set to: 14
 25106                           ;mcc_generated_files/mcc.c: 54:     I2C1_Initialize();
 25107  0094F8  EC59  F04D         	call	_I2C1_Initialize	;wreg free
 25108                           
 25109                           ; BSR set to: 14
 25110                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 25111  0094FC  EC97  F03E         	call	_PIN_MANAGER_Initialize	;wreg free
 25112                           
 25113                           ; BSR set to: 14
 25114                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 25115  009500  EC25  F04D         	call	_OSCILLATOR_Initialize	;wreg free
 25116                           
 25117                           ; BSR set to: 14
 25118                           ;mcc_generated_files/mcc.c: 57:     WWDT_Initialize();
 25119  009504  EC9D  F04D         	call	_WWDT_Initialize	;wreg free
 25120                           
 25121                           ; BSR set to: 14
 25122                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 25123  009508  EC99  F047         	call	_ADCC_Initialize	;wreg free
 25124                           
 25125                           ; BSR set to: 15
 25126                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 25127  00950C  ECA5  F04A         	call	_TMR2_Initialize	;wreg free
 25128                           
 25129                           ; BSR set to: 14
 25130                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
 25131  009510  EC08  F049         	call	_TMR1_Initialize	;wreg free
 25132                           
 25133                           ; BSR set to: 14
 25134                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
 25135  009514  EC3E  F04C         	call	_TMR0_Initialize	;wreg free
 25136                           
 25137                           ; BSR set to: 14
 25138                           ;mcc_generated_files/mcc.c: 62:     EUSART1_Initialize();
 25139  009518  ECD5  F041         	call	_EUSART1_Initialize	;wreg free
 25140                           
 25141                           ; BSR set to: 14
 25142  00951C  0012               	return		;funcret
 25143  00951E                     __end_of_SYSTEM_Initialize:
 25144                           	callstack 0
 25145                           
 25146 ;; *************** function _WWDT_Initialize *****************
 25147 ;; Defined at:
 25148 ;;		line 96 in file "mcc_generated_files/mcc.c"
 25149 ;; Parameters:    Size  Location     Type
 25150 ;;		None
 25151 ;; Auto vars:     Size  Location     Type
 25152 ;;		None
 25153 ;; Return value:  Size  Location     Type
 25154 ;;                  1    wreg      void 
 25155 ;; Registers used:
 25156 ;;		wreg, status,2
 25157 ;; Tracked objects:
 25158 ;;		On entry : 3F/E
 25159 ;;		On exit  : 3F/E
 25160 ;;		Unchanged: 0/0
 25161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25166 ;;Total ram usage:        0 bytes
 25167 ;; Hardware stack levels used: 1
 25168 ;; Hardware stack levels required when called: 4
 25169 ;; This function calls:
 25170 ;;		Nothing
 25171 ;; This function is called by:
 25172 ;;		_SYSTEM_Initialize
 25173 ;; This function uses a non-reentrant model
 25174 ;;
 25175                           
 25176                           	psect	text93
 25177  009B3A                     __ptext93:
 25178                           	callstack 0
 25179  009B3A                     _WWDT_Initialize:
 25180                           	callstack 25
 25181                           
 25182                           ; BSR set to: 14
 25183                           ;mcc_generated_files/mcc.c: 99:     WDTCON0 = 22;
 25184                           
 25185                           ; BSR set to: 14
 25186                           ;incstack = 0
 25187  009B3A  0E16               	movlw	22
 25188  009B3C  6FD2               	movwf	210,b	;volatile
 25189                           
 25190                           ;mcc_generated_files/mcc.c: 100:     WDTCON1 = 7|32;
 25191  009B3E  0E27               	movlw	39
 25192  009B40  6FD3               	movwf	211,b	;volatile
 25193                           
 25194                           ; BSR set to: 14
 25195  009B42  0012               	return		;funcret
 25196  009B44                     __end_of_WWDT_Initialize:
 25197                           	callstack 0
 25198                           
 25199 ;; *************** function _TMR2_Initialize *****************
 25200 ;; Defined at:
 25201 ;;		line 79 in file "mcc_generated_files/tmr2.c"
 25202 ;; Parameters:    Size  Location     Type
 25203 ;;		None
 25204 ;; Auto vars:     Size  Location     Type
 25205 ;;		None
 25206 ;; Return value:  Size  Location     Type
 25207 ;;                  1    wreg      void 
 25208 ;; Registers used:
 25209 ;;		wreg, status,2, status,0, cstack
 25210 ;; Tracked objects:
 25211 ;;		On entry : 3F/F
 25212 ;;		On exit  : 3F/E
 25213 ;;		Unchanged: 0/0
 25214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25219 ;;Total ram usage:        0 bytes
 25220 ;; Hardware stack levels used: 1
 25221 ;; Hardware stack levels required when called: 5
 25222 ;; This function calls:
 25223 ;;		_TMR2_SetInterruptHandler
 25224 ;; This function is called by:
 25225 ;;		_SYSTEM_Initialize
 25226 ;; This function uses a non-reentrant model
 25227 ;;
 25228                           
 25229                           	psect	text94
 25230  00954A                     __ptext94:
 25231                           	callstack 0
 25232  00954A                     _TMR2_Initialize:
 25233                           	callstack 24
 25234                           
 25235                           ; BSR set to: 15
 25236                           ;mcc_generated_files/tmr2.c: 84:     T2CLKCON = 0x02;
 25237                           
 25238                           ; BSR set to: 14
 25239                           ;incstack = 0
 25240  00954A  0E02               	movlw	2
 25241  00954C  6EBF               	movwf	191,c	;volatile
 25242                           
 25243                           ;mcc_generated_files/tmr2.c: 87:     T2HLT = 0x40;
 25244  00954E  0E40               	movlw	64
 25245  009550  6EBE               	movwf	190,c	;volatile
 25246                           
 25247                           ;mcc_generated_files/tmr2.c: 90:     T2RST = 0x00;
 25248  009552  0E00               	movlw	0
 25249  009554  6EC0               	movwf	192,c	;volatile
 25250                           
 25251                           ;mcc_generated_files/tmr2.c: 93:     T2PR = 0xC7;
 25252  009556  0EC7               	movlw	199
 25253  009558  6EBC               	movwf	188,c	;volatile
 25254                           
 25255                           ;mcc_generated_files/tmr2.c: 96:     T2TMR = 0x00;
 25256  00955A  0E00               	movlw	0
 25257  00955C  6EBB               	movwf	187,c	;volatile
 25258                           
 25259                           ; BSR set to: 15
 25260                           ;mcc_generated_files/tmr2.c: 99:     PIR4bits.TMR2IF = 0;
 25261  00955E  010E               	movlb	14	; () banked
 25262  009560  93CE               	bcf	206,1,b	;volatile
 25263                           
 25264                           ; BSR set to: 14
 25265                           ;mcc_generated_files/tmr2.c: 102:     PIE4bits.TMR2IE = 1;
 25266  009562  83C6               	bsf	198,1,b	;volatile
 25267                           
 25268                           ; BSR set to: 14
 25269                           ;mcc_generated_files/tmr2.c: 105:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHand
      +                          ler);
 25270  009564  0E66               	movlw	low _TMR2_DefaultInterruptHandler
 25271  009566  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
 25272  009568  0E9C               	movlw	high _TMR2_DefaultInterruptHandler
 25273  00956A  6E11               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
 25274  00956C  ECA2  F04D         	call	_TMR2_SetInterruptHandler	;wreg free
 25275                           
 25276                           ; BSR set to: 14
 25277                           ;mcc_generated_files/tmr2.c: 108:     T2CON = 0xD9;
 25278  009570  0ED9               	movlw	217
 25279  009572  6EBD               	movwf	189,c	;volatile
 25280                           
 25281                           ; BSR set to: 14
 25282  009574  0012               	return		;funcret
 25283  009576                     __end_of_TMR2_Initialize:
 25284                           	callstack 0
 25285                           
 25286 ;; *************** function _TMR2_SetInterruptHandler *****************
 25287 ;; Defined at:
 25288 ;;		line 342 in file "mcc_generated_files/tmr2.c"
 25289 ;; Parameters:    Size  Location     Type
 25290 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 25291 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 25292 ;; Auto vars:     Size  Location     Type
 25293 ;;		None
 25294 ;; Return value:  Size  Location     Type
 25295 ;;                  1    wreg      void 
 25296 ;; Registers used:
 25297 ;;		wreg, status,2, status,0
 25298 ;; Tracked objects:
 25299 ;;		On entry : 3F/E
 25300 ;;		On exit  : 3F/E
 25301 ;;		Unchanged: 3F/0
 25302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25303 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25306 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25307 ;;Total ram usage:        2 bytes
 25308 ;; Hardware stack levels used: 1
 25309 ;; Hardware stack levels required when called: 4
 25310 ;; This function calls:
 25311 ;;		Nothing
 25312 ;; This function is called by:
 25313 ;;		_TMR2_Initialize
 25314 ;; This function uses a non-reentrant model
 25315 ;;
 25316                           
 25317                           	psect	text95
 25318  009B44                     __ptext95:
 25319                           	callstack 0
 25320  009B44                     _TMR2_SetInterruptHandler:
 25321                           	callstack 24
 25322                           
 25323                           ; BSR set to: 14
 25324                           ;mcc_generated_files/tmr2.c: 343:     TMR2_InterruptHandler = InterruptHandler;
 25325                           
 25326                           ; BSR set to: 14
 25327                           ;incstack = 0
 25328  009B44  C010  F2DD         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 25329  009B48  C011  F2DE         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 25330                           
 25331                           ; BSR set to: 14
 25332  009B4C  0012               	return		;funcret
 25333  009B4E                     __end_of_TMR2_SetInterruptHandler:
 25334                           	callstack 0
 25335                           
 25336 ;; *************** function _TMR1_Initialize *****************
 25337 ;; Defined at:
 25338 ;;		line 66 in file "mcc_generated_files/tmr1.c"
 25339 ;; Parameters:    Size  Location     Type
 25340 ;;		None
 25341 ;; Auto vars:     Size  Location     Type
 25342 ;;		None
 25343 ;; Return value:  Size  Location     Type
 25344 ;;                  1    wreg      void 
 25345 ;; Registers used:
 25346 ;;		wreg, status,2, status,0, cstack
 25347 ;; Tracked objects:
 25348 ;;		On entry : 3F/E
 25349 ;;		On exit  : 3F/E
 25350 ;;		Unchanged: 0/0
 25351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25354 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25355 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25356 ;;Total ram usage:        2 bytes
 25357 ;; Hardware stack levels used: 1
 25358 ;; Hardware stack levels required when called: 5
 25359 ;; This function calls:
 25360 ;;		_TMR1_SetInterruptHandler
 25361 ;; This function is called by:
 25362 ;;		_SYSTEM_Initialize
 25363 ;; This function uses a non-reentrant model
 25364 ;;
 25365                           
 25366                           	psect	text96
 25367  009210                     __ptext96:
 25368                           	callstack 0
 25369  009210                     _TMR1_Initialize:
 25370                           	callstack 24
 25371                           
 25372                           ; BSR set to: 14
 25373                           ;mcc_generated_files/tmr1.c: 71:     T1GCON = 0x00;
 25374                           
 25375                           ; BSR set to: 14
 25376                           ;incstack = 0
 25377  009210  0E00               	movlw	0
 25378  009212  6ED0               	movwf	208,c	;volatile
 25379                           
 25380                           ;mcc_generated_files/tmr1.c: 74:     T1GATE = 0x00;
 25381  009214  0E00               	movlw	0
 25382  009216  6ED1               	movwf	209,c	;volatile
 25383                           
 25384                           ;mcc_generated_files/tmr1.c: 77:     T1CLK = 0x01;
 25385  009218  0E01               	movlw	1
 25386  00921A  6ED2               	movwf	210,c	;volatile
 25387                           
 25388                           ; BSR set to: 14
 25389                           ;mcc_generated_files/tmr1.c: 80:     TMR1H = 0xFF;
 25390  00921C  68CE               	setf	206,c	;volatile
 25391                           
 25392                           ;mcc_generated_files/tmr1.c: 83:     TMR1L = 0x38;
 25393  00921E  0E38               	movlw	56
 25394  009220  6ECD               	movwf	205,c	;volatile
 25395                           
 25396                           ; BSR set to: 14
 25397                           ;mcc_generated_files/tmr1.c: 86:     PIR4bits.TMR1IF = 0;
 25398  009222  91CE               	bcf	206,0,b	;volatile
 25399                           
 25400                           ; BSR set to: 14
 25401                           ;mcc_generated_files/tmr1.c: 89:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 25402  009224  50CD               	movf	205,w,c	;volatile
 25403  009226  CFCE F012          	movff	4046,??_TMR1_Initialize	;volatile
 25404  00922A  6A13               	clrf	(??_TMR1_Initialize+1)^0,c
 25405  00922C  C012  F013         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 25406  009230  6A12               	clrf	??_TMR1_Initialize^0,c
 25407  009232  1012               	iorwf	??_TMR1_Initialize^0,w,c
 25408  009234  0102               	movlb	2	; () banked
 25409  009236  6FE1               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 25410  009238  5013               	movf	(??_TMR1_Initialize+1)^0,w,c
 25411  00923A  6FE2               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 25412                           
 25413                           ; BSR set to: 2
 25414                           ;mcc_generated_files/tmr1.c: 92:     PIE4bits.TMR1IE = 1;
 25415  00923C  010E               	movlb	14	; () banked
 25416  00923E  81C6               	bsf	198,0,b	;volatile
 25417                           
 25418                           ; BSR set to: 14
 25419                           ;mcc_generated_files/tmr1.c: 95:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 25420  009240  0E68               	movlw	low _TMR1_DefaultInterruptHandler
 25421  009242  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
 25422  009244  0E9C               	movlw	high _TMR1_DefaultInterruptHandler
 25423  009246  6E11               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
 25424  009248  ECA7  F04D         	call	_TMR1_SetInterruptHandler	;wreg free
 25425                           
 25426                           ; BSR set to: 14
 25427                           ;mcc_generated_files/tmr1.c: 98:     T1CON = 0x31;
 25428  00924C  0E31               	movlw	49
 25429  00924E  6ECF               	movwf	207,c	;volatile
 25430                           
 25431                           ; BSR set to: 14
 25432  009250  0012               	return		;funcret
 25433  009252                     __end_of_TMR1_Initialize:
 25434                           	callstack 0
 25435                           
 25436 ;; *************** function _TMR1_SetInterruptHandler *****************
 25437 ;; Defined at:
 25438 ;;		line 192 in file "mcc_generated_files/tmr1.c"
 25439 ;; Parameters:    Size  Location     Type
 25440 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 25441 ;;		 -> TMR1_DefaultInterruptHandler(1), 
 25442 ;; Auto vars:     Size  Location     Type
 25443 ;;		None
 25444 ;; Return value:  Size  Location     Type
 25445 ;;                  1    wreg      void 
 25446 ;; Registers used:
 25447 ;;		wreg, status,2, status,0
 25448 ;; Tracked objects:
 25449 ;;		On entry : 3F/E
 25450 ;;		On exit  : 3F/E
 25451 ;;		Unchanged: 3F/0
 25452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25456 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25457 ;;Total ram usage:        2 bytes
 25458 ;; Hardware stack levels used: 1
 25459 ;; Hardware stack levels required when called: 4
 25460 ;; This function calls:
 25461 ;;		Nothing
 25462 ;; This function is called by:
 25463 ;;		_TMR1_Initialize
 25464 ;; This function uses a non-reentrant model
 25465 ;;
 25466                           
 25467                           	psect	text97
 25468  009B4E                     __ptext97:
 25469                           	callstack 0
 25470  009B4E                     _TMR1_SetInterruptHandler:
 25471                           	callstack 24
 25472                           
 25473                           ; BSR set to: 14
 25474                           ;mcc_generated_files/tmr1.c: 193:     TMR1_InterruptHandler = InterruptHandler;
 25475                           
 25476                           ; BSR set to: 14
 25477                           ;incstack = 0
 25478  009B4E  C010  F2DF         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 25479  009B52  C011  F2E0         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 25480                           
 25481                           ; BSR set to: 14
 25482  009B56  0012               	return		;funcret
 25483  009B58                     __end_of_TMR1_SetInterruptHandler:
 25484                           	callstack 0
 25485                           
 25486 ;; *************** function _TMR0_Initialize *****************
 25487 ;; Defined at:
 25488 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 25489 ;; Parameters:    Size  Location     Type
 25490 ;;		None
 25491 ;; Auto vars:     Size  Location     Type
 25492 ;;		None
 25493 ;; Return value:  Size  Location     Type
 25494 ;;                  1    wreg      void 
 25495 ;; Registers used:
 25496 ;;		wreg, status,2, status,0, cstack
 25497 ;; Tracked objects:
 25498 ;;		On entry : 3F/E
 25499 ;;		On exit  : 3F/E
 25500 ;;		Unchanged: 0/0
 25501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25506 ;;Total ram usage:        0 bytes
 25507 ;; Hardware stack levels used: 1
 25508 ;; Hardware stack levels required when called: 5
 25509 ;; This function calls:
 25510 ;;		_TMR0_SetInterruptHandler
 25511 ;; This function is called by:
 25512 ;;		_SYSTEM_Initialize
 25513 ;; This function uses a non-reentrant model
 25514 ;;
 25515                           
 25516                           	psect	text98
 25517  00987C                     __ptext98:
 25518                           	callstack 0
 25519  00987C                     _TMR0_Initialize:
 25520                           	callstack 24
 25521                           
 25522                           ; BSR set to: 14
 25523                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x41;
 25524                           
 25525                           ; BSR set to: 14
 25526                           ;incstack = 0
 25527  00987C  0E41               	movlw	65
 25528  00987E  6ED6               	movwf	214,c	;volatile
 25529                           
 25530                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x84;
 25531  009880  0E84               	movlw	132
 25532  009882  6ED4               	movwf	212,c	;volatile
 25533                           
 25534                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
 25535  009884  0E00               	movlw	0
 25536  009886  6ED3               	movwf	211,c	;volatile
 25537                           
 25538                           ; BSR set to: 14
 25539                           ;mcc_generated_files/tmr0.c: 81:     PIR0bits.TMR0IF = 0;
 25540  009888  9BCA               	bcf	202,5,b	;volatile
 25541                           
 25542                           ; BSR set to: 14
 25543                           ;mcc_generated_files/tmr0.c: 84:     PIE0bits.TMR0IE = 1;
 25544  00988A  8BC2               	bsf	194,5,b	;volatile
 25545                           
 25546                           ; BSR set to: 14
 25547                           ;mcc_generated_files/tmr0.c: 87:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 25548  00988C  0E6A               	movlw	low _TMR0_DefaultInterruptHandler
 25549  00988E  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 25550  009890  0E9C               	movlw	high _TMR0_DefaultInterruptHandler
 25551  009892  6E11               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 25552  009894  ECAC  F04D         	call	_TMR0_SetInterruptHandler	;wreg free
 25553                           
 25554                           ; BSR set to: 14
 25555                           ;mcc_generated_files/tmr0.c: 90:     T0CON0 = 0x87;
 25556  009898  0E87               	movlw	135
 25557  00989A  6ED5               	movwf	213,c	;volatile
 25558                           
 25559                           ; BSR set to: 14
 25560  00989C  0012               	return		;funcret
 25561  00989E                     __end_of_TMR0_Initialize:
 25562                           	callstack 0
 25563                           
 25564 ;; *************** function _TMR0_SetInterruptHandler *****************
 25565 ;; Defined at:
 25566 ;;		line 143 in file "mcc_generated_files/tmr0.c"
 25567 ;; Parameters:    Size  Location     Type
 25568 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 25569 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 25570 ;; Auto vars:     Size  Location     Type
 25571 ;;		None
 25572 ;; Return value:  Size  Location     Type
 25573 ;;                  1    wreg      void 
 25574 ;; Registers used:
 25575 ;;		wreg, status,2, status,0
 25576 ;; Tracked objects:
 25577 ;;		On entry : 3F/E
 25578 ;;		On exit  : 3F/E
 25579 ;;		Unchanged: 3F/0
 25580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25581 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25584 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25585 ;;Total ram usage:        2 bytes
 25586 ;; Hardware stack levels used: 1
 25587 ;; Hardware stack levels required when called: 4
 25588 ;; This function calls:
 25589 ;;		Nothing
 25590 ;; This function is called by:
 25591 ;;		_TMR0_Initialize
 25592 ;; This function uses a non-reentrant model
 25593 ;;
 25594                           
 25595                           	psect	text99
 25596  009B58                     __ptext99:
 25597                           	callstack 0
 25598  009B58                     _TMR0_SetInterruptHandler:
 25599                           	callstack 24
 25600                           
 25601                           ; BSR set to: 14
 25602                           ;mcc_generated_files/tmr0.c: 144:     TMR0_InterruptHandler = InterruptHandler;
 25603                           
 25604                           ; BSR set to: 14
 25605                           ;incstack = 0
 25606  009B58  C010  F2E3         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 25607  009B5C  C011  F2E4         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 25608                           
 25609                           ; BSR set to: 14
 25610  009B60  0012               	return		;funcret
 25611  009B62                     __end_of_TMR0_SetInterruptHandler:
 25612                           	callstack 0
 25613                           
 25614 ;; *************** function _PMD_Initialize *****************
 25615 ;; Defined at:
 25616 ;;		line 79 in file "mcc_generated_files/mcc.c"
 25617 ;; Parameters:    Size  Location     Type
 25618 ;;		None
 25619 ;; Auto vars:     Size  Location     Type
 25620 ;;		None
 25621 ;; Return value:  Size  Location     Type
 25622 ;;                  1    wreg      void 
 25623 ;; Registers used:
 25624 ;;		wreg, status,2
 25625 ;; Tracked objects:
 25626 ;;		On entry : 3F/0
 25627 ;;		On exit  : 3F/E
 25628 ;;		Unchanged: 0/0
 25629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25634 ;;Total ram usage:        0 bytes
 25635 ;; Hardware stack levels used: 1
 25636 ;; Hardware stack levels required when called: 4
 25637 ;; This function calls:
 25638 ;;		Nothing
 25639 ;; This function is called by:
 25640 ;;		_SYSTEM_Initialize
 25641 ;; This function uses a non-reentrant model
 25642 ;;
 25643                           
 25644                           	psect	text100
 25645  00991A                     __ptext100:
 25646                           	callstack 0
 25647  00991A                     _PMD_Initialize:
 25648                           	callstack 25
 25649                           
 25650                           ; BSR set to: 0
 25651                           ;mcc_generated_files/mcc.c: 82:     PMD0 = 0x00;
 25652                           
 25653                           ; BSR set to: 14
 25654                           ;incstack = 0
 25655  00991A  0E00               	movlw	0
 25656  00991C  010E               	movlb	14	; () banked
 25657  00991E  6FE1               	movwf	225,b	;volatile
 25658                           
 25659                           ;mcc_generated_files/mcc.c: 84:     PMD1 = 0x00;
 25660  009920  0E00               	movlw	0
 25661  009922  6FE2               	movwf	226,b	;volatile
 25662                           
 25663                           ;mcc_generated_files/mcc.c: 86:     PMD2 = 0x00;
 25664  009924  0E00               	movlw	0
 25665  009926  6FE3               	movwf	227,b	;volatile
 25666                           
 25667                           ;mcc_generated_files/mcc.c: 88:     PMD3 = 0x00;
 25668  009928  0E00               	movlw	0
 25669  00992A  6FE4               	movwf	228,b	;volatile
 25670                           
 25671                           ;mcc_generated_files/mcc.c: 90:     PMD4 = 0x00;
 25672  00992C  0E00               	movlw	0
 25673  00992E  6FE5               	movwf	229,b	;volatile
 25674                           
 25675                           ;mcc_generated_files/mcc.c: 92:     PMD5 = 0x00;
 25676  009930  0E00               	movlw	0
 25677  009932  6FE6               	movwf	230,b	;volatile
 25678                           
 25679                           ; BSR set to: 14
 25680  009934  0012               	return		;funcret
 25681  009936                     __end_of_PMD_Initialize:
 25682                           	callstack 0
 25683                           
 25684 ;; *************** function _PIN_MANAGER_Initialize *****************
 25685 ;; Defined at:
 25686 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 25687 ;; Parameters:    Size  Location     Type
 25688 ;;		None
 25689 ;; Auto vars:     Size  Location     Type
 25690 ;;		None
 25691 ;; Return value:  Size  Location     Type
 25692 ;;                  1    wreg      void 
 25693 ;; Registers used:
 25694 ;;		wreg, status,2
 25695 ;; Tracked objects:
 25696 ;;		On entry : 3F/E
 25697 ;;		On exit  : 3F/E
 25698 ;;		Unchanged: 0/0
 25699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25704 ;;Total ram usage:        0 bytes
 25705 ;; Hardware stack levels used: 1
 25706 ;; Hardware stack levels required when called: 4
 25707 ;; This function calls:
 25708 ;;		Nothing
 25709 ;; This function is called by:
 25710 ;;		_SYSTEM_Initialize
 25711 ;; This function uses a non-reentrant model
 25712 ;;
 25713                           
 25714                           	psect	text101
 25715  007D2E                     __ptext101:
 25716                           	callstack 0
 25717  007D2E                     _PIN_MANAGER_Initialize:
 25718                           	callstack 25
 25719                           
 25720                           ; BSR set to: 14
 25721                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 25722                           
 25723                           ; BSR set to: 14
 25724                           ;incstack = 0
 25725  007D2E  0E00               	movlw	0
 25726  007D30  6E87               	movwf	135,c	;volatile
 25727                           
 25728                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 25729  007D32  0E00               	movlw	0
 25730  007D34  6E86               	movwf	134,c	;volatile
 25731                           
 25732                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 25733  007D36  0E00               	movlw	0
 25734  007D38  6E83               	movwf	131,c	;volatile
 25735                           
 25736                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 25737  007D3A  0E00               	movlw	0
 25738  007D3C  6E84               	movwf	132,c	;volatile
 25739                           
 25740                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 25741  007D3E  0E00               	movlw	0
 25742  007D40  6E85               	movwf	133,c	;volatile
 25743                           
 25744                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x00;
 25745  007D42  0E00               	movlw	0
 25746  007D44  6E8C               	movwf	140,c	;volatile
 25747                           
 25748                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x7F;
 25749  007D46  0E7F               	movlw	127
 25750  007D48  6E88               	movwf	136,c	;volatile
 25751                           
 25752                           ; BSR set to: 14
 25753                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 25754  007D4A  6889               	setf	137,c	;volatile
 25755                           
 25756                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x58;
 25757  007D4C  0E58               	movlw	88
 25758  007D4E  6E8A               	movwf	138,c	;volatile
 25759                           
 25760                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
 25761  007D50  0E00               	movlw	0
 25762  007D52  6E8B               	movwf	139,c	;volatile
 25763                           
 25764                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
 25765  007D54  0E00               	movlw	0
 25766  007D56  010F               	movlb	15	; () banked
 25767  007D58  6F26               	movwf	38,b	;volatile
 25768                           
 25769                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
 25770  007D5A  0E00               	movlw	0
 25771  007D5C  6F21               	movwf	33,b	;volatile
 25772                           
 25773                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x00;
 25774  007D5E  0E00               	movlw	0
 25775  007D60  6F19               	movwf	25,b	;volatile
 25776                           
 25777                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x00;
 25778  007D62  0E00               	movlw	0
 25779  007D64  6F2E               	movwf	46,b	;volatile
 25780                           
 25781                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x01;
 25782  007D66  0E01               	movlw	1
 25783  007D68  6F11               	movwf	17,b	;volatile
 25784                           
 25785                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 25786  007D6A  0E00               	movlw	0
 25787  007D6C  6F25               	movwf	37,b	;volatile
 25788                           
 25789                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 25790  007D6E  0E00               	movlw	0
 25791  007D70  6F2D               	movwf	45,b	;volatile
 25792                           
 25793                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0xF7;
 25794  007D72  0EF7               	movlw	247
 25795  007D74  6F18               	movwf	24,b	;volatile
 25796                           
 25797                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 25798  007D76  0E00               	movlw	0
 25799  007D78  6F10               	movwf	16,b	;volatile
 25800                           
 25801                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 25802  007D7A  0E00               	movlw	0
 25803  007D7C  6F20               	movwf	32,b	;volatile
 25804                           
 25805                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 25806  007D7E  0E00               	movlw	0
 25807  007D80  6F2C               	movwf	44,b	;volatile
 25808                           
 25809                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 25810  007D82  0E00               	movlw	0
 25811  007D84  6F0F               	movwf	15,b	;volatile
 25812                           
 25813                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 25814  007D86  0E00               	movlw	0
 25815  007D88  6F17               	movwf	23,b	;volatile
 25816                           
 25817                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 25818  007D8A  0E00               	movlw	0
 25819  007D8C  6F1F               	movwf	31,b	;volatile
 25820                           
 25821                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 25822  007D8E  0E00               	movlw	0
 25823  007D90  6F24               	movwf	36,b	;volatile
 25824                           
 25825                           ; BSR set to: 15
 25826                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 25827  007D92  690E               	setf	14,b	;volatile
 25828                           
 25829                           ; BSR set to: 15
 25830                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 25831  007D94  6916               	setf	22,b	;volatile
 25832                           
 25833                           ; BSR set to: 15
 25834                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 25835  007D96  691E               	setf	30,b	;volatile
 25836                           
 25837                           ; BSR set to: 15
 25838                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 25839  007D98  6923               	setf	35,b	;volatile
 25840                           
 25841                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 25842  007D9A  0E07               	movlw	7
 25843  007D9C  6F2B               	movwf	43,b	;volatile
 25844                           
 25845                           ; BSR set to: 15
 25846                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 25847  007D9E  690D               	setf	13,b	;volatile
 25848                           
 25849                           ; BSR set to: 15
 25850                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 25851  007DA0  6915               	setf	21,b	;volatile
 25852                           
 25853                           ; BSR set to: 15
 25854                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 25855  007DA2  691D               	setf	29,b	;volatile
 25856                           
 25857                           ; BSR set to: 15
 25858                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 25859  007DA4  6922               	setf	34,b	;volatile
 25860                           
 25861                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
 25862  007DA6  0E0F               	movlw	15
 25863  007DA8  6F2A               	movwf	42,b	;volatile
 25864                           
 25865                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
 25866  007DAA  0E13               	movlw	19
 25867  007DAC  010E               	movlb	14	; () banked
 25868  007DAE  6FB7               	movwf	183,b	;volatile
 25869                           
 25870                           ;mcc_generated_files/pin_manager.c: 128:     RX1PPS = 0x16;
 25871  007DB0  0E16               	movlw	22
 25872  007DB2  6FB5               	movwf	181,b	;volatile
 25873                           
 25874                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x0F;
 25875  007DB4  0E0F               	movlw	15
 25876  007DB6  6FFA               	movwf	250,b	;volatile
 25877                           
 25878                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x10;
 25879  007DB8  0E10               	movlw	16
 25880  007DBA  6FFB               	movwf	251,b	;volatile
 25881                           
 25882                           ;mcc_generated_files/pin_manager.c: 131:     RC7PPS = 0x09;
 25883  007DBC  0E09               	movlw	9
 25884  007DBE  6FFE               	movwf	254,b	;volatile
 25885                           
 25886                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 25887  007DC0  0E14               	movlw	20
 25888  007DC2  6FB8               	movwf	184,b	;volatile
 25889                           
 25890                           ; BSR set to: 14
 25891  007DC4  0012               	return		;funcret
 25892  007DC6                     __end_of_PIN_MANAGER_Initialize:
 25893                           	callstack 0
 25894                           
 25895 ;; *************** function _OSCILLATOR_Initialize *****************
 25896 ;; Defined at:
 25897 ;;		line 65 in file "mcc_generated_files/mcc.c"
 25898 ;; Parameters:    Size  Location     Type
 25899 ;;		None
 25900 ;; Auto vars:     Size  Location     Type
 25901 ;;		None
 25902 ;; Return value:  Size  Location     Type
 25903 ;;                  1    wreg      void 
 25904 ;; Registers used:
 25905 ;;		wreg, status,2
 25906 ;; Tracked objects:
 25907 ;;		On entry : 3F/E
 25908 ;;		On exit  : 3F/E
 25909 ;;		Unchanged: 0/0
 25910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25915 ;;Total ram usage:        0 bytes
 25916 ;; Hardware stack levels used: 1
 25917 ;; Hardware stack levels required when called: 4
 25918 ;; This function calls:
 25919 ;;		Nothing
 25920 ;; This function is called by:
 25921 ;;		_SYSTEM_Initialize
 25922 ;; This function uses a non-reentrant model
 25923 ;;
 25924                           
 25925                           	psect	text102
 25926  009A4A                     __ptext102:
 25927                           	callstack 0
 25928  009A4A                     _OSCILLATOR_Initialize:
 25929                           	callstack 25
 25930                           
 25931                           ; BSR set to: 14
 25932                           ;mcc_generated_files/mcc.c: 68:     OSCCON1 = 0x60;
 25933                           
 25934                           ; BSR set to: 14
 25935                           ;incstack = 0
 25936  009A4A  0E60               	movlw	96
 25937  009A4C  6FD8               	movwf	216,b	;volatile
 25938                           
 25939                           ;mcc_generated_files/mcc.c: 70:     OSCCON3 = 0x00;
 25940  009A4E  0E00               	movlw	0
 25941  009A50  6FDA               	movwf	218,b	;volatile
 25942                           
 25943                           ;mcc_generated_files/mcc.c: 72:     OSCEN = 0x00;
 25944  009A52  0E00               	movlw	0
 25945  009A54  6FDC               	movwf	220,b	;volatile
 25946                           
 25947                           ;mcc_generated_files/mcc.c: 74:     OSCFRQ = 0x08;
 25948  009A56  0E08               	movlw	8
 25949  009A58  6FDE               	movwf	222,b	;volatile
 25950                           
 25951                           ;mcc_generated_files/mcc.c: 76:     OSCTUNE = 0x00;
 25952  009A5A  0E00               	movlw	0
 25953  009A5C  6FDD               	movwf	221,b	;volatile
 25954                           
 25955                           ; BSR set to: 14
 25956  009A5E  0012               	return		;funcret
 25957  009A60                     __end_of_OSCILLATOR_Initialize:
 25958                           	callstack 0
 25959                           
 25960 ;; *************** function _INTERRUPT_Initialize *****************
 25961 ;; Defined at:
 25962 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 25963 ;; Parameters:    Size  Location     Type
 25964 ;;		None
 25965 ;; Auto vars:     Size  Location     Type
 25966 ;;		None
 25967 ;; Return value:  Size  Location     Type
 25968 ;;                  1    wreg      void 
 25969 ;; Registers used:
 25970 ;;		None
 25971 ;; Tracked objects:
 25972 ;;		On entry : 3F/0
 25973 ;;		On exit  : 3F/0
 25974 ;;		Unchanged: 3F/0
 25975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25980 ;;Total ram usage:        0 bytes
 25981 ;; Hardware stack levels used: 1
 25982 ;; Hardware stack levels required when called: 4
 25983 ;; This function calls:
 25984 ;;		Nothing
 25985 ;; This function is called by:
 25986 ;;		_SYSTEM_Initialize
 25987 ;; This function uses a non-reentrant model
 25988 ;;
 25989                           
 25990                           	psect	text103
 25991  009C3C                     __ptext103:
 25992                           	callstack 0
 25993  009C3C                     _INTERRUPT_Initialize:
 25994                           	callstack 25
 25995                           
 25996                           ; BSR set to: 0
 25997                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
 25998                           
 25999                           ; BSR set to: 14
 26000                           ;incstack = 0
 26001  009C3C  9AF2               	bcf	242,5,c	;volatile
 26002                           
 26003                           ; BSR set to: 0
 26004  009C3E  0012               	return		;funcret
 26005  009C40                     __end_of_INTERRUPT_Initialize:
 26006                           	callstack 0
 26007                           
 26008 ;; *************** function _I2C1_Initialize *****************
 26009 ;; Defined at:
 26010 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 26011 ;; Parameters:    Size  Location     Type
 26012 ;;		None
 26013 ;; Auto vars:     Size  Location     Type
 26014 ;;		None
 26015 ;; Return value:  Size  Location     Type
 26016 ;;                  1    wreg      void 
 26017 ;; Registers used:
 26018 ;;		wreg, status,2
 26019 ;; Tracked objects:
 26020 ;;		On entry : 3F/E
 26021 ;;		On exit  : 3F/E
 26022 ;;		Unchanged: 3F/0
 26023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26028 ;;Total ram usage:        0 bytes
 26029 ;; Hardware stack levels used: 1
 26030 ;; Hardware stack levels required when called: 4
 26031 ;; This function calls:
 26032 ;;		Nothing
 26033 ;; This function is called by:
 26034 ;;		_SYSTEM_Initialize
 26035 ;; This function uses a non-reentrant model
 26036 ;;
 26037                           
 26038                           	psect	text104
 26039  009AB2                     __ptext104:
 26040                           	callstack 0
 26041  009AB2                     _I2C1_Initialize:
 26042                           	callstack 25
 26043                           
 26044                           ; BSR set to: 14
 26045                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 26046                           
 26047                           ; BSR set to: 0
 26048                           ;incstack = 0
 26049  009AB2  0E80               	movlw	128
 26050  009AB4  6E95               	movwf	149,c	;volatile
 26051                           
 26052                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 26053  009AB6  0E08               	movlw	8
 26054  009AB8  6E96               	movwf	150,c	;volatile
 26055                           
 26056                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 26057  009ABA  0E00               	movlw	0
 26058  009ABC  6E97               	movwf	151,c	;volatile
 26059                           
 26060                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x9F;
 26061  009ABE  0E9F               	movlw	159
 26062  009AC0  6E93               	movwf	147,c	;volatile
 26063                           
 26064                           ; BSR set to: 14
 26065                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 26066  009AC2  9A96               	bcf	150,5,c	;volatile
 26067                           
 26068                           ; BSR set to: 14
 26069  009AC4  0012               	return		;funcret
 26070  009AC6                     __end_of_I2C1_Initialize:
 26071                           	callstack 0
 26072                           
 26073 ;; *************** function _EUSART1_Initialize *****************
 26074 ;; Defined at:
 26075 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 26076 ;; Parameters:    Size  Location     Type
 26077 ;;		None
 26078 ;; Auto vars:     Size  Location     Type
 26079 ;;		None
 26080 ;; Return value:  Size  Location     Type
 26081 ;;                  1    wreg      void 
 26082 ;; Registers used:
 26083 ;;		wreg, status,2, status,0, cstack
 26084 ;; Tracked objects:
 26085 ;;		On entry : 3F/E
 26086 ;;		On exit  : 3F/E
 26087 ;;		Unchanged: 0/0
 26088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26093 ;;Total ram usage:        0 bytes
 26094 ;; Hardware stack levels used: 1
 26095 ;; Hardware stack levels required when called: 5
 26096 ;; This function calls:
 26097 ;;		_EUSART1_SetErrorHandler
 26098 ;;		_EUSART1_SetFramingErrorHandler
 26099 ;;		_EUSART1_SetOverrunErrorHandler
 26100 ;;		_EUSART1_SetRxInterruptHandler
 26101 ;;		_EUSART1_SetTxInterruptHandler
 26102 ;; This function is called by:
 26103 ;;		_SYSTEM_Initialize
 26104 ;; This function uses a non-reentrant model
 26105 ;;
 26106                           
 26107                           	psect	text105
 26108  0083AA                     __ptext105:
 26109                           	callstack 0
 26110  0083AA                     _EUSART1_Initialize:
 26111                           	callstack 24
 26112                           
 26113                           ; BSR set to: 14
 26114                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 26115                           
 26116                           ; BSR set to: 14
 26117                           ;incstack = 0
 26118  0083AA  9BC5               	bcf	197,5,b	;volatile
 26119                           
 26120                           ; BSR set to: 14
 26121                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 26122  0083AC  0E94               	movlw	low _EUSART1_Receive_ISR
 26123  0083AE  6E10               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
 26124  0083B0  0E7C               	movlw	high _EUSART1_Receive_ISR
 26125  0083B2  6E11               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
 26126  0083B4  ECB6  F04D         	call	_EUSART1_SetRxInterruptHandler	;wreg free
 26127                           
 26128                           ; BSR set to: 14
 26129                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 26130  0083B8  99C5               	bcf	197,4,b	;volatile
 26131                           
 26132                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 26133  0083BA  0E60               	movlw	low _EUSART1_Transmit_ISR
 26134  0083BC  6E10               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
 26135  0083BE  0E94               	movlw	high _EUSART1_Transmit_ISR
 26136  0083C0  6E11               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
 26137  0083C2  ECB1  F04D         	call	_EUSART1_SetTxInterruptHandler	;wreg free
 26138                           
 26139                           ; BSR set to: 14
 26140                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 26141  0083C6  0E08               	movlw	8
 26142  0083C8  6E9F               	movwf	159,c	;volatile
 26143                           
 26144                           ; BSR set to: 14
 26145                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 26146  0083CA  0E90               	movlw	144
 26147  0083CC  6E9D               	movwf	157,c	;volatile
 26148                           
 26149                           ; BSR set to: 14
 26150                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 26151  0083CE  0E24               	movlw	36
 26152  0083D0  6E9E               	movwf	158,c	;volatile
 26153                           
 26154                           ; BSR set to: 14
 26155                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x82;
 26156  0083D2  0E82               	movlw	130
 26157  0083D4  6E9B               	movwf	155,c	;volatile
 26158                           
 26159                           ; BSR set to: 14
 26160                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x06;
 26161  0083D6  0E06               	movlw	6
 26162  0083D8  6E9C               	movwf	156,c	;volatile
 26163                           
 26164                           ; BSR set to: 14
 26165                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 26166  0083DA  0E6C               	movlw	low _EUSART1_DefaultFramingErrorHandler
 26167  0083DC  6E10               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
 26168  0083DE  0E9C               	movlw	high _EUSART1_DefaultFramingErrorHandler
 26169  0083E0  6E11               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 26170  0083E2  ECC0  F04D         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 26171                           
 26172                           ; BSR set to: 14
 26173                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 26174  0083E6  0E2C               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 26175  0083E8  6E10               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
 26176  0083EA  0E9C               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 26177  0083EC  6E11               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 26178  0083EE  ECBB  F04D         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 26179                           
 26180                           ; BSR set to: 14
 26181                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 26182  0083F2  0E32               	movlw	low _EUSART1_DefaultErrorHandler
 26183  0083F4  6E10               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
 26184  0083F6  0E9C               	movlw	high _EUSART1_DefaultErrorHandler
 26185  0083F8  6E11               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
 26186  0083FA  ECC5  F04D         	call	_EUSART1_SetErrorHandler	;wreg free
 26187                           
 26188                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 26189  0083FE  0E00               	movlw	0
 26190  008400  0101               	movlb	1	; () banked
 26191  008402  6F54               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 26192                           
 26193                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 26194  008404  0E00               	movlw	0
 26195  008406  0100               	movlb	0	; () banked
 26196  008408  6F8E               	movwf	_eusart1TxHead& (0+255),b	;volatile
 26197                           
 26198                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 26199  00840A  0E00               	movlw	0
 26200  00840C  6F8D               	movwf	_eusart1TxTail& (0+255),b	;volatile
 26201                           
 26202                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 26203  00840E  0E08               	movlw	8
 26204  008410  0101               	movlb	1	; () banked
 26205  008412  6FFD               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
 26206                           
 26207                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 26208  008414  0E00               	movlw	0
 26209  008416  0100               	movlb	0	; () banked
 26210  008418  6F8C               	movwf	_eusart1RxHead& (0+255),b	;volatile
 26211                           
 26212                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 26213  00841A  0E00               	movlw	0
 26214  00841C  6F8B               	movwf	_eusart1RxTail& (0+255),b	;volatile
 26215                           
 26216                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 26217  00841E  0E00               	movlw	0
 26218  008420  6F8A               	movwf	_eusart1RxCount& (0+255),b	;volatile
 26219                           
 26220                           ; BSR set to: 0
 26221                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 26222  008422  010E               	movlb	14	; () banked
 26223  008424  8BC5               	bsf	197,5,b	;volatile
 26224                           
 26225                           ; BSR set to: 14
 26226  008426  0012               	return		;funcret
 26227  008428                     __end_of_EUSART1_Initialize:
 26228                           	callstack 0
 26229                           
 26230 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 26231 ;; Defined at:
 26232 ;;		line 276 in file "mcc_generated_files/eusart1.c"
 26233 ;; Parameters:    Size  Location     Type
 26234 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26235 ;;		 -> EUSART1_Transmit_ISR(1), 
 26236 ;; Auto vars:     Size  Location     Type
 26237 ;;		None
 26238 ;; Return value:  Size  Location     Type
 26239 ;;                  1    wreg      void 
 26240 ;; Registers used:
 26241 ;;		wreg, status,2, status,0
 26242 ;; Tracked objects:
 26243 ;;		On entry : 3F/E
 26244 ;;		On exit  : 3F/E
 26245 ;;		Unchanged: 3F/0
 26246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26247 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26250 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26251 ;;Total ram usage:        2 bytes
 26252 ;; Hardware stack levels used: 1
 26253 ;; Hardware stack levels required when called: 4
 26254 ;; This function calls:
 26255 ;;		Nothing
 26256 ;; This function is called by:
 26257 ;;		_EUSART1_Initialize
 26258 ;; This function uses a non-reentrant model
 26259 ;;
 26260                           
 26261                           	psect	text106
 26262  009B62                     __ptext106:
 26263                           	callstack 0
 26264  009B62                     _EUSART1_SetTxInterruptHandler:
 26265                           	callstack 24
 26266                           
 26267                           ; BSR set to: 14
 26268                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 26269                           
 26270                           ; BSR set to: 14
 26271                           ;incstack = 0
 26272  009B62  C010  F2ED         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
 26273  009B66  C011  F2EE         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
 26274                           
 26275                           ; BSR set to: 14
 26276  009B6A  0012               	return		;funcret
 26277  009B6C                     __end_of_EUSART1_SetTxInterruptHandler:
 26278                           	callstack 0
 26279                           
 26280 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 26281 ;; Defined at:
 26282 ;;		line 280 in file "mcc_generated_files/eusart1.c"
 26283 ;; Parameters:    Size  Location     Type
 26284 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26285 ;;		 -> EUSART1_Receive_ISR(1), 
 26286 ;; Auto vars:     Size  Location     Type
 26287 ;;		None
 26288 ;; Return value:  Size  Location     Type
 26289 ;;                  1    wreg      void 
 26290 ;; Registers used:
 26291 ;;		wreg, status,2, status,0
 26292 ;; Tracked objects:
 26293 ;;		On entry : 3F/E
 26294 ;;		On exit  : 3F/E
 26295 ;;		Unchanged: 3F/0
 26296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26300 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26301 ;;Total ram usage:        2 bytes
 26302 ;; Hardware stack levels used: 1
 26303 ;; Hardware stack levels required when called: 4
 26304 ;; This function calls:
 26305 ;;		Nothing
 26306 ;; This function is called by:
 26307 ;;		_EUSART1_Initialize
 26308 ;; This function uses a non-reentrant model
 26309 ;;
 26310                           
 26311                           	psect	text107
 26312  009B6C                     __ptext107:
 26313                           	callstack 0
 26314  009B6C                     _EUSART1_SetRxInterruptHandler:
 26315                           	callstack 24
 26316                           
 26317                           ; BSR set to: 14
 26318                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 26319                           
 26320                           ; BSR set to: 14
 26321                           ;incstack = 0
 26322  009B6C  C010  F2EB         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
 26323  009B70  C011  F2EC         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
 26324                           
 26325                           ; BSR set to: 14
 26326  009B74  0012               	return		;funcret
 26327  009B76                     __end_of_EUSART1_SetRxInterruptHandler:
 26328                           	callstack 0
 26329                           
 26330 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 26331 ;; Defined at:
 26332 ;;		line 268 in file "mcc_generated_files/eusart1.c"
 26333 ;; Parameters:    Size  Location     Type
 26334 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26335 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 26336 ;; Auto vars:     Size  Location     Type
 26337 ;;		None
 26338 ;; Return value:  Size  Location     Type
 26339 ;;                  1    wreg      void 
 26340 ;; Registers used:
 26341 ;;		wreg, status,2, status,0
 26342 ;; Tracked objects:
 26343 ;;		On entry : 3F/E
 26344 ;;		On exit  : 3F/E
 26345 ;;		Unchanged: 3F/0
 26346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26347 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26350 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26351 ;;Total ram usage:        2 bytes
 26352 ;; Hardware stack levels used: 1
 26353 ;; Hardware stack levels required when called: 4
 26354 ;; This function calls:
 26355 ;;		Nothing
 26356 ;; This function is called by:
 26357 ;;		_EUSART1_Initialize
 26358 ;; This function uses a non-reentrant model
 26359 ;;
 26360                           
 26361                           	psect	text108
 26362  009B76                     __ptext108:
 26363                           	callstack 0
 26364  009B76                     _EUSART1_SetOverrunErrorHandler:
 26365                           	callstack 24
 26366                           
 26367                           ; BSR set to: 14
 26368                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
 26369                           
 26370                           ; BSR set to: 14
 26371                           ;incstack = 0
 26372  009B76  C010  F2E7         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 26373  009B7A  C011  F2E8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 26374                           
 26375                           ; BSR set to: 14
 26376  009B7E  0012               	return		;funcret
 26377  009B80                     __end_of_EUSART1_SetOverrunErrorHandler:
 26378                           	callstack 0
 26379                           
 26380 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 26381 ;; Defined at:
 26382 ;;		line 264 in file "mcc_generated_files/eusart1.c"
 26383 ;; Parameters:    Size  Location     Type
 26384 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26385 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 26386 ;; Auto vars:     Size  Location     Type
 26387 ;;		None
 26388 ;; Return value:  Size  Location     Type
 26389 ;;                  1    wreg      void 
 26390 ;; Registers used:
 26391 ;;		wreg, status,2, status,0
 26392 ;; Tracked objects:
 26393 ;;		On entry : 3F/E
 26394 ;;		On exit  : 3F/E
 26395 ;;		Unchanged: 3F/0
 26396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26397 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26400 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26401 ;;Total ram usage:        2 bytes
 26402 ;; Hardware stack levels used: 1
 26403 ;; Hardware stack levels required when called: 4
 26404 ;; This function calls:
 26405 ;;		Nothing
 26406 ;; This function is called by:
 26407 ;;		_EUSART1_Initialize
 26408 ;; This function uses a non-reentrant model
 26409 ;;
 26410                           
 26411                           	psect	text109
 26412  009B80                     __ptext109:
 26413                           	callstack 0
 26414  009B80                     _EUSART1_SetFramingErrorHandler:
 26415                           	callstack 24
 26416                           
 26417                           ; BSR set to: 14
 26418                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
 26419                           
 26420                           ; BSR set to: 14
 26421                           ;incstack = 0
 26422  009B80  C010  F2E9         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 26423  009B84  C011  F2EA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 26424                           
 26425                           ; BSR set to: 14
 26426  009B88  0012               	return		;funcret
 26427  009B8A                     __end_of_EUSART1_SetFramingErrorHandler:
 26428                           	callstack 0
 26429                           
 26430 ;; *************** function _EUSART1_SetErrorHandler *****************
 26431 ;; Defined at:
 26432 ;;		line 272 in file "mcc_generated_files/eusart1.c"
 26433 ;; Parameters:    Size  Location     Type
 26434 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26435 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 26436 ;; Auto vars:     Size  Location     Type
 26437 ;;		None
 26438 ;; Return value:  Size  Location     Type
 26439 ;;                  1    wreg      void 
 26440 ;; Registers used:
 26441 ;;		wreg, status,2, status,0
 26442 ;; Tracked objects:
 26443 ;;		On entry : 3F/E
 26444 ;;		On exit  : 3F/E
 26445 ;;		Unchanged: 3F/0
 26446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26447 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26450 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26451 ;;Total ram usage:        2 bytes
 26452 ;; Hardware stack levels used: 1
 26453 ;; Hardware stack levels required when called: 4
 26454 ;; This function calls:
 26455 ;;		Nothing
 26456 ;; This function is called by:
 26457 ;;		_EUSART1_Initialize
 26458 ;; This function uses a non-reentrant model
 26459 ;;
 26460                           
 26461                           	psect	text110
 26462  009B8A                     __ptext110:
 26463                           	callstack 0
 26464  009B8A                     _EUSART1_SetErrorHandler:
 26465                           	callstack 24
 26466                           
 26467                           ; BSR set to: 14
 26468                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
 26469                           
 26470                           ; BSR set to: 14
 26471                           ;incstack = 0
 26472  009B8A  C010  F2E5         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 26473  009B8E  C011  F2E6         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 26474                           
 26475                           ; BSR set to: 14
 26476  009B92  0012               	return		;funcret
 26477  009B94                     __end_of_EUSART1_SetErrorHandler:
 26478                           	callstack 0
 26479                           
 26480 ;; *************** function _ADCC_Initialize *****************
 26481 ;; Defined at:
 26482 ;;		line 62 in file "mcc_generated_files/adcc.c"
 26483 ;; Parameters:    Size  Location     Type
 26484 ;;		None
 26485 ;; Auto vars:     Size  Location     Type
 26486 ;;		None
 26487 ;; Return value:  Size  Location     Type
 26488 ;;                  1    wreg      void 
 26489 ;; Registers used:
 26490 ;;		wreg, status,2
 26491 ;; Tracked objects:
 26492 ;;		On entry : 3F/E
 26493 ;;		On exit  : 3F/F
 26494 ;;		Unchanged: 0/0
 26495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26500 ;;Total ram usage:        0 bytes
 26501 ;; Hardware stack levels used: 1
 26502 ;; Hardware stack levels required when called: 4
 26503 ;; This function calls:
 26504 ;;		Nothing
 26505 ;; This function is called by:
 26506 ;;		_SYSTEM_Initialize
 26507 ;; This function uses a non-reentrant model
 26508 ;;
 26509                           
 26510                           	psect	text111
 26511  008F32                     __ptext111:
 26512                           	callstack 0
 26513  008F32                     _ADCC_Initialize:
 26514                           	callstack 25
 26515                           
 26516                           ; BSR set to: 14
 26517                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 26518                           
 26519                           ; BSR set to: 14
 26520                           ;incstack = 0
 26521  008F32  0E00               	movlw	0
 26522  008F34  6E6A               	movwf	106,c	;volatile
 26523                           
 26524                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 26525  008F36  0E00               	movlw	0
 26526  008F38  6E6B               	movwf	107,c	;volatile
 26527                           
 26528                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 26529  008F3A  0E00               	movlw	0
 26530  008F3C  6E6C               	movwf	108,c	;volatile
 26531                           
 26532                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 26533  008F3E  0E00               	movlw	0
 26534  008F40  6E6D               	movwf	109,c	;volatile
 26535                           
 26536                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 26537  008F42  0E00               	movlw	0
 26538  008F44  6E68               	movwf	104,c	;volatile
 26539                           
 26540                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 26541  008F46  0E00               	movlw	0
 26542  008F48  6E69               	movwf	105,c	;volatile
 26543                           
 26544                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
 26545  008F4A  0E00               	movlw	0
 26546  008F4C  6E66               	movwf	102,c	;volatile
 26547                           
 26548                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
 26549  008F4E  0E00               	movlw	0
 26550  008F50  010F               	movlb	15	; () banked
 26551  008F52  6F5F               	movwf	95,b	;volatile
 26552                           
 26553                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
 26554  008F54  0E00               	movlw	0
 26555  008F56  6F5D               	movwf	93,b	;volatile
 26556                           
 26557                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
 26558  008F58  0E00               	movlw	0
 26559  008F5A  6F5E               	movwf	94,b	;volatile
 26560                           
 26561                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
 26562  008F5C  0E00               	movlw	0
 26563  008F5E  6F59               	movwf	89,b	;volatile
 26564                           
 26565                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
 26566  008F60  0E00               	movlw	0
 26567  008F62  6F5A               	movwf	90,b	;volatile
 26568                           
 26569                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
 26570  008F64  0E00               	movlw	0
 26571  008F66  6F5B               	movwf	91,b	;volatile
 26572                           
 26573                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
 26574  008F68  0E00               	movlw	0
 26575  008F6A  6E65               	movwf	101,c	;volatile
 26576                           
 26577                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
 26578  008F6C  0E00               	movlw	0
 26579  008F6E  6F58               	movwf	88,b	;volatile
 26580                           
 26581                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
 26582  008F70  0E00               	movlw	0
 26583  008F72  6F56               	movwf	86,b	;volatile
 26584                           
 26585                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x3F;
 26586  008F74  0E3F               	movlw	63
 26587  008F76  6F57               	movwf	87,b	;volatile
 26588                           
 26589                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x80;
 26590  008F78  0E80               	movlw	128
 26591  008F7A  6E60               	movwf	96,c	;volatile
 26592                           
 26593                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x00;
 26594  008F7C  0E00               	movlw	0
 26595  008F7E  6F5C               	movwf	92,b	;volatile
 26596                           
 26597                           ; BSR set to: 15
 26598  008F80  0012               	return		;funcret
 26599  008F82                     __end_of_ADCC_Initialize:
 26600                           	callstack 0
 26601                           
 26602 ;; *************** function _EUSART1_is_rx_ready *****************
 26603 ;; Defined at:
 26604 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 26605 ;; Parameters:    Size  Location     Type
 26606 ;;		None
 26607 ;; Auto vars:     Size  Location     Type
 26608 ;;		None
 26609 ;; Return value:  Size  Location     Type
 26610 ;;                  1    wreg      _Bool 
 26611 ;; Registers used:
 26612 ;;		wreg, status,2
 26613 ;; Tracked objects:
 26614 ;;		On entry : 0/1
 26615 ;;		On exit  : 3F/0
 26616 ;;		Unchanged: 0/0
 26617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26622 ;;Total ram usage:        0 bytes
 26623 ;; Hardware stack levels used: 1
 26624 ;; Hardware stack levels required when called: 4
 26625 ;; This function calls:
 26626 ;;		Nothing
 26627 ;; This function is called by:
 26628 ;;		_main
 26629 ;; This function uses a non-reentrant model
 26630 ;;
 26631                           
 26632                           	psect	text112
 26633  009AD8                     __ptext112:
 26634                           	callstack 0
 26635  009AD8                     _EUSART1_is_rx_ready:
 26636                           	callstack 26
 26637                           
 26638                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 26639                           
 26640                           ; BSR set to: 15
 26641                           ;incstack = 0
 26642  009AD8  0100               	movlb	0	; () banked
 26643  009ADA  518A               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 26644  009ADC  B4D8               	btfsc	status,2,c
 26645  009ADE  D002               	goto	u29720
 26646  009AE0  0E01               	movlw	1
 26647  009AE2  0012               	return	
 26648  009AE4                     u29720:
 26649  009AE4  0E00               	movlw	0
 26650                           
 26651                           ; BSR set to: 0
 26652  009AE6  0012               	return		;funcret
 26653  009AE8                     __end_of_EUSART1_is_rx_ready:
 26654                           	callstack 0
 26655                           
 26656 ;; *************** function _ControlMotor *****************
 26657 ;; Defined at:
 26658 ;;		line 703 in file "outputs_MC50.c"
 26659 ;; Parameters:    Size  Location     Type
 26660 ;;		None
 26661 ;; Auto vars:     Size  Location     Type
 26662 ;;  stateMotor      1   23[COMRAM] enum E10381
 26663 ;; Return value:  Size  Location     Type
 26664 ;;                  1    wreg      void 
 26665 ;; Registers used:
 26666 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 26667 ;; Tracked objects:
 26668 ;;		On entry : 3F/1
 26669 ;;		On exit  : 3E/0
 26670 ;;		Unchanged: 0/0
 26671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26673 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26674 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26675 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26676 ;;Total ram usage:        7 bytes
 26677 ;; Hardware stack levels used: 1
 26678 ;; Hardware stack levels required when called: 5
 26679 ;; This function calls:
 26680 ;;		_VerifyElectricalBrake
 26681 ;; This function is called by:
 26682 ;;		_main
 26683 ;; This function uses a non-reentrant model
 26684 ;;
 26685                           
 26686                           	psect	text113
 26687  004FB8                     __ptext113:
 26688                           	callstack 0
 26689  004FB8                     _ControlMotor:
 26690                           	callstack 25
 26691                           
 26692                           ; BSR set to: 1
 26693                           ;outputs_MC50.c: 707:     if((var_sys.TimeMaxMotorIsON<=0) && (var_sys.WorkTimeMaxAlarmS
      +                          tate!=Clear) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost==NO)){
 26694                           
 26695                           ; BSR set to: 0
 26696                           ;incstack = 0
 26697  004FB8  516D               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 26698  004FBA  116E               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 26699  004FBC  116F               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 26700  004FBE  1170               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 26701  004FC0  A4D8               	btfss	status,2,c
 26702  004FC2  D00D               	goto	l25185
 26703                           
 26704                           ; BSR set to: 1
 26705  004FC4  5197               	movf	(_var_sys+66)& (0+255),w,b	;volatile
 26706  004FC6  B4D8               	btfsc	status,2,c
 26707  004FC8  D00A               	goto	l25185
 26708                           
 26709                           ; BSR set to: 1
 26710  004FCA  517B               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 26711  004FCC  A4D8               	btfss	status,2,c
 26712  004FCE  D007               	goto	l25185
 26713                           
 26714                           ; BSR set to: 1
 26715  004FD0  519D               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 26716  004FD2  A4D8               	btfss	status,2,c
 26717  004FD4  D004               	goto	l25185
 26718                           
 26719                           ; BSR set to: 1
 26720                           ;outputs_MC50.c: 708:         var_sys.StateMotor = Stopped;
 26721  004FD6  0E00               	movlw	0
 26722  004FD8  6F55               	movwf	_var_sys& (0+255),b	;volatile
 26723                           
 26724                           ;outputs_MC50.c: 709:         var_sys.WorkTimeMaxAlarmState=EmAlarme;
 26725  004FDA  0E02               	movlw	2
 26726  004FDC  D007               	goto	L82
 26727  004FDE                     l25185:
 26728                           
 26729                           ; BSR set to: 1
 26730  004FDE  0597               	decf	(_var_sys+66)& (0+255),w,b	;volatile
 26731  004FE0  A4D8               	btfss	status,2,c
 26732  004FE2  D005               	goto	l25191
 26733                           
 26734                           ; BSR set to: 1
 26735  004FE4  5155               	movf	_var_sys& (0+255),w,b	;volatile
 26736  004FE6  A4D8               	btfss	status,2,c
 26737  004FE8  D002               	goto	l25191
 26738                           
 26739                           ; BSR set to: 1
 26740                           ;outputs_MC50.c: 716:     {;outputs_MC50.c: 717:          var_sys.WorkTimeMaxAlarmState=
      +                          Clear;
 26741  004FEA  0E00               	movlw	0
 26742  004FEC                     L82:
 26743  004FEC  6F97               	movwf	(_var_sys+66)& (0+255),b	;volatile
 26744  004FEE                     l25191:
 26745                           
 26746                           ; BSR set to: 1
 26747                           ;outputs_MC50.c: 721:     stateMotor_enum stateMotor=VerifyElectricalBrake(var_sys.State
      +                          Motor);
 26748  004FEE  5155               	movf	_var_sys& (0+255),w,b	;volatile
 26749  004FF0  ECE5  F043         	call	_VerifyElectricalBrake
 26750  004FF4  6E18               	movwf	ControlMotor@stateMotor^0,c
 26751                           
 26752                           ; BSR set to: 0
 26753                           ;outputs_MC50.c: 722:     if(stateMotor == Stopped )
 26754  004FF6  5018               	movf	ControlMotor@stateMotor^0,w,c
 26755  004FF8  A4D8               	btfss	status,2,c
 26756  004FFA  D00C               	goto	l25201
 26757                           
 26758                           ; BSR set to: 0
 26759                           ;outputs_MC50.c: 723:     {;outputs_MC50.c: 724:         var_sys.InStoping = YES;
 26760  004FFC  0E01               	movlw	1
 26761  004FFE  0101               	movlb	1	; () banked
 26762  005000  6F62               	movwf	(_var_sys+13)& (0+255),b	;volatile
 26763                           
 26764                           ; BSR set to: 1
 26765                           ;outputs_MC50.c: 725:         if(ts_system.ts_TRIACWait>=0)
 26766  005002  0100               	movlb	0	; () banked
 26767  005004  BF96               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 26768  005006  0012               	return	
 26769                           
 26770                           ; BSR set to: 0
 26771                           
 26772                           ;outputs_MC50.c: 726:         {;outputs_MC50.c: 727:             do { LATEbits.LATE1 = 0
      +                          ; } while(0);
 26773  005008  9287               	bcf	135,1,c	;volatile
 26774                           
 26775                           ; BSR set to: 0
 26776                           
 26777                           ;outputs_MC50.c: 728:             do { LATEbits.LATE0 = 0; } while(0);
 26778  00500A  9087               	bcf	135,0,c	;volatile
 26779  00500C                     l25199:
 26780                           
 26781                           ; BSR set to: 0
 26782                           ;outputs_MC50.c: 729:             var_sys.Activatecounter = stoped ;
 26783  00500C  0E00               	movlw	0
 26784  00500E  0101               	movlb	1	; () banked
 26785  005010  6F6B               	movwf	(_var_sys+22)& (0+255),b	;volatile
 26786  005012  0012               	return	
 26787  005014                     l25201:
 26788                           
 26789                           ; BSR set to: 0
 26790  005014  0101               	movlb	1	; () banked
 26791  005016  05BD               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 26792  005018  A4D8               	btfss	status,2,c
 26793  00501A  D025               	goto	l25217
 26794                           
 26795                           ; BSR set to: 1
 26796  00501C  0100               	movlb	0	; () banked
 26797  00501E  0567               	decf	(_brakeElectric_st+1)& (0+255),w,b
 26798  005020  A4D8               	btfss	status,2,c
 26799  005022  D021               	goto	l25217
 26800                           
 26801                           ; BSR set to: 0
 26802  005024  0101               	movlb	1	; () banked
 26803  005026  5155               	movf	_var_sys& (0+255),w,b	;volatile
 26804  005028  A4D8               	btfss	status,2,c
 26805  00502A  D01D               	goto	l25217
 26806                           
 26807                           ; BSR set to: 1
 26808  00502C  5018               	movf	ControlMotor@stateMotor^0,w,c
 26809  00502E  B4D8               	btfsc	status,2,c
 26810  005030  D01A               	goto	l25217
 26811                           
 26812                           ; BSR set to: 1
 26813  005032  0100               	movlb	0	; () banked
 26814  005034  BFB8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 26815  005036  D017               	goto	l25217
 26816  005038  51B8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 26817  00503A  E103               	bnz	u31840
 26818  00503C  05B7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 26819  00503E  A0D8               	btfss	status,0,c
 26820  005040  D012               	goto	l25217
 26821  005042                     u31840:
 26822                           
 26823                           ; BSR set to: 0
 26824  005042  BFD0               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 26825  005044  D005               	goto	u31850
 26826  005046  51D0               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 26827  005048  E10E               	bnz	l25217
 26828  00504A  05CF               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 26829  00504C  B0D8               	btfsc	status,0,c
 26830  00504E  D00B               	goto	l25217
 26831  005050                     u31850:
 26832                           
 26833                           ; BSR set to: 0
 26834                           ;outputs_MC50.c: 739:     {;outputs_MC50.c: 742:         if ( ts_system.TimeElectricBrak
      +                          e<(((5+6)*( 100/50))-(2*( 100/50))) )
 26835  005050  BFB8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 26836  005052  D006               	goto	u31860
 26837  005054  51B8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 26838  005056  E103               	bnz	u31861
 26839  005058  0E12               	movlw	18
 26840  00505A  5DB7               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 26841  00505C  B0D8               	btfsc	status,0,c
 26842  00505E                     u31861:
 26843  00505E  0012               	return	
 26844  005060                     u31860:
 26845                           
 26846                           ; BSR set to: 0
 26847                           
 26848                           ;outputs_MC50.c: 743:         {;outputs_MC50.c: 748:             do { LATEbits.LATE1 = 1
      +                          ; } while(0);
 26849  005060  8287               	bsf	135,1,c	;volatile
 26850                           
 26851                           ; BSR set to: 0
 26852                           
 26853                           ;outputs_MC50.c: 749:             do { LATEbits.LATE0 = 1; } while(0);
 26854  005062  8087               	bsf	135,0,c	;volatile
 26855  005064  D7D3               	goto	l25199
 26856  005066                     l25217:
 26857  005066  0418               	decf	ControlMotor@stateMotor^0,w,c
 26858  005068  B4D8               	btfsc	status,2,c
 26859  00506A  D004               	goto	u31880
 26860  00506C  0E02               	movlw	2
 26861  00506E  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 26862  005070  A4D8               	btfss	status,2,c
 26863  005072  D05D               	goto	l25247
 26864  005074                     u31880:
 26865  005074  0101               	movlb	1	; () banked
 26866  005076  5159               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 26867  005078  A4D8               	btfss	status,2,c
 26868  00507A  D059               	goto	l25247
 26869                           
 26870                           ; BSR set to: 1
 26871                           ;outputs_MC50.c: 761:     {;outputs_MC50.c: 762:         if((PORTEbits.RE1==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 1))
 26872  00507C  B291               	btfsc	145,1,c	;volatile
 26873  00507E  D003               	goto	u31910
 26874                           
 26875                           ; BSR set to: 1
 26876  005080  51C1               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26877  005082  B4D8               	btfsc	status,2,c
 26878  005084  D005               	goto	u31930
 26879  005086                     u31910:
 26880                           
 26881                           ; BSR set to: 1
 26882  005086  B091               	btfsc	145,0,c	;volatile
 26883  005088  D04B               	goto	l2369
 26884                           
 26885                           ; BSR set to: 1
 26886  00508A  05C1               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26887  00508C  A4D8               	btfss	status,2,c
 26888  00508E  D048               	goto	l2369
 26889  005090                     u31930:
 26890                           
 26891                           ; BSR set to: 1
 26892                           ;outputs_MC50.c: 763:         {;outputs_MC50.c: 764:             if((PORTEbits.RE0==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 26893  005090  B091               	btfsc	145,0,c	;volatile
 26894  005092  D003               	goto	u31950
 26895                           
 26896                           ; BSR set to: 1
 26897  005094  51C1               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26898  005096  B4D8               	btfsc	status,2,c
 26899  005098  D005               	goto	u31970
 26900  00509A                     u31950:
 26901                           
 26902                           ; BSR set to: 1
 26903  00509A  B291               	btfsc	145,1,c	;volatile
 26904  00509C  D039               	goto	l25243
 26905                           
 26906                           ; BSR set to: 1
 26907  00509E  05C1               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26908  0050A0  A4D8               	btfss	status,2,c
 26909  0050A2  D036               	goto	l25243
 26910  0050A4                     u31970:
 26911                           
 26912                           ; BSR set to: 1
 26913                           ;outputs_MC50.c: 765:             {;outputs_MC50.c: 766:                 var_sys.InStopi
      +                          ng = NO;
 26914  0050A4  0E00               	movlw	0
 26915  0050A6  6F62               	movwf	(_var_sys+13)& (0+255),b	;volatile
 26916                           
 26917                           ;outputs_MC50.c: 767:                 ts_system.ts_TRIACWait=200;
 26918  0050A8  0E00               	movlw	0
 26919  0050AA  0100               	movlb	0	; () banked
 26920  0050AC  6F96               	movwf	(_ts_system+7)& (0+255),b	;volatile
 26921  0050AE  0EC8               	movlw	200
 26922  0050B0  6F95               	movwf	(_ts_system+6)& (0+255),b	;volatile
 26923                           
 26924                           ;outputs_MC50.c: 768:                 ts_system.TimeChargeCondesador=(1000/50);
 26925  0050B2  0E00               	movlw	0
 26926  0050B4  6FAA               	movwf	(_ts_system+27)& (0+255),b	;volatile
 26927  0050B6  0E14               	movlw	20
 26928  0050B8  6FA9               	movwf	(_ts_system+26)& (0+255),b	;volatile
 26929                           
 26930                           ; BSR set to: 0
 26931                           ;outputs_MC50.c: 769:                 if (var_sys.FimCurso_CloseIsEnabled == YES|| var_s
      +                          ys.Statedoorcontrol == st_Closed ){
 26932  0050BA  0101               	movlb	1	; () banked
 26933  0050BC  0558               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 26934  0050BE  B4D8               	btfsc	status,2,c
 26935  0050C0  D003               	goto	u31990
 26936                           
 26937                           ; BSR set to: 1
 26938  0050C2  0571               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 26939  0050C4  A4D8               	btfss	status,2,c
 26940  0050C6  D022               	goto	l25241
 26941  0050C8                     u31990:
 26942                           
 26943                           ; BSR set to: 1
 26944                           ;outputs_MC50.c: 770:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+((unsigned int)var_sys_NVM.decelarationOpen)*( 500/50))+var_sys_N
      +                          VM.learningTimeToOpen + (1000/50)*4;
 26945  0050C8  51A6               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 26946  0050CA  0D0A               	mullw	10
 26947  0050CC  CFF3 F012          	movff	prodl,??_ControlMotor
 26948  0050D0  CFF4 F013          	movff	prodh,??_ControlMotor+1
 26949  0050D4  51BE               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 26950  0050D6  2612               	addwf	??_ControlMotor^0,f,c
 26951  0050D8  0E00               	movlw	0
 26952  0050DA  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 26953  0050DC  5012               	movf	??_ControlMotor^0,w,c
 26954  0050DE  25DA               	addwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 26955  0050E0  6E14               	movwf	(??_ControlMotor+2)^0,c
 26956  0050E2  5013               	movf	(??_ControlMotor+1)^0,w,c
 26957  0050E4  21DB               	addwfc	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 26958  0050E6  6E15               	movwf	(??_ControlMotor+3)^0,c
 26959  0050E8  0E00               	movlw	0
 26960  0050EA  21DC               	addwfc	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 26961  0050EC  6E16               	movwf	(??_ControlMotor+4)^0,c
 26962  0050EE  0E00               	movlw	0
 26963  0050F0  21DD               	addwfc	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 26964  0050F2  6E17               	movwf	(??_ControlMotor+5)^0,c
 26965  0050F4  0E50               	movlw	80
 26966  0050F6  2414               	addwf	(??_ControlMotor+2)^0,w,c
 26967  0050F8  6F6D               	movwf	(_var_sys+24)& (0+255),b	;volatile
 26968  0050FA  0E00               	movlw	0
 26969  0050FC  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 26970  0050FE  6F6E               	movwf	(_var_sys+25)& (0+255),b	;volatile
 26971  005100  0E00               	movlw	0
 26972  005102  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 26973  005104  6F6F               	movwf	(_var_sys+26)& (0+255),b	;volatile
 26974  005106  0E00               	movlw	0
 26975  005108  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 26976  00510A  6F70               	movwf	(_var_sys+27)& (0+255),b	;volatile
 26977  00510C                     l25241:
 26978                           
 26979                           ; BSR set to: 1
 26980                           ;outputs_MC50.c: 775:                 var_sys.Statedoorcontrol = st_Opening;
 26981  00510C  0E02               	movlw	2
 26982  00510E  6F71               	movwf	(_var_sys+28)& (0+255),b	;volatile
 26983  005110                     l25243:
 26984                           
 26985                           ; BSR set to: 1
 26986                           ;outputs_MC50.c: 779:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE0 = 1; } while(0);}
 26987  005110  51C1               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26988  005112  A4D8               	btfss	status,2,c
 26989  005114  D002               	goto	l2386
 26990                           
 26991                           ; BSR set to: 1
 26992  005116  8087               	bsf	135,0,c	;volatile
 26993  005118  D001               	goto	l25245
 26994  00511A                     l2386:
 26995                           
 26996                           ; BSR set to: 1
 26997  00511A  8287               	bsf	135,1,c	;volatile
 26998  00511C                     l25245:
 26999                           
 27000                           ; BSR set to: 1
 27001                           ;outputs_MC50.c: 781:             var_sys.Activatecounter = open ;
 27002  00511C  0E01               	movlw	1
 27003  00511E  6F6B               	movwf	(_var_sys+22)& (0+255),b	;volatile
 27004  005120                     l2369:
 27005                           
 27006                           ; BSR set to: 1
 27007                           ;outputs_MC50.c: 785:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E1 = 0; } while(0);}
 27008  005120  51C1               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27009  005122  A4D8               	btfss	status,2,c
 27010  005124  D002               	goto	l2392
 27011                           
 27012                           ; BSR set to: 1
 27013  005126  9287               	bcf	135,1,c	;volatile
 27014  005128  0012               	return	
 27015  00512A                     l2392:
 27016                           
 27017                           ; BSR set to: 1
 27018  00512A  9087               	bcf	135,0,c	;volatile
 27019  00512C  0012               	return	
 27020  00512E                     l25247:
 27021  00512E  0E03               	movlw	3
 27022  005130  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 27023  005132  A4D8               	btfss	status,2,c
 27024  005134  0012               	return	
 27025  005136  0101               	movlb	1	; () banked
 27026  005138  5158               	movf	(_var_sys+3)& (0+255),w,b	;volatile
 27027  00513A  A4D8               	btfss	status,2,c
 27028  00513C  0012               	return	
 27029                           
 27030                           ; BSR set to: 1
 27031                           ;outputs_MC50.c: 791:     {;outputs_MC50.c: 792:         if((PORTEbits.RE0==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 1))
 27032  00513E  B091               	btfsc	145,0,c	;volatile
 27033  005140  D003               	goto	u32050
 27034                           
 27035                           ; BSR set to: 1
 27036  005142  51C1               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27037  005144  B4D8               	btfsc	status,2,c
 27038  005146  D005               	goto	u32070
 27039  005148                     u32050:
 27040                           
 27041                           ; BSR set to: 1
 27042  005148  B291               	btfsc	145,1,c	;volatile
 27043  00514A  D04C               	goto	l2396
 27044                           
 27045                           ; BSR set to: 1
 27046  00514C  05C1               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27047  00514E  A4D8               	btfss	status,2,c
 27048  005150  D049               	goto	l2396
 27049  005152                     u32070:
 27050                           
 27051                           ; BSR set to: 1
 27052                           ;outputs_MC50.c: 793:         {;outputs_MC50.c: 794:             if((PORTEbits.RE1==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 27053  005152  B291               	btfsc	145,1,c	;volatile
 27054  005154  D003               	goto	u32090
 27055                           
 27056                           ; BSR set to: 1
 27057  005156  51C1               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27058  005158  B4D8               	btfsc	status,2,c
 27059  00515A  D005               	goto	u32110
 27060  00515C                     u32090:
 27061                           
 27062                           ; BSR set to: 1
 27063  00515C  B091               	btfsc	145,0,c	;volatile
 27064  00515E  D03A               	goto	l25271
 27065                           
 27066                           ; BSR set to: 1
 27067  005160  05C1               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27068  005162  A4D8               	btfss	status,2,c
 27069  005164  D037               	goto	l25271
 27070  005166                     u32110:
 27071                           
 27072                           ; BSR set to: 1
 27073                           ;outputs_MC50.c: 795:             {;outputs_MC50.c: 796:                 var_sys.InStopi
      +                          ng = NO;
 27074  005166  0E00               	movlw	0
 27075  005168  6F62               	movwf	(_var_sys+13)& (0+255),b	;volatile
 27076                           
 27077                           ;outputs_MC50.c: 797:                 ts_system.ts_TRIACWait=200;
 27078  00516A  0E00               	movlw	0
 27079  00516C  0100               	movlb	0	; () banked
 27080  00516E  6F96               	movwf	(_ts_system+7)& (0+255),b	;volatile
 27081  005170  0EC8               	movlw	200
 27082  005172  6F95               	movwf	(_ts_system+6)& (0+255),b	;volatile
 27083                           
 27084                           ;outputs_MC50.c: 798:                 ts_system.TimeChargeCondesador=(1000/50);
 27085  005174  0E00               	movlw	0
 27086  005176  6FAA               	movwf	(_ts_system+27)& (0+255),b	;volatile
 27087  005178  0E14               	movlw	20
 27088  00517A  6FA9               	movwf	(_ts_system+26)& (0+255),b	;volatile
 27089                           
 27090                           ; BSR set to: 0
 27091                           ;outputs_MC50.c: 799:                 if (var_sys.FimCurso_OpenIsEnabled == YES|| var_sy
      +                          s.Statedoorcontrol == st_Opened){
 27092  00517C  0101               	movlb	1	; () banked
 27093  00517E  0559               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 27094  005180  B4D8               	btfsc	status,2,c
 27095  005182  D004               	goto	u32130
 27096                           
 27097                           ; BSR set to: 1
 27098  005184  0E04               	movlw	4
 27099  005186  1971               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 27100  005188  A4D8               	btfss	status,2,c
 27101  00518A  D022               	goto	l25269
 27102  00518C                     u32130:
 27103                           
 27104                           ; BSR set to: 1
 27105                           ;outputs_MC50.c: 800:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+(unsigned int)var_sys_NVM.decelarationClose*( 500/50))+var_sys_NV
      +                          M.learningTimeToClose + (1000/50)*4;
 27106  00518C  51A7               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 27107  00518E  0D0A               	mullw	10
 27108  005190  CFF3 F012          	movff	prodl,??_ControlMotor
 27109  005194  CFF4 F013          	movff	prodh,??_ControlMotor+1
 27110  005198  51BE               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 27111  00519A  2612               	addwf	??_ControlMotor^0,f,c
 27112  00519C  0E00               	movlw	0
 27113  00519E  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 27114  0051A0  5012               	movf	??_ControlMotor^0,w,c
 27115  0051A2  25DE               	addwf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 27116  0051A4  6E14               	movwf	(??_ControlMotor+2)^0,c
 27117  0051A6  5013               	movf	(??_ControlMotor+1)^0,w,c
 27118  0051A8  21DF               	addwfc	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 27119  0051AA  6E15               	movwf	(??_ControlMotor+3)^0,c
 27120  0051AC  0E00               	movlw	0
 27121  0051AE  21E0               	addwfc	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 27122  0051B0  6E16               	movwf	(??_ControlMotor+4)^0,c
 27123  0051B2  0E00               	movlw	0
 27124  0051B4  21E1               	addwfc	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 27125  0051B6  6E17               	movwf	(??_ControlMotor+5)^0,c
 27126  0051B8  0E50               	movlw	80
 27127  0051BA  2414               	addwf	(??_ControlMotor+2)^0,w,c
 27128  0051BC  6F6D               	movwf	(_var_sys+24)& (0+255),b	;volatile
 27129  0051BE  0E00               	movlw	0
 27130  0051C0  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 27131  0051C2  6F6E               	movwf	(_var_sys+25)& (0+255),b	;volatile
 27132  0051C4  0E00               	movlw	0
 27133  0051C6  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 27134  0051C8  6F6F               	movwf	(_var_sys+26)& (0+255),b	;volatile
 27135  0051CA  0E00               	movlw	0
 27136  0051CC  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 27137  0051CE  6F70               	movwf	(_var_sys+27)& (0+255),b	;volatile
 27138  0051D0                     l25269:
 27139                           
 27140                           ; BSR set to: 1
 27141                           ;outputs_MC50.c: 803:                 var_sys.Statedoorcontrol = st_Closing;
 27142  0051D0  0E03               	movlw	3
 27143  0051D2  6F71               	movwf	(_var_sys+28)& (0+255),b	;volatile
 27144  0051D4                     l25271:
 27145                           
 27146                           ; BSR set to: 1
 27147                           ;outputs_MC50.c: 806:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE1 = 1; } while(0);}
 27148  0051D4  51C1               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27149  0051D6  A4D8               	btfss	status,2,c
 27150  0051D8  D002               	goto	l2413
 27151                           
 27152                           ; BSR set to: 1
 27153  0051DA  8287               	bsf	135,1,c	;volatile
 27154  0051DC  D001               	goto	l25273
 27155  0051DE                     l2413:
 27156                           
 27157                           ; BSR set to: 1
 27158  0051DE  8087               	bsf	135,0,c	;volatile
 27159  0051E0                     l25273:
 27160                           
 27161                           ; BSR set to: 1
 27162                           ;outputs_MC50.c: 808:             var_sys.Activatecounter = close ;
 27163  0051E0  0E02               	movlw	2
 27164  0051E2  6F6B               	movwf	(_var_sys+22)& (0+255),b	;volatile
 27165  0051E4                     l2396:
 27166                           
 27167                           ; BSR set to: 1
 27168                           ;outputs_MC50.c: 811:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E0 = 0; } while(0);}
 27169  0051E4  51C1               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27170  0051E6  A4D8               	btfss	status,2,c
 27171  0051E8  D002               	goto	l2419
 27172                           
 27173                           ; BSR set to: 1
 27174  0051EA  9087               	bcf	135,0,c	;volatile
 27175  0051EC  0012               	return	
 27176  0051EE                     l2419:
 27177                           
 27178                           ; BSR set to: 1
 27179  0051EE  9287               	bcf	135,1,c	;volatile
 27180  0051F0  0012               	return		;funcret
 27181  0051F2                     __end_of_ControlMotor:
 27182                           	callstack 0
 27183                           
 27184 ;; *************** function _VerifyElectricalBrake *****************
 27185 ;; Defined at:
 27186 ;;		line 658 in file "outputs_MC50.c"
 27187 ;; Parameters:    Size  Location     Type
 27188 ;;  actualState     1    wreg     enum E10381
 27189 ;; Auto vars:     Size  Location     Type
 27190 ;;  actualState     1   16[COMRAM] enum E10381
 27191 ;;  tempState       1   15[COMRAM] enum E10381
 27192 ;; Return value:  Size  Location     Type
 27193 ;;                  1    wreg      enum E10381
 27194 ;; Registers used:
 27195 ;;		wreg, status,2, status,0
 27196 ;; Tracked objects:
 27197 ;;		On entry : 3F/1
 27198 ;;		On exit  : 3F/0
 27199 ;;		Unchanged: 0/0
 27200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27202 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27204 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27205 ;;Total ram usage:        2 bytes
 27206 ;; Hardware stack levels used: 1
 27207 ;; Hardware stack levels required when called: 4
 27208 ;; This function calls:
 27209 ;;		Nothing
 27210 ;; This function is called by:
 27211 ;;		_ControlMotor
 27212 ;; This function uses a non-reentrant model
 27213 ;;
 27214                           
 27215                           	psect	text114
 27216  0087CA                     __ptext114:
 27217                           	callstack 0
 27218  0087CA                     _VerifyElectricalBrake:
 27219                           	callstack 25
 27220                           
 27221                           ;incstack = 0
 27222                           ;VerifyElectricalBrake@actualState stored from wreg
 27223  0087CA  6E11               	movwf	VerifyElectricalBrake@actualState^0,c
 27224                           
 27225                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 27226  0087CC  C011  F010         	movff	VerifyElectricalBrake@actualState,VerifyElectricalBrake@tempState
 27227                           
 27228                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 27229  0087D0  0101               	movlb	1	; () banked
 27230  0087D2  05BD               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 27231  0087D4  A4D8               	btfss	status,2,c
 27232  0087D6  D029               	goto	l2339
 27233                           
 27234                           ; BSR set to: 1
 27235  0087D8  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 27236  0087DA  A4D8               	btfss	status,2,c
 27237  0087DC  D026               	goto	l2339
 27238                           
 27239                           ; BSR set to: 1
 27240  0087DE  0100               	movlb	0	; () banked
 27241  0087E0  BFD0               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 27242  0087E2  D005               	goto	u26850
 27243  0087E4  51D0               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 27244  0087E6  E121               	bnz	l2339
 27245  0087E8  05CF               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 27246  0087EA  B0D8               	btfsc	status,0,c
 27247  0087EC  D01E               	goto	l2339
 27248  0087EE                     u26850:
 27249                           
 27250                           ; BSR set to: 0
 27251                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 27252  0087EE  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 27253  0087F0  1966               	xorwf	_brakeElectric_st& (0+255),w,b
 27254  0087F2  B4D8               	btfsc	status,2,c
 27255  0087F4  D00A               	goto	l22779
 27256                           
 27257                           ; BSR set to: 0
 27258  0087F6  5167               	movf	(_brakeElectric_st+1)& (0+255),w,b
 27259  0087F8  A4D8               	btfss	status,2,c
 27260  0087FA  D007               	goto	l22779
 27261                           
 27262                           ; BSR set to: 0
 27263                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 27264  0087FC  0E01               	movlw	1
 27265  0087FE  6F67               	movwf	(_brakeElectric_st+1)& (0+255),b
 27266                           
 27267                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 27268  008800  0E00               	movlw	0
 27269  008802  6FB8               	movwf	(_ts_system+41)& (0+255),b	;volatile
 27270  008804  0E16               	movlw	22
 27271  008806  6FB7               	movwf	(_ts_system+40)& (0+255),b	;volatile
 27272                           
 27273                           ;outputs_MC50.c: 670:         }
 27274  008808  D015               	goto	l2344
 27275  00880A                     l22779:
 27276                           
 27277                           ; BSR set to: 0
 27278  00880A  0567               	decf	(_brakeElectric_st+1)& (0+255),w,b
 27279  00880C  B4D8               	btfsc	status,2,c
 27280                           
 27281                           ; BSR set to: 0
 27282  00880E  BFB8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 27283  008810  D008               	goto	l22785
 27284  008812  51B8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 27285  008814  E103               	bnz	u26890
 27286  008816  05B7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 27287  008818  A0D8               	btfss	status,0,c
 27288  00881A  D003               	goto	l22785
 27289  00881C                     u26890:
 27290                           
 27291                           ; BSR set to: 0
 27292                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 27293  00881C  0E01               	movlw	1
 27294  00881E  6E10               	movwf	VerifyElectricalBrake@tempState^0,c
 27295                           
 27296                           ;outputs_MC50.c: 686:         }
 27297  008820  D009               	goto	l2344
 27298  008822                     l22785:
 27299                           
 27300                           ; BSR set to: 0
 27301                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 27302  008822  0E00               	movlw	0
 27303  008824  6F66               	movwf	_brakeElectric_st& (0+255),b
 27304                           
 27305                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 27306  008826  0E00               	movlw	0
 27307  008828  D004               	goto	L83
 27308  00882A                     l2339:
 27309                           
 27310                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 27311  00882A  C011  F066         	movff	VerifyElectricalBrake@actualState,_brakeElectric_st
 27312                           
 27313                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 27314  00882E  0E00               	movlw	0
 27315  008830  0100               	movlb	0	; () banked
 27316  008832                     L83:
 27317  008832  6F67               	movwf	(_brakeElectric_st+1)& (0+255),b
 27318  008834                     l2344:
 27319                           
 27320                           ; BSR set to: 0
 27321                           ;outputs_MC50.c: 700:     return tempState;
 27322  008834  5010               	movf	VerifyElectricalBrake@tempState^0,w,c
 27323                           
 27324                           ; BSR set to: 0
 27325  008836  0012               	return		;funcret
 27326  008838                     __end_of_VerifyElectricalBrake:
 27327                           	callstack 0
 27328                           
 27329 ;; *************** function _ControlLights *****************
 27330 ;; Defined at:
 27331 ;;		line 816 in file "outputs_MC50.c"
 27332 ;; Parameters:    Size  Location     Type
 27333 ;;		None
 27334 ;; Auto vars:     Size  Location     Type
 27335 ;;		None
 27336 ;; Return value:  Size  Location     Type
 27337 ;;                  1    wreg      void 
 27338 ;; Registers used:
 27339 ;;		wreg, status,2, status,0, cstack
 27340 ;; Tracked objects:
 27341 ;;		On entry : 3E/1
 27342 ;;		On exit  : 3E/0
 27343 ;;		Unchanged: 0/0
 27344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27349 ;;Total ram usage:        0 bytes
 27350 ;; Hardware stack levels used: 1
 27351 ;; Hardware stack levels required when called: 6
 27352 ;; This function calls:
 27353 ;;		_setFlashLigth_ON
 27354 ;;		_setRGB_ON
 27355 ;; This function is called by:
 27356 ;;		_main
 27357 ;; This function uses a non-reentrant model
 27358 ;;
 27359                           
 27360                           	psect	text115
 27361  004010                     __ptext115:
 27362                           	callstack 0
 27363  004010                     _ControlLights:
 27364                           	callstack 24
 27365                           
 27366                           ;outputs_MC50.c: 818:     if(var_sys.DistanceProgrammingActive==YES)
 27367                           
 27368                           ; BSR set to: 0
 27369                           ;incstack = 0
 27370  004010  0101               	movlb	1	; () banked
 27371  004012  0595               	decf	(_var_sys+64)& (0+255),w,b	;volatile
 27372  004014  A4D8               	btfss	status,2,c
 27373  004016  D007               	goto	l25279
 27374                           
 27375                           ; BSR set to: 1
 27376                           ;outputs_MC50.c: 819:     {;outputs_MC50.c: 820:         setFlashLigth_ON((1000/50));
 27377  004018  0E00               	movlw	0
 27378  00401A  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 27379  00401C  0E14               	movlw	20
 27380  00401E  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 27381  004020  EC89  F049         	call	_setFlashLigth_ON	;wreg free
 27382                           
 27383                           ;outputs_MC50.c: 821:     }
 27384  004024  D00F               	goto	l25285
 27385  004026                     l25279:
 27386                           
 27387                           ; BSR set to: 1
 27388  004026  51E6               	movf	_controlGate_stateMachine& (0+255),w,b
 27389  004028  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 27390  00402A  A4D8               	btfss	status,2,c
 27391  00402C  D00B               	goto	l25285
 27392                           
 27393                           ; BSR set to: 1
 27394                           ;outputs_MC50.c: 823:     {;outputs_MC50.c: 824:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 27395  00402E  0E00               	movlw	0
 27396  004030  6F7D               	movwf	(_var_sys+40)& (0+255),b	;volatile
 27397                           
 27398                           ;outputs_MC50.c: 825:         var_sys.ControlReleCapacitorClose = 0;
 27399  004032  0E00               	movlw	0
 27400  004034  6F7E               	movwf	(_var_sys+41)& (0+255),b	;volatile
 27401                           
 27402                           ; BSR set to: 1
 27403                           ;outputs_MC50.c: 826:         if (var_sys_NVM.flashLightMode !=3){
 27404  004036  0E03               	movlw	3
 27405  004038  19B3               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27406  00403A  B4D8               	btfsc	status,2,c
 27407  00403C  D002               	goto	l2431
 27408                           
 27409                           ; BSR set to: 1
 27410                           
 27411                           ;outputs_MC50.c: 827:            do { LATEbits.LATE2 = 0; } while(0);
 27412  00403E  9487               	bcf	135,2,c	;volatile
 27413  004040  D001               	goto	l25285
 27414  004042                     l2431:
 27415                           
 27416                           ; BSR set to: 1
 27417  004042  8487               	bsf	135,2,c	;volatile
 27418  004044                     l25285:
 27419                           
 27420                           ;outputs_MC50.c: 835:     if (((var_sys.preflashingcontrol == YES || controlGate_stateMa
      +                          chine.current_state==st_Opened) && (ts_system.timeWaitToClose >0) && (ts_system.timeWait
      +                          ToClose <= 3 * (1000/50))) && var_sys_NVM.flashRGBMode == rgb_pre){
 27421  004044  0101               	movlb	1	; () banked
 27422  004046  0572               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 27423  004048  B4D8               	btfsc	status,2,c
 27424  00404A  D005               	goto	u32200
 27425                           
 27426                           ; BSR set to: 1
 27427  00404C  0E04               	movlw	4
 27428  00404E  19E6               	xorwf	_controlGate_stateMachine& (0+255),w,b
 27429  004050  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 27430  004052  A4D8               	btfss	status,2,c
 27431  004054  D01D               	goto	l25297
 27432  004056                     u32200:
 27433                           
 27434                           ; BSR set to: 1
 27435  004056  0100               	movlb	0	; () banked
 27436  004058  BFA2               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 27437  00405A  D01A               	goto	l25297
 27438  00405C  51A2               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 27439  00405E  E103               	bnz	u32210
 27440  004060  05A1               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 27441  004062  A0D8               	btfss	status,0,c
 27442  004064  D015               	goto	l25297
 27443  004066                     u32210:
 27444                           
 27445                           ; BSR set to: 0
 27446  004066  BFA2               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 27447  004068  D006               	goto	u32220
 27448  00406A  51A2               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 27449  00406C  E111               	bnz	l25297
 27450  00406E  0E3D               	movlw	61
 27451  004070  5DA1               	subwf	(_ts_system+18)& (0+255),w,b	;volatile
 27452  004072  B0D8               	btfsc	status,0,c
 27453  004074  D00D               	goto	l25297
 27454  004076                     u32220:
 27455                           
 27456                           ; BSR set to: 0
 27457  004076  0E02               	movlw	2
 27458  004078  0101               	movlb	1	; () banked
 27459  00407A  19BF               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27460  00407C  A4D8               	btfss	status,2,c
 27461  00407E  D008               	goto	l25297
 27462                           
 27463                           ; BSR set to: 1
 27464                           ;outputs_MC50.c: 836:         setRGB_ON(BLUE,( 200/50));
 27465  004080  0E00               	movlw	0
 27466  004082  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27467  004084  0E04               	movlw	4
 27468  004086  6E11               	movwf	setRGB_ON@Freq^0,c
 27469  004088  0E01               	movlw	1
 27470  00408A  EC2C  F03F         	call	_setRGB_ON
 27471                           
 27472                           ;outputs_MC50.c: 838:     }
 27473  00408E  0012               	return	
 27474  004090                     l25297:
 27475  004090  0E03               	movlw	3
 27476  004092  0101               	movlb	1	; () banked
 27477  004094  1955               	xorwf	_var_sys& (0+255),w,b	;volatile
 27478  004096  A4D8               	btfss	status,2,c
 27479  004098  D04F               	goto	l25327
 27480                           
 27481                           ; BSR set to: 1
 27482                           ;outputs_MC50.c: 842:     {;outputs_MC50.c: 843:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 27483  00409A  0E00               	movlw	0
 27484  00409C  6F7D               	movwf	(_var_sys+40)& (0+255),b	;volatile
 27485                           
 27486                           ;outputs_MC50.c: 846:         if (var_sys.ControlReleCapacitorClose==0 && var_sys_NVM.fl
      +                          ashRGBMode==rgb_capacitor)
 27487  00409E  517E               	movf	(_var_sys+41)& (0+255),w,b	;volatile
 27488  0040A0  A4D8               	btfss	status,2,c
 27489  0040A2  D013               	goto	l25309
 27490                           
 27491                           ; BSR set to: 1
 27492  0040A4  0E03               	movlw	3
 27493  0040A6  19BF               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27494  0040A8  A4D8               	btfss	status,2,c
 27495  0040AA  D00F               	goto	l25309
 27496                           
 27497                           ; BSR set to: 1
 27498                           ;outputs_MC50.c: 847:         {;outputs_MC50.c: 848:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 27499  0040AC  0E00               	movlw	0
 27500  0040AE  0100               	movlb	0	; () banked
 27501  0040B0  6FD2               	movwf	(_ts_system+67)& (0+255),b	;volatile
 27502  0040B2  0E28               	movlw	40
 27503  0040B4  6FD1               	movwf	(_ts_system+66)& (0+255),b	;volatile
 27504                           
 27505                           ; BSR set to: 0
 27506                           ;outputs_MC50.c: 849:             setRGB_ON(YELLOW,0);
 27507  0040B6  0E00               	movlw	0
 27508  0040B8  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27509  0040BA  0E00               	movlw	0
 27510  0040BC  6E11               	movwf	setRGB_ON@Freq^0,c
 27511  0040BE  0E04               	movlw	4
 27512  0040C0  EC2C  F03F         	call	_setRGB_ON
 27513                           
 27514                           ;outputs_MC50.c: 850:          var_sys.ControlReleCapacitorClose = 1;
 27515  0040C4  0E01               	movlw	1
 27516  0040C6  0101               	movlb	1	; () banked
 27517  0040C8  6F7E               	movwf	(_var_sys+41)& (0+255),b	;volatile
 27518  0040CA                     l25309:
 27519                           
 27520                           ; BSR set to: 1
 27521                           ;outputs_MC50.c: 852:         if(ts_system.TimeReleCapacitor<=0 && var_sys_NVM.flashRGBM
      +                          ode==rgb_capacitor)
 27522  0040CA  0100               	movlb	0	; () banked
 27523  0040CC  BFD2               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 27524  0040CE  D005               	goto	u32270
 27525  0040D0  51D2               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 27526  0040D2  E105               	bnz	l25313
 27527  0040D4  05D1               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 27528  0040D6  B0D8               	btfsc	status,0,c
 27529  0040D8  D002               	goto	l25313
 27530  0040DA                     u32270:
 27531                           
 27532                           ; BSR set to: 0
 27533  0040DA  0101               	movlb	1	; () banked
 27534  0040DC  51BF               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27535  0040DE                     l25313:
 27536                           
 27537                           ;outputs_MC50.c: 858:         if(var_sys_NVM.flashRGBMode==rgb_pisca && ts_system.TimeRe
      +                          leCapacitor<=0)
 27538  0040DE  0101               	movlb	1	; () banked
 27539  0040E0  05BF               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27540  0040E2  A4D8               	btfss	status,2,c
 27541  0040E4  D010               	goto	l25319
 27542                           
 27543                           ; BSR set to: 1
 27544  0040E6  0100               	movlb	0	; () banked
 27545  0040E8  BFD2               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 27546  0040EA  D005               	goto	u32290
 27547  0040EC  51D2               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 27548  0040EE  E10B               	bnz	l25319
 27549  0040F0  05D1               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 27550  0040F2  B0D8               	btfsc	status,0,c
 27551  0040F4  D008               	goto	l25319
 27552  0040F6                     u32290:
 27553                           
 27554                           ; BSR set to: 0
 27555                           ;outputs_MC50.c: 860:         {;outputs_MC50.c: 861:             setRGB_ON(RED,( 200/50)
      +                           +( 50/50));
 27556  0040F6  0E00               	movlw	0
 27557  0040F8  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27558  0040FA  0E05               	movlw	5
 27559  0040FC  6E11               	movwf	setRGB_ON@Freq^0,c
 27560  0040FE  0E03               	movlw	3
 27561  004100  EC2C  F03F         	call	_setRGB_ON
 27562                           
 27563                           ;outputs_MC50.c: 862:         }
 27564  004104  D007               	goto	l25321
 27565  004106                     l25319:
 27566                           
 27567                           ;outputs_MC50.c: 864:         {;outputs_MC50.c: 865:             setRGB_ON(RED,0);
 27568  004106  0E00               	movlw	0
 27569  004108  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27570  00410A  0E00               	movlw	0
 27571  00410C  6E11               	movwf	setRGB_ON@Freq^0,c
 27572  00410E  0E03               	movlw	3
 27573  004110  EC2C  F03F         	call	_setRGB_ON
 27574  004114                     l25321:
 27575                           
 27576                           ;outputs_MC50.c: 868:         if(var_sys_NVM.flashLightMode==fixo)
 27577  004114  0101               	movlb	1	; () banked
 27578  004116  51B3               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27579  004118  A4D8               	btfss	status,2,c
 27580  00411A  D007               	goto	l25325
 27581                           
 27582                           ; BSR set to: 1
 27583                           ;outputs_MC50.c: 869:         {;outputs_MC50.c: 871:             setFlashLigth_ON(( 500/
      +                          50));
 27584  00411C  0E00               	movlw	0
 27585  00411E  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 27586  004120  0E0A               	movlw	10
 27587  004122  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 27588  004124  EC89  F049         	call	_setFlashLigth_ON	;wreg free
 27589                           
 27590                           ;outputs_MC50.c: 873:         }
 27591  004128  0012               	return	
 27592  00412A                     l25325:
 27593                           
 27594                           ;outputs_MC50.c: 875:             setFlashLigth_ON(0);
 27595  00412A  0E00               	movlw	0
 27596  00412C  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 27597  00412E  0E00               	movlw	0
 27598  004130  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 27599  004132  EC89  F049         	call	_setFlashLigth_ON	;wreg free
 27600  004136  0012               	return	
 27601  004138                     l25327:
 27602                           
 27603                           ; BSR set to: 1
 27604  004138  5155               	movf	_var_sys& (0+255),w,b	;volatile
 27605  00413A  A4D8               	btfss	status,2,c
 27606  00413C  D041               	goto	l25355
 27607                           
 27608                           ; BSR set to: 1
 27609  00413E  05E6               	decf	_controlGate_stateMachine& (0+255),w,b
 27610  004140  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 27611  004142  A4D8               	btfss	status,2,c
 27612  004144  D03D               	goto	l25355
 27613                           
 27614                           ; BSR set to: 1
 27615                           ;outputs_MC50.c: 881:     {;outputs_MC50.c: 882:         if(var_sys.preflashingcontrol !
      +                          = YES){
 27616  004146  0572               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 27617  004148  A4D8               	btfss	status,2,c
 27618                           
 27619                           ; BSR set to: 1
 27620                           
 27621                           ;outputs_MC50.c: 883:             do { LATAbits.LATA7 = 1; } while(0);
 27622  00414A  8E83               	bsf	131,7,c	;volatile
 27623                           
 27624                           ; BSR set to: 1
 27625                           ;outputs_MC50.c: 888:         if(var_sys_NVM.flashRGBMode==rgb_pisca)
 27626  00414C  05BF               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27627  00414E  A4D8               	btfss	status,2,c
 27628  004150  D017               	goto	l25343
 27629                           
 27630                           ; BSR set to: 1
 27631                           ;outputs_MC50.c: 889:         {;outputs_MC50.c: 890:             if (var_sys_NVM.TypeofM
      +                          otor == br || var_sys_NVM.TypeofMotor == SE)setRGB_ON(YELLOW,0);
 27632  004152  0E02               	movlw	2
 27633  004154  19C2               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 27634  004156  B4D8               	btfsc	status,2,c
 27635  004158  D003               	goto	u32360
 27636                           
 27637                           ; BSR set to: 1
 27638  00415A  05C2               	decf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 27639  00415C  A4D8               	btfss	status,2,c
 27640  00415E  D008               	goto	l25341
 27641  004160                     u32360:
 27642                           
 27643                           ; BSR set to: 1
 27644  004160  0E00               	movlw	0
 27645  004162  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27646  004164  0E00               	movlw	0
 27647  004166  6E11               	movwf	setRGB_ON@Freq^0,c
 27648  004168  0E04               	movlw	4
 27649  00416A  EC2C  F03F         	call	_setRGB_ON
 27650  00416E  D013               	goto	l25347
 27651  004170                     l25341:
 27652                           
 27653                           ; BSR set to: 1
 27654  004170  0E00               	movlw	0
 27655  004172  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27656  004174  0E28               	movlw	40
 27657  004176  6E11               	movwf	setRGB_ON@Freq^0,c
 27658  004178  0E04               	movlw	4
 27659  00417A  EC2C  F03F         	call	_setRGB_ON
 27660  00417E  D00B               	goto	l25347
 27661  004180                     l25343:
 27662                           
 27663                           ; BSR set to: 1
 27664  004180  0E03               	movlw	3
 27665  004182  19BF               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27666  004184  B4D8               	btfsc	status,2,c
 27667  004186  D007               	goto	l25347
 27668                           
 27669                           ; BSR set to: 1
 27670  004188  0E00               	movlw	0
 27671  00418A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27672  00418C  0E00               	movlw	0
 27673  00418E  6E11               	movwf	setRGB_ON@Freq^0,c
 27674  004190  0E04               	movlw	4
 27675  004192  EC2C  F03F         	call	_setRGB_ON
 27676  004196                     l25347:
 27677                           
 27678                           ;outputs_MC50.c: 895:         if (var_sys_NVM.flashLightMode != electroiman)
 27679  004196  0E03               	movlw	3
 27680  004198  0101               	movlb	1	; () banked
 27681  00419A  19B3               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27682  00419C  B4D8               	btfsc	status,2,c
 27683  00419E  0012               	return	
 27684                           
 27685                           ; BSR set to: 1
 27686                           ;outputs_MC50.c: 896:         {;outputs_MC50.c: 897:         if (ts_system.TimeOnFlashLi
      +                          gth>0)
 27687  0041A0  0100               	movlb	0	; () banked
 27688  0041A2  BFB2               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 27689  0041A4  D007               	goto	l2459
 27690  0041A6  51B2               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 27691  0041A8  11B1               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 27692  0041AA  11B0               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 27693  0041AC  E1BE               	bnz	l25325
 27694  0041AE  05AF               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 27695  0041B0  B0D8               	btfsc	status,0,c
 27696  0041B2  D7BB               	goto	l25325
 27697  0041B4                     l2459:
 27698                           
 27699                           ; BSR set to: 0
 27700  0041B4  9487               	bcf	135,2,c	;volatile
 27701                           
 27702                           ; BSR set to: 0
 27703                           ;outputs_MC50.c: 904:             ts_system.timeFreqFlashligth=0;
 27704  0041B6  0E00               	movlw	0
 27705  0041B8  6FAE               	movwf	(_ts_system+31)& (0+255),b	;volatile
 27706  0041BA  0E00               	movlw	0
 27707  0041BC  6FAD               	movwf	(_ts_system+30)& (0+255),b	;volatile
 27708                           
 27709                           ; BSR set to: 1
 27710                           ;outputs_MC50.c: 907:     }
 27711                           
 27712                           ;outputs_MC50.c: 906:         }
 27713  0041BE  0012               	return	
 27714  0041C0                     l25355:
 27715                           
 27716                           ; BSR set to: 1
 27717  0041C0  5155               	movf	_var_sys& (0+255),w,b	;volatile
 27718  0041C2  A4D8               	btfss	status,2,c
 27719  0041C4  D042               	goto	l25389
 27720                           
 27721                           ; BSR set to: 1
 27722                           ;outputs_MC50.c: 911:     {;outputs_MC50.c: 912:         if (( var_sys_NVM.autoTimeFullC
      +                          lose==0 && var_sys.StateMotor == InOpenFull)||((var_sys_NVM.autoTimeWalkClose==0) && var
      +                          _sys_NVM.walkTime >0 && var_sys.StateMotor == InOpenWalk))
 27723  0041C6  51AB               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 27724  0041C8  A4D8               	btfss	status,2,c
 27725  0041CA  D003               	goto	u32420
 27726                           
 27727                           ; BSR set to: 1
 27728  0041CC  0555               	decf	_var_sys& (0+255),w,b	;volatile
 27729  0041CE  B4D8               	btfsc	status,2,c
 27730  0041D0  D00A               	goto	u32450
 27731  0041D2                     u32420:
 27732                           
 27733                           ; BSR set to: 1
 27734  0041D2  51AC               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 27735  0041D4  A4D8               	btfss	status,2,c
 27736  0041D6  D015               	goto	l25373
 27737                           
 27738                           ; BSR set to: 1
 27739  0041D8  51AA               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 27740  0041DA  B4D8               	btfsc	status,2,c
 27741  0041DC  D012               	goto	l25373
 27742                           
 27743                           ; BSR set to: 1
 27744  0041DE  0E02               	movlw	2
 27745  0041E0  1955               	xorwf	_var_sys& (0+255),w,b	;volatile
 27746  0041E2  A4D8               	btfss	status,2,c
 27747  0041E4  D00E               	goto	l25373
 27748  0041E6                     u32450:
 27749                           
 27750                           ; BSR set to: 1
 27751                           ;outputs_MC50.c: 913:         {;outputs_MC50.c: 916:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 27752  0041E6  0E00               	movlw	0
 27753  0041E8  6F7D               	movwf	(_var_sys+40)& (0+255),b	;volatile
 27754                           
 27755                           ;outputs_MC50.c: 917:             var_sys.ControlReleCapacitorClose = 0;
 27756  0041EA  0E00               	movlw	0
 27757  0041EC  6F7E               	movwf	(_var_sys+41)& (0+255),b	;volatile
 27758                           
 27759                           ; BSR set to: 1
 27760                           ;outputs_MC50.c: 921:             if (var_sys_NVM.flashLightMode != electroiman && var_s
      +                          ys_NVM.flashLightMode != condominio ){
 27761  0041EE  0E03               	movlw	3
 27762  0041F0  19B3               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27763  0041F2  B4D8               	btfsc	status,2,c
 27764  0041F4  0012               	return	
 27765                           
 27766                           ; BSR set to: 1
 27767  0041F6  0E02               	movlw	2
 27768  0041F8  19B3               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27769  0041FA  B4D8               	btfsc	status,2,c
 27770  0041FC  0012               	return	
 27771                           
 27772                           ; BSR set to: 1
 27773                           
 27774                           ;outputs_MC50.c: 922:               do { LATEbits.LATE2 = 0; } while(0);
 27775  0041FE  9487               	bcf	135,2,c	;volatile
 27776  004200  0012               	return	
 27777  004202                     l25373:
 27778                           
 27779                           ; BSR set to: 1
 27780                           ;outputs_MC50.c: 927:         {;outputs_MC50.c: 928:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 27781  004202  05BF               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27782  004204  A4D8               	btfss	status,2,c
 27783  004206  D008               	goto	l25377
 27784                           
 27785                           ; BSR set to: 1
 27786                           ;outputs_MC50.c: 929:             {;outputs_MC50.c: 930:                 setRGB_ON(BLUE,
      +                          (1000/50));
 27787  004208  0E00               	movlw	0
 27788  00420A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27789  00420C  0E14               	movlw	20
 27790  00420E  6E11               	movwf	setRGB_ON@Freq^0,c
 27791  004210  0E01               	movlw	1
 27792  004212  EC2C  F03F         	call	_setRGB_ON
 27793                           
 27794                           ;outputs_MC50.c: 932:             }
 27795  004216  D007               	goto	l25379
 27796  004218                     l25377:
 27797                           
 27798                           ; BSR set to: 1
 27799                           ;outputs_MC50.c: 934:             {;outputs_MC50.c: 935:                 setRGB_ON(BLUE,
      +                          0);
 27800  004218  0E00               	movlw	0
 27801  00421A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27802  00421C  0E00               	movlw	0
 27803  00421E  6E11               	movwf	setRGB_ON@Freq^0,c
 27804  004220  0E01               	movlw	1
 27805  004222  EC2C  F03F         	call	_setRGB_ON
 27806  004226                     l25379:
 27807                           
 27808                           ;outputs_MC50.c: 939:             if(var_sys_NVM.flashLightMode==pisca ||var_sys_NVM.fla
      +                          shLightMode==electroiman)
 27809  004226  0101               	movlb	1	; () banked
 27810  004228  05B3               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27811  00422A  B4D8               	btfsc	status,2,c
 27812  00422C  D004               	goto	u32500
 27813                           
 27814                           ; BSR set to: 1
 27815  00422E  0E03               	movlw	3
 27816  004230  19B3               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27817  004232  A4D8               	btfss	status,2,c
 27818  004234  D002               	goto	l25383
 27819  004236                     u32500:
 27820                           
 27821                           ; BSR set to: 1
 27822                           
 27823                           ;outputs_MC50.c: 940:             {;outputs_MC50.c: 941:                  do { LATEbits.
      +                          LATE2 = 0; } while(0);
 27824  004236  9487               	bcf	135,2,c	;volatile
 27825  004238  0012               	return	
 27826  00423A                     l25383:
 27827                           
 27828                           ; BSR set to: 1
 27829  00423A  51B3               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27830  00423C  B4D8               	btfsc	status,2,c
 27831  00423E  D775               	goto	l25325
 27832                           
 27833                           ; BSR set to: 1
 27834  004240  0E02               	movlw	2
 27835  004242  19B3               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27836  004244  A4D8               	btfss	status,2,c
 27837  004246  0012               	return	
 27838  004248  D770               	goto	l25325
 27839  00424A                     l25389:
 27840                           
 27841                           ; BSR set to: 1
 27842                           ;outputs_MC50.c: 955:     {;outputs_MC50.c: 957:         var_sys.ControlReleCapacitorClo
      +                          se=0;
 27843  00424A  0E00               	movlw	0
 27844  00424C  6F7E               	movwf	(_var_sys+41)& (0+255),b	;volatile
 27845                           
 27846                           ;outputs_MC50.c: 958:         if (var_sys.ControlReleCapacitorOpen==0 && var_sys_NVM.fla
      +                          shRGBMode==rgb_capacitor)
 27847  00424E  517D               	movf	(_var_sys+40)& (0+255),w,b	;volatile
 27848  004250  A4D8               	btfss	status,2,c
 27849  004252  D00C               	goto	l25395
 27850                           
 27851                           ; BSR set to: 1
 27852  004254  0E03               	movlw	3
 27853  004256  19BF               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27854  004258  A4D8               	btfss	status,2,c
 27855  00425A  D008               	goto	l25395
 27856                           
 27857                           ; BSR set to: 1
 27858                           ;outputs_MC50.c: 959:         {;outputs_MC50.c: 960:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 27859  00425C  0E00               	movlw	0
 27860  00425E  0100               	movlb	0	; () banked
 27861  004260  6FD2               	movwf	(_ts_system+67)& (0+255),b	;volatile
 27862  004262  0E28               	movlw	40
 27863  004264  6FD1               	movwf	(_ts_system+66)& (0+255),b	;volatile
 27864                           
 27865                           ;outputs_MC50.c: 962:          var_sys.ControlReleCapacitorOpen = 1;
 27866  004266  0E01               	movlw	1
 27867  004268  0101               	movlb	1	; () banked
 27868  00426A  6F7D               	movwf	(_var_sys+40)& (0+255),b	;volatile
 27869  00426C                     l25395:
 27870                           
 27871                           ; BSR set to: 1
 27872                           ;outputs_MC50.c: 964:         if(ts_system.TimeReleCapacitor <=0 && var_sys_NVM.flashRGB
      +                          Mode==rgb_capacitor)
 27873  00426C  0100               	movlb	0	; () banked
 27874  00426E  BFD2               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 27875  004270  D005               	goto	u32550
 27876  004272  51D2               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 27877  004274  E105               	bnz	l25399
 27878  004276  05D1               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 27879  004278  B0D8               	btfsc	status,0,c
 27880  00427A  D002               	goto	l25399
 27881  00427C                     u32550:
 27882                           
 27883                           ; BSR set to: 0
 27884  00427C  0101               	movlb	1	; () banked
 27885  00427E  51BF               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27886  004280                     l25399:
 27887                           
 27888                           ;outputs_MC50.c: 969:         if (controlGate_stateMachine.current_state==st_Opened)
 27889  004280  0E04               	movlw	4
 27890  004282  0101               	movlb	1	; () banked
 27891  004284  19E6               	xorwf	_controlGate_stateMachine& (0+255),w,b
 27892  004286  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 27893  004288  A4D8               	btfss	status,2,c
 27894  00428A  D01A               	goto	l25411
 27895                           
 27896                           ; BSR set to: 1
 27897                           ;outputs_MC50.c: 970:         {;outputs_MC50.c: 973:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 27898  00428C  0E00               	movlw	0
 27899  00428E  6F7D               	movwf	(_var_sys+40)& (0+255),b	;volatile
 27900                           
 27901                           ;outputs_MC50.c: 974:             var_sys.ControlReleCapacitorClose = 0;
 27902  004290  0E00               	movlw	0
 27903  004292  6F7E               	movwf	(_var_sys+41)& (0+255),b	;volatile
 27904                           
 27905                           ;outputs_MC50.c: 977:             if (var_sys_NVM.autoTimeFullClose != 0 || ((var_sys_NV
      +                          M.autoTimeWalkClose!=0) && var_sys_NVM.walkTime >0)|| var_sys_NVM.operationMode==2)
 27906  004294  51AB               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 27907  004296  A4D8               	btfss	status,2,c
 27908  004298  D00A               	goto	u32600
 27909                           
 27910                           ; BSR set to: 1
 27911  00429A  51AC               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 27912  00429C  B4D8               	btfsc	status,2,c
 27913  00429E  D003               	goto	u32590
 27914                           
 27915                           ; BSR set to: 1
 27916  0042A0  51AA               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 27917  0042A2  A4D8               	btfss	status,2,c
 27918  0042A4  D004               	goto	u32600
 27919  0042A6                     u32590:
 27920                           
 27921                           ; BSR set to: 1
 27922  0042A6  0E02               	movlw	2
 27923  0042A8  19B2               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 27924  0042AA  A4D8               	btfss	status,2,c
 27925  0042AC  D007               	goto	l2493
 27926  0042AE                     u32600:
 27927                           
 27928                           ; BSR set to: 1
 27929                           ;outputs_MC50.c: 978:             {;outputs_MC50.c: 979:                    setRGB_ON(BL
      +                          UE,0);
 27930  0042AE  0E00               	movlw	0
 27931  0042B0  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27932  0042B2  0E00               	movlw	0
 27933  0042B4  6E11               	movwf	setRGB_ON@Freq^0,c
 27934  0042B6  0E01               	movlw	1
 27935  0042B8  EC2C  F03F         	call	_setRGB_ON
 27936  0042BC                     l2493:
 27937  0042BC  9487               	bcf	135,2,c	;volatile
 27938  0042BE  0012               	return	
 27939  0042C0                     l25411:
 27940                           
 27941                           ; BSR set to: 1
 27942                           ;outputs_MC50.c: 993:         {;outputs_MC50.c: 996:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 27943  0042C0  05BF               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27944  0042C2  A4D8               	btfss	status,2,c
 27945  0042C4  D008               	goto	l25415
 27946                           
 27947                           ; BSR set to: 1
 27948                           ;outputs_MC50.c: 997:             {;outputs_MC50.c: 998:                 setRGB_ON(GREEN
      +                          ,( 500/50));
 27949  0042C6  0E00               	movlw	0
 27950  0042C8  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27951  0042CA  0E0A               	movlw	10
 27952  0042CC  6E11               	movwf	setRGB_ON@Freq^0,c
 27953  0042CE  0E02               	movlw	2
 27954  0042D0  EC2C  F03F         	call	_setRGB_ON
 27955                           
 27956                           ;outputs_MC50.c: 999:             }
 27957  0042D4  D007               	goto	l25417
 27958  0042D6                     l25415:
 27959                           
 27960                           ; BSR set to: 1
 27961                           ;outputs_MC50.c: 1001:             {;outputs_MC50.c: 1002:                 setRGB_ON(GRE
      +                          EN,0);
 27962  0042D6  0E00               	movlw	0
 27963  0042D8  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27964  0042DA  0E00               	movlw	0
 27965  0042DC  6E11               	movwf	setRGB_ON@Freq^0,c
 27966  0042DE  0E02               	movlw	2
 27967  0042E0  EC2C  F03F         	call	_setRGB_ON
 27968  0042E4                     l25417:
 27969                           
 27970                           ;outputs_MC50.c: 1006:             if(var_sys_NVM.flashLightMode==fixo)
 27971  0042E4  0101               	movlb	1	; () banked
 27972  0042E6  51B3               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27973  0042E8  A4D8               	btfss	status,2,c
 27974  0042EA  D007               	goto	l25421
 27975                           
 27976                           ; BSR set to: 1
 27977                           ;outputs_MC50.c: 1007:             {;outputs_MC50.c: 1010:                 setFlashLigth
      +                          _ON((1000/50));
 27978  0042EC  0E00               	movlw	0
 27979  0042EE  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 27980  0042F0  0E14               	movlw	20
 27981  0042F2  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 27982  0042F4  EC89  F049         	call	_setFlashLigth_ON	;wreg free
 27983                           
 27984                           ;outputs_MC50.c: 1011:             }
 27985  0042F8  D00D               	goto	l25427
 27986  0042FA                     l25421:
 27987                           
 27988                           ; BSR set to: 1
 27989  0042FA  05B3               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27990  0042FC  B4D8               	btfsc	status,2,c
 27991  0042FE  D004               	goto	u32640
 27992                           
 27993                           ; BSR set to: 1
 27994  004300  0E02               	movlw	2
 27995  004302  19B3               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27996  004304  A4D8               	btfss	status,2,c
 27997  004306  D006               	goto	l25427
 27998  004308                     u32640:
 27999                           
 28000                           ; BSR set to: 1
 28001                           ;outputs_MC50.c: 1013:             {;outputs_MC50.c: 1014:                 setFlashLigth
      +                          _ON(0);
 28002  004308  0E00               	movlw	0
 28003  00430A  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 28004  00430C  0E00               	movlw	0
 28005  00430E  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 28006  004310  EC89  F049         	call	_setFlashLigth_ON	;wreg free
 28007  004314                     l25427:
 28008                           
 28009                           ;outputs_MC50.c: 1017:             if (var_sys_NVM.flashLightMode == electroiman)
 28010  004314  0E03               	movlw	3
 28011  004316  0101               	movlb	1	; () banked
 28012  004318  19B3               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28013  00431A  A4D8               	btfss	status,2,c
 28014  00431C  0012               	return	
 28015                           
 28016                           ; BSR set to: 1
 28017                           
 28018                           ;outputs_MC50.c: 1018:             {;outputs_MC50.c: 1019:             do { LATEbits.LAT
      +                          E2 = 0; } while(0);
 28019  00431E  9487               	bcf	135,2,c	;volatile
 28020  004320  0012               	return		;funcret
 28021  004322                     __end_of_ControlLights:
 28022                           	callstack 0
 28023                           
 28024 ;; *************** function _setRGB_ON *****************
 28025 ;; Defined at:
 28026 ;;		line 1028 in file "outputs_MC50.c"
 28027 ;; Parameters:    Size  Location     Type
 28028 ;;  RGBLigth        1    wreg     enum E10611
 28029 ;;  Freq            2   16[COMRAM] int 
 28030 ;; Auto vars:     Size  Location     Type
 28031 ;;  RGBLigth        1   20[COMRAM] enum E10611
 28032 ;; Return value:  Size  Location     Type
 28033 ;;                  1    wreg      void 
 28034 ;; Registers used:
 28035 ;;		wreg, status,2, status,0, cstack
 28036 ;; Tracked objects:
 28037 ;;		On entry : 3E/1
 28038 ;;		On exit  : 3E/0
 28039 ;;		Unchanged: 0/0
 28040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28041 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28042 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28043 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28044 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28045 ;;Total ram usage:        5 bytes
 28046 ;; Hardware stack levels used: 1
 28047 ;; Hardware stack levels required when called: 5
 28048 ;; This function calls:
 28049 ;;		_RGB_Set
 28050 ;; This function is called by:
 28051 ;;		_ControlLights
 28052 ;; This function uses a non-reentrant model
 28053 ;;
 28054                           
 28055                           	psect	text116
 28056  007E58                     __ptext116:
 28057                           	callstack 0
 28058  007E58                     _setRGB_ON:
 28059                           	callstack 24
 28060                           
 28061                           ;incstack = 0
 28062                           ;setRGB_ON@RGBLigth stored from wreg
 28063  007E58  6E15               	movwf	setRGB_ON@RGBLigth^0,c
 28064                           
 28065                           ;outputs_MC50.c: 1028: void setRGB_ON(RGBY_enum RGBLigth,int Freq);outputs_MC50.c: 1029:
      +                           {;outputs_MC50.c: 1031:     do { LATAbits.LATA7 = 1; } while(0);
 28066  007E5A  8E83               	bsf	131,7,c	;volatile
 28067                           
 28068                           ;outputs_MC50.c: 1037:     if(Freq==0 || var_sys.upFaseRGB==1)
 28069  007E5C  5011               	movf	setRGB_ON@Freq^0,w,c
 28070  007E5E  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 28071  007E60  B4D8               	btfsc	status,2,c
 28072  007E62  D015               	goto	l22817
 28073  007E64  0101               	movlb	1	; () banked
 28074  007E66  0579               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 28075  007E68  B4D8               	btfsc	status,2,c
 28076  007E6A  D011               	goto	l22817
 28077  007E6C  D024               	goto	l22819
 28078  007E6E                     l22807:
 28079                           
 28080                           ;outputs_MC50.c: 1043:                 RGB_Set(0x20);
 28081  007E6E  0E20               	movlw	32
 28082  007E70  EC7C  F04D         	call	_RGB_Set
 28083                           
 28084                           ;outputs_MC50.c: 1044:             break;
 28085  007E74  D020               	goto	l22819
 28086  007E76                     l22809:
 28087                           
 28088                           ;outputs_MC50.c: 1047:                 RGB_Set(0x04);
 28089  007E76  0E04               	movlw	4
 28090  007E78  EC7C  F04D         	call	_RGB_Set
 28091                           
 28092                           ;outputs_MC50.c: 1048:             break;
 28093  007E7C  D01C               	goto	l22819
 28094  007E7E                     l22811:
 28095                           
 28096                           ;outputs_MC50.c: 1051:                 RGB_Set(0x00);
 28097  007E7E  0E00               	movlw	0
 28098  007E80  EC7C  F04D         	call	_RGB_Set
 28099                           
 28100                           ;outputs_MC50.c: 1052:             break;
 28101  007E84  D018               	goto	l22819
 28102  007E86                     l22813:
 28103                           
 28104                           ;outputs_MC50.c: 1055:                 RGB_Set(0x24);
 28105  007E86  0E24               	movlw	36
 28106  007E88  EC7C  F04D         	call	_RGB_Set
 28107                           
 28108                           ;outputs_MC50.c: 1056:             break;
 28109  007E8C  D014               	goto	l22819
 28110  007E8E                     l22817:
 28111  007E8E  5015               	movf	setRGB_ON@RGBLigth^0,w,c
 28112  007E90  6E13               	movwf	??_setRGB_ON^0,c
 28113  007E92  6A14               	clrf	(??_setRGB_ON+1)^0,c
 28114                           
 28115                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28116                           ; Switch size 1, requested type "simple"
 28117                           ; Number of cases is 1, Range of values is 0 to 0
 28118                           ; switch strategies available:
 28119                           ; Name         Instructions Cycles
 28120                           ; simple_byte            4     3 (average)
 28121                           ;	Chosen strategy is simple_byte
 28122  007E94  5014               	movf	(??_setRGB_ON+1)^0,w,c
 28123  007E96  0A00               	xorlw	0	; case 0
 28124  007E98  A4D8               	btfss	status,2,c
 28125  007E9A  D00D               	goto	l22819
 28126                           
 28127                           ; Switch size 1, requested type "simple"
 28128                           ; Number of cases is 4, Range of values is 1 to 4
 28129                           ; switch strategies available:
 28130                           ; Name         Instructions Cycles
 28131                           ; simple_byte           13     7 (average)
 28132                           ;	Chosen strategy is simple_byte
 28133  007E9C  5013               	movf	??_setRGB_ON^0,w,c
 28134  007E9E  0A01               	xorlw	1	; case 1
 28135  007EA0  B4D8               	btfsc	status,2,c
 28136  007EA2  D7ED               	goto	l22811
 28137  007EA4  0A03               	xorlw	3	; case 2
 28138  007EA6  B4D8               	btfsc	status,2,c
 28139  007EA8  D7E6               	goto	l22809
 28140  007EAA  0A01               	xorlw	1	; case 3
 28141  007EAC  B4D8               	btfsc	status,2,c
 28142  007EAE  D7DF               	goto	l22807
 28143  007EB0  0A07               	xorlw	7	; case 4
 28144  007EB2  B4D8               	btfsc	status,2,c
 28145  007EB4  D7E8               	goto	l22813
 28146  007EB6                     l22819:
 28147                           
 28148                           ;outputs_MC50.c: 1061:     if(ts_system.timeFreqRGB<=0 && Freq!=0)
 28149  007EB6  0100               	movlb	0	; () banked
 28150  007EB8  BFAC               	btfsc	(_ts_system+29)& (0+255),7,b	;volatile
 28151  007EBA  D005               	goto	u26960
 28152  007EBC  51AC               	movf	(_ts_system+29)& (0+255),w,b	;volatile
 28153  007EBE  E114               	bnz	l2523
 28154  007EC0  05AB               	decf	(_ts_system+28)& (0+255),w,b	;volatile
 28155  007EC2  B0D8               	btfsc	status,0,c
 28156  007EC4  0012               	return	
 28157  007EC6                     u26960:
 28158                           
 28159                           ; BSR set to: 0
 28160  007EC6  5011               	movf	setRGB_ON@Freq^0,w,c
 28161  007EC8  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 28162  007ECA  B4D8               	btfsc	status,2,c
 28163  007ECC  0012               	return	
 28164                           
 28165                           ; BSR set to: 0
 28166                           ;outputs_MC50.c: 1062:     {;outputs_MC50.c: 1063:         ts_system.timeFreqRGB=Freq;
 28167  007ECE  C011  F0AB         	movff	setRGB_ON@Freq,_ts_system+28	;volatile
 28168  007ED2  C012  F0AC         	movff	setRGB_ON@Freq+1,_ts_system+29	;volatile
 28169                           
 28170                           ; BSR set to: 0
 28171                           ;outputs_MC50.c: 1064:         if(var_sys.upFaseRGB==1)
 28172  007ED6  0101               	movlb	1	; () banked
 28173  007ED8  0579               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 28174  007EDA  A4D8               	btfss	status,2,c
 28175  007EDC  D003               	goto	l22829
 28176                           
 28177                           ; BSR set to: 1
 28178                           ;outputs_MC50.c: 1065:         {;outputs_MC50.c: 1066:             var_sys.upFaseRGB=0;
 28179  007EDE  0E00               	movlw	0
 28180  007EE0  6F79               	movwf	(_var_sys+36)& (0+255),b	;volatile
 28181                           
 28182                           ;outputs_MC50.c: 1067:         }
 28183  007EE2  0012               	return	
 28184  007EE4                     l22829:
 28185                           
 28186                           ; BSR set to: 1
 28187                           ;outputs_MC50.c: 1069:         {;outputs_MC50.c: 1070:             var_sys.upFaseRGB=1;
 28188  007EE4  0E01               	movlw	1
 28189  007EE6  6F79               	movwf	(_var_sys+36)& (0+255),b	;volatile
 28190  007EE8                     l2523:
 28191  007EE8  0012               	return		;funcret
 28192  007EEA                     __end_of_setRGB_ON:
 28193                           	callstack 0
 28194                           
 28195 ;; *************** function _RGB_Set *****************
 28196 ;; Defined at:
 28197 ;;		line 98 in file "outputs_MC50.c"
 28198 ;; Parameters:    Size  Location     Type
 28199 ;;  value           1    wreg     unsigned char 
 28200 ;; Auto vars:     Size  Location     Type
 28201 ;;  value           1   15[COMRAM] unsigned char 
 28202 ;; Return value:  Size  Location     Type
 28203 ;;                  1    wreg      void 
 28204 ;; Registers used:
 28205 ;;		wreg, status,2, status,0
 28206 ;; Tracked objects:
 28207 ;;		On entry : 0/1
 28208 ;;		On exit  : 0/0
 28209 ;;		Unchanged: 0/0
 28210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28214 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28215 ;;Total ram usage:        1 bytes
 28216 ;; Hardware stack levels used: 1
 28217 ;; Hardware stack levels required when called: 4
 28218 ;; This function calls:
 28219 ;;		Nothing
 28220 ;; This function is called by:
 28221 ;;		_setRGB_ON
 28222 ;; This function uses a non-reentrant model
 28223 ;;
 28224                           
 28225                           	psect	text117
 28226  009AF8                     __ptext117:
 28227                           	callstack 0
 28228  009AF8                     _RGB_Set:
 28229                           	callstack 24
 28230                           
 28231                           ;incstack = 0
 28232                           ;RGB_Set@value stored from wreg
 28233  009AF8  6E10               	movwf	RGB_Set@value^0,c
 28234                           
 28235                           ;outputs_MC50.c: 98: void RGB_Set(char value);outputs_MC50.c: 99: {;outputs_MC50.c: 100:
      +                              LATC &= 0xdb ;
 28236  009AFA  0EDB               	movlw	219
 28237  009AFC  1685               	andwf	133,f,c	;volatile
 28238                           
 28239                           ;outputs_MC50.c: 101:    LATC |= value;
 28240  009AFE  5010               	movf	RGB_Set@value^0,w,c	;volatile
 28241  009B00  1285               	iorwf	133,f,c	;volatile
 28242  009B02  9E83               	bcf	131,7,c	;volatile
 28243  009B04  0012               	return		;funcret
 28244  009B06                     __end_of_RGB_Set:
 28245                           	callstack 0
 28246                           
 28247 ;; *************** function _setFlashLigth_ON *****************
 28248 ;; Defined at:
 28249 ;;		line 1077 in file "outputs_MC50.c"
 28250 ;; Parameters:    Size  Location     Type
 28251 ;;  Freq            2   15[COMRAM] int 
 28252 ;; Auto vars:     Size  Location     Type
 28253 ;;		None
 28254 ;; Return value:  Size  Location     Type
 28255 ;;                  1    wreg      void 
 28256 ;; Registers used:
 28257 ;;		wreg, status,2, status,0
 28258 ;; Tracked objects:
 28259 ;;		On entry : 3E/1
 28260 ;;		On exit  : 3E/0
 28261 ;;		Unchanged: 0/0
 28262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28263 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28266 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28267 ;;Total ram usage:        2 bytes
 28268 ;; Hardware stack levels used: 1
 28269 ;; Hardware stack levels required when called: 4
 28270 ;; This function calls:
 28271 ;;		Nothing
 28272 ;; This function is called by:
 28273 ;;		_ControlLights
 28274 ;; This function uses a non-reentrant model
 28275 ;;
 28276                           
 28277                           	psect	text118
 28278  009312                     __ptext118:
 28279                           	callstack 0
 28280  009312                     _setFlashLigth_ON:
 28281                           	callstack 25
 28282                           
 28283                           ;outputs_MC50.c: 1077: void setFlashLigth_ON(int Freq);outputs_MC50.c: 1078: {;outputs_M
      +                          C50.c: 1079:     if(Freq==0 || var_sys.upFaseFlashligth==1)
 28284                           
 28285                           ;incstack = 0
 28286  009312  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 28287  009314  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 28288  009316  B4D8               	btfsc	status,2,c
 28289  009318  D004               	goto	u26910
 28290  00931A  0101               	movlb	1	; () banked
 28291  00931C  057A               	decf	(_var_sys+37)& (0+255),w,b	;volatile
 28292  00931E  A4D8               	btfss	status,2,c
 28293  009320  D002               	goto	l2532
 28294  009322                     u26910:
 28295                           
 28296                           ;outputs_MC50.c: 1080:     {;outputs_MC50.c: 1081:         do { LATEbits.LATE2 = 1; } wh
      +                          ile(0);
 28297  009322  8487               	bsf	135,2,c	;volatile
 28298  009324  D001               	goto	l22795
 28299  009326                     l2532:
 28300                           
 28301                           ; BSR set to: 1
 28302  009326  9487               	bcf	135,2,c	;volatile
 28303  009328                     l22795:
 28304                           
 28305                           ;outputs_MC50.c: 1088:     if(ts_system.timeFreqFlashligth<=0 && Freq!=0)
 28306  009328  0100               	movlb	0	; () banked
 28307  00932A  BFAE               	btfsc	(_ts_system+31)& (0+255),7,b	;volatile
 28308  00932C  D005               	goto	u26920
 28309  00932E  51AE               	movf	(_ts_system+31)& (0+255),w,b	;volatile
 28310  009330  E10E               	bnz	l2535
 28311  009332  05AD               	decf	(_ts_system+30)& (0+255),w,b	;volatile
 28312  009334  B0D8               	btfsc	status,0,c
 28313  009336  0012               	return	
 28314  009338                     u26920:
 28315                           
 28316                           ; BSR set to: 0
 28317  009338  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 28318  00933A  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 28319  00933C  B4D8               	btfsc	status,2,c
 28320  00933E  0012               	return	
 28321                           
 28322                           ; BSR set to: 0
 28323                           ;outputs_MC50.c: 1089:     {;outputs_MC50.c: 1090:         ts_system.timeFreqFlashligth=
      +                          Freq;
 28324  009340  C010  F0AD         	movff	setFlashLigth_ON@Freq,_ts_system+30	;volatile
 28325  009344  C011  F0AE         	movff	setFlashLigth_ON@Freq+1,_ts_system+31	;volatile
 28326                           
 28327                           ; BSR set to: 0
 28328                           ;outputs_MC50.c: 1091:         var_sys.upFaseFlashligth ^= (1 << 0);
 28329  009348  0E01               	movlw	1
 28330  00934A  0101               	movlb	1	; () banked
 28331  00934C  1B7A               	xorwf	(_var_sys+37)& (0+255),f,b	;volatile
 28332  00934E                     l2535:
 28333  00934E  0012               	return		;funcret
 28334  009350                     __end_of_setFlashLigth_ON:
 28335                           	callstack 0
 28336                           
 28337 ;; *************** function _ControlInputs *****************
 28338 ;; Defined at:
 28339 ;;		line 674 in file "inputs_MC50.c"
 28340 ;; Parameters:    Size  Location     Type
 28341 ;;		None
 28342 ;; Auto vars:     Size  Location     Type
 28343 ;;		None
 28344 ;; Return value:  Size  Location     Type
 28345 ;;                  1    wreg      void 
 28346 ;; Registers used:
 28347 ;;		wreg, status,2, status,0
 28348 ;; Tracked objects:
 28349 ;;		On entry : 3F/1
 28350 ;;		On exit  : 3F/1
 28351 ;;		Unchanged: 0/0
 28352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28357 ;;Total ram usage:        0 bytes
 28358 ;; Hardware stack levels used: 1
 28359 ;; Hardware stack levels required when called: 4
 28360 ;; This function calls:
 28361 ;;		Nothing
 28362 ;; This function is called by:
 28363 ;;		_main
 28364 ;; This function uses a non-reentrant model
 28365 ;;
 28366                           
 28367                           	psect	text119
 28368  00735C                     __ptext119:
 28369                           	callstack 0
 28370  00735C                     _ControlInputs:
 28371                           	callstack 26
 28372                           
 28373                           ; BSR set to: 1
 28374                           ;inputs_MC50.c: 678:     if (( var_sys.StateMotor==InClose || (((PORTEbits.RE1 == 1)&& v
      +                          ar_sys_NVM.Direction_motor == 0)||((PORTEbits.RE0 == 1)&&var_sys_NVM.Direction_motor == 
      +                          1))) && (var_sys.FimCurso_CloseIsEnabled == YES))
 28375                           
 28376                           ;incstack = 0
 28377  00735C  0E03               	movlw	3
 28378  00735E  1955               	xorwf	_var_sys& (0+255),w,b	;volatile
 28379  007360  B4D8               	btfsc	status,2,c
 28380  007362  D00A               	goto	u30680
 28381                           
 28382                           ; BSR set to: 1
 28383  007364  A291               	btfss	145,1,c	;volatile
 28384  007366  D003               	goto	u30660
 28385                           
 28386                           ; BSR set to: 1
 28387  007368  51C1               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 28388  00736A  B4D8               	btfsc	status,2,c
 28389  00736C  D005               	goto	u30680
 28390  00736E                     u30660:
 28391                           
 28392                           ; BSR set to: 1
 28393  00736E  A091               	btfss	145,0,c	;volatile
 28394  007370  D008               	goto	l24595
 28395                           
 28396                           ; BSR set to: 1
 28397  007372  05C1               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 28398  007374  A4D8               	btfss	status,2,c
 28399  007376  D005               	goto	l24595
 28400  007378                     u30680:
 28401                           
 28402                           ; BSR set to: 1
 28403  007378  0558               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 28404  00737A  A4D8               	btfss	status,2,c
 28405  00737C  D002               	goto	l24595
 28406                           
 28407                           ; BSR set to: 1
 28408                           ;inputs_MC50.c: 679:     {;inputs_MC50.c: 680:         var_sys.StateMotor = Stopped;
 28409  00737E  0E00               	movlw	0
 28410  007380  6F55               	movwf	_var_sys& (0+255),b	;volatile
 28411  007382                     l24595:
 28412                           
 28413                           ; BSR set to: 1
 28414                           ;inputs_MC50.c: 683:     if((var_sys.StateMotor==InOpenFull || var_sys.StateMotor==InOpe
      +                          nWalk || (((PORTEbits.RE0 == 1) &&var_sys_NVM.Direction_motor == 0)||((PORTEbits.RE1 == 
      +                          1) && var_sys_NVM.Direction_motor == 1))) && (var_sys.FimCurso_OpenIsEnabled == YES))
 28415  007382  0555               	decf	_var_sys& (0+255),w,b	;volatile
 28416  007384  B4D8               	btfsc	status,2,c
 28417  007386  D00E               	goto	u30750
 28418                           
 28419                           ; BSR set to: 1
 28420  007388  0E02               	movlw	2
 28421  00738A  1955               	xorwf	_var_sys& (0+255),w,b	;volatile
 28422  00738C  B4D8               	btfsc	status,2,c
 28423  00738E  D00A               	goto	u30750
 28424                           
 28425                           ; BSR set to: 1
 28426  007390  A091               	btfss	145,0,c	;volatile
 28427  007392  D003               	goto	u30730
 28428                           
 28429                           ; BSR set to: 1
 28430  007394  51C1               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 28431  007396  B4D8               	btfsc	status,2,c
 28432  007398  D005               	goto	u30750
 28433  00739A                     u30730:
 28434                           
 28435                           ; BSR set to: 1
 28436  00739A  A291               	btfss	145,1,c	;volatile
 28437  00739C  D008               	goto	l24609
 28438                           
 28439                           ; BSR set to: 1
 28440  00739E  05C1               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 28441  0073A0  A4D8               	btfss	status,2,c
 28442  0073A2  D005               	goto	l24609
 28443  0073A4                     u30750:
 28444                           
 28445                           ; BSR set to: 1
 28446  0073A4  0559               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 28447  0073A6  A4D8               	btfss	status,2,c
 28448  0073A8  D002               	goto	l24609
 28449                           
 28450                           ; BSR set to: 1
 28451                           ;inputs_MC50.c: 684:     {;inputs_MC50.c: 685:         var_sys.StateMotor = Stopped;
 28452  0073AA  0E00               	movlw	0
 28453  0073AC  6F55               	movwf	_var_sys& (0+255),b	;volatile
 28454  0073AE                     l24609:
 28455                           
 28456                           ; BSR set to: 1
 28457                           ;inputs_MC50.c: 688:     if (var_sys.LearningIsEnabled != YES){
 28458  0073AE  057B               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 28459  0073B0  B4D8               	btfsc	status,2,c
 28460  0073B2  0012               	return	
 28461                           
 28462                           ; BSR set to: 1
 28463                           ;inputs_MC50.c: 690:         if((var_sys_NVM.photoCellIsON == 1) && (var_sys.photoCellIs
      +                          Obstructed == YES) && var_sys.AutoInversionActive==NO)
 28464  0073B4  05AD               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 28465  0073B6  A4D8               	btfss	status,2,c
 28466  0073B8  D023               	goto	l24635
 28467                           
 28468                           ; BSR set to: 1
 28469  0073BA  0556               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 28470  0073BC  A4D8               	btfss	status,2,c
 28471  0073BE  D020               	goto	l24635
 28472                           
 28473                           ; BSR set to: 1
 28474  0073C0  517C               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 28475  0073C2  A4D8               	btfss	status,2,c
 28476  0073C4  D01D               	goto	l24635
 28477                           
 28478                           ; BSR set to: 1
 28479                           ;inputs_MC50.c: 691:         {;inputs_MC50.c: 699:             if((var_sys.StateMotor==I
      +                          nOpenFull || var_sys.StateMotor==InOpenWalk) && (var_sys_NVM.photoCellInOpen==1))
 28480  0073C6  0555               	decf	_var_sys& (0+255),w,b	;volatile
 28481  0073C8  B4D8               	btfsc	status,2,c
 28482  0073CA  D004               	goto	u30820
 28483                           
 28484                           ; BSR set to: 1
 28485  0073CC  0E02               	movlw	2
 28486  0073CE  1955               	xorwf	_var_sys& (0+255),w,b	;volatile
 28487  0073D0  A4D8               	btfss	status,2,c
 28488  0073D2  D003               	goto	l24625
 28489  0073D4                     u30820:
 28490                           
 28491                           ; BSR set to: 1
 28492  0073D4  05AE               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 28493  0073D6  B4D8               	btfsc	status,2,c
 28494  0073D8  D011               	goto	u30870
 28495  0073DA                     l24625:
 28496                           
 28497                           ; BSR set to: 1
 28498  0073DA  0E03               	movlw	3
 28499  0073DC  1955               	xorwf	_var_sys& (0+255),w,b	;volatile
 28500  0073DE  A4D8               	btfss	status,2,c
 28501  0073E0  D00F               	goto	l24635
 28502                           
 28503                           ; BSR set to: 1
 28504  0073E2  51AE               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 28505  0073E4  A4D8               	btfss	status,2,c
 28506  0073E6  D00C               	goto	l24635
 28507                           
 28508                           ; BSR set to: 1
 28509  0073E8  BF66               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 28510  0073EA  D005               	goto	u30860
 28511  0073EC  5166               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 28512  0073EE  E108               	bnz	l24635
 28513  0073F0  0565               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 28514  0073F2  B0D8               	btfsc	status,0,c
 28515  0073F4  D005               	goto	l24635
 28516  0073F6                     u30860:
 28517                           
 28518                           ; BSR set to: 1
 28519  0073F6  057C               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 28520  0073F8  A4D8               	btfss	status,2,c
 28521  0073FA  D002               	goto	l24635
 28522  0073FC                     u30870:
 28523                           
 28524                           ; BSR set to: 1
 28525                           ;inputs_MC50.c: 706:             {;inputs_MC50.c: 707:                 var_sys.StateMoto
      +                          r = Stopped;
 28526  0073FC  0E00               	movlw	0
 28527  0073FE  6F55               	movwf	_var_sys& (0+255),b	;volatile
 28528  007400                     l24635:
 28529                           
 28530                           ; BSR set to: 1
 28531                           ;inputs_MC50.c: 713:         if((var_sys_NVM.securityBandIsON == 1 || var_sys_NVM.Stopbo
      +                          ton == 1) && (var_sys.SecurityBarIsObstructed == YES && var_sys.AutoInversionActive == N
      +                          O))
 28532  007400  05AF               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 28533  007402  B4D8               	btfsc	status,2,c
 28534  007404  D003               	goto	u30890
 28535                           
 28536                           ; BSR set to: 1
 28537  007406  05BC               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 28538  007408  A4D8               	btfss	status,2,c
 28539  00740A  0012               	return	
 28540  00740C                     u30890:
 28541                           
 28542                           ; BSR set to: 1
 28543  00740C  0557               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 28544  00740E  A4D8               	btfss	status,2,c
 28545  007410  0012               	return	
 28546                           
 28547                           ; BSR set to: 1
 28548  007412  517C               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 28549  007414  A4D8               	btfss	status,2,c
 28550  007416  0012               	return	
 28551                           
 28552                           ; BSR set to: 1
 28553                           ;inputs_MC50.c: 714:         {;inputs_MC50.c: 723:             if(var_sys.StateMotor == 
      +                          InClose && (var_sys_NVM.securityBandInOpen == 0))
 28554  007418  0E03               	movlw	3
 28555  00741A  1955               	xorwf	_var_sys& (0+255),w,b	;volatile
 28556  00741C  A4D8               	btfss	status,2,c
 28557  00741E  D006               	goto	l24649
 28558                           
 28559                           ; BSR set to: 1
 28560  007420  51B1               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 28561  007422  A4D8               	btfss	status,2,c
 28562  007424  D003               	goto	l24649
 28563                           
 28564                           ; BSR set to: 1
 28565                           ;inputs_MC50.c: 724:             {;inputs_MC50.c: 725:                 var_sys.StateMoto
      +                          r = Stopped;
 28566  007426  0E00               	movlw	0
 28567  007428  6F55               	movwf	_var_sys& (0+255),b	;volatile
 28568                           
 28569                           ;inputs_MC50.c: 727:             }
 28570  00742A  0012               	return	
 28571  00742C                     l24649:
 28572                           
 28573                           ; BSR set to: 1
 28574  00742C  0555               	decf	_var_sys& (0+255),w,b	;volatile
 28575  00742E  B4D8               	btfsc	status,2,c
 28576  007430  D004               	goto	u30950
 28577                           
 28578                           ; BSR set to: 1
 28579  007432  0E02               	movlw	2
 28580  007434  1955               	xorwf	_var_sys& (0+255),w,b	;volatile
 28581  007436  A4D8               	btfss	status,2,c
 28582  007438  D003               	goto	u30960
 28583  00743A                     u30950:
 28584                           
 28585                           ; BSR set to: 1
 28586  00743A  05B1               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 28587  00743C  B4D8               	btfsc	status,2,c
 28588  00743E  D003               	goto	u30970
 28589  007440                     u30960:
 28590                           
 28591                           ; BSR set to: 1
 28592  007440  05BC               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 28593  007442  A4D8               	btfss	status,2,c
 28594  007444  0012               	return	
 28595  007446                     u30970:
 28596                           
 28597                           ; BSR set to: 1
 28598                           ;inputs_MC50.c: 730:             {;inputs_MC50.c: 731:                 var_sys.StateMoto
      +                          r = Stopped;
 28599  007446  0E00               	movlw	0
 28600  007448  6F55               	movwf	_var_sys& (0+255),b	;volatile
 28601  00744A  0012               	return	
 28602  00744C                     __end_of_ControlInputs:
 28603                           	callstack 0
 28604                           
 28605 ;; *************** function _ControlCurrent *****************
 28606 ;; Defined at:
 28607 ;;		line 342 in file "controlCurrent_MC50.c"
 28608 ;; Parameters:    Size  Location     Type
 28609 ;;		None
 28610 ;; Auto vars:     Size  Location     Type
 28611 ;;		None
 28612 ;; Return value:  Size  Location     Type
 28613 ;;                  1    wreg      void 
 28614 ;; Registers used:
 28615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28616 ;; Tracked objects:
 28617 ;;		On entry : 3F/1
 28618 ;;		On exit  : 3E/0
 28619 ;;		Unchanged: 0/0
 28620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28623 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28624 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28625 ;;Total ram usage:        4 bytes
 28626 ;; Hardware stack levels used: 1
 28627 ;; Hardware stack levels required when called: 6
 28628 ;; This function calls:
 28629 ;;		_GetMotorPower
 28630 ;;		_getCurrentComparator
 28631 ;;		_refreshADCZeroOffset
 28632 ;;		_refreshCurrent
 28633 ;; This function is called by:
 28634 ;;		_main
 28635 ;; This function uses a non-reentrant model
 28636 ;;
 28637                           
 28638                           	psect	text120
 28639  0065C0                     __ptext120:
 28640                           	callstack 0
 28641  0065C0                     _ControlCurrent:
 28642                           	callstack 24
 28643                           
 28644                           ; BSR set to: 1
 28645                           ;controlCurrent_MC50.c: 345:     refreshCurrent();
 28646                           
 28647                           ; BSR set to: 1
 28648                           ;incstack = 0
 28649  0065C0  ECC4  F048         	call	_refreshCurrent	;wreg free
 28650                           
 28651                           ;controlCurrent_MC50.c: 351:     refreshADCZeroOffset();
 28652  0065C4  ECB6  F037         	call	_refreshADCZeroOffset	;wreg free
 28653                           
 28654                           ;controlCurrent_MC50.c: 354:     var_sys.velocityActual = GetMotorPower();
 28655  0065C8  EC49  F03C         	call	_GetMotorPower	;wreg free
 28656  0065CC  6E23               	movwf	??_ControlCurrent^0,c
 28657  0065CE  5023               	movf	??_ControlCurrent^0,w,c
 28658  0065D0  0101               	movlb	1	; () banked
 28659  0065D2  6F8D               	movwf	(_var_sys+56)& (0+255),b	;volatile
 28660  0065D4  6B8E               	clrf	(_var_sys+57)& (0+255),b	;volatile
 28661                           
 28662                           ; BSR set to: 1
 28663                           ;controlCurrent_MC50.c: 355:     var_sys.ActualComparatorCurrent = getCurrentComparator(
      +                          );
 28664  0065D6  ECB7  F02F         	call	_getCurrentComparator	;wreg free
 28665  0065DA  C016  F189         	movff	?_getCurrentComparator,_var_sys+52	;volatile
 28666  0065DE  C017  F18A         	movff	?_getCurrentComparator+1,_var_sys+53	;volatile
 28667  0065E2  C018  F18B         	movff	?_getCurrentComparator+2,_var_sys+54	;volatile
 28668  0065E6  C019  F18C         	movff	?_getCurrentComparator+3,_var_sys+55	;volatile
 28669                           
 28670                           ; BSR set to: 1
 28671                           ;controlCurrent_MC50.c: 357:     if(var_sys.StateMotor == Stopped)
 28672  0065EA  5155               	movf	_var_sys& (0+255),w,b	;volatile
 28673  0065EC  A4D8               	btfss	status,2,c
 28674  0065EE  D010               	goto	l24305
 28675                           
 28676                           ; BSR set to: 1
 28677                           ;controlCurrent_MC50.c: 358:     {;controlCurrent_MC50.c: 360:         numberOfErrorCurr
      +                          ent=0;
 28678  0065F0  0E00               	movlw	0
 28679  0065F2  0100               	movlb	0	; () banked
 28680  0065F4  6F85               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 28681                           
 28682                           ;controlCurrent_MC50.c: 361:         var_sys.CurrentAlarmIsOn=NO;
 28683  0065F6  0E00               	movlw	0
 28684  0065F8  0101               	movlb	1	; () banked
 28685  0065FA  6F96               	movwf	(_var_sys+65)& (0+255),b	;volatile
 28686                           
 28687                           ;controlCurrent_MC50.c: 362:         var_sys.InvertionCurrentOpening=NO;
 28688  0065FC  0E00               	movlw	0
 28689  0065FE  6F9A               	movwf	(_var_sys+69)& (0+255),b	;volatile
 28690                           
 28691                           ;controlCurrent_MC50.c: 363:         var_sys.InvertionCurrentClosing=NO;
 28692  006600  0E00               	movlw	0
 28693  006602  6F99               	movwf	(_var_sys+68)& (0+255),b	;volatile
 28694                           
 28695                           ;controlCurrent_MC50.c: 364:         ts_system.TimeTransitionDecelaration=(1000/50);
 28696  006604  0E00               	movlw	0
 28697  006606  0100               	movlb	0	; () banked
 28698  006608  6FC8               	movwf	(_ts_system+57)& (0+255),b	;volatile
 28699  00660A  0E14               	movlw	20
 28700  00660C  6FC7               	movwf	(_ts_system+56)& (0+255),b	;volatile
 28701                           
 28702                           ;controlCurrent_MC50.c: 365:     }
 28703  00660E  0012               	return	
 28704  006610                     l24305:
 28705                           
 28706                           ; BSR set to: 1
 28707  006610  513C               	movf	_powerControl_st& (0+255),w,b
 28708  006612  A4D8               	btfss	status,2,c
 28709  006614  D05F               	goto	l24339
 28710                           
 28711                           ; BSR set to: 1
 28712                           ;controlCurrent_MC50.c: 368:     {;controlCurrent_MC50.c: 376:         ts_system.TimeTra
      +                          nsitionDecelaration=(1000/50);
 28713  006616  0E00               	movlw	0
 28714  006618  0100               	movlb	0	; () banked
 28715  00661A  6FC8               	movwf	(_ts_system+57)& (0+255),b	;volatile
 28716  00661C  0E14               	movlw	20
 28717  00661E  6FC7               	movwf	(_ts_system+56)& (0+255),b	;volatile
 28718                           
 28719                           ; BSR set to: 0
 28720                           ;controlCurrent_MC50.c: 377:         if (( var_sys.ActualCurrent>var_sys.ActualComparato
      +                          rCurrent ) && (ts_system.TimeChargeCondesador<=0)&&var_sys_NVM.motorSensitivity!=0 && ts
      +                          _system.TimeReleCapacitor<=0)
 28721  006620  0101               	movlb	1	; () banked
 28722  006622  5183               	movf	(_var_sys+46)& (0+255),w,b	;volatile
 28723  006624  6E23               	movwf	??_ControlCurrent^0,c
 28724  006626  5184               	movf	(_var_sys+47)& (0+255),w,b	;volatile
 28725  006628  6E24               	movwf	(??_ControlCurrent+1)^0,c
 28726  00662A  6A25               	clrf	(??_ControlCurrent+2)^0,c
 28727  00662C  6A26               	clrf	(??_ControlCurrent+3)^0,c
 28728  00662E  5023               	movf	??_ControlCurrent^0,w,c
 28729  006630  5D89               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28730  006632  5024               	movf	(??_ControlCurrent+1)^0,w,c
 28731  006634  598A               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 28732  006636  5025               	movf	(??_ControlCurrent+2)^0,w,c
 28733  006638  598B               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 28734  00663A  5026               	movf	(??_ControlCurrent+3)^0,w,c
 28735  00663C  598C               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 28736  00663E  B0D8               	btfsc	status,0,c
 28737  006640  D03E               	goto	l24337
 28738                           
 28739                           ; BSR set to: 1
 28740  006642  0100               	movlb	0	; () banked
 28741  006644  BFAA               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 28742  006646  D005               	goto	u30020
 28743  006648  51AA               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 28744  00664A  E139               	bnz	l24337
 28745  00664C  05A9               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 28746  00664E  B0D8               	btfsc	status,0,c
 28747  006650  D036               	goto	l24337
 28748  006652                     u30020:
 28749                           
 28750                           ; BSR set to: 0
 28751  006652  0101               	movlb	1	; () banked
 28752  006654  51A9               	movf	(_var_sys_NVM+3)& (0+255),w,b	;volatile
 28753  006656  B4D8               	btfsc	status,2,c
 28754  006658  D032               	goto	l24337
 28755                           
 28756                           ; BSR set to: 1
 28757  00665A  0100               	movlb	0	; () banked
 28758  00665C  BFD2               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 28759  00665E  D005               	goto	u30040
 28760  006660  51D2               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 28761  006662  E12D               	bnz	l24337
 28762  006664  05D1               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 28763  006666  B0D8               	btfsc	status,0,c
 28764  006668  D02A               	goto	l24337
 28765  00666A                     u30040:
 28766                           
 28767                           ; BSR set to: 0
 28768                           ;controlCurrent_MC50.c: 378:         {;controlCurrent_MC50.c: 379:              if (numb
      +                          erOfErrorCurrent >=1)
 28769  00666A  5185               	movf	_numberOfErrorCurrent& (0+255),w,b	;volatile
 28770  00666C  B4D8               	btfsc	status,2,c
 28771  00666E  D00B               	goto	l24323
 28772                           
 28773                           ; BSR set to: 0
 28774                           ;controlCurrent_MC50.c: 380:              {;controlCurrent_MC50.c: 381:                 
      +                           if(erroranterior > var_sys.ActualCurrent )
 28775  006670  0101               	movlb	1	; () banked
 28776  006672  514C               	movf	_erroranterior& (0+255),w,b	;volatile
 28777  006674  5D83               	subwf	(_var_sys+46)& (0+255),w,b	;volatile
 28778  006676  514D               	movf	(_erroranterior+1)& (0+255),w,b	;volatile
 28779  006678  5984               	subwfb	(_var_sys+47)& (0+255),w,b	;volatile
 28780  00667A  B0D8               	btfsc	status,0,c
 28781  00667C  D004               	goto	l24323
 28782                           
 28783                           ; BSR set to: 1
 28784                           ;controlCurrent_MC50.c: 382:                  {;controlCurrent_MC50.c: 383:             
      +                                 numberOfErrorCurrent = 0;
 28785  00667E  0E00               	movlw	0
 28786  006680  0100               	movlb	0	; () banked
 28787  006682  6F85               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 28788                           
 28789                           ;controlCurrent_MC50.c: 384:                  }
 28790  006684  D002               	goto	l24325
 28791  006686                     l24323:
 28792                           
 28793                           ;controlCurrent_MC50.c: 386:                  {;controlCurrent_MC50.c: 387:             
      +                                 numberOfErrorCurrent++;
 28794  006686  0100               	movlb	0	; () banked
 28795  006688  2B85               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 28796  00668A                     l24325:
 28797                           
 28798                           ; BSR set to: 0
 28799                           ;controlCurrent_MC50.c: 389:                  erroranterior = var_sys.ActualCurrent;
 28800  00668A  C183  F14C         	movff	_var_sys+46,_erroranterior	;volatile
 28801  00668E  C184  F14D         	movff	_var_sys+47,_erroranterior+1	;volatile
 28802                           
 28803                           ; BSR set to: 0
 28804                           ;controlCurrent_MC50.c: 398:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>1)
 28805                           
 28806                           ;controlCurrent_MC50.c: 390:              }
 28807  006692  BFBE               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 28808  006694  D005               	goto	u30070
 28809  006696  51BE               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 28810  006698  E152               	bnz	l1405
 28811  00669A  05BD               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 28812  00669C  B0D8               	btfsc	status,0,c
 28813  00669E  0012               	return	
 28814  0066A0                     u30070:
 28815                           
 28816                           ; BSR set to: 0
 28817  0066A0  0E01               	movlw	1
 28818  0066A2  6585               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 28819  0066A4  0012               	return	
 28820                           
 28821                           ; BSR set to: 0
 28822                           ;controlCurrent_MC50.c: 399:             {;controlCurrent_MC50.c: 400:                 v
      +                          ar_sys.StateMotor = Stopped;
 28823  0066A6  0E00               	movlw	0
 28824  0066A8  0101               	movlb	1	; () banked
 28825  0066AA  6F55               	movwf	_var_sys& (0+255),b	;volatile
 28826                           
 28827                           ;controlCurrent_MC50.c: 401:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 28828  0066AC  0E00               	movlw	0
 28829  0066AE  0100               	movlb	0	; () banked
 28830  0066B0  6FBA               	movwf	(_ts_system+43)& (0+255),b	;volatile
 28831  0066B2  0EC8               	movlw	200
 28832  0066B4  6FB9               	movwf	(_ts_system+42)& (0+255),b	;volatile
 28833                           
 28834                           ;controlCurrent_MC50.c: 402:                 var_sys.CurrentAlarmIsOn=YES;
 28835  0066B6  0E01               	movlw	1
 28836  0066B8  0101               	movlb	1	; () banked
 28837  0066BA  6F96               	movwf	(_var_sys+65)& (0+255),b	;volatile
 28838  0066BC  0012               	return	
 28839  0066BE                     l24337:
 28840                           
 28841                           ;controlCurrent_MC50.c: 409:         {;controlCurrent_MC50.c: 410:             numberOfE
      +                          rrorCurrent=0;
 28842  0066BE  0E00               	movlw	0
 28843  0066C0  0100               	movlb	0	; () banked
 28844  0066C2  6F85               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 28845                           
 28846                           ;controlCurrent_MC50.c: 411:             var_sys.CurrentAlarmIsOn=NO;
 28847  0066C4  0E00               	movlw	0
 28848  0066C6  0101               	movlb	1	; () banked
 28849  0066C8  6F96               	movwf	(_var_sys+65)& (0+255),b	;volatile
 28850                           
 28851                           ;controlCurrent_MC50.c: 412:             var_sys.InvertionCurrentOpening=NO;
 28852  0066CA  0E00               	movlw	0
 28853  0066CC  6F9A               	movwf	(_var_sys+69)& (0+255),b	;volatile
 28854                           
 28855                           ;controlCurrent_MC50.c: 413:             var_sys.InvertionCurrentClosing=NO;
 28856  0066CE  0E00               	movlw	0
 28857  0066D0  6F99               	movwf	(_var_sys+68)& (0+255),b	;volatile
 28858  0066D2  0012               	return	
 28859  0066D4                     l24339:
 28860                           
 28861                           ; BSR set to: 1
 28862                           ;controlCurrent_MC50.c: 419:     {;controlCurrent_MC50.c: 420:         if( ( var_sys.Act
      +                          ualHistCurrent<var_sys.ActualComparatorCurrent ) && (ts_system.TimeChargeCondesador<=0)&
      +                          &ts_system.TimeTransitionDecelaration<=0&&var_sys_NVM.decelarationSensivity!=0)
 28863  0066D4  5189               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 28864  0066D6  5D85               	subwf	(_var_sys+48)& (0+255),w,b	;volatile
 28865  0066D8  518A               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 28866  0066DA  5986               	subwfb	(_var_sys+49)& (0+255),w,b	;volatile
 28867  0066DC  518B               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 28868  0066DE  5987               	subwfb	(_var_sys+50)& (0+255),w,b	;volatile
 28869  0066E0  518C               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28870  0066E2  5988               	subwfb	(_var_sys+51)& (0+255),w,b	;volatile
 28871  0066E4  B0D8               	btfsc	status,0,c
 28872  0066E6  D7EB               	goto	l24337
 28873                           
 28874                           ; BSR set to: 1
 28875  0066E8  0100               	movlb	0	; () banked
 28876  0066EA  BFAA               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 28877  0066EC  D005               	goto	u30100
 28878  0066EE  51AA               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 28879  0066F0  E1E6               	bnz	l24337
 28880  0066F2  05A9               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 28881  0066F4  B0D8               	btfsc	status,0,c
 28882  0066F6  D7E3               	goto	l24337
 28883  0066F8                     u30100:
 28884                           
 28885                           ; BSR set to: 0
 28886  0066F8  BFC8               	btfsc	(_ts_system+57)& (0+255),7,b	;volatile
 28887  0066FA  D005               	goto	u30110
 28888  0066FC  51C8               	movf	(_ts_system+57)& (0+255),w,b	;volatile
 28889  0066FE  E1DF               	bnz	l24337
 28890  006700  05C7               	decf	(_ts_system+56)& (0+255),w,b	;volatile
 28891  006702  B0D8               	btfsc	status,0,c
 28892  006704  D7DC               	goto	l24337
 28893  006706                     u30110:
 28894                           
 28895                           ; BSR set to: 0
 28896  006706  0101               	movlb	1	; () banked
 28897  006708  51B5               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 28898  00670A  B4D8               	btfsc	status,2,c
 28899  00670C  D7D8               	goto	l24337
 28900                           
 28901                           ; BSR set to: 1
 28902                           ;controlCurrent_MC50.c: 421:         {;controlCurrent_MC50.c: 423:             numberOfE
      +                          rrorCurrent++;
 28903  00670E  0100               	movlb	0	; () banked
 28904  006710  2B85               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 28905                           
 28906                           ; BSR set to: 0
 28907                           ;controlCurrent_MC50.c: 424:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>2)
 28908  006712  BFBE               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 28909  006714  D005               	goto	u30130
 28910  006716  51BE               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 28911  006718  E112               	bnz	l1405
 28912  00671A  05BD               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 28913  00671C  B0D8               	btfsc	status,0,c
 28914  00671E  0012               	return	
 28915  006720                     u30130:
 28916                           
 28917                           ; BSR set to: 0
 28918  006720  0E02               	movlw	2
 28919  006722  6585               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 28920  006724  0012               	return	
 28921                           
 28922                           ; BSR set to: 0
 28923                           ;controlCurrent_MC50.c: 425:             {;controlCurrent_MC50.c: 426:                 v
      +                          ar_sys.StateMotor = Stopped;
 28924  006726  0E00               	movlw	0
 28925  006728  0101               	movlb	1	; () banked
 28926  00672A  6F55               	movwf	_var_sys& (0+255),b	;volatile
 28927                           
 28928                           ;controlCurrent_MC50.c: 427:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 28929  00672C  0E00               	movlw	0
 28930  00672E  0100               	movlb	0	; () banked
 28931  006730  6FBA               	movwf	(_ts_system+43)& (0+255),b	;volatile
 28932  006732  0EC8               	movlw	200
 28933  006734  6FB9               	movwf	(_ts_system+42)& (0+255),b	;volatile
 28934                           
 28935                           ;controlCurrent_MC50.c: 428:                 var_sys.CurrentAlarmIsOn=YES;
 28936  006736  0E01               	movlw	1
 28937  006738  0101               	movlb	1	; () banked
 28938  00673A  6F96               	movwf	(_var_sys+65)& (0+255),b	;volatile
 28939  00673C  0012               	return	
 28940  00673E                     l1405:
 28941                           
 28942                           ; BSR set to: 0
 28943  00673E  0012               	return		;funcret
 28944  006740                     __end_of_ControlCurrent:
 28945                           	callstack 0
 28946                           
 28947 ;; *************** function _refreshCurrent *****************
 28948 ;; Defined at:
 28949 ;;		line 233 in file "controlCurrent_MC50.c"
 28950 ;; Parameters:    Size  Location     Type
 28951 ;;		None
 28952 ;; Auto vars:     Size  Location     Type
 28953 ;;		None
 28954 ;; Return value:  Size  Location     Type
 28955 ;;                  1    wreg      void 
 28956 ;; Registers used:
 28957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28958 ;; Tracked objects:
 28959 ;;		On entry : 3F/1
 28960 ;;		On exit  : 3F/0
 28961 ;;		Unchanged: 0/0
 28962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28967 ;;Total ram usage:        0 bytes
 28968 ;; Hardware stack levels used: 1
 28969 ;; Hardware stack levels required when called: 5
 28970 ;; This function calls:
 28971 ;;		_saveEnergyADCHist
 28972 ;;		_sumEnergyADC
 28973 ;;		_sumHIST
 28974 ;; This function is called by:
 28975 ;;		_ControlCurrent
 28976 ;; This function uses a non-reentrant model
 28977 ;;
 28978                           
 28979                           	psect	text121
 28980  009188                     __ptext121:
 28981                           	callstack 0
 28982  009188                     _refreshCurrent:
 28983                           	callstack 24
 28984                           
 28985                           ; BSR set to: 1
 28986                           ;controlCurrent_MC50.c: 238:     if ( (var_sys_NVM.electricBrake==1) && (ts_system.TimeE
      +                          lectricBrake>0) )
 28987                           
 28988                           ;incstack = 0
 28989  009188  05BD               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 28990  00918A  A4D8               	btfss	status,2,c
 28991  00918C  D008               	goto	l22519
 28992                           
 28993                           ; BSR set to: 1
 28994  00918E  0100               	movlb	0	; () banked
 28995  009190  BFB8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 28996  009192  D005               	goto	l22519
 28997  009194  51B8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 28998  009196  E109               	bnz	l1372
 28999  009198  05B7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 29000  00919A  B0D8               	btfsc	status,0,c
 29001  00919C  D006               	goto	l1372
 29002  00919E                     l22519:
 29003                           
 29004                           ;controlCurrent_MC50.c: 243:     {;controlCurrent_MC50.c: 245:         var_sys.ActualCur
      +                          rent=sumEnergyADC();
 29005  00919E  ECBC  F03F         	call	_sumEnergyADC	;wreg free
 29006  0091A2  C010  F183         	movff	?_sumEnergyADC,_var_sys+46	;volatile
 29007  0091A6  C011  F184         	movff	?_sumEnergyADC+1,_var_sys+47	;volatile
 29008  0091AA                     l1372:
 29009                           
 29010                           ;controlCurrent_MC50.c: 248:     saveEnergyADCHist(var_sys.ActualCurrent);
 29011  0091AA  C183  F010         	movff	_var_sys+46,saveEnergyADCHist@valueToSave	;volatile
 29012  0091AE  C184  F011         	movff	_var_sys+47,saveEnergyADCHist@valueToSave+1	;volatile
 29013  0091B2  EC96  F04B         	call	_saveEnergyADCHist	;wreg free
 29014                           
 29015                           ;controlCurrent_MC50.c: 250:     var_sys.ActualHistCurrent=sumHIST();
 29016  0091B6  EC31  F039         	call	_sumHIST	;wreg free
 29017  0091BA  C010  F185         	movff	?_sumHIST,_var_sys+48	;volatile
 29018  0091BE  C011  F186         	movff	?_sumHIST+1,_var_sys+49	;volatile
 29019  0091C2  C012  F187         	movff	?_sumHIST+2,_var_sys+50	;volatile
 29020  0091C6  C013  F188         	movff	?_sumHIST+3,_var_sys+51	;volatile
 29021                           
 29022                           ; BSR set to: 0
 29023  0091CA  0012               	return		;funcret
 29024  0091CC                     __end_of_refreshCurrent:
 29025                           	callstack 0
 29026                           
 29027 ;; *************** function _sumHIST *****************
 29028 ;; Defined at:
 29029 ;;		line 199 in file "controlCurrent_MC50.c"
 29030 ;; Parameters:    Size  Location     Type
 29031 ;;		None
 29032 ;; Auto vars:     Size  Location     Type
 29033 ;;  sumH            4   27[COMRAM] unsigned long 
 29034 ;;  min             2   25[COMRAM] unsigned int 
 29035 ;;  max             2   23[COMRAM] unsigned int 
 29036 ;;  i               1   31[COMRAM] unsigned char 
 29037 ;; Return value:  Size  Location     Type
 29038 ;;                  4   15[COMRAM] unsigned long 
 29039 ;; Registers used:
 29040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29041 ;; Tracked objects:
 29042 ;;		On entry : 3F/0
 29043 ;;		On exit  : 3F/0
 29044 ;;		Unchanged: 3F/0
 29045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29046 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29047 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29048 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29049 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29050 ;;Total ram usage:       17 bytes
 29051 ;; Hardware stack levels used: 1
 29052 ;; Hardware stack levels required when called: 4
 29053 ;; This function calls:
 29054 ;;		Nothing
 29055 ;; This function is called by:
 29056 ;;		_refreshCurrent
 29057 ;; This function uses a non-reentrant model
 29058 ;;
 29059                           
 29060                           	psect	text122
 29061  007262                     __ptext122:
 29062                           	callstack 0
 29063  007262                     _sumHIST:
 29064                           	callstack 24
 29065                           
 29066                           ; BSR set to: 0
 29067                           ;controlCurrent_MC50.c: 201:     unsigned char i;;controlCurrent_MC50.c: 202:     unsign
      +                          ed long sumH = 0;
 29068                           
 29069                           ; BSR set to: 0
 29070                           ;incstack = 0
 29071  007262  0E00               	movlw	0
 29072  007264  6E1C               	movwf	sumHIST@sumH^0,c
 29073  007266  0E00               	movlw	0
 29074  007268  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 29075  00726A  0E00               	movlw	0
 29076  00726C  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 29077  00726E  0E00               	movlw	0
 29078  007270  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 29079                           
 29080                           ;controlCurrent_MC50.c: 203:     unsigned int max=0;
 29081  007272  0E00               	movlw	0
 29082  007274  6E19               	movwf	(sumHIST@max+1)^0,c
 29083  007276  0E00               	movlw	0
 29084  007278  6E18               	movwf	sumHIST@max^0,c
 29085                           
 29086                           ; BSR set to: 0
 29087                           ;controlCurrent_MC50.c: 204:     unsigned int min=0xFFFF;
 29088  00727A  681A               	setf	sumHIST@min^0,c
 29089  00727C  681B               	setf	(sumHIST@min+1)^0,c
 29090                           
 29091                           ;controlCurrent_MC50.c: 207:     for( i = 0; i<(10); i++)
 29092  00727E  0E00               	movlw	0
 29093  007280  6E20               	movwf	sumHIST@i^0,c
 29094  007282                     l20981:
 29095                           
 29096                           ; BSR set to: 0
 29097                           ;controlCurrent_MC50.c: 208:     {;controlCurrent_MC50.c: 209:         sumH=sumH+SumEner
      +                          gyADCHist_array[i];
 29098  007282  5020               	movf	sumHIST@i^0,w,c
 29099  007284  0D02               	mullw	2
 29100  007286  0E60               	movlw	low _SumEnergyADCHist_array
 29101  007288  24F3               	addwf	243,w,c
 29102  00728A  6ED9               	movwf	fsr2l,c
 29103  00728C  0E02               	movlw	high _SumEnergyADCHist_array
 29104  00728E  20F4               	addwfc	prodh,w,c
 29105  007290  6EDA               	movwf	fsr2h,c
 29106  007292  CFDE F014          	movff	postinc2,??_sumHIST
 29107  007296  CFDD F015          	movff	postdec2,??_sumHIST+1
 29108  00729A  5014               	movf	??_sumHIST^0,w,c
 29109  00729C  241C               	addwf	sumHIST@sumH^0,w,c
 29110  00729E  6E1C               	movwf	sumHIST@sumH^0,c
 29111  0072A0  5015               	movf	(??_sumHIST+1)^0,w,c
 29112  0072A2  201D               	addwfc	(sumHIST@sumH+1)^0,w,c
 29113  0072A4  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 29114  0072A6  0E00               	movlw	0
 29115  0072A8  201E               	addwfc	(sumHIST@sumH+2)^0,w,c
 29116  0072AA  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 29117  0072AC  0E00               	movlw	0
 29118  0072AE  201F               	addwfc	(sumHIST@sumH+3)^0,w,c
 29119  0072B0  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 29120                           
 29121                           ;controlCurrent_MC50.c: 212:         if(SumEnergyADCHist_array[i]>max)
 29122  0072B2  5020               	movf	sumHIST@i^0,w,c
 29123  0072B4  0D02               	mullw	2
 29124  0072B6  0E60               	movlw	low _SumEnergyADCHist_array
 29125  0072B8  24F3               	addwf	243,w,c
 29126  0072BA  6ED9               	movwf	fsr2l,c
 29127  0072BC  0E02               	movlw	high _SumEnergyADCHist_array
 29128  0072BE  20F4               	addwfc	prodh,w,c
 29129  0072C0  6EDA               	movwf	fsr2h,c
 29130  0072C2  50DE               	movf	postinc2,w,c
 29131  0072C4  5C18               	subwf	sumHIST@max^0,w,c
 29132  0072C6  50DE               	movf	postinc2,w,c
 29133  0072C8  5819               	subwfb	(sumHIST@max+1)^0,w,c
 29134  0072CA  B0D8               	btfsc	status,0,c
 29135  0072CC  D00C               	goto	l1366
 29136                           
 29137                           ; BSR set to: 0
 29138                           ;controlCurrent_MC50.c: 213:         {;controlCurrent_MC50.c: 214:             max=SumEn
      +                          ergyADCHist_array[i];
 29139  0072CE  5020               	movf	sumHIST@i^0,w,c
 29140  0072D0  0D02               	mullw	2
 29141  0072D2  0E60               	movlw	low _SumEnergyADCHist_array
 29142  0072D4  24F3               	addwf	243,w,c
 29143  0072D6  6ED9               	movwf	fsr2l,c
 29144  0072D8  0E02               	movlw	high _SumEnergyADCHist_array
 29145  0072DA  20F4               	addwfc	prodh,w,c
 29146  0072DC  6EDA               	movwf	fsr2h,c
 29147  0072DE  CFDE F018          	movff	postinc2,sumHIST@max
 29148  0072E2  CFDD F019          	movff	postdec2,sumHIST@max+1
 29149  0072E6                     l1366:
 29150                           
 29151                           ; BSR set to: 0
 29152                           ;controlCurrent_MC50.c: 218:         if(SumEnergyADCHist_array[i]<min)
 29153  0072E6  5020               	movf	sumHIST@i^0,w,c
 29154  0072E8  0D02               	mullw	2
 29155  0072EA  0E60               	movlw	low _SumEnergyADCHist_array
 29156  0072EC  24F3               	addwf	243,w,c
 29157  0072EE  6ED9               	movwf	fsr2l,c
 29158  0072F0  0E02               	movlw	high _SumEnergyADCHist_array
 29159  0072F2  20F4               	addwfc	prodh,w,c
 29160  0072F4  6EDA               	movwf	fsr2h,c
 29161  0072F6  501A               	movf	sumHIST@min^0,w,c
 29162  0072F8  5CDE               	subwf	postinc2,w,c
 29163  0072FA  501B               	movf	(sumHIST@min+1)^0,w,c
 29164  0072FC  58DE               	subwfb	postinc2,w,c
 29165  0072FE  B0D8               	btfsc	status,0,c
 29166  007300  D00C               	goto	l20987
 29167                           
 29168                           ; BSR set to: 0
 29169                           ;controlCurrent_MC50.c: 219:         {;controlCurrent_MC50.c: 220:             min=SumEn
      +                          ergyADCHist_array[i];
 29170  007302  5020               	movf	sumHIST@i^0,w,c
 29171  007304  0D02               	mullw	2
 29172  007306  0E60               	movlw	low _SumEnergyADCHist_array
 29173  007308  24F3               	addwf	243,w,c
 29174  00730A  6ED9               	movwf	fsr2l,c
 29175  00730C  0E02               	movlw	high _SumEnergyADCHist_array
 29176  00730E  20F4               	addwfc	prodh,w,c
 29177  007310  6EDA               	movwf	fsr2h,c
 29178  007312  CFDE F01A          	movff	postinc2,sumHIST@min
 29179  007316  CFDD F01B          	movff	postdec2,sumHIST@min+1
 29180  00731A                     l20987:
 29181                           
 29182                           ; BSR set to: 0
 29183                           ;controlCurrent_MC50.c: 222:     }
 29184  00731A  2A20               	incf	sumHIST@i^0,f,c
 29185                           
 29186                           ; BSR set to: 0
 29187  00731C  0E09               	movlw	9
 29188  00731E  6420               	cpfsgt	sumHIST@i^0,c
 29189  007320  D7B0               	goto	l20981
 29190                           
 29191                           ; BSR set to: 0
 29192                           ;controlCurrent_MC50.c: 224:     sumH = sumH - ( max+min );
 29193  007322  501A               	movf	sumHIST@min^0,w,c
 29194  007324  2418               	addwf	sumHIST@max^0,w,c
 29195  007326  6E14               	movwf	??_sumHIST^0,c
 29196  007328  501B               	movf	(sumHIST@min+1)^0,w,c
 29197  00732A  2019               	addwfc	(sumHIST@max+1)^0,w,c
 29198  00732C  6E15               	movwf	(??_sumHIST+1)^0,c
 29199  00732E  6A16               	clrf	(??_sumHIST+2)^0,c
 29200  007330  6A17               	clrf	(??_sumHIST+3)^0,c
 29201  007332  5014               	movf	??_sumHIST^0,w,c
 29202  007334  5C1C               	subwf	sumHIST@sumH^0,w,c
 29203  007336  6E1C               	movwf	sumHIST@sumH^0,c
 29204  007338  5015               	movf	(??_sumHIST+1)^0,w,c
 29205  00733A  581D               	subwfb	(sumHIST@sumH+1)^0,w,c
 29206  00733C  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 29207  00733E  5016               	movf	(??_sumHIST+2)^0,w,c
 29208  007340  581E               	subwfb	(sumHIST@sumH+2)^0,w,c
 29209  007342  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 29210  007344  5017               	movf	(??_sumHIST+3)^0,w,c
 29211  007346  581F               	subwfb	(sumHIST@sumH+3)^0,w,c
 29212  007348  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 29213                           
 29214                           ; BSR set to: 0
 29215                           ;controlCurrent_MC50.c: 226:     return sumH;
 29216  00734A  C01C  F010         	movff	sumHIST@sumH,?_sumHIST
 29217  00734E  C01D  F011         	movff	sumHIST@sumH+1,?_sumHIST+1
 29218  007352  C01E  F012         	movff	sumHIST@sumH+2,?_sumHIST+2
 29219  007356  C01F  F013         	movff	sumHIST@sumH+3,?_sumHIST+3
 29220                           
 29221                           ; BSR set to: 0
 29222  00735A  0012               	return		;funcret
 29223  00735C                     __end_of_sumHIST:
 29224                           	callstack 0
 29225                           
 29226 ;; *************** function _sumEnergyADC *****************
 29227 ;; Defined at:
 29228 ;;		line 59 in file "controlCurrent_MC50.c"
 29229 ;; Parameters:    Size  Location     Type
 29230 ;;		None
 29231 ;; Auto vars:     Size  Location     Type
 29232 ;;  auxValue        2   21[COMRAM] unsigned int 
 29233 ;;  sumE            2   19[COMRAM] unsigned int 
 29234 ;;  i               1   23[COMRAM] unsigned char 
 29235 ;; Return value:  Size  Location     Type
 29236 ;;                  2   15[COMRAM] unsigned int 
 29237 ;; Registers used:
 29238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29239 ;; Tracked objects:
 29240 ;;		On entry : 3E/1
 29241 ;;		On exit  : 3F/1
 29242 ;;		Unchanged: 0/0
 29243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29244 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29245 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29246 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29247 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29248 ;;Total ram usage:        9 bytes
 29249 ;; Hardware stack levels used: 1
 29250 ;; Hardware stack levels required when called: 4
 29251 ;; This function calls:
 29252 ;;		Nothing
 29253 ;; This function is called by:
 29254 ;;		_refreshCurrent
 29255 ;; This function uses a non-reentrant model
 29256 ;;
 29257                           
 29258                           	psect	text123
 29259  007F78                     __ptext123:
 29260                           	callstack 0
 29261  007F78                     _sumEnergyADC:
 29262                           	callstack 24
 29263                           
 29264                           ;controlCurrent_MC50.c: 61:     unsigned char i;;controlCurrent_MC50.c: 63:     unsigned
      +                           int sumE = 0;
 29265                           
 29266                           ; BSR set to: 0
 29267                           ;incstack = 0
 29268  007F78  0E00               	movlw	0
 29269  007F7A  6E15               	movwf	(sumEnergyADC@sumE+1)^0,c
 29270  007F7C  0E00               	movlw	0
 29271  007F7E  6E14               	movwf	sumEnergyADC@sumE^0,c
 29272                           
 29273                           ;controlCurrent_MC50.c: 72:     for ( i=0 ; i<(30) ; i++ )
 29274  007F80  0E00               	movlw	0
 29275  007F82  6E18               	movwf	sumEnergyADC@i^0,c
 29276  007F84                     l20953:
 29277                           
 29278                           ;controlCurrent_MC50.c: 73:     {;controlCurrent_MC50.c: 83:         if ( ADC_array[i] >
      +                           var_sys.ADCZeroOffset )
 29279  007F84  5018               	movf	sumEnergyADC@i^0,w,c
 29280  007F86  0D02               	mullw	2
 29281  007F88  0E00               	movlw	low _ADC_array
 29282  007F8A  24F3               	addwf	243,w,c
 29283  007F8C  6ED9               	movwf	fsr2l,c
 29284  007F8E  0E02               	movlw	high _ADC_array
 29285  007F90  20F4               	addwfc	prodh,w,c
 29286  007F92  6EDA               	movwf	fsr2h,c
 29287  007F94  50DE               	movf	postinc2,w,c
 29288  007F96  0101               	movlb	1	; () banked
 29289  007F98  5DA0               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 29290  007F9A  50DE               	movf	postinc2,w,c
 29291  007F9C  59A1               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 29292  007F9E  B0D8               	btfsc	status,0,c
 29293  007FA0  D012               	goto	l20957
 29294                           
 29295                           ; BSR set to: 1
 29296                           ;controlCurrent_MC50.c: 84:         {;controlCurrent_MC50.c: 85:             auxValue = 
      +                          ( ADC_array[i] - var_sys.ADCZeroOffset );
 29297  007FA2  5018               	movf	sumEnergyADC@i^0,w,c
 29298  007FA4  0D02               	mullw	2
 29299  007FA6  0E00               	movlw	low _ADC_array
 29300  007FA8  24F3               	addwf	243,w,c
 29301  007FAA  6ED9               	movwf	fsr2l,c
 29302  007FAC  0E02               	movlw	high _ADC_array
 29303  007FAE  20F4               	addwfc	prodh,w,c
 29304  007FB0  6EDA               	movwf	fsr2h,c
 29305  007FB2  CFDE F012          	movff	postinc2,??_sumEnergyADC
 29306  007FB6  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 29307  007FBA  51A0               	movf	(_var_sys+75)& (0+255),w,b	;volatile
 29308  007FBC  5C12               	subwf	??_sumEnergyADC^0,w,c
 29309  007FBE  6E16               	movwf	sumEnergyADC@auxValue^0,c
 29310  007FC0  51A1               	movf	(_var_sys+76)& (0+255),w,b	;volatile
 29311  007FC2  5813               	subwfb	(??_sumEnergyADC+1)^0,w,c
 29312  007FC4  D011               	goto	L84
 29313  007FC6                     l20957:
 29314                           
 29315                           ; BSR set to: 1
 29316                           ;controlCurrent_MC50.c: 88:         {;controlCurrent_MC50.c: 89:            auxValue = (
      +                           var_sys.ADCZeroOffset - ADC_array[i] );
 29317  007FC6  5018               	movf	sumEnergyADC@i^0,w,c
 29318  007FC8  0D02               	mullw	2
 29319  007FCA  0E00               	movlw	low _ADC_array
 29320  007FCC  24F3               	addwf	243,w,c
 29321  007FCE  6ED9               	movwf	fsr2l,c
 29322  007FD0  0E02               	movlw	high _ADC_array
 29323  007FD2  20F4               	addwfc	prodh,w,c
 29324  007FD4  6EDA               	movwf	fsr2h,c
 29325  007FD6  CFDE F012          	movff	postinc2,??_sumEnergyADC
 29326  007FDA  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 29327  007FDE  5012               	movf	??_sumEnergyADC^0,w,c
 29328  007FE0  5DA0               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 29329  007FE2  6E16               	movwf	sumEnergyADC@auxValue^0,c
 29330  007FE4  5013               	movf	(??_sumEnergyADC+1)^0,w,c
 29331  007FE6  59A1               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 29332  007FE8                     L84:
 29333  007FE8  6E17               	movwf	(sumEnergyADC@auxValue+1)^0,c
 29334                           
 29335                           ; BSR set to: 1
 29336                           ;controlCurrent_MC50.c: 91:         sumE += auxValue;
 29337  007FEA  5016               	movf	sumEnergyADC@auxValue^0,w,c
 29338  007FEC  2614               	addwf	sumEnergyADC@sumE^0,f,c
 29339  007FEE  5017               	movf	(sumEnergyADC@auxValue+1)^0,w,c
 29340  007FF0  2215               	addwfc	(sumEnergyADC@sumE+1)^0,f,c
 29341                           
 29342                           ; BSR set to: 1
 29343                           ;controlCurrent_MC50.c: 94:     }
 29344  007FF2  2A18               	incf	sumEnergyADC@i^0,f,c
 29345                           
 29346                           ; BSR set to: 1
 29347  007FF4  0E1D               	movlw	29
 29348  007FF6  6418               	cpfsgt	sumEnergyADC@i^0,c
 29349  007FF8  D7C5               	goto	l20953
 29350                           
 29351                           ; BSR set to: 1
 29352                           ;controlCurrent_MC50.c: 96:     return sumE;
 29353  007FFA  C014  F010         	movff	sumEnergyADC@sumE,?_sumEnergyADC
 29354  007FFE  C015  F011         	movff	sumEnergyADC@sumE+1,?_sumEnergyADC+1
 29355                           
 29356                           ; BSR set to: 1
 29357  008002  0012               	return		;funcret
 29358  008004                     __end_of_sumEnergyADC:
 29359                           	callstack 0
 29360                           
 29361 ;; *************** function _saveEnergyADCHist *****************
 29362 ;; Defined at:
 29363 ;;		line 182 in file "controlCurrent_MC50.c"
 29364 ;; Parameters:    Size  Location     Type
 29365 ;;  valueToSave     2   15[COMRAM] unsigned int 
 29366 ;; Auto vars:     Size  Location     Type
 29367 ;;		None
 29368 ;; Return value:  Size  Location     Type
 29369 ;;                  1    wreg      void 
 29370 ;; Registers used:
 29371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29372 ;; Tracked objects:
 29373 ;;		On entry : 3E/0
 29374 ;;		On exit  : 3F/0
 29375 ;;		Unchanged: 0/0
 29376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29377 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29380 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29381 ;;Total ram usage:        2 bytes
 29382 ;; Hardware stack levels used: 1
 29383 ;; Hardware stack levels required when called: 4
 29384 ;; This function calls:
 29385 ;;		Nothing
 29386 ;; This function is called by:
 29387 ;;		_refreshCurrent
 29388 ;; This function uses a non-reentrant model
 29389 ;;
 29390                           
 29391                           	psect	text124
 29392  00972C                     __ptext124:
 29393                           	callstack 0
 29394  00972C                     _saveEnergyADCHist:
 29395                           	callstack 24
 29396                           
 29397                           ;controlCurrent_MC50.c: 182: void saveEnergyADCHist(unsigned int valueToSave);controlCur
      +                          rent_MC50.c: 183: {;controlCurrent_MC50.c: 184:     if(idxSaveEnergyADCHist>=10)
 29398                           
 29399                           ; BSR set to: 1
 29400                           ;incstack = 0
 29401  00972C  0E09               	movlw	9
 29402  00972E  0100               	movlb	0	; () banked
 29403  009730  6587               	cpfsgt	_idxSaveEnergyADCHist& (0+255),b	;volatile
 29404  009732  D002               	goto	l20969
 29405                           
 29406                           ; BSR set to: 0
 29407                           ;controlCurrent_MC50.c: 185:     {;controlCurrent_MC50.c: 186:         idxSaveEnergyADCH
      +                          ist=0;
 29408  009734  0E00               	movlw	0
 29409  009736  6F87               	movwf	_idxSaveEnergyADCHist& (0+255),b	;volatile
 29410  009738                     l20969:
 29411                           
 29412                           ; BSR set to: 0
 29413                           ;controlCurrent_MC50.c: 189:     SumEnergyADCHist_array[idxSaveEnergyADCHist]=valueToSav
      +                          e;
 29414  009738  5187               	movf	_idxSaveEnergyADCHist& (0+255),w,b	;volatile
 29415  00973A  0D02               	mullw	2
 29416  00973C  0E60               	movlw	low _SumEnergyADCHist_array
 29417  00973E  24F3               	addwf	243,w,c
 29418  009740  6ED9               	movwf	fsr2l,c
 29419  009742  0E02               	movlw	high _SumEnergyADCHist_array
 29420  009744  20F4               	addwfc	prodh,w,c
 29421  009746  6EDA               	movwf	fsr2h,c
 29422  009748  C010  FFDE         	movff	saveEnergyADCHist@valueToSave,postinc2
 29423  00974C  C011  FFDD         	movff	saveEnergyADCHist@valueToSave+1,postdec2
 29424                           
 29425                           ; BSR set to: 0
 29426                           ;controlCurrent_MC50.c: 190:     idxSaveEnergyADCHist++;
 29427  009750  2B87               	incf	_idxSaveEnergyADCHist& (0+255),f,b	;volatile
 29428                           
 29429                           ; BSR set to: 0
 29430  009752  0012               	return		;funcret
 29431  009754                     __end_of_saveEnergyADCHist:
 29432                           	callstack 0
 29433                           
 29434 ;; *************** function _refreshADCZeroOffset *****************
 29435 ;; Defined at:
 29436 ;;		line 103 in file "controlCurrent_MC50.c"
 29437 ;; Parameters:    Size  Location     Type
 29438 ;;		None
 29439 ;; Auto vars:     Size  Location     Type
 29440 ;;  media           2   23[COMRAM] unsigned int 
 29441 ;;  i               1   22[COMRAM] unsigned char 
 29442 ;; Return value:  Size  Location     Type
 29443 ;;                  1    wreg      void 
 29444 ;; Registers used:
 29445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29446 ;; Tracked objects:
 29447 ;;		On entry : 3F/0
 29448 ;;		On exit  : 3C/0
 29449 ;;		Unchanged: 0/0
 29450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29452 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29454 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29455 ;;Total ram usage:        3 bytes
 29456 ;; Hardware stack levels used: 1
 29457 ;; Hardware stack levels required when called: 5
 29458 ;; This function calls:
 29459 ;;		___lwdiv
 29460 ;; This function is called by:
 29461 ;;		_ControlCurrent
 29462 ;; This function uses a non-reentrant model
 29463 ;;
 29464                           
 29465                           	psect	text125
 29466  006F6C                     __ptext125:
 29467                           	callstack 0
 29468  006F6C                     _refreshADCZeroOffset:
 29469                           	callstack 24
 29470                           
 29471                           ; BSR set to: 0
 29472                           ;controlCurrent_MC50.c: 105:     unsigned char i;;controlCurrent_MC50.c: 106:     unsign
      +                          ed int media = 0;
 29473                           
 29474                           ; BSR set to: 0
 29475                           ;incstack = 0
 29476  006F6C  0E00               	movlw	0
 29477  006F6E  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 29478  006F70  0E00               	movlw	0
 29479  006F72  6E18               	movwf	refreshADCZeroOffset@media^0,c
 29480                           
 29481                           ;controlCurrent_MC50.c: 109:     if ( var_sys.StateMotor == Stopped )
 29482  006F74  0101               	movlb	1	; () banked
 29483  006F76  5155               	movf	_var_sys& (0+255),w,b	;volatile
 29484  006F78  A4D8               	btfss	status,2,c
 29485  006F7A  0012               	return	
 29486                           
 29487                           ; BSR set to: 1
 29488                           ;controlCurrent_MC50.c: 110:     {;controlCurrent_MC50.c: 111:         if ( ts_system.Ti
      +                          meStopADCZeroOffsetCalc <= 0 )
 29489  006F7C  0100               	movlb	0	; () banked
 29490  006F7E  BFCE               	btfsc	(_ts_system+63)& (0+255),7,b	;volatile
 29491  006F80  D005               	goto	u26260
 29492  006F82  51CE               	movf	(_ts_system+63)& (0+255),w,b	;volatile
 29493  006F84  E172               	bnz	l1357
 29494  006F86  05CD               	decf	(_ts_system+62)& (0+255),w,b	;volatile
 29495  006F88  B0D8               	btfsc	status,0,c
 29496  006F8A  0012               	return	
 29497  006F8C                     u26260:
 29498                           
 29499                           ; BSR set to: 0
 29500                           ;controlCurrent_MC50.c: 112:         {;controlCurrent_MC50.c: 113:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (1000/50);
 29501  006F8C  0E00               	movlw	0
 29502  006F8E  6FCE               	movwf	(_ts_system+63)& (0+255),b	;volatile
 29503  006F90  0E14               	movlw	20
 29504  006F92  6FCD               	movwf	(_ts_system+62)& (0+255),b	;volatile
 29505                           
 29506                           ;controlCurrent_MC50.c: 121:             for ( i=0 ; i<(30) ; i++ )
 29507  006F94  0E00               	movlw	0
 29508  006F96  6E17               	movwf	refreshADCZeroOffset@i^0,c
 29509  006F98                     l22471:
 29510                           
 29511                           ; BSR set to: 0
 29512                           ;controlCurrent_MC50.c: 122:             {;controlCurrent_MC50.c: 126:                 m
      +                          edia += ADC_array[i];
 29513  006F98  5017               	movf	refreshADCZeroOffset@i^0,w,c
 29514  006F9A  0D02               	mullw	2
 29515  006F9C  0E00               	movlw	low _ADC_array
 29516  006F9E  24F3               	addwf	243,w,c
 29517  006FA0  6ED9               	movwf	fsr2l,c
 29518  006FA2  0E02               	movlw	high _ADC_array
 29519  006FA4  20F4               	addwfc	prodh,w,c
 29520  006FA6  6EDA               	movwf	fsr2h,c
 29521  006FA8  50DE               	movf	postinc2,w,c
 29522  006FAA  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 29523  006FAC  50DD               	movf	postdec2,w,c
 29524  006FAE  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 29525                           
 29526                           ; BSR set to: 0
 29527                           ;controlCurrent_MC50.c: 128:             }
 29528  006FB0  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 29529                           
 29530                           ; BSR set to: 0
 29531  006FB2  0E1D               	movlw	29
 29532  006FB4  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 29533  006FB6  D7F0               	goto	l22471
 29534                           
 29535                           ; BSR set to: 0
 29536                           ;controlCurrent_MC50.c: 130:             media = media/30;
 29537  006FB8  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 29538  006FBC  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 29539  006FC0  0E00               	movlw	0
 29540  006FC2  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 29541  006FC4  0E1E               	movlw	30
 29542  006FC6  6E12               	movwf	___lwdiv@divisor^0,c
 29543  006FC8  EC48  F047         	call	___lwdiv	;wreg free
 29544  006FCC  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 29545  006FD0  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 29546                           
 29547                           ;controlCurrent_MC50.c: 131:             if ( (media>(510 -20)) && (media<(510 +20)) )
 29548  006FD4  0EEB               	movlw	235
 29549  006FD6  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 29550  006FD8  0E01               	movlw	1
 29551  006FDA  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 29552  006FDC  A0D8               	btfss	status,0,c
 29553  006FDE  D006               	goto	l22485
 29554  006FE0  0E12               	movlw	18
 29555  006FE2  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 29556  006FE4  0E02               	movlw	2
 29557  006FE6  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 29558  006FE8  A0D8               	btfss	status,0,c
 29559  006FEA  D004               	goto	l22487
 29560  006FEC                     l22485:
 29561                           
 29562                           ;controlCurrent_MC50.c: 136:             {;controlCurrent_MC50.c: 138:                 m
      +                          edia = 510;
 29563  006FEC  0E01               	movlw	1
 29564  006FEE  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 29565  006FF0  0EFE               	movlw	254
 29566  006FF2  6E18               	movwf	refreshADCZeroOffset@media^0,c
 29567  006FF4                     l22487:
 29568                           
 29569                           ;controlCurrent_MC50.c: 142:             if ( idxAdcZeroAquisition >= 30 )
 29570  006FF4  0E1D               	movlw	29
 29571  006FF6  0100               	movlb	0	; () banked
 29572  006FF8  6586               	cpfsgt	_idxAdcZeroAquisition& (0+255),b	;volatile
 29573  006FFA  D002               	goto	l22491
 29574                           
 29575                           ; BSR set to: 0
 29576                           ;controlCurrent_MC50.c: 143:             {;controlCurrent_MC50.c: 144:                 i
      +                          dxAdcZeroAquisition = 0;
 29577  006FFC  0E00               	movlw	0
 29578  006FFE  6F86               	movwf	_idxAdcZeroAquisition& (0+255),b	;volatile
 29579  007000                     l22491:
 29580                           
 29581                           ; BSR set to: 0
 29582                           ;controlCurrent_MC50.c: 146:             ADC_zero_array[idxAdcZeroAquisition] = media;
 29583  007000  5186               	movf	_idxAdcZeroAquisition& (0+255),w,b	;volatile
 29584  007002  0D02               	mullw	2
 29585  007004  0E96               	movlw	low _ADC_zero_array
 29586  007006  24F3               	addwf	243,w,c
 29587  007008  6ED9               	movwf	fsr2l,c
 29588  00700A  0E03               	movlw	high _ADC_zero_array
 29589  00700C  20F4               	addwfc	prodh,w,c
 29590  00700E  6EDA               	movwf	fsr2h,c
 29591  007010  C018  FFDE         	movff	refreshADCZeroOffset@media,postinc2
 29592  007014  C019  FFDD         	movff	refreshADCZeroOffset@media+1,postdec2
 29593                           
 29594                           ; BSR set to: 0
 29595                           ;controlCurrent_MC50.c: 147:             idxAdcZeroAquisition++;
 29596  007018  2B86               	incf	_idxAdcZeroAquisition& (0+255),f,b	;volatile
 29597                           
 29598                           ; BSR set to: 0
 29599                           ;controlCurrent_MC50.c: 150:             media = 0;
 29600  00701A  0E00               	movlw	0
 29601  00701C  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 29602  00701E  0E00               	movlw	0
 29603  007020  6E18               	movwf	refreshADCZeroOffset@media^0,c
 29604                           
 29605                           ; BSR set to: 0
 29606                           ;controlCurrent_MC50.c: 151:             for ( i=0 ; i<(30) ; i++ )
 29607  007022  0E00               	movlw	0
 29608  007024  6E17               	movwf	refreshADCZeroOffset@i^0,c
 29609  007026                     l22503:
 29610                           
 29611                           ; BSR set to: 0
 29612                           ;controlCurrent_MC50.c: 152:             {;controlCurrent_MC50.c: 158:                 m
      +                          edia += ADC_zero_array[i];
 29613  007026  5017               	movf	refreshADCZeroOffset@i^0,w,c
 29614  007028  0D02               	mullw	2
 29615  00702A  0E96               	movlw	low _ADC_zero_array
 29616  00702C  24F3               	addwf	243,w,c
 29617  00702E  6ED9               	movwf	fsr2l,c
 29618  007030  0E03               	movlw	high _ADC_zero_array
 29619  007032  20F4               	addwfc	prodh,w,c
 29620  007034  6EDA               	movwf	fsr2h,c
 29621  007036  50DE               	movf	postinc2,w,c
 29622  007038  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 29623  00703A  50DD               	movf	postdec2,w,c
 29624  00703C  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 29625                           
 29626                           ; BSR set to: 0
 29627                           ;controlCurrent_MC50.c: 159:             }
 29628  00703E  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 29629                           
 29630                           ; BSR set to: 0
 29631  007040  0E1D               	movlw	29
 29632  007042  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 29633  007044  D7F0               	goto	l22503
 29634                           
 29635                           ; BSR set to: 0
 29636                           ;controlCurrent_MC50.c: 160:             media = media/30;
 29637  007046  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 29638  00704A  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 29639  00704E  0E00               	movlw	0
 29640  007050  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 29641  007052  0E1E               	movlw	30
 29642  007054  6E12               	movwf	___lwdiv@divisor^0,c
 29643  007056  EC48  F047         	call	___lwdiv	;wreg free
 29644  00705A  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 29645  00705E  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 29646                           
 29647                           ;controlCurrent_MC50.c: 162:             var_sys.ADCZeroOffset = media;
 29648  007062  C018  F1A0         	movff	refreshADCZeroOffset@media,_var_sys+75	;volatile
 29649  007066  C019  F1A1         	movff	refreshADCZeroOffset@media+1,_var_sys+76	;volatile
 29650  00706A                     l1357:
 29651  00706A  0012               	return		;funcret
 29652  00706C                     __end_of_refreshADCZeroOffset:
 29653                           	callstack 0
 29654                           
 29655 ;; *************** function ___lwdiv *****************
 29656 ;; Defined at:
 29657 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
 29658 ;; Parameters:    Size  Location     Type
 29659 ;;  dividend        2   15[COMRAM] unsigned int 
 29660 ;;  divisor         2   17[COMRAM] unsigned int 
 29661 ;; Auto vars:     Size  Location     Type
 29662 ;;  quotient        2   20[COMRAM] unsigned int 
 29663 ;;  counter         1   19[COMRAM] unsigned char 
 29664 ;; Return value:  Size  Location     Type
 29665 ;;                  2   15[COMRAM] unsigned int 
 29666 ;; Registers used:
 29667 ;;		wreg, status,2, status,0
 29668 ;; Tracked objects:
 29669 ;;		On entry : 3D/2
 29670 ;;		On exit  : 3D/0
 29671 ;;		Unchanged: 3D/0
 29672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29673 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29674 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29676 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29677 ;;Total ram usage:        7 bytes
 29678 ;; Hardware stack levels used: 1
 29679 ;; Hardware stack levels required when called: 4
 29680 ;; This function calls:
 29681 ;;		Nothing
 29682 ;; This function is called by:
 29683 ;;		_refreshADCZeroOffset
 29684 ;;		_sm_execute_menuConfiguration
 29685 ;; This function uses a non-reentrant model
 29686 ;;
 29687                           
 29688                           	psect	text126
 29689  008E90                     __ptext126:
 29690                           	callstack 0
 29691  008E90                     ___lwdiv:
 29692                           	callstack 24
 29693                           
 29694                           ;incstack = 0
 29695  008E90  0E00               	movlw	0
 29696  008E92  6E16               	movwf	(___lwdiv@quotient+1)^0,c
 29697  008E94  0E00               	movlw	0
 29698  008E96  6E15               	movwf	___lwdiv@quotient^0,c
 29699  008E98  5012               	movf	___lwdiv@divisor^0,w,c
 29700  008E9A  1013               	iorwf	(___lwdiv@divisor+1)^0,w,c
 29701  008E9C  B4D8               	btfsc	status,2,c
 29702  008E9E  D01C               	goto	l4275
 29703  008EA0  0E01               	movlw	1
 29704  008EA2  6E14               	movwf	___lwdiv@counter^0,c
 29705  008EA4  D004               	goto	l22303
 29706  008EA6                     l22301:
 29707  008EA6  90D8               	bcf	status,0,c
 29708  008EA8  3612               	rlcf	___lwdiv@divisor^0,f,c
 29709  008EAA  3613               	rlcf	(___lwdiv@divisor+1)^0,f,c
 29710  008EAC  2A14               	incf	___lwdiv@counter^0,f,c
 29711  008EAE                     l22303:
 29712  008EAE  AE13               	btfss	(___lwdiv@divisor+1)^0,7,c
 29713  008EB0  D7FA               	goto	l22301
 29714  008EB2                     u26160:
 29715  008EB2  90D8               	bcf	status,0,c
 29716  008EB4  3615               	rlcf	___lwdiv@quotient^0,f,c
 29717  008EB6  3616               	rlcf	(___lwdiv@quotient+1)^0,f,c
 29718  008EB8  5012               	movf	___lwdiv@divisor^0,w,c
 29719  008EBA  5C10               	subwf	___lwdiv@dividend^0,w,c
 29720  008EBC  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 29721  008EBE  5811               	subwfb	(___lwdiv@dividend+1)^0,w,c
 29722  008EC0  A0D8               	btfss	status,0,c
 29723  008EC2  D005               	goto	l22313
 29724  008EC4  5012               	movf	___lwdiv@divisor^0,w,c
 29725  008EC6  5E10               	subwf	___lwdiv@dividend^0,f,c
 29726  008EC8  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 29727  008ECA  5A11               	subwfb	(___lwdiv@dividend+1)^0,f,c
 29728  008ECC  8015               	bsf	___lwdiv@quotient^0,0,c
 29729  008ECE                     l22313:
 29730  008ECE  90D8               	bcf	status,0,c
 29731  008ED0  3213               	rrcf	(___lwdiv@divisor+1)^0,f,c
 29732  008ED2  3212               	rrcf	___lwdiv@divisor^0,f,c
 29733  008ED4  2E14               	decfsz	___lwdiv@counter^0,f,c
 29734  008ED6  D7ED               	goto	u26160
 29735  008ED8                     l4275:
 29736  008ED8  C015  F010         	movff	___lwdiv@quotient,?___lwdiv
 29737  008EDC  C016  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
 29738  008EE0  0012               	return		;funcret
 29739  008EE2                     __end_of___lwdiv:
 29740                           	callstack 0
 29741                           
 29742 ;; *************** function _getCurrentComparator *****************
 29743 ;; Defined at:
 29744 ;;		line 264 in file "controlCurrent_MC50.c"
 29745 ;; Parameters:    Size  Location     Type
 29746 ;;		None
 29747 ;; Auto vars:     Size  Location     Type
 29748 ;;  x               1   33[COMRAM] unsigned char 
 29749 ;;  tempOffset      2   31[COMRAM] unsigned int 
 29750 ;; Return value:  Size  Location     Type
 29751 ;;                  4   21[COMRAM] unsigned long 
 29752 ;; Registers used:
 29753 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 29754 ;; Tracked objects:
 29755 ;;		On entry : 3F/1
 29756 ;;		On exit  : 3F/1
 29757 ;;		Unchanged: 0/0
 29758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29759 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29760 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29761 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29762 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29763 ;;Total ram usage:       13 bytes
 29764 ;; Hardware stack levels used: 1
 29765 ;; Hardware stack levels required when called: 5
 29766 ;; This function calls:
 29767 ;;		___wmul
 29768 ;; This function is called by:
 29769 ;;		_ControlCurrent
 29770 ;; This function uses a non-reentrant model
 29771 ;;
 29772                           
 29773                           	psect	text127
 29774  005F6E                     __ptext127:
 29775                           	callstack 0
 29776  005F6E                     _getCurrentComparator:
 29777                           	callstack 24
 29778                           
 29779                           ; BSR set to: 1
 29780                           ;controlCurrent_MC50.c: 269:     if(ts_system.timeSoftStart>0)
 29781                           
 29782                           ; BSR set to: 1
 29783                           
 29784                           ;incstack = 0
 29785  005F6E  0100               	movlb	0	; () banked
 29786  005F70  BFA6               	btfsc	(_ts_system+23)& (0+255),7,b	;volatile
 29787  005F72  D00A               	goto	l22527
 29788  005F74  51A6               	movf	(_ts_system+23)& (0+255),w,b	;volatile
 29789  005F76  E103               	bnz	u26340
 29790  005F78  05A5               	decf	(_ts_system+22)& (0+255),w,b	;volatile
 29791  005F7A  A0D8               	btfss	status,0,c
 29792  005F7C  D005               	goto	l22527
 29793  005F7E                     u26340:
 29794                           
 29795                           ; BSR set to: 0
 29796                           ;controlCurrent_MC50.c: 270:     {;controlCurrent_MC50.c: 271:         ts_system.timewai
      +                          tBeforeSoftStart=(1000/50);
 29797  005F7E  0E00               	movlw	0
 29798  005F80  6FCA               	movwf	(_ts_system+59)& (0+255),b	;volatile
 29799  005F82  0E14               	movlw	20
 29800  005F84  6FC9               	movwf	(_ts_system+58)& (0+255),b	;volatile
 29801  005F86  D007               	goto	u26350
 29802  005F88                     l22527:
 29803                           
 29804                           ; BSR set to: 0
 29805  005F88  BFCA               	btfsc	(_ts_system+59)& (0+255),7,b	;volatile
 29806  005F8A  D009               	goto	l22531
 29807  005F8C  51CA               	movf	(_ts_system+59)& (0+255),w,b	;volatile
 29808  005F8E  E103               	bnz	u26350
 29809  005F90  05C9               	decf	(_ts_system+58)& (0+255),w,b	;volatile
 29810  005F92  A0D8               	btfss	status,0,c
 29811  005F94  D004               	goto	l22531
 29812  005F96                     u26350:
 29813                           
 29814                           ; BSR set to: 0
 29815                           ;controlCurrent_MC50.c: 276:     {;controlCurrent_MC50.c: 277:         tempOffset=1200;
 29816  005F96  0E04               	movlw	4
 29817  005F98  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 29818  005F9A  0EB0               	movlw	176
 29819  005F9C  D003               	goto	L85
 29820  005F9E                     l22531:
 29821                           
 29822                           ; BSR set to: 0
 29823                           ;controlCurrent_MC50.c: 280:     {;controlCurrent_MC50.c: 281:         tempOffset=0;
 29824  005F9E  0E00               	movlw	0
 29825  005FA0  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 29826  005FA2  0E00               	movlw	0
 29827  005FA4                     L85:
 29828  005FA4  6E20               	movwf	getCurrentComparator@tempOffset^0,c
 29829                           
 29830                           ; BSR set to: 0
 29831                           ;controlCurrent_MC50.c: 284:     if(powerControl_st.decelarationActive==NO)
 29832  005FA6  0101               	movlb	1	; () banked
 29833  005FA8  513C               	movf	_powerControl_st& (0+255),w,b
 29834  005FAA  A4D8               	btfss	status,2,c
 29835  005FAC  D05B               	goto	l22547
 29836                           
 29837                           ; BSR set to: 1
 29838                           ;controlCurrent_MC50.c: 285:     {;controlCurrent_MC50.c: 286:         if(var_sys.StateM
      +                          otor==InClose)
 29839  005FAE  0E03               	movlw	3
 29840  005FB0  1955               	xorwf	_var_sys& (0+255),w,b	;volatile
 29841  005FB2  A4D8               	btfss	status,2,c
 29842  005FB4  D005               	goto	l22537
 29843                           
 29844                           ; BSR set to: 1
 29845                           ;controlCurrent_MC50.c: 287:         {;controlCurrent_MC50.c: 288:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalClose;
 29846  005FB6  C1D6  F189         	movff	_var_sys_NVM+48,_var_sys+52	;volatile
 29847  005FBA  C1D7  F18A         	movff	_var_sys_NVM+49,_var_sys+53	;volatile
 29848  005FBE  D004               	goto	L86
 29849  005FC0                     l22537:
 29850                           
 29851                           ; BSR set to: 1
 29852                           ;controlCurrent_MC50.c: 291:         {;controlCurrent_MC50.c: 292:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalOpen;
 29853  005FC0  C1D8  F189         	movff	_var_sys_NVM+50,_var_sys+52	;volatile
 29854  005FC4  C1D9  F18A         	movff	_var_sys_NVM+51,_var_sys+53	;volatile
 29855  005FC8                     L86:
 29856  005FC8  6B8B               	clrf	(_var_sys+54)& (0+255),b	;volatile
 29857  005FCA  6B8C               	clrf	(_var_sys+55)& (0+255),b	;volatile
 29858                           
 29859                           ; BSR set to: 1
 29860                           ;controlCurrent_MC50.c: 295:         if(var_sys.ActualComparatorCurrent<=100||(var_sys.A
      +                          ctualComparatorCurrent>(510*30)))
 29861  005FCC  518C               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 29862  005FCE  118B               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 29863  005FD0  118A               	iorwf	(_var_sys+53)& (0+255),w,b	;volatile
 29864  005FD2  E104               	bnz	u26380
 29865  005FD4  0E65               	movlw	101
 29866  005FD6  5D89               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 29867  005FD8  A0D8               	btfss	status,0,c
 29868  005FDA  D009               	goto	u26390
 29869  005FDC                     u26380:
 29870                           
 29871                           ; BSR set to: 1
 29872  005FDC  518C               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 29873  005FDE  118B               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 29874  005FE0  E106               	bnz	u26390
 29875  005FE2  0EC5               	movlw	197
 29876  005FE4  5D89               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 29877  005FE6  0E3B               	movlw	59
 29878  005FE8  598A               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 29879  005FEA  A0D8               	btfss	status,0,c
 29880  005FEC  D004               	goto	l1383
 29881  005FEE                     u26390:
 29882                           
 29883                           ; BSR set to: 1
 29884                           ;controlCurrent_MC50.c: 296:         {;controlCurrent_MC50.c: 297:              var_sys.
      +                          ActualComparatorCurrent=(510*30);
 29885  005FEE  0EC4               	movlw	196
 29886  005FF0  6F89               	movwf	(_var_sys+52)& (0+255),b	;volatile
 29887  005FF2  0E3B               	movlw	59
 29888  005FF4  D058               	goto	L88
 29889  005FF6                     l1383:
 29890                           
 29891                           ; BSR set to: 1
 29892                           ;controlCurrent_MC50.c: 300:         {;controlCurrent_MC50.c: 301:             unsigned 
      +                          char x=var_sys_NVM.motorSensitivity;
 29893  005FF6  C1A9  F022         	movff	_var_sys_NVM+3,getCurrentComparator@x	;volatile
 29894                           
 29895                           ; BSR set to: 1
 29896                           ;controlCurrent_MC50.c: 307:            var_sys.ActualComparatorCurrent=var_sys.ActualCo
      +                          mparatorCurrent+((10*(x*x))+(-200*x)+1300);
 29897  005FFA  5022               	movf	getCurrentComparator@x^0,w,c
 29898  005FFC  0222               	mulwf	getCurrentComparator@x^0,c
 29899  005FFE  CFF3 F010          	movff	prodl,___wmul@multiplier
 29900  006002  CFF4 F011          	movff	prodh,___wmul@multiplier+1
 29901  006006  0E00               	movlw	0
 29902  006008  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 29903  00600A  0E0A               	movlw	10
 29904  00600C  6E12               	movwf	___wmul@multiplicand^0,c
 29905  00600E  ECD0  F04B         	call	___wmul	;wreg free
 29906  006012  C010  F01A         	movff	?___wmul,??_getCurrentComparator
 29907  006016  C011  F01B         	movff	?___wmul+1,??_getCurrentComparator+1
 29908  00601A  C022  F010         	movff	getCurrentComparator@x,___wmul@multiplier
 29909  00601E  6A11               	clrf	(___wmul@multiplier+1)^0,c
 29910  006020  0EFF               	movlw	255
 29911  006022  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 29912  006024  0E38               	movlw	56
 29913  006026  6E12               	movwf	___wmul@multiplicand^0,c
 29914  006028  ECD0  F04B         	call	___wmul	;wreg free
 29915  00602C  5010               	movf	?___wmul^0,w,c
 29916  00602E  261A               	addwf	??_getCurrentComparator^0,f,c
 29917  006030  5011               	movf	(?___wmul+1)^0,w,c
 29918  006032  221B               	addwfc	(??_getCurrentComparator+1)^0,f,c
 29919  006034  0E14               	movlw	20
 29920  006036  241A               	addwf	??_getCurrentComparator^0,w,c
 29921  006038  6E1C               	movwf	(??_getCurrentComparator+2)^0,c
 29922  00603A  0E05               	movlw	5
 29923  00603C  201B               	addwfc	(??_getCurrentComparator+1)^0,w,c
 29924  00603E  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 29925  006040  6A1E               	clrf	(??_getCurrentComparator+4)^0,c
 29926  006042  BE1D               	btfsc	(??_getCurrentComparator+3)^0,7,c
 29927  006044  061E               	decf	(??_getCurrentComparator+4)^0,f,c
 29928  006046  501E               	movf	(??_getCurrentComparator+4)^0,w,c
 29929  006048  6E1F               	movwf	(??_getCurrentComparator+5)^0,c
 29930  00604A  0101               	movlb	1	; () banked
 29931  00604C  5189               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 29932  00604E  241C               	addwf	(??_getCurrentComparator+2)^0,w,c
 29933  006050  6F89               	movwf	(_var_sys+52)& (0+255),b	;volatile
 29934  006052  518A               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 29935  006054  201D               	addwfc	(??_getCurrentComparator+3)^0,w,c
 29936  006056  6F8A               	movwf	(_var_sys+53)& (0+255),b	;volatile
 29937  006058  518B               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 29938  00605A  201E               	addwfc	(??_getCurrentComparator+4)^0,w,c
 29939  00605C  6F8B               	movwf	(_var_sys+54)& (0+255),b	;volatile
 29940  00605E  518C               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 29941  006060  201F               	addwfc	(??_getCurrentComparator+5)^0,w,c
 29942  006062  D046               	goto	L87
 29943  006064                     l22547:
 29944                           
 29945                           ; BSR set to: 1
 29946                           ;controlCurrent_MC50.c: 311:     {;controlCurrent_MC50.c: 312:         if(var_sys.StateM
      +                          otor==InClose)
 29947  006064  0E03               	movlw	3
 29948  006066  1955               	xorwf	_var_sys& (0+255),w,b	;volatile
 29949  006068  A4D8               	btfss	status,2,c
 29950  00606A  D009               	goto	l1388
 29951                           
 29952                           ; BSR set to: 1
 29953                           ;controlCurrent_MC50.c: 313:         {;controlCurrent_MC50.c: 314:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationClose;
 29954  00606C  C1CE  F189         	movff	_var_sys_NVM+40,_var_sys+52	;volatile
 29955  006070  C1CF  F18A         	movff	_var_sys_NVM+41,_var_sys+53	;volatile
 29956  006074  C1D0  F18B         	movff	_var_sys_NVM+42,_var_sys+54	;volatile
 29957  006078  C1D1  F18C         	movff	_var_sys_NVM+43,_var_sys+55	;volatile
 29958                           
 29959                           ;controlCurrent_MC50.c: 315:         }
 29960  00607C  D008               	goto	l22551
 29961  00607E                     l1388:
 29962                           
 29963                           ; BSR set to: 1
 29964                           ;controlCurrent_MC50.c: 317:         {;controlCurrent_MC50.c: 318:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationOpen ;
 29965  00607E  C1D2  F189         	movff	_var_sys_NVM+44,_var_sys+52	;volatile
 29966  006082  C1D3  F18A         	movff	_var_sys_NVM+45,_var_sys+53	;volatile
 29967  006086  C1D4  F18B         	movff	_var_sys_NVM+46,_var_sys+54	;volatile
 29968  00608A  C1D5  F18C         	movff	_var_sys_NVM+47,_var_sys+55	;volatile
 29969  00608E                     l22551:
 29970                           
 29971                           ; BSR set to: 1
 29972                           ;controlCurrent_MC50.c: 321:         if(var_sys.ActualComparatorCurrent<=5000)
 29973  00608E  518C               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 29974  006090  118B               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 29975  006092  E10E               	bnz	l22555
 29976  006094  0E89               	movlw	137
 29977  006096  5D89               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 29978  006098  0E13               	movlw	19
 29979  00609A  598A               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 29980  00609C  B0D8               	btfsc	status,0,c
 29981  00609E  D008               	goto	l22555
 29982                           
 29983                           ; BSR set to: 1
 29984                           ;controlCurrent_MC50.c: 322:         {;controlCurrent_MC50.c: 323:             var_sys.A
      +                          ctualComparatorCurrent=5000;
 29985  0060A0  0E88               	movlw	136
 29986  0060A2  6F89               	movwf	(_var_sys+52)& (0+255),b	;volatile
 29987  0060A4  0E13               	movlw	19
 29988  0060A6                     L88:
 29989  0060A6  6F8A               	movwf	(_var_sys+53)& (0+255),b	;volatile
 29990  0060A8  0E00               	movlw	0
 29991  0060AA  6F8B               	movwf	(_var_sys+54)& (0+255),b	;volatile
 29992  0060AC  0E00               	movlw	0
 29993  0060AE  D020               	goto	L87
 29994  0060B0                     l22555:
 29995                           
 29996                           ; BSR set to: 1
 29997                           ;controlCurrent_MC50.c: 326:         {;controlCurrent_MC50.c: 327:             var_sys.A
      +                          ctualComparatorCurrent=var_sys.ActualComparatorCurrent-(1200 +(500*(10-var_sys_NVM.decel
      +                          arationSensivity)));
 29998  0060B0  C1B5  F010         	movff	_var_sys_NVM+15,___wmul@multiplier	;volatile
 29999  0060B4  6A11               	clrf	(___wmul@multiplier+1)^0,c
 30000  0060B6  0EFE               	movlw	254
 30001  0060B8  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 30002  0060BA  0E0C               	movlw	12
 30003  0060BC  6E12               	movwf	___wmul@multiplicand^0,c
 30004  0060BE  ECD0  F04B         	call	___wmul	;wreg free
 30005  0060C2  0E38               	movlw	56
 30006  0060C4  2410               	addwf	?___wmul^0,w,c
 30007  0060C6  6E1A               	movwf	??_getCurrentComparator^0,c
 30008  0060C8  0E18               	movlw	24
 30009  0060CA  2011               	addwfc	(?___wmul+1)^0,w,c
 30010  0060CC  6E1B               	movwf	(??_getCurrentComparator+1)^0,c
 30011  0060CE  6A1C               	clrf	(??_getCurrentComparator+2)^0,c
 30012  0060D0  BE1B               	btfsc	(??_getCurrentComparator+1)^0,7,c
 30013  0060D2  061C               	decf	(??_getCurrentComparator+2)^0,f,c
 30014  0060D4  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 30015  0060D6  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 30016  0060D8  501A               	movf	??_getCurrentComparator^0,w,c
 30017  0060DA  0101               	movlb	1	; () banked
 30018  0060DC  5D89               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 30019  0060DE  6F89               	movwf	(_var_sys+52)& (0+255),b	;volatile
 30020  0060E0  501B               	movf	(??_getCurrentComparator+1)^0,w,c
 30021  0060E2  598A               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 30022  0060E4  6F8A               	movwf	(_var_sys+53)& (0+255),b	;volatile
 30023  0060E6  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 30024  0060E8  598B               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 30025  0060EA  6F8B               	movwf	(_var_sys+54)& (0+255),b	;volatile
 30026  0060EC  501D               	movf	(??_getCurrentComparator+3)^0,w,c
 30027  0060EE  598C               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 30028  0060F0                     L87:
 30029  0060F0  6F8C               	movwf	(_var_sys+55)& (0+255),b	;volatile
 30030                           
 30031                           ; BSR set to: 1
 30032                           ;controlCurrent_MC50.c: 332:     return var_sys.ActualComparatorCurrent+tempOffset;
 30033  0060F2  5020               	movf	getCurrentComparator@tempOffset^0,w,c
 30034  0060F4  2589               	addwf	(_var_sys+52)& (0+255),w,b	;volatile
 30035  0060F6  6E16               	movwf	?_getCurrentComparator^0,c
 30036  0060F8  5021               	movf	(getCurrentComparator@tempOffset+1)^0,w,c
 30037  0060FA  218A               	addwfc	(_var_sys+53)& (0+255),w,b	;volatile
 30038  0060FC  6E17               	movwf	(?_getCurrentComparator+1)^0,c
 30039  0060FE  0E00               	movlw	0
 30040  006100  218B               	addwfc	(_var_sys+54)& (0+255),w,b	;volatile
 30041  006102  6E18               	movwf	(?_getCurrentComparator+2)^0,c
 30042  006104  0E00               	movlw	0
 30043  006106  218C               	addwfc	(_var_sys+55)& (0+255),w,b	;volatile
 30044  006108  6E19               	movwf	(?_getCurrentComparator+3)^0,c
 30045                           
 30046                           ; BSR set to: 1
 30047  00610A  0012               	return		;funcret
 30048  00610C                     __end_of_getCurrentComparator:
 30049                           	callstack 0
 30050                           
 30051 ;; *************** function ___wmul *****************
 30052 ;; Defined at:
 30053 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
 30054 ;; Parameters:    Size  Location     Type
 30055 ;;  multiplier      2   15[COMRAM] unsigned int 
 30056 ;;  multiplicand    2   17[COMRAM] unsigned int 
 30057 ;; Auto vars:     Size  Location     Type
 30058 ;;  product         2   19[COMRAM] unsigned int 
 30059 ;; Return value:  Size  Location     Type
 30060 ;;                  2   15[COMRAM] unsigned int 
 30061 ;; Registers used:
 30062 ;;		wreg, status,2, status,0, prodl, prodh
 30063 ;; Tracked objects:
 30064 ;;		On entry : 0/0
 30065 ;;		On exit  : 0/0
 30066 ;;		Unchanged: 0/0
 30067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30068 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30069 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30071 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30072 ;;Total ram usage:        6 bytes
 30073 ;; Hardware stack levels used: 1
 30074 ;; Hardware stack levels required when called: 4
 30075 ;; This function calls:
 30076 ;;		Nothing
 30077 ;; This function is called by:
 30078 ;;		_getCurrentComparator
 30079 ;;		_read_eusartparser
 30080 ;;		_write_eusartparser
 30081 ;;		_getHopCode
 30082 ;; This function uses a non-reentrant model
 30083 ;;
 30084                           
 30085                           	psect	text128
 30086  0097A0                     __ptext128:
 30087                           	callstack 0
 30088  0097A0                     ___wmul:
 30089                           	callstack 22
 30090                           
 30091                           ; BSR set to: 1
 30092                           ;incstack = 0
 30093  0097A0  5010               	movf	___wmul@multiplier^0,w,c
 30094  0097A2  0212               	mulwf	___wmul@multiplicand^0,c
 30095  0097A4  CFF3 F014          	movff	prodl,___wmul@product
 30096  0097A8  CFF4 F015          	movff	prodh,___wmul@product+1
 30097  0097AC  5010               	movf	___wmul@multiplier^0,w,c
 30098  0097AE  0213               	mulwf	(___wmul@multiplicand+1)^0,c
 30099  0097B0  50F3               	movf	243,w,c
 30100  0097B2  2615               	addwf	(___wmul@product+1)^0,f,c
 30101  0097B4  5011               	movf	(___wmul@multiplier+1)^0,w,c
 30102  0097B6  0212               	mulwf	___wmul@multiplicand^0,c
 30103  0097B8  50F3               	movf	243,w,c
 30104  0097BA  2615               	addwf	(___wmul@product+1)^0,f,c
 30105  0097BC  C014  F010         	movff	___wmul@product,?___wmul
 30106  0097C0  C015  F011         	movff	___wmul@product+1,?___wmul+1
 30107  0097C4  0012               	return		;funcret
 30108  0097C6                     __end_of___wmul:
 30109                           	callstack 0
 30110                           
 30111 ;; *************** function _GetMotorPower *****************
 30112 ;; Defined at:
 30113 ;;		line 405 in file "outputs_MC50.c"
 30114 ;; Parameters:    Size  Location     Type
 30115 ;;		None
 30116 ;; Auto vars:     Size  Location     Type
 30117 ;;  defineatraso    1   18[COMRAM] unsigned char 
 30118 ;; Return value:  Size  Location     Type
 30119 ;;                  1    wreg      unsigned char 
 30120 ;; Registers used:
 30121 ;;		wreg, status,2, status,0, prodl, prodh
 30122 ;; Tracked objects:
 30123 ;;		On entry : 3C/1
 30124 ;;		On exit  : 3F/0
 30125 ;;		Unchanged: 0/0
 30126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30128 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30129 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30130 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30131 ;;Total ram usage:        4 bytes
 30132 ;; Hardware stack levels used: 1
 30133 ;; Hardware stack levels required when called: 4
 30134 ;; This function calls:
 30135 ;;		Nothing
 30136 ;; This function is called by:
 30137 ;;		_ControlCurrent
 30138 ;;		_InitSoftStart
 30139 ;;		_InitSoftStop
 30140 ;; This function uses a non-reentrant model
 30141 ;;
 30142                           
 30143                           	psect	text129
 30144  007892                     __ptext129:
 30145                           	callstack 0
 30146  007892                     _GetMotorPower:
 30147                           	callstack 22
 30148                           
 30149                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 30150                           
 30151                           ;incstack = 0
 30152  007892  0101               	movlb	1	; () banked
 30153  007894  053C               	decf	_powerControl_st& (0+255),w,b
 30154  007896  A4D8               	btfss	status,2,c
 30155  007898  D005               	goto	l20177
 30156                           
 30157                           ; BSR set to: 1
 30158                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 30159  00789A  51A8               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 30160  00789C  0D06               	mullw	6
 30161  00789E  CFF3 F074          	movff	prodl,_temppower
 30162                           
 30163                           ;outputs_MC50.c: 416:     }
 30164  0078A2  D03F               	goto	l2256
 30165  0078A4                     l20177:
 30166                           
 30167                           ; BSR set to: 1
 30168                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 30169  0078A4  51A8               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 30170  0078A6  0D06               	mullw	6
 30171  0078A8  CFF3 F073          	movff	prodl,_fullmotorPower
 30172                           
 30173                           ; BSR set to: 1
 30174                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 30175  0078AC  BF64               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 30176  0078AE  D01A               	goto	l20187
 30177  0078B0  5164               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30178  0078B2  E103               	bnz	u23470
 30179  0078B4  0563               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 30180  0078B6  A0D8               	btfss	status,0,c
 30181  0078B8  D015               	goto	l20187
 30182  0078BA                     u23470:
 30183                           
 30184                           ; BSR set to: 1
 30185                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 30186  0078BA  0100               	movlb	0	; () banked
 30187  0078BC  5173               	movf	_fullmotorPower& (0+255),w,b
 30188  0078BE  6E10               	movwf	??_GetMotorPower^0,c
 30189  0078C0  6A11               	clrf	(??_GetMotorPower+1)^0,c
 30190  0078C2  0101               	movlb	1	; () banked
 30191  0078C4  5163               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 30192  0078C6  5C10               	subwf	??_GetMotorPower^0,w,c
 30193  0078C8  5011               	movf	(??_GetMotorPower+1)^0,w,c
 30194  0078CA  0A80               	xorlw	128
 30195  0078CC  6E12               	movwf	(??_GetMotorPower+2)^0,c
 30196  0078CE  5164               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30197  0078D0  0A80               	xorlw	128
 30198  0078D2  5812               	subwfb	(??_GetMotorPower+2)^0,w,c
 30199  0078D4  B0D8               	btfsc	status,0,c
 30200  0078D6  D002               	goto	l20185
 30201                           
 30202                           ; BSR set to: 1
 30203                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 30204  0078D8  0E01               	movlw	1
 30205  0078DA  D018               	goto	L92
 30206  0078DC                     l20185:
 30207                           
 30208                           ; BSR set to: 1
 30209                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 30210  0078DC  5163               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 30211  0078DE  0100               	movlb	0	; () banked
 30212  0078E0  5D73               	subwf	_fullmotorPower& (0+255),w,b
 30213  0078E2  D015               	goto	L91
 30214  0078E4                     l20187:
 30215                           
 30216                           ; BSR set to: 1
 30217  0078E4  BF64               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 30218  0078E6  D005               	goto	u23490
 30219  0078E8  5164               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30220  0078EA  E113               	bnz	l20197
 30221  0078EC  0563               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 30222  0078EE  B0D8               	btfsc	status,0,c
 30223  0078F0  D010               	goto	l20197
 30224  0078F2                     u23490:
 30225                           
 30226                           ; BSR set to: 1
 30227  0078F2  BF66               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 30228  0078F4  D005               	goto	u23500
 30229  0078F6  5166               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 30230  0078F8  E10C               	bnz	l20197
 30231  0078FA  0565               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 30232  0078FC  B0D8               	btfsc	status,0,c
 30233  0078FE  D009               	goto	l20197
 30234  007900                     u23500:
 30235                           
 30236                           ; BSR set to: 1
 30237                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 30238  007900  C073  F074         	movff	_fullmotorPower,_temppower
 30239                           
 30240                           ; BSR set to: 1
 30241                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 30242  007904  0E08               	movlw	8
 30243  007906  65A8               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 30244  007908  D00C               	goto	l2256
 30245                           
 30246                           ; BSR set to: 1
 30247                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 30248  00790A  0E3A               	movlw	58
 30249  00790C                     L92:
 30250  00790C  0100               	movlb	0	; () banked
 30251  00790E                     L91:
 30252  00790E  6F74               	movwf	_temppower& (0+255),b
 30253  007910  D008               	goto	l2256
 30254  007912                     l20197:
 30255                           
 30256                           ; BSR set to: 1
 30257  007912  BF66               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 30258  007914  D006               	goto	l2256
 30259  007916  5166               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 30260  007918  E102               	bnz	u23520
 30261  00791A  0565               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 30262  00791C  B0D8               	btfsc	status,0,c
 30263  00791E                     u23520:
 30264                           
 30265                           ; BSR set to: 1
 30266                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 30267  00791E  C165  F074         	movff	_var_sys+16,_temppower	;volatile
 30268  007922                     l2256:
 30269                           
 30270                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 30271                           
 30272                           ; BSR set to: 1
 30273  007922  0101               	movlb	1	; () banked
 30274  007924  BF66               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 30275  007926  D00E               	goto	l20207
 30276  007928  5166               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 30277  00792A  E103               	bnz	u23530
 30278  00792C  0565               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 30279  00792E  A0D8               	btfss	status,0,c
 30280  007930  D009               	goto	l20207
 30281  007932                     u23530:
 30282                           
 30283                           ; BSR set to: 1
 30284  007932  BF64               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 30285  007934  D005               	goto	u23540
 30286  007936  5164               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30287  007938  E105               	bnz	l20207
 30288  00793A  0563               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 30289  00793C  B0D8               	btfsc	status,0,c
 30290  00793E  D002               	goto	l20207
 30291  007940                     u23540:
 30292                           
 30293                           ; BSR set to: 1
 30294                           ;outputs_MC50.c: 452:     defineatraso = 5;
 30295  007940  0E05               	movlw	5
 30296  007942  D001               	goto	L89
 30297  007944                     l20207:
 30298                           
 30299                           ; BSR set to: 1
 30300                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 30301  007944  0E17               	movlw	23
 30302  007946                     L89:
 30303  007946  6E13               	movwf	GetMotorPower@defineatraso^0,c
 30304                           
 30305                           ; BSR set to: 1
 30306                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 30307  007948  0100               	movlb	0	; () banked
 30308  00794A  5174               	movf	_temppower& (0+255),w,b
 30309  00794C  2413               	addwf	GetMotorPower@defineatraso^0,w,c
 30310                           
 30311                           ; BSR set to: 0
 30312  00794E  0012               	return		;funcret
 30313  007950                     __end_of_GetMotorPower:
 30314                           	callstack 0
 30315                           
 30316 ;; *************** function _ControlCounterMoves *****************
 30317 ;; Defined at:
 30318 ;;		line 305 in file "controlMemory_MC50.c"
 30319 ;; Parameters:    Size  Location     Type
 30320 ;;		None
 30321 ;; Auto vars:     Size  Location     Type
 30322 ;;		None
 30323 ;; Return value:  Size  Location     Type
 30324 ;;                  1    wreg      void 
 30325 ;; Registers used:
 30326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30327 ;; Tracked objects:
 30328 ;;		On entry : 3E/1
 30329 ;;		On exit  : 0/0
 30330 ;;		Unchanged: 0/0
 30331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30336 ;;Total ram usage:        0 bytes
 30337 ;; Hardware stack levels used: 1
 30338 ;; Hardware stack levels required when called: 14
 30339 ;; This function calls:
 30340 ;;		_SaveNVM_VarSystem
 30341 ;; This function is called by:
 30342 ;;		_main
 30343 ;; This function uses a non-reentrant model
 30344 ;;
 30345                           
 30346                           	psect	text130
 30347  00906A                     __ptext130:
 30348                           	callstack 0
 30349  00906A                     _ControlCounterMoves:
 30350                           	callstack 16
 30351                           
 30352                           ;controlMemory_MC50.c: 308:     if(ts_system.timeBetweenSaveCounters<=0)
 30353                           
 30354                           ; BSR set to: 0
 30355                           ;incstack = 0
 30356  00906A  0100               	movlb	0	; () banked
 30357  00906C  BFB6               	btfsc	(_ts_system+39)& (0+255),7,b	;volatile
 30358  00906E  D005               	goto	u30170
 30359  009070  51B6               	movf	(_ts_system+39)& (0+255),w,b	;volatile
 30360  009072  E120               	bnz	l1491
 30361  009074  05B5               	decf	(_ts_system+38)& (0+255),w,b	;volatile
 30362  009076  B0D8               	btfsc	status,0,c
 30363  009078  0012               	return	
 30364  00907A                     u30170:
 30365                           
 30366                           ; BSR set to: 0
 30367                           ;controlMemory_MC50.c: 309:     {;controlMemory_MC50.c: 310:        ts_system.timeBetwee
      +                          nSaveCounters=((1000/50)*60)*5;
 30368  00907A  0E17               	movlw	23
 30369  00907C  6FB6               	movwf	(_ts_system+39)& (0+255),b	;volatile
 30370  00907E  0E70               	movlw	112
 30371  009080  6FB5               	movwf	(_ts_system+38)& (0+255),b	;volatile
 30372                           
 30373                           ; BSR set to: 0
 30374                           ;controlMemory_MC50.c: 312:        if(var_sys.actualCounterMoves!=var_sys_NVM.counterMov
      +                          es)
 30375  009082  0101               	movlb	1	; () banked
 30376  009084  51C8               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 30377  009086  1991               	xorwf	(_var_sys+60)& (0+255),w,b	;volatile
 30378  009088  E10A               	bnz	u30180
 30379  00908A  51C9               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 30380  00908C  1992               	xorwf	(_var_sys+61)& (0+255),w,b	;volatile
 30381  00908E  E107               	bnz	u30180
 30382  009090  51CA               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 30383  009092  1993               	xorwf	(_var_sys+62)& (0+255),w,b	;volatile
 30384  009094  E104               	bnz	u30180
 30385  009096  51CB               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 30386  009098  1994               	xorwf	(_var_sys+63)& (0+255),w,b	;volatile
 30387  00909A  B4D8               	btfsc	status,2,c
 30388  00909C  0012               	return	
 30389  00909E                     u30180:
 30390                           
 30391                           ; BSR set to: 1
 30392                           ;controlMemory_MC50.c: 313:        {;controlMemory_MC50.c: 314:            var_sys_NVM.c
      +                          ounterMoves=var_sys.actualCounterMoves;
 30393  00909E  C191  F1C8         	movff	_var_sys+60,_var_sys_NVM+34	;volatile
 30394  0090A2  C192  F1C9         	movff	_var_sys+61,_var_sys_NVM+35	;volatile
 30395  0090A6  C193  F1CA         	movff	_var_sys+62,_var_sys_NVM+36	;volatile
 30396  0090AA  C194  F1CB         	movff	_var_sys+63,_var_sys_NVM+37	;volatile
 30397                           
 30398                           ; BSR set to: 1
 30399                           ;controlMemory_MC50.c: 315:            SaveNVM_VarSystem(pageMemoryCounters);
 30400  0090AE  0E02               	movlw	2
 30401  0090B0  EC7F  F048         	call	_SaveNVM_VarSystem
 30402  0090B4                     l1491:
 30403  0090B4  0012               	return		;funcret
 30404  0090B6                     __end_of_ControlCounterMoves:
 30405                           	callstack 0
 30406                           
 30407 ;; *************** function _SaveNVM_VarSystem *****************
 30408 ;; Defined at:
 30409 ;;		line 187 in file "controlMemory_MC50.c"
 30410 ;; Parameters:    Size  Location     Type
 30411 ;;  page            1    wreg     unsigned char 
 30412 ;; Auto vars:     Size  Location     Type
 30413 ;;  page            1    0[BANK0 ] unsigned char 
 30414 ;;  point           2    3[BANK0 ] PTR unsigned char 
 30415 ;;		 -> var_sys_NVM(64), 
 30416 ;;  tempAdd         2    1[BANK0 ] unsigned int 
 30417 ;; Return value:  Size  Location     Type
 30418 ;;                  1    wreg      void 
 30419 ;; Registers used:
 30420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30421 ;; Tracked objects:
 30422 ;;		On entry : 0/1
 30423 ;;		On exit  : 0/0
 30424 ;;		Unchanged: 0/0
 30425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30427 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30429 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30430 ;;Total ram usage:        5 bytes
 30431 ;; Hardware stack levels used: 1
 30432 ;; Hardware stack levels required when called: 13
 30433 ;; This function calls:
 30434 ;;		_i2c_writeNBytes
 30435 ;; This function is called by:
 30436 ;;		_loadNVM_VarSystem
 30437 ;;		_ResetDefaultMemory
 30438 ;;		_ControlCounterMoves
 30439 ;;		_checkNVM_VarSystem
 30440 ;;		_sm_execute_ControlLearning
 30441 ;;		_sm_execute_menuConfiguration
 30442 ;;		_setValueToEdit
 30443 ;;		_controlSelectRemote
 30444 ;;		_eusartparser
 30445 ;; This function uses a non-reentrant model
 30446 ;;
 30447                           
 30448                           	psect	text131
 30449  0090FE                     __ptext131:
 30450                           	callstack 0
 30451  0090FE                     _SaveNVM_VarSystem:
 30452                           	callstack 14
 30453                           
 30454                           ;incstack = 0
 30455                           ;SaveNVM_VarSystem@page stored from wreg
 30456  0090FE  0100               	movlb	0	; () banked
 30457  009100  6FD8               	movwf	SaveNVM_VarSystem@page& (0+255),b
 30458                           
 30459                           ;controlMemory_MC50.c: 187: void SaveNVM_VarSystem(unsigned char page);controlMemory_MC5
      +                          0.c: 188: {;controlMemory_MC50.c: 189:     unsigned int tempAdd=page*16;
 30460  009102  0100               	movlb	0	; () banked
 30461  009104  51D8               	movf	SaveNVM_VarSystem@page& (0+255),w,b
 30462  009106  0D10               	mullw	16
 30463  009108  CFF3 F0D9          	movff	prodl,SaveNVM_VarSystem@tempAdd
 30464  00910C  CFF4 F0DA          	movff	prodh,SaveNVM_VarSystem@tempAdd+1
 30465                           
 30466                           ; BSR set to: 0
 30467                           ;controlMemory_MC50.c: 190:     char* point=(char*)&var_sys_NVM;
 30468  009110  0EA6               	movlw	low _var_sys_NVM
 30469  009112  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 30470  009114  0E01               	movlw	high _var_sys_NVM
 30471  009116  6FDC               	movwf	(SaveNVM_VarSystem@point+1)& (0+255),b
 30472                           
 30473                           ; BSR set to: 0
 30474                           ;controlMemory_MC50.c: 191:     point=point+tempAdd;
 30475  009118  51D9               	movf	SaveNVM_VarSystem@tempAdd& (0+255),w,b
 30476  00911A  25DB               	addwf	SaveNVM_VarSystem@point& (0+255),w,b
 30477  00911C  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 30478  00911E  51DA               	movf	(SaveNVM_VarSystem@tempAdd+1)& (0+255),w,b
 30479  009120  21DC               	addwfc	(SaveNVM_VarSystem@point+1)& (0+255),w,b
 30480  009122  6FDC               	movwf	(SaveNVM_VarSystem@point+1)& (0+255),b
 30481                           
 30482                           ; BSR set to: 0
 30483                           ;controlMemory_MC50.c: 192:    i2c_writeNBytes(0x50, tempAdd, point, 16);
 30484  009124  C0D9  F022         	movff	SaveNVM_VarSystem@tempAdd,i2c_writeNBytes@reg
 30485  009128  C0DA  F023         	movff	SaveNVM_VarSystem@tempAdd+1,i2c_writeNBytes@reg+1
 30486  00912C  C0DB  F024         	movff	SaveNVM_VarSystem@point,i2c_writeNBytes@data
 30487  009130  C0DC  F025         	movff	SaveNVM_VarSystem@point+1,i2c_writeNBytes@data+1
 30488  009134  0E00               	movlw	0
 30489  009136  6E27               	movwf	(i2c_writeNBytes@len+1)^0,c
 30490  009138  0E10               	movlw	16
 30491  00913A  6E26               	movwf	i2c_writeNBytes@len^0,c
 30492  00913C  0E50               	movlw	80
 30493  00913E  ECC9  F042         	call	_i2c_writeNBytes
 30494  009142  0012               	return		;funcret
 30495  009144                     __end_of_SaveNVM_VarSystem:
 30496                           	callstack 0
 30497                           
 30498 ;; *************** function _i2c_writeNBytes *****************
 30499 ;; Defined at:
 30500 ;;		line 50 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 30501 ;; Parameters:    Size  Location     Type
 30502 ;;  address         1    wreg     unsigned char 
 30503 ;;  reg             2   33[COMRAM] unsigned short 
 30504 ;;  data            2   35[COMRAM] PTR void 
 30505 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 30506 ;;  len             2   37[COMRAM] unsigned int 
 30507 ;; Auto vars:     Size  Location     Type
 30508 ;;  address         1   57[COMRAM] unsigned char 
 30509 ;;  dat            17   40[COMRAM] unsigned char [17]
 30510 ;; Return value:  Size  Location     Type
 30511 ;;                  1    wreg      void 
 30512 ;; Registers used:
 30513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30514 ;; Tracked objects:
 30515 ;;		On entry : 3F/0
 30516 ;;		On exit  : 0/0
 30517 ;;		Unchanged: 0/0
 30518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30519 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30520 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30521 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30522 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30523 ;;Total ram usage:       25 bytes
 30524 ;; Hardware stack levels used: 1
 30525 ;; Hardware stack levels required when called: 12
 30526 ;; This function calls:
 30527 ;;		_I2C1_Close
 30528 ;;		_I2C1_MasterWrite
 30529 ;;		_I2C1_Open
 30530 ;;		_I2C1_SetAddressNackCallback
 30531 ;;		_I2C1_SetBuffer
 30532 ;;		_memcpy
 30533 ;; This function is called by:
 30534 ;;		_saveNewSerial
 30535 ;;		_RemoveSerial
 30536 ;;		_SaveNVM_VarSystem
 30537 ;; This function uses a non-reentrant model
 30538 ;;
 30539                           
 30540                           	psect	text132
 30541  008592                     __ptext132:
 30542                           	callstack 0
 30543  008592                     _i2c_writeNBytes:
 30544                           	callstack 14
 30545                           
 30546                           ;incstack = 0
 30547                           ;i2c_writeNBytes@address stored from wreg
 30548  008592  6E3A               	movwf	i2c_writeNBytes@address^0,c
 30549                           
 30550                           ;mcc_generated_files/drivers/i2c_simple_master.c: 50: void i2c_writeNBytes(i2c1_address_
      +                          t address, uint16_t reg, void* data, size_t len);mcc_generated_files/drivers/i2c_simple_
      +                          master.c: 51: {;mcc_generated_files/drivers/i2c_simple_master.c: 52:     uint8_t dat[17]
      +                          ;;mcc_generated_files/drivers/i2c_simple_master.c: 53:     dat[0] = reg;
 30551  008594  C022  F029         	movff	i2c_writeNBytes@reg,i2c_writeNBytes@dat
 30552                           
 30553                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     memcpy(dat + 1, data, len);
 30554  008598  0E2A               	movlw	low (i2c_writeNBytes@dat+1)
 30555  00859A  6E10               	movwf	memcpy@d1^0,c
 30556  00859C  6A11               	clrf	(memcpy@d1+1)^0,c
 30557  00859E  C024  F012         	movff	i2c_writeNBytes@data,memcpy@s1
 30558  0085A2  C025  F013         	movff	i2c_writeNBytes@data+1,memcpy@s1+1
 30559  0085A6  C026  F014         	movff	i2c_writeNBytes@len,memcpy@n
 30560  0085AA  C027  F015         	movff	i2c_writeNBytes@len+1,memcpy@n+1
 30561  0085AE  ECE6  F048         	call	_memcpy	;wreg free
 30562  0085B2                     l20249:
 30563  0085B2  5023               	movf	(i2c_writeNBytes@reg+1)^0,w,c
 30564  0085B4  103A               	iorwf	i2c_writeNBytes@address^0,w,c
 30565  0085B6  EC11  F041         	call	_I2C1_Open
 30566  0085BA  0900               	iorlw	0
 30567  0085BC  B4D8               	btfsc	status,2,c
 30568  0085BE  D7F9               	goto	l20249
 30569                           
 30570                           ;mcc_generated_files/drivers/i2c_simple_master.c: 56:     I2C1_SetBuffer(dat,len + 1);
 30571  0085C0  0E29               	movlw	low i2c_writeNBytes@dat
 30572  0085C2  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 30573  0085C4  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 30574  0085C6  0E01               	movlw	1
 30575  0085C8  2426               	addwf	i2c_writeNBytes@len^0,w,c
 30576  0085CA  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 30577  0085CC  0E00               	movlw	0
 30578  0085CE  2027               	addwfc	(i2c_writeNBytes@len+1)^0,w,c
 30579  0085D0  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 30580  0085D2  ECD0  F04C         	call	_I2C1_SetBuffer	;wreg free
 30581                           
 30582                           ; BSR set to: 2
 30583                           ;mcc_generated_files/drivers/i2c_simple_master.c: 57:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 30584  0085D6  0E00               	movlw	0
 30585  0085D8  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 30586  0085DA  0E00               	movlw	0
 30587  0085DC  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 30588  0085DE  0E00               	movlw	0
 30589  0085E0  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 30590  0085E2  0E00               	movlw	0
 30591  0085E4  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 30592  0085E6  EC01  F04D         	call	_I2C1_SetAddressNackCallback	;wreg free
 30593                           
 30594                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58:     I2C1_MasterWrite();
 30595  0085EA  ECD9  F04D         	call	_I2C1_MasterWrite	;wreg free
 30596  0085EE                     l20257:
 30597  0085EE  EC4F  F04C         	call	_I2C1_Close	;wreg free
 30598  0085F2  06E8               	decf	wreg,f,c
 30599  0085F4  B4D8               	btfsc	status,2,c
 30600  0085F6  D7FB               	goto	l20257
 30601                           
 30602                           ;mcc_generated_files/drivers/i2c_simple_master.c: 60:     _delay((unsigned long)((10)*(6
      +                          4000000/4000.0)));
 30603  0085F8  0ED0               	movlw	208
 30604  0085FA  6E28               	movwf	??_i2c_writeNBytes^0,c
 30605  0085FC  0ECA               	movlw	202
 30606  0085FE                     u34677:
 30607  0085FE  2EE8               	decfsz	wreg,f,c
 30608  008600  D7FE               	bra	u34677
 30609  008602  2E28               	decfsz	??_i2c_writeNBytes^0,f,c
 30610  008604  D7FC               	bra	u34677
 30611  008606  0012               	return		;funcret
 30612  008608                     __end_of_i2c_writeNBytes:
 30613                           	callstack 0
 30614                           
 30615 ;; *************** function _memcpy *****************
 30616 ;; Defined at:
 30617 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memcpy.c"
 30618 ;; Parameters:    Size  Location     Type
 30619 ;;  d1              2   15[COMRAM] PTR void 
 30620 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 30621 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 30622 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 30623 ;;		 -> i2c_writeNBytes@dat(17), 
 30624 ;;  s1              2   17[COMRAM] PTR const void 
 30625 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 30626 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 30627 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 30628 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 30629 ;;  n               2   19[COMRAM] unsigned int 
 30630 ;; Auto vars:     Size  Location     Type
 30631 ;;  s               2   24[COMRAM] PTR const unsigned char 
 30632 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 30633 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 30634 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 30635 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 30636 ;;  d               2   22[COMRAM] PTR unsigned char 
 30637 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 30638 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 30639 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 30640 ;;		 -> i2c_writeNBytes@dat(17), 
 30641 ;;  tmp             1   21[COMRAM] unsigned char 
 30642 ;; Return value:  Size  Location     Type
 30643 ;;                  2   15[COMRAM] PTR void 
 30644 ;; Registers used:
 30645 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30646 ;; Tracked objects:
 30647 ;;		On entry : 0/0
 30648 ;;		On exit  : 0/0
 30649 ;;		Unchanged: 0/0
 30650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30651 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30652 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30654 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30655 ;;Total ram usage:       11 bytes
 30656 ;; Hardware stack levels used: 1
 30657 ;; Hardware stack levels required when called: 4
 30658 ;; This function calls:
 30659 ;;		Nothing
 30660 ;; This function is called by:
 30661 ;;		_i2c_writeNBytes
 30662 ;;		_getSerialCmd
 30663 ;;		_NormalKeyGen
 30664 ;;		_Decrypt
 30665 ;;		_keeloqDecryptPacket
 30666 ;;		_DecryptPacket_12BIT
 30667 ;; This function uses a non-reentrant model
 30668 ;;
 30669                           
 30670                           	psect	text133
 30671  0091CC                     __ptext133:
 30672                           	callstack 0
 30673  0091CC                     _memcpy:
 30674                           	callstack 21
 30675                           
 30676                           ;incstack = 0
 30677  0091CC  C012  F019         	movff	memcpy@s1,memcpy@s
 30678  0091D0  C013  F01A         	movff	memcpy@s1+1,memcpy@s+1
 30679  0091D4  C010  F017         	movff	memcpy@d1,memcpy@d
 30680  0091D8  C011  F018         	movff	memcpy@d1+1,memcpy@d+1
 30681  0091DC  D010               	goto	l20171
 30682  0091DE                     l20163:
 30683  0091DE  C019  FFD9         	movff	memcpy@s,fsr2l
 30684  0091E2  C01A  FFDA         	movff	memcpy@s+1,fsr2h
 30685  0091E6  50DF               	movf	indf2,w,c
 30686  0091E8  6E16               	movwf	memcpy@tmp^0,c
 30687  0091EA  4A19               	infsnz	memcpy@s^0,f,c
 30688  0091EC  2A1A               	incf	(memcpy@s+1)^0,f,c
 30689  0091EE  C017  FFD9         	movff	memcpy@d,fsr2l
 30690  0091F2  C018  FFDA         	movff	memcpy@d+1,fsr2h
 30691  0091F6  C016  FFDF         	movff	memcpy@tmp,indf2
 30692  0091FA  4A17               	infsnz	memcpy@d^0,f,c
 30693  0091FC  2A18               	incf	(memcpy@d+1)^0,f,c
 30694  0091FE                     l20171:
 30695  0091FE  0614               	decf	memcpy@n^0,f,c
 30696  009200  A0D8               	btfss	status,0,c
 30697  009202  0615               	decf	(memcpy@n+1)^0,f,c
 30698  009204  2814               	incf	memcpy@n^0,w,c
 30699  009206  E1EB               	bnz	l20163
 30700  009208  2815               	incf	(memcpy@n+1)^0,w,c
 30701  00920A  B4D8               	btfsc	status,2,c
 30702  00920C  0012               	return	
 30703  00920E  D7E7               	goto	l20163
 30704  009210                     __end_of_memcpy:
 30705                           	callstack 0
 30706                           
 30707 ;; *************** function _I2C1_SetAddressNackCallback *****************
 30708 ;; Defined at:
 30709 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 30710 ;; Parameters:    Size  Location     Type
 30711 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 30712 ;;		 -> Absolute function(1), 
 30713 ;;  ptr             2   22[COMRAM] PTR void 
 30714 ;;		 -> NULL(0), 
 30715 ;; Auto vars:     Size  Location     Type
 30716 ;;		None
 30717 ;; Return value:  Size  Location     Type
 30718 ;;                  1    wreg      void 
 30719 ;; Registers used:
 30720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30721 ;; Tracked objects:
 30722 ;;		On entry : 3F/2
 30723 ;;		On exit  : 0/0
 30724 ;;		Unchanged: 0/0
 30725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30726 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30729 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30730 ;;Total ram usage:        4 bytes
 30731 ;; Hardware stack levels used: 1
 30732 ;; Hardware stack levels required when called: 5
 30733 ;; This function calls:
 30734 ;;		_I2C1_SetCallback
 30735 ;; This function is called by:
 30736 ;;		_i2c_writeNBytes
 30737 ;;		_i2c_readDataBlock
 30738 ;;		_I2C1_Read1ByteRegister
 30739 ;; This function uses a non-reentrant model
 30740 ;;
 30741                           
 30742                           	psect	text134
 30743  009A02                     __ptext134:
 30744                           	callstack 0
 30745  009A02                     _I2C1_SetAddressNackCallback:
 30746                           	callstack 20
 30747                           
 30748                           ; BSR set to: 2
 30749                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 30750                           
 30751                           ;incstack = 0
 30752  009A02  C015  F010         	movff	I2C1_SetAddressNackCallback@cb,I2C1_SetCallback@cb
 30753  009A06  C016  F011         	movff	I2C1_SetAddressNackCallback@cb+1,I2C1_SetCallback@cb+1
 30754  009A0A  C017  F012         	movff	I2C1_SetAddressNackCallback@ptr,I2C1_SetCallback@ptr
 30755  009A0E  C018  F013         	movff	I2C1_SetAddressNackCallback@ptr+1,I2C1_SetCallback@ptr+1
 30756  009A12  0E02               	movlw	2
 30757  009A14  EC1C  F044         	call	_I2C1_SetCallback
 30758  009A18  0012               	return		;funcret
 30759  009A1A                     __end_of_I2C1_SetAddressNackCallback:
 30760                           	callstack 0
 30761                           
 30762 ;; *************** function _I2C1_Open *****************
 30763 ;; Defined at:
 30764 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 30765 ;; Parameters:    Size  Location     Type
 30766 ;;  address         1    wreg     unsigned char 
 30767 ;; Auto vars:     Size  Location     Type
 30768 ;;  address         1   15[COMRAM] unsigned char 
 30769 ;;  returnValue     1   16[COMRAM] enum E355
 30770 ;; Return value:  Size  Location     Type
 30771 ;;                  1    wreg      enum E355
 30772 ;; Registers used:
 30773 ;;		wreg, status,2, status,0, cstack
 30774 ;; Tracked objects:
 30775 ;;		On entry : 0/0
 30776 ;;		On exit  : 33/2
 30777 ;;		Unchanged: 0/0
 30778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30780 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30782 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30783 ;;Total ram usage:        2 bytes
 30784 ;; Hardware stack levels used: 1
 30785 ;; Hardware stack levels required when called: 5
 30786 ;; This function calls:
 30787 ;;		_I2C1_MasterClearIrq
 30788 ;;		_I2C1_MasterOpen
 30789 ;; This function is called by:
 30790 ;;		_i2c_writeNBytes
 30791 ;;		_i2c_readDataBlock
 30792 ;;		_I2C1_Read1ByteRegister
 30793 ;; This function uses a non-reentrant model
 30794 ;;
 30795                           
 30796                           	psect	text135
 30797  008222                     __ptext135:
 30798                           	callstack 0
 30799  008222                     _I2C1_Open:
 30800                           	callstack 20
 30801                           
 30802                           ;incstack = 0
 30803                           ;I2C1_Open@address stored from wreg
 30804  008222  6E10               	movwf	I2C1_Open@address^0,c
 30805                           
 30806                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 30807  008224  0E01               	movlw	1
 30808  008226  6E11               	movwf	I2C1_Open@returnValue^0,c
 30809                           
 30810                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 30811  008228  0102               	movlb	2	; () banked
 30812  00822A  B55F               	btfsc	(_I2C1_Status+35)& (0+255),2,b
 30813  00822C  D03A               	goto	l20137
 30814                           
 30815                           ; BSR set to: 2
 30816                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 30817  00822E  C010  F258         	movff	I2C1_Open@address,_I2C1_Status+28
 30818                           
 30819                           ; BSR set to: 2
 30820                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 30821  008232  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 30822                           
 30823                           ; BSR set to: 2
 30824                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 30825  008234  855F               	bsf	(_I2C1_Status+35)& (0+255),2,b
 30826                           
 30827                           ; BSR set to: 2
 30828                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 30829  008236  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 30830                           
 30831                           ; BSR set to: 2
 30832                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 30833  008238  0E0E               	movlw	14
 30834  00823A  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 30835                           
 30836                           ; BSR set to: 2
 30837                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 30838  00823C  0E01               	movlw	1
 30839  00823E  6F57               	movwf	(_I2C1_Status+27)& (0+255),b
 30840  008240  0EF4               	movlw	244
 30841  008242  6F56               	movwf	(_I2C1_Status+26)& (0+255),b
 30842                           
 30843                           ; BSR set to: 2
 30844                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 30845  008244  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 30846                           
 30847                           ; BSR set to: 2
 30848                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 30849  008246  0E4C               	movlw	low _I2C1_CallbackReturnStop
 30850  008248  6F3C               	movwf	_I2C1_Status& (0+255),b
 30851  00824A  0E9C               	movlw	high _I2C1_CallbackReturnStop
 30852  00824C  6F3D               	movwf	(_I2C1_Status+1)& (0+255),b
 30853                           
 30854                           ; BSR set to: 2
 30855                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 30856  00824E  0E00               	movlw	0
 30857  008250  6F48               	movwf	(_I2C1_Status+12)& (0+255),b
 30858  008252  0E00               	movlw	0
 30859  008254  6F49               	movwf	(_I2C1_Status+13)& (0+255),b
 30860                           
 30861                           ; BSR set to: 2
 30862                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 30863  008256  0E4C               	movlw	low _I2C1_CallbackReturnStop
 30864  008258  6F3E               	movwf	(_I2C1_Status+2)& (0+255),b
 30865  00825A  0E9C               	movlw	high _I2C1_CallbackReturnStop
 30866  00825C  6F3F               	movwf	(_I2C1_Status+3)& (0+255),b
 30867                           
 30868                           ; BSR set to: 2
 30869                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 30870  00825E  0E00               	movlw	0
 30871  008260  6F4A               	movwf	(_I2C1_Status+14)& (0+255),b
 30872  008262  0E00               	movlw	0
 30873  008264  6F4B               	movwf	(_I2C1_Status+15)& (0+255),b
 30874                           
 30875                           ; BSR set to: 2
 30876                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 30877  008266  0E4C               	movlw	low _I2C1_CallbackReturnStop
 30878  008268  6F40               	movwf	(_I2C1_Status+4)& (0+255),b
 30879  00826A  0E9C               	movlw	high _I2C1_CallbackReturnStop
 30880  00826C  6F41               	movwf	(_I2C1_Status+5)& (0+255),b
 30881                           
 30882                           ; BSR set to: 2
 30883                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 30884  00826E  0E00               	movlw	0
 30885  008270  6F4C               	movwf	(_I2C1_Status+16)& (0+255),b
 30886  008272  0E00               	movlw	0
 30887  008274  6F4D               	movwf	(_I2C1_Status+17)& (0+255),b
 30888                           
 30889                           ; BSR set to: 2
 30890                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 30891  008276  0E4C               	movlw	low _I2C1_CallbackReturnStop
 30892  008278  6F42               	movwf	(_I2C1_Status+6)& (0+255),b
 30893  00827A  0E9C               	movlw	high _I2C1_CallbackReturnStop
 30894  00827C  6F43               	movwf	(_I2C1_Status+7)& (0+255),b
 30895                           
 30896                           ; BSR set to: 2
 30897                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 30898  00827E  0E00               	movlw	0
 30899  008280  6F4E               	movwf	(_I2C1_Status+18)& (0+255),b
 30900  008282  0E00               	movlw	0
 30901  008284  6F4F               	movwf	(_I2C1_Status+19)& (0+255),b
 30902                           
 30903                           ; BSR set to: 2
 30904                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 30905  008286  0E48               	movlw	low _I2C1_CallbackReturnReset
 30906  008288  6F44               	movwf	(_I2C1_Status+8)& (0+255),b
 30907  00828A  0E9C               	movlw	high _I2C1_CallbackReturnReset
 30908  00828C  6F45               	movwf	(_I2C1_Status+9)& (0+255),b
 30909                           
 30910                           ; BSR set to: 2
 30911                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 30912  00828E  0E00               	movlw	0
 30913  008290  6F50               	movwf	(_I2C1_Status+20)& (0+255),b
 30914  008292  0E00               	movlw	0
 30915  008294  6F51               	movwf	(_I2C1_Status+21)& (0+255),b
 30916                           
 30917                           ; BSR set to: 2
 30918                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 30919  008296  EC13  F04E         	call	_I2C1_MasterClearIrq	;wreg free
 30920                           
 30921                           ; BSR set to: 14
 30922                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 30923  00829A  EC0D  F04D         	call	_I2C1_MasterOpen	;wreg free
 30924                           
 30925                           ; BSR set to: 14
 30926                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 30927  00829E  0E00               	movlw	0
 30928  0082A0  6E11               	movwf	I2C1_Open@returnValue^0,c
 30929  0082A2                     l20137:
 30930                           
 30931                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 30932  0082A2  5011               	movf	I2C1_Open@returnValue^0,w,c
 30933  0082A4  0012               	return		;funcret
 30934  0082A6                     __end_of_I2C1_Open:
 30935                           	callstack 0
 30936                           
 30937 ;; *************** function _I2C1_MasterOpen *****************
 30938 ;; Defined at:
 30939 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 30940 ;; Parameters:    Size  Location     Type
 30941 ;;		None
 30942 ;; Auto vars:     Size  Location     Type
 30943 ;;		None
 30944 ;; Return value:  Size  Location     Type
 30945 ;;                  1    wreg      _Bool 
 30946 ;; Registers used:
 30947 ;;		wreg, status,2
 30948 ;; Tracked objects:
 30949 ;;		On entry : 3F/E
 30950 ;;		On exit  : 3F/E
 30951 ;;		Unchanged: 3F/0
 30952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30957 ;;Total ram usage:        0 bytes
 30958 ;; Hardware stack levels used: 1
 30959 ;; Hardware stack levels required when called: 4
 30960 ;; This function calls:
 30961 ;;		Nothing
 30962 ;; This function is called by:
 30963 ;;		_I2C1_Open
 30964 ;; This function uses a non-reentrant model
 30965 ;;
 30966                           
 30967                           	psect	text136
 30968  009A1A                     __ptext136:
 30969                           	callstack 0
 30970  009A1A                     _I2C1_MasterOpen:
 30971                           	callstack 20
 30972                           
 30973                           ; BSR set to: 14
 30974                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 30975                           
 30976                           ;incstack = 0
 30977  009A1A  BA96               	btfsc	150,5,c	;volatile
 30978  009A1C  0012               	return	
 30979                           
 30980                           ; BSR set to: 14
 30981                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x80;
 30982  009A1E  0E80               	movlw	128
 30983  009A20  6E95               	movwf	149,c	;volatile
 30984                           
 30985                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 30986  009A22  0E08               	movlw	8
 30987  009A24  6E96               	movwf	150,c	;volatile
 30988                           
 30989                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 30990  009A26  0E00               	movlw	0
 30991  009A28  6E97               	movwf	151,c	;volatile
 30992                           
 30993                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x9F;
 30994  009A2A  0E9F               	movlw	159
 30995  009A2C  6E93               	movwf	147,c	;volatile
 30996                           
 30997                           ; BSR set to: 14
 30998                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 30999  009A2E  8A96               	bsf	150,5,c	;volatile
 31000                           
 31001                           ; BSR set to: 14
 31002  009A30  0012               	return		;funcret
 31003  009A32                     __end_of_I2C1_MasterOpen:
 31004                           	callstack 0
 31005                           
 31006 ;; *************** function _I2C1_MasterWrite *****************
 31007 ;; Defined at:
 31008 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 31009 ;; Parameters:    Size  Location     Type
 31010 ;;		None
 31011 ;; Auto vars:     Size  Location     Type
 31012 ;;		None
 31013 ;; Return value:  Size  Location     Type
 31014 ;;                  1    wreg      enum E355
 31015 ;; Registers used:
 31016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31017 ;; Tracked objects:
 31018 ;;		On entry : 0/2
 31019 ;;		On exit  : 3F/2
 31020 ;;		Unchanged: 0/0
 31021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31026 ;;Total ram usage:        0 bytes
 31027 ;; Hardware stack levels used: 1
 31028 ;; Hardware stack levels required when called: 11
 31029 ;; This function calls:
 31030 ;;		_I2C1_MasterOperation
 31031 ;; This function is called by:
 31032 ;;		_i2c_writeNBytes
 31033 ;;		_i2c_readDataBlock
 31034 ;;		_I2C1_Read1ByteRegister
 31035 ;; This function uses a non-reentrant model
 31036 ;;
 31037                           
 31038                           	psect	text137
 31039  009BB2                     __ptext137:
 31040                           	callstack 0
 31041  009BB2                     _I2C1_MasterWrite:
 31042                           	callstack 14
 31043                           
 31044                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 31045                           
 31046                           ; BSR set to: 14
 31047                           ;incstack = 0
 31048  009BB2  0E00               	movlw	0
 31049  009BB4  ECBB  F04A         	call	_I2C1_MasterOperation
 31050                           
 31051                           ; BSR set to: 2
 31052  009BB8  0012               	return		;funcret
 31053  009BBA                     __end_of_I2C1_MasterWrite:
 31054                           	callstack 0
 31055                           
 31056 ;; *************** function _I2C1_MasterOperation *****************
 31057 ;; Defined at:
 31058 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 31059 ;; Parameters:    Size  Location     Type
 31060 ;;  read            1    wreg     _Bool 
 31061 ;; Auto vars:     Size  Location     Type
 31062 ;;  read            1   31[COMRAM] _Bool 
 31063 ;;  returnValue     1   32[COMRAM] enum E355
 31064 ;; Return value:  Size  Location     Type
 31065 ;;                  1    wreg      enum E355
 31066 ;; Registers used:
 31067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31068 ;; Tracked objects:
 31069 ;;		On entry : 0/2
 31070 ;;		On exit  : 3F/2
 31071 ;;		Unchanged: 0/0
 31072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31074 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31076 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31077 ;;Total ram usage:        2 bytes
 31078 ;; Hardware stack levels used: 1
 31079 ;; Hardware stack levels required when called: 10
 31080 ;; This function calls:
 31081 ;;		_I2C1_MasterStart
 31082 ;;		_I2C1_Poller
 31083 ;; This function is called by:
 31084 ;;		_I2C1_MasterWrite
 31085 ;; This function uses a non-reentrant model
 31086 ;;
 31087                           
 31088                           	psect	text138
 31089  009576                     __ptext138:
 31090                           	callstack 0
 31091  009576                     _I2C1_MasterOperation:
 31092                           	callstack 14
 31093                           
 31094                           ; BSR set to: 2
 31095                           ;incstack = 0
 31096                           ;I2C1_MasterOperation@read stored from wreg
 31097  009576  6E20               	movwf	I2C1_MasterOperation@read^0,c
 31098                           
 31099                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 31100  009578  0E01               	movlw	1
 31101  00957A  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 31102                           
 31103                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 31104  00957C  0102               	movlb	2	; () banked
 31105  00957E  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 31106  009580  D00E               	goto	l20089
 31107                           
 31108                           ; BSR set to: 2
 31109                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 31110  009582  835F               	bsf	(_I2C1_Status+35)& (0+255),1,b
 31111                           
 31112                           ; BSR set to: 2
 31113                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 31114  009584  0E00               	movlw	0
 31115  009586  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 31116                           
 31117                           ; BSR set to: 2
 31118                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 31119  009588  5020               	movf	I2C1_MasterOperation@read^0,w,c
 31120  00958A  B4D8               	btfsc	status,2,c
 31121  00958C  D002               	goto	l20083
 31122                           
 31123                           ; BSR set to: 2
 31124                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 31125  00958E  0E01               	movlw	1
 31126  009590  D001               	goto	L93
 31127  009592                     l20083:
 31128                           
 31129                           ; BSR set to: 2
 31130                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 31131  009592  0E02               	movlw	2
 31132  009594                     L93:
 31133  009594  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31134                           
 31135                           ; BSR set to: 2
 31136                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 31137  009596  EC2C  F04E         	call	_I2C1_MasterStart	;wreg free
 31138                           
 31139                           ; BSR set to: 2
 31140                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 31141  00959A  EC74  F04D         	call	_I2C1_Poller	;wreg free
 31142  00959E                     l20089:
 31143                           
 31144                           ; BSR set to: 2
 31145                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 31146  00959E  5021               	movf	I2C1_MasterOperation@returnValue^0,w,c
 31147                           
 31148                           ; BSR set to: 2
 31149  0095A0  0012               	return		;funcret
 31150  0095A2                     __end_of_I2C1_MasterOperation:
 31151                           	callstack 0
 31152                           
 31153 ;; *************** function _I2C1_Poller *****************
 31154 ;; Defined at:
 31155 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 31156 ;; Parameters:    Size  Location     Type
 31157 ;;		None
 31158 ;; Auto vars:     Size  Location     Type
 31159 ;;		None
 31160 ;; Return value:  Size  Location     Type
 31161 ;;                  1    wreg      void 
 31162 ;; Registers used:
 31163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31164 ;; Tracked objects:
 31165 ;;		On entry : 3F/2
 31166 ;;		On exit  : 3F/2
 31167 ;;		Unchanged: 0/0
 31168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31173 ;;Total ram usage:        0 bytes
 31174 ;; Hardware stack levels used: 1
 31175 ;; Hardware stack levels required when called: 9
 31176 ;; This function calls:
 31177 ;;		_I2C1_MasterFsm
 31178 ;;		_I2C1_MasterWaitForEvent
 31179 ;; This function is called by:
 31180 ;;		_I2C1_MasterOperation
 31181 ;; This function uses a non-reentrant model
 31182 ;;
 31183                           
 31184                           	psect	text139
 31185  009AE8                     __ptext139:
 31186                           	callstack 0
 31187  009AE8                     _I2C1_Poller:
 31188                           	callstack 14
 31189                           
 31190                           ; BSR set to: 2
 31191                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 31192                           
 31193                           ; BSR set to: 2
 31194                           ;incstack = 0
 31195  009AE8  D004               	goto	l20057
 31196  009AEA                     l20053:
 31197                           
 31198                           ; BSR set to: 2
 31199                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 31200  009AEA  ECDD  F04D         	call	_I2C1_MasterWaitForEvent	;wreg free
 31201                           
 31202                           ; BSR set to: 14
 31203                           ;mcc_generated_files/i2c1_master.c: 317:     I2C1_MasterFsm();
 31204  009AEE  EC1E  F047         	call	_I2C1_MasterFsm	;wreg free
 31205  009AF2                     l20057:
 31206                           
 31207                           ; BSR set to: 2
 31208                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 31209  009AF2  A35F               	btfss	(_I2C1_Status+35)& (0+255),1,b
 31210  009AF4  0012               	return	
 31211  009AF6  D7F9               	goto	l20053
 31212  009AF8                     __end_of_I2C1_Poller:
 31213                           	callstack 0
 31214                           
 31215 ;; *************** function _I2C1_MasterWaitForEvent *****************
 31216 ;; Defined at:
 31217 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 31218 ;; Parameters:    Size  Location     Type
 31219 ;;		None
 31220 ;; Auto vars:     Size  Location     Type
 31221 ;;		None
 31222 ;; Return value:  Size  Location     Type
 31223 ;;                  1    wreg      void 
 31224 ;; Registers used:
 31225 ;;		None
 31226 ;; Tracked objects:
 31227 ;;		On entry : 3F/2
 31228 ;;		On exit  : 3F/E
 31229 ;;		Unchanged: 0/0
 31230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31235 ;;Total ram usage:        0 bytes
 31236 ;; Hardware stack levels used: 1
 31237 ;; Hardware stack levels required when called: 4
 31238 ;; This function calls:
 31239 ;;		Nothing
 31240 ;; This function is called by:
 31241 ;;		_I2C1_Poller
 31242 ;; This function uses a non-reentrant model
 31243 ;;
 31244                           
 31245                           	psect	text140
 31246  009BBA                     __ptext140:
 31247                           	callstack 0
 31248  009BBA                     _I2C1_MasterWaitForEvent:
 31249                           	callstack 18
 31250                           
 31251                           ; BSR set to: 2
 31252                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 31253                           
 31254                           ; BSR set to: 2
 31255                           ;incstack = 0
 31256                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 31257  009BBA  010E               	movlb	14	; () banked
 31258  009BBC  B1CD               	btfsc	205,0,b	;volatile
 31259  009BBE  0012               	return	
 31260  009BC0  D7FC               	goto	__ptext140
 31261  009BC2                     __end_of_I2C1_MasterWaitForEvent:
 31262                           	callstack 0
 31263                           
 31264 ;; *************** function _I2C1_MasterFsm *****************
 31265 ;; Defined at:
 31266 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 31267 ;; Parameters:    Size  Location     Type
 31268 ;;		None
 31269 ;; Auto vars:     Size  Location     Type
 31270 ;;		None
 31271 ;; Return value:  Size  Location     Type
 31272 ;;                  1    wreg      void 
 31273 ;; Registers used:
 31274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31275 ;; Tracked objects:
 31276 ;;		On entry : 3F/E
 31277 ;;		On exit  : 3F/2
 31278 ;;		Unchanged: 0/0
 31279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31282 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31283 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31284 ;;Total ram usage:        3 bytes
 31285 ;; Hardware stack levels used: 1
 31286 ;; Hardware stack levels required when called: 8
 31287 ;; This function calls:
 31288 ;;		_I2C1_DO_ADDRESS_NACK
 31289 ;;		_I2C1_DO_IDLE
 31290 ;;		_I2C1_DO_RCEN
 31291 ;;		_I2C1_DO_RESET
 31292 ;;		_I2C1_DO_RX
 31293 ;;		_I2C1_DO_RX_ACK
 31294 ;;		_I2C1_DO_RX_NACK_RESTART
 31295 ;;		_I2C1_DO_RX_NACK_STOP
 31296 ;;		_I2C1_DO_SEND_ADR_READ
 31297 ;;		_I2C1_DO_SEND_ADR_WRITE
 31298 ;;		_I2C1_DO_SEND_RESTART
 31299 ;;		_I2C1_DO_SEND_RESTART_READ
 31300 ;;		_I2C1_DO_SEND_RESTART_WRITE
 31301 ;;		_I2C1_DO_SEND_STOP
 31302 ;;		_I2C1_DO_TX
 31303 ;;		_I2C1_DO_TX_EMPTY
 31304 ;;		_I2C1_MasterClearIrq
 31305 ;;		_I2C1_MasterIsNack
 31306 ;; This function is called by:
 31307 ;;		_I2C1_Poller
 31308 ;; This function uses a non-reentrant model
 31309 ;;
 31310                           
 31311                           	psect	text141
 31312  008E3C                     __ptext141:
 31313                           	callstack 0
 31314  008E3C                     _I2C1_MasterFsm:
 31315                           	callstack 14
 31316                           
 31317                           ; BSR set to: 14
 31318                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 31319                           
 31320                           ; BSR set to: 14
 31321                           ;incstack = 0
 31322  008E3C  EC13  F04E         	call	_I2C1_MasterClearIrq	;wreg free
 31323                           
 31324                           ; BSR set to: 14
 31325                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 31326  008E40  0102               	movlb	2	; () banked
 31327  008E42  A15F               	btfss	(_I2C1_Status+35)& (0+255),0,b
 31328  008E44  D007               	goto	l20047
 31329                           
 31330                           ; BSR set to: 2
 31331  008E46  EC91  F04D         	call	_I2C1_MasterIsNack	;wreg free
 31332  008E4A  0900               	iorlw	0
 31333  008E4C  B4D8               	btfsc	status,2,c
 31334  008E4E  D002               	goto	l20047
 31335                           
 31336                           ; BSR set to: 2
 31337                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 31338  008E50  0E0F               	movlw	15
 31339  008E52  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31340  008E54                     l20047:
 31341                           
 31342                           ; BSR set to: 2
 31343                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 31344  008E54  515D               	movf	(_I2C1_Status+33)& (0+255),w,b
 31345  008E56  0D02               	mullw	2
 31346  008E58  50F3               	movf	243,w,c
 31347  008E5A  0F01               	addlw	low _i2c1_fsmStateTable
 31348  008E5C  6E1D               	movwf	??_I2C1_MasterFsm^0,c
 31349  008E5E  C01D  FFF6         	movff	??_I2C1_MasterFsm,tblptrl
 31350  008E62                     	if	1	;There is more than 1 active tblptr byte
 31351  008E62  0E0F               	movlw	high __smallconst
 31352  008E64  6EF7               	movwf	tblptrh,c
 31353  008E66                     	endif
 31354  008E66                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 31355  008E66  6AF8               	clrf	tblptru,c
 31356  008E68                     	endif
 31357  008E68                     	if	0	;tblptru may be non-zero
 31358  008E68                     	endif
 31359  008E68  0009               	tblrd		*+
 31360  008E6A  CFF5 F01E          	movff	tablat,??_I2C1_MasterFsm+1
 31361  008E6E  0009               	tblrd		*+
 31362  008E70  CFF5 F01F          	movff	tablat,??_I2C1_MasterFsm+2
 31363  008E74  D801               	call	u23388
 31364  008E76  D009               	goto	u23389
 31365  008E78                     u23388:
 31366  008E78  0005               	push	
 31367  008E7A  6EFA               	movwf	pclath,c
 31368  008E7C  501E               	movf	(??_I2C1_MasterFsm+1)^0,w,c
 31369  008E7E  6EFD               	movwf	tosl,c
 31370  008E80  501F               	movf	(??_I2C1_MasterFsm+2)^0,w,c
 31371  008E82  6EFE               	movwf	tosh,c
 31372  008E84  6AFF               	clrf	tosu,c
 31373  008E86  50FA               	movf	pclath,w,c
 31374  008E88  0012               	return		;indir
 31375  008E8A                     u23389:
 31376  008E8A  0102               	movlb	2	; () banked
 31377  008E8C  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31378                           
 31379                           ; BSR set to: 2
 31380  008E8E  0012               	return		;funcret
 31381  008E90                     __end_of_I2C1_MasterFsm:
 31382                           	callstack 0
 31383                           
 31384 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 31385 ;; Defined at:
 31386 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 31387 ;; Parameters:    Size  Location     Type
 31388 ;;		None
 31389 ;; Auto vars:     Size  Location     Type
 31390 ;;		None
 31391 ;; Return value:  Size  Location     Type
 31392 ;;                  1    wreg      enum E10442
 31393 ;; Registers used:
 31394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 31395 ;; Tracked objects:
 31396 ;;		On entry : 3F/2
 31397 ;;		On exit  : 0/0
 31398 ;;		Unchanged: 0/0
 31399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31402 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31403 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31404 ;;Total ram usage:        2 bytes
 31405 ;; Hardware stack levels used: 1
 31406 ;; Hardware stack levels required when called: 7
 31407 ;; This function calls:
 31408 ;;		Absolute function
 31409 ;;		_I2C1_CallbackReturnReset
 31410 ;;		_I2C1_CallbackReturnStop
 31411 ;;		_I2C1_DO_SEND_RESTART
 31412 ;;		_I2C1_DO_SEND_STOP
 31413 ;;		_rd1RegCompleteHandler
 31414 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 31415 ;;		_rd2RegCompleteHandler
 31416 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 31417 ;;		_rdBlkRegCompleteHandler
 31418 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 31419 ;;		_wr1RegCompleteHandler
 31420 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 31421 ;;		_wr2RegCompleteHandler
 31422 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 31423 ;; This function is called by:
 31424 ;;		_I2C1_MasterFsm
 31425 ;; This function uses a non-reentrant model
 31426 ;;
 31427                           
 31428                           	psect	text142
 31429  008FD0                     __ptext142:
 31430                           	callstack 0
 31431  008FD0                     _I2C1_DO_ADDRESS_NACK:
 31432                           	callstack 14
 31433                           
 31434                           ; BSR set to: 2
 31435                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 31436                           
 31437                           ; BSR set to: 2
 31438                           ;incstack = 0
 31439  008FD0  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 31440                           
 31441                           ; BSR set to: 2
 31442                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 31443  008FD2  0E02               	movlw	2
 31444  008FD4  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 31445                           
 31446                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 31447  008FD6  D006               	goto	l20031
 31448  008FD8                     l20021:
 31449                           
 31450                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 31451  008FD8  ECF1  F04D         	call	_I2C1_DO_SEND_RESTART	;wreg free
 31452  008FDC  0012               	return	
 31453  008FDE                     l20025:
 31454                           
 31455                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 31456  008FDE  ECED  F04D         	call	_I2C1_DO_SEND_STOP	;wreg free
 31457  008FE2  0012               	return	
 31458  008FE4                     l20031:
 31459                           
 31460                           ; BSR set to: 2
 31461  008FE4  C24C  F019         	movff	_I2C1_Status+16,I2C1_CallbackReturnReset@funPtr
 31462  008FE8  C24D  F01A         	movff	_I2C1_Status+17,I2C1_CallbackReturnReset@funPtr+1
 31463  008FEC  D801               	call	u23348
 31464  008FEE  D009               	goto	u23349
 31465  008FF0                     u23348:
 31466  008FF0  0005               	push	
 31467  008FF2  6EFA               	movwf	pclath,c
 31468  008FF4  5140               	movf	(_I2C1_Status+4)& (0+255),w,b
 31469  008FF6  6EFD               	movwf	tosl,c
 31470  008FF8  5141               	movf	(_I2C1_Status+5)& (0+255),w,b
 31471  008FFA  6EFE               	movwf	tosh,c
 31472  008FFC  6AFF               	clrf	tosu,c
 31473  008FFE  50FA               	movf	pclath,w,c
 31474  009000  0012               	return		;indir
 31475  009002                     u23349:
 31476  009002  6E1B               	movwf	??_I2C1_DO_ADDRESS_NACK^0,c
 31477  009004  6A1C               	clrf	(??_I2C1_DO_ADDRESS_NACK+1)^0,c
 31478                           
 31479                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31480                           ; Switch size 1, requested type "simple"
 31481                           ; Number of cases is 1, Range of values is 0 to 0
 31482                           ; switch strategies available:
 31483                           ; Name         Instructions Cycles
 31484                           ; simple_byte            4     3 (average)
 31485                           ;	Chosen strategy is simple_byte
 31486  009006  501C               	movf	(??_I2C1_DO_ADDRESS_NACK+1)^0,w,c
 31487  009008  0A00               	xorlw	0	; case 0
 31488  00900A  A4D8               	btfss	status,2,c
 31489  00900C  D7E8               	goto	l20025
 31490                           
 31491                           ; Switch size 1, requested type "simple"
 31492                           ; Number of cases is 2, Range of values is 2 to 3
 31493                           ; switch strategies available:
 31494                           ; Name         Instructions Cycles
 31495                           ; simple_byte            7     4 (average)
 31496                           ;	Chosen strategy is simple_byte
 31497  00900E  501B               	movf	??_I2C1_DO_ADDRESS_NACK^0,w,c
 31498  009010  0A02               	xorlw	2	; case 2
 31499  009012  B4D8               	btfsc	status,2,c
 31500  009014  D7E1               	goto	l20021
 31501  009016  0A01               	xorlw	1	; case 3
 31502  009018  B4D8               	btfsc	status,2,c
 31503  00901A  D7DE               	goto	l20021
 31504  00901C  D7E0               	goto	l20025
 31505  00901E                     __end_of_I2C1_DO_ADDRESS_NACK:
 31506                           	callstack 0
 31507                           
 31508 ;; *************** function _I2C1_DO_RESET *****************
 31509 ;; Defined at:
 31510 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 31511 ;; Parameters:    Size  Location     Type
 31512 ;;		None
 31513 ;; Auto vars:     Size  Location     Type
 31514 ;;		None
 31515 ;; Return value:  Size  Location     Type
 31516 ;;                  1    wreg      enum E10442
 31517 ;; Registers used:
 31518 ;;		wreg, status,2
 31519 ;; Tracked objects:
 31520 ;;		On entry : 3F/2
 31521 ;;		On exit  : 3F/2
 31522 ;;		Unchanged: 0/0
 31523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31528 ;;Total ram usage:        0 bytes
 31529 ;; Hardware stack levels used: 1
 31530 ;; Hardware stack levels required when called: 4
 31531 ;; This function calls:
 31532 ;;		Nothing
 31533 ;; This function is called by:
 31534 ;;		_I2C1_MasterFsm
 31535 ;; This function uses a non-reentrant model
 31536 ;;
 31537                           
 31538                           	psect	text143
 31539  009B94                     __ptext143:
 31540                           	callstack 0
 31541  009B94                     _I2C1_DO_RESET:
 31542                           	callstack 17
 31543                           
 31544                           ; BSR set to: 2
 31545                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 31546                           
 31547                           ;incstack = 0
 31548  009B94  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 31549                           
 31550                           ; BSR set to: 2
 31551                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 31552  009B96  0E00               	movlw	0
 31553  009B98  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 31554                           
 31555                           ; BSR set to: 2
 31556                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 31557  009B9A  0E0E               	movlw	14
 31558                           
 31559                           ; BSR set to: 2
 31560  009B9C  0012               	return		;funcret
 31561  009B9E                     __end_of_I2C1_DO_RESET:
 31562                           	callstack 0
 31563                           
 31564 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 31565 ;; Defined at:
 31566 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 31567 ;; Parameters:    Size  Location     Type
 31568 ;;		None
 31569 ;; Auto vars:     Size  Location     Type
 31570 ;;		None
 31571 ;; Return value:  Size  Location     Type
 31572 ;;                  1    wreg      enum E10442
 31573 ;; Registers used:
 31574 ;;		wreg, cstack
 31575 ;; Tracked objects:
 31576 ;;		On entry : 0/2
 31577 ;;		On exit  : 0/0
 31578 ;;		Unchanged: 0/0
 31579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31584 ;;Total ram usage:        0 bytes
 31585 ;; Hardware stack levels used: 1
 31586 ;; Hardware stack levels required when called: 5
 31587 ;; This function calls:
 31588 ;;		_I2C1_MasterSendNack
 31589 ;; This function is called by:
 31590 ;;		_I2C1_DO_RX
 31591 ;;		_I2C1_MasterFsm
 31592 ;; This function uses a non-reentrant model
 31593 ;;
 31594                           
 31595                           	psect	text144
 31596  009BC2                     __ptext144:
 31597                           	callstack 0
 31598  009BC2                     _I2C1_DO_RX_NACK_RESTART:
 31599                           	callstack 16
 31600                           
 31601                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 31602                           
 31603                           ; BSR set to: 2
 31604                           ;incstack = 0
 31605  009BC2  EC10  F04E         	call	_I2C1_MasterSendNack	;wreg free
 31606                           
 31607                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 31608  009BC6  0E09               	movlw	9
 31609  009BC8  0012               	return		;funcret
 31610  009BCA                     __end_of_I2C1_DO_RX_NACK_RESTART:
 31611                           	callstack 0
 31612                           
 31613 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 31614 ;; Defined at:
 31615 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 31616 ;; Parameters:    Size  Location     Type
 31617 ;;		None
 31618 ;; Auto vars:     Size  Location     Type
 31619 ;;		None
 31620 ;; Return value:  Size  Location     Type
 31621 ;;                  1    wreg      enum E10442
 31622 ;; Registers used:
 31623 ;;		wreg, cstack
 31624 ;; Tracked objects:
 31625 ;;		On entry : 0/2
 31626 ;;		On exit  : 0/0
 31627 ;;		Unchanged: 0/0
 31628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31633 ;;Total ram usage:        0 bytes
 31634 ;; Hardware stack levels used: 1
 31635 ;; Hardware stack levels required when called: 5
 31636 ;; This function calls:
 31637 ;;		_I2C1_MasterSendNack
 31638 ;; This function is called by:
 31639 ;;		_I2C1_DO_RX
 31640 ;;		_I2C1_MasterFsm
 31641 ;; This function uses a non-reentrant model
 31642 ;;
 31643                           
 31644                           	psect	text145
 31645  009BCA                     __ptext145:
 31646                           	callstack 0
 31647  009BCA                     _I2C1_DO_RX_NACK_STOP:
 31648                           	callstack 16
 31649                           
 31650                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 31651                           
 31652                           ;incstack = 0
 31653  009BCA  EC10  F04E         	call	_I2C1_MasterSendNack	;wreg free
 31654                           
 31655                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 31656  009BCE  0E0A               	movlw	10
 31657  009BD0  0012               	return		;funcret
 31658  009BD2                     __end_of_I2C1_DO_RX_NACK_STOP:
 31659                           	callstack 0
 31660                           
 31661 ;; *************** function _I2C1_DO_RX_ACK *****************
 31662 ;; Defined at:
 31663 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 31664 ;; Parameters:    Size  Location     Type
 31665 ;;		None
 31666 ;; Auto vars:     Size  Location     Type
 31667 ;;		None
 31668 ;; Return value:  Size  Location     Type
 31669 ;;                  1    wreg      enum E10442
 31670 ;; Registers used:
 31671 ;;		wreg, cstack
 31672 ;; Tracked objects:
 31673 ;;		On entry : 3F/2
 31674 ;;		On exit  : 3F/2
 31675 ;;		Unchanged: 3F/0
 31676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31681 ;;Total ram usage:        0 bytes
 31682 ;; Hardware stack levels used: 1
 31683 ;; Hardware stack levels required when called: 5
 31684 ;; This function calls:
 31685 ;;		_I2C1_MasterSendAck
 31686 ;; This function is called by:
 31687 ;;		_I2C1_MasterFsm
 31688 ;; This function uses a non-reentrant model
 31689 ;;
 31690                           
 31691                           	psect	text146
 31692  009BD2                     __ptext146:
 31693                           	callstack 0
 31694  009BD2                     _I2C1_DO_RX_ACK:
 31695                           	callstack 16
 31696                           
 31697                           ; BSR set to: 2
 31698                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 31699                           
 31700                           ;incstack = 0
 31701  009BD2  EC0D  F04E         	call	_I2C1_MasterSendAck	;wreg free
 31702                           
 31703                           ; BSR set to: 2
 31704                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 31705  009BD6  0E05               	movlw	5
 31706                           
 31707                           ; BSR set to: 2
 31708  009BD8  0012               	return		;funcret
 31709  009BDA                     __end_of_I2C1_DO_RX_ACK:
 31710                           	callstack 0
 31711                           
 31712 ;; *************** function _I2C1_DO_SEND_STOP *****************
 31713 ;; Defined at:
 31714 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 31715 ;; Parameters:    Size  Location     Type
 31716 ;;		None
 31717 ;; Auto vars:     Size  Location     Type
 31718 ;;		None
 31719 ;; Return value:  Size  Location     Type
 31720 ;;                  1    wreg      enum E10442
 31721 ;; Registers used:
 31722 ;;		wreg, cstack
 31723 ;; Tracked objects:
 31724 ;;		On entry : 0/2
 31725 ;;		On exit  : 0/0
 31726 ;;		Unchanged: 0/0
 31727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31732 ;;Total ram usage:        0 bytes
 31733 ;; Hardware stack levels used: 1
 31734 ;; Hardware stack levels required when called: 5
 31735 ;; This function calls:
 31736 ;;		_I2C1_MasterStop
 31737 ;; This function is called by:
 31738 ;;		_I2C1_DO_TX
 31739 ;;		_I2C1_DO_TX_EMPTY
 31740 ;;		_I2C1_DO_ADDRESS_NACK
 31741 ;;		_I2C1_MasterFsm
 31742 ;; This function uses a non-reentrant model
 31743 ;;
 31744                           
 31745                           	psect	text147
 31746  009BDA                     __ptext147:
 31747                           	callstack 0
 31748  009BDA                     _I2C1_DO_SEND_STOP:
 31749                           	callstack 15
 31750                           
 31751                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 31752                           
 31753                           ; BSR set to: 2
 31754                           ;incstack = 0
 31755  009BDA  EC28  F04E         	call	_I2C1_MasterStop	;wreg free
 31756                           
 31757                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 31758  009BDE  0E00               	movlw	0
 31759  009BE0  0012               	return		;funcret
 31760  009BE2                     __end_of_I2C1_DO_SEND_STOP:
 31761                           	callstack 0
 31762                           
 31763 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 31764 ;; Defined at:
 31765 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 31766 ;; Parameters:    Size  Location     Type
 31767 ;;		None
 31768 ;; Auto vars:     Size  Location     Type
 31769 ;;		None
 31770 ;; Return value:  Size  Location     Type
 31771 ;;                  1    wreg      enum E10442
 31772 ;; Registers used:
 31773 ;;		wreg, cstack
 31774 ;; Tracked objects:
 31775 ;;		On entry : 0/2
 31776 ;;		On exit  : 0/0
 31777 ;;		Unchanged: 0/0
 31778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31783 ;;Total ram usage:        0 bytes
 31784 ;; Hardware stack levels used: 1
 31785 ;; Hardware stack levels required when called: 5
 31786 ;; This function calls:
 31787 ;;		_I2C1_MasterEnableRestart
 31788 ;; This function is called by:
 31789 ;;		_I2C1_DO_TX_EMPTY
 31790 ;;		_I2C1_DO_ADDRESS_NACK
 31791 ;;		_I2C1_MasterFsm
 31792 ;; This function uses a non-reentrant model
 31793 ;;
 31794                           
 31795                           	psect	text148
 31796  009BE2                     __ptext148:
 31797                           	callstack 0
 31798  009BE2                     _I2C1_DO_SEND_RESTART:
 31799                           	callstack 15
 31800                           
 31801                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 31802                           
 31803                           ;incstack = 0
 31804  009BE2  EC2A  F04E         	call	_I2C1_MasterEnableRestart	;wreg free
 31805                           
 31806                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 31807  009BE6  0E01               	movlw	1
 31808  009BE8  0012               	return		;funcret
 31809  009BEA                     __end_of_I2C1_DO_SEND_RESTART:
 31810                           	callstack 0
 31811                           
 31812 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 31813 ;; Defined at:
 31814 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 31815 ;; Parameters:    Size  Location     Type
 31816 ;;		None
 31817 ;; Auto vars:     Size  Location     Type
 31818 ;;		None
 31819 ;; Return value:  Size  Location     Type
 31820 ;;                  1    wreg      enum E10442
 31821 ;; Registers used:
 31822 ;;		wreg, cstack
 31823 ;; Tracked objects:
 31824 ;;		On entry : 0/2
 31825 ;;		On exit  : 0/0
 31826 ;;		Unchanged: 0/0
 31827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31832 ;;Total ram usage:        0 bytes
 31833 ;; Hardware stack levels used: 1
 31834 ;; Hardware stack levels required when called: 5
 31835 ;; This function calls:
 31836 ;;		_I2C1_MasterEnableRestart
 31837 ;; This function is called by:
 31838 ;;		_I2C1_DO_TX
 31839 ;;		_I2C1_MasterFsm
 31840 ;; This function uses a non-reentrant model
 31841 ;;
 31842                           
 31843                           	psect	text149
 31844  009BEA                     __ptext149:
 31845                           	callstack 0
 31846  009BEA                     _I2C1_DO_SEND_RESTART_WRITE:
 31847                           	callstack 15
 31848                           
 31849                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 31850                           
 31851                           ;incstack = 0
 31852  009BEA  EC2A  F04E         	call	_I2C1_MasterEnableRestart	;wreg free
 31853                           
 31854                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 31855  009BEE  0E02               	movlw	2
 31856  009BF0  0012               	return		;funcret
 31857  009BF2                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 31858                           	callstack 0
 31859                           
 31860 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 31861 ;; Defined at:
 31862 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 31863 ;; Parameters:    Size  Location     Type
 31864 ;;		None
 31865 ;; Auto vars:     Size  Location     Type
 31866 ;;		None
 31867 ;; Return value:  Size  Location     Type
 31868 ;;                  1    wreg      enum E10442
 31869 ;; Registers used:
 31870 ;;		wreg, cstack
 31871 ;; Tracked objects:
 31872 ;;		On entry : 0/2
 31873 ;;		On exit  : 0/0
 31874 ;;		Unchanged: 0/0
 31875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31880 ;;Total ram usage:        0 bytes
 31881 ;; Hardware stack levels used: 1
 31882 ;; Hardware stack levels required when called: 5
 31883 ;; This function calls:
 31884 ;;		_I2C1_MasterEnableRestart
 31885 ;; This function is called by:
 31886 ;;		_I2C1_DO_TX
 31887 ;;		_I2C1_MasterFsm
 31888 ;; This function uses a non-reentrant model
 31889 ;;
 31890                           
 31891                           	psect	text150
 31892  009BF2                     __ptext150:
 31893                           	callstack 0
 31894  009BF2                     _I2C1_DO_SEND_RESTART_READ:
 31895                           	callstack 15
 31896                           
 31897                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 31898                           
 31899                           ;incstack = 0
 31900  009BF2  EC2A  F04E         	call	_I2C1_MasterEnableRestart	;wreg free
 31901                           
 31902                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 31903  009BF6  0E01               	movlw	1
 31904  009BF8  0012               	return		;funcret
 31905  009BFA                     __end_of_I2C1_DO_SEND_RESTART_READ:
 31906                           	callstack 0
 31907                           
 31908 ;; *************** function _I2C1_DO_RCEN *****************
 31909 ;; Defined at:
 31910 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 31911 ;; Parameters:    Size  Location     Type
 31912 ;;		None
 31913 ;; Auto vars:     Size  Location     Type
 31914 ;;		None
 31915 ;; Return value:  Size  Location     Type
 31916 ;;                  1    wreg      enum E10442
 31917 ;; Registers used:
 31918 ;;		wreg, cstack
 31919 ;; Tracked objects:
 31920 ;;		On entry : 3F/2
 31921 ;;		On exit  : 3F/2
 31922 ;;		Unchanged: 0/0
 31923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31928 ;;Total ram usage:        0 bytes
 31929 ;; Hardware stack levels used: 1
 31930 ;; Hardware stack levels required when called: 5
 31931 ;; This function calls:
 31932 ;;		_I2C1_MasterStartRx
 31933 ;; This function is called by:
 31934 ;;		_I2C1_MasterFsm
 31935 ;; This function uses a non-reentrant model
 31936 ;;
 31937                           
 31938                           	psect	text151
 31939  009B9E                     __ptext151:
 31940                           	callstack 0
 31941  009B9E                     _I2C1_DO_RCEN:
 31942                           	callstack 16
 31943                           
 31944                           ; BSR set to: 2
 31945                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 31946                           
 31947                           ;incstack = 0
 31948  009B9E  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 31949                           
 31950                           ; BSR set to: 2
 31951                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 31952  009BA0  EC22  F04E         	call	_I2C1_MasterStartRx	;wreg free
 31953                           
 31954                           ; BSR set to: 2
 31955                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 31956  009BA4  0E04               	movlw	4
 31957                           
 31958                           ; BSR set to: 2
 31959  009BA6  0012               	return		;funcret
 31960  009BA8                     __end_of_I2C1_DO_RCEN:
 31961                           	callstack 0
 31962                           
 31963 ;; *************** function _I2C1_DO_RX *****************
 31964 ;; Defined at:
 31965 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 31966 ;; Parameters:    Size  Location     Type
 31967 ;;		None
 31968 ;; Auto vars:     Size  Location     Type
 31969 ;;		None
 31970 ;; Return value:  Size  Location     Type
 31971 ;;                  1    wreg      enum E10442
 31972 ;; Registers used:
 31973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 31974 ;; Tracked objects:
 31975 ;;		On entry : 3F/2
 31976 ;;		On exit  : 0/0
 31977 ;;		Unchanged: 0/0
 31978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31981 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31982 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31983 ;;Total ram usage:        2 bytes
 31984 ;; Hardware stack levels used: 1
 31985 ;; Hardware stack levels required when called: 7
 31986 ;; This function calls:
 31987 ;;		Absolute function
 31988 ;;		_I2C1_CallbackReturnReset
 31989 ;;		_I2C1_CallbackReturnStop
 31990 ;;		_I2C1_DO_RX_NACK_RESTART
 31991 ;;		_I2C1_DO_RX_NACK_STOP
 31992 ;;		_I2C1_MasterGetRxData
 31993 ;;		_I2C1_MasterSendAck
 31994 ;;		_rd1RegCompleteHandler
 31995 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 31996 ;;		_rd2RegCompleteHandler
 31997 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 31998 ;;		_rdBlkRegCompleteHandler
 31999 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32000 ;;		_wr1RegCompleteHandler
 32001 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32002 ;;		_wr2RegCompleteHandler
 32003 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32004 ;; This function is called by:
 32005 ;;		_I2C1_MasterFsm
 32006 ;; This function uses a non-reentrant model
 32007 ;;
 32008                           
 32009                           	psect	text152
 32010  0084A2                     __ptext152:
 32011                           	callstack 0
 32012  0084A2                     _I2C1_DO_RX:
 32013                           	callstack 14
 32014                           
 32015                           ; BSR set to: 2
 32016                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 32017                           
 32018                           ; BSR set to: 2
 32019                           ;incstack = 0
 32020  0084A2  EC20  F04E         	call	_I2C1_MasterGetRxData	;wreg free
 32021  0084A6  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 32022  0084AA  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 32023  0084AE  6EDF               	movwf	indf2,c
 32024                           
 32025                           ; BSR set to: 2
 32026  0084B0  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 32027  0084B2  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 32028                           
 32029                           ; BSR set to: 2
 32030                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 32031  0084B4  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 32032  0084B6  A0D8               	btfss	status,0,c
 32033  0084B8  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 32034  0084BA  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 32035  0084BC  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 32036  0084BE  B4D8               	btfsc	status,2,c
 32037  0084C0  D004               	goto	l690
 32038                           
 32039                           ; BSR set to: 2
 32040                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 32041  0084C2  EC0D  F04E         	call	_I2C1_MasterSendAck	;wreg free
 32042                           
 32043                           ; BSR set to: 2
 32044                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 32045  0084C6  0E05               	movlw	5
 32046  0084C8  0012               	return	
 32047  0084CA                     l690:
 32048                           
 32049                           ; BSR set to: 2
 32050                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 32051  0084CA  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 32052                           
 32053                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 32054  0084CC  D006               	goto	l19965
 32055  0084CE                     l19955:
 32056                           
 32057                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 32058  0084CE  ECE1  F04D         	call	_I2C1_DO_RX_NACK_RESTART	;wreg free
 32059  0084D2  0012               	return	
 32060  0084D4                     l19959:
 32061                           
 32062                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 32063  0084D4  ECE5  F04D         	call	_I2C1_DO_RX_NACK_STOP	;wreg free
 32064  0084D8  0012               	return	
 32065  0084DA                     l19965:
 32066                           
 32067                           ; BSR set to: 2
 32068  0084DA  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 32069  0084DE  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 32070  0084E2  D801               	call	u23328
 32071  0084E4  D009               	goto	u23329
 32072  0084E6                     u23328:
 32073  0084E6  0005               	push	
 32074  0084E8  6EFA               	movwf	pclath,c
 32075  0084EA  513C               	movf	_I2C1_Status& (0+255),w,b
 32076  0084EC  6EFD               	movwf	tosl,c
 32077  0084EE  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 32078  0084F0  6EFE               	movwf	tosh,c
 32079  0084F2  6AFF               	clrf	tosu,c
 32080  0084F4  50FA               	movf	pclath,w,c
 32081  0084F6  0012               	return		;indir
 32082  0084F8                     u23329:
 32083  0084F8  6E1B               	movwf	??_I2C1_DO_RX^0,c
 32084  0084FA  6A1C               	clrf	(??_I2C1_DO_RX+1)^0,c
 32085                           
 32086                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32087                           ; Switch size 1, requested type "simple"
 32088                           ; Number of cases is 1, Range of values is 0 to 0
 32089                           ; switch strategies available:
 32090                           ; Name         Instructions Cycles
 32091                           ; simple_byte            4     3 (average)
 32092                           ;	Chosen strategy is simple_byte
 32093  0084FC  501C               	movf	(??_I2C1_DO_RX+1)^0,w,c
 32094  0084FE  0A00               	xorlw	0	; case 0
 32095  008500  A4D8               	btfss	status,2,c
 32096  008502  D7E8               	goto	l19959
 32097                           
 32098                           ; Switch size 1, requested type "simple"
 32099                           ; Number of cases is 4, Range of values is 1 to 4
 32100                           ; switch strategies available:
 32101                           ; Name         Instructions Cycles
 32102                           ; simple_byte           13     7 (average)
 32103                           ;	Chosen strategy is simple_byte
 32104  008504  501B               	movf	??_I2C1_DO_RX^0,w,c
 32105  008506  0A01               	xorlw	1	; case 1
 32106  008508  B4D8               	btfsc	status,2,c
 32107  00850A  D7E4               	goto	l19959
 32108  00850C  0A03               	xorlw	3	; case 2
 32109  00850E  B4D8               	btfsc	status,2,c
 32110  008510  D7DE               	goto	l19955
 32111  008512  0A01               	xorlw	1	; case 3
 32112  008514  B4D8               	btfsc	status,2,c
 32113  008516  D7DB               	goto	l19955
 32114  008518  0A07               	xorlw	7	; case 4
 32115  00851A  D7DC               	goto	l19959
 32116  00851C                     __end_of_I2C1_DO_RX:
 32117                           	callstack 0
 32118                           
 32119 ;; *************** function _I2C1_DO_TX *****************
 32120 ;; Defined at:
 32121 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 32122 ;; Parameters:    Size  Location     Type
 32123 ;;		None
 32124 ;; Auto vars:     Size  Location     Type
 32125 ;;		None
 32126 ;; Return value:  Size  Location     Type
 32127 ;;                  1    wreg      enum E10442
 32128 ;; Registers used:
 32129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32130 ;; Tracked objects:
 32131 ;;		On entry : 3F/2
 32132 ;;		On exit  : 0/0
 32133 ;;		Unchanged: 0/0
 32134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32137 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32138 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32139 ;;Total ram usage:        2 bytes
 32140 ;; Hardware stack levels used: 1
 32141 ;; Hardware stack levels required when called: 7
 32142 ;; This function calls:
 32143 ;;		Absolute function
 32144 ;;		_I2C1_CallbackReturnReset
 32145 ;;		_I2C1_CallbackReturnStop
 32146 ;;		_I2C1_DO_SEND_RESTART_READ
 32147 ;;		_I2C1_DO_SEND_RESTART_WRITE
 32148 ;;		_I2C1_DO_SEND_STOP
 32149 ;;		_I2C1_MasterIsNack
 32150 ;;		_I2C1_MasterSendTxData
 32151 ;;		_rd1RegCompleteHandler
 32152 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32153 ;;		_rd2RegCompleteHandler
 32154 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32155 ;;		_rdBlkRegCompleteHandler
 32156 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32157 ;;		_wr1RegCompleteHandler
 32158 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32159 ;;		_wr2RegCompleteHandler
 32160 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32161 ;; This function is called by:
 32162 ;;		_I2C1_MasterFsm
 32163 ;; This function uses a non-reentrant model
 32164 ;;
 32165                           
 32166                           	psect	text153
 32167  008004                     __ptext153:
 32168                           	callstack 0
 32169  008004                     _I2C1_DO_TX:
 32170                           	callstack 14
 32171                           
 32172                           ; BSR set to: 2
 32173                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 32174                           
 32175                           ;incstack = 0
 32176  008004  EC91  F04D         	call	_I2C1_MasterIsNack	;wreg free
 32177  008008  0900               	iorlw	0
 32178  00800A  A4D8               	btfss	status,2,c
 32179  00800C  D00A               	goto	l19925
 32180  00800E  D02A               	goto	l674
 32181  008010                     l19911:
 32182                           
 32183                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 32184  008010  ECF9  F04D         	call	_I2C1_DO_SEND_RESTART_READ	;wreg free
 32185  008014  0012               	return	
 32186  008016                     l19915:
 32187                           
 32188                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 32189  008016  ECF5  F04D         	call	_I2C1_DO_SEND_RESTART_WRITE	;wreg free
 32190  00801A  0012               	return	
 32191  00801C                     l19919:
 32192                           
 32193                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 32194  00801C  ECED  F04D         	call	_I2C1_DO_SEND_STOP	;wreg free
 32195  008020  0012               	return	
 32196  008022                     l19925:
 32197                           
 32198                           ; BSR set to: 2
 32199  008022  C24E  F019         	movff	_I2C1_Status+18,I2C1_CallbackReturnReset@funPtr
 32200  008026  C24F  F01A         	movff	_I2C1_Status+19,I2C1_CallbackReturnReset@funPtr+1
 32201  00802A  D801               	call	u23298
 32202  00802C  D009               	goto	u23299
 32203  00802E                     u23298:
 32204  00802E  0005               	push	
 32205  008030  6EFA               	movwf	pclath,c
 32206  008032  5142               	movf	(_I2C1_Status+6)& (0+255),w,b
 32207  008034  6EFD               	movwf	tosl,c
 32208  008036  5143               	movf	(_I2C1_Status+7)& (0+255),w,b
 32209  008038  6EFE               	movwf	tosh,c
 32210  00803A  6AFF               	clrf	tosu,c
 32211  00803C  50FA               	movf	pclath,w,c
 32212  00803E  0012               	return		;indir
 32213  008040                     u23299:
 32214  008040  6E1B               	movwf	??_I2C1_DO_TX^0,c
 32215  008042  6A1C               	clrf	(??_I2C1_DO_TX+1)^0,c
 32216                           
 32217                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32218                           ; Switch size 1, requested type "simple"
 32219                           ; Number of cases is 1, Range of values is 0 to 0
 32220                           ; switch strategies available:
 32221                           ; Name         Instructions Cycles
 32222                           ; simple_byte            4     3 (average)
 32223                           ;	Chosen strategy is simple_byte
 32224  008044  501C               	movf	(??_I2C1_DO_TX+1)^0,w,c
 32225  008046  0A00               	xorlw	0	; case 0
 32226  008048  A4D8               	btfss	status,2,c
 32227  00804A  D7E8               	goto	l19919
 32228                           
 32229                           ; Switch size 1, requested type "simple"
 32230                           ; Number of cases is 4, Range of values is 1 to 4
 32231                           ; switch strategies available:
 32232                           ; Name         Instructions Cycles
 32233                           ; simple_byte           13     7 (average)
 32234                           ;	Chosen strategy is simple_byte
 32235  00804C  501B               	movf	??_I2C1_DO_TX^0,w,c
 32236  00804E  0A01               	xorlw	1	; case 1
 32237  008050  B4D8               	btfsc	status,2,c
 32238  008052  D7E4               	goto	l19919
 32239  008054  0A03               	xorlw	3	; case 2
 32240  008056  B4D8               	btfsc	status,2,c
 32241  008058  D7DB               	goto	l19911
 32242  00805A  0A01               	xorlw	1	; case 3
 32243  00805C  B4D8               	btfsc	status,2,c
 32244  00805E  D7DB               	goto	l19915
 32245  008060  0A07               	xorlw	7	; case 4
 32246  008062  D7DC               	goto	l19919
 32247  008064                     l674:
 32248                           
 32249                           ; BSR set to: 2
 32250                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 32251  008064  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 32252                           
 32253                           ; BSR set to: 2
 32254                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 32255  008066  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 32256  00806A  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 32257  00806E  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 32258  008070  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 32259  008072  50DF               	movf	indf2,w,c
 32260  008074  ECFD  F04D         	call	_I2C1_MasterSendTxData
 32261                           
 32262                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 32263  008078  0102               	movlb	2	; () banked
 32264  00807A  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 32265  00807C  A0D8               	btfss	status,0,c
 32266  00807E  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 32267  008080  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 32268  008082  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 32269  008084  A4D8               	btfss	status,2,c
 32270  008086  D002               	goto	l19933
 32271                           
 32272                           ; BSR set to: 2
 32273  008088  0E06               	movlw	6
 32274  00808A  0012               	return	
 32275  00808C                     l19933:
 32276                           
 32277                           ; BSR set to: 2
 32278  00808C  0E03               	movlw	3
 32279  00808E  0012               	return		;funcret
 32280  008090                     __end_of_I2C1_DO_TX:
 32281                           	callstack 0
 32282                           
 32283 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 32284 ;; Defined at:
 32285 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 32286 ;; Parameters:    Size  Location     Type
 32287 ;;		None
 32288 ;; Auto vars:     Size  Location     Type
 32289 ;;		None
 32290 ;; Return value:  Size  Location     Type
 32291 ;;                  1    wreg      enum E10442
 32292 ;; Registers used:
 32293 ;;		wreg, status,2, status,0, cstack
 32294 ;; Tracked objects:
 32295 ;;		On entry : 3F/2
 32296 ;;		On exit  : 0/0
 32297 ;;		Unchanged: 0/0
 32298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32303 ;;Total ram usage:        0 bytes
 32304 ;; Hardware stack levels used: 1
 32305 ;; Hardware stack levels required when called: 5
 32306 ;; This function calls:
 32307 ;;		_I2C1_MasterSendTxData
 32308 ;; This function is called by:
 32309 ;;		_I2C1_MasterFsm
 32310 ;; This function uses a non-reentrant model
 32311 ;;
 32312                           
 32313                           	psect	text154
 32314  009B06                     __ptext154:
 32315                           	callstack 0
 32316  009B06                     _I2C1_DO_SEND_ADR_WRITE:
 32317                           	callstack 16
 32318                           
 32319                           ; BSR set to: 2
 32320                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 32321                           
 32322                           ;incstack = 0
 32323  009B06  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 32324                           
 32325                           ; BSR set to: 2
 32326                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 32327  009B08  5158               	movf	(_I2C1_Status+28)& (0+255),w,b
 32328  009B0A  2558               	addwf	(_I2C1_Status+28)& (0+255),w,b
 32329  009B0C  ECFD  F04D         	call	_I2C1_MasterSendTxData
 32330                           
 32331                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 32332  009B10  0E03               	movlw	3
 32333  009B12  0012               	return		;funcret
 32334  009B14                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 32335                           	callstack 0
 32336                           
 32337 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 32338 ;; Defined at:
 32339 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 32340 ;; Parameters:    Size  Location     Type
 32341 ;;		None
 32342 ;; Auto vars:     Size  Location     Type
 32343 ;;		None
 32344 ;; Return value:  Size  Location     Type
 32345 ;;                  1    wreg      enum E10442
 32346 ;; Registers used:
 32347 ;;		wreg, status,0, cstack
 32348 ;; Tracked objects:
 32349 ;;		On entry : 3F/2
 32350 ;;		On exit  : 0/0
 32351 ;;		Unchanged: 0/0
 32352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32357 ;;Total ram usage:        0 bytes
 32358 ;; Hardware stack levels used: 1
 32359 ;; Hardware stack levels required when called: 5
 32360 ;; This function calls:
 32361 ;;		_I2C1_MasterSendTxData
 32362 ;; This function is called by:
 32363 ;;		_I2C1_MasterFsm
 32364 ;; This function uses a non-reentrant model
 32365 ;;
 32366                           
 32367                           	psect	text155
 32368  009B14                     __ptext155:
 32369                           	callstack 0
 32370  009B14                     _I2C1_DO_SEND_ADR_READ:
 32371                           	callstack 16
 32372                           
 32373                           ; BSR set to: 2
 32374                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 32375                           
 32376                           ;incstack = 0
 32377  009B14  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 32378                           
 32379                           ; BSR set to: 2
 32380                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 32381  009B16  80D8               	bsf	status,0,c
 32382  009B18  3558               	rlcf	(_I2C1_Status+28)& (0+255),w,b
 32383  009B1A  ECFD  F04D         	call	_I2C1_MasterSendTxData
 32384                           
 32385                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 32386  009B1E  0E05               	movlw	5
 32387  009B20  0012               	return		;funcret
 32388  009B22                     __end_of_I2C1_DO_SEND_ADR_READ:
 32389                           	callstack 0
 32390                           
 32391 ;; *************** function _I2C1_DO_IDLE *****************
 32392 ;; Defined at:
 32393 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 32394 ;; Parameters:    Size  Location     Type
 32395 ;;		None
 32396 ;; Auto vars:     Size  Location     Type
 32397 ;;		None
 32398 ;; Return value:  Size  Location     Type
 32399 ;;                  1    wreg      enum E10442
 32400 ;; Registers used:
 32401 ;;		wreg, status,2
 32402 ;; Tracked objects:
 32403 ;;		On entry : 3F/2
 32404 ;;		On exit  : 3F/2
 32405 ;;		Unchanged: 0/0
 32406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32411 ;;Total ram usage:        0 bytes
 32412 ;; Hardware stack levels used: 1
 32413 ;; Hardware stack levels required when called: 4
 32414 ;; This function calls:
 32415 ;;		Nothing
 32416 ;; This function is called by:
 32417 ;;		_I2C1_MasterFsm
 32418 ;; This function uses a non-reentrant model
 32419 ;;
 32420                           
 32421                           	psect	text156
 32422  009BA8                     __ptext156:
 32423                           	callstack 0
 32424  009BA8                     _I2C1_DO_IDLE:
 32425                           	callstack 17
 32426                           
 32427                           ; BSR set to: 2
 32428                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 32429                           
 32430                           ;incstack = 0
 32431  009BA8  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 32432                           
 32433                           ; BSR set to: 2
 32434                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 32435  009BAA  0E00               	movlw	0
 32436  009BAC  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 32437                           
 32438                           ; BSR set to: 2
 32439                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 32440  009BAE  0E0E               	movlw	14
 32441                           
 32442                           ; BSR set to: 2
 32443  009BB0  0012               	return		;funcret
 32444  009BB2                     __end_of_I2C1_DO_IDLE:
 32445                           	callstack 0
 32446                           
 32447 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 32448 ;; Defined at:
 32449 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 32450 ;; Parameters:    Size  Location     Type
 32451 ;;		None
 32452 ;; Auto vars:     Size  Location     Type
 32453 ;;		None
 32454 ;; Return value:  Size  Location     Type
 32455 ;;                  1    wreg      enum E10442
 32456 ;; Registers used:
 32457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32458 ;; Tracked objects:
 32459 ;;		On entry : 3F/2
 32460 ;;		On exit  : 0/0
 32461 ;;		Unchanged: 0/0
 32462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32465 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32466 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32467 ;;Total ram usage:        2 bytes
 32468 ;; Hardware stack levels used: 1
 32469 ;; Hardware stack levels required when called: 7
 32470 ;; This function calls:
 32471 ;;		Absolute function
 32472 ;;		_I2C1_CallbackReturnReset
 32473 ;;		_I2C1_CallbackReturnStop
 32474 ;;		_I2C1_DO_SEND_RESTART
 32475 ;;		_I2C1_DO_SEND_STOP
 32476 ;;		_I2C1_MasterSetIrq
 32477 ;;		_rd1RegCompleteHandler
 32478 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32479 ;;		_rd2RegCompleteHandler
 32480 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32481 ;;		_rdBlkRegCompleteHandler
 32482 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32483 ;;		_wr1RegCompleteHandler
 32484 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32485 ;;		_wr2RegCompleteHandler
 32486 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32487 ;; This function is called by:
 32488 ;;		_I2C1_MasterFsm
 32489 ;; This function uses a non-reentrant model
 32490 ;;
 32491                           
 32492                           	psect	text157
 32493  008B72                     __ptext157:
 32494                           	callstack 0
 32495  008B72                     _I2C1_DO_TX_EMPTY:
 32496                           	callstack 14
 32497                           
 32498                           ; BSR set to: 2
 32499                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 32500                           
 32501                           ; BSR set to: 2
 32502                           ;incstack = 0
 32503  008B72  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 32504                           
 32505                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 32506  008B74  D00A               	goto	l19997
 32507  008B76                     l19981:
 32508                           
 32509                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 32510  008B76  ECF1  F04D         	call	_I2C1_DO_SEND_RESTART	;wreg free
 32511  008B7A  0012               	return	
 32512  008B7C                     l19985:
 32513                           
 32514                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 32515  008B7C  EC0A  F04E         	call	_I2C1_MasterSetIrq	;wreg free
 32516                           
 32517                           ; BSR set to: 14
 32518                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 32519  008B80  0E03               	movlw	3
 32520  008B82  0012               	return	
 32521  008B84                     l19991:
 32522                           
 32523                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 32524  008B84  ECED  F04D         	call	_I2C1_DO_SEND_STOP	;wreg free
 32525  008B88  0012               	return	
 32526  008B8A                     l19997:
 32527                           
 32528                           ; BSR set to: 2
 32529  008B8A  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 32530  008B8E  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 32531  008B92  D801               	call	u23338
 32532  008B94  D009               	goto	u23339
 32533  008B96                     u23338:
 32534  008B96  0005               	push	
 32535  008B98  6EFA               	movwf	pclath,c
 32536  008B9A  513C               	movf	_I2C1_Status& (0+255),w,b
 32537  008B9C  6EFD               	movwf	tosl,c
 32538  008B9E  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 32539  008BA0  6EFE               	movwf	tosh,c
 32540  008BA2  6AFF               	clrf	tosu,c
 32541  008BA4  50FA               	movf	pclath,w,c
 32542  008BA6  0012               	return		;indir
 32543  008BA8                     u23339:
 32544  008BA8  6E1B               	movwf	??_I2C1_DO_TX_EMPTY^0,c
 32545  008BAA  6A1C               	clrf	(??_I2C1_DO_TX_EMPTY+1)^0,c
 32546                           
 32547                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32548                           ; Switch size 1, requested type "simple"
 32549                           ; Number of cases is 1, Range of values is 0 to 0
 32550                           ; switch strategies available:
 32551                           ; Name         Instructions Cycles
 32552                           ; simple_byte            4     3 (average)
 32553                           ;	Chosen strategy is simple_byte
 32554  008BAC  501C               	movf	(??_I2C1_DO_TX_EMPTY+1)^0,w,c
 32555  008BAE  0A00               	xorlw	0	; case 0
 32556  008BB0  A4D8               	btfss	status,2,c
 32557  008BB2  D7E8               	goto	l19991
 32558                           
 32559                           ; Switch size 1, requested type "simple"
 32560                           ; Number of cases is 4, Range of values is 1 to 4
 32561                           ; switch strategies available:
 32562                           ; Name         Instructions Cycles
 32563                           ; simple_byte           13     7 (average)
 32564                           ;	Chosen strategy is simple_byte
 32565  008BB4  501B               	movf	??_I2C1_DO_TX_EMPTY^0,w,c
 32566  008BB6  0A01               	xorlw	1	; case 1
 32567  008BB8  B4D8               	btfsc	status,2,c
 32568  008BBA  D7E4               	goto	l19991
 32569  008BBC  0A03               	xorlw	3	; case 2
 32570  008BBE  B4D8               	btfsc	status,2,c
 32571  008BC0  D7DA               	goto	l19981
 32572  008BC2  0A01               	xorlw	1	; case 3
 32573  008BC4  B4D8               	btfsc	status,2,c
 32574  008BC6  D7D7               	goto	l19981
 32575  008BC8  0A07               	xorlw	7	; case 4
 32576  008BCA  B4D8               	btfsc	status,2,c
 32577  008BCC  D7D7               	goto	l19985
 32578  008BCE  D7DA               	goto	l19991
 32579  008BD0                     __end_of_I2C1_DO_TX_EMPTY:
 32580                           	callstack 0
 32581                           
 32582 ;; *************** function _I2C1_MasterSetIrq *****************
 32583 ;; Defined at:
 32584 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 32585 ;; Parameters:    Size  Location     Type
 32586 ;;		None
 32587 ;; Auto vars:     Size  Location     Type
 32588 ;;		None
 32589 ;; Return value:  Size  Location     Type
 32590 ;;                  1    wreg      void 
 32591 ;; Registers used:
 32592 ;;		None
 32593 ;; Tracked objects:
 32594 ;;		On entry : 0/2
 32595 ;;		On exit  : 3F/E
 32596 ;;		Unchanged: 0/0
 32597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32602 ;;Total ram usage:        0 bytes
 32603 ;; Hardware stack levels used: 1
 32604 ;; Hardware stack levels required when called: 4
 32605 ;; This function calls:
 32606 ;;		Nothing
 32607 ;; This function is called by:
 32608 ;;		_I2C1_DO_TX_EMPTY
 32609 ;; This function uses a non-reentrant model
 32610 ;;
 32611                           
 32612                           	psect	text158
 32613  009C14                     __ptext158:
 32614                           	callstack 0
 32615  009C14                     _I2C1_MasterSetIrq:
 32616                           	callstack 16
 32617                           
 32618                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 32619                           
 32620                           ;incstack = 0
 32621  009C14  010E               	movlb	14	; () banked
 32622  009C16  81CD               	bsf	205,0,b	;volatile
 32623                           
 32624                           ; BSR set to: 14
 32625  009C18  0012               	return		;funcret
 32626  009C1A                     __end_of_I2C1_MasterSetIrq:
 32627                           	callstack 0
 32628                           
 32629 ;; *************** function _I2C1_MasterIsNack *****************
 32630 ;; Defined at:
 32631 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 32632 ;; Parameters:    Size  Location     Type
 32633 ;;		None
 32634 ;; Auto vars:     Size  Location     Type
 32635 ;;		None
 32636 ;; Return value:  Size  Location     Type
 32637 ;;                  1    wreg      _Bool 
 32638 ;; Registers used:
 32639 ;;		wreg
 32640 ;; Tracked objects:
 32641 ;;		On entry : 3F/2
 32642 ;;		On exit  : 3F/2
 32643 ;;		Unchanged: 3F/0
 32644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32649 ;;Total ram usage:        0 bytes
 32650 ;; Hardware stack levels used: 1
 32651 ;; Hardware stack levels required when called: 4
 32652 ;; This function calls:
 32653 ;;		Nothing
 32654 ;; This function is called by:
 32655 ;;		_I2C1_MasterFsm
 32656 ;;		_I2C1_DO_TX
 32657 ;; This function uses a non-reentrant model
 32658 ;;
 32659                           
 32660                           	psect	text159
 32661  009B22                     __ptext159:
 32662                           	callstack 0
 32663  009B22                     _I2C1_MasterIsNack:
 32664                           	callstack 17
 32665                           
 32666                           ; BSR set to: 2
 32667                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 32668                           
 32669                           ; BSR set to: 14
 32670                           ;incstack = 0
 32671  009B22  AC97               	btfss	151,6,c	;volatile
 32672  009B24  D002               	goto	u23270
 32673  009B26  0E01               	movlw	1
 32674  009B28  0012               	return	
 32675  009B2A                     u23270:
 32676  009B2A  0E00               	movlw	0
 32677                           
 32678                           ; BSR set to: 2
 32679  009B2C  0012               	return		;funcret
 32680  009B2E                     __end_of_I2C1_MasterIsNack:
 32681                           	callstack 0
 32682                           
 32683 ;; *************** function _I2C1_MasterSendTxData *****************
 32684 ;; Defined at:
 32685 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 32686 ;; Parameters:    Size  Location     Type
 32687 ;;  data            1    wreg     unsigned char 
 32688 ;; Auto vars:     Size  Location     Type
 32689 ;;  data            1   15[COMRAM] unsigned char 
 32690 ;; Return value:  Size  Location     Type
 32691 ;;                  1    wreg      void 
 32692 ;; Registers used:
 32693 ;;		wreg
 32694 ;; Tracked objects:
 32695 ;;		On entry : 3F/2
 32696 ;;		On exit  : 0/0
 32697 ;;		Unchanged: 0/0
 32698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32700 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32702 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32703 ;;Total ram usage:        1 bytes
 32704 ;; Hardware stack levels used: 1
 32705 ;; Hardware stack levels required when called: 4
 32706 ;; This function calls:
 32707 ;;		Nothing
 32708 ;; This function is called by:
 32709 ;;		_I2C1_DO_SEND_ADR_READ
 32710 ;;		_I2C1_DO_SEND_ADR_WRITE
 32711 ;;		_I2C1_DO_TX
 32712 ;; This function uses a non-reentrant model
 32713 ;;
 32714                           
 32715                           	psect	text160
 32716  009BFA                     __ptext160:
 32717                           	callstack 0
 32718  009BFA                     _I2C1_MasterSendTxData:
 32719                           	callstack 16
 32720                           
 32721                           ; BSR set to: 2
 32722                           ;incstack = 0
 32723                           ;I2C1_MasterSendTxData@data stored from wreg
 32724  009BFA  6E10               	movwf	I2C1_MasterSendTxData@data^0,c
 32725                           
 32726                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 32727  009BFC  C010  FF92         	movff	I2C1_MasterSendTxData@data,3986	;volatile
 32728  009C00  0012               	return		;funcret
 32729  009C02                     __end_of_I2C1_MasterSendTxData:
 32730                           	callstack 0
 32731                           
 32732 ;; *************** function _I2C1_MasterSendAck *****************
 32733 ;; Defined at:
 32734 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 32735 ;; Parameters:    Size  Location     Type
 32736 ;;		None
 32737 ;; Auto vars:     Size  Location     Type
 32738 ;;		None
 32739 ;; Return value:  Size  Location     Type
 32740 ;;                  1    wreg      void 
 32741 ;; Registers used:
 32742 ;;		None
 32743 ;; Tracked objects:
 32744 ;;		On entry : 3F/2
 32745 ;;		On exit  : 3F/2
 32746 ;;		Unchanged: 3F/0
 32747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32752 ;;Total ram usage:        0 bytes
 32753 ;; Hardware stack levels used: 1
 32754 ;; Hardware stack levels required when called: 4
 32755 ;; This function calls:
 32756 ;;		Nothing
 32757 ;; This function is called by:
 32758 ;;		_I2C1_DO_RX
 32759 ;;		_I2C1_DO_RX_ACK
 32760 ;; This function uses a non-reentrant model
 32761 ;;
 32762                           
 32763                           	psect	text161
 32764  009C1A                     __ptext161:
 32765                           	callstack 0
 32766  009C1A                     _I2C1_MasterSendAck:
 32767                           	callstack 16
 32768                           
 32769                           ; BSR set to: 2
 32770                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 32771                           
 32772                           ;incstack = 0
 32773  009C1A  9A97               	bcf	151,5,c	;volatile
 32774                           
 32775                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 32776  009C1C  8897               	bsf	151,4,c	;volatile
 32777                           
 32778                           ; BSR set to: 2
 32779  009C1E  0012               	return		;funcret
 32780  009C20                     __end_of_I2C1_MasterSendAck:
 32781                           	callstack 0
 32782                           
 32783 ;; *************** function _I2C1_MasterGetRxData *****************
 32784 ;; Defined at:
 32785 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 32786 ;; Parameters:    Size  Location     Type
 32787 ;;		None
 32788 ;; Auto vars:     Size  Location     Type
 32789 ;;		None
 32790 ;; Return value:  Size  Location     Type
 32791 ;;                  1    wreg      unsigned char 
 32792 ;; Registers used:
 32793 ;;		wreg, status,2
 32794 ;; Tracked objects:
 32795 ;;		On entry : 3F/2
 32796 ;;		On exit  : 3F/2
 32797 ;;		Unchanged: 3F/0
 32798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32803 ;;Total ram usage:        0 bytes
 32804 ;; Hardware stack levels used: 1
 32805 ;; Hardware stack levels required when called: 4
 32806 ;; This function calls:
 32807 ;;		Nothing
 32808 ;; This function is called by:
 32809 ;;		_I2C1_DO_RX
 32810 ;; This function uses a non-reentrant model
 32811 ;;
 32812                           
 32813                           	psect	text162
 32814  009C40                     __ptext162:
 32815                           	callstack 0
 32816  009C40                     _I2C1_MasterGetRxData:
 32817                           	callstack 16
 32818                           
 32819                           ; BSR set to: 2
 32820                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 32821                           
 32822                           ; BSR set to: 2
 32823                           ;incstack = 0
 32824  009C40  5092               	movf	146,w,c	;volatile
 32825                           
 32826                           ; BSR set to: 2
 32827  009C42  0012               	return		;funcret
 32828  009C44                     __end_of_I2C1_MasterGetRxData:
 32829                           	callstack 0
 32830                           
 32831 ;; *************** function _I2C1_MasterSendNack *****************
 32832 ;; Defined at:
 32833 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 32834 ;; Parameters:    Size  Location     Type
 32835 ;;		None
 32836 ;; Auto vars:     Size  Location     Type
 32837 ;;		None
 32838 ;; Return value:  Size  Location     Type
 32839 ;;                  1    wreg      void 
 32840 ;; Registers used:
 32841 ;;		None
 32842 ;; Tracked objects:
 32843 ;;		On entry : 0/2
 32844 ;;		On exit  : 0/0
 32845 ;;		Unchanged: 0/0
 32846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32851 ;;Total ram usage:        0 bytes
 32852 ;; Hardware stack levels used: 1
 32853 ;; Hardware stack levels required when called: 4
 32854 ;; This function calls:
 32855 ;;		Nothing
 32856 ;; This function is called by:
 32857 ;;		_I2C1_DO_RX_NACK_STOP
 32858 ;;		_I2C1_DO_RX_NACK_RESTART
 32859 ;; This function uses a non-reentrant model
 32860 ;;
 32861                           
 32862                           	psect	text163
 32863  009C20                     __ptext163:
 32864                           	callstack 0
 32865  009C20                     _I2C1_MasterSendNack:
 32866                           	callstack 16
 32867                           
 32868                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 32869                           
 32870                           ; BSR set to: 2
 32871                           ;incstack = 0
 32872  009C20  8A97               	bsf	151,5,c	;volatile
 32873                           
 32874                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 32875  009C22  8897               	bsf	151,4,c	;volatile
 32876  009C24  0012               	return		;funcret
 32877  009C26                     __end_of_I2C1_MasterSendNack:
 32878                           	callstack 0
 32879                           
 32880 ;; *************** function _I2C1_MasterStartRx *****************
 32881 ;; Defined at:
 32882 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 32883 ;; Parameters:    Size  Location     Type
 32884 ;;		None
 32885 ;; Auto vars:     Size  Location     Type
 32886 ;;		None
 32887 ;; Return value:  Size  Location     Type
 32888 ;;                  1    wreg      void 
 32889 ;; Registers used:
 32890 ;;		None
 32891 ;; Tracked objects:
 32892 ;;		On entry : 3F/2
 32893 ;;		On exit  : 3F/2
 32894 ;;		Unchanged: 3F/0
 32895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32900 ;;Total ram usage:        0 bytes
 32901 ;; Hardware stack levels used: 1
 32902 ;; Hardware stack levels required when called: 4
 32903 ;; This function calls:
 32904 ;;		Nothing
 32905 ;; This function is called by:
 32906 ;;		_I2C1_DO_RCEN
 32907 ;; This function uses a non-reentrant model
 32908 ;;
 32909                           
 32910                           	psect	text164
 32911  009C44                     __ptext164:
 32912                           	callstack 0
 32913  009C44                     _I2C1_MasterStartRx:
 32914                           	callstack 16
 32915                           
 32916                           ; BSR set to: 2
 32917                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 32918                           
 32919                           ;incstack = 0
 32920  009C44  8697               	bsf	151,3,c	;volatile
 32921                           
 32922                           ; BSR set to: 2
 32923  009C46  0012               	return		;funcret
 32924  009C48                     __end_of_I2C1_MasterStartRx:
 32925                           	callstack 0
 32926                           
 32927 ;; *************** function _I2C1_CallbackReturnReset *****************
 32928 ;; Defined at:
 32929 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 32930 ;; Parameters:    Size  Location     Type
 32931 ;;  funPtr          2   24[COMRAM] PTR void 
 32932 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32933 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32934 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32935 ;; Auto vars:     Size  Location     Type
 32936 ;;		None
 32937 ;; Return value:  Size  Location     Type
 32938 ;;                  1    wreg      enum E360
 32939 ;; Registers used:
 32940 ;;		wreg
 32941 ;; Tracked objects:
 32942 ;;		On entry : 3F/2
 32943 ;;		On exit  : 3F/2
 32944 ;;		Unchanged: 3F/0
 32945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32946 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32949 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32950 ;;Total ram usage:        2 bytes
 32951 ;; Hardware stack levels used: 1
 32952 ;; Hardware stack levels required when called: 4
 32953 ;; This function calls:
 32954 ;;		Nothing
 32955 ;; This function is called by:
 32956 ;;		_I2C1_Open
 32957 ;;		_I2C1_DO_TX
 32958 ;;		_I2C1_DO_RX
 32959 ;;		_I2C1_DO_TX_EMPTY
 32960 ;;		_I2C1_DO_ADDRESS_NACK
 32961 ;; This function uses a non-reentrant model
 32962 ;;
 32963                           
 32964                           	psect	text165
 32965  009C48                     __ptext165:
 32966                           	callstack 0
 32967  009C48                     _I2C1_CallbackReturnReset:
 32968                           	callstack 16
 32969                           
 32970                           ; BSR set to: 2
 32971                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 32972                           
 32973                           ; BSR set to: 2
 32974                           ;incstack = 0
 32975  009C48  0E05               	movlw	5
 32976                           
 32977                           ; BSR set to: 2
 32978  009C4A  0012               	return		;funcret
 32979  009C4C                     __end_of_I2C1_CallbackReturnReset:
 32980                           	callstack 0
 32981                           
 32982 ;; *************** function _I2C1_CallbackReturnStop *****************
 32983 ;; Defined at:
 32984 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 32985 ;; Parameters:    Size  Location     Type
 32986 ;;  funPtr          2   24[COMRAM] PTR void 
 32987 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32988 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32989 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32990 ;; Auto vars:     Size  Location     Type
 32991 ;;		None
 32992 ;; Return value:  Size  Location     Type
 32993 ;;                  1    wreg      enum E360
 32994 ;; Registers used:
 32995 ;;		wreg
 32996 ;; Tracked objects:
 32997 ;;		On entry : 3F/2
 32998 ;;		On exit  : 3F/2
 32999 ;;		Unchanged: 3F/0
 33000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33001 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33004 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33005 ;;Total ram usage:        2 bytes
 33006 ;; Hardware stack levels used: 1
 33007 ;; Hardware stack levels required when called: 4
 33008 ;; This function calls:
 33009 ;;		Nothing
 33010 ;; This function is called by:
 33011 ;;		_I2C1_Open
 33012 ;;		_I2C1_SetCallback
 33013 ;;		_I2C1_DO_TX
 33014 ;;		_I2C1_DO_RX
 33015 ;;		_I2C1_DO_TX_EMPTY
 33016 ;;		_I2C1_DO_ADDRESS_NACK
 33017 ;; This function uses a non-reentrant model
 33018 ;;
 33019                           
 33020                           	psect	text166
 33021  009C4C                     __ptext166:
 33022                           	callstack 0
 33023  009C4C                     _I2C1_CallbackReturnStop:
 33024                           	callstack 16
 33025                           
 33026                           ; BSR set to: 2
 33027                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 33028                           
 33029                           ; BSR set to: 2
 33030                           ;incstack = 0
 33031  009C4C  0E01               	movlw	1
 33032                           
 33033                           ; BSR set to: 2
 33034  009C4E  0012               	return		;funcret
 33035  009C50                     __end_of_I2C1_CallbackReturnStop:
 33036                           	callstack 0
 33037                           
 33038 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F535 *****************
 33039 ;; Defined at:
 33040 ;;		line 176 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33041 ;; Parameters:    Size  Location     Type
 33042 ;;  ptr             2   24[COMRAM] PTR void 
 33043 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33044 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33045 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33046 ;; Auto vars:     Size  Location     Type
 33047 ;;		None
 33048 ;; Return value:  Size  Location     Type
 33049 ;;                  1    wreg      enum E527
 33050 ;; Registers used:
 33051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33052 ;; Tracked objects:
 33053 ;;		On entry : 3F/2
 33054 ;;		On exit  : 0/0
 33055 ;;		Unchanged: 0/0
 33056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33057 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33060 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33061 ;;Total ram usage:        2 bytes
 33062 ;; Hardware stack levels used: 1
 33063 ;; Hardware stack levels required when called: 6
 33064 ;; This function calls:
 33065 ;;		_I2C1_SetBuffer
 33066 ;;		_I2C1_SetDataCompleteCallback
 33067 ;; This function is called by:
 33068 ;;		_I2C1_DO_TX
 33069 ;;		_I2C1_DO_RX
 33070 ;;		_I2C1_DO_TX_EMPTY
 33071 ;;		_I2C1_DO_ADDRESS_NACK
 33072 ;; This function uses a non-reentrant model
 33073 ;;
 33074                           
 33075                           	psect	text167
 33076  009292                     __ptext167:
 33077                           	callstack 0
 33078  009292                     _rdBlkRegCompleteHandler@i2c1_master_example$F535:
 33079                           	callstack 14
 33080                           
 33081                           ; BSR set to: 2
 33082                           ;mcc_generated_files/examples/i2c1_master_example.c: 176: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 177: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 178:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 33083                           
 33084                           ; BSR set to: 2
 33085                           ;incstack = 0
 33086  009292  EE20 F002          	lfsr	2,2
 33087  009296  5019               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr^0,w,c
 33088  009298  26D9               	addwf	fsr2l,f,c
 33089  00929A  501A               	movf	(rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1)^0,w,c
 33090  00929C  22DA               	addwfc	fsr2h,f,c
 33091  00929E  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 33092  0092A2  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 33093  0092A6  C019  FFD9         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr,fsr2l
 33094  0092AA  C01A  FFDA         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1,fsr2h
 33095  0092AE  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 33096  0092B2  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 33097  0092B6  ECD0  F04C         	call	_I2C1_SetBuffer	;wreg free
 33098                           
 33099                           ; BSR set to: 2
 33100                           ;mcc_generated_files/examples/i2c1_master_example.c: 179:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33101  0092BA  0E00               	movlw	0
 33102  0092BC  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33103  0092BE  0E00               	movlw	0
 33104  0092C0  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33105  0092C2  0E00               	movlw	0
 33106  0092C4  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33107  0092C6  0E00               	movlw	0
 33108  0092C8  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33109  0092CA  EC19  F04D         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33110                           
 33111                           ;mcc_generated_files/examples/i2c1_master_example.c: 180:     return I2C1_RESTART_READ;
 33112  0092CE  0E02               	movlw	2
 33113  0092D0  0012               	return		;funcret
 33114  0092D2                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535:
 33115                           	callstack 0
 33116                           
 33117 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F517 *****************
 33118 ;; Defined at:
 33119 ;;		line 162 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33120 ;; Parameters:    Size  Location     Type
 33121 ;;  ptr             2   24[COMRAM] PTR void 
 33122 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33123 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33124 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33125 ;; Auto vars:     Size  Location     Type
 33126 ;;		None
 33127 ;; Return value:  Size  Location     Type
 33128 ;;                  1    wreg      enum E527
 33129 ;; Registers used:
 33130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33131 ;; Tracked objects:
 33132 ;;		On entry : 3F/2
 33133 ;;		On exit  : 0/0
 33134 ;;		Unchanged: 0/0
 33135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33136 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33139 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33140 ;;Total ram usage:        2 bytes
 33141 ;; Hardware stack levels used: 1
 33142 ;; Hardware stack levels required when called: 6
 33143 ;; This function calls:
 33144 ;;		_I2C1_SetBuffer
 33145 ;;		_I2C1_SetDataCompleteCallback
 33146 ;; This function is called by:
 33147 ;;		_I2C1_DO_TX
 33148 ;;		_I2C1_DO_RX
 33149 ;;		_I2C1_DO_TX_EMPTY
 33150 ;;		_I2C1_DO_ADDRESS_NACK
 33151 ;; This function uses a non-reentrant model
 33152 ;;
 33153                           
 33154                           	psect	text168
 33155  0095A2                     __ptext168:
 33156                           	callstack 0
 33157  0095A2                     _wr1RegCompleteHandler@i2c1_master_example$F517:
 33158                           	callstack 14
 33159                           
 33160                           ; BSR set to: 2
 33161                           ;mcc_generated_files/examples/i2c1_master_example.c: 162: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 163: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 164:     I2C1_SetBuffer(ptr,1);
 33162                           
 33163                           ;incstack = 0
 33164  0095A2  C019  F010         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr,I2C1_SetBuffer@buffer
 33165  0095A6  C01A  F011         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr+1,I2C1_SetBuffer@buffer+1
 33166  0095AA  0E00               	movlw	0
 33167  0095AC  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33168  0095AE  0E01               	movlw	1
 33169  0095B0  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33170  0095B2  ECD0  F04C         	call	_I2C1_SetBuffer	;wreg free
 33171                           
 33172                           ; BSR set to: 2
 33173                           ;mcc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33174  0095B6  0E00               	movlw	0
 33175  0095B8  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33176  0095BA  0E00               	movlw	0
 33177  0095BC  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33178  0095BE  0E00               	movlw	0
 33179  0095C0  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33180  0095C2  0E00               	movlw	0
 33181  0095C4  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33182  0095C6  EC19  F04D         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33183                           
 33184                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     return I2C1_CONTINUE;
 33185  0095CA  0E04               	movlw	4
 33186  0095CC  0012               	return		;funcret
 33187  0095CE                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F517:
 33188                           	callstack 0
 33189                           
 33190 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F511 *****************
 33191 ;; Defined at:
 33192 ;;		line 155 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33193 ;; Parameters:    Size  Location     Type
 33194 ;;  ptr             2   24[COMRAM] PTR void 
 33195 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33196 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33197 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33198 ;; Auto vars:     Size  Location     Type
 33199 ;;		None
 33200 ;; Return value:  Size  Location     Type
 33201 ;;                  1    wreg      enum E527
 33202 ;; Registers used:
 33203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33204 ;; Tracked objects:
 33205 ;;		On entry : 3F/2
 33206 ;;		On exit  : 0/0
 33207 ;;		Unchanged: 0/0
 33208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33209 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33212 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33213 ;;Total ram usage:        2 bytes
 33214 ;; Hardware stack levels used: 1
 33215 ;; Hardware stack levels required when called: 6
 33216 ;; This function calls:
 33217 ;;		_I2C1_SetBuffer
 33218 ;;		_I2C1_SetDataCompleteCallback
 33219 ;; This function is called by:
 33220 ;;		_I2C1_DO_TX
 33221 ;;		_I2C1_DO_RX
 33222 ;;		_I2C1_DO_TX_EMPTY
 33223 ;;		_I2C1_DO_ADDRESS_NACK
 33224 ;; This function uses a non-reentrant model
 33225 ;;
 33226                           
 33227                           	psect	text169
 33228  0095CE                     __ptext169:
 33229                           	callstack 0
 33230  0095CE                     _rd2RegCompleteHandler@i2c1_master_example$F511:
 33231                           	callstack 14
 33232                           
 33233                           ; BSR set to: 2
 33234                           ;mcc_generated_files/examples/i2c1_master_example.c: 155: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 156: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 157:     I2C1_SetBuffer(ptr,2);
 33235                           
 33236                           ;incstack = 0
 33237  0095CE  C019  F010         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr,I2C1_SetBuffer@buffer
 33238  0095D2  C01A  F011         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr+1,I2C1_SetBuffer@buffer+1
 33239  0095D6  0E00               	movlw	0
 33240  0095D8  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33241  0095DA  0E02               	movlw	2
 33242  0095DC  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33243  0095DE  ECD0  F04C         	call	_I2C1_SetBuffer	;wreg free
 33244                           
 33245                           ; BSR set to: 2
 33246                           ;mcc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33247  0095E2  0E00               	movlw	0
 33248  0095E4  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33249  0095E6  0E00               	movlw	0
 33250  0095E8  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33251  0095EA  0E00               	movlw	0
 33252  0095EC  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33253  0095EE  0E00               	movlw	0
 33254  0095F0  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33255  0095F2  EC19  F04D         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33256                           
 33257                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     return I2C1_RESTART_READ;
 33258  0095F6  0E02               	movlw	2
 33259  0095F8  0012               	return		;funcret
 33260  0095FA                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F511:
 33261                           	callstack 0
 33262                           
 33263 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F500 *****************
 33264 ;; Defined at:
 33265 ;;		line 148 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33266 ;; Parameters:    Size  Location     Type
 33267 ;;  ptr             2   24[COMRAM] PTR void 
 33268 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33269 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33270 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33271 ;; Auto vars:     Size  Location     Type
 33272 ;;		None
 33273 ;; Return value:  Size  Location     Type
 33274 ;;                  1    wreg      enum E527
 33275 ;; Registers used:
 33276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33277 ;; Tracked objects:
 33278 ;;		On entry : 3F/2
 33279 ;;		On exit  : 0/0
 33280 ;;		Unchanged: 0/0
 33281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33282 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33285 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33286 ;;Total ram usage:        2 bytes
 33287 ;; Hardware stack levels used: 1
 33288 ;; Hardware stack levels required when called: 6
 33289 ;; This function calls:
 33290 ;;		_I2C1_SetBuffer
 33291 ;;		_I2C1_SetDataCompleteCallback
 33292 ;; This function is called by:
 33293 ;;		_I2C1_Read1ByteRegister
 33294 ;;		_I2C1_DO_TX
 33295 ;;		_I2C1_DO_RX
 33296 ;;		_I2C1_DO_TX_EMPTY
 33297 ;;		_I2C1_DO_ADDRESS_NACK
 33298 ;; This function uses a non-reentrant model
 33299 ;;
 33300                           
 33301                           	psect	text170
 33302  0095FA                     __ptext170:
 33303                           	callstack 0
 33304  0095FA                     _rd1RegCompleteHandler@i2c1_master_example$F500:
 33305                           	callstack 14
 33306                           
 33307                           ; BSR set to: 2
 33308                           ;mcc_generated_files/examples/i2c1_master_example.c: 148: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 149: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 150:     I2C1_SetBuffer(ptr,1);
 33309                           
 33310                           ;incstack = 0
 33311  0095FA  C019  F010         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr,I2C1_SetBuffer@buffer
 33312  0095FE  C01A  F011         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr+1,I2C1_SetBuffer@buffer+1
 33313  009602  0E00               	movlw	0
 33314  009604  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33315  009606  0E01               	movlw	1
 33316  009608  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33317  00960A  ECD0  F04C         	call	_I2C1_SetBuffer	;wreg free
 33318                           
 33319                           ; BSR set to: 2
 33320                           ;mcc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33321  00960E  0E00               	movlw	0
 33322  009610  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33323  009612  0E00               	movlw	0
 33324  009614  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33325  009616  0E00               	movlw	0
 33326  009618  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33327  00961A  0E00               	movlw	0
 33328  00961C  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33329  00961E  EC19  F04D         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33330                           
 33331                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     return I2C1_RESTART_READ;
 33332  009622  0E02               	movlw	2
 33333  009624  0012               	return		;funcret
 33334  009626                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F500:
 33335                           	callstack 0
 33336                           
 33337 ;; *************** function _rdBlkRegCompleteHandler *****************
 33338 ;; Defined at:
 33339 ;;		line 140 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33340 ;; Parameters:    Size  Location     Type
 33341 ;;  p               2   24[COMRAM] PTR void 
 33342 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33343 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33344 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33345 ;; Auto vars:     Size  Location     Type
 33346 ;;		None
 33347 ;; Return value:  Size  Location     Type
 33348 ;;                  1    wreg      enum E360
 33349 ;; Registers used:
 33350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33351 ;; Tracked objects:
 33352 ;;		On entry : 3F/2
 33353 ;;		On exit  : 0/0
 33354 ;;		Unchanged: 0/0
 33355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33356 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33359 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33360 ;;Total ram usage:        2 bytes
 33361 ;; Hardware stack levels used: 1
 33362 ;; Hardware stack levels required when called: 6
 33363 ;; This function calls:
 33364 ;;		_I2C1_SetBuffer
 33365 ;;		_I2C1_SetDataCompleteCallback
 33366 ;; This function is called by:
 33367 ;;		_i2c_readDataBlock
 33368 ;;		_I2C1_DO_TX
 33369 ;;		_I2C1_DO_RX
 33370 ;;		_I2C1_DO_TX_EMPTY
 33371 ;;		_I2C1_DO_ADDRESS_NACK
 33372 ;; This function uses a non-reentrant model
 33373 ;;
 33374                           
 33375                           	psect	text171
 33376  0092D2                     __ptext171:
 33377                           	callstack 0
 33378  0092D2                     _rdBlkRegCompleteHandler:
 33379                           	callstack 14
 33380                           
 33381                           ; BSR set to: 2
 33382                           ;mcc_generated_files/drivers/i2c_simple_master.c: 140: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 141: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 33383                           
 33384                           ;incstack = 0
 33385  0092D2  EE20 F002          	lfsr	2,2
 33386  0092D6  5019               	movf	rdBlkRegCompleteHandler@p^0,w,c
 33387  0092D8  26D9               	addwf	fsr2l,f,c
 33388  0092DA  501A               	movf	(rdBlkRegCompleteHandler@p+1)^0,w,c
 33389  0092DC  22DA               	addwfc	fsr2h,f,c
 33390  0092DE  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 33391  0092E2  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 33392  0092E6  C019  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
 33393  0092EA  C01A  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
 33394  0092EE  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 33395  0092F2  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 33396  0092F6  ECD0  F04C         	call	_I2C1_SetBuffer	;wreg free
 33397                           
 33398                           ; BSR set to: 2
 33399                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 33400  0092FA  0E00               	movlw	0
 33401  0092FC  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33402  0092FE  0E00               	movlw	0
 33403  009300  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33404  009302  0E00               	movlw	0
 33405  009304  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33406  009306  0E00               	movlw	0
 33407  009308  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33408  00930A  EC19  F04D         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33409                           
 33410                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     return I2C1_RESTART_READ;
 33411  00930E  0E02               	movlw	2
 33412  009310  0012               	return		;funcret
 33413  009312                     __end_of_rdBlkRegCompleteHandler:
 33414                           	callstack 0
 33415                           
 33416 ;; *************** function _wr2RegCompleteHandler *****************
 33417 ;; Defined at:
 33418 ;;		line 116 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33419 ;; Parameters:    Size  Location     Type
 33420 ;;  p               2   24[COMRAM] PTR void 
 33421 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33422 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33423 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33424 ;; Auto vars:     Size  Location     Type
 33425 ;;		None
 33426 ;; Return value:  Size  Location     Type
 33427 ;;                  1    wreg      enum E360
 33428 ;; Registers used:
 33429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33430 ;; Tracked objects:
 33431 ;;		On entry : 3F/2
 33432 ;;		On exit  : 0/0
 33433 ;;		Unchanged: 0/0
 33434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33435 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33438 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33439 ;;Total ram usage:        2 bytes
 33440 ;; Hardware stack levels used: 1
 33441 ;; Hardware stack levels required when called: 6
 33442 ;; This function calls:
 33443 ;;		_I2C1_SetBuffer
 33444 ;;		_I2C1_SetDataCompleteCallback
 33445 ;; This function is called by:
 33446 ;;		_I2C1_DO_TX
 33447 ;;		_I2C1_DO_RX
 33448 ;;		_I2C1_DO_TX_EMPTY
 33449 ;;		_I2C1_DO_ADDRESS_NACK
 33450 ;; This function uses a non-reentrant model
 33451 ;;
 33452                           
 33453                           	psect	text172
 33454  009626                     __ptext172:
 33455                           	callstack 0
 33456  009626                     _wr2RegCompleteHandler:
 33457                           	callstack 14
 33458                           
 33459                           ; BSR set to: 2
 33460                           ;mcc_generated_files/drivers/i2c_simple_master.c: 116: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 117: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 118:     I2C1_SetBuffer(p,2);
 33461                           
 33462                           ;incstack = 0
 33463  009626  C019  F010         	movff	wr2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 33464  00962A  C01A  F011         	movff	wr2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 33465  00962E  0E00               	movlw	0
 33466  009630  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33467  009632  0E02               	movlw	2
 33468  009634  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33469  009636  ECD0  F04C         	call	_I2C1_SetBuffer	;wreg free
 33470                           
 33471                           ; BSR set to: 2
 33472                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 33473  00963A  0E00               	movlw	0
 33474  00963C  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33475  00963E  0E00               	movlw	0
 33476  009640  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33477  009642  0E00               	movlw	0
 33478  009644  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33479  009646  0E00               	movlw	0
 33480  009648  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33481  00964A  EC19  F04D         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33482                           
 33483                           ;mcc_generated_files/drivers/i2c_simple_master.c: 120:     return I2C1_CONTINUE;
 33484  00964E  0E04               	movlw	4
 33485  009650  0012               	return		;funcret
 33486  009652                     __end_of_wr2RegCompleteHandler:
 33487                           	callstack 0
 33488                           
 33489 ;; *************** function _rd2RegCompleteHandler *****************
 33490 ;; Defined at:
 33491 ;;		line 93 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33492 ;; Parameters:    Size  Location     Type
 33493 ;;  p               2   24[COMRAM] PTR void 
 33494 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33495 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33496 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33497 ;; Auto vars:     Size  Location     Type
 33498 ;;		None
 33499 ;; Return value:  Size  Location     Type
 33500 ;;                  1    wreg      enum E360
 33501 ;; Registers used:
 33502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33503 ;; Tracked objects:
 33504 ;;		On entry : 3F/2
 33505 ;;		On exit  : 0/0
 33506 ;;		Unchanged: 0/0
 33507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33508 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33511 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33512 ;;Total ram usage:        2 bytes
 33513 ;; Hardware stack levels used: 1
 33514 ;; Hardware stack levels required when called: 6
 33515 ;; This function calls:
 33516 ;;		_I2C1_SetBuffer
 33517 ;;		_I2C1_SetDataCompleteCallback
 33518 ;; This function is called by:
 33519 ;;		_I2C1_DO_TX
 33520 ;;		_I2C1_DO_RX
 33521 ;;		_I2C1_DO_TX_EMPTY
 33522 ;;		_I2C1_DO_ADDRESS_NACK
 33523 ;; This function uses a non-reentrant model
 33524 ;;
 33525                           
 33526                           	psect	text173
 33527  009652                     __ptext173:
 33528                           	callstack 0
 33529  009652                     _rd2RegCompleteHandler:
 33530                           	callstack 14
 33531                           
 33532                           ; BSR set to: 2
 33533                           ;mcc_generated_files/drivers/i2c_simple_master.c: 93: static i2c1_operations_t rd2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 94: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 95:     I2C1_SetBuffer(p,2);
 33534                           
 33535                           ;incstack = 0
 33536  009652  C019  F010         	movff	rd2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 33537  009656  C01A  F011         	movff	rd2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 33538  00965A  0E00               	movlw	0
 33539  00965C  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33540  00965E  0E02               	movlw	2
 33541  009660  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33542  009662  ECD0  F04C         	call	_I2C1_SetBuffer	;wreg free
 33543                           
 33544                           ; BSR set to: 2
 33545                           ;mcc_generated_files/drivers/i2c_simple_master.c: 96:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 33546  009666  0E00               	movlw	0
 33547  009668  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33548  00966A  0E00               	movlw	0
 33549  00966C  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33550  00966E  0E00               	movlw	0
 33551  009670  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33552  009672  0E00               	movlw	0
 33553  009674  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33554  009676  EC19  F04D         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33555                           
 33556                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97:     return I2C1_RESTART_READ;
 33557  00967A  0E02               	movlw	2
 33558  00967C  0012               	return		;funcret
 33559  00967E                     __end_of_rd2RegCompleteHandler:
 33560                           	callstack 0
 33561                           
 33562 ;; *************** function _rd1RegCompleteHandler *****************
 33563 ;; Defined at:
 33564 ;;		line 64 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33565 ;; Parameters:    Size  Location     Type
 33566 ;;  p               2   24[COMRAM] PTR void 
 33567 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33568 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33569 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33570 ;; Auto vars:     Size  Location     Type
 33571 ;;		None
 33572 ;; Return value:  Size  Location     Type
 33573 ;;                  1    wreg      enum E360
 33574 ;; Registers used:
 33575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33576 ;; Tracked objects:
 33577 ;;		On entry : 3F/2
 33578 ;;		On exit  : 0/0
 33579 ;;		Unchanged: 0/0
 33580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33581 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33584 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33585 ;;Total ram usage:        2 bytes
 33586 ;; Hardware stack levels used: 1
 33587 ;; Hardware stack levels required when called: 6
 33588 ;; This function calls:
 33589 ;;		_I2C1_SetBuffer
 33590 ;;		_I2C1_SetDataCompleteCallback
 33591 ;; This function is called by:
 33592 ;;		_I2C1_DO_TX
 33593 ;;		_I2C1_DO_RX
 33594 ;;		_I2C1_DO_TX_EMPTY
 33595 ;;		_I2C1_DO_ADDRESS_NACK
 33596 ;; This function uses a non-reentrant model
 33597 ;;
 33598                           
 33599                           	psect	text174
 33600  00967E                     __ptext174:
 33601                           	callstack 0
 33602  00967E                     _rd1RegCompleteHandler:
 33603                           	callstack 14
 33604                           
 33605                           ; BSR set to: 2
 33606                           ;mcc_generated_files/drivers/i2c_simple_master.c: 64: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 65: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 66:     I2C1_SetBuffer(p,1);
 33607                           
 33608                           ;incstack = 0
 33609  00967E  C019  F010         	movff	rd1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 33610  009682  C01A  F011         	movff	rd1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 33611  009686  0E00               	movlw	0
 33612  009688  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33613  00968A  0E01               	movlw	1
 33614  00968C  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33615  00968E  ECD0  F04C         	call	_I2C1_SetBuffer	;wreg free
 33616                           
 33617                           ; BSR set to: 2
 33618                           ;mcc_generated_files/drivers/i2c_simple_master.c: 67:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 33619  009692  0E00               	movlw	0
 33620  009694  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33621  009696  0E00               	movlw	0
 33622  009698  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33623  00969A  0E00               	movlw	0
 33624  00969C  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33625  00969E  0E00               	movlw	0
 33626  0096A0  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33627  0096A2  EC19  F04D         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33628                           
 33629                           ;mcc_generated_files/drivers/i2c_simple_master.c: 68:     return I2C1_RESTART_READ;
 33630  0096A6  0E02               	movlw	2
 33631  0096A8  0012               	return		;funcret
 33632  0096AA                     __end_of_rd1RegCompleteHandler:
 33633                           	callstack 0
 33634                           
 33635 ;; *************** function _wr1RegCompleteHandler *****************
 33636 ;; Defined at:
 33637 ;;		line 33 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33638 ;; Parameters:    Size  Location     Type
 33639 ;;  p               2   24[COMRAM] PTR void 
 33640 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33641 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33642 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33643 ;; Auto vars:     Size  Location     Type
 33644 ;;		None
 33645 ;; Return value:  Size  Location     Type
 33646 ;;                  1    wreg      enum E360
 33647 ;; Registers used:
 33648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33649 ;; Tracked objects:
 33650 ;;		On entry : 3F/2
 33651 ;;		On exit  : 0/0
 33652 ;;		Unchanged: 0/0
 33653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33654 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33657 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33658 ;;Total ram usage:        2 bytes
 33659 ;; Hardware stack levels used: 1
 33660 ;; Hardware stack levels required when called: 6
 33661 ;; This function calls:
 33662 ;;		_I2C1_SetBuffer
 33663 ;;		_I2C1_SetDataCompleteCallback
 33664 ;; This function is called by:
 33665 ;;		_I2C1_DO_TX
 33666 ;;		_I2C1_DO_RX
 33667 ;;		_I2C1_DO_TX_EMPTY
 33668 ;;		_I2C1_DO_ADDRESS_NACK
 33669 ;; This function uses a non-reentrant model
 33670 ;;
 33671                           
 33672                           	psect	text175
 33673  0096AA                     __ptext175:
 33674                           	callstack 0
 33675  0096AA                     _wr1RegCompleteHandler:
 33676                           	callstack 14
 33677                           
 33678                           ; BSR set to: 2
 33679                           ;mcc_generated_files/drivers/i2c_simple_master.c: 33: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 34: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 35:     I2C1_SetBuffer(p,1);
 33680                           
 33681                           ;incstack = 0
 33682  0096AA  C019  F010         	movff	wr1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 33683  0096AE  C01A  F011         	movff	wr1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 33684  0096B2  0E00               	movlw	0
 33685  0096B4  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33686  0096B6  0E01               	movlw	1
 33687  0096B8  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33688  0096BA  ECD0  F04C         	call	_I2C1_SetBuffer	;wreg free
 33689                           
 33690                           ; BSR set to: 2
 33691                           ;mcc_generated_files/drivers/i2c_simple_master.c: 36:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 33692  0096BE  0E00               	movlw	0
 33693  0096C0  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33694  0096C2  0E00               	movlw	0
 33695  0096C4  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33696  0096C6  0E00               	movlw	0
 33697  0096C8  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33698  0096CA  0E00               	movlw	0
 33699  0096CC  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33700  0096CE  EC19  F04D         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33701                           
 33702                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     return I2C1_CONTINUE;
 33703  0096D2  0E04               	movlw	4
 33704  0096D4  0012               	return		;funcret
 33705  0096D6                     __end_of_wr1RegCompleteHandler:
 33706                           	callstack 0
 33707                           
 33708 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F523 *****************
 33709 ;; Defined at:
 33710 ;;		line 169 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33711 ;; Parameters:    Size  Location     Type
 33712 ;;  ptr             2   24[COMRAM] PTR void 
 33713 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33714 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33715 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33716 ;; Auto vars:     Size  Location     Type
 33717 ;;		None
 33718 ;; Return value:  Size  Location     Type
 33719 ;;                  1    wreg      enum E527
 33720 ;; Registers used:
 33721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33722 ;; Tracked objects:
 33723 ;;		On entry : 3F/2
 33724 ;;		On exit  : 0/0
 33725 ;;		Unchanged: 0/0
 33726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33727 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33730 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33731 ;;Total ram usage:        2 bytes
 33732 ;; Hardware stack levels used: 1
 33733 ;; Hardware stack levels required when called: 6
 33734 ;; This function calls:
 33735 ;;		_I2C1_SetBuffer
 33736 ;;		_I2C1_SetDataCompleteCallback
 33737 ;; This function is called by:
 33738 ;;		_I2C1_DO_TX
 33739 ;;		_I2C1_DO_RX
 33740 ;;		_I2C1_DO_TX_EMPTY
 33741 ;;		_I2C1_DO_ADDRESS_NACK
 33742 ;; This function uses a non-reentrant model
 33743 ;;
 33744                           
 33745                           	psect	text176
 33746  0096D6                     __ptext176:
 33747                           	callstack 0
 33748  0096D6                     _wr2RegCompleteHandler@i2c1_master_example$F523:
 33749                           	callstack 14
 33750                           
 33751                           ; BSR set to: 2
 33752                           ;mcc_generated_files/examples/i2c1_master_example.c: 169: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 170: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 171:     I2C1_SetBuffer(ptr,2);
 33753                           
 33754                           ;incstack = 0
 33755  0096D6  C019  F010         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr,I2C1_SetBuffer@buffer
 33756  0096DA  C01A  F011         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr+1,I2C1_SetBuffer@buffer+1
 33757  0096DE  0E00               	movlw	0
 33758  0096E0  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33759  0096E2  0E02               	movlw	2
 33760  0096E4  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33761  0096E6  ECD0  F04C         	call	_I2C1_SetBuffer	;wreg free
 33762                           
 33763                           ; BSR set to: 2
 33764                           ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33765  0096EA  0E00               	movlw	0
 33766  0096EC  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33767  0096EE  0E00               	movlw	0
 33768  0096F0  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33769  0096F2  0E00               	movlw	0
 33770  0096F4  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33771  0096F6  0E00               	movlw	0
 33772  0096F8  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33773  0096FA  EC19  F04D         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33774                           
 33775                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     return I2C1_CONTINUE;
 33776  0096FE  0E04               	movlw	4
 33777  009700  0012               	return		;funcret
 33778  009702                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F523:
 33779                           	callstack 0
 33780                           
 33781 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 33782 ;; Defined at:
 33783 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 33784 ;; Parameters:    Size  Location     Type
 33785 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 33786 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 33787 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 33788 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 33789 ;;  ptr             2   22[COMRAM] PTR void 
 33790 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33791 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33792 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33793 ;; Auto vars:     Size  Location     Type
 33794 ;;		None
 33795 ;; Return value:  Size  Location     Type
 33796 ;;                  1    wreg      void 
 33797 ;; Registers used:
 33798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33799 ;; Tracked objects:
 33800 ;;		On entry : 33/2
 33801 ;;		On exit  : 0/0
 33802 ;;		Unchanged: 0/0
 33803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33804 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33807 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33808 ;;Total ram usage:        4 bytes
 33809 ;; Hardware stack levels used: 1
 33810 ;; Hardware stack levels required when called: 5
 33811 ;; This function calls:
 33812 ;;		_I2C1_SetCallback
 33813 ;; This function is called by:
 33814 ;;		_wr1RegCompleteHandler
 33815 ;;		_rd1RegCompleteHandler
 33816 ;;		_rd2RegCompleteHandler
 33817 ;;		_wr2RegCompleteHandler
 33818 ;;		_rdBlkRegCompleteHandler
 33819 ;;		_i2c_readDataBlock
 33820 ;;		_I2C1_Read1ByteRegister
 33821 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 33822 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 33823 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 33824 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 33825 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 33826 ;; This function uses a non-reentrant model
 33827 ;;
 33828                           
 33829                           	psect	text177
 33830  009A32                     __ptext177:
 33831                           	callstack 0
 33832  009A32                     _I2C1_SetDataCompleteCallback:
 33833                           	callstack 20
 33834                           
 33835                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 33836                           
 33837                           ;incstack = 0
 33838  009A32  C015  F010         	movff	I2C1_SetDataCompleteCallback@cb,I2C1_SetCallback@cb
 33839  009A36  C016  F011         	movff	I2C1_SetDataCompleteCallback@cb+1,I2C1_SetCallback@cb+1
 33840  009A3A  C017  F012         	movff	I2C1_SetDataCompleteCallback@ptr,I2C1_SetCallback@ptr
 33841  009A3E  C018  F013         	movff	I2C1_SetDataCompleteCallback@ptr+1,I2C1_SetCallback@ptr+1
 33842  009A42  0E00               	movlw	0
 33843  009A44  EC1C  F044         	call	_I2C1_SetCallback
 33844  009A48  0012               	return		;funcret
 33845  009A4A                     __end_of_I2C1_SetDataCompleteCallback:
 33846                           	callstack 0
 33847                           
 33848 ;; *************** function _I2C1_SetCallback *****************
 33849 ;; Defined at:
 33850 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 33851 ;; Parameters:    Size  Location     Type
 33852 ;;  idx             1    wreg     enum E10460
 33853 ;;  cb              2   15[COMRAM] PTR FTN(PTR void ,)enum 
 33854 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 33855 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 33856 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 33857 ;;  ptr             2   17[COMRAM] PTR void 
 33858 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33859 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33860 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33861 ;; Auto vars:     Size  Location     Type
 33862 ;;  idx             1   19[COMRAM] enum E10460
 33863 ;; Return value:  Size  Location     Type
 33864 ;;                  1    wreg      void 
 33865 ;; Registers used:
 33866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33867 ;; Tracked objects:
 33868 ;;		On entry : 33/2
 33869 ;;		On exit  : 0/0
 33870 ;;		Unchanged: 0/0
 33871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33872 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33873 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33875 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33876 ;;Total ram usage:        5 bytes
 33877 ;; Hardware stack levels used: 1
 33878 ;; Hardware stack levels required when called: 4
 33879 ;; This function calls:
 33880 ;;		Nothing
 33881 ;; This function is called by:
 33882 ;;		_I2C1_SetDataCompleteCallback
 33883 ;;		_I2C1_SetAddressNackCallback
 33884 ;; This function uses a non-reentrant model
 33885 ;;
 33886                           
 33887                           	psect	text178
 33888  008838                     __ptext178:
 33889                           	callstack 0
 33890  008838                     _I2C1_SetCallback:
 33891                           	callstack 20
 33892                           
 33893                           ;incstack = 0
 33894                           ;I2C1_SetCallback@idx stored from wreg
 33895  008838  6E14               	movwf	I2C1_SetCallback@idx^0,c
 33896                           
 33897                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 33898  00883A  5010               	movf	I2C1_SetCallback@cb^0,w,c
 33899  00883C  1011               	iorwf	(I2C1_SetCallback@cb+1)^0,w,c
 33900  00883E  B4D8               	btfsc	status,2,c
 33901  008840  D019               	goto	l19723
 33902                           
 33903                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 33904  008842  5014               	movf	I2C1_SetCallback@idx^0,w,c
 33905  008844  0D02               	mullw	2
 33906  008846  0E3C               	movlw	low _I2C1_Status
 33907  008848  24F3               	addwf	243,w,c
 33908  00884A  6ED9               	movwf	fsr2l,c
 33909  00884C  0E02               	movlw	high _I2C1_Status
 33910  00884E  20F4               	addwfc	prodh,w,c
 33911  008850  6EDA               	movwf	fsr2h,c
 33912  008852  C010  FFDE         	movff	I2C1_SetCallback@cb,postinc2
 33913  008856  C011  FFDD         	movff	I2C1_SetCallback@cb+1,postdec2
 33914                           
 33915                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 33916  00885A  5014               	movf	I2C1_SetCallback@idx^0,w,c
 33917  00885C  0D02               	mullw	2
 33918  00885E  0E48               	movlw	low (_I2C1_Status+12)
 33919  008860  24F3               	addwf	243,w,c
 33920  008862  6ED9               	movwf	fsr2l,c
 33921  008864  0E02               	movlw	high (_I2C1_Status+12)
 33922  008866  20F4               	addwfc	prodh,w,c
 33923  008868  6EDA               	movwf	fsr2h,c
 33924  00886A  C012  FFDE         	movff	I2C1_SetCallback@ptr,postinc2
 33925  00886E  C013  FFDD         	movff	I2C1_SetCallback@ptr+1,postdec2
 33926                           
 33927                           ;mcc_generated_files/i2c1_master.c: 304:     }
 33928  008872  0012               	return	
 33929  008874                     l19723:
 33930                           
 33931                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 33932  008874  5014               	movf	I2C1_SetCallback@idx^0,w,c
 33933  008876  0D02               	mullw	2
 33934  008878  0E3C               	movlw	low _I2C1_Status
 33935  00887A  24F3               	addwf	243,w,c
 33936  00887C  6ED9               	movwf	fsr2l,c
 33937  00887E  0E02               	movlw	high _I2C1_Status
 33938  008880  20F4               	addwfc	prodh,w,c
 33939  008882  6EDA               	movwf	fsr2h,c
 33940  008884  0E4C               	movlw	low _I2C1_CallbackReturnStop
 33941  008886  6EDE               	movwf	postinc2,c
 33942  008888  0E9C               	movlw	high _I2C1_CallbackReturnStop
 33943  00888A  6EDD               	movwf	postdec2,c
 33944                           
 33945                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 33946  00888C  5014               	movf	I2C1_SetCallback@idx^0,w,c
 33947  00888E  0D02               	mullw	2
 33948  008890  0E48               	movlw	low (_I2C1_Status+12)
 33949  008892  24F3               	addwf	243,w,c
 33950  008894  6ED9               	movwf	fsr2l,c
 33951  008896  0E02               	movlw	high (_I2C1_Status+12)
 33952  008898  20F4               	addwfc	prodh,w,c
 33953  00889A  6EDA               	movwf	fsr2h,c
 33954  00889C  0E00               	movlw	0
 33955  00889E  6EDE               	movwf	postinc2,c
 33956  0088A0  0E00               	movlw	0
 33957  0088A2  6EDD               	movwf	postdec2,c
 33958  0088A4  0012               	return		;funcret
 33959  0088A6                     __end_of_I2C1_SetCallback:
 33960                           	callstack 0
 33961                           
 33962 ;; *************** function _I2C1_SetBuffer *****************
 33963 ;; Defined at:
 33964 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 33965 ;; Parameters:    Size  Location     Type
 33966 ;;  buffer          2   15[COMRAM] PTR void 
 33967 ;;		 -> eusartparser@serial(4), cmdMemoryIsEmpty@tempSerial(4), memoryTEMP(16), var_sys_NVM(64), 
 33968 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_WriteNBytes@dat(17), I2C1_Write2ByteRegister@
      +reg(1), 
 33969 ;;		 -> I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2Byte
      +Register@reg(1), 
 33970 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), i2c
      +_readDataBlock@reg(2), 
 33971 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg
      +(1), 
 33972 ;;		 -> i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_writeNBytes@dat(
      +17), 
 33973 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33974 ;;  bufferSize      2   17[COMRAM] unsigned int 
 33975 ;; Auto vars:     Size  Location     Type
 33976 ;;		None
 33977 ;; Return value:  Size  Location     Type
 33978 ;;                  1    wreg      void 
 33979 ;; Registers used:
 33980 ;;		wreg, status,2, status,0
 33981 ;; Tracked objects:
 33982 ;;		On entry : 0/2
 33983 ;;		On exit  : 3F/2
 33984 ;;		Unchanged: 0/0
 33985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33986 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33989 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33990 ;;Total ram usage:        4 bytes
 33991 ;; Hardware stack levels used: 1
 33992 ;; Hardware stack levels required when called: 4
 33993 ;; This function calls:
 33994 ;;		Nothing
 33995 ;; This function is called by:
 33996 ;;		_wr1RegCompleteHandler
 33997 ;;		_i2c_writeNBytes
 33998 ;;		_rd1RegCompleteHandler
 33999 ;;		_rd2RegCompleteHandler
 34000 ;;		_wr2RegCompleteHandler
 34001 ;;		_rdBlkRegCompleteHandler
 34002 ;;		_i2c_readDataBlock
 34003 ;;		_I2C1_Read1ByteRegister
 34004 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 34005 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 34006 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 34007 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 34008 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 34009 ;; This function uses a non-reentrant model
 34010 ;;
 34011                           
 34012                           	psect	text179
 34013  0099A0                     __ptext179:
 34014                           	callstack 0
 34015  0099A0                     _I2C1_SetBuffer:
 34016                           	callstack 21
 34017                           
 34018                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 34019                           
 34020                           ;incstack = 0
 34021  0099A0  0102               	movlb	2	; () banked
 34022  0099A2  A75F               	btfss	(_I2C1_Status+35)& (0+255),3,b
 34023  0099A4  0012               	return	
 34024                           
 34025                           ; BSR set to: 2
 34026                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 34027  0099A6  C010  F259         	movff	I2C1_SetBuffer@buffer,_I2C1_Status+29
 34028  0099AA  C011  F25A         	movff	I2C1_SetBuffer@buffer+1,_I2C1_Status+30
 34029                           
 34030                           ; BSR set to: 2
 34031                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 34032  0099AE  C012  F25B         	movff	I2C1_SetBuffer@bufferSize,_I2C1_Status+31
 34033  0099B2  C013  F25C         	movff	I2C1_SetBuffer@bufferSize+1,_I2C1_Status+32
 34034                           
 34035                           ; BSR set to: 2
 34036                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 34037  0099B6  975F               	bcf	(_I2C1_Status+35)& (0+255),3,b
 34038                           
 34039                           ; BSR set to: 2
 34040  0099B8  0012               	return		;funcret
 34041  0099BA                     __end_of_I2C1_SetBuffer:
 34042                           	callstack 0
 34043                           
 34044 ;; *************** function _I2C1_MasterStop *****************
 34045 ;; Defined at:
 34046 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 34047 ;; Parameters:    Size  Location     Type
 34048 ;;		None
 34049 ;; Auto vars:     Size  Location     Type
 34050 ;;		None
 34051 ;; Return value:  Size  Location     Type
 34052 ;;                  1    wreg      void 
 34053 ;; Registers used:
 34054 ;;		None
 34055 ;; Tracked objects:
 34056 ;;		On entry : 0/2
 34057 ;;		On exit  : 0/0
 34058 ;;		Unchanged: 0/0
 34059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34064 ;;Total ram usage:        0 bytes
 34065 ;; Hardware stack levels used: 1
 34066 ;; Hardware stack levels required when called: 4
 34067 ;; This function calls:
 34068 ;;		Nothing
 34069 ;; This function is called by:
 34070 ;;		_I2C1_DO_SEND_STOP
 34071 ;; This function uses a non-reentrant model
 34072 ;;
 34073                           
 34074                           	psect	text180
 34075  009C50                     __ptext180:
 34076                           	callstack 0
 34077  009C50                     _I2C1_MasterStop:
 34078                           	callstack 15
 34079                           
 34080                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 34081                           
 34082                           ; BSR set to: 2
 34083                           ;incstack = 0
 34084  009C50  8497               	bsf	151,2,c	;volatile
 34085  009C52  0012               	return		;funcret
 34086  009C54                     __end_of_I2C1_MasterStop:
 34087                           	callstack 0
 34088                           
 34089 ;; *************** function _I2C1_MasterEnableRestart *****************
 34090 ;; Defined at:
 34091 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 34092 ;; Parameters:    Size  Location     Type
 34093 ;;		None
 34094 ;; Auto vars:     Size  Location     Type
 34095 ;;		None
 34096 ;; Return value:  Size  Location     Type
 34097 ;;                  1    wreg      void 
 34098 ;; Registers used:
 34099 ;;		None
 34100 ;; Tracked objects:
 34101 ;;		On entry : 0/2
 34102 ;;		On exit  : 0/0
 34103 ;;		Unchanged: 0/0
 34104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34109 ;;Total ram usage:        0 bytes
 34110 ;; Hardware stack levels used: 1
 34111 ;; Hardware stack levels required when called: 4
 34112 ;; This function calls:
 34113 ;;		Nothing
 34114 ;; This function is called by:
 34115 ;;		_I2C1_DO_SEND_RESTART_READ
 34116 ;;		_I2C1_DO_SEND_RESTART_WRITE
 34117 ;;		_I2C1_DO_SEND_RESTART
 34118 ;; This function uses a non-reentrant model
 34119 ;;
 34120                           
 34121                           	psect	text181
 34122  009C54                     __ptext181:
 34123                           	callstack 0
 34124  009C54                     _I2C1_MasterEnableRestart:
 34125                           	callstack 15
 34126                           
 34127                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 34128                           
 34129                           ;incstack = 0
 34130  009C54  8297               	bsf	151,1,c	;volatile
 34131  009C56  0012               	return		;funcret
 34132  009C58                     __end_of_I2C1_MasterEnableRestart:
 34133                           	callstack 0
 34134                           
 34135 ;; *************** function _I2C1_MasterStart *****************
 34136 ;; Defined at:
 34137 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 34138 ;; Parameters:    Size  Location     Type
 34139 ;;		None
 34140 ;; Auto vars:     Size  Location     Type
 34141 ;;		None
 34142 ;; Return value:  Size  Location     Type
 34143 ;;                  1    wreg      void 
 34144 ;; Registers used:
 34145 ;;		None
 34146 ;; Tracked objects:
 34147 ;;		On entry : 3F/2
 34148 ;;		On exit  : 3F/2
 34149 ;;		Unchanged: 3F/0
 34150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34155 ;;Total ram usage:        0 bytes
 34156 ;; Hardware stack levels used: 1
 34157 ;; Hardware stack levels required when called: 4
 34158 ;; This function calls:
 34159 ;;		Nothing
 34160 ;; This function is called by:
 34161 ;;		_I2C1_MasterOperation
 34162 ;; This function uses a non-reentrant model
 34163 ;;
 34164                           
 34165                           	psect	text182
 34166  009C58                     __ptext182:
 34167                           	callstack 0
 34168  009C58                     _I2C1_MasterStart:
 34169                           	callstack 19
 34170                           
 34171                           ; BSR set to: 2
 34172                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 34173                           
 34174                           ;incstack = 0
 34175  009C58  8097               	bsf	151,0,c	;volatile
 34176                           
 34177                           ; BSR set to: 2
 34178  009C5A  0012               	return		;funcret
 34179  009C5C                     __end_of_I2C1_MasterStart:
 34180                           	callstack 0
 34181                           
 34182 ;; *************** function _I2C1_Close *****************
 34183 ;; Defined at:
 34184 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 34185 ;; Parameters:    Size  Location     Type
 34186 ;;		None
 34187 ;; Auto vars:     Size  Location     Type
 34188 ;;  returnValue     1   15[COMRAM] enum E355
 34189 ;; Return value:  Size  Location     Type
 34190 ;;                  1    wreg      enum E355
 34191 ;; Registers used:
 34192 ;;		wreg, status,2, cstack
 34193 ;; Tracked objects:
 34194 ;;		On entry : 0/2
 34195 ;;		On exit  : 33/2
 34196 ;;		Unchanged: 0/0
 34197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34199 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34201 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34202 ;;Total ram usage:        1 bytes
 34203 ;; Hardware stack levels used: 1
 34204 ;; Hardware stack levels required when called: 5
 34205 ;; This function calls:
 34206 ;;		_I2C1_MasterClearIrq
 34207 ;;		_I2C1_MasterClose
 34208 ;;		_I2C1_MasterDisableIrq
 34209 ;; This function is called by:
 34210 ;;		_i2c_writeNBytes
 34211 ;;		_i2c_readDataBlock
 34212 ;;		_I2C1_Read1ByteRegister
 34213 ;; This function uses a non-reentrant model
 34214 ;;
 34215                           
 34216                           	psect	text183
 34217  00989E                     __ptext183:
 34218                           	callstack 0
 34219  00989E                     _I2C1_Close:
 34220                           	callstack 20
 34221                           
 34222                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 34223                           
 34224                           ; BSR set to: 2
 34225                           ;incstack = 0
 34226  00989E  0E01               	movlw	1
 34227  0098A0  6E10               	movwf	I2C1_Close@returnValue^0,c
 34228                           
 34229                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 34230  0098A2  0102               	movlb	2	; () banked
 34231  0098A4  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 34232  0098A6  D00A               	goto	l20157
 34233                           
 34234                           ; BSR set to: 2
 34235                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 34236  0098A8  955F               	bcf	(_I2C1_Status+35)& (0+255),2,b
 34237                           
 34238                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 34239  0098AA  6958               	setf	(_I2C1_Status+28)& (0+255),b
 34240                           
 34241                           ; BSR set to: 2
 34242                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 34243  0098AC  EC13  F04E         	call	_I2C1_MasterClearIrq	;wreg free
 34244                           
 34245                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 34246  0098B0  EC2E  F04E         	call	_I2C1_MasterDisableIrq	;wreg free
 34247                           
 34248                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 34249  0098B4  EC30  F04E         	call	_I2C1_MasterClose	;wreg free
 34250                           
 34251                           ; BSR set to: 14
 34252                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 34253  0098B8  C25E  F010         	movff	_I2C1_Status+34,I2C1_Close@returnValue
 34254  0098BC                     l20157:
 34255                           
 34256                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 34257  0098BC  5010               	movf	I2C1_Close@returnValue^0,w,c
 34258  0098BE  0012               	return		;funcret
 34259  0098C0                     __end_of_I2C1_Close:
 34260                           	callstack 0
 34261                           
 34262 ;; *************** function _I2C1_MasterDisableIrq *****************
 34263 ;; Defined at:
 34264 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 34265 ;; Parameters:    Size  Location     Type
 34266 ;;		None
 34267 ;; Auto vars:     Size  Location     Type
 34268 ;;		None
 34269 ;; Return value:  Size  Location     Type
 34270 ;;                  1    wreg      void 
 34271 ;; Registers used:
 34272 ;;		None
 34273 ;; Tracked objects:
 34274 ;;		On entry : 3F/E
 34275 ;;		On exit  : 3F/E
 34276 ;;		Unchanged: 0/0
 34277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34282 ;;Total ram usage:        0 bytes
 34283 ;; Hardware stack levels used: 1
 34284 ;; Hardware stack levels required when called: 4
 34285 ;; This function calls:
 34286 ;;		Nothing
 34287 ;; This function is called by:
 34288 ;;		_I2C1_Close
 34289 ;; This function uses a non-reentrant model
 34290 ;;
 34291                           
 34292                           	psect	text184
 34293  009C5C                     __ptext184:
 34294                           	callstack 0
 34295  009C5C                     _I2C1_MasterDisableIrq:
 34296                           	callstack 20
 34297                           
 34298                           ; BSR set to: 14
 34299                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 34300                           
 34301                           ;incstack = 0
 34302  009C5C  91C5               	bcf	197,0,b	;volatile
 34303                           
 34304                           ; BSR set to: 14
 34305  009C5E  0012               	return		;funcret
 34306  009C60                     __end_of_I2C1_MasterDisableIrq:
 34307                           	callstack 0
 34308                           
 34309 ;; *************** function _I2C1_MasterClose *****************
 34310 ;; Defined at:
 34311 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 34312 ;; Parameters:    Size  Location     Type
 34313 ;;		None
 34314 ;; Auto vars:     Size  Location     Type
 34315 ;;		None
 34316 ;; Return value:  Size  Location     Type
 34317 ;;                  1    wreg      void 
 34318 ;; Registers used:
 34319 ;;		None
 34320 ;; Tracked objects:
 34321 ;;		On entry : 3F/E
 34322 ;;		On exit  : 3F/E
 34323 ;;		Unchanged: 3F/0
 34324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34329 ;;Total ram usage:        0 bytes
 34330 ;; Hardware stack levels used: 1
 34331 ;; Hardware stack levels required when called: 4
 34332 ;; This function calls:
 34333 ;;		Nothing
 34334 ;; This function is called by:
 34335 ;;		_I2C1_Close
 34336 ;; This function uses a non-reentrant model
 34337 ;;
 34338                           
 34339                           	psect	text185
 34340  009C60                     __ptext185:
 34341                           	callstack 0
 34342  009C60                     _I2C1_MasterClose:
 34343                           	callstack 20
 34344                           
 34345                           ; BSR set to: 14
 34346                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 34347                           
 34348                           ; BSR set to: 14
 34349                           ;incstack = 0
 34350  009C60  9A96               	bcf	150,5,c	;volatile
 34351                           
 34352                           ; BSR set to: 14
 34353  009C62  0012               	return		;funcret
 34354  009C64                     __end_of_I2C1_MasterClose:
 34355                           	callstack 0
 34356                           
 34357 ;; *************** function _I2C1_MasterClearIrq *****************
 34358 ;; Defined at:
 34359 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 34360 ;; Parameters:    Size  Location     Type
 34361 ;;		None
 34362 ;; Auto vars:     Size  Location     Type
 34363 ;;		None
 34364 ;; Return value:  Size  Location     Type
 34365 ;;                  1    wreg      void 
 34366 ;; Registers used:
 34367 ;;		None
 34368 ;; Tracked objects:
 34369 ;;		On entry : 33/2
 34370 ;;		On exit  : 3F/E
 34371 ;;		Unchanged: 0/0
 34372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34377 ;;Total ram usage:        0 bytes
 34378 ;; Hardware stack levels used: 1
 34379 ;; Hardware stack levels required when called: 4
 34380 ;; This function calls:
 34381 ;;		Nothing
 34382 ;; This function is called by:
 34383 ;;		_I2C1_Open
 34384 ;;		_I2C1_Close
 34385 ;;		_I2C1_MasterFsm
 34386 ;; This function uses a non-reentrant model
 34387 ;;
 34388                           
 34389                           	psect	text186
 34390  009C26                     __ptext186:
 34391                           	callstack 0
 34392  009C26                     _I2C1_MasterClearIrq:
 34393                           	callstack 20
 34394                           
 34395                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 34396                           
 34397                           ; BSR set to: 14
 34398                           ;incstack = 0
 34399  009C26  010E               	movlb	14	; () banked
 34400  009C28  91CD               	bcf	205,0,b	;volatile
 34401                           
 34402                           ; BSR set to: 14
 34403  009C2A  0012               	return		;funcret
 34404  009C2C                     __end_of_I2C1_MasterClearIrq:
 34405                           	callstack 0
 34406                           
 34407 ;; *************** function _INTERRUPT_InterruptManager *****************
 34408 ;; Defined at:
 34409 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 34410 ;; Parameters:    Size  Location     Type
 34411 ;;		None
 34412 ;; Auto vars:     Size  Location     Type
 34413 ;;		None
 34414 ;; Return value:  Size  Location     Type
 34415 ;;                  1    wreg      void 
 34416 ;; Registers used:
 34417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 34418 ;; Tracked objects:
 34419 ;;		On entry : 0/0
 34420 ;;		On exit  : 0/0
 34421 ;;		Unchanged: 0/0
 34422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34425 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34426 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34427 ;;Total ram usage:        6 bytes
 34428 ;; Hardware stack levels used: 1
 34429 ;; Hardware stack levels required when called: 3
 34430 ;; This function calls:
 34431 ;;		Absolute function
 34432 ;;		_EUSART1_Receive_ISR
 34433 ;;		_EUSART1_Transmit_ISR
 34434 ;;		_TMR0_ISR
 34435 ;;		_TMR1_ISR
 34436 ;;		_TMR2_ISR
 34437 ;; This function is called by:
 34438 ;;		Interrupt level 2
 34439 ;; This function uses a non-reentrant model
 34440 ;;
 34441                           
 34442                           	psect	intcode
 34443  000008                     __pintcode:
 34444                           	callstack 0
 34445  000008                     _INTERRUPT_InterruptManager:
 34446                           	callstack 14
 34447                           
 34448                           ; BSR set to: 14
 34449                           ;incstack = 0
 34450  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 34451  00000A  CFFA F00A          	movff	pclath,??_INTERRUPT_InterruptManager
 34452  00000E  CFFB F00B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 34453  000012  CFD9 F00C          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 34454  000016  CFDA F00D          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 34455  00001A  CFF3 F00E          	movff	prodl,??_INTERRUPT_InterruptManager+4
 34456  00001E  CFF4 F00F          	movff	prodh,??_INTERRUPT_InterruptManager+5
 34457                           
 34458                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 34459  000022  010E               	movlb	14	; () banked
 34460  000024  BBC2               	btfsc	194,5,b	;volatile
 34461                           
 34462                           ; BSR set to: 14
 34463  000026  ABCA               	btfss	202,5,b	;volatile
 34464  000028  D003               	goto	i2l867
 34465                           
 34466                           ; BSR set to: 14
 34467                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 34468  00002A  ECF6  F04B         	call	_TMR0_ISR	;wreg free
 34469                           
 34470                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 34471  00002E  D028               	goto	i2l873
 34472  000030                     i2l867:
 34473                           
 34474                           ; BSR set to: 14
 34475  000030  ACF2               	btfss	242,6,c	;volatile
 34476  000032  D026               	goto	i2l873
 34477                           
 34478                           ; BSR set to: 14
 34479                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
 34480  000034  B9C5               	btfsc	197,4,b	;volatile
 34481                           
 34482                           ; BSR set to: 14
 34483  000036  A9CD               	btfss	205,4,b	;volatile
 34484  000038  D009               	goto	i2l870
 34485                           
 34486                           ; BSR set to: 14
 34487                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_TxDefaultInterruptHandler();
 34488  00003A  D801               	call	i2u3369_48
 34489  00003C  D021               	goto	i2l873
 34490  00003E                     i2u3369_48:
 34491  00003E  0005               	push	
 34492  000040  6EFA               	movwf	pclath,c
 34493  000042  0102               	movlb	2	; () banked
 34494  000044  51ED               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 34495  000046  6EFD               	movwf	tosl,c
 34496  000048  51EE               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 34497  00004A  D00B               	goto	L94
 34498  00004C                     i2l870:
 34499                           
 34500                           ; BSR set to: 14
 34501  00004C  BBC5               	btfsc	197,5,b	;volatile
 34502                           
 34503                           ; BSR set to: 14
 34504  00004E  ABCD               	btfss	205,5,b	;volatile
 34505  000050  D00C               	goto	i2l872
 34506                           
 34507                           ; BSR set to: 14
 34508                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_RxDefaultInterruptHandler();
 34509  000052  D801               	call	i2u3372_48
 34510  000054  D015               	goto	i2l873
 34511  000056                     i2u3372_48:
 34512  000056  0005               	push	
 34513  000058  6EFA               	movwf	pclath,c
 34514  00005A  0102               	movlb	2	; () banked
 34515  00005C  51EB               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 34516  00005E  6EFD               	movwf	tosl,c
 34517  000060  51EC               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 34518  000062                     L94:
 34519  000062  6EFE               	movwf	tosh,c
 34520  000064  6AFF               	clrf	tosu,c
 34521  000066  50FA               	movf	pclath,w,c
 34522  000068  0012               	return		;indir
 34523  00006A                     i2l872:
 34524                           
 34525                           ; BSR set to: 14
 34526  00006A  B1C6               	btfsc	198,0,b	;volatile
 34527                           
 34528                           ; BSR set to: 14
 34529  00006C  A1CE               	btfss	206,0,b	;volatile
 34530  00006E  D003               	goto	i2l874
 34531                           
 34532                           ; BSR set to: 14
 34533                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR1_ISR();
 34534  000070  ECA8  F049         	call	_TMR1_ISR	;wreg free
 34535                           
 34536                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 34537  000074  D005               	goto	i2l873
 34538  000076                     i2l874:
 34539                           
 34540                           ; BSR set to: 14
 34541  000076  B3C6               	btfsc	198,1,b	;volatile
 34542                           
 34543                           ; BSR set to: 14
 34544  000078  A3CE               	btfss	206,1,b	;volatile
 34545  00007A  D002               	goto	i2l873
 34546                           
 34547                           ; BSR set to: 14
 34548                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             TMR2_ISR();
 34549  00007C  ECA0  F033         	call	_TMR2_ISR	;wreg free
 34550  000080                     i2l873:
 34551                           
 34552                           ; BSR set to: 14
 34553  000080  C00F  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
 34554  000084  C00E  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
 34555  000088  C00D  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 34556  00008C  C00C  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 34557  000090  C00B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 34558  000094  C00A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 34559  000098  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 34560  00009A  0011               	retfie		f
 34561  00009C                     __end_of_INTERRUPT_InterruptManager:
 34562                           	callstack 0
 34563                           
 34564 ;; *************** function _TMR2_ISR *****************
 34565 ;; Defined at:
 34566 ;;		line 180 in file "mcc_generated_files/tmr2.c"
 34567 ;; Parameters:    Size  Location     Type
 34568 ;;		None
 34569 ;; Auto vars:     Size  Location     Type
 34570 ;;		None
 34571 ;; Return value:  Size  Location     Type
 34572 ;;                  1    wreg      void 
 34573 ;; Registers used:
 34574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 34575 ;; Tracked objects:
 34576 ;;		On entry : 3F/E
 34577 ;;		On exit  : 0/0
 34578 ;;		Unchanged: 0/0
 34579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34584 ;;Total ram usage:        0 bytes
 34585 ;; Hardware stack levels used: 1
 34586 ;; Hardware stack levels required when called: 2
 34587 ;; This function calls:
 34588 ;;		Absolute function
 34589 ;;		_ReadADC
 34590 ;;		_TMR2_DefaultInterruptHandler
 34591 ;;		_controlTimeslots
 34592 ;;		_refreshSegment
 34593 ;; This function is called by:
 34594 ;;		_INTERRUPT_InterruptManager
 34595 ;; This function uses a non-reentrant model
 34596 ;;
 34597                           
 34598                           	psect	text188
 34599  006740                     __ptext188:
 34600                           	callstack 0
 34601  006740                     _TMR2_ISR:
 34602                           	callstack 14
 34603                           
 34604                           ; BSR set to: 14
 34605                           ;mcc_generated_files/tmr2.c: 184:     PIR4bits.TMR2IF = 0;
 34606                           
 34607                           ;incstack = 0
 34608  006740  93CE               	bcf	206,1,b	;volatile
 34609                           
 34610                           ; BSR set to: 14
 34611                           ;mcc_generated_files/tmr2.c: 188:                 ReadADC();
 34612  006742  ECF3  F046         	call	_ReadADC	;wreg free
 34613                           
 34614                           ;mcc_generated_files/tmr2.c: 191:             refreshSegment();
 34615  006746  EC94  F041         	call	_refreshSegment	;wreg free
 34616                           
 34617                           ; BSR set to: 0
 34618                           ;mcc_generated_files/tmr2.c: 193:             if(ts_system.ts_TimeSlotMain>0)
 34619  00674A  5192               	movf	(_ts_system+3)& (0+255),w,b	;volatile
 34620  00674C  A4D8               	btfss	status,2,c
 34621                           
 34622                           ; BSR set to: 0
 34623                           ;mcc_generated_files/tmr2.c: 194:                 {;mcc_generated_files/tmr2.c: 195:    
      +                                       ts_system.ts_TimeSlotMain--;
 34624  00674E  0792               	decf	(_ts_system+3)& (0+255),f,b	;volatile
 34625                           
 34626                           ; BSR set to: 0
 34627                           ;mcc_generated_files/tmr2.c: 198:             if (ts_system.ts_TimeSlot50ms > 0)
 34628  006750  5190               	movf	(_ts_system+1)& (0+255),w,b	;volatile
 34629  006752  B4D8               	btfsc	status,2,c
 34630  006754  D002               	goto	i2l24187
 34631                           
 34632                           ; BSR set to: 0
 34633                           ;mcc_generated_files/tmr2.c: 199:                 {;mcc_generated_files/tmr2.c: 200:    
      +                                       ts_system.ts_TimeSlot50ms--;
 34634  006756  0790               	decf	(_ts_system+1)& (0+255),f,b	;volatile
 34635                           
 34636                           ;mcc_generated_files/tmr2.c: 201:                 }
 34637  006758  D085               	goto	i2l24259
 34638  00675A                     i2l24187:
 34639                           
 34640                           ; BSR set to: 0
 34641                           ;mcc_generated_files/tmr2.c: 203:                 {;mcc_generated_files/tmr2.c: 204:    
      +                                       ts_system.ts_TimeSlot50ms = 50;
 34642  00675A  0E32               	movlw	50
 34643  00675C  6F90               	movwf	(_ts_system+1)& (0+255),b	;volatile
 34644                           
 34645                           ; BSR set to: 0
 34646                           ;mcc_generated_files/tmr2.c: 208:                     controlTimeslots();
 34647  00675E  EC11  F036         	call	_controlTimeslots	;wreg free
 34648                           
 34649                           ; BSR set to: 0
 34650                           ;mcc_generated_files/tmr2.c: 210:                       if (Counterchoose == 0)
 34651  006762  5189               	movf	_Counterchoose& (0+255),w,b
 34652  006764  A4D8               	btfss	status,2,c
 34653  006766  D002               	goto	i2l24195
 34654                           
 34655                           ; BSR set to: 0
 34656                           ;mcc_generated_files/tmr2.c: 211:                                {;mcc_generated_files/t
      +                          mr2.c: 212:                                    Counterchoose = 1;
 34657  006768  0E01               	movlw	1
 34658  00676A  D001               	goto	L95
 34659  00676C                     i2l24195:
 34660                           
 34661                           ; BSR set to: 0
 34662                           ;mcc_generated_files/tmr2.c: 215:                                {;mcc_generated_files/t
      +                          mr2.c: 216:                                    Counterchoose = 0;
 34663  00676C  0E00               	movlw	0
 34664  00676E                     L95:
 34665  00676E  6F89               	movwf	_Counterchoose& (0+255),b
 34666                           
 34667                           ; BSR set to: 0
 34668                           ;mcc_generated_files/tmr2.c: 218:                            if (var_sys.LearningIsEnabl
      +                          ed==NO)
 34669                           
 34670                           ;mcc_generated_files/tmr2.c: 217:                                }
 34671  006770  0101               	movlb	1	; () banked
 34672  006772  517B               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 34673  006774  A4D8               	btfss	status,2,c
 34674  006776  D034               	goto	i2l24221
 34675                           
 34676                           ; BSR set to: 1
 34677                           ;mcc_generated_files/tmr2.c: 219:                            {;mcc_generated_files/tmr2.
      +                          c: 222:                                if (var_sys.TimeMaxMotorIsON > 0 && var_sys.Activ
      +                          atecounter != stoped)
 34678  006778  516D               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 34679  00677A  116E               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 34680  00677C  116F               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 34681  00677E  1170               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 34682  006780  B4D8               	btfsc	status,2,c
 34683  006782  D008               	goto	i2l1266
 34684                           
 34685                           ; BSR set to: 1
 34686  006784  516B               	movf	(_var_sys+22)& (0+255),w,b	;volatile
 34687  006786  B4D8               	btfsc	status,2,c
 34688  006788  D005               	goto	i2l1266
 34689                           
 34690                           ; BSR set to: 1
 34691                           ;mcc_generated_files/tmr2.c: 223:                                {;mcc_generated_files/t
      +                          mr2.c: 225:                                     var_sys.TimeMaxMotorIsON--;
 34692  00678A  076D               	decf	(_var_sys+24)& (0+255),f,b	;volatile
 34693  00678C  0E00               	movlw	0
 34694  00678E  5B6E               	subwfb	(_var_sys+25)& (0+255),f,b	;volatile
 34695  006790  5B6F               	subwfb	(_var_sys+26)& (0+255),f,b	;volatile
 34696  006792  5B70               	subwfb	(_var_sys+27)& (0+255),f,b	;volatile
 34697  006794                     i2l1266:
 34698                           
 34699                           ; BSR set to: 1
 34700                           ;mcc_generated_files/tmr2.c: 230:                                if (var_sys.Activatecou
      +                          nter == open)
 34701  006794  056B               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 34702  006796  A4D8               	btfss	status,2,c
 34703  006798  D00E               	goto	i2l24211
 34704                           
 34705                           ; BSR set to: 1
 34706                           ;mcc_generated_files/tmr2.c: 231:                                {;mcc_generated_files/t
      +                          mr2.c: 232:                                    {;mcc_generated_files/tmr2.c: 234:       
      +                                                            if (powerControl_st.decelarationActive==YES)
 34707  00679A  053C               	decf	_powerControl_st& (0+255),w,b
 34708  00679C  A4D8               	btfss	status,2,c
 34709  00679E  D004               	goto	i2u2982_40
 34710                           
 34711                           ; BSR set to: 1
 34712                           ;mcc_generated_files/tmr2.c: 235:                                         {;mcc_generate
      +                          d_files/tmr2.c: 236:                                             if(Counterchoose ==1){
 34713  0067A0  0100               	movlb	0	; () banked
 34714  0067A2  0589               	decf	_Counterchoose& (0+255),w,b
 34715  0067A4  A4D8               	btfss	status,2,c
 34716  0067A6  D05E               	goto	i2l24259
 34717  0067A8                     i2u2982_40:
 34718                           
 34719                           ;mcc_generated_files/tmr2.c: 237:                                               var_sys.
      +                          PositionActual++;
 34720  0067A8  0E01               	movlw	1
 34721  0067AA  0101               	movlb	1	; () banked
 34722  0067AC  2773               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 34723  0067AE  0E00               	movlw	0
 34724  0067B0  2374               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 34725  0067B2  2375               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 34726  0067B4  D013               	goto	L96
 34727  0067B6                     i2l24211:
 34728                           
 34729                           ; BSR set to: 1
 34730  0067B6  0E02               	movlw	2
 34731  0067B8  196B               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 34732  0067BA  A4D8               	btfss	status,2,c
 34733  0067BC  D053               	goto	i2l24259
 34734                           
 34735                           ; BSR set to: 1
 34736                           ;mcc_generated_files/tmr2.c: 250:                                {;mcc_generated_files/t
      +                          mr2.c: 251:                                        if (powerControl_st.decelarationActiv
      +                          e==YES)
 34737  0067BE  053C               	decf	_powerControl_st& (0+255),w,b
 34738  0067C0  A4D8               	btfss	status,2,c
 34739  0067C2  D004               	goto	i2u2985_40
 34740                           
 34741                           ; BSR set to: 1
 34742                           ;mcc_generated_files/tmr2.c: 252:                                         {;mcc_generate
      +                          d_files/tmr2.c: 253:                                             if(Counterchoose ==1){
 34743  0067C4  0100               	movlb	0	; () banked
 34744  0067C6  0589               	decf	_Counterchoose& (0+255),w,b
 34745  0067C8  A4D8               	btfss	status,2,c
 34746  0067CA  D04C               	goto	i2l24259
 34747  0067CC                     i2u2985_40:
 34748                           
 34749                           ;mcc_generated_files/tmr2.c: 254:                                               var_sys.
      +                          PositionActual--;
 34750  0067CC  0EFF               	movlw	255
 34751  0067CE  0101               	movlb	1	; () banked
 34752  0067D0  2773               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 34753  0067D2  0EFF               	movlw	255
 34754  0067D4  2374               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 34755  0067D6  0EFF               	movlw	255
 34756  0067D8  2375               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 34757  0067DA  0EFF               	movlw	255
 34758  0067DC                     L96:
 34759  0067DC  2376               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 34760                           
 34761                           ;mcc_generated_files/tmr2.c: 263:                            }
 34762  0067DE  D042               	goto	i2l24259
 34763  0067E0                     i2l24221:
 34764                           
 34765                           ; BSR set to: 1
 34766                           ;mcc_generated_files/tmr2.c: 266:                            {;mcc_generated_files/tmr2.
      +                          c: 267:                                if (var_sys.Counter_Learning ==1)
 34767  0067E0  056C               	decf	(_var_sys+23)& (0+255),w,b	;volatile
 34768  0067E2  A4D8               	btfss	status,2,c
 34769  0067E4  D01A               	goto	i2l1277
 34770                           
 34771                           ; BSR set to: 1
 34772                           ;mcc_generated_files/tmr2.c: 268:                                {;mcc_generated_files/t
      +                          mr2.c: 270:                                     if (var_sys.Activatecounter == open)
 34773  0067E6  056B               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 34774  0067E8  A4D8               	btfss	status,2,c
 34775  0067EA  D00A               	goto	i2l24231
 34776                           
 34777                           ; BSR set to: 1
 34778                           ;mcc_generated_files/tmr2.c: 271:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 273:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 34779  0067EC  059C               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 34780  0067EE  B4D8               	btfsc	status,2,c
 34781  0067F0  D014               	goto	i2l1277
 34782                           
 34783                           ; BSR set to: 1
 34784                           ;mcc_generated_files/tmr2.c: 282:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 283:                                              learn_st.timeOpen++
      +                          ;
 34785  0067F2  0E01               	movlw	1
 34786  0067F4  271D               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 34787  0067F6  0E00               	movlw	0
 34788  0067F8  231E               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 34789  0067FA  231F               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 34790  0067FC  2320               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 34791  0067FE  D00D               	goto	i2l1277
 34792  006800                     i2l24231:
 34793                           
 34794                           ; BSR set to: 1
 34795  006800  0E02               	movlw	2
 34796  006802  196B               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 34797  006804  A4D8               	btfss	status,2,c
 34798  006806  D009               	goto	i2l1277
 34799                           
 34800                           ; BSR set to: 1
 34801                           ;mcc_generated_files/tmr2.c: 287:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 289:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 34802  006808  059C               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 34803  00680A  B4D8               	btfsc	status,2,c
 34804  00680C  D006               	goto	i2l1277
 34805                           
 34806                           ; BSR set to: 1
 34807                           ;mcc_generated_files/tmr2.c: 297:                                             {;mcc_gene
      +                          rated_files/tmr2.c: 298:                                                learn_st.timeClo
      +                          se++;
 34808  00680E  0E01               	movlw	1
 34809  006810  2719               	addwf	_learn_st& (0+255),f,b	;volatile
 34810  006812  0E00               	movlw	0
 34811  006814  231A               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 34812  006816  231B               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 34813  006818  231C               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 34814  00681A                     i2l1277:
 34815                           
 34816                           ; BSR set to: 1
 34817                           ;mcc_generated_files/tmr2.c: 304:                                 if (var_sys.LearningDe
      +                          celaration ==1 && var_sys.programinAutomatic == 1)
 34818  00681A  059C               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 34819  00681C  A4D8               	btfss	status,2,c
 34820  00681E  D022               	goto	i2l24259
 34821                           
 34822                           ; BSR set to: 1
 34823  006820  057F               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 34824  006822  A4D8               	btfss	status,2,c
 34825  006824  D01F               	goto	i2l24259
 34826                           
 34827                           ; BSR set to: 1
 34828                           ;mcc_generated_files/tmr2.c: 305:                                 {;mcc_generated_files/
      +                          tmr2.c: 308:                                        if ( ts_system.ts_TimeSlot500ms > 0)
 34829  006826  0100               	movlb	0	; () banked
 34830  006828  518F               	movf	_ts_system& (0+255),w,b	;volatile
 34831  00682A  B4D8               	btfsc	status,2,c
 34832  00682C  D002               	goto	i2l24245
 34833                           
 34834                           ; BSR set to: 0
 34835                           ;mcc_generated_files/tmr2.c: 309:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 310:                                                ts_system.ts_Time
      +                          Slot500ms--;
 34836  00682E  078F               	decf	_ts_system& (0+255),f,b	;volatile
 34837                           
 34838                           ;mcc_generated_files/tmr2.c: 311:                                            }
 34839  006830  D019               	goto	i2l24259
 34840  006832                     i2l24245:
 34841                           
 34842                           ; BSR set to: 0
 34843                           ;mcc_generated_files/tmr2.c: 314:                                          {;mcc_generat
      +                          ed_files/tmr2.c: 315:                                             ts_system.ts_TimeSlot5
      +                          00ms = 10;
 34844  006832  0E0A               	movlw	10
 34845  006834  6F8F               	movwf	_ts_system& (0+255),b	;volatile
 34846                           
 34847                           ; BSR set to: 0
 34848                           ;mcc_generated_files/tmr2.c: 317:                                             if ( var_s
      +                          ys.Activatecounter ==open )
 34849  006836  0101               	movlb	1	; () banked
 34850  006838  056B               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 34851  00683A  A4D8               	btfss	status,2,c
 34852  00683C  D008               	goto	i2l24253
 34853                           
 34854                           ; BSR set to: 1
 34855                           ;mcc_generated_files/tmr2.c: 318:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 319:                                                  learn_st.ti
      +                          meDecelerationOpen++;
 34856  00683E  2B22               	incf	(_learn_st+9)& (0+255),f,b	;volatile
 34857                           
 34858                           ; BSR set to: 1
 34859                           ;mcc_generated_files/tmr2.c: 320:                                                  learn
      +                          _st.timeOpen++;
 34860  006840  0E01               	movlw	1
 34861  006842  271D               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 34862  006844  0E00               	movlw	0
 34863  006846  231E               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 34864  006848  231F               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 34865  00684A  2320               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 34866                           
 34867                           ;mcc_generated_files/tmr2.c: 322:                                                }
 34868  00684C  D00B               	goto	i2l24259
 34869  00684E                     i2l24253:
 34870                           
 34871                           ; BSR set to: 1
 34872  00684E  0E02               	movlw	2
 34873  006850  196B               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 34874  006852  A4D8               	btfss	status,2,c
 34875  006854  D007               	goto	i2l24259
 34876                           
 34877                           ; BSR set to: 1
 34878                           ;mcc_generated_files/tmr2.c: 325:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 326:                                                  learn_st.ti
      +                          meDecelerationClose++;
 34879  006856  2B21               	incf	(_learn_st+8)& (0+255),f,b	;volatile
 34880                           
 34881                           ; BSR set to: 1
 34882                           ;mcc_generated_files/tmr2.c: 327:                                                  learn
      +                          _st.timeClose++;
 34883  006858  0E01               	movlw	1
 34884  00685A  2719               	addwf	_learn_st& (0+255),f,b	;volatile
 34885  00685C  0E00               	movlw	0
 34886  00685E  231A               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 34887  006860  231B               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 34888  006862  231C               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 34889  006864                     i2l24259:
 34890                           
 34891                           ;mcc_generated_files/tmr2.c: 335:     if(TMR2_InterruptHandler)
 34892  006864  0102               	movlb	2	; () banked
 34893  006866  51DD               	movf	_TMR2_InterruptHandler& (0+255),w,b
 34894  006868  11DE               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 34895  00686A  B4D8               	btfsc	status,2,c
 34896  00686C  0012               	return	
 34897                           
 34898                           ; BSR set to: 2
 34899                           ;mcc_generated_files/tmr2.c: 336:     {;mcc_generated_files/tmr2.c: 337:         TMR2_In
      +                          terruptHandler();
 34900  00686E  D801               	call	i2u2997_48
 34901  006870  0012               	return	
 34902  006872                     i2u2997_48:
 34903  006872  0005               	push	
 34904  006874  6EFA               	movwf	pclath,c
 34905  006876  51DD               	movf	_TMR2_InterruptHandler& (0+255),w,b
 34906  006878  6EFD               	movwf	tosl,c
 34907  00687A  51DE               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 34908  00687C  6EFE               	movwf	tosh,c
 34909  00687E  6AFF               	clrf	tosu,c
 34910  006880  50FA               	movf	pclath,w,c
 34911  006882  0012               	return		;indir
 34912  006884                     __end_of_TMR2_ISR:
 34913                           	callstack 0
 34914                           
 34915 ;; *************** function _refreshSegment *****************
 34916 ;; Defined at:
 34917 ;;		line 50 in file "outputs_MC50.c"
 34918 ;; Parameters:    Size  Location     Type
 34919 ;;		None
 34920 ;; Auto vars:     Size  Location     Type
 34921 ;;		None
 34922 ;; Return value:  Size  Location     Type
 34923 ;;                  1    wreg      void 
 34924 ;; Registers used:
 34925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34926 ;; Tracked objects:
 34927 ;;		On entry : 31/E
 34928 ;;		On exit  : 3F/0
 34929 ;;		Unchanged: 0/0
 34930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34935 ;;Total ram usage:        0 bytes
 34936 ;; Hardware stack levels used: 1
 34937 ;; Hardware stack levels required when called: 1
 34938 ;; This function calls:
 34939 ;;		_Segments_Set
 34940 ;; This function is called by:
 34941 ;;		_TMR2_ISR
 34942 ;; This function uses a non-reentrant model
 34943 ;;
 34944                           
 34945                           	psect	text189
 34946  008328                     __ptext189:
 34947                           	callstack 0
 34948  008328                     _refreshSegment:
 34949                           	callstack 14
 34950                           
 34951                           ;outputs_MC50.c: 54:     if (dispStruct.intermitentFreq==0||dispStruct.upFase==1)
 34952                           
 34953                           ;incstack = 0
 34954  008328  0100               	movlb	0	; () banked
 34955  00832A  5163               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 34956  00832C  1164               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 34957  00832E  B4D8               	btfsc	status,2,c
 34958  008330  D003               	goto	i2u1544_40
 34959                           
 34960                           ; BSR set to: 0
 34961  008332  0565               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 34962  008334  A4D8               	btfss	status,2,c
 34963  008336  D01F               	goto	i2l2149
 34964  008338                     i2u1544_40:
 34965                           
 34966                           ; BSR set to: 0
 34967                           ;outputs_MC50.c: 55:     {;outputs_MC50.c: 56:         if (dispStruct.lastDisplay==disp2
      +                          _e)
 34968  008338  0562               	decf	(_dispStruct+2)& (0+255),w,b	;volatile
 34969  00833A  A4D8               	btfss	status,2,c
 34970  00833C  D00D               	goto	i2l2144
 34971                           
 34972                           ; BSR set to: 0
 34973                           
 34974                           ;outputs_MC50.c: 57:         {;outputs_MC50.c: 58:             do { LATCbits.LATC0 = 0; 
      +                          } while(0);
 34975  00833E  9085               	bcf	133,0,c	;volatile
 34976                           
 34977                           ; BSR set to: 0
 34978                           ;outputs_MC50.c: 59:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play1]);
 34979  008340  0ED2               	movlw	low _DispTable
 34980  008342  2560               	addwf	_dispStruct& (0+255),w,b	;volatile
 34981  008344  6ED9               	movwf	fsr2l,c
 34982  008346  6ADA               	clrf	fsr2h,c
 34983  008348  0E03               	movlw	high _DispTable
 34984  00834A  22DA               	addwfc	fsr2h,f,c
 34985  00834C  50DF               	movf	indf2,w,c
 34986  00834E  EC97  F04D         	call	_Segments_Set
 34987  008352  8285               	bsf	133,1,c	;volatile
 34988                           
 34989                           ;outputs_MC50.c: 61:             dispStruct.lastDisplay=disp1_e;
 34990  008354  0E00               	movlw	0
 34991  008356  D00C               	goto	L97
 34992  008358                     i2l2144:
 34993                           
 34994                           ; BSR set to: 0
 34995  008358  9285               	bcf	133,1,c	;volatile
 34996                           
 34997                           ; BSR set to: 0
 34998                           ;outputs_MC50.c: 66:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play2]);
 34999  00835A  0ED2               	movlw	low _DispTable
 35000  00835C  2561               	addwf	(_dispStruct+1)& (0+255),w,b	;volatile
 35001  00835E  6ED9               	movwf	fsr2l,c
 35002  008360  6ADA               	clrf	fsr2h,c
 35003  008362  0E03               	movlw	high _DispTable
 35004  008364  22DA               	addwfc	fsr2h,f,c
 35005  008366  50DF               	movf	indf2,w,c
 35006  008368  EC97  F04D         	call	_Segments_Set
 35007  00836C  8085               	bsf	133,0,c	;volatile
 35008                           
 35009                           ;outputs_MC50.c: 68:             dispStruct.lastDisplay=disp2_e;
 35010  00836E  0E01               	movlw	1
 35011  008370                     L97:
 35012  008370  0100               	movlb	0	; () banked
 35013  008372  6F62               	movwf	(_dispStruct+2)& (0+255),b	;volatile
 35014  008374  D002               	goto	i2l14891
 35015  008376                     i2l2149:
 35016                           
 35017                           ; BSR set to: 0
 35018  008376  9085               	bcf	133,0,c	;volatile
 35019                           
 35020                           ; BSR set to: 0
 35021                           
 35022                           ;outputs_MC50.c: 75:         do { LATCbits.LATC1 = 0; } while(0);
 35023  008378  9285               	bcf	133,1,c	;volatile
 35024  00837A                     i2l14891:
 35025                           
 35026                           ; BSR set to: 0
 35027                           ;outputs_MC50.c: 79:     if(ts_system.timeFreqDigit<=0 && dispStruct.intermitentFreq!=0)
 35028  00837A  BF9A               	btfsc	(_ts_system+11)& (0+255),7,b	;volatile
 35029  00837C  D005               	goto	i2u1546_40
 35030  00837E  519A               	movf	(_ts_system+11)& (0+255),w,b	;volatile
 35031  008380  E113               	bnz	i2l2156
 35032  008382  0599               	decf	(_ts_system+10)& (0+255),w,b	;volatile
 35033  008384  B0D8               	btfsc	status,0,c
 35034  008386  0012               	return	
 35035  008388                     i2u1546_40:
 35036                           
 35037                           ; BSR set to: 0
 35038  008388  5163               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 35039  00838A  1164               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 35040  00838C  B4D8               	btfsc	status,2,c
 35041  00838E  0012               	return	
 35042                           
 35043                           ; BSR set to: 0
 35044                           ;outputs_MC50.c: 80:     {;outputs_MC50.c: 81:         ts_system.timeFreqDigit=dispStruc
      +                          t.intermitentFreq;
 35045  008390  C063  F099         	movff	_dispStruct+3,_ts_system+10	;volatile
 35046  008394  C064  F09A         	movff	_dispStruct+4,_ts_system+11	;volatile
 35047                           
 35048                           ; BSR set to: 0
 35049                           ;outputs_MC50.c: 82:         if(dispStruct.upFase==1)
 35050  008398  0565               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 35051  00839A  A4D8               	btfss	status,2,c
 35052  00839C  D003               	goto	i2l14901
 35053                           
 35054                           ; BSR set to: 0
 35055                           ;outputs_MC50.c: 83:         {;outputs_MC50.c: 84:             dispStruct.upFase = 0;
 35056  00839E  0E00               	movlw	0
 35057  0083A0  6F65               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 35058                           
 35059                           ;outputs_MC50.c: 85:         }
 35060  0083A2  0012               	return	
 35061  0083A4                     i2l14901:
 35062                           
 35063                           ; BSR set to: 0
 35064                           ;outputs_MC50.c: 87:         {;outputs_MC50.c: 88:             dispStruct.upFase = 1;
 35065  0083A4  0E01               	movlw	1
 35066  0083A6  6F65               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 35067  0083A8                     i2l2156:
 35068                           
 35069                           ; BSR set to: 0
 35070  0083A8  0012               	return		;funcret
 35071  0083AA                     __end_of_refreshSegment:
 35072                           	callstack 0
 35073                           
 35074 ;; *************** function _Segments_Set *****************
 35075 ;; Defined at:
 35076 ;;		line 93 in file "outputs_MC50.c"
 35077 ;; Parameters:    Size  Location     Type
 35078 ;;  value           1    wreg     unsigned char 
 35079 ;; Auto vars:     Size  Location     Type
 35080 ;;  value           1    0[COMRAM] unsigned char 
 35081 ;; Return value:  Size  Location     Type
 35082 ;;                  1    wreg      void 
 35083 ;; Registers used:
 35084 ;;		wreg, status,2, status,0
 35085 ;; Tracked objects:
 35086 ;;		On entry : 3F/0
 35087 ;;		On exit  : 0/0
 35088 ;;		Unchanged: 0/0
 35089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35091 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35093 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35094 ;;Total ram usage:        1 bytes
 35095 ;; Hardware stack levels used: 1
 35096 ;; This function calls:
 35097 ;;		Nothing
 35098 ;; This function is called by:
 35099 ;;		_refreshSegment
 35100 ;; This function uses a non-reentrant model
 35101 ;;
 35102                           
 35103                           	psect	text190
 35104  009B2E                     __ptext190:
 35105                           	callstack 0
 35106  009B2E                     _Segments_Set:
 35107                           	callstack 14
 35108                           
 35109                           ; BSR set to: 0
 35110                           ;incstack = 0
 35111                           ;Segments_Set@value stored from wreg
 35112  009B2E  6E01               	movwf	Segments_Set@value^0,c
 35113                           
 35114                           ;outputs_MC50.c: 93: void Segments_Set(char value);outputs_MC50.c: 94: {;outputs_MC50.c:
      +                           95:    LATD &= 0x80;
 35115  009B30  0E80               	movlw	128
 35116  009B32  1686               	andwf	134,f,c	;volatile
 35117                           
 35118                           ;outputs_MC50.c: 96:    LATD |= value;
 35119  009B34  5001               	movf	Segments_Set@value^0,w,c	;volatile
 35120  009B36  1286               	iorwf	134,f,c	;volatile
 35121  009B38  0012               	return		;funcret
 35122  009B3A                     __end_of_Segments_Set:
 35123                           	callstack 0
 35124                           
 35125 ;; *************** function _controlTimeslots *****************
 35126 ;; Defined at:
 35127 ;;		line 190 in file "main_MC50.c"
 35128 ;; Parameters:    Size  Location     Type
 35129 ;;		None
 35130 ;; Auto vars:     Size  Location     Type
 35131 ;;		None
 35132 ;; Return value:  Size  Location     Type
 35133 ;;                  1    wreg      void 
 35134 ;; Registers used:
 35135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35136 ;; Tracked objects:
 35137 ;;		On entry : 3F/0
 35138 ;;		On exit  : 3F/0
 35139 ;;		Unchanged: 0/0
 35140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35145 ;;Total ram usage:        0 bytes
 35146 ;; Hardware stack levels used: 1
 35147 ;; Hardware stack levels required when called: 1
 35148 ;; This function calls:
 35149 ;;		_decrementTimeslot
 35150 ;; This function is called by:
 35151 ;;		_TMR2_ISR
 35152 ;; This function uses a non-reentrant model
 35153 ;;
 35154                           
 35155                           	psect	text191
 35156  006C22                     __ptext191:
 35157                           	callstack 0
 35158  006C22                     _controlTimeslots:
 35159                           	callstack 14
 35160                           
 35161                           ; BSR set to: 0
 35162                           ;main_MC50.c: 192:  decrementTimeslot((int*)&ts_system.Debug_TS);
 35163                           
 35164                           ;incstack = 0
 35165  006C22  0E97               	movlw	low (_ts_system+8)
 35166  006C24  6E01               	movwf	decrementTimeslot@ts^0,c
 35167  006C26  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35168                           
 35169                           ;main_MC50.c: 193:     decrementTimeslot((int*)&ts_system.timewaitFlashRGB);
 35170  006C2A  0ED5               	movlw	low (_ts_system+70)
 35171  006C2C  6E01               	movwf	decrementTimeslot@ts^0,c
 35172  006C2E  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35173                           
 35174                           ;main_MC50.c: 194:     decrementTimeslot((int*)&ts_system.timeFreqDigit);
 35175  006C32  0E99               	movlw	low (_ts_system+10)
 35176  006C34  6E01               	movwf	decrementTimeslot@ts^0,c
 35177  006C36  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35178                           
 35179                           ;main_MC50.c: 195:     decrementTimeslot((int*)&ts_system.timeSinalizationDigit);
 35180  006C3A  0E9B               	movlw	low (_ts_system+12)
 35181  006C3C  6E01               	movwf	decrementTimeslot@ts^0,c
 35182  006C3E  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35183                           
 35184                           ;main_MC50.c: 196:     decrementTimeslot((int*)&ts_system.timeoutMenu);
 35185  006C42  0E9D               	movlw	low (_ts_system+14)
 35186  006C44  6E01               	movwf	decrementTimeslot@ts^0,c
 35187  006C46  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35188                           
 35189                           ;main_MC50.c: 197:     decrementTimeslot((int*)&ts_system.timeOpenWalk);
 35190  006C4A  0E9F               	movlw	low (_ts_system+16)
 35191  006C4C  6E01               	movwf	decrementTimeslot@ts^0,c
 35192  006C4E  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35193                           
 35194                           ;main_MC50.c: 198:     decrementTimeslot((int*)&ts_system.timeWaitToClose);
 35195  006C52  0EA1               	movlw	low (_ts_system+18)
 35196  006C54  6E01               	movwf	decrementTimeslot@ts^0,c
 35197  006C56  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35198                           
 35199                           ;main_MC50.c: 199:     decrementTimeslot((int*)&ts_system.TimeLastCommand);
 35200  006C5A  0EA3               	movlw	low (_ts_system+20)
 35201  006C5C  6E01               	movwf	decrementTimeslot@ts^0,c
 35202  006C5E  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35203                           
 35204                           ;main_MC50.c: 200:     decrementTimeslot((int*)&ts_system.timeSoftStart);
 35205  006C62  0EA5               	movlw	low (_ts_system+22)
 35206  006C64  6E01               	movwf	decrementTimeslot@ts^0,c
 35207  006C66  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35208                           
 35209                           ;main_MC50.c: 201:     decrementTimeslot((int*)&ts_system.TimeChargeCondesador);
 35210  006C6A  0EA9               	movlw	low (_ts_system+26)
 35211  006C6C  6E01               	movwf	decrementTimeslot@ts^0,c
 35212  006C6E  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35213                           
 35214                           ;main_MC50.c: 203:     decrementTimeslot((int*)&ts_system.timeFreqRGB);
 35215  006C72  0EAB               	movlw	low (_ts_system+28)
 35216  006C74  6E01               	movwf	decrementTimeslot@ts^0,c
 35217  006C76  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35218                           
 35219                           ;main_MC50.c: 204:     decrementTimeslot((int*)&ts_system.timeFreqFlashligth);
 35220  006C7A  0EAD               	movlw	low (_ts_system+30)
 35221  006C7C  6E01               	movwf	decrementTimeslot@ts^0,c
 35222  006C7E  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35223                           
 35224                           ;main_MC50.c: 206:     decrementTimeslot((int*)&ts_system.TimeWaitToNextState);
 35225  006C82  0EB3               	movlw	low (_ts_system+36)
 35226  006C84  6E01               	movwf	decrementTimeslot@ts^0,c
 35227  006C86  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35228                           
 35229                           ;main_MC50.c: 208:     decrementTimeslot((int*)&ts_system.timeBetweenSaveCounters);
 35230  006C8A  0EB5               	movlw	low (_ts_system+38)
 35231  006C8C  6E01               	movwf	decrementTimeslot@ts^0,c
 35232  006C8E  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35233                           
 35234                           ;main_MC50.c: 209:     decrementTimeslot((int*)&ts_system.TimeElectricBrake);
 35235  006C92  0EB7               	movlw	low (_ts_system+40)
 35236  006C94  6E01               	movwf	decrementTimeslot@ts^0,c
 35237  006C96  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35238                           
 35239                           ;main_MC50.c: 210:     decrementTimeslot((int*)&ts_system.TimeCurrentAlarm);
 35240  006C9A  0EB9               	movlw	low (_ts_system+42)
 35241  006C9C  6E01               	movwf	decrementTimeslot@ts^0,c
 35242  006C9E  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35243                           
 35244                           ;main_MC50.c: 212:     decrementTimeslot((int*)&ts_system.TimeStopedBeforeDecelaration);
 35245  006CA2  0EBB               	movlw	low (_ts_system+44)
 35246  006CA4  6E01               	movwf	decrementTimeslot@ts^0,c
 35247  006CA6  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35248                           
 35249                           ;main_MC50.c: 213:     decrementTimeslot((int*)&ts_system.TimeCurrentWaitForAlarm);
 35250  006CAA  0EBD               	movlw	low (_ts_system+46)
 35251  006CAC  6E01               	movwf	decrementTimeslot@ts^0,c
 35252  006CAE  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35253                           
 35254                           ;main_MC50.c: 214:     decrementTimeslot((int*)&ts_system.TimeInversionStart);
 35255  006CB2  0EBF               	movlw	low (_ts_system+48)
 35256  006CB4  6E01               	movwf	decrementTimeslot@ts^0,c
 35257  006CB6  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35258                           
 35259                           ;main_MC50.c: 215:     decrementTimeslot((int*)&ts_system.TimeReleCapacitor);
 35260  006CBA  0ED1               	movlw	low (_ts_system+66)
 35261  006CBC  6E01               	movwf	decrementTimeslot@ts^0,c
 35262  006CBE  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35263                           
 35264                           ;main_MC50.c: 216:     decrementTimeslot((int*)&ts_system.TimeWaitReleCapacitor);
 35265  006CC2  0ED3               	movlw	low (_ts_system+68)
 35266  006CC4  6E01               	movwf	decrementTimeslot@ts^0,c
 35267  006CC6  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35268                           
 35269                           ;main_MC50.c: 221:     if ( ( var_sys_NVM.electricBrake==0 ) || ( ts_system.TimeElectric
      +                          Brake<=0 ) )
 35270  006CCA  0101               	movlb	1	; () banked
 35271  006CCC  51BD               	movf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 35272  006CCE  B4D8               	btfsc	status,2,c
 35273  006CD0  D008               	goto	i2u2623_40
 35274                           
 35275                           ; BSR set to: 1
 35276  006CD2  0100               	movlb	0	; () banked
 35277  006CD4  BFB8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35278  006CD6  D005               	goto	i2u2623_40
 35279  006CD8  51B8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35280  006CDA  E107               	bnz	i2l2032
 35281  006CDC  05B7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 35282  006CDE  B0D8               	btfsc	status,0,c
 35283  006CE0  D004               	goto	i2l2032
 35284  006CE2                     i2u2623_40:
 35285                           
 35286                           ;main_MC50.c: 222:     {;main_MC50.c: 225:         decrementTimeslot((int*)&ts_system.In
      +                          vertionTimeClosingFromOpen);
 35287  006CE2  0EC1               	movlw	low (_ts_system+50)
 35288  006CE4  6E01               	movwf	decrementTimeslot@ts^0,c
 35289  006CE6  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35290  006CEA                     i2l2032:
 35291                           
 35292                           ;main_MC50.c: 228:     decrementTimeslot((int*)&ts_system.TimeWaitToGetCurrent);
 35293  006CEA  0EC3               	movlw	low (_ts_system+52)
 35294  006CEC  6E01               	movwf	decrementTimeslot@ts^0,c
 35295  006CEE  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35296                           
 35297                           ;main_MC50.c: 229:     decrementTimeslot((int*)&ts_system.TimeLearningDecelaration);
 35298  006CF2  0EC5               	movlw	low (_ts_system+54)
 35299  006CF4  6E01               	movwf	decrementTimeslot@ts^0,c
 35300  006CF6  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35301                           
 35302                           ;main_MC50.c: 230:     decrementTimeslot((int*)&ts_system.TimeTransitionDecelaration);
 35303  006CFA  0EC7               	movlw	low (_ts_system+56)
 35304  006CFC  6E01               	movwf	decrementTimeslot@ts^0,c
 35305  006CFE  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35306                           
 35307                           ;main_MC50.c: 232:     decrementTimeslot((int*)&ts_system.timewaitBeforeSoftStart);
 35308  006D02  0EC9               	movlw	low (_ts_system+58)
 35309  006D04  6E01               	movwf	decrementTimeslot@ts^0,c
 35310  006D06  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35311                           
 35312                           ;main_MC50.c: 233:     decrementTimeslot((int*)&ts_system.TimeShowVersion);
 35313  006D0A  0ECB               	movlw	low (_ts_system+60)
 35314  006D0C  6E01               	movwf	decrementTimeslot@ts^0,c
 35315  006D0E  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35316                           
 35317                           ;main_MC50.c: 235:     decrementTimeslot((int*)&ts_system.TimeStopADCZeroOffsetCalc);
 35318  006D12  0ECD               	movlw	low (_ts_system+62)
 35319  006D14  6E01               	movwf	decrementTimeslot@ts^0,c
 35320  006D16  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35321                           
 35322                           ;main_MC50.c: 237:     decrementTimeslot((int*)&ts_system.TimeStopElectricBrake);
 35323  006D1A  0ECF               	movlw	low (_ts_system+64)
 35324  006D1C  6E01               	movwf	decrementTimeslot@ts^0,c
 35325  006D1E  ECE3  F04B         	call	_decrementTimeslot	;wreg free
 35326                           
 35327                           ;main_MC50.c: 240:     if (ts_system.TimeOnFlashLigth>0)
 35328  006D22  0100               	movlb	0	; () banked
 35329  006D24  BFB2               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 35330  006D26  0012               	return	
 35331  006D28  51B2               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 35332  006D2A  11B1               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 35333  006D2C  11B0               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 35334  006D2E  E103               	bnz	i2u2624_40
 35335  006D30  05AF               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 35336  006D32  A0D8               	btfss	status,0,c
 35337  006D34  0012               	return	
 35338  006D36                     i2u2624_40:
 35339                           
 35340                           ; BSR set to: 0
 35341                           ;main_MC50.c: 241:     {;main_MC50.c: 242:         ts_system.TimeOnFlashLigth--;
 35342  006D36  0EFF               	movlw	255
 35343  006D38  27AF               	addwf	(_ts_system+32)& (0+255),f,b	;volatile
 35344  006D3A  0EFF               	movlw	255
 35345  006D3C  23B0               	addwfc	(_ts_system+33)& (0+255),f,b	;volatile
 35346  006D3E  0EFF               	movlw	255
 35347  006D40  23B1               	addwfc	(_ts_system+34)& (0+255),f,b	;volatile
 35348  006D42  0EFF               	movlw	255
 35349  006D44  23B2               	addwfc	(_ts_system+35)& (0+255),f,b	;volatile
 35350                           
 35351                           ; BSR set to: 0
 35352  006D46  0012               	return		;funcret
 35353  006D48                     __end_of_controlTimeslots:
 35354                           	callstack 0
 35355                           
 35356 ;; *************** function _decrementTimeslot *****************
 35357 ;; Defined at:
 35358 ;;		line 246 in file "main_MC50.c"
 35359 ;; Parameters:    Size  Location     Type
 35360 ;;  ts              1    0[COMRAM] PTR int 
 35361 ;;		 -> ts_system.TimeShowVersion(2), ts_system.TimeLearningDecelaration(2), ts_system.TimeWaitToGetCurrent(2), ts_syste
      +m.InvertionTimeClosingFromOpen(2), 
 35362 ;;		 -> ts_system.TimeWaitReleCapacitor(2), ts_system.TimeInversionStart(2), ts_system.TimeStopedBeforeDecelaration(2), 
      +ts_system.TimeWaitToNextState(2), 
 35363 ;;		 -> ts_system.timeFreqFlashligth(2), ts_system.timeFreqRGB(2), ts_system.timeWaitToClose(2), ts_system.timeOpenWalk(
      +2), 
 35364 ;;		 -> ts_system.timeoutMenu(2), ts_system.timeFreqDigit(2), ts_system.timewaitFlashRGB(2), ts_system.TimeStopElectricB
      +rake(2), 
 35365 ;;		 -> ts_system.Debug_TS(2), ts_system.timeSinalizationDigit(2), ts_system.TimeLastCommand(2), ts_system.timeBetweenSa
      +veCounters(2), 
 35366 ;;		 -> ts_system.TimeCurrentAlarm(2), ts_system.TimeCurrentWaitForAlarm(2), ts_system.TimeReleCapacitor(2), ts_system.T
      +imeChargeCondesador(2), 
 35367 ;;		 -> ts_system.TimeTransitionDecelaration(2), ts_system.timewaitBeforeSoftStart(2), ts_system.timeSoftStart(2), ts_sy
      +stem.TimeElectricBrake(2), 
 35368 ;;		 -> ts_system.TimeStopADCZeroOffsetCalc(2), ts_system(72), 
 35369 ;; Auto vars:     Size  Location     Type
 35370 ;;		None
 35371 ;; Return value:  Size  Location     Type
 35372 ;;                  1    wreg      void 
 35373 ;; Registers used:
 35374 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35375 ;; Tracked objects:
 35376 ;;		On entry : 0/0
 35377 ;;		On exit  : 0/0
 35378 ;;		Unchanged: 0/0
 35379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35380 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35382 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35383 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35384 ;;Total ram usage:        3 bytes
 35385 ;; Hardware stack levels used: 1
 35386 ;; This function calls:
 35387 ;;		Nothing
 35388 ;; This function is called by:
 35389 ;;		_controlTimeslots
 35390 ;; This function uses a non-reentrant model
 35391 ;;
 35392                           
 35393                           	psect	text192
 35394  0097C6                     __ptext192:
 35395                           	callstack 0
 35396  0097C6                     _decrementTimeslot:
 35397                           	callstack 14
 35398                           
 35399                           ;main_MC50.c: 246: void decrementTimeslot(int * ts);main_MC50.c: 247: {;main_MC50.c: 248
      +                          :     if (ts[0]>0)
 35400                           
 35401                           ; BSR set to: 0
 35402                           ;incstack = 0
 35403  0097C6  5001               	movf	decrementTimeslot@ts^0,w,c
 35404  0097C8  6ED9               	movwf	fsr2l,c
 35405  0097CA  6ADA               	clrf	fsr2h,c
 35406  0097CC  0E01               	movlw	1
 35407  0097CE  BEDB               	btfsc	plusw2,7,c
 35408  0097D0  0012               	return	
 35409  0097D2  0E01               	movlw	1
 35410  0097D4  50DB               	movf	plusw2,w,c
 35411  0097D6  E103               	bnz	i2u2536_40
 35412  0097D8  04DE               	decf	postinc2,w,c
 35413  0097DA  A0D8               	btfss	status,0,c
 35414  0097DC  0012               	return	
 35415  0097DE                     i2u2536_40:
 35416                           
 35417                           ;main_MC50.c: 249:     {;main_MC50.c: 250:         ts[0]--;
 35418  0097DE  5001               	movf	decrementTimeslot@ts^0,w,c
 35419  0097E0  6ED9               	movwf	fsr2l,c
 35420  0097E2  6ADA               	clrf	fsr2h,c
 35421  0097E4  06DE               	decf	postinc2,f,c
 35422  0097E6  0E00               	movlw	0
 35423  0097E8  5ADD               	subwfb	postdec2,f,c
 35424  0097EA  0012               	return		;funcret
 35425  0097EC                     __end_of_decrementTimeslot:
 35426                           	callstack 0
 35427                           
 35428 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 35429 ;; Defined at:
 35430 ;;		line 346 in file "mcc_generated_files/tmr2.c"
 35431 ;; Parameters:    Size  Location     Type
 35432 ;;		None
 35433 ;; Auto vars:     Size  Location     Type
 35434 ;;		None
 35435 ;; Return value:  Size  Location     Type
 35436 ;;                  1    wreg      void 
 35437 ;; Registers used:
 35438 ;;		None
 35439 ;; Tracked objects:
 35440 ;;		On entry : 3F/2
 35441 ;;		On exit  : 3F/2
 35442 ;;		Unchanged: 3F/0
 35443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35448 ;;Total ram usage:        0 bytes
 35449 ;; Hardware stack levels used: 1
 35450 ;; This function calls:
 35451 ;;		Nothing
 35452 ;; This function is called by:
 35453 ;;		_TMR2_Initialize
 35454 ;;		_TMR2_ISR
 35455 ;; This function uses a non-reentrant model
 35456 ;;
 35457                           
 35458                           	psect	text193
 35459  009C66                     __ptext193:
 35460                           	callstack 0
 35461  009C66                     _TMR2_DefaultInterruptHandler:
 35462                           	callstack 15
 35463                           
 35464                           ; BSR set to: 2
 35465                           
 35466                           ;incstack = 0
 35467  009C66  0012               	return		;funcret
 35468  009C68                     __end_of_TMR2_DefaultInterruptHandler:
 35469                           	callstack 0
 35470                           
 35471 ;; *************** function _ReadADC *****************
 35472 ;; Defined at:
 35473 ;;		line 38 in file "controlCurrent_MC50.c"
 35474 ;; Parameters:    Size  Location     Type
 35475 ;;		None
 35476 ;; Auto vars:     Size  Location     Type
 35477 ;;		None
 35478 ;; Return value:  Size  Location     Type
 35479 ;;                  1    wreg      void 
 35480 ;; Registers used:
 35481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35482 ;; Tracked objects:
 35483 ;;		On entry : 3F/E
 35484 ;;		On exit  : 31/0
 35485 ;;		Unchanged: 0/0
 35486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35489 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35490 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35491 ;;Total ram usage:        3 bytes
 35492 ;; Hardware stack levels used: 1
 35493 ;; Hardware stack levels required when called: 1
 35494 ;; This function calls:
 35495 ;;		_ADCC_GetSingleConversion
 35496 ;; This function is called by:
 35497 ;;		_TMR2_ISR
 35498 ;; This function uses a non-reentrant model
 35499 ;;
 35500                           
 35501                           	psect	text194
 35502  008DE6                     __ptext194:
 35503                           	callstack 0
 35504  008DE6                     _ReadADC:
 35505                           	callstack 14
 35506                           
 35507                           ; BSR set to: 14
 35508                           ;controlCurrent_MC50.c: 40:      if (!ADCON0bits.GO_nDONE)
 35509                           
 35510                           ; BSR set to: 2
 35511                           ;incstack = 0
 35512  008DE6  B060               	btfsc	96,0,c	;volatile
 35513  008DE8  0012               	return	
 35514                           
 35515                           ; BSR set to: 14
 35516                           ;controlCurrent_MC50.c: 41:      {;controlCurrent_MC50.c: 42:         if ( idxAdcAquisit
      +                          ion >= 30 )
 35517  008DEA  0E1D               	movlw	29
 35518  008DEC  0100               	movlb	0	; () banked
 35519  008DEE  6588               	cpfsgt	_idxAdcAquisition& (0+255),b	;volatile
 35520  008DF0  D002               	goto	i2l14867
 35521                           
 35522                           ; BSR set to: 0
 35523                           ;controlCurrent_MC50.c: 43:         {;controlCurrent_MC50.c: 44:             idxAdcAquis
      +                          ition=0;
 35524  008DF2  0E00               	movlw	0
 35525  008DF4  6F88               	movwf	_idxAdcAquisition& (0+255),b	;volatile
 35526  008DF6                     i2l14867:
 35527                           
 35528                           ; BSR set to: 0
 35529                           ;controlCurrent_MC50.c: 47:         ADC_array[idxAdcAquisition] = ((unsigned int)((ADRES
      +                          H << 8) + ADRESL)>>6);
 35530  008DF6  5063               	movf	99,w,c	;volatile
 35531  008DF8  CF64 F002          	movff	3940,??_ReadADC	;volatile
 35532  008DFC  6A03               	clrf	(??_ReadADC+1)^0,c
 35533  008DFE  C002  F003         	movff	??_ReadADC,??_ReadADC+1
 35534  008E02  6A02               	clrf	??_ReadADC^0,c
 35535  008E04  2602               	addwf	??_ReadADC^0,f,c
 35536  008E06  0E00               	movlw	0
 35537  008E08  2203               	addwfc	(??_ReadADC+1)^0,f,c
 35538  008E0A  0E06               	movlw	6
 35539  008E0C  6E04               	movwf	(??_ReadADC+2)^0,c
 35540  008E0E                     i2u1542_45:
 35541  008E0E  90D8               	bcf	status,0,c
 35542  008E10  3203               	rrcf	(??_ReadADC+1)^0,f,c
 35543  008E12  3202               	rrcf	??_ReadADC^0,f,c
 35544  008E14  2E04               	decfsz	(??_ReadADC+2)^0,f,c
 35545  008E16  D7FB               	goto	i2u1542_45
 35546  008E18  5188               	movf	_idxAdcAquisition& (0+255),w,b	;volatile
 35547  008E1A  0D02               	mullw	2
 35548  008E1C  0E00               	movlw	low _ADC_array
 35549  008E1E  24F3               	addwf	243,w,c
 35550  008E20  6ED9               	movwf	fsr2l,c
 35551  008E22  0E02               	movlw	high _ADC_array
 35552  008E24  20F4               	addwfc	prodh,w,c
 35553  008E26  6EDA               	movwf	fsr2h,c
 35554  008E28  C002  FFDE         	movff	??_ReadADC,postinc2
 35555  008E2C  C003  FFDD         	movff	??_ReadADC+1,postdec2
 35556                           
 35557                           ; BSR set to: 0
 35558                           ;controlCurrent_MC50.c: 48:         ADCC_GetSingleConversion(0x00);
 35559  008E30  0E00               	movlw	0
 35560  008E32  EC30  F04D         	call	_ADCC_GetSingleConversion
 35561                           
 35562                           ;controlCurrent_MC50.c: 49:         idxAdcAquisition++;
 35563  008E36  0100               	movlb	0	; () banked
 35564  008E38  2B88               	incf	_idxAdcAquisition& (0+255),f,b	;volatile
 35565  008E3A  0012               	return		;funcret
 35566  008E3C                     __end_of_ReadADC:
 35567                           	callstack 0
 35568                           
 35569 ;; *************** function _ADCC_GetSingleConversion *****************
 35570 ;; Defined at:
 35571 ;;		line 131 in file "mcc_generated_files/adcc.c"
 35572 ;; Parameters:    Size  Location     Type
 35573 ;;  channel         1    wreg     enum E10053
 35574 ;; Auto vars:     Size  Location     Type
 35575 ;;  channel         1    0[COMRAM] enum E10053
 35576 ;; Return value:  Size  Location     Type
 35577 ;;                  2  433[None  ] int 
 35578 ;; Registers used:
 35579 ;;		wreg, status,2, cstack
 35580 ;; Tracked objects:
 35581 ;;		On entry : 3F/0
 35582 ;;		On exit  : 0/0
 35583 ;;		Unchanged: 0/0
 35584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35586 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35588 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35589 ;;Total ram usage:        1 bytes
 35590 ;; Hardware stack levels used: 1
 35591 ;; This function calls:
 35592 ;;		Nothing
 35593 ;; This function is called by:
 35594 ;;		_ReadADC
 35595 ;; This function uses a non-reentrant model
 35596 ;;
 35597                           
 35598                           	psect	text195
 35599  009A60                     __ptext195:
 35600                           	callstack 0
 35601  009A60                     _ADCC_GetSingleConversion:
 35602                           	callstack 14
 35603                           
 35604                           ;incstack = 0
 35605                           ;ADCC_GetSingleConversion@channel stored from wreg
 35606  009A60  6E01               	movwf	ADCC_GetSingleConversion@channel^0,c
 35607                           
 35608                           ;mcc_generated_files/adcc.c: 131: ADCC_GetSingleConversion(adcc_channel_t channel);mcc_g
      +                          enerated_files/adcc.c: 132: {;mcc_generated_files/adcc.c: 134:     ADPCH = channel;
 35609  009A62  C001  FF5F         	movff	ADCC_GetSingleConversion@channel,3935	;volatile
 35610                           
 35611                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADON = 1;
 35612  009A66  8E60               	bsf	96,7,c	;volatile
 35613                           
 35614                           ;mcc_generated_files/adcc.c: 139:       _delay((unsigned long)((5)*(64000000/4000000.0))
      +                          );
 35615  009A68  0E1A               	movlw	26
 35616  009A6A                     i2u3468_47:
 35617  009A6A  2EE8               	decfsz	wreg,f,c
 35618  009A6C  D7FE               	bra	i2u3468_47
 35619  009A6E  D000               	nop2	
 35620                           
 35621                           ;mcc_generated_files/adcc.c: 142:     ADCON0bits.ADCONT = 0;
 35622  009A70  9C60               	bcf	96,6,c	;volatile
 35623                           
 35624                           ;mcc_generated_files/adcc.c: 145:     ADCON0bits.ADGO = 1;
 35625  009A72  8060               	bsf	96,0,c	;volatile
 35626  009A74  0012               	return		;funcret
 35627  009A76                     __end_of_ADCC_GetSingleConversion:
 35628                           	callstack 0
 35629                           
 35630 ;; *************** function _TMR1_ISR *****************
 35631 ;; Defined at:
 35632 ;;		line 166 in file "mcc_generated_files/tmr1.c"
 35633 ;; Parameters:    Size  Location     Type
 35634 ;;		None
 35635 ;; Auto vars:     Size  Location     Type
 35636 ;;		None
 35637 ;; Return value:  Size  Location     Type
 35638 ;;                  1    wreg      void 
 35639 ;; Registers used:
 35640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 35641 ;; Tracked objects:
 35642 ;;		On entry : 3F/E
 35643 ;;		On exit  : 0/0
 35644 ;;		Unchanged: 0/0
 35645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35650 ;;Total ram usage:        0 bytes
 35651 ;; Hardware stack levels used: 1
 35652 ;; Hardware stack levels required when called: 2
 35653 ;; This function calls:
 35654 ;;		Absolute function
 35655 ;;		_TMR1_DefaultInterruptHandler
 35656 ;;		_TMR1_WriteTimer
 35657 ;;		_controlMotorForce
 35658 ;; This function is called by:
 35659 ;;		_INTERRUPT_InterruptManager
 35660 ;; This function uses a non-reentrant model
 35661 ;;
 35662                           
 35663                           	psect	text196
 35664  009350                     __ptext196:
 35665                           	callstack 0
 35666  009350                     _TMR1_ISR:
 35667                           	callstack 14
 35668                           
 35669                           ; BSR set to: 14
 35670                           ;mcc_generated_files/tmr1.c: 170:     PIR4bits.TMR1IF = 0;
 35671                           
 35672                           ;incstack = 0
 35673  009350  91CE               	bcf	206,0,b	;volatile
 35674                           
 35675                           ; BSR set to: 14
 35676                           ;mcc_generated_files/tmr1.c: 172:             controlMotorForce();
 35677  009352  ECF9  F028         	call	_controlMotorForce	;wreg free
 35678                           
 35679                           ; BSR set to: 0
 35680                           ;mcc_generated_files/tmr1.c: 173:             if(ts_system.ts_TimeSlotTRIAC>0)
 35681  009356  5194               	movf	(_ts_system+5)& (0+255),w,b	;volatile
 35682  009358  A4D8               	btfss	status,2,c
 35683                           
 35684                           ; BSR set to: 0
 35685                           ;mcc_generated_files/tmr1.c: 174:             {;mcc_generated_files/tmr1.c: 176:        
      +                                   ts_system.ts_TimeSlotTRIAC--;
 35686  00935A  0794               	decf	(_ts_system+5)& (0+255),f,b	;volatile
 35687                           
 35688                           ; BSR set to: 0
 35689                           ;mcc_generated_files/tmr1.c: 178:             if (ts_system.ts_TimeSlot1ms > 0 )
 35690  00935C  5191               	movf	(_ts_system+2)& (0+255),w,b	;volatile
 35691  00935E  A4D8               	btfss	status,2,c
 35692                           
 35693                           ; BSR set to: 0
 35694                           ;mcc_generated_files/tmr1.c: 179:             {;mcc_generated_files/tmr1.c: 180:        
      +                               ts_system.ts_TimeSlot1ms--;
 35695  009360  0791               	decf	(_ts_system+2)& (0+255),f,b	;volatile
 35696                           
 35697                           ; BSR set to: 0
 35698                           ;mcc_generated_files/tmr1.c: 183:     TMR1_WriteTimer(timer1ReloadVal);
 35699  009362  C2E1  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 35700  009366  C2E2  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 35701  00936A  EC9B  F04C         	call	_TMR1_WriteTimer	;wreg free
 35702                           
 35703                           ; BSR set to: 0
 35704                           ;mcc_generated_files/tmr1.c: 185:     if(TMR1_InterruptHandler)
 35705  00936E  0102               	movlb	2	; () banked
 35706  009370  51DF               	movf	_TMR1_InterruptHandler& (0+255),w,b
 35707  009372  11E0               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 35708  009374  B4D8               	btfsc	status,2,c
 35709  009376  0012               	return	
 35710                           
 35711                           ; BSR set to: 2
 35712                           ;mcc_generated_files/tmr1.c: 186:     {;mcc_generated_files/tmr1.c: 187:         TMR1_In
      +                          terruptHandler();
 35713  009378  D801               	call	i2u1914_48
 35714  00937A  0012               	return	
 35715  00937C                     i2u1914_48:
 35716  00937C  0005               	push	
 35717  00937E  6EFA               	movwf	pclath,c
 35718  009380  51DF               	movf	_TMR1_InterruptHandler& (0+255),w,b
 35719  009382  6EFD               	movwf	tosl,c
 35720  009384  51E0               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 35721  009386  6EFE               	movwf	tosh,c
 35722  009388  6AFF               	clrf	tosu,c
 35723  00938A  50FA               	movf	pclath,w,c
 35724  00938C  0012               	return		;indir
 35725  00938E                     __end_of_TMR1_ISR:
 35726                           	callstack 0
 35727                           
 35728 ;; *************** function _controlMotorForce *****************
 35729 ;; Defined at:
 35730 ;;		line 213 in file "outputs_MC50.c"
 35731 ;; Parameters:    Size  Location     Type
 35732 ;;		None
 35733 ;; Auto vars:     Size  Location     Type
 35734 ;;		None
 35735 ;; Return value:  Size  Location     Type
 35736 ;;                  1    wreg      void 
 35737 ;; Registers used:
 35738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35739 ;; Tracked objects:
 35740 ;;		On entry : 3F/E
 35741 ;;		On exit  : 3F/0
 35742 ;;		Unchanged: 0/0
 35743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35746 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35747 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35748 ;;Total ram usage:        5 bytes
 35749 ;; Hardware stack levels used: 1
 35750 ;; Hardware stack levels required when called: 1
 35751 ;; This function calls:
 35752 ;;		i2_GetMotorPower
 35753 ;;		i2_VerifyElectricalBrake
 35754 ;; This function is called by:
 35755 ;;		_TMR1_ISR
 35756 ;; This function uses a non-reentrant model
 35757 ;;
 35758                           
 35759                           	psect	text197
 35760  0051F2                     __ptext197:
 35761                           	callstack 0
 35762  0051F2                     _controlMotorForce:
 35763                           	callstack 14
 35764                           
 35765                           ; BSR set to: 14
 35766                           ;outputs_MC50.c: 217:     difTime=GetMotorPower();
 35767                           
 35768                           ;incstack = 0
 35769  0051F2  ECA8  F03C         	call	i2_GetMotorPower	;wreg free
 35770  0051F6  6F76               	movwf	_difTime& (0+255),b
 35771                           
 35772                           ; BSR set to: 0
 35773                           ;outputs_MC50.c: 218:     if(powerControl_st.decelarationActive==YES)
 35774  0051F8  0101               	movlb	1	; () banked
 35775  0051FA  053C               	decf	_powerControl_st& (0+255),w,b
 35776  0051FC  A4D8               	btfss	status,2,c
 35777  0051FE  D011               	goto	i2l2207
 35778                           
 35779                           ; BSR set to: 1
 35780                           ;outputs_MC50.c: 219:     {;outputs_MC50.c: 220:         if(ts_system.TimeStopedBeforeDe
      +                          celaration>0)
 35781  005200  0100               	movlb	0	; () banked
 35782  005202  BFBC               	btfsc	(_ts_system+45)& (0+255),7,b	;volatile
 35783  005204  D008               	goto	i2l14755
 35784  005206  51BC               	movf	(_ts_system+45)& (0+255),w,b	;volatile
 35785  005208  E103               	bnz	i2u1502_40
 35786  00520A  05BB               	decf	(_ts_system+44)& (0+255),w,b	;volatile
 35787  00520C  A0D8               	btfss	status,0,c
 35788  00520E  D003               	goto	i2l14755
 35789  005210                     i2u1502_40:
 35790                           
 35791                           ; BSR set to: 0
 35792                           ;outputs_MC50.c: 221:         {;outputs_MC50.c: 222:             StateTRIAC=0;
 35793  005210  0E00               	movlw	0
 35794  005212  6F77               	movwf	_StateTRIAC& (0+255),b
 35795                           
 35796                           ;outputs_MC50.c: 223:         }
 35797  005214  D006               	goto	i2l2207
 35798  005216                     i2l14755:
 35799                           
 35800                           ; BSR set to: 0
 35801  005216  0101               	movlb	1	; () banked
 35802  005218  513E               	movf	(_powerControl_st+2)& (0+255),w,b
 35803  00521A  5D40               	subwf	(_powerControl_st+4)& (0+255),w,b
 35804  00521C  A0D8               	btfss	status,0,c
 35805                           
 35806                           ; BSR set to: 1
 35807                           ;outputs_MC50.c: 225:         {;outputs_MC50.c: 227:             difTime=powerControl_st
      +                          .decelarationPower;
 35808  00521E  C13F  F076         	movff	_powerControl_st+3,_difTime
 35809  005222                     i2l2207:
 35810                           
 35811                           ;outputs_MC50.c: 242:     if(PORTAbits.RA3==1 && zeroCrossing==0)
 35812  005222  A68D               	btfss	141,3,c	;volatile
 35813  005224  D077               	goto	i2l2211
 35814  005226  0100               	movlb	0	; () banked
 35815  005228  5179               	movf	_zeroCrossing& (0+255),w,b
 35816  00522A  A4D8               	btfss	status,2,c
 35817  00522C  D073               	goto	i2l2211
 35818                           
 35819                           ; BSR set to: 0
 35820                           ;outputs_MC50.c: 243:     {;outputs_MC50.c: 257:         if ( waitZeroPeak == 0 )
 35821  00522E  5178               	movf	_waitZeroPeak& (0+255),w,b
 35822  005230  A4D8               	btfss	status,2,c
 35823  005232  D015               	goto	i2l14771
 35824                           
 35825                           ; BSR set to: 0
 35826                           ;outputs_MC50.c: 258:         {;outputs_MC50.c: 260:             zeroCrossingWaitTime[ze
      +                          roCrossingWaitTimeIdx] = (zeroCrossingLength>>1);
 35827  005234  0EFA               	movlw	low _zeroCrossingWaitTime
 35828  005236  257A               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 35829  005238  6ED9               	movwf	fsr2l,c
 35830  00523A  6ADA               	clrf	fsr2h,c
 35831  00523C  0E02               	movlw	high _zeroCrossingWaitTime
 35832  00523E  22DA               	addwfc	fsr2h,f,c
 35833  005240  0101               	movlb	1	; () banked
 35834  005242  90D8               	bcf	status,0,c
 35835  005244  3150               	rrcf	_zeroCrossingLength& (0+255),w,b
 35836  005246  6EDF               	movwf	indf2,c
 35837                           
 35838                           ; BSR set to: 1
 35839                           ;outputs_MC50.c: 261:             if ( zeroCrossingWaitTimeIdx == 0 )
 35840  005248  0100               	movlb	0	; () banked
 35841  00524A  517A               	movf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 35842  00524C  A4D8               	btfss	status,2,c
 35843  00524E  D002               	goto	i2l14769
 35844                           
 35845                           ; BSR set to: 0
 35846                           ;outputs_MC50.c: 262:             {;outputs_MC50.c: 263:                 zeroCrossingWai
      +                          tTimeIdx = 1;
 35847  005250  0E01               	movlw	1
 35848  005252  D001               	goto	L98
 35849  005254                     i2l14769:
 35850                           
 35851                           ; BSR set to: 0
 35852                           ;outputs_MC50.c: 266:             {;outputs_MC50.c: 267:                 zeroCrossingWai
      +                          tTimeIdx = 0;
 35853  005254  0E00               	movlw	0
 35854  005256                     L98:
 35855  005256  6F7A               	movwf	_zeroCrossingWaitTimeIdx& (0+255),b
 35856                           
 35857                           ; BSR set to: 0
 35858                           ;outputs_MC50.c: 270:             zeroCrossingLength = 0;
 35859                           
 35860                           ;outputs_MC50.c: 268:             }
 35861  005258  0E00               	movlw	0
 35862  00525A  0101               	movlb	1	; () banked
 35863  00525C  6F50               	movwf	_zeroCrossingLength& (0+255),b
 35864  00525E                     i2l14771:
 35865                           
 35866                           ;outputs_MC50.c: 273:         if ( (difTime<=80) || (ts_system.TimeElectricBrake>0) )
 35867  00525E  0E50               	movlw	80
 35868  005260  0100               	movlb	0	; () banked
 35869  005262  6576               	cpfsgt	_difTime& (0+255),b
 35870  005264  D007               	goto	i2u1509_40
 35871                           
 35872                           ; BSR set to: 0
 35873  005266  BFB8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35874  005268  D009               	goto	i2l14777
 35875  00526A  51B8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35876  00526C  E103               	bnz	i2u1509_40
 35877  00526E  05B7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 35878  005270  A0D8               	btfss	status,0,c
 35879  005272  D004               	goto	i2l14777
 35880  005274                     i2u1509_40:
 35881                           
 35882                           ; BSR set to: 0
 35883                           
 35884                           ;outputs_MC50.c: 274:         {;outputs_MC50.c: 275:             do { LATDbits.LATD7 = 0
      +                          ; } while(0);
 35885  005274  9E86               	bcf	134,7,c	;volatile
 35886                           
 35887                           ; BSR set to: 0
 35888                           ;outputs_MC50.c: 276:             var_sys.TriacON=NO;
 35889  005276  0E00               	movlw	0
 35890  005278  0101               	movlb	1	; () banked
 35891  00527A  6F61               	movwf	(_var_sys+12)& (0+255),b	;volatile
 35892  00527C                     i2l14777:
 35893                           
 35894                           ;outputs_MC50.c: 280:         waitZeroPeak++;
 35895  00527C  0100               	movlb	0	; () banked
 35896  00527E  2B78               	incf	_waitZeroPeak& (0+255),f,b
 35897                           
 35898                           ; BSR set to: 0
 35899                           ;outputs_MC50.c: 282:         if ( waitZeroPeak > zeroCrossingWaitTime[zeroCrossingWaitT
      +                          imeIdx] )
 35900  005280  0EFA               	movlw	low _zeroCrossingWaitTime
 35901  005282  257A               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 35902  005284  6ED9               	movwf	fsr2l,c
 35903  005286  6ADA               	clrf	fsr2h,c
 35904  005288  0E02               	movlw	high _zeroCrossingWaitTime
 35905  00528A  22DA               	addwfc	fsr2h,f,c
 35906  00528C  5178               	movf	_waitZeroPeak& (0+255),w,b
 35907  00528E  5CDE               	subwf	postinc2,w,c
 35908  005290  B0D8               	btfsc	status,0,c
 35909  005292  D04A               	goto	i2l14807
 35910                           
 35911                           ; BSR set to: 0
 35912                           ;outputs_MC50.c: 284:         {;outputs_MC50.c: 286:             if ((var_sys.Control50o
      +                          r60hz >= 90)&&(var_sys.Control50or60hz <= 105)){
 35913  005294  0E59               	movlw	89
 35914  005296  0101               	movlb	1	; () banked
 35915  005298  65A2               	cpfsgt	(_var_sys+77)& (0+255),b	;volatile
 35916  00529A  D005               	goto	i2l14787
 35917                           
 35918                           ; BSR set to: 1
 35919  00529C  0E6A               	movlw	106
 35920  00529E  61A2               	cpfslt	(_var_sys+77)& (0+255),b	;volatile
 35921  0052A0  D002               	goto	i2l14787
 35922                           
 35923                           ; BSR set to: 1
 35924                           ;outputs_MC50.c: 287:                 var_sys.Torquerelanty = 1;
 35925  0052A2  0E01               	movlw	1
 35926  0052A4  D001               	goto	L99
 35927  0052A6                     i2l14787:
 35928                           
 35929                           ; BSR set to: 1
 35930                           ;outputs_MC50.c: 290:             {;outputs_MC50.c: 291:                var_sys.Torquere
      +                          lanty = 0;
 35931  0052A6  0E00               	movlw	0
 35932  0052A8                     L99:
 35933  0052A8  6F6A               	movwf	(_var_sys+21)& (0+255),b	;volatile
 35934                           
 35935                           ; BSR set to: 1
 35936                           ;outputs_MC50.c: 294:             ts_system.ts_TimeSlotTRIAC=80;
 35937                           
 35938                           ;outputs_MC50.c: 292:             }
 35939  0052AA  0E50               	movlw	80
 35940  0052AC  0100               	movlb	0	; () banked
 35941  0052AE  6F94               	movwf	(_ts_system+5)& (0+255),b	;volatile
 35942                           
 35943                           ;outputs_MC50.c: 295:             var_sys.Control50or60hz = 0;
 35944  0052B0  0E00               	movlw	0
 35945  0052B2  0101               	movlb	1	; () banked
 35946  0052B4  6FA2               	movwf	(_var_sys+77)& (0+255),b	;volatile
 35947                           
 35948                           ;outputs_MC50.c: 296:             StateTRIAC=1;
 35949  0052B6  0E01               	movlw	1
 35950  0052B8  0100               	movlb	0	; () banked
 35951  0052BA  6F77               	movwf	_StateTRIAC& (0+255),b
 35952                           
 35953                           ;outputs_MC50.c: 297:             zeroCrossing=1;
 35954  0052BC  0E01               	movlw	1
 35955  0052BE  6F79               	movwf	_zeroCrossing& (0+255),b
 35956                           
 35957                           ; BSR set to: 0
 35958                           ;outputs_MC50.c: 298:             powerControl_st.actualCycle++;
 35959  0052C0  0101               	movlb	1	; () banked
 35960  0052C2  2B40               	incf	(_powerControl_st+4)& (0+255),f,b
 35961                           
 35962                           ; BSR set to: 1
 35963                           ;outputs_MC50.c: 304:             if ( var_sys_NVM.electricBrake==1 && ts_system.TimeEle
      +                          ctricBrake>0 )
 35964  0052C4  05BD               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 35965  0052C6  A4D8               	btfss	status,2,c
 35966  0052C8  D00F               	goto	i2l14799
 35967                           
 35968                           ; BSR set to: 1
 35969  0052CA  0100               	movlb	0	; () banked
 35970  0052CC  BFB8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35971  0052CE  D00C               	goto	i2l14799
 35972  0052D0  51B8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35973  0052D2  E103               	bnz	i2u1514_40
 35974  0052D4  05B7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 35975  0052D6  A0D8               	btfss	status,0,c
 35976  0052D8  D007               	goto	i2l14799
 35977  0052DA                     i2u1514_40:
 35978                           
 35979                           ; BSR set to: 0
 35980                           ;outputs_MC50.c: 305:             {;outputs_MC50.c: 307:                 if ( powerContr
      +                          ol_st.actualCycle>=2 )
 35981  0052DA  0E01               	movlw	1
 35982  0052DC  0101               	movlb	1	; () banked
 35983  0052DE  6540               	cpfsgt	(_powerControl_st+4)& (0+255),b
 35984  0052E0  D023               	goto	i2l14807
 35985  0052E2                     i2u1515_40:
 35986                           
 35987                           ; BSR set to: 1
 35988                           ;outputs_MC50.c: 308:                 {;outputs_MC50.c: 309:                     powerCo
      +                          ntrol_st.actualCycle=0;
 35989  0052E2  0E00               	movlw	0
 35990  0052E4  6F40               	movwf	(_powerControl_st+4)& (0+255),b
 35991  0052E6  D020               	goto	i2l14807
 35992  0052E8                     i2l14799:
 35993                           
 35994                           ;outputs_MC50.c: 313:             {;outputs_MC50.c: 314:                 if ( powerContr
      +                          ol_st.actualCycle>=(powerControl_st.decelarationCyclesOff+powerControl_st.decelarationCy
      +                          clesOn) )
 35995  0052E8  0101               	movlb	1	; () banked
 35996  0052EA  513D               	movf	(_powerControl_st+1)& (0+255),w,b
 35997  0052EC  C13E  F005         	movff	_powerControl_st+2,??_controlMotorForce
 35998  0052F0  6A06               	clrf	(??_controlMotorForce+1)^0,c
 35999  0052F2  2605               	addwf	??_controlMotorForce^0,f,c
 36000  0052F4  0E00               	movlw	0
 36001  0052F6  2206               	addwfc	(??_controlMotorForce+1)^0,f,c
 36002  0052F8  5140               	movf	(_powerControl_st+4)& (0+255),w,b
 36003  0052FA  6E07               	movwf	(??_controlMotorForce+2)^0,c
 36004  0052FC  6A08               	clrf	(??_controlMotorForce+3)^0,c
 36005  0052FE  5005               	movf	??_controlMotorForce^0,w,c
 36006  005300  5C07               	subwf	(??_controlMotorForce+2)^0,w,c
 36007  005302  5008               	movf	(??_controlMotorForce+3)^0,w,c
 36008  005304  0A80               	xorlw	128
 36009  005306  6E09               	movwf	(??_controlMotorForce+4)^0,c
 36010  005308  5006               	movf	(??_controlMotorForce+1)^0,w,c
 36011  00530A  0A80               	xorlw	128
 36012  00530C  5809               	subwfb	(??_controlMotorForce+4)^0,w,c
 36013  00530E  B0D8               	btfsc	status,0,c
 36014  005310  D7E8               	goto	i2u1515_40
 36015  005312  D00A               	goto	i2l14807
 36016  005314                     i2l2211:
 36017  005314  B68D               	btfsc	141,3,c	;volatile
 36018  005316  D008               	goto	i2l14807
 36019  005318  0100               	movlb	0	; () banked
 36020  00531A  5179               	movf	_zeroCrossing& (0+255),w,b
 36021  00531C  B4D8               	btfsc	status,2,c
 36022  00531E  D004               	goto	i2l14807
 36023                           
 36024                           ; BSR set to: 0
 36025                           ;outputs_MC50.c: 328:     {;outputs_MC50.c: 330:         zeroCrossing=0;
 36026  005320  0E00               	movlw	0
 36027  005322  6F79               	movwf	_zeroCrossing& (0+255),b
 36028                           
 36029                           ;outputs_MC50.c: 331:         waitZeroPeak=0;
 36030  005324  0E00               	movlw	0
 36031  005326  6F78               	movwf	_waitZeroPeak& (0+255),b
 36032  005328                     i2l14807:
 36033                           
 36034                           ;outputs_MC50.c: 336:     if ( PORTAbits.RA3!=0 )
 36035  005328  A68D               	btfss	141,3,c	;volatile
 36036  00532A  D002               	goto	i2l2229
 36037                           
 36038                           ;outputs_MC50.c: 337:     {;outputs_MC50.c: 339:         zeroCrossingLength++;
 36039  00532C  0101               	movlb	1	; () banked
 36040  00532E  2B50               	incf	_zeroCrossingLength& (0+255),f,b
 36041  005330                     i2l2229:
 36042                           
 36043                           ;outputs_MC50.c: 342:    var_sys.Control50or60hz ++;
 36044  005330  0101               	movlb	1	; () banked
 36045  005332  2BA2               	incf	(_var_sys+77)& (0+255),f,b	;volatile
 36046                           
 36047                           ; BSR set to: 1
 36048                           ;outputs_MC50.c: 352:     stateMotor = VerifyElectricalBrake(var_sys.StateMotor);
 36049  005334  5155               	movf	_var_sys& (0+255),w,b	;volatile
 36050  005336  EC53  F044         	call	i2_VerifyElectricalBrake
 36051  00533A  6F75               	movwf	_stateMotor& (0+255),b
 36052                           
 36053                           ; BSR set to: 0
 36054                           ;outputs_MC50.c: 354:     if ( var_sys_NVM.electricBrake==1 && ts_system.TimeElectricBra
      +                          ke>0 && ts_system.TimeStopElectricBrake<=0 )
 36055  00533C  0101               	movlb	1	; () banked
 36056  00533E  05BD               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 36057  005340  A4D8               	btfss	status,2,c
 36058  005342  D02E               	goto	i2l14831
 36059                           
 36060                           ; BSR set to: 1
 36061  005344  0100               	movlb	0	; () banked
 36062  005346  BFB8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36063  005348  D02B               	goto	i2l14831
 36064  00534A  51B8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36065  00534C  E103               	bnz	i2u1521_40
 36066  00534E  05B7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 36067  005350  A0D8               	btfss	status,0,c
 36068  005352  D026               	goto	i2l14831
 36069  005354                     i2u1521_40:
 36070                           
 36071                           ; BSR set to: 0
 36072  005354  BFD0               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 36073  005356  D005               	goto	i2u1522_40
 36074  005358  51D0               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 36075  00535A  E122               	bnz	i2l14831
 36076  00535C  05CF               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 36077  00535E  B0D8               	btfsc	status,0,c
 36078  005360  D01F               	goto	i2l14831
 36079  005362                     i2u1522_40:
 36080                           
 36081                           ; BSR set to: 0
 36082                           ;outputs_MC50.c: 355:     {;outputs_MC50.c: 357:         if(stateMotor !=0 && StateTRIAC
      +                          ==1 && ts_system.ts_TRIACWait<=0 && powerControl_st.actualCycle==0 && ts_system.TimeElec
      +                          tricBrake<(((5+6)*( 100/50))-(5*( 100/50))) )
 36083  005362  5175               	movf	_stateMotor& (0+255),w,b
 36084  005364  B4D8               	btfsc	status,2,c
 36085  005366  D03E               	goto	i2l14843
 36086                           
 36087                           ; BSR set to: 0
 36088  005368  0577               	decf	_StateTRIAC& (0+255),w,b
 36089  00536A  A4D8               	btfss	status,2,c
 36090  00536C  D03B               	goto	i2l14843
 36091                           
 36092                           ; BSR set to: 0
 36093  00536E  BF96               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 36094  005370  D005               	goto	i2u1525_40
 36095  005372  5196               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 36096  005374  E137               	bnz	i2l14843
 36097  005376  0595               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 36098  005378  B0D8               	btfsc	status,0,c
 36099  00537A  D034               	goto	i2l14843
 36100  00537C                     i2u1525_40:
 36101                           
 36102                           ; BSR set to: 0
 36103  00537C  0101               	movlb	1	; () banked
 36104  00537E  5140               	movf	(_powerControl_st+4)& (0+255),w,b
 36105  005380  A4D8               	btfss	status,2,c
 36106  005382  D030               	goto	i2l14843
 36107                           
 36108                           ; BSR set to: 1
 36109  005384  0100               	movlb	0	; () banked
 36110  005386  BFB8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36111  005388  D006               	goto	i2u1527_40
 36112  00538A  51B8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36113  00538C  E12B               	bnz	i2l14843
 36114  00538E  0E0C               	movlw	12
 36115  005390  5DB7               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 36116  005392  B0D8               	btfsc	status,0,c
 36117  005394  D027               	goto	i2l14843
 36118  005396                     i2u1527_40:
 36119                           
 36120                           ; BSR set to: 0
 36121                           
 36122                           ;outputs_MC50.c: 358:         {;outputs_MC50.c: 359:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 36123  005396  8E86               	bsf	134,7,c	;volatile
 36124                           
 36125                           ; BSR set to: 0
 36126                           ;outputs_MC50.c: 360:            ts_system.ts_TRIACWait=-(25*200);
 36127  005398  0EEC               	movlw	236
 36128  00539A  6F96               	movwf	(_ts_system+7)& (0+255),b	;volatile
 36129  00539C  0E78               	movlw	120
 36130  00539E  D01B               	goto	L100
 36131  0053A0                     i2l14831:
 36132                           
 36133                           ;outputs_MC50.c: 366:     {;outputs_MC50.c: 368:         if(stateMotor !=0 && ts_system.
      +                          ts_TimeSlotTRIAC<difTime && StateTRIAC==1 && ts_system.ts_TRIACWait<=0 && var_sys.InStop
      +                          ing==NO)
 36134  0053A0  0100               	movlb	0	; () banked
 36135  0053A2  5175               	movf	_stateMotor& (0+255),w,b
 36136  0053A4  B4D8               	btfsc	status,2,c
 36137  0053A6  D01E               	goto	i2l14843
 36138                           
 36139                           ; BSR set to: 0
 36140  0053A8  5176               	movf	_difTime& (0+255),w,b
 36141  0053AA  5D94               	subwf	(_ts_system+5)& (0+255),w,b	;volatile
 36142  0053AC  B0D8               	btfsc	status,0,c
 36143  0053AE  D01A               	goto	i2l14843
 36144                           
 36145                           ; BSR set to: 0
 36146  0053B0  0577               	decf	_StateTRIAC& (0+255),w,b
 36147  0053B2  A4D8               	btfss	status,2,c
 36148  0053B4  D017               	goto	i2l14843
 36149                           
 36150                           ; BSR set to: 0
 36151  0053B6  BF96               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 36152  0053B8  D005               	goto	i2u1531_40
 36153  0053BA  5196               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 36154  0053BC  E113               	bnz	i2l14843
 36155  0053BE  0595               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 36156  0053C0  B0D8               	btfsc	status,0,c
 36157  0053C2  D010               	goto	i2l14843
 36158  0053C4                     i2u1531_40:
 36159                           
 36160                           ; BSR set to: 0
 36161  0053C4  0101               	movlb	1	; () banked
 36162  0053C6  5162               	movf	(_var_sys+13)& (0+255),w,b	;volatile
 36163  0053C8  A4D8               	btfss	status,2,c
 36164  0053CA  D00C               	goto	i2l14843
 36165                           
 36166                           ; BSR set to: 1
 36167                           
 36168                           ;outputs_MC50.c: 369:         {;outputs_MC50.c: 370:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 36169  0053CC  8E86               	bsf	134,7,c	;volatile
 36170                           
 36171                           ; BSR set to: 1
 36172                           ;outputs_MC50.c: 371:            ts_system.ts_TRIACWait=-200;
 36173  0053CE  0EFF               	movlw	255
 36174  0053D0  0100               	movlb	0	; () banked
 36175  0053D2  6F96               	movwf	(_ts_system+7)& (0+255),b	;volatile
 36176  0053D4  0E38               	movlw	56
 36177  0053D6                     L100:
 36178  0053D6  6F95               	movwf	(_ts_system+6)& (0+255),b	;volatile
 36179                           
 36180                           ;outputs_MC50.c: 372:            var_sys.TriacON=YES;
 36181  0053D8  0E01               	movlw	1
 36182  0053DA  0101               	movlb	1	; () banked
 36183  0053DC  6F61               	movwf	(_var_sys+12)& (0+255),b	;volatile
 36184                           
 36185                           ;outputs_MC50.c: 373:            StateTRIAC=0;
 36186  0053DE  0E00               	movlw	0
 36187  0053E0  0100               	movlb	0	; () banked
 36188  0053E2  6F77               	movwf	_StateTRIAC& (0+255),b
 36189  0053E4                     i2l14843:
 36190                           
 36191                           ;outputs_MC50.c: 377:     if (((ts_system.ts_TimeSlotTRIAC <= 20 )&& ts_system.TimeElect
      +                          ricBrake<0) || (stateMotor==0))
 36192  0053E4  0E15               	movlw	21
 36193  0053E6  0100               	movlb	0	; () banked
 36194  0053E8  6194               	cpfslt	(_ts_system+5)& (0+255),b	;volatile
 36195  0053EA  D002               	goto	i2u1534_40
 36196                           
 36197                           ; BSR set to: 0
 36198  0053EC  BFB8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36199  0053EE  D003               	goto	i2u1535_40
 36200  0053F0                     i2u1534_40:
 36201                           
 36202                           ; BSR set to: 0
 36203  0053F0  5175               	movf	_stateMotor& (0+255),w,b
 36204  0053F2  A4D8               	btfss	status,2,c
 36205  0053F4  D004               	goto	i2l2238
 36206  0053F6                     i2u1535_40:
 36207                           
 36208                           ; BSR set to: 0
 36209                           
 36210                           ;outputs_MC50.c: 378:     {;outputs_MC50.c: 384:             do { LATDbits.LATD7 = 0; } 
      +                          while(0);
 36211  0053F6  9E86               	bcf	134,7,c	;volatile
 36212                           
 36213                           ; BSR set to: 0
 36214                           ;outputs_MC50.c: 385:             var_sys.TriacON=NO;
 36215  0053F8  0E00               	movlw	0
 36216  0053FA  0101               	movlb	1	; () banked
 36217  0053FC  6F61               	movwf	(_var_sys+12)& (0+255),b	;volatile
 36218  0053FE                     i2l2238:
 36219                           
 36220                           ;outputs_MC50.c: 396:     if(stateMotor !=0 && ts_system.ts_TRIACWait>0)
 36221  0053FE  0100               	movlb	0	; () banked
 36222  005400  5175               	movf	_stateMotor& (0+255),w,b
 36223  005402  A4D8               	btfss	status,2,c
 36224                           
 36225                           ; BSR set to: 0
 36226  005404  BF96               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 36227  005406  D009               	goto	i2l14855
 36228  005408  5196               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 36229  00540A  E103               	bnz	i2u1537_40
 36230  00540C  0595               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 36231  00540E  A0D8               	btfss	status,0,c
 36232  005410  D004               	goto	i2l14855
 36233  005412                     i2u1537_40:
 36234                           
 36235                           ; BSR set to: 0
 36236                           ;outputs_MC50.c: 397:     {;outputs_MC50.c: 398:         ts_system.ts_TRIACWait--;
 36237  005412  0795               	decf	(_ts_system+6)& (0+255),f,b	;volatile
 36238  005414  A0D8               	btfss	status,0,c
 36239  005416  0796               	decf	(_ts_system+7)& (0+255),f,b	;volatile
 36240                           
 36241                           ;outputs_MC50.c: 399:     }
 36242  005418  0012               	return	
 36243  00541A                     i2l14855:
 36244                           
 36245                           ; BSR set to: 0
 36246  00541A  5175               	movf	_stateMotor& (0+255),w,b
 36247  00541C  A4D8               	btfss	status,2,c
 36248  00541E  0012               	return	
 36249                           
 36250                           ; BSR set to: 0
 36251  005420  AF96               	btfss	(_ts_system+7)& (0+255),7,b	;volatile
 36252  005422  0012               	return	
 36253                           
 36254                           ; BSR set to: 0
 36255                           ;outputs_MC50.c: 401:     {;outputs_MC50.c: 402:         ts_system.ts_TRIACWait++;
 36256  005424  4B95               	infsnz	(_ts_system+6)& (0+255),f,b	;volatile
 36257  005426  2B96               	incf	(_ts_system+7)& (0+255),f,b	;volatile
 36258                           
 36259                           ; BSR set to: 0
 36260  005428  0012               	return		;funcret
 36261  00542A                     __end_of_controlMotorForce:
 36262                           	callstack 0
 36263                           
 36264 ;; *************** function i2_VerifyElectricalBrake *****************
 36265 ;; Defined at:
 36266 ;;		line 658 in file "outputs_MC50.c"
 36267 ;; Parameters:    Size  Location     Type
 36268 ;;  actualState     1    wreg     enum E10381
 36269 ;; Auto vars:     Size  Location     Type
 36270 ;;  actualState     1    1[COMRAM] enum E10381
 36271 ;;  tempState       1    0[COMRAM] enum E10381
 36272 ;; Return value:  Size  Location     Type
 36273 ;;                  1    wreg      enum E10381
 36274 ;; Registers used:
 36275 ;;		wreg, status,2, status,0
 36276 ;; Tracked objects:
 36277 ;;		On entry : 3F/1
 36278 ;;		On exit  : 3F/0
 36279 ;;		Unchanged: 0/0
 36280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36282 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36284 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36285 ;;Total ram usage:        2 bytes
 36286 ;; Hardware stack levels used: 1
 36287 ;; This function calls:
 36288 ;;		Nothing
 36289 ;; This function is called by:
 36290 ;;		_controlMotorForce
 36291 ;; This function uses a non-reentrant model
 36292 ;;
 36293                           
 36294                           	psect	text198
 36295  0088A6                     __ptext198:
 36296                           	callstack 0
 36297  0088A6                     i2_VerifyElectricalBrake:
 36298                           	callstack 14
 36299                           
 36300                           ; BSR set to: 0
 36301                           ;incstack = 0
 36302                           ;i2VerifyElectricalBrake@actualState stored from wreg
 36303  0088A6  6E02               	movwf	i2VerifyElectricalBrake@actualState^0,c
 36304                           
 36305                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 36306  0088A8  C002  F001         	movff	i2VerifyElectricalBrake@actualState,i2VerifyElectricalBrake@tempState
 36307                           
 36308                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 36309  0088AC  0101               	movlb	1	; () banked
 36310  0088AE  05BD               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 36311  0088B0  A4D8               	btfss	status,2,c
 36312  0088B2  D029               	goto	i2l2339
 36313                           
 36314                           ; BSR set to: 1
 36315  0088B4  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 36316  0088B6  A4D8               	btfss	status,2,c
 36317  0088B8  D026               	goto	i2l2339
 36318                           
 36319                           ; BSR set to: 1
 36320  0088BA  0100               	movlb	0	; () banked
 36321  0088BC  BFD0               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 36322  0088BE  D005               	goto	i2u1468_40
 36323  0088C0  51D0               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 36324  0088C2  E121               	bnz	i2l2339
 36325  0088C4  05CF               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 36326  0088C6  B0D8               	btfsc	status,0,c
 36327  0088C8  D01E               	goto	i2l2339
 36328  0088CA                     i2u1468_40:
 36329                           
 36330                           ; BSR set to: 0
 36331                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 36332  0088CA  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 36333  0088CC  1966               	xorwf	_brakeElectric_st& (0+255),w,b
 36334  0088CE  B4D8               	btfsc	status,2,c
 36335  0088D0  D00A               	goto	i2l14473
 36336                           
 36337                           ; BSR set to: 0
 36338  0088D2  5167               	movf	(_brakeElectric_st+1)& (0+255),w,b
 36339  0088D4  A4D8               	btfss	status,2,c
 36340  0088D6  D007               	goto	i2l14473
 36341                           
 36342                           ; BSR set to: 0
 36343                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 36344  0088D8  0E01               	movlw	1
 36345  0088DA  6F67               	movwf	(_brakeElectric_st+1)& (0+255),b
 36346                           
 36347                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 36348  0088DC  0E00               	movlw	0
 36349  0088DE  6FB8               	movwf	(_ts_system+41)& (0+255),b	;volatile
 36350  0088E0  0E16               	movlw	22
 36351  0088E2  6FB7               	movwf	(_ts_system+40)& (0+255),b	;volatile
 36352                           
 36353                           ;outputs_MC50.c: 670:         }
 36354  0088E4  D015               	goto	i2l2344
 36355  0088E6                     i2l14473:
 36356                           
 36357                           ; BSR set to: 0
 36358  0088E6  0567               	decf	(_brakeElectric_st+1)& (0+255),w,b
 36359  0088E8  B4D8               	btfsc	status,2,c
 36360                           
 36361                           ; BSR set to: 0
 36362  0088EA  BFB8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36363  0088EC  D008               	goto	i2l14479
 36364  0088EE  51B8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36365  0088F0  E103               	bnz	i2u1472_40
 36366  0088F2  05B7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 36367  0088F4  A0D8               	btfss	status,0,c
 36368  0088F6  D003               	goto	i2l14479
 36369  0088F8                     i2u1472_40:
 36370                           
 36371                           ; BSR set to: 0
 36372                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 36373  0088F8  0E01               	movlw	1
 36374  0088FA  6E01               	movwf	i2VerifyElectricalBrake@tempState^0,c
 36375                           
 36376                           ;outputs_MC50.c: 686:         }
 36377  0088FC  D009               	goto	i2l2344
 36378  0088FE                     i2l14479:
 36379                           
 36380                           ; BSR set to: 0
 36381                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 36382  0088FE  0E00               	movlw	0
 36383  008900  6F66               	movwf	_brakeElectric_st& (0+255),b
 36384                           
 36385                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 36386  008902  0E00               	movlw	0
 36387  008904  D004               	goto	L101
 36388  008906                     i2l2339:
 36389                           
 36390                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 36391  008906  C002  F066         	movff	i2VerifyElectricalBrake@actualState,_brakeElectric_st
 36392                           
 36393                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 36394  00890A  0E00               	movlw	0
 36395  00890C  0100               	movlb	0	; () banked
 36396  00890E                     L101:
 36397  00890E  6F67               	movwf	(_brakeElectric_st+1)& (0+255),b
 36398  008910                     i2l2344:
 36399                           
 36400                           ; BSR set to: 0
 36401                           ;outputs_MC50.c: 700:     return tempState;
 36402  008910  5001               	movf	i2VerifyElectricalBrake@tempState^0,w,c
 36403                           
 36404                           ; BSR set to: 0
 36405  008912  0012               	return		;funcret
 36406  008914                     __end_ofi2_VerifyElectricalBrake:
 36407                           	callstack 0
 36408                           
 36409 ;; *************** function i2_GetMotorPower *****************
 36410 ;; Defined at:
 36411 ;;		line 405 in file "outputs_MC50.c"
 36412 ;; Parameters:    Size  Location     Type
 36413 ;;		None
 36414 ;; Auto vars:     Size  Location     Type
 36415 ;;  defineatraso    1    3[COMRAM] unsigned char 
 36416 ;; Return value:  Size  Location     Type
 36417 ;;                  1    wreg      unsigned char 
 36418 ;; Registers used:
 36419 ;;		wreg, status,2, status,0, prodl, prodh
 36420 ;; Tracked objects:
 36421 ;;		On entry : 3F/E
 36422 ;;		On exit  : 3F/0
 36423 ;;		Unchanged: 0/0
 36424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36426 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36427 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36428 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36429 ;;Total ram usage:        4 bytes
 36430 ;; Hardware stack levels used: 1
 36431 ;; This function calls:
 36432 ;;		Nothing
 36433 ;; This function is called by:
 36434 ;;		_controlMotorForce
 36435 ;; This function uses a non-reentrant model
 36436 ;;
 36437                           
 36438                           	psect	text199
 36439  007950                     __ptext199:
 36440                           	callstack 0
 36441  007950                     i2_GetMotorPower:
 36442                           	callstack 14
 36443                           
 36444                           ; BSR set to: 14
 36445                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 36446                           
 36447                           ; BSR set to: 0
 36448                           ;incstack = 0
 36449  007950  0101               	movlb	1	; () banked
 36450  007952  053C               	decf	_powerControl_st& (0+255),w,b
 36451  007954  A4D8               	btfss	status,2,c
 36452  007956  D005               	goto	i2l14423
 36453                           
 36454                           ; BSR set to: 1
 36455                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 36456  007958  51A8               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 36457  00795A  0D06               	mullw	6
 36458  00795C  CFF3 F074          	movff	prodl,_temppower
 36459                           
 36460                           ;outputs_MC50.c: 416:     }
 36461  007960  D03F               	goto	i2l2256
 36462  007962                     i2l14423:
 36463                           
 36464                           ; BSR set to: 1
 36465                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 36466  007962  51A8               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 36467  007964  0D06               	mullw	6
 36468  007966  CFF3 F073          	movff	prodl,_fullmotorPower
 36469                           
 36470                           ; BSR set to: 1
 36471                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 36472  00796A  BF64               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 36473  00796C  D01A               	goto	i2l14433
 36474  00796E  5164               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 36475  007970  E103               	bnz	i2u1458_40
 36476  007972  0563               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 36477  007974  A0D8               	btfss	status,0,c
 36478  007976  D015               	goto	i2l14433
 36479  007978                     i2u1458_40:
 36480                           
 36481                           ; BSR set to: 1
 36482                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 36483  007978  0100               	movlb	0	; () banked
 36484  00797A  5173               	movf	_fullmotorPower& (0+255),w,b
 36485  00797C  6E01               	movwf	??i2_GetMotorPower^0,c
 36486  00797E  6A02               	clrf	(??i2_GetMotorPower+1)^0,c
 36487  007980  0101               	movlb	1	; () banked
 36488  007982  5163               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 36489  007984  5C01               	subwf	??i2_GetMotorPower^0,w,c
 36490  007986  5002               	movf	(??i2_GetMotorPower+1)^0,w,c
 36491  007988  0A80               	xorlw	128
 36492  00798A  6E03               	movwf	(??i2_GetMotorPower+2)^0,c
 36493  00798C  5164               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 36494  00798E  0A80               	xorlw	128
 36495  007990  5803               	subwfb	(??i2_GetMotorPower+2)^0,w,c
 36496  007992  B0D8               	btfsc	status,0,c
 36497  007994  D002               	goto	i2l14431
 36498                           
 36499                           ; BSR set to: 1
 36500                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 36501  007996  0E01               	movlw	1
 36502  007998  D018               	goto	L105
 36503  00799A                     i2l14431:
 36504                           
 36505                           ; BSR set to: 1
 36506                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 36507  00799A  5163               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 36508  00799C  0100               	movlb	0	; () banked
 36509  00799E  5D73               	subwf	_fullmotorPower& (0+255),w,b
 36510  0079A0  D015               	goto	L104
 36511  0079A2                     i2l14433:
 36512                           
 36513                           ; BSR set to: 1
 36514  0079A2  BF64               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 36515  0079A4  D005               	goto	i2u1460_40
 36516  0079A6  5164               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 36517  0079A8  E113               	bnz	i2l14443
 36518  0079AA  0563               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 36519  0079AC  B0D8               	btfsc	status,0,c
 36520  0079AE  D010               	goto	i2l14443
 36521  0079B0                     i2u1460_40:
 36522                           
 36523                           ; BSR set to: 1
 36524  0079B0  BF66               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 36525  0079B2  D005               	goto	i2u1461_40
 36526  0079B4  5166               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 36527  0079B6  E10C               	bnz	i2l14443
 36528  0079B8  0565               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 36529  0079BA  B0D8               	btfsc	status,0,c
 36530  0079BC  D009               	goto	i2l14443
 36531  0079BE                     i2u1461_40:
 36532                           
 36533                           ; BSR set to: 1
 36534                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 36535  0079BE  C073  F074         	movff	_fullmotorPower,_temppower
 36536                           
 36537                           ; BSR set to: 1
 36538                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 36539  0079C2  0E08               	movlw	8
 36540  0079C4  65A8               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 36541  0079C6  D00C               	goto	i2l2256
 36542                           
 36543                           ; BSR set to: 1
 36544                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 36545  0079C8  0E3A               	movlw	58
 36546  0079CA                     L105:
 36547  0079CA  0100               	movlb	0	; () banked
 36548  0079CC                     L104:
 36549  0079CC  6F74               	movwf	_temppower& (0+255),b
 36550  0079CE  D008               	goto	i2l2256
 36551  0079D0                     i2l14443:
 36552                           
 36553                           ; BSR set to: 1
 36554  0079D0  BF66               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 36555  0079D2  D006               	goto	i2l2256
 36556  0079D4  5166               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 36557  0079D6  E102               	bnz	i2u1463_40
 36558  0079D8  0565               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 36559  0079DA  B0D8               	btfsc	status,0,c
 36560  0079DC                     i2u1463_40:
 36561                           
 36562                           ; BSR set to: 1
 36563                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 36564  0079DC  C165  F074         	movff	_var_sys+16,_temppower	;volatile
 36565  0079E0                     i2l2256:
 36566                           
 36567                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 36568                           
 36569                           ; BSR set to: 1
 36570  0079E0  0101               	movlb	1	; () banked
 36571  0079E2  BF66               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 36572  0079E4  D00E               	goto	i2l14453
 36573  0079E6  5166               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 36574  0079E8  E103               	bnz	i2u1464_40
 36575  0079EA  0565               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 36576  0079EC  A0D8               	btfss	status,0,c
 36577  0079EE  D009               	goto	i2l14453
 36578  0079F0                     i2u1464_40:
 36579                           
 36580                           ; BSR set to: 1
 36581  0079F0  BF64               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 36582  0079F2  D005               	goto	i2u1465_40
 36583  0079F4  5164               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 36584  0079F6  E105               	bnz	i2l14453
 36585  0079F8  0563               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 36586  0079FA  B0D8               	btfsc	status,0,c
 36587  0079FC  D002               	goto	i2l14453
 36588  0079FE                     i2u1465_40:
 36589                           
 36590                           ; BSR set to: 1
 36591                           ;outputs_MC50.c: 452:     defineatraso = 5;
 36592  0079FE  0E05               	movlw	5
 36593  007A00  D001               	goto	L102
 36594  007A02                     i2l14453:
 36595                           
 36596                           ; BSR set to: 1
 36597                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 36598  007A02  0E17               	movlw	23
 36599  007A04                     L102:
 36600  007A04  6E04               	movwf	i2GetMotorPower@defineatraso^0,c
 36601                           
 36602                           ; BSR set to: 1
 36603                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 36604  007A06  0100               	movlb	0	; () banked
 36605  007A08  5174               	movf	_temppower& (0+255),w,b
 36606  007A0A  2404               	addwf	i2GetMotorPower@defineatraso^0,w,c
 36607                           
 36608                           ; BSR set to: 0
 36609  007A0C  0012               	return		;funcret
 36610  007A0E                     __end_ofi2_GetMotorPower:
 36611                           	callstack 0
 36612                           
 36613 ;; *************** function _TMR1_WriteTimer *****************
 36614 ;; Defined at:
 36615 ;;		line 129 in file "mcc_generated_files/tmr1.c"
 36616 ;; Parameters:    Size  Location     Type
 36617 ;;  timerVal        2    0[COMRAM] unsigned short 
 36618 ;; Auto vars:     Size  Location     Type
 36619 ;;		None
 36620 ;; Return value:  Size  Location     Type
 36621 ;;                  1    wreg      void 
 36622 ;; Registers used:
 36623 ;;		None
 36624 ;; Tracked objects:
 36625 ;;		On entry : 3F/0
 36626 ;;		On exit  : 3F/0
 36627 ;;		Unchanged: 3F/0
 36628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36629 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36632 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36633 ;;Total ram usage:        2 bytes
 36634 ;; Hardware stack levels used: 1
 36635 ;; This function calls:
 36636 ;;		Nothing
 36637 ;; This function is called by:
 36638 ;;		_TMR1_ISR
 36639 ;; This function uses a non-reentrant model
 36640 ;;
 36641                           
 36642                           	psect	text200
 36643  009936                     __ptext200:
 36644                           	callstack 0
 36645  009936                     _TMR1_WriteTimer:
 36646                           	callstack 15
 36647                           
 36648                           ; BSR set to: 0
 36649                           ;mcc_generated_files/tmr1.c: 129: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 130: {;mcc_generated_files/tmr1.c: 131:     if (T1CONbits.nT1SYNC == 1)
 36650                           
 36651                           ; BSR set to: 0
 36652                           ;incstack = 0
 36653  009936  A4CF               	btfss	207,2,c	;volatile
 36654  009938  D007               	goto	i2l1147
 36655                           
 36656                           ; BSR set to: 0
 36657                           ;mcc_generated_files/tmr1.c: 132:     {;mcc_generated_files/tmr1.c: 134:         T1CONbi
      +                          ts.TMR1ON = 0;
 36658  00993A  90CF               	bcf	207,0,c	;volatile
 36659                           
 36660                           ;mcc_generated_files/tmr1.c: 137:         TMR1H = (uint8_t)(timerVal >> 8);
 36661  00993C  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 36662                           
 36663                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 36664  009940  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 36665                           
 36666                           ;mcc_generated_files/tmr1.c: 141:         T1CONbits.TMR1ON =1;
 36667  009944  80CF               	bsf	207,0,c	;volatile
 36668                           
 36669                           ;mcc_generated_files/tmr1.c: 142:     }
 36670  009946  0012               	return	
 36671  009948                     i2l1147:
 36672                           
 36673                           ; BSR set to: 0
 36674                           ;mcc_generated_files/tmr1.c: 144:     {;mcc_generated_files/tmr1.c: 146:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 36675  009948  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 36676                           
 36677                           ;mcc_generated_files/tmr1.c: 147:         TMR1L = (uint8_t)timerVal;
 36678  00994C  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 36679                           
 36680                           ; BSR set to: 0
 36681  009950  0012               	return		;funcret
 36682  009952                     __end_of_TMR1_WriteTimer:
 36683                           	callstack 0
 36684                           
 36685 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 36686 ;; Defined at:
 36687 ;;		line 196 in file "mcc_generated_files/tmr1.c"
 36688 ;; Parameters:    Size  Location     Type
 36689 ;;		None
 36690 ;; Auto vars:     Size  Location     Type
 36691 ;;		None
 36692 ;; Return value:  Size  Location     Type
 36693 ;;                  1    wreg      void 
 36694 ;; Registers used:
 36695 ;;		None
 36696 ;; Tracked objects:
 36697 ;;		On entry : 3F/2
 36698 ;;		On exit  : 3F/2
 36699 ;;		Unchanged: 3F/0
 36700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36705 ;;Total ram usage:        0 bytes
 36706 ;; Hardware stack levels used: 1
 36707 ;; This function calls:
 36708 ;;		Nothing
 36709 ;; This function is called by:
 36710 ;;		_TMR1_Initialize
 36711 ;;		_TMR1_ISR
 36712 ;; This function uses a non-reentrant model
 36713 ;;
 36714                           
 36715                           	psect	text201
 36716  009C68                     __ptext201:
 36717                           	callstack 0
 36718  009C68                     _TMR1_DefaultInterruptHandler:
 36719                           	callstack 15
 36720                           
 36721                           ; BSR set to: 2
 36722                           
 36723                           ; BSR set to: 0
 36724                           ;incstack = 0
 36725  009C68  0012               	return		;funcret
 36726  009C6A                     __end_of_TMR1_DefaultInterruptHandler:
 36727                           	callstack 0
 36728                           
 36729 ;; *************** function _TMR0_ISR *****************
 36730 ;; Defined at:
 36731 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 36732 ;; Parameters:    Size  Location     Type
 36733 ;;		None
 36734 ;; Auto vars:     Size  Location     Type
 36735 ;;		None
 36736 ;; Return value:  Size  Location     Type
 36737 ;;                  1    wreg      void 
 36738 ;; Registers used:
 36739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 36740 ;; Tracked objects:
 36741 ;;		On entry : 3F/E
 36742 ;;		On exit  : 0/0
 36743 ;;		Unchanged: 0/0
 36744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36749 ;;Total ram usage:        0 bytes
 36750 ;; Hardware stack levels used: 1
 36751 ;; Hardware stack levels required when called: 1
 36752 ;; This function calls:
 36753 ;;		Absolute function
 36754 ;;		_TMR0_DefaultInterruptHandler
 36755 ;;		_rxi
 36756 ;; This function is called by:
 36757 ;;		_INTERRUPT_InterruptManager
 36758 ;; This function uses a non-reentrant model
 36759 ;;
 36760                           
 36761                           	psect	text202
 36762  0097EC                     __ptext202:
 36763                           	callstack 0
 36764  0097EC                     _TMR0_ISR:
 36765                           	callstack 15
 36766                           
 36767                           ; BSR set to: 14
 36768                           ;mcc_generated_files/tmr0.c: 130:     PIR0bits.TMR0IF = 0;
 36769                           
 36770                           ; BSR set to: 2
 36771                           ;incstack = 0
 36772  0097EC  9BCA               	bcf	202,5,b	;volatile
 36773                           
 36774                           ; BSR set to: 14
 36775                           ;mcc_generated_files/tmr0.c: 132:     rxi();
 36776  0097EE  EC97  F025         	call	_rxi	;wreg free
 36777                           
 36778                           ;mcc_generated_files/tmr0.c: 134:     if(TMR0_InterruptHandler)
 36779  0097F2  0102               	movlb	2	; () banked
 36780  0097F4  51E3               	movf	_TMR0_InterruptHandler& (0+255),w,b
 36781  0097F6  11E4               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 36782  0097F8  B4D8               	btfsc	status,2,c
 36783  0097FA  0012               	return	
 36784                           
 36785                           ; BSR set to: 2
 36786                           ;mcc_generated_files/tmr0.c: 135:     {;mcc_generated_files/tmr0.c: 136:         TMR0_In
      +                          terruptHandler();
 36787  0097FC  D801               	call	i2u1910_48
 36788  0097FE  0012               	return	
 36789  009800                     i2u1910_48:
 36790  009800  0005               	push	
 36791  009802  6EFA               	movwf	pclath,c
 36792  009804  51E3               	movf	_TMR0_InterruptHandler& (0+255),w,b
 36793  009806  6EFD               	movwf	tosl,c
 36794  009808  51E4               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 36795  00980A  6EFE               	movwf	tosh,c
 36796  00980C  6AFF               	clrf	tosu,c
 36797  00980E  50FA               	movf	pclath,w,c
 36798  009810  0012               	return		;indir
 36799  009812                     __end_of_TMR0_ISR:
 36800                           	callstack 0
 36801                           
 36802 ;; *************** function _rxi *****************
 36803 ;; Defined at:
 36804 ;;		line 41 in file "inputs_MC50.c"
 36805 ;; Parameters:    Size  Location     Type
 36806 ;;		None
 36807 ;; Auto vars:     Size  Location     Type
 36808 ;;		None
 36809 ;; Return value:  Size  Location     Type
 36810 ;;                  1    wreg      void 
 36811 ;; Registers used:
 36812 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36813 ;; Tracked objects:
 36814 ;;		On entry : 3F/E
 36815 ;;		On exit  : 3C/0
 36816 ;;		Unchanged: 0/0
 36817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36820 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36821 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36822 ;;Total ram usage:        2 bytes
 36823 ;; Hardware stack levels used: 1
 36824 ;; This function calls:
 36825 ;;		Nothing
 36826 ;; This function is called by:
 36827 ;;		_TMR0_ISR
 36828 ;; This function uses a non-reentrant model
 36829 ;;
 36830                           
 36831                           	psect	text203
 36832  004B2E                     __ptext203:
 36833                           	callstack 0
 36834  004B2E                     _rxi:
 36835                           	callstack 15
 36836                           
 36837                           ; BSR set to: 14
 36838                           ;inputs_MC50.c: 43:     RFBit = PORTBbits.RB3;
 36839                           
 36840                           ;incstack = 0
 36841  004B2E  0E00               	movlw	0
 36842  004B30  B68E               	btfsc	142,3,c	;volatile
 36843  004B32  0E01               	movlw	1
 36844  004B34  0100               	movlb	0	; () banked
 36845  004B36  6F80               	movwf	_RFBit& (0+255),b	;volatile
 36846                           
 36847                           ; BSR set to: 0
 36848                           ;inputs_MC50.c: 47:     if (RFFull)
 36849  004B38  51D7               	movf	_RFFull& (0+255),w,b	;volatile
 36850  004B3A  A4D8               	btfss	status,2,c
 36851  004B3C  0012               	return	
 36852  004B3E  D101               	goto	i2l14737
 36853  004B40                     i2l14627:
 36854                           
 36855                           ; BSR set to: 0
 36856                           ;inputs_MC50.c: 53:             if (RFBit == 0) {
 36857  004B40  5180               	movf	_RFBit& (0+255),w,b	;volatile
 36858  004B42  A4D8               	btfss	status,2,c
 36859  004B44  D003               	goto	i2l14631
 36860                           
 36861                           ; BSR set to: 0
 36862                           ;inputs_MC50.c: 56:                 RFstate = 3;
 36863  004B46  0E03               	movlw	3
 36864  004B48  6F84               	movwf	_RFstate& (0+255),b
 36865                           
 36866                           ;inputs_MC50.c: 57:             } else {
 36867  004B4A  0012               	return	
 36868  004B4C                     i2l14631:
 36869                           
 36870                           ; BSR set to: 0
 36871                           ;inputs_MC50.c: 58:                 RFcount--;
 36872  004B4C  076C               	decf	_RFcount& (0+255),f,b
 36873  004B4E  A0D8               	btfss	status,0,c
 36874  004B50  076D               	decf	(_RFcount+1)& (0+255),f,b
 36875                           
 36876                           ; BSR set to: 0
 36877                           ;inputs_MC50.c: 59:                 if (RFcount < -10)
 36878  004B52  AF6D               	btfss	(_RFcount+1)& (0+255),7,b
 36879  004B54  0012               	return	
 36880  004B56  0EF6               	movlw	246
 36881  004B58  5D6C               	subwf	_RFcount& (0+255),w,b
 36882  004B5A  0EFF               	movlw	255
 36883  004B5C  596D               	subwfb	(_RFcount+1)& (0+255),w,b
 36884  004B5E  B0D8               	btfsc	status,0,c
 36885  004B60  0012               	return	
 36886  004B62                     i2u1479_40:
 36887  004B62                     i2l14635:
 36888                           
 36889                           ; BSR set to: 0
 36890                           ;inputs_MC50.c: 60:                 {;inputs_MC50.c: 62:                     RFstate = 0
      +                          ;
 36891  004B62  0E00               	movlw	0
 36892  004B64  6F84               	movwf	_RFstate& (0+255),b
 36893  004B66  0012               	return	
 36894  004B68                     i2l14637:
 36895                           
 36896                           ; BSR set to: 0
 36897                           ;inputs_MC50.c: 67:             if (RFBit) {
 36898  004B68  5180               	movf	_RFBit& (0+255),w,b	;volatile
 36899  004B6A  B4D8               	btfsc	status,2,c
 36900  004B6C  D028               	goto	i2l14657
 36901                           
 36902                           ; BSR set to: 0
 36903                           ;inputs_MC50.c: 71:                 RFstate = 2;
 36904  004B6E  0E02               	movlw	2
 36905  004B70  6F84               	movwf	_RFstate& (0+255),b
 36906                           
 36907                           ; BSR set to: 0
 36908                           ;inputs_MC50.c: 72:                 BufferRF[Bptr] >>= 1;
 36909  004B72  0EC8               	movlw	low _BufferRF
 36910  004B74  2583               	addwf	_Bptr& (0+255),w,b
 36911  004B76  6ED9               	movwf	fsr2l,c
 36912  004B78  6ADA               	clrf	fsr2h,c
 36913  004B7A  0E02               	movlw	high _BufferRF
 36914  004B7C  22DA               	addwfc	fsr2h,f,c
 36915  004B7E  90D8               	bcf	status,0,c
 36916  004B80  32DF               	rrcf	indf2,f,c
 36917                           
 36918                           ; BSR set to: 0
 36919                           ;inputs_MC50.c: 73:                 if (RFcount >= 0) {
 36920  004B82  BF6D               	btfsc	(_RFcount+1)& (0+255),7,b
 36921  004B84  D008               	goto	i2l14647
 36922                           
 36923                           ; BSR set to: 0
 36924                           ;inputs_MC50.c: 74:                     BufferRF[Bptr] += 0x80;
 36925  004B86  0EC8               	movlw	low _BufferRF
 36926  004B88  2583               	addwf	_Bptr& (0+255),w,b
 36927  004B8A  6ED9               	movwf	fsr2l,c
 36928  004B8C  6ADA               	clrf	fsr2h,c
 36929  004B8E  0E02               	movlw	high _BufferRF
 36930  004B90  22DA               	addwfc	fsr2h,f,c
 36931  004B92  0E80               	movlw	128
 36932  004B94  26DF               	addwf	indf2,f,c
 36933  004B96                     i2l14647:
 36934                           
 36935                           ; BSR set to: 0
 36936                           ;inputs_MC50.c: 81:                 RFcount = 0;
 36937  004B96  0E00               	movlw	0
 36938  004B98  6F6D               	movwf	(_RFcount+1)& (0+255),b
 36939  004B9A  0E00               	movlw	0
 36940  004B9C  6F6C               	movwf	_RFcount& (0+255),b
 36941                           
 36942                           ; BSR set to: 0
 36943                           ;inputs_MC50.c: 83:                 if ((++BitCount & 7) == 0)
 36944  004B9E  2B82               	incf	_BitCount& (0+255),f,b
 36945  004BA0  C082  F001         	movff	_BitCount,??_rxi
 36946  004BA4  0E07               	movlw	7
 36947  004BA6  1601               	andwf	??_rxi^0,f,c
 36948  004BA8  B4D8               	btfsc	status,2,c
 36949                           
 36950                           ; BSR set to: 0
 36951                           ;inputs_MC50.c: 84:                     Bptr++;
 36952  004BAA  2B83               	incf	_Bptr& (0+255),f,b
 36953                           
 36954                           ; BSR set to: 0
 36955                           ;inputs_MC50.c: 85:                 if (BitCount == 65) {
 36956  004BAC  0E41               	movlw	65
 36957  004BAE  1982               	xorwf	_BitCount& (0+255),w,b
 36958  004BB0  A4D8               	btfss	status,2,c
 36959  004BB2  0012               	return	
 36960                           
 36961                           ; BSR set to: 0
 36962                           ;inputs_MC50.c: 86:                     RFstate = 0;
 36963  004BB4  0E00               	movlw	0
 36964  004BB6  6F84               	movwf	_RFstate& (0+255),b
 36965                           
 36966                           ;inputs_MC50.c: 87:                     RFFull = 1;
 36967  004BB8  0E01               	movlw	1
 36968  004BBA  6FD7               	movwf	_RFFull& (0+255),b	;volatile
 36969  004BBC  0012               	return	
 36970  004BBE                     i2l14657:
 36971                           
 36972                           ; BSR set to: 0
 36973                           ;inputs_MC50.c: 92:                 RFcount++;
 36974  004BBE  4B6C               	infsnz	_RFcount& (0+255),f,b
 36975  004BC0  2B6D               	incf	(_RFcount+1)& (0+255),f,b
 36976                           
 36977                           ; BSR set to: 0
 36978                           ;inputs_MC50.c: 93:                 if (RFcount >= 10)
 36979  004BC2  BF6D               	btfsc	(_RFcount+1)& (0+255),7,b
 36980  004BC4  0012               	return	
 36981  004BC6  516D               	movf	(_RFcount+1)& (0+255),w,b
 36982  004BC8  E104               	bnz	i2u1484_40
 36983  004BCA  0E0A               	movlw	10
 36984  004BCC  5D6C               	subwf	_RFcount& (0+255),w,b
 36985  004BCE  A0D8               	btfss	status,0,c
 36986  004BD0  0012               	return	
 36987  004BD2                     i2u1484_40:
 36988                           
 36989                           ; BSR set to: 0
 36990                           ;inputs_MC50.c: 94:                 {;inputs_MC50.c: 96:                     RFstate = 1
      +                          ;
 36991  004BD2  0E01               	movlw	1
 36992  004BD4  6F84               	movwf	_RFstate& (0+255),b
 36993                           
 36994                           ;inputs_MC50.c: 97:                     Bptr = 0;
 36995  004BD6  0E00               	movlw	0
 36996  004BD8  6F83               	movwf	_Bptr& (0+255),b
 36997                           
 36998                           ;inputs_MC50.c: 98:                     BitCount = 0;
 36999  004BDA  0E00               	movlw	0
 37000  004BDC  6F82               	movwf	_BitCount& (0+255),b
 37001  004BDE  0012               	return	
 37002  004BE0                     i2l14663:
 37003                           
 37004                           ; BSR set to: 0
 37005                           ;inputs_MC50.c: 103:             if (RFBit) {
 37006  004BE0  5180               	movf	_RFBit& (0+255),w,b	;volatile
 37007  004BE2  B4D8               	btfsc	status,2,c
 37008  004BE4  D02E               	goto	i2l14679
 37009                           
 37010                           ; BSR set to: 0
 37011                           ;inputs_MC50.c: 106:                 if ((RFcount < 20) || (RFcount >= 45)) {
 37012  004BE6  BF6D               	btfsc	(_RFcount+1)& (0+255),7,b
 37013  004BE8  D00E               	goto	i2u1487_40
 37014  004BEA  516D               	movf	(_RFcount+1)& (0+255),w,b
 37015  004BEC  E104               	bnz	i2u1486_40
 37016  004BEE  0E14               	movlw	20
 37017  004BF0  5D6C               	subwf	_RFcount& (0+255),w,b
 37018  004BF2  A0D8               	btfss	status,0,c
 37019  004BF4  D008               	goto	i2u1487_40
 37020  004BF6                     i2u1486_40:
 37021                           
 37022                           ; BSR set to: 0
 37023  004BF6  BF6D               	btfsc	(_RFcount+1)& (0+255),7,b
 37024  004BF8  D01D               	goto	i2l14677
 37025  004BFA  516D               	movf	(_RFcount+1)& (0+255),w,b
 37026  004BFC  E104               	bnz	i2u1487_40
 37027  004BFE  0E2D               	movlw	45
 37028  004C00  5D6C               	subwf	_RFcount& (0+255),w,b
 37029  004C02  A0D8               	btfss	status,0,c
 37030  004C04  D017               	goto	i2l14677
 37031  004C06                     i2u1487_40:
 37032                           
 37033                           ; BSR set to: 0
 37034                           ;inputs_MC50.c: 107:                     if((RFcount < 80) || RFcount>=100)
 37035  004C06  BF6D               	btfsc	(_RFcount+1)& (0+255),7,b
 37036  004C08  D7AC               	goto	i2u1479_40
 37037  004C0A  516D               	movf	(_RFcount+1)& (0+255),w,b
 37038  004C0C  E104               	bnz	i2u1488_40
 37039  004C0E  0E50               	movlw	80
 37040  004C10  5D6C               	subwf	_RFcount& (0+255),w,b
 37041  004C12  A0D8               	btfss	status,0,c
 37042  004C14  D7A6               	goto	i2u1479_40
 37043  004C16                     i2u1488_40:
 37044                           
 37045                           ; BSR set to: 0
 37046  004C16  BF6D               	btfsc	(_RFcount+1)& (0+255),7,b
 37047  004C18  D006               	goto	i2l14675
 37048  004C1A  516D               	movf	(_RFcount+1)& (0+255),w,b
 37049  004C1C  E1A2               	bnz	i2l14635
 37050  004C1E  0E64               	movlw	100
 37051  004C20  5D6C               	subwf	_RFcount& (0+255),w,b
 37052  004C22  B0D8               	btfsc	status,0,c
 37053  004C24  D79E               	goto	i2u1479_40
 37054  004C26                     i2l14675:
 37055                           
 37056                           ; BSR set to: 0
 37057                           ;inputs_MC50.c: 112:                     {;inputs_MC50.c: 113:                         R
      +                          Fcount = -10;
 37058  004C26  0EFF               	movlw	255
 37059  004C28  6F6D               	movwf	(_RFcount+1)& (0+255),b
 37060  004C2A  0EF6               	movlw	246
 37061  004C2C  6F6C               	movwf	_RFcount& (0+255),b
 37062                           
 37063                           ;inputs_MC50.c: 114:                         RFstate = 4;
 37064  004C2E  0E04               	movlw	4
 37065  004C30  6F84               	movwf	_RFstate& (0+255),b
 37066  004C32  0012               	return	
 37067  004C34                     i2l14677:
 37068                           
 37069                           ; BSR set to: 0
 37070                           ;inputs_MC50.c: 118:                     RFcount = 0;
 37071  004C34  0E00               	movlw	0
 37072  004C36  6F6D               	movwf	(_RFcount+1)& (0+255),b
 37073  004C38  0E00               	movlw	0
 37074  004C3A  6F6C               	movwf	_RFcount& (0+255),b
 37075                           
 37076                           ;inputs_MC50.c: 119:                     RFstate = 2;
 37077  004C3C  0E02               	movlw	2
 37078  004C3E  6F84               	movwf	_RFstate& (0+255),b
 37079  004C40  0012               	return	
 37080  004C42                     i2l14679:
 37081                           
 37082                           ; BSR set to: 0
 37083                           ;inputs_MC50.c: 122:                 RFcount++;
 37084  004C42  4B6C               	infsnz	_RFcount& (0+255),f,b
 37085  004C44  2B6D               	incf	(_RFcount+1)& (0+255),f,b
 37086  004C46  0012               	return	
 37087  004C48                     i2l14681:
 37088                           
 37089                           ; BSR set to: 0
 37090                           ;inputs_MC50.c: 127:             if (RFBit == 0) {
 37091  004C48  5180               	movf	_RFBit& (0+255),w,b	;volatile
 37092  004C4A  A4D8               	btfss	status,2,c
 37093  004C4C  D052               	goto	i2l14717
 37094                           
 37095                           ; BSR set to: 0
 37096                           ;inputs_MC50.c: 130:                 RFstate = 5;
 37097  004C4E  0E05               	movlw	5
 37098  004C50  6F84               	movwf	_RFstate& (0+255),b
 37099                           
 37100                           ; BSR set to: 0
 37101                           ;inputs_MC50.c: 131:                 BufferRF[Bptr] >>= 1;
 37102  004C52  0EC8               	movlw	low _BufferRF
 37103  004C54  2583               	addwf	_Bptr& (0+255),w,b
 37104  004C56  6ED9               	movwf	fsr2l,c
 37105  004C58  6ADA               	clrf	fsr2h,c
 37106  004C5A  0E02               	movlw	high _BufferRF
 37107  004C5C  22DA               	addwfc	fsr2h,f,c
 37108  004C5E  90D8               	bcf	status,0,c
 37109  004C60  32DF               	rrcf	indf2,f,c
 37110                           
 37111                           ; BSR set to: 0
 37112                           ;inputs_MC50.c: 132:                 if (RFcount >= 0) {
 37113  004C62  BF6D               	btfsc	(_RFcount+1)& (0+255),7,b
 37114  004C64  D008               	goto	i2l14691
 37115                           
 37116                           ; BSR set to: 0
 37117                           ;inputs_MC50.c: 133:                     BufferRF[Bptr] += 0x80;
 37118  004C66  0EC8               	movlw	low _BufferRF
 37119  004C68  2583               	addwf	_Bptr& (0+255),w,b
 37120  004C6A  6ED9               	movwf	fsr2l,c
 37121  004C6C  6ADA               	clrf	fsr2h,c
 37122  004C6E  0E02               	movlw	high _BufferRF
 37123  004C70  22DA               	addwfc	fsr2h,f,c
 37124  004C72  0E80               	movlw	128
 37125  004C74  26DF               	addwf	indf2,f,c
 37126  004C76                     i2l14691:
 37127                           
 37128                           ; BSR set to: 0
 37129                           ;inputs_MC50.c: 136:                 RFcount = 0;
 37130  004C76  0E00               	movlw	0
 37131  004C78  6F6D               	movwf	(_RFcount+1)& (0+255),b
 37132  004C7A  0E00               	movlw	0
 37133  004C7C  6F6C               	movwf	_RFcount& (0+255),b
 37134                           
 37135                           ; BSR set to: 0
 37136                           ;inputs_MC50.c: 138:                 if ((++BitCount & 7) == 0)
 37137  004C7E  2B82               	incf	_BitCount& (0+255),f,b
 37138  004C80  C082  F001         	movff	_BitCount,??_rxi
 37139  004C84  0E07               	movlw	7
 37140  004C86  1601               	andwf	??_rxi^0,f,c
 37141  004C88  A4D8               	btfss	status,2,c
 37142  004C8A  D009               	goto	i2l14699
 37143                           
 37144                           ; BSR set to: 0
 37145                           ;inputs_MC50.c: 139:                 {;inputs_MC50.c: 140:                     Bptr++;
 37146  004C8C  2B83               	incf	_Bptr& (0+255),f,b
 37147                           
 37148                           ; BSR set to: 0
 37149                           ;inputs_MC50.c: 141:                     BufferRF[Bptr]=0;
 37150  004C8E  0EC8               	movlw	low _BufferRF
 37151  004C90  2583               	addwf	_Bptr& (0+255),w,b
 37152  004C92  6ED9               	movwf	fsr2l,c
 37153  004C94  6ADA               	clrf	fsr2h,c
 37154  004C96  0E02               	movlw	high _BufferRF
 37155  004C98  22DA               	addwfc	fsr2h,f,c
 37156  004C9A  0E00               	movlw	0
 37157  004C9C  6EDF               	movwf	indf2,c
 37158  004C9E                     i2l14699:
 37159                           
 37160                           ; BSR set to: 0
 37161                           ;inputs_MC50.c: 143:                 if (BitCount == 13) {
 37162  004C9E  0E0D               	movlw	13
 37163  004CA0  1982               	xorwf	_BitCount& (0+255),w,b
 37164  004CA2  A4D8               	btfss	status,2,c
 37165  004CA4  0012               	return	
 37166                           
 37167                           ; BSR set to: 0
 37168                           ;inputs_MC50.c: 144:                     RFstate = 0;
 37169  004CA6  0E00               	movlw	0
 37170  004CA8  6F84               	movwf	_RFstate& (0+255),b
 37171                           
 37172                           ; BSR set to: 0
 37173                           ;inputs_MC50.c: 145:                     if(RFFull_12BIT==1)
 37174  004CAA  0581               	decf	_RFFull_12BIT& (0+255),w,b	;volatile
 37175  004CAC  A4D8               	btfss	status,2,c
 37176  004CAE  D01A               	goto	i2l14711
 37177                           
 37178                           ; BSR set to: 0
 37179                           ;inputs_MC50.c: 146:                     {;inputs_MC50.c: 147:                         i
      +                          f(BufferRF_12BIT[0]==BufferRF[0] && BufferRF_12BIT[1]==BufferRF[1])
 37180  004CB0  0102               	movlb	2	; () banked
 37181  004CB2  51C8               	movf	_BufferRF& (0+255),w,b
 37182  004CB4  0101               	movlb	1	; () banked
 37183  004CB6  194A               	xorwf	_BufferRF_12BIT& (0+255),w,b
 37184  004CB8  A4D8               	btfss	status,2,c
 37185  004CBA  D00F               	goto	i2l1620
 37186                           
 37187                           ; BSR set to: 1
 37188  004CBC  0102               	movlb	2	; () banked
 37189  004CBE  51C9               	movf	(_BufferRF+1)& (0+255),w,b
 37190  004CC0  0101               	movlb	1	; () banked
 37191  004CC2  194B               	xorwf	(_BufferRF_12BIT+1)& (0+255),w,b
 37192  004CC4  A4D8               	btfss	status,2,c
 37193  004CC6  D009               	goto	i2l1620
 37194                           
 37195                           ; BSR set to: 1
 37196                           ;inputs_MC50.c: 148:                         {;inputs_MC50.c: 149:                      
      +                                 RFFull = 1;
 37197  004CC8  0E01               	movlw	1
 37198  004CCA  0100               	movlb	0	; () banked
 37199  004CCC  6FD7               	movwf	_RFFull& (0+255),b	;volatile
 37200                           
 37201                           ;inputs_MC50.c: 150:                             BufferRF[2]=0;
 37202  004CCE  0E00               	movlw	0
 37203  004CD0  0102               	movlb	2	; () banked
 37204  004CD2  6FCA               	movwf	(_BufferRF+2)& (0+255),b
 37205                           
 37206                           ;inputs_MC50.c: 151:                             BufferRF[3]=0;
 37207  004CD4  0E00               	movlw	0
 37208  004CD6  6FCB               	movwf	(_BufferRF+3)& (0+255),b
 37209                           
 37210                           ;inputs_MC50.c: 152:                         }
 37211  004CD8  0012               	return	
 37212  004CDA                     i2l1620:
 37213                           
 37214                           ; BSR set to: 1
 37215                           ;inputs_MC50.c: 154:                         {;inputs_MC50.c: 155:                      
      +                                 BufferRF_12BIT[0]=BufferRF[0];
 37216  004CDA  C2C8  F14A         	movff	_BufferRF,_BufferRF_12BIT
 37217                           
 37218                           ;inputs_MC50.c: 156:                             BufferRF_12BIT[1]=BufferRF[1];
 37219  004CDE  C2C9  F14B         	movff	_BufferRF+1,_BufferRF_12BIT+1
 37220  004CE2  0012               	return	
 37221  004CE4                     i2l14711:
 37222                           
 37223                           ; BSR set to: 0
 37224                           ;inputs_MC50.c: 161:                     {;inputs_MC50.c: 162:                         R
      +                          FFull_12BIT=1;
 37225  004CE4  0E01               	movlw	1
 37226  004CE6  6F81               	movwf	_RFFull_12BIT& (0+255),b	;volatile
 37227                           
 37228                           ; BSR set to: 0
 37229                           ;inputs_MC50.c: 163:                         BufferRF_12BIT[0]=BufferRF[0];
 37230  004CE8  C2C8  F14A         	movff	_BufferRF,_BufferRF_12BIT
 37231                           
 37232                           ; BSR set to: 0
 37233                           ;inputs_MC50.c: 164:                         BufferRF_12BIT[1]=BufferRF[1];
 37234  004CEC  C2C9  F14B         	movff	_BufferRF+1,_BufferRF_12BIT+1
 37235  004CF0  0012               	return	
 37236  004CF2                     i2l14717:
 37237                           
 37238                           ; BSR set to: 0
 37239                           ;inputs_MC50.c: 168:                 RFcount++;
 37240  004CF2  4B6C               	infsnz	_RFcount& (0+255),f,b
 37241  004CF4  2B6D               	incf	(_RFcount+1)& (0+255),f,b
 37242                           
 37243                           ; BSR set to: 0
 37244                           ;inputs_MC50.c: 169:                 if (RFcount >= 10)
 37245  004CF6  BF6D               	btfsc	(_RFcount+1)& (0+255),7,b
 37246  004CF8  0012               	return	
 37247  004CFA  516D               	movf	(_RFcount+1)& (0+255),w,b
 37248  004CFC  E104               	bnz	i2u1497_40
 37249  004CFE  0E0A               	movlw	10
 37250  004D00  5D6C               	subwf	_RFcount& (0+255),w,b
 37251  004D02  A0D8               	btfss	status,0,c
 37252  004D04  0012               	return	
 37253  004D06                     i2u1497_40:
 37254  004D06  D72D               	goto	i2u1479_40
 37255  004D08                     i2l14723:
 37256                           
 37257                           ; BSR set to: 0
 37258                           ;inputs_MC50.c: 177:             if (RFBit) {
 37259  004D08  5180               	movf	_RFBit& (0+255),w,b	;volatile
 37260  004D0A  B4D8               	btfsc	status,2,c
 37261  004D0C  D003               	goto	i2l14727
 37262                           
 37263                           ; BSR set to: 0
 37264                           ;inputs_MC50.c: 181:                 RFstate = 4;
 37265  004D0E  0E04               	movlw	4
 37266  004D10  6F84               	movwf	_RFstate& (0+255),b
 37267                           
 37268                           ;inputs_MC50.c: 183:             } else {
 37269  004D12  0012               	return	
 37270  004D14                     i2l14727:
 37271                           
 37272                           ; BSR set to: 0
 37273                           ;inputs_MC50.c: 184:                 RFcount--;
 37274  004D14  076C               	decf	_RFcount& (0+255),f,b
 37275  004D16  A0D8               	btfss	status,0,c
 37276  004D18  076D               	decf	(_RFcount+1)& (0+255),f,b
 37277                           
 37278                           ; BSR set to: 0
 37279                           ;inputs_MC50.c: 185:                 if (RFcount < -10)
 37280  004D1A  AF6D               	btfss	(_RFcount+1)& (0+255),7,b
 37281  004D1C  0012               	return	
 37282  004D1E  0EF6               	movlw	246
 37283  004D20  5D6C               	subwf	_RFcount& (0+255),w,b
 37284  004D22  0EFF               	movlw	255
 37285  004D24  596D               	subwfb	(_RFcount+1)& (0+255),w,b
 37286  004D26  B0D8               	btfsc	status,0,c
 37287  004D28  0012               	return	
 37288  004D2A  D753               	goto	i2u1484_40
 37289  004D2C                     i2l14733:
 37290                           
 37291                           ; BSR set to: 0
 37292                           ;inputs_MC50.c: 197:             RFstate = 1;
 37293  004D2C  0E01               	movlw	1
 37294  004D2E  6F84               	movwf	_RFstate& (0+255),b
 37295                           
 37296                           ;inputs_MC50.c: 198:             RFcount = 0;
 37297  004D30  0E00               	movlw	0
 37298  004D32  6F6D               	movwf	(_RFcount+1)& (0+255),b
 37299  004D34  0E00               	movlw	0
 37300  004D36  6F6C               	movwf	_RFcount& (0+255),b
 37301                           
 37302                           ;inputs_MC50.c: 199:             Bptr = 0;
 37303  004D38  0E00               	movlw	0
 37304  004D3A  6F83               	movwf	_Bptr& (0+255),b
 37305                           
 37306                           ;inputs_MC50.c: 200:             BitCount = 0;
 37307  004D3C  0E00               	movlw	0
 37308  004D3E  6F82               	movwf	_BitCount& (0+255),b
 37309                           
 37310                           ;inputs_MC50.c: 201:             break;
 37311  004D40  0012               	return	
 37312  004D42                     i2l14737:
 37313                           
 37314                           ; BSR set to: 0
 37315  004D42  5184               	movf	_RFstate& (0+255),w,b
 37316  004D44  6E01               	movwf	??_rxi^0,c
 37317  004D46  6A02               	clrf	(??_rxi+1)^0,c
 37318                           
 37319                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37320                           ; Switch size 1, requested type "simple"
 37321                           ; Number of cases is 1, Range of values is 0 to 0
 37322                           ; switch strategies available:
 37323                           ; Name         Instructions Cycles
 37324                           ; simple_byte            4     3 (average)
 37325                           ;	Chosen strategy is simple_byte
 37326  004D48  5002               	movf	(??_rxi+1)^0,w,c
 37327  004D4A  0A00               	xorlw	0	; case 0
 37328  004D4C  A4D8               	btfss	status,2,c
 37329  004D4E  D7EE               	goto	i2l14733
 37330                           
 37331                           ; BSR set to: 0
 37332                           ; Switch size 1, requested type "simple"
 37333                           ; Number of cases is 6, Range of values is 0 to 5
 37334                           ; switch strategies available:
 37335                           ; Name         Instructions Cycles
 37336                           ; simple_byte           19    10 (average)
 37337                           ;	Chosen strategy is simple_byte
 37338  004D50  5001               	movf	??_rxi^0,w,c
 37339  004D52  0A00               	xorlw	0	; case 0
 37340  004D54  B4D8               	btfsc	status,2,c
 37341  004D56  D7EA               	goto	i2l14733
 37342  004D58  0A01               	xorlw	1	; case 1
 37343  004D5A  B4D8               	btfsc	status,2,c
 37344  004D5C  D741               	goto	i2l14663
 37345  004D5E  0A03               	xorlw	3	; case 2
 37346  004D60  B4D8               	btfsc	status,2,c
 37347  004D62  D6EE               	goto	i2l14627
 37348  004D64  0A01               	xorlw	1	; case 3
 37349  004D66  B4D8               	btfsc	status,2,c
 37350  004D68  D6FF               	goto	i2l14637
 37351  004D6A  0A07               	xorlw	7	; case 4
 37352  004D6C  B4D8               	btfsc	status,2,c
 37353  004D6E  D76C               	goto	i2l14681
 37354  004D70  0A01               	xorlw	1	; case 5
 37355  004D72  B4D8               	btfsc	status,2,c
 37356  004D74  D7C9               	goto	i2l14723
 37357  004D76  D7DA               	goto	i2l14733
 37358  004D78                     __end_of_rxi:
 37359                           	callstack 0
 37360                           
 37361 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 37362 ;; Defined at:
 37363 ;;		line 147 in file "mcc_generated_files/tmr0.c"
 37364 ;; Parameters:    Size  Location     Type
 37365 ;;		None
 37366 ;; Auto vars:     Size  Location     Type
 37367 ;;		None
 37368 ;; Return value:  Size  Location     Type
 37369 ;;                  1    wreg      void 
 37370 ;; Registers used:
 37371 ;;		None
 37372 ;; Tracked objects:
 37373 ;;		On entry : 3F/2
 37374 ;;		On exit  : 3F/2
 37375 ;;		Unchanged: 3F/0
 37376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37381 ;;Total ram usage:        0 bytes
 37382 ;; Hardware stack levels used: 1
 37383 ;; This function calls:
 37384 ;;		Nothing
 37385 ;; This function is called by:
 37386 ;;		_TMR0_Initialize
 37387 ;;		_TMR0_ISR
 37388 ;; This function uses a non-reentrant model
 37389 ;;
 37390                           
 37391                           	psect	text204
 37392  009C6A                     __ptext204:
 37393                           	callstack 0
 37394  009C6A                     _TMR0_DefaultInterruptHandler:
 37395                           	callstack 15
 37396                           
 37397                           ; BSR set to: 2
 37398                           
 37399                           ;incstack = 0
 37400  009C6A  0012               	return		;funcret
 37401  009C6C                     __end_of_TMR0_DefaultInterruptHandler:
 37402                           	callstack 0
 37403                           
 37404 ;; *************** function _EUSART1_Transmit_ISR *****************
 37405 ;; Defined at:
 37406 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 37407 ;; Parameters:    Size  Location     Type
 37408 ;;		None
 37409 ;; Auto vars:     Size  Location     Type
 37410 ;;		None
 37411 ;; Return value:  Size  Location     Type
 37412 ;;                  1    wreg      void 
 37413 ;; Registers used:
 37414 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37415 ;; Tracked objects:
 37416 ;;		On entry : 3F/2
 37417 ;;		On exit  : 30/0
 37418 ;;		Unchanged: 0/0
 37419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37424 ;;Total ram usage:        0 bytes
 37425 ;; Hardware stack levels used: 1
 37426 ;; This function calls:
 37427 ;;		Nothing
 37428 ;; This function is called by:
 37429 ;;		_EUSART1_Initialize
 37430 ;;		_INTERRUPT_InterruptManager
 37431 ;; This function uses a non-reentrant model
 37432 ;;
 37433                           
 37434                           	psect	text205
 37435  009460                     __ptext205:
 37436                           	callstack 0
 37437  009460                     _EUSART1_Transmit_ISR:
 37438                           	callstack 16
 37439                           
 37440                           ; BSR set to: 2
 37441                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 37442                           
 37443                           ; BSR set to: 2
 37444                           ;incstack = 0
 37445  009460  0E08               	movlw	8
 37446  009462  0101               	movlb	1	; () banked
 37447  009464  61FD               	cpfslt	_eusart1TxBufferRemaining& (0+255),b
 37448  009466  D012               	goto	i2l106
 37449                           
 37450                           ; BSR set to: 1
 37451                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 37452  009468  0E84               	movlw	low _eusart1TxBuffer
 37453  00946A  0100               	movlb	0	; () banked
 37454  00946C  258D               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 37455  00946E  6ED9               	movwf	fsr2l,c
 37456  009470  6ADA               	clrf	fsr2h,c
 37457  009472  0E02               	movlw	high _eusart1TxBuffer
 37458  009474  22DA               	addwfc	fsr2h,f,c
 37459  009476  50DF               	movf	indf2,w,c
 37460  009478  6E9A               	movwf	154,c	;volatile
 37461                           
 37462                           ; BSR set to: 0
 37463  00947A  2B8D               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 37464                           
 37465                           ; BSR set to: 0
 37466                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 37467  00947C  0E07               	movlw	7
 37468  00947E  658D               	cpfsgt	_eusart1TxTail& (0+255),b
 37469  009480  D002               	goto	i2l16635
 37470                           
 37471                           ; BSR set to: 0
 37472                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 37473  009482  0E00               	movlw	0
 37474  009484  6F8D               	movwf	_eusart1TxTail& (0+255),b	;volatile
 37475  009486                     i2l16635:
 37476                           
 37477                           ; BSR set to: 0
 37478                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 37479  009486  0101               	movlb	1	; () banked
 37480  009488  2BFD               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 37481                           
 37482                           ;mcc_generated_files/eusart1.c: 209:     }
 37483  00948A  0012               	return	
 37484  00948C                     i2l106:
 37485                           
 37486                           ; BSR set to: 1
 37487                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 37488  00948C  010E               	movlb	14	; () banked
 37489  00948E  99C5               	bcf	197,4,b	;volatile
 37490  009490  0012               	return		;funcret
 37491  009492                     __end_of_EUSART1_Transmit_ISR:
 37492                           	callstack 0
 37493                           
 37494 ;; *************** function _EUSART1_Receive_ISR *****************
 37495 ;; Defined at:
 37496 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 37497 ;; Parameters:    Size  Location     Type
 37498 ;;		None
 37499 ;; Auto vars:     Size  Location     Type
 37500 ;;		None
 37501 ;; Return value:  Size  Location     Type
 37502 ;;                  1    wreg      void 
 37503 ;; Registers used:
 37504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 37505 ;; Tracked objects:
 37506 ;;		On entry : 3F/2
 37507 ;;		On exit  : 0/0
 37508 ;;		Unchanged: 0/0
 37509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37514 ;;Total ram usage:        0 bytes
 37515 ;; Hardware stack levels used: 1
 37516 ;; Hardware stack levels required when called: 2
 37517 ;; This function calls:
 37518 ;;		Absolute function
 37519 ;;		_EUSART1_DefaultErrorHandler
 37520 ;;		_EUSART1_DefaultFramingErrorHandler
 37521 ;;		_EUSART1_DefaultOverrunErrorHandler
 37522 ;;		_EUSART1_RxDataHandler
 37523 ;; This function is called by:
 37524 ;;		_EUSART1_Initialize
 37525 ;;		_INTERRUPT_InterruptManager
 37526 ;; This function uses a non-reentrant model
 37527 ;;
 37528                           
 37529                           	psect	text206
 37530  007C94                     __ptext206:
 37531                           	callstack 0
 37532  007C94                     _EUSART1_Receive_ISR:
 37533                           	callstack 14
 37534                           
 37535                           ; BSR set to: 2
 37536                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 37537                           
 37538                           ;incstack = 0
 37539  007C94  0E74               	movlw	low _eusart1RxStatusBuffer
 37540  007C96  0100               	movlb	0	; () banked
 37541  007C98  258C               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 37542  007C9A  6ED9               	movwf	fsr2l,c
 37543  007C9C  6ADA               	clrf	fsr2h,c
 37544  007C9E  0E02               	movlw	high _eusart1RxStatusBuffer
 37545  007CA0  22DA               	addwfc	fsr2h,f,c
 37546  007CA2  0E00               	movlw	0
 37547  007CA4  6EDF               	movwf	indf2,c
 37548                           
 37549                           ; BSR set to: 0
 37550                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 37551  007CA6  A49D               	btfss	157,2,c	;volatile
 37552  007CA8  D013               	goto	i2u1904_49
 37553                           
 37554                           ; BSR set to: 0
 37555                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 37556  007CAA  0E74               	movlw	low _eusart1RxStatusBuffer
 37557  007CAC  258C               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 37558  007CAE  6ED9               	movwf	fsr2l,c
 37559  007CB0  6ADA               	clrf	fsr2h,c
 37560  007CB2  0E02               	movlw	high _eusart1RxStatusBuffer
 37561  007CB4  22DA               	addwfc	fsr2h,f,c
 37562  007CB6  0102               	movlb	2	; () banked
 37563  007CB8  82DF               	bsf	indf2,1,c
 37564                           
 37565                           ; BSR set to: 2
 37566                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 37567  007CBA  D801               	call	i2u1904_48
 37568  007CBC  D009               	goto	i2u1904_49
 37569  007CBE                     i2u1904_48:
 37570  007CBE  0005               	push	
 37571  007CC0  6EFA               	movwf	pclath,c
 37572  007CC2  51E9               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 37573  007CC4  6EFD               	movwf	tosl,c
 37574  007CC6  51EA               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 37575  007CC8  6EFE               	movwf	tosh,c
 37576  007CCA  6AFF               	clrf	tosu,c
 37577  007CCC  50FA               	movf	pclath,w,c
 37578  007CCE  0012               	return		;indir
 37579  007CD0                     i2u1904_49:
 37580                           
 37581                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 37582  007CD0  A29D               	btfss	157,1,c	;volatile
 37583  007CD2  D014               	goto	i2u1906_49
 37584                           
 37585                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 37586  007CD4  0E74               	movlw	low _eusart1RxStatusBuffer
 37587  007CD6  0100               	movlb	0	; () banked
 37588  007CD8  258C               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 37589  007CDA  6ED9               	movwf	fsr2l,c
 37590  007CDC  6ADA               	clrf	fsr2h,c
 37591  007CDE  0E02               	movlw	high _eusart1RxStatusBuffer
 37592  007CE0  22DA               	addwfc	fsr2h,f,c
 37593  007CE2  0102               	movlb	2	; () banked
 37594  007CE4  84DF               	bsf	indf2,2,c
 37595                           
 37596                           ; BSR set to: 2
 37597                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 37598  007CE6  D801               	call	i2u1906_48
 37599  007CE8  D009               	goto	i2u1906_49
 37600  007CEA                     i2u1906_48:
 37601  007CEA  0005               	push	
 37602  007CEC  6EFA               	movwf	pclath,c
 37603  007CEE  51E7               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 37604  007CF0  6EFD               	movwf	tosl,c
 37605  007CF2  51E8               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 37606  007CF4  6EFE               	movwf	tosh,c
 37607  007CF6  6AFF               	clrf	tosu,c
 37608  007CF8  50FA               	movf	pclath,w,c
 37609  007CFA  0012               	return		;indir
 37610  007CFC                     i2u1906_49:
 37611                           
 37612                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 37613  007CFC  0E74               	movlw	low _eusart1RxStatusBuffer
 37614  007CFE  0100               	movlb	0	; () banked
 37615  007D00  258C               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 37616  007D02  6ED9               	movwf	fsr2l,c
 37617  007D04  6ADA               	clrf	fsr2h,c
 37618  007D06  0E02               	movlw	high _eusart1RxStatusBuffer
 37619  007D08  22DA               	addwfc	fsr2h,f,c
 37620  007D0A  50DF               	movf	indf2,w,c
 37621  007D0C  B4D8               	btfsc	status,2,c
 37622  007D0E  D00C               	goto	i2l16655
 37623                           
 37624                           ; BSR set to: 0
 37625                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 37626  007D10  D801               	call	i2u1908_48
 37627  007D12  0012               	return	
 37628  007D14                     i2u1908_48:
 37629  007D14  0005               	push	
 37630  007D16  6EFA               	movwf	pclath,c
 37631  007D18  0102               	movlb	2	; () banked
 37632  007D1A  51E5               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 37633  007D1C  6EFD               	movwf	tosl,c
 37634  007D1E  51E6               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 37635  007D20  6EFE               	movwf	tosh,c
 37636  007D22  6AFF               	clrf	tosu,c
 37637  007D24  50FA               	movf	pclath,w,c
 37638  007D26  0012               	return		;indir
 37639  007D28                     i2l16655:
 37640                           
 37641                           ; BSR set to: 0
 37642                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 37643  007D28  EC60  F04C         	call	_EUSART1_RxDataHandler	;wreg free
 37644  007D2C  0012               	return		;funcret
 37645  007D2E                     __end_of_EUSART1_Receive_ISR:
 37646                           	callstack 0
 37647                           
 37648 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 37649 ;; Defined at:
 37650 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 37651 ;; Parameters:    Size  Location     Type
 37652 ;;		None
 37653 ;; Auto vars:     Size  Location     Type
 37654 ;;		None
 37655 ;; Return value:  Size  Location     Type
 37656 ;;                  1    wreg      void 
 37657 ;; Registers used:
 37658 ;;		None
 37659 ;; Tracked objects:
 37660 ;;		On entry : 3F/2
 37661 ;;		On exit  : 3F/2
 37662 ;;		Unchanged: 3F/0
 37663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37668 ;;Total ram usage:        0 bytes
 37669 ;; Hardware stack levels used: 1
 37670 ;; This function calls:
 37671 ;;		Nothing
 37672 ;; This function is called by:
 37673 ;;		_EUSART1_Initialize
 37674 ;;		_EUSART1_Receive_ISR
 37675 ;; This function uses a non-reentrant model
 37676 ;;
 37677                           
 37678                           	psect	text207
 37679  009C2C                     __ptext207:
 37680                           	callstack 0
 37681  009C2C                     _EUSART1_DefaultOverrunErrorHandler:
 37682                           	callstack 15
 37683                           
 37684                           ; BSR set to: 2
 37685                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 37686                           
 37687                           ;incstack = 0
 37688  009C2C  989D               	bcf	157,4,c	;volatile
 37689                           
 37690                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 37691  009C2E  889D               	bsf	157,4,c	;volatile
 37692                           
 37693                           ; BSR set to: 2
 37694  009C30  0012               	return		;funcret
 37695  009C32                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 37696                           	callstack 0
 37697                           
 37698 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 37699 ;; Defined at:
 37700 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 37701 ;; Parameters:    Size  Location     Type
 37702 ;;		None
 37703 ;; Auto vars:     Size  Location     Type
 37704 ;;		None
 37705 ;; Return value:  Size  Location     Type
 37706 ;;                  1    wreg      void 
 37707 ;; Registers used:
 37708 ;;		None
 37709 ;; Tracked objects:
 37710 ;;		On entry : 3F/2
 37711 ;;		On exit  : 3F/2
 37712 ;;		Unchanged: 3F/0
 37713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37718 ;;Total ram usage:        0 bytes
 37719 ;; Hardware stack levels used: 1
 37720 ;; This function calls:
 37721 ;;		Nothing
 37722 ;; This function is called by:
 37723 ;;		_EUSART1_Initialize
 37724 ;;		_EUSART1_Receive_ISR
 37725 ;; This function uses a non-reentrant model
 37726 ;;
 37727                           
 37728                           	psect	text208
 37729  009C6C                     __ptext208:
 37730                           	callstack 0
 37731  009C6C                     _EUSART1_DefaultFramingErrorHandler:
 37732                           	callstack 15
 37733                           
 37734                           ; BSR set to: 2
 37735                           
 37736                           ; BSR set to: 2
 37737                           ;incstack = 0
 37738  009C6C  0012               	return		;funcret
 37739  009C6E                     __end_of_EUSART1_DefaultFramingErrorHandler:
 37740                           	callstack 0
 37741                           
 37742 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 37743 ;; Defined at:
 37744 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 37745 ;; Parameters:    Size  Location     Type
 37746 ;;		None
 37747 ;; Auto vars:     Size  Location     Type
 37748 ;;		None
 37749 ;; Return value:  Size  Location     Type
 37750 ;;                  1    wreg      void 
 37751 ;; Registers used:
 37752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37753 ;; Tracked objects:
 37754 ;;		On entry : 3F/2
 37755 ;;		On exit  : 3F/0
 37756 ;;		Unchanged: 0/0
 37757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37762 ;;Total ram usage:        0 bytes
 37763 ;; Hardware stack levels used: 1
 37764 ;; Hardware stack levels required when called: 1
 37765 ;; This function calls:
 37766 ;;		_EUSART1_RxDataHandler
 37767 ;; This function is called by:
 37768 ;;		_EUSART1_Initialize
 37769 ;;		_EUSART1_Receive_ISR
 37770 ;; This function uses a non-reentrant model
 37771 ;;
 37772                           
 37773                           	psect	text209
 37774  009C32                     __ptext209:
 37775                           	callstack 0
 37776  009C32                     _EUSART1_DefaultErrorHandler:
 37777                           	callstack 14
 37778                           
 37779                           ; BSR set to: 2
 37780                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 37781                           
 37782                           ; BSR set to: 2
 37783                           ;incstack = 0
 37784  009C32  EC60  F04C         	call	_EUSART1_RxDataHandler	;wreg free
 37785                           
 37786                           ; BSR set to: 0
 37787  009C36  0012               	return		;funcret
 37788  009C38                     __end_of_EUSART1_DefaultErrorHandler:
 37789                           	callstack 0
 37790                           
 37791 ;; *************** function _EUSART1_RxDataHandler *****************
 37792 ;; Defined at:
 37793 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 37794 ;; Parameters:    Size  Location     Type
 37795 ;;		None
 37796 ;; Auto vars:     Size  Location     Type
 37797 ;;		None
 37798 ;; Return value:  Size  Location     Type
 37799 ;;                  1    wreg      void 
 37800 ;; Registers used:
 37801 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37802 ;; Tracked objects:
 37803 ;;		On entry : 3D/0
 37804 ;;		On exit  : 3F/0
 37805 ;;		Unchanged: 0/0
 37806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37811 ;;Total ram usage:        0 bytes
 37812 ;; Hardware stack levels used: 1
 37813 ;; This function calls:
 37814 ;;		Nothing
 37815 ;; This function is called by:
 37816 ;;		_EUSART1_Receive_ISR
 37817 ;;		_EUSART1_DefaultErrorHandler
 37818 ;; This function uses a non-reentrant model
 37819 ;;
 37820                           
 37821                           	psect	text210
 37822  0098C0                     __ptext210:
 37823                           	callstack 0
 37824  0098C0                     _EUSART1_RxDataHandler:
 37825                           	callstack 15
 37826                           
 37827                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 37828                           
 37829                           ; BSR set to: 0
 37830                           ;incstack = 0
 37831  0098C0  0E7C               	movlw	low _eusart1RxBuffer
 37832  0098C2  0100               	movlb	0	; () banked
 37833  0098C4  258C               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 37834  0098C6  6ED9               	movwf	fsr2l,c
 37835  0098C8  6ADA               	clrf	fsr2h,c
 37836  0098CA  0E02               	movlw	high _eusart1RxBuffer
 37837  0098CC  22DA               	addwfc	fsr2h,f,c
 37838  0098CE  CF99 FFDF          	movff	3993,indf2	;volatile
 37839                           
 37840                           ; BSR set to: 0
 37841  0098D2  2B8C               	incf	_eusart1RxHead& (0+255),f,b	;volatile
 37842                           
 37843                           ; BSR set to: 0
 37844                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 37845  0098D4  0E07               	movlw	7
 37846  0098D6  658C               	cpfsgt	_eusart1RxHead& (0+255),b
 37847  0098D8  D002               	goto	i2l13005
 37848                           
 37849                           ; BSR set to: 0
 37850                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 37851  0098DA  0E00               	movlw	0
 37852  0098DC  6F8C               	movwf	_eusart1RxHead& (0+255),b	;volatile
 37853  0098DE                     i2l13005:
 37854                           
 37855                           ; BSR set to: 0
 37856                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 37857  0098DE  2B8A               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 37858                           
 37859                           ; BSR set to: 0
 37860  0098E0  0012               	return		;funcret
 37861  0098E2                     __end_of_EUSART1_RxDataHandler:
 37862                           	callstack 0
 37863                           
 37864                           	psect	text211
 37865  000000                     __ptext211:
 37866                           	callstack 0
 37867                           
 37868                           	psect	rparam
 37869  0000                     
 37870                           	psect	temp
 37871  000050                     btemp:
 37872                           	callstack 0
 37873  000050                     	ds	1
 37874  0000                     int$flags	set	btemp
 37875  0000                     wtemp8	set	btemp+1
 37876  0000                     ttemp5	set	btemp+1
 37877  0000                     ttemp6	set	btemp+4
 37878  0000                     ttemp7	set	btemp+8
 37879                           
 37880                           	psect	idloc
 37881                           
 37882                           ;Config register IDLOC0 @ 0x200000
 37883                           ;	unspecified, using default values
 37884  200000                     	org	2097152
 37885  200000  0FFF               	dw	4095
 37886                           
 37887                           ;Config register IDLOC1 @ 0x200002
 37888                           ;	unspecified, using default values
 37889  200002                     	org	2097154
 37890  200002  0FFF               	dw	4095
 37891                           
 37892                           ;Config register IDLOC2 @ 0x200004
 37893                           ;	unspecified, using default values
 37894  200004                     	org	2097156
 37895  200004  0FFF               	dw	4095
 37896                           
 37897                           ;Config register IDLOC3 @ 0x200006
 37898                           ;	unspecified, using default values
 37899  200006                     	org	2097158
 37900  200006  0FFF               	dw	4095
 37901                           
 37902                           ;Config register IDLOC4 @ 0x200008
 37903                           ;	unspecified, using default values
 37904  200008                     	org	2097160
 37905  200008  0FFF               	dw	4095
 37906                           
 37907                           ;Config register IDLOC5 @ 0x20000A
 37908                           ;	unspecified, using default values
 37909  20000A                     	org	2097162
 37910  20000A  0FFF               	dw	4095
 37911                           
 37912                           ;Config register IDLOC6 @ 0x20000C
 37913                           ;	unspecified, using default values
 37914  20000C                     	org	2097164
 37915  20000C  0FFF               	dw	4095
 37916                           
 37917                           ;Config register IDLOC7 @ 0x20000E
 37918                           ;	unspecified, using default values
 37919  20000E                     	org	2097166
 37920  20000E  0FFF               	dw	4095
 37921                           
 37922                           	psect	config
 37923                           
 37924                           ;Config register CONFIG1L @ 0x300000
 37925                           ;	External Oscillator mode Selection bits
 37926                           ;	FEXTOSC = OFF, Oscillator not enabled
 37927                           ;	Power-up default value for COSC bits
 37928                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 37929  300000                     	org	3145728
 37930  300000  8C                 	db	140
 37931                           
 37932                           ;Config register CONFIG1H @ 0x300001
 37933                           ;	Clock Out Enable bit
 37934                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 37935                           ;	Clock Switch Enable bit
 37936                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 37937                           ;	Fail-Safe Clock Monitor Enable bit
 37938                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 37939  300001                     	org	3145729
 37940  300001  FF                 	db	255
 37941                           
 37942                           ;Config register CONFIG2L @ 0x300002
 37943                           ;	Master Clear Enable bit
 37944                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 37945                           ;	Power-up Timer Enable bit
 37946                           ;	PWRTE = ON, Power up timer enabled
 37947                           ;	Low-power BOR enable bit
 37948                           ;	LPBOREN = OFF, ULPBOR disabled
 37949                           ;	Brown-out Reset Enable bits
 37950                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 37951  300002                     	org	3145730
 37952  300002  FD                 	db	253
 37953                           
 37954                           ;Config register CONFIG2H @ 0x300003
 37955                           ;	Brown Out Reset Voltage selection bits
 37956                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 37957                           ;	ZCD Disable bit
 37958                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 37959                           ;	PPSLOCK bit One-Way Set Enable bit
 37960                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 37961                           ;	Stack Full/Underflow Reset Enable bit
 37962                           ;	STVREN = ON, Stack full/underflow will cause Reset
 37963                           ;	Debugger Enable bit
 37964                           ;	DEBUG = OFF, Background debugger disabled
 37965                           ;	Extended Instruction Set Enable bit
 37966                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 37967  300003                     	org	3145731
 37968  300003  FF                 	db	255
 37969                           
 37970                           ;Config register CONFIG3L @ 0x300004
 37971                           ;	WDT Period Select bits
 37972                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 37973                           ;	WDT operating mode
 37974                           ;	WDTE = SWDTEN, WDT enabled/disabled by SWDTEN bit
 37975  300004                     	org	3145732
 37976  300004  BF                 	db	191
 37977                           
 37978                           ;Config register CONFIG3H @ 0x300005
 37979                           ;	WDT Window Select bits
 37980                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 37981                           ;	WDT input clock selector
 37982                           ;	WDTCCS = SC, Software Control
 37983  300005                     	org	3145733
 37984  300005  FF                 	db	255
 37985                           
 37986                           ;Config register CONFIG4L @ 0x300006
 37987                           ;	Write Protection Block 0
 37988                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 37989                           ;	Write Protection Block 1
 37990                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 37991                           ;	Write Protection Block 2
 37992                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 37993                           ;	Write Protection Block 3
 37994                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 37995  300006                     	org	3145734
 37996  300006  FF                 	db	255
 37997                           
 37998                           ;Config register CONFIG4H @ 0x300007
 37999                           ;	Configuration Register Write Protection bit
 38000                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 38001                           ;	Boot Block Write Protection bit
 38002                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 38003                           ;	Data EEPROM Write Protection bit
 38004                           ;	WRTD = OFF, Data EEPROM not write-protected
 38005                           ;	Scanner Enable bit
 38006                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
 38007                           ;	Low Voltage Programming Enable bit
 38008                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
 38009  300007                     	org	3145735
 38010  300007  DF                 	db	223
 38011                           
 38012                           ;Config register CONFIG5L @ 0x300008
 38013                           ;	UserNVM Program Memory Code Protection bit
 38014                           ;	CP = ON, UserNVM code protection enabled
 38015                           ;	DataNVM Memory Code Protection bit
 38016                           ;	CPD = ON, DataNVM code protection enabled
 38017  300008                     	org	3145736
 38018  300008  FC                 	db	252
 38019                           
 38020                           ;Config register CONFIG5H @ 0x300009
 38021                           ;	unspecified, using default values
 38022  300009                     	org	3145737
 38023  300009  FF                 	db	255
 38024                           
 38025                           ;Config register CONFIG6L @ 0x30000A
 38026                           ;	Table Read Protection Block 0
 38027                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 38028                           ;	Table Read Protection Block 1
 38029                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 38030                           ;	Table Read Protection Block 2
 38031                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 38032                           ;	Table Read Protection Block 3
 38033                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 38034  30000A                     	org	3145738
 38035  30000A  FF                 	db	255
 38036                           
 38037                           ;Config register CONFIG6H @ 0x30000B
 38038                           ;	Boot Block Table Read Protection bit
 38039                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 38040  30000B                     	org	3145739
 38041  30000B  FF                 	db	255
 38042                           tosu	equ	0xFFF
 38043                           tosh	equ	0xFFE
 38044                           tosl	equ	0xFFD
 38045                           stkptr	equ	0xFFC
 38046                           pclatu	equ	0xFFB
 38047                           pclath	equ	0xFFA
 38048                           pcl	equ	0xFF9
 38049                           tblptru	equ	0xFF8
 38050                           tblptrh	equ	0xFF7
 38051                           tblptrl	equ	0xFF6
 38052                           tablat	equ	0xFF5
 38053                           prodh	equ	0xFF4
 38054                           prodl	equ	0xFF3
 38055                           indf0	equ	0xFEF
 38056                           postinc0	equ	0xFEE
 38057                           postdec0	equ	0xFED
 38058                           preinc0	equ	0xFEC
 38059                           plusw0	equ	0xFEB
 38060                           fsr0h	equ	0xFEA
 38061                           fsr0l	equ	0xFE9
 38062                           wreg	equ	0xFE8
 38063                           indf1	equ	0xFE7
 38064                           postinc1	equ	0xFE6
 38065                           postdec1	equ	0xFE5
 38066                           preinc1	equ	0xFE4
 38067                           plusw1	equ	0xFE3
 38068                           fsr1h	equ	0xFE2
 38069                           fsr1l	equ	0xFE1
 38070                           bsr	equ	0xFE0
 38071                           indf2	equ	0xFDF
 38072                           postinc2	equ	0xFDE
 38073                           postdec2	equ	0xFDD
 38074                           preinc2	equ	0xFDC
 38075                           plusw2	equ	0xFDB
 38076                           fsr2h	equ	0xFDA
 38077                           fsr2l	equ	0xFD9
 38078                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    32
    Data        281
    BSS         825
    Persistent  19
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      79
    BANK0           160     36     158
    BANK1           256      0     255
    BANK2           256      7     252
    BANK3           256      0     247
    BANK4           256      0     235
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK1[64]), 

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK1[64]), 

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK1[64]), 

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK1[64]), 

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK1[64]), 

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK1[64]), 

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK1[64]), 

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK1[64]), 

    I2C1_DO_TX$8502$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8508$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8514$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX_EMPTY$8520$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8519	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8514	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_RX$8513	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8508	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_TX$8507	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX$8502	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_MasterFsm$8501	const PTR FTN()enum E10442 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$0$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK1[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK1[64]), 

    eusartparser@package	PTR struct package_t size(2) Largest target is 7
		 -> main@package(BANK2[7]), 

    confirmpackage@package	PTR struct package_t size(2) Largest target is 7
		 -> updateChangesToUart@package(COMRAM[7]), main@package(BANK2[7]), 

    read_eusartparser@package	PTR struct package_t size(2) Largest target is 7
		 -> updateChangesToUart@package(COMRAM[7]), main@package(BANK2[7]), 

    init_package@package	PTR struct package_t size(2) Largest target is 7
		 -> updateChangesToUart@package(COMRAM[7]), main@package(BANK2[7]), 

    sm_send_event@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_send_event@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_get_current_state@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_get_current_state@psm	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_init@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_init@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_execute_menuConfiguration@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_menuConfiguration@psm	PTR struct . size(2) Largest target is 12
		 -> menuConfiguration_stateMachine(BANK2[11]), 

    S6836$Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM(BANK1[64]), NULL(NULL[0]), 

    edit_Param.Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM.walkTime(BANK1[1]), var_sys_NVM.softStart(BANK1[1]), var_sys_NVM.softstop(BANK1[1]), 
		 -> var_sys_NVM.flashRGBMode(BANK1[1]), var_sys_NVM.velocityDecelaration(BANK1[1]), var_sys_NVM.operationMode(BANK1[1]), var_sys_NVM.autoTimeFullClose(BANK1[1]), 
		 -> var_sys_NVM.Stopboton(BANK1[1]), var_sys_NVM.logicDigital(BANK1[1]), var_sys_NVM.Direction_motor(BANK1[1]), var_sys_NVM.folow_me(BANK1[1]), 
		 -> var_sys_NVM.ligthTime(BANK1[1]), var_sys_NVM.autoTimeWalkClose(BANK1[1]), var_sys_NVM.programmingDistance(BANK1[1]), var_sys_NVM.flashLightMode(BANK1[1]), 
		 -> var_sys_NVM.securityBandInOpen(BANK1[1]), var_sys_NVM.securityBandType(BANK1[1]), var_sys_NVM.securityBandIsON(BANK1[1]), var_sys_NVM.photoCellInOpen(BANK1[1]), 
		 -> var_sys_NVM.photoCellIsON(BANK1[1]), var_sys_NVM.decelarationClose(BANK1[1]), var_sys_NVM.motorPower(BANK1[1]), var_sys_NVM.decelarationOpen(BANK1[1]), 
		 -> var_sys_NVM.homemPresente(BANK1[1]), var_sys_NVM.TypeofMotor(BANK1[1]), var_sys_NVM.decelarationSensivity(BANK1[1]), var_sys_NVM.motorSensitivity(BANK1[1]), 
		 -> var_sys_NVM.electricBrake(BANK1[1]), var_sys_NVM(BANK1[64]), NULL(NULL[0]), 

    sm_execute_main@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_main@psm	PTR struct . size(2) Largest target is 12
		 -> main_stateMachine(BANK1[11]), 

    sm_execute_ControlLearning@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlLearning@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), 

    sm_execute_ControlGate@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlGate@psm	PTR struct . size(2) Largest target is 12
		 -> controlGate_stateMachine(BANK1[11]), 

    decrementTimeslot@ts	PTR int  size(1) Largest target is 72
		 -> ts_system.TimeShowVersion(BANK0[2]), ts_system.TimeLearningDecelaration(BANK0[2]), ts_system.TimeWaitToGetCurrent(BANK0[2]), ts_system.InvertionTimeClosingFromOpen(BANK0[2]), 
		 -> ts_system.TimeWaitReleCapacitor(BANK0[2]), ts_system.TimeInversionStart(BANK0[2]), ts_system.TimeStopedBeforeDecelaration(BANK0[2]), ts_system.TimeWaitToNextState(BANK0[2]), 
		 -> ts_system.timeFreqFlashligth(BANK0[2]), ts_system.timeFreqRGB(BANK0[2]), ts_system.timeWaitToClose(BANK0[2]), ts_system.timeOpenWalk(BANK0[2]), 
		 -> ts_system.timeoutMenu(BANK0[2]), ts_system.timeFreqDigit(BANK0[2]), ts_system.timewaitFlashRGB(BANK0[2]), ts_system.TimeStopElectricBrake(BANK0[2]), 
		 -> ts_system.Debug_TS(BANK0[2]), ts_system.timeSinalizationDigit(BANK0[2]), ts_system.TimeLastCommand(BANK0[2]), ts_system.timeBetweenSaveCounters(BANK0[2]), 
		 -> ts_system.TimeCurrentAlarm(BANK0[2]), ts_system.TimeCurrentWaitForAlarm(BANK0[2]), ts_system.TimeReleCapacitor(BANK0[2]), ts_system.TimeChargeCondesador(BANK0[2]), 
		 -> ts_system.TimeTransitionDecelaration(BANK0[2]), ts_system.timewaitBeforeSoftStart(BANK0[2]), ts_system.timeSoftStart(BANK0[2]), ts_system.TimeElectricBrake(BANK0[2]), 
		 -> ts_system.TimeStopADCZeroOffsetCalc(BANK0[2]), ts_system(BANK0[72]), 

    controlLearning_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    controlGate_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    main_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S4659$parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    menuConfiguration_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S4453Parameter$address	PTR void  size(2) Largest target is 81
		 -> RFFull(BANK0[1]), var_sys_NVM(BANK1[64]), var_sys(BANK1[81]), 

    systemVarAddresses.address	PTR void  size(2) Largest target is 81
		 -> RFFull(BANK0[1]), var_sys_NVM(BANK1[64]), var_sys(BANK1[81]), 

    verifyProgramingMode@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloq_classic_decrypt_packet@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecryptPacket_12BIT@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    DecryptPacket_12BIT@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloqDecryptPacket@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    keeloqDecryptPacket@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    getHopCode@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    HopCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    Decrypt@packet	PTR unsigned char  size(2) Largest target is 16
		 -> SecureKeyGen@HOPtemp(COMRAM[4]), NormalKeyGen@Buffer(COMRAM[8]), classic_data(BANK2[16]), 

    NormalKeyGen@serial	PTR unsigned long  size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    sp__getClassicManufCode	PTR void  size(2) Largest target is 8
		 -> DKEY(BANK2[8]), 

    getSerialCmd@serial	PTR unsigned long  size(1) Largest target is 4
		 -> controlSelectRemote@tempSerial(BANK0[4]), 

    SaveNVM_VarSystem@point	PTR unsigned char  size(2) Largest target is 64
		 -> var_sys_NVM(BANK1[64]), 

    ReadSerial@tempSerial	PTR unsigned long  size(1) Largest target is 4
		 -> eusartparser@serial(BANK0[4]), 

    validateRemoteSerialNumber@position	PTR unsigned char  size(2) Largest target is 16
		 -> eusartparser@pos(BANK0[1]), controlSelectRemote@pos(BANK0[1]), classic_data(BANK2[16]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    I2C1_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK1[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK1[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK1[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E10442[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK1[64]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F523@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@i2c1_master_example$F517@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F511@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@i2c1_master_example$F500@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK1[64]), 

    i2c_readDataBlock@data	PTR void  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), var_sys_NVM.homemPresente(BANK1[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK1[1]), 
		 -> memoryTEMP(BANK2[16]), var_sys_NVM.learningCurrentNormalClose(BANK1[2]), var_sys_NVM(BANK1[64]), 

    d.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), var_sys_NVM.homemPresente(BANK1[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK1[1]), 
		 -> memoryTEMP(BANK2[16]), var_sys_NVM.learningCurrentNormalClose(BANK1[2]), var_sys_NVM(BANK1[64]), 

    S429$data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK1[64]), 

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK1[64]), 

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    i2c_writeNBytes@data	PTR void  size(2) Largest target is 64
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK1[64]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _load_New_Menu->_SetSegmentValueIntermitentMain
    _controlSelectRemote->_validateRemoteSerialNumber
    _getSerialCmd->_memcpy
    _controlSaveRemote->_SetSegmentValueIntermitentMain
    ___awdiv->___lbmod
    _SetSegmentValueMain->___awdiv
    _controlLearnDigit->_SetSegmentValueLearn
    _generateErrorLearnig->_sm_init
    _sm_init->_sm_restart
    _setPositionInvertionInOpening->_getTimeDecelaration
    _controlVelocity->_getStateOpenPosition
    _getStateOpenPosition->_getTimeDecelaration
    _InitSoftStop->_GetMotorPower
    _CloseOrder->_sm_send_event
    _setPositionInvertionInClosing->_getTimeDecelaration
    _getTimeDecelaration->___lmul
    ___lmul->___lldiv
    _StopOrder->_sm_send_event
    _GetSecurityStateInClosing->_SetSegmentValueIntermitent
    _WaitPreFlash->_sm_send_event
    _OpenFullOrder->_sm_send_event
    _OpenWalkOrder->_sm_send_event
    _sm_send_event->_sm_get_current_state
    _InitSoftStart->_GetMotorPower
    _GetSecurityStateInOpening->_SetSegmentValueIntermitent
    _GetOpenOrder->_SetSegmentValueIntermitentMain
    _SetSegmentValueIntermitentMain->___awdiv
    _read_package->_EUSART1_Read
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _keeloq_classic_decrypt_packet->_NormalKeyGen
    _NormalKeyGen->_Decrypt
    _Decrypt->_memcpy
    _HopCHK->_getHopCode
    _getHopCode->___wmul
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _eusartparser->_validateRemoteSerialNumber
    _write_eusartparser->___wmul
    _validateRemoteSerialNumber->_i2c_readDataBlock
    _updateChangesToUart->_read_eusartparser
    _read_eusartparser->_write_package
    _write_package->_EUSART1_Write
    _confirmpackage->_init_package
    _saveNewSerial->_i2c_writeNBytes
    _cmdMemoryIsEmpty->_i2c_readDataBlock
    _RemoveSerial->_i2c_writeNBytes
    _ReadSerial->_i2c_readDataBlock
    _ShowVersion->_SetSegmentValue
    _SetSegmentValue->___awdiv
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ControlMotor->_VerifyElectricalBrake
    _ControlLights->_setRGB_ON
    _setRGB_ON->_RGB_Set
    _ControlCurrent->_getCurrentComparator
    _refreshCurrent->_sumHIST
    _refreshADCZeroOffset->___lwdiv
    _getCurrentComparator->___wmul
    _SaveNVM_VarSystem->_i2c_writeNBytes
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F523
    _wr2RegCompleteHandler@i2c1_master_example$F523->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F517->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F535->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F511->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F500->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR2_ISR->_ReadADC
    _refreshSegment->_Segments_Set
    _controlTimeslots->_decrementTimeslot
    _ReadADC->_ADCC_GetSingleConversion
    _TMR1_ISR->_controlMotorForce
    _controlMotorForce->i2_GetMotorPower
    _TMR0_ISR->_rxi

Critical Paths under _main in BANK0

    _main->_eusartparser
    _sm_execute_main->_sm_execute_menuConfiguration
    _sm_execute_menuConfiguration->_controlSelectRemote
    _setValueToEdit->_SaveNVM_VarSystem
    _controlSelectRemote->_RemoveSerial
    _controlSelectRemote->_saveNewSerial
    _controlSelectRemote->_validateRemoteSerialNumber
    _sm_execute_ControlGate->_actionZone_Opening
    _sm_execute_ControlLearning->_SaveNVM_VarSystem
    _actionZone_Opening->_setPositionInvertionInClosing
    _controlVelocity->_getStateOpenPosition
    _actionZone_Closing->_setPositionInvertionInClosing
    _readRFButtons->_keeloqDecryptPacket
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _loadNVM_VarSystem->_ResetDefaultMemory
    _loadNVM_VarSystem->_checkNVM_VarSystem
    _checkNVM_VarSystem->_SaveNVM_VarSystem
    _ResetDefaultMemory->_SaveNVM_VarSystem
    _eusartparser->_RemoveSerial
    _eusartparser->_saveNewSerial
    _eusartparser->_validateRemoteSerialNumber
    _ControlCounterMoves->_SaveNVM_VarSystem

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0 8937167
                                              0 BANK2      7     7      0
                _ControlCounterMoves
                     _ControlCurrent
                      _ControlInputs
                      _ControlLights
                       _ControlMotor
                _EUSART1_is_rx_ready
                       _InitReceiver
                  _SYSTEM_Initialize
                    _SetSegmentValue
                        _ShowVersion
                    _WWDT_SoftEnable
                    _WWDT_TimerClear
                    _controlVelocity
                       _eusartparser
                      _getKeyPressed
                  _loadNVM_VarSystem
                         _readInputs
                      _readRFButtons
                       _read_package
                         _readbutton
             _sm_execute_ControlGate
                    _sm_execute_main
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_execute_main                                      4     2      2 3276122
                                             21 BANK0      4     2      2
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                      _load_New_Menu
       _sm_execute_menuConfiguration
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_menuConfiguration                         4     2      2 3249934
                                             17 BANK0      4     2      2
                    _ClearFlag_rfCMD
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___lbdiv
                            ___lldiv
                             ___lmul
                            ___lwdiv
                  _controlLearnDigit
                  _controlSaveRemote
                _controlSelectRemote
                      _load_New_Menu
                     _setValueToEdit
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setValueToEdit                                       7     6      1  719702
                                              5 BANK0      7     6      1
                       _InitReceiver
                  _SaveNVM_VarSystem
                   _cmdMemoryIsEmpty
                      _load_New_Menu
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) _load_New_Menu                                        4     4      0    7475
                                             31 COMRAM     4     4      0
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
 ---------------------------------------------------------------------------------
 (4) _InitReceiver                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlSelectRemote                                  9     9      0 1778943
                                              8 BANK0      9     9      0
                    _ClearFlag_rfCMD
                       _RemoveSerial
                  _SaveNVM_VarSystem
                    _SetSegmentValue
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                   _cmdMemoryIsEmpty
                       _getSerialCmd
                      _getTypeRemote
                      _saveNewSerial
                      _sm_send_event
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (4) _getTypeRemote                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _getSerialCmd                                         2     1      1    6667
                                             26 COMRAM     2     1      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _controlSaveRemote                                    1     1      0   21448
                                             31 COMRAM     1     1      0
                    _ClearFlag_rfCMD
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1    1492
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1705
                                             19 COMRAM     8     4      4
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueMain                                  2     1      1    2402
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _ClearFlag_rfCMD                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlLearnDigit                                    0     0      0      31
               _SetSegmentValueLearn
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValueLearn                                 3     3      0      31
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     601
                                             15 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _sm_execute_ControlGate                               5     3      2  633789
                                             15 BANK0      5     3      2
                       _GetOpenOrder
         _SetSegmentValueIntermitent
                       _WaitPreFlash
                  _actionZone_Closed
                 _actionZone_Closing
                  _actionZone_Opened
                 _actionZone_Opening
         _sm_execute_ControlLearning
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_ControlLearning                           5     3      2  372027
                                              5 BANK0      5     3      2
                       _GetOpenOrder
                  _SaveNVM_VarSystem
                      _calculateMean
                 _clearLearningValue
               _generateErrorLearnig
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _generateErrorLearnig                                 0     0      0    2622
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_init                                              5     0      5    2622
                                             17 COMRAM     5     0      5
                         _sm_restart
 ---------------------------------------------------------------------------------
 (2) _sm_restart                                           2     0      2     214
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _clearLearningValue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _calculateMean                                       12     4      8    1241
                                             15 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opening                                   3     3      0   52477
                                             12 BANK0      3     3      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
         _SetSegmentValueIntermitent
                          _StopOrder
                     _VerifyFollowMe
                    _controlVelocity
      _setPositionInvertionInClosing
      _setPositionInvertionInOpening
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInOpening                        8     8      0    1207
                                             49 COMRAM     8     8      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (3) _controlVelocity                                      1     1      0    3806
                                              2 BANK0      1     1      0
          _ControlDecelarationFactor
                       _InitSoftStop
               _getStateOpenPosition
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getStateOpenPosition                                11    11      0    2562
                                             49 COMRAM     9     9      0
                                              0 BANK0      2     2      0
                             ___lmul
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _InitSoftStop                                         1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (4) _ControlDecelarationFactor                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opened                                    2     2      0   42796
                                             31 COMRAM     2     2      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                     _VerifyFollowMe
 ---------------------------------------------------------------------------------
 (3) _VerifyFollowMe                                       1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _CloseOrder                                           0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closing                                   2     2      0   58040
                                             49 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
         _SetSegmentValueIntermitent
                          _StopOrder
                             ___lmul
      _setPositionInvertionInClosing
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInClosing                       12    12      0    1207
                                              0 BANK0     12    12      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getTimeDecelaration                                  9     5      4    1207
                                             40 COMRAM     9     5      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8    1176
                                             28 COMRAM    12     4      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _StopOrder                                            0     0      0   11256
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInClosing                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closed                                    2     2      0   65057
                                             31 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                       _WaitPreFlash
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _WaitPreFlash                                         0     0      0   22549
                   _InitFullAutoTime
                      _OpenFullOrder
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _OpenFullOrder                                        0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _InitFullAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OpenWalkOrder                                        4     4      0   11389
                                             23 COMRAM     4     4      0
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_send_event                                        6     2      4   11256
                                             17 COMRAM     6     2      4
               _sm_get_current_state
 ---------------------------------------------------------------------------------
 (3) _sm_get_current_state                                 2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _InitSoftStart                                        1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (3) _InitWalkAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInOpening                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (3) _SetSegmentValueIntermitent                           4     1      3    1893
                                             15 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _GetOpenOrder                                         0     0      0    6454
     _SetSegmentValueIntermitentMain
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1    1861
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueIntermitentMain                       4     1      3    4593
                                             27 COMRAM     4     1      3
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _readbutton                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_package                                        14     7      7     429
                                             16 COMRAM    14     7      7
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      37
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readRFButtons                                        0     0      0  746870
                _DecryptPacket_12BIT
                _keeloqDecryptPacket
 ---------------------------------------------------------------------------------
 (2) _keeloqDecryptPacket                                 10     6      4  389465
                                              8 BANK0     10     6      4
                             _DecCHK
                             _HopCHK
      _keeloq_classic_decrypt_packet
                             _memcpy
         _validateRemoteSerialNumber
               _verifyProgramingMode
 ---------------------------------------------------------------------------------
 (3) _verifyProgramingMode                                 3     1      2     152
                                             15 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _keeloq_classic_decrypt_packet                        5     3      2   23218
                                             55 COMRAM     2     0      2
                                              0 BANK0      3     3      0
                            _Decrypt
                       _NormalKeyGen
 ---------------------------------------------------------------------------------
 (4) _NormalKeyGen                                        18    16      2   15069
                                             37 COMRAM    18    16      2
                            _Decrypt
                      _LoadManufCode
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _LoadManufCode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Decrypt                                             11     9      2    7935
                                             26 COMRAM    11     9      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _HopCHK                                               4     2      2    7819
                                             35 COMRAM     4     2      2
                          _ReqResync
                         _getHopCode
 ---------------------------------------------------------------------------------
 (4) _getHopCode                                          14    12      2    7391
                                             21 COMRAM    14    12      2
                          _ReqResync
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _ReqResync                                            2     0      2     211
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _DecCHK                                               4     2      2     242
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DecryptPacket_12BIT                                  5     1      4  357405
                                              8 BANK0      5     1      4
                             _memcpy
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (1) _readInputs                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loadNVM_VarSystem                                    0     0      0 1742040
             _I2C1_Read1ByteRegister
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
                 _checkNVM_VarSystem
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (2) _checkNVM_VarSystem                                   1     1      0  349391
                                              5 BANK0      1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (3) _ResetDefaultMemory                                   1     1      0  349369
                                              5 BANK0      1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (2) _I2C1_Read1ByteRegister                               3     2      1  345691
                                             33 COMRAM     3     2      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _getKeyPressed                                        1     1      0      37
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _eusartparser                                        35    33      2 2167811
                                              8 BANK0     28    26      2
                         _ReadSerial
                       _RemoveSerial
                  _SaveNVM_VarSystem
                   _cmdMemoryIsEmpty
                     _confirmpackage
                  _read_eusartparser
                      _saveNewSerial
                _updateChangesToUart
         _validateRemoteSerialNumber
                 _write_eusartparser
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_eusartparser                                  29    22      7    7623
                                             21 COMRAM    29    22      7
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _validateRemoteSerialNumber                          21    14      7  350496
                                             45 COMRAM    13     6      7
                                              0 BANK0      8     8      0
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (2) _updateChangesToUart                                  8     8      0   27112
                                             33 COMRAM     8     8      0
                     _confirmpackage
                       _init_package
                  _read_eusartparser
                      _write_package
 ---------------------------------------------------------------------------------
 (3) _read_eusartparser                                   10     8      2   12837
                                             23 COMRAM    10     8      2
                             ___wmul
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_package                                        7     0      7    5067
                                             16 COMRAM     7     0      7
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      62
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _confirmpackage                                       3     0      3    8222
                                             17 COMRAM     3     0      3
                       _init_package
 ---------------------------------------------------------------------------------
 (3) _init_package                                         2     0      2     338
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _saveNewSerial                                        8     3      5  349810
                                              0 BANK0      8     3      5
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (4) _cmdMemoryIsEmpty                                     8     7      1  350671
                                             45 COMRAM     8     7      1
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (4) _RemoveSerial                                         8     7      1  349543
                                              0 BANK0      8     7      1
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (2) _ReadSerial                                           5     3      2  348828
                                             45 COMRAM     5     3      2
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (5) _i2c_readDataBlock                                   12     6      6  348313
                                             33 COMRAM    12     6      6
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _WWDT_TimerClear                                      2     2      0      40
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WWDT_SoftEnable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ShowVersion                                          0     0      0     602
                    _SetSegmentValue
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValue                                      2     1      1     602
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     968
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _WWDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WWDT_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     121
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     121
                                             17 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlMotor                                         7     7      0     319
                                             17 COMRAM     7     7      0
              _VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (2) _VerifyElectricalBrake                                2     2      0     161
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ControlLights                                        0     0      0    1958
                   _setFlashLigth_ON
                          _setRGB_ON
 ---------------------------------------------------------------------------------
 (2) _setRGB_ON                                            5     3      2    1235
                                             16 COMRAM     5     3      2
                            _RGB_Set
 ---------------------------------------------------------------------------------
 (3) _RGB_Set                                              1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setFlashLigth_ON                                     2     0      2     723
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ControlInputs                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlCurrent                                       4     4      0    8910
                                             34 COMRAM     4     4      0
                      _GetMotorPower
               _getCurrentComparator
               _refreshADCZeroOffset
                     _refreshCurrent
 ---------------------------------------------------------------------------------
 (2) _refreshCurrent                                       0     0      0     820
                  _saveEnergyADCHist
                       _sumEnergyADC
                            _sumHIST
 ---------------------------------------------------------------------------------
 (3) _sumHIST                                             17    13      4     461
                                             15 COMRAM    17    13      4
 ---------------------------------------------------------------------------------
 (3) _sumEnergyADC                                         9     7      2     238
                                             15 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _saveEnergyADCHist                                    2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _refreshADCZeroOffset                                 3     3      0    1186
                                             22 COMRAM     3     3      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     781
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _getCurrentComparator                                13     9      4    6867
                                             21 COMRAM    13     9      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    6728
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _GetMotorPower                                        4     4      0      37
                                             15 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ControlCounterMoves                                  0     0      0  349276
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (4) _SaveNVM_VarSystem                                    5     5      0  349276
                                              0 BANK0      5     5      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (5) _i2c_writeNBytes                                     25    19      6  349112
                                             33 COMRAM    25    19      6
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6    6478
                                             15 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetAddressNackCallback                          4     0      4    2859
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_Open                                            2     2      0      68
                                             15 COMRAM     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWrite                                     0     0      0  334109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOperation                                 2     2      0  334109
                                             31 COMRAM     2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (8) _I2C1_Poller                                          0     0      0  334041
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterFsm                                       3     3      0  334041
                                             28 COMRAM     3     3      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX_EMPTY                                    2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX                                          2     2      0   83518
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_WRITE                              0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_READ                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendTxData                               1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_ACK                                      0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX                                          2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_STOP                                0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RESET                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RCEN                                        0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_ADDRESS_NACK                                2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler@i2c1_master_example$F523      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler@i2c1_master_example$F517      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler@i2c1_master_example$F535    2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler@i2c1_master_example$F511      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler@i2c1_master_example$F500      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetDataCompleteCallback                         4     0      4    4339
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (7) _I2C1_SetCallback                                     5     1      4     997
                                             15 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetBuffer                                       4     0      4    3942
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnStop                             2     0      2       0
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnReset                            2     0      2     305
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Close                                           1     1      0      37
                                             15 COMRAM     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          6     6      0    3081
                                              9 COMRAM     6     6      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR2_ISR                                            0     0      0    2716
                   Absolute function *
                            _ReadADC
       _TMR2_DefaultInterruptHandler *
                   _controlTimeslots
                     _refreshSegment
 ---------------------------------------------------------------------------------
 (16) _refreshSegment                                      0     0      0      22
                       _Segments_Set
 ---------------------------------------------------------------------------------
 (17) _Segments_Set                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _controlTimeslots                                    0     0      0    2672
                  _decrementTimeslot
 ---------------------------------------------------------------------------------
 (17) _decrementTimeslot                                   3     2      1    2672
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (16) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ReadADC                                             3     3      0      22
                                              1 COMRAM     3     3      0
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetSingleConversion                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0     365
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _controlMotorForce
 ---------------------------------------------------------------------------------
 (16) _controlMotorForce                                   5     5      0     136
                                              4 COMRAM     5     5      0
                    i2_GetMotorPower
            i2_VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (17) i2_VerifyElectricalBrake                             2     2      0     112
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (17) i2_GetMotorPower                                     4     4      0      24
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (16) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                                _rxi
 ---------------------------------------------------------------------------------
 (16) _rxi                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ControlCounterMoves
     _SaveNVM_VarSystem
       _i2c_writeNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
             _I2C1_Poller
               _I2C1_MasterFsm
                 _I2C1_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                     _I2C1_MasterEnableRestart
                   _I2C1_DO_SEND_STOP *
                     _I2C1_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                       _I2C1_SetCallback
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                 _I2C1_DO_IDLE *
                 _I2C1_DO_RCEN *
                   _I2C1_MasterStartRx
                 _I2C1_DO_RESET *
                 _I2C1_DO_RX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_MasterSendNack
                   _I2C1_DO_RX_NACK_STOP *
                     _I2C1_MasterSendNack
                   _I2C1_MasterGetRxData *
                   _I2C1_MasterSendAck *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_RX_ACK *
                   _I2C1_MasterSendAck
                 _I2C1_DO_RX_NACK_RESTART *
                 _I2C1_DO_RX_NACK_STOP *
                 _I2C1_DO_SEND_ADR_READ *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_ADR_WRITE *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_RESTART *
                 _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                 _I2C1_DO_TX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterIsNack *
                   _I2C1_MasterSendTxData *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterSetIrq *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_MasterClearIrq *
                 _I2C1_MasterIsNack *
               _I2C1_MasterWaitForEvent
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterOpen
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
         _memcpy
   _ControlCurrent
     _GetMotorPower
     _getCurrentComparator
       ___wmul
     _refreshADCZeroOffset
       ___lwdiv
     _refreshCurrent
       _saveEnergyADCHist
       _sumEnergyADC
       _sumHIST
   _ControlInputs
   _ControlLights
     _setFlashLigth_ON
     _setRGB_ON
       _RGB_Set
   _ControlMotor
     _VerifyElectricalBrake
   _EUSART1_is_rx_ready
   _InitReceiver
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WWDT_Initialize
   _SetSegmentValue
     ___awdiv (ARG)
       ___lbmod (ARG)
     ___lbmod (ARG)
   _ShowVersion
     _SetSegmentValue
   _WWDT_SoftEnable
   _WWDT_TimerClear
   _controlVelocity
     _ControlDecelarationFactor
     _InitSoftStop
       _GetMotorPower
     _getStateOpenPosition
       ___lmul
         ___lldiv (ARG)
       _getTimeDecelaration
         ___lmul
     _getTimeDecelaration
   _eusartparser
     _ReadSerial
       _i2c_readDataBlock
         _I2C1_Close
         _I2C1_MasterWrite
         _I2C1_Open
         _I2C1_SetAddressNackCallback
         _I2C1_SetBuffer
         _I2C1_SetDataCompleteCallback
     _RemoveSerial
       _i2c_writeNBytes
     _SaveNVM_VarSystem
     _cmdMemoryIsEmpty
       _i2c_readDataBlock
     _confirmpackage
       _init_package
     _read_eusartparser
       ___wmul
       _write_package
         _EUSART1_Write
     _saveNewSerial
       _i2c_writeNBytes
     _updateChangesToUart
       _confirmpackage
       _init_package
       _read_eusartparser
       _write_package
     _validateRemoteSerialNumber
       _i2c_readDataBlock
     _write_eusartparser
       ___wmul
     _write_package
   _getKeyPressed
   _loadNVM_VarSystem
     _I2C1_Read1ByteRegister
       _I2C1_Close
       _I2C1_MasterWrite
       _I2C1_Open
       _I2C1_SetAddressNackCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
     _ResetDefaultMemory
       _SaveNVM_VarSystem
     _SaveNVM_VarSystem
     _checkNVM_VarSystem
       _SaveNVM_VarSystem
     _i2c_readDataBlock
   _readInputs
   _readRFButtons
     _DecryptPacket_12BIT
       _memcpy
       _validateRemoteSerialNumber
     _keeloqDecryptPacket
       _DecCHK
       _HopCHK
         _ReqResync
         _getHopCode
           _ReqResync
           ___wmul
       _keeloq_classic_decrypt_packet
         _Decrypt
           _memcpy
         _NormalKeyGen
           _Decrypt
           _LoadManufCode
           _memcpy
       _memcpy
       _validateRemoteSerialNumber
       _verifyProgramingMode
   _read_package
     _EUSART1_Read
   _readbutton
   _sm_execute_ControlGate
     _GetOpenOrder
       _SetSegmentValueIntermitentMain
         ___awdiv (ARG)
         ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbdiv
     _SetSegmentValueIntermitent
     _WaitPreFlash
       _InitFullAutoTime
       _OpenFullOrder
         _InitSoftStart
           _GetMotorPower
         _sm_send_event
           _sm_get_current_state
       _sm_send_event
     _actionZone_Closed
       _GetOpenOrder
       _GetSecurityStateInOpening
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
         _InitSoftStart
         _sm_send_event
       _WaitPreFlash
       _sm_send_event
     _actionZone_Closing
       _GetOpenOrder
       _GetSecurityStateInClosing
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _SetSegmentValueIntermitent
       _StopOrder
         _sm_send_event
       ___lmul
       _setPositionInvertionInClosing
         _getTimeDecelaration
       _sm_send_event
     _actionZone_Opened
       _CloseOrder
         _InitSoftStart
         _sm_send_event
       _GetOpenOrder
       _GetSecurityStateInClosing
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _VerifyFollowMe
     _actionZone_Opening
       _CloseOrder
       _GetOpenOrder
       _GetSecurityStateInClosing
       _GetSecurityStateInOpening
       _InitFullAutoTime
       _InitWalkAutoTime
       _SetSegmentValueIntermitent
       _StopOrder
       _VerifyFollowMe
       _controlVelocity
       _setPositionInvertionInClosing
       _setPositionInvertionInOpening
         _getTimeDecelaration
       _sm_send_event
     _sm_execute_ControlLearning
       _GetOpenOrder
       _SaveNVM_VarSystem
       _calculateMean
       _clearLearningValue
       _generateErrorLearnig
         _sm_init
           _sm_restart
       _sm_send_event
     _sm_send_event
   _sm_execute_main
     _SetSegmentValueIntermitentMain
     _SetSegmentValueMain
       ___awdiv (ARG)
       ___lbdiv (ARG)
       ___lbmod (ARG)
     _load_New_Menu
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
     _sm_execute_menuConfiguration
       _ClearFlag_rfCMD
       _ResetDefaultMemory
       _SaveNVM_VarSystem
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
       ___lbdiv
       ___lldiv
       ___lmul
       ___lwdiv
       _controlLearnDigit
         _SetSegmentValueLearn
       _controlSaveRemote
         _ClearFlag_rfCMD
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _sm_send_event
       _controlSelectRemote
         _ClearFlag_rfCMD
         _RemoveSerial
         _SaveNVM_VarSystem
         _SetSegmentValue
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _cmdMemoryIsEmpty
         _getSerialCmd
           _memcpy
         _getTypeRemote
         _saveNewSerial
         _sm_send_event
         _validateRemoteSerialNumber
       _load_New_Menu
       _setValueToEdit
         _InitReceiver
         _SaveNVM_VarSystem
         _cmdMemoryIsEmpty
         _load_New_Menu
         _sm_send_event
       _sm_send_event
     _sm_send_event
   _sm_init

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _rxi *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _controlMotorForce *
       i2_GetMotorPower
       i2_VerifyElectricalBrake
   _TMR2_ISR *
     Absolute function(Fake) *
     _ReadADC *
       _ADCC_GetSingleConversion
     _TMR2_DefaultInterruptHandler *
     _controlTimeslots *
       _decrementTimeslot
     _refreshSegment *
       _Segments_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      EB      13       91.8%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      7      FC       9       98.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     24      9E       5       98.8%
BITBANK14           88      0       0      32        0.0%
BANK14              88      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4F       1       84.0%
BITBIGSFRllll       28      0       0      59        0.0%
BITBIGSFRhlllll     27      0       0      42        0.0%
BITBIGSFRhhllll     1B      0       0      37        0.0%
BITBIGSFRhhlh       1A      0       0      35        0.0%
BITBIGSFRhlllll     13      0       0      48        0.0%
BITBIGSFRhlllhh      F      0       0      41        0.0%
BITBIGSFRhlllll      E      0       0      46        0.0%
BITBIGSFRhhh         D      0       0      34        0.0%
BITBIGSFRhhllll      C      0       0      36        0.0%
BITBIGSFRllh         9      0       0      57        0.0%
BITBIGSFRhlllll      4      0       0      52        0.0%
BITBIGSFRhlllll      3      0       0      44        0.0%
BITBIGSFRhlllll      3      0       0      43        0.0%
BITBIGSFRhlllll      3      0       0      53        0.0%
BITBIGSFRhlllll      3      0       0      55        0.0%
BITBIGSFRhlllll      2      0       0      47        0.0%
BITBIGSFRhlllhh      2      0       0      40        0.0%
BITBIGSFRhlllll      2      0       0      49        0.0%
BITBIGSFRhlllll      2      0       0      54        0.0%
BITBIGSFRlh          2      0       0      56        0.0%
BITBIGSFRlllh        1      0       0      58        0.0%
BITBIGSFRhlllll      1      0       0      45        0.0%
BITBIGSFRhlllll      1      0       0      50        0.0%
BITBIGSFRhlllll      1      0       0      51        0.0%
BITBIGSFRhlllhh      1      0       0      39        0.0%
BITBIGSFRhlllhh      1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4CA      60        0.0%
DATA                 0      0     4CA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Sep 08 11:41:43 2022

                                        ?_ClearFlag_rfCMD 0001  
                              cmdMemoryIsEmpty@tempSerial 0032  
                                           _Counterchoose 0089  
                        __end_of_TMR2_SetInterruptHandler 9B4E  
                                _eusart1TxBufferRemaining 01FD  
                            SetSegmentValueIntermitent@d1 0013  
                            SetSegmentValueIntermitent@d2 0010  
                                    ??_checkNVM_VarSystem 003B  
                                            ___awdiv@sign 0019  
                                     ___wmul@multiplicand 0012  
                           __end_of_VerifyElectricalBrake 8838  
                                           _LoadManufCode 985A  
                                        ?_SetSegmentValue 001C  
                                                     l100 9268  
                            ??_sm_execute_ControlLearning 00DF  
                                                     l674 8064  
                                                     l690 84CA  
                                                     _GIE 007F97  
                                                     _Hop 006A  
                                   ?_I2C1_MasterOperation 0001  
                                         _timer1ReloadVal 02E1  
                                 keeloqDecryptPacket@data 00E0  
                                                     _rxi 4B2E  
                                  ControlMotor@stateMotor 0018  
                                         _TMR2_Initialize 954A  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                  ?_I2C1_MasterSendTxData 0001  
                                       load_New_Menu@Menu 0022  
                                    _I2C1_DO_RX_NACK_STOP 9BCA  
                               ?_I2C1_MasterEnableRestart 0001  
                                       _SaveNVM_VarSystem 90FE  
                        validateRemoteSerialNumber@serial 002E  
                                    I2C1_SetBuffer@buffer 0010  
                                       getKeyPressed@temp 0010  
                                     eusartparser@package 00E0  
                                   getCurrentComparator@x 0022  
                                     write_eusartparser@i 0031  
                                      ?_SaveNVM_VarSystem 0001  
                                 ??_rd2RegCompleteHandler 001B  
                                                    l2052 89EA  
                                                    l1405 673E  
                                       readRFButtons@key1 007F  
                                                    l2047 89DC  
                                                    l3105 31B6  
                                                    l1372 91AA  
                                                    l1436 5DE6  
                                                    l1524 5830  
                                                    l1357 706A  
                                                    l2413 51DE  
                                                    l1517 57D0  
                                                    l1366 72E6  
                                                    l2270 6E5A  
                                                    l3142 32D0  
                                                    l1383 5FF6  
                                                    l2431 4042  
                                                    l2327 5636  
                                                    l2256 7922  
                                                    l2344 8834  
                                                    l3128 31F4  
                                                    l1491 90B4  
                                                    l2523 7EE8  
                                                    l2339 882A  
                                                    l2419 51EE  
                                                    l1731 718E  
                                                    l1388 607E  
                                                    l2532 9326  
                                                    l1740 71EE  
                                                    l1732 7196  
                                                    l3420 2ABC  
                                                    l3093 3022  
                                                    l1742 720A  
                                                    l1654 61A6  
                                                    l3406 29EE  
                                                    l2535 934E  
                                                    l1495 5662  
                                                    l1743 7212  
                                                    l2392 512A  
                                                    l1736 71C2  
                                                    l2369 5120  
                                                    l1745 722E  
                                                    l1737 71CA  
                                                    l1657 621E  
                                                    l2609 86EA  
                                                    l3281 1A86  
                                                    l2386 511A  
                                                    l1746 7236  
                                                    l2459 41B4  
                                                    l1739 71E6  
                                                    l1667 6264  
                                                    l2396 51E4  
                                                    l1748 725C  
                                                    l3428 2AFE  
                                                    l2493 42BC  
                                                    l1861 7816  
                                                    l3541 7ABE  
                                                    l3438 2C48  
                                                    l2751 5A50  
                                                    l3439 2C6A  
                                                    l2753 5A80  
                                                    l2834 48BE  
                                                    l2754 5B38  
                                                    l4275 8ED8  
                                                    l1859 7806  
                                                    l2747 4B2C  
                                                    l3811 8316  
                                                    l3547 94C0  
                                                    l3492 2EB0  
                                                    l1869 783A  
                                                    l3565 8C2A  
                                                    l2677 3E7A  
                                                    l3486 2E7E  
                                                    l2944 2412  
                                                    l2797 46BE  
                                                    l3779 8B36  
                                                    ?_rxi 0001  
                                                    _DKEY 02D1  
                                                    _LATA 000F83  
                                                    _LATB 000F84  
                                                    _LATC 000F85  
                                                    _LATD 000F86  
                                                    _LATE 000F87  
                                             main@package 02EF  
                                                    _T2PR 000FBC  
                                                    _PMD0 000EE1  
                                                    _PMD1 000EE2  
                                                    _PMD2 000EE3  
                                                    _PMD3 000EE4  
                                                    _PMD4 000EE5  
                                                    _PMD5 000EE6  
                                                    _EHop 028C  
                                           eusartparser@i 00E8  
                                                    _WPUA 000F10  
                                                    _WPUB 000F18  
                                                    _WPUC 000F20  
                                                    _WPUD 000F25  
                                                    _WPUE 000F2D  
                                         __end_of_RGB_Set 9B06  
                                 ??_wr2RegCompleteHandler 001B  
                                                    _Bptr 0083  
                                        ??_I2C1_MasterFsm 001D  
                                           _EUSART1_Write 9252  
                               ??_I2C1_CallbackReturnStop 001B  
                                __end_of_controlTimeslots 6D48  
                                                    _main 6434  
                                           ?_EUSART1_Read 0001  
                                         ?_confirmpackage 0012  
                                                    _temp 006F  
                                                    fsr1h 000FE2  
                                                    fsr2h 000FDA  
                                                    indf1 000FE7  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                                                    btemp 0050  
                                    saveNewSerial@cmdType 00DF  
                                     ??_SaveNVM_VarSystem 003B  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 009C  
                                        ??_I2C1_SetBuffer 0014  
                                          ??_ControlMotor 0012  
                                       ReadSerial@cmdType 0032  
                                         __end_of_Decrypt 7892  
                                ?i2_VerifyElectricalBrake 0001  
                                        getSerialCmd@temp 001C  
                                           ?_InitReceiver 0001  
                              ??_TMR1_SetInterruptHandler 0012  
                                            ___param_bank 000000  
                                         i2_GetMotorPower 7950  
                                         __end_of_ReadADC 8E3C  
                           I2C1_CallbackReturnStop@funPtr 0019  
                                         ??_getTypeRemote 0010  
                                                   ??_rxi 0001  
                                    __end_of_GetOpenOrder 5DCA  
                                 __end_of_TMR0_Initialize 989E  
                                          ?_LoadManufCode 0001  
                          ??_TMR0_DefaultInterruptHandler 0001  
                                           ?_InitSoftStop 0001  
                           sm_execute_ControlLearning@psm 00DD  
                           __end_of_OSCILLATOR_Initialize 9A60  
                      SetSegmentValueIntermitentMain@time 001D  
                                                   l20021 8FD8  
                                                   l20031 8FE4  
                                                   l20025 8FDE  
                                                   l21011 639C  
                                                   l21003 6324  
                                                   l20053 9AEA  
                                                   l20047 8E54  
                                                   l20207 7944  
                                                   l21007 6362  
                                                   l21103 5CDA  
                                                   l20223 8DB4  
                                                   l20057 9AF2  
                                                   l20137 82A2  
                                                   l20241 9288  
                                                   l21025 6426  
                                                   l20305 7802  
                                                   l21041 5C3C  
                                                   l20401 8AF8  
                                                   l20083 9592  
                                                   l20163 91DE  
                                                   l20171 91FE  
                                                   l20243 928C  
                                                   l20227 9254  
                                                   l20315 7812  
                                                   l20219 8DA0  
                                                   l20157 98BC  
                                                   l20421 5DEE  
                                                   l21125 5D14  
                                                   l20263 852E  
                                                   l20423 5DF4  
                                                   l21303 80FC  
                                                   l20327 7832  
                                                   l20319 781E  
                                                   l21151 5D86  
                                                   l21119 5D0C  
                                                   l21071 5CA2  
                                                   l21047 5C40  
                                                   l21215 7C90  
                                                   l21231 7B96  
                                                   l20407 9172  
                                                   l22103 3AE8  
                                                   l20089 959E  
                                                   l20257 85EE  
                                                   l20249 85B2  
                                                   l20185 78DC  
                                                   l20177 78A4  
                                                   l20273 8578  
                                                   l21065 5C7E  
                                                   l21081 5CA6  
                                                   l20521 8FC8  
                                                   l22105 3AFC  
                                                   l20187 78E4  
                                                   l20443 5EB2  
                                                   l20603 6C00  
                                                   l21331 93F8  
                                                   l21323 93E0  
                                                   l21163 5DC6  
                                                   l21139 5D3A  
                                                   l21059 5C7A  
                                                   l21155 5D8A  
                                                   l21251 7BC6  
                                                   l20371 75A8  
                                                   l22211 94BA  
                                                   l20523 8FCC  
                                                   l22051 394A  
                                                   l20197 7912  
                                                   l22301 8EA6  
                                                   l20437 5E9E  
                                                   l20429 5E3A  
                                                   l21237 7B9A  
                                                   l22061 396C  
                                                   l22303 8EAE  
                                                   l20439 5EA2  
                                                   l20367 757C  
                                                   l23111 5AE0  
                                                   l20711 6DF0  
                                                   l21407 554A  
                                                   l23023 4AC0  
                                                   l20519 8FAE  
                                                   l22071 3A02  
                                                   l22063 396E  
                                                   l22313 8ECE  
                                                   l20457 5F5C  
                                                   l20449 5EF8  
                                                   l20297 77E8  
                                                   l21097 5CD2  
                                                   l21185 7C34  
                                                   l20705 6D9E  
                                                   l21353 5462  
                                                   l23033 4ADE  
                                                   l23025 4AC4  
                                                   l23009 4A94  
                                                   l20633 7098  
                                                   l22145 3BAE  
                                                   l22137 3B98  
                                                   l22073 3A08  
                                                   l20801 4460  
                                                   l20459 5F60  
                                                   l21291 80DC  
                                                   l21179 7C30  
                                                   l21523 87C0  
                                                   l21267 7BF6  
                                                   l20379 75EC  
                                                   l23107 5AD6  
                                                   l21427 55A4  
                                                   l21435 55C4  
                                                   l21347 5450  
                                                   l23027 4ACA  
                                                   l20651 70DC  
                                                   l20643 70C4  
                                                   l20627 707E  
                                                   l22091 3A86  
                                                   l20811 44FA  
                                                   l20803 447C  
                                                   l21611 2A08  
                                                   l24011 206C  
                                                   l20477 81EE  
                                                   l20485 7E12  
                                                   l20469 8648  
                                                   l21277 942A  
                                                   l21517 87A8  
                                                   l23213 4640  
                                                   l23117 5AF2  
                                                   l23045 4B08  
                                                   l20653 70E6  
                                                   l22173 3C56  
                                                   l22069 39CA  
                                                   l20813 4516  
                                                   l20805 44AA  
                                                   l20821 45A6  
                                                   l21621 2A26  
                                                   l21613 2A10  
                                                   l22503 7026  
                                                   l20495 7E54  
                                                   l20487 7E44  
                                                   l24111 3488  
                                                   l20583 6B54  
                                                   l21295 80E0  
                                                   l20911 93C4  
                                                   l21199 7C60  
                                                   l21519 87B6  
                                                   l23311 4818  
                                                   l23215 4656  
                                                   l23151 5B50  
                                                   l23143 5B34  
                                                   l23127 5B0E  
                                                   l23119 5AF8  
                                                   l21455 55F8  
                                                   l21383 5500  
                                                   l21359 547C  
                                                   l20647 70D0  
                                                   l20639 70B2  
                                                   l22167 3C40  
                                                   l22095 3AC0  
                                                   l20815 4530  
                                                   l20807 44C6  
                                                   l21711 2BD4  
                                                   l21623 2A2E  
                                                   l21607 29F8  
                                                   l22601 56D4  
                                                   l20577 6B02  
                                                   l22353 90EE  
                                                   l23313 481E  
                                                   l23161 5B72  
                                                   l23137 5B20  
                                                   l23065 5A40  
                                                   l21465 5622  
                                                   l21457 55FE  
                                                   l21449 55D4  
                                                   l21393 551E  
                                                   l22281 82D4  
                                                   l20673 7134  
                                                   l20665 711A  
                                                   l20681 714A  
                                                   l20825 45B4  
                                                   l20809 44E2  
                                                   l21625 2A36  
                                                   l21609 2A00  
                                                   l24025 20A2  
                                                   l24017 2082  
                                                   l22531 5F9E  
                                                   l24115 34B2  
                                                   l20907 93BC  
                                                   l23307 4810  
                                                   l23227 46AC  
                                                   l21555 7672  
                                                   l23411 238E  
                                                   l22291 8308  
                                                   l20659 7100  
                                                   l22195 7A7E  
                                                   l20819 4542  
                                                   l20763 4344  
                                                   l21811 2DBE  
                                                   l21803 2D96  
                                                   l21643 2A5E  
                                                   l21635 2A4E  
                                                   l21627 2A3E  
                                                   l24117 3518  
                                                   l24125 36C4  
                                                   l22365 8C32  
                                                   l22621 572E  
                                                   l22613 570A  
                                                   l22605 56E6  
                                                   l20597 6BEA  
                                                   l21485 86AC  
                                                   l21573 68E6  
                                                   l21565 689A  
                                                   l23325 4830  
                                                   l23173 5BA0  
                                                   l21549 763A  
                                                   l23501 2572  
                                                   l20677 7140  
                                                   l20669 7128  
                                                   l20853 812E  
                                                   l20925 9724  
                                                   l20917 970C  
                                                   l20829 45F0  
                                                   l20781 4396  
                                                   l21813 2DC6  
                                                   l21805 2DB2  
                                                   l21661 2ADA  
                                                   l21709 2B86  
                                                   l21653 2A6E  
                                                   l24045 20E8  
                                                   l24029 20AE  
                                                   l22551 608E  
                                                   l22527 5F88  
                                                   l22471 6F98  
                                                   l22519 919E  
                                                   l24119 3552  
                                                   l24135 38C6  
                                                   l24127 3706  
                                                   l22375 8C7A  
                                                   l22703 5974  
                                                   l22711 598A  
                                                   l23327 4834  
                                                   l23247 4726  
                                                   l23191 5BD8  
                                                   l21559 76AC  
                                                   l23407 2374  
                                                   l22279 82C8  
                                                   l20775 4364  
                                                   l20767 434E  
                                                   l21831 2E14  
                                                   l21815 2DCE  
                                                   l21751 2CB0  
                                                   l21719 2C0E  
                                                   l24071 2202  
                                                   l24047 20F0  
                                                   l24039 20D6  
                                                   l22537 5FC0  
                                                   l20953 7F84  
                                                   l24305 6610  
                                                   l25201 5014  
                                                   l22641 5788  
                                                   l22633 5764  
                                                   l22625 5740  
                                                   l22617 571C  
                                                   l22609 56F8  
                                                   l22721 59D0  
                                                   l22705 5986  
                                                   l23329 483A  
                                                   l23097 5AB4  
                                                   l20697 6D5E  
                                                   l23505 2580  
                                                   l20865 8154  
                                                   l20881 8186  
                                                   l20793 43D8  
                                                   l20769 4354  
                                                   l21825 2E02  
                                                   l21809 2DB6  
                                                   l21753 2CB8  
                                                   l21681 2B0A  
                                                   l21657 2ACA  
                                                   l21905 2F24  
                                                   l24073 2208  
                                                   l24057 2126  
                                                   l22555 60B0  
                                                   l22547 6064  
                                                   l22491 7000  
                                                   l24323 6686  
                                                   l22811 7E7E  
                                                   l21579 692C  
                                                   l23363 48A6  
                                                   l23347 4876  
                                                   l23339 485C  
                                                   l23267 477C  
                                                   l23187 5BCE  
                                                   l23507 258C  
                                                   l23435 23F0  
                                                   l23427 23C8  
                                                   l23419 23B0  
                                                   l23371 22A4  
                                                   l20867 815C  
                                                   l20859 813E  
                                                   l20795 4404  
                                                   l20787 43A6  
                                                   l21851 2E4A  
                                                   l21819 2DD8  
                                                   l21763 2CF8  
                                                   l21659 2AD2  
                                                   l21907 2F76  
                                                   l24075 220E  
                                                   l24067 21F2  
                                                   l24091 2254  
                                                   l22485 6FEC  
                                                   l20957 7FC6  
                                                   l20981 7282  
                                                   l24325 668A  
                                                   l22813 7E86  
                                                   l22565 8728  
                                                   l24413 99FE  
                                                   l22661 57E8  
                                                   l22653 57BE  
                                                   l22645 579A  
                                                   l22637 5776  
                                                   l22629 5752  
                                                   l22581 567A  
                                                   l22573 5650  
                                                   l24501 895A  
                                                   l23285 47C2  
                                                   l21597 8A72  
                                                   l23621 27DA  
                                                   l23613 27B8  
                                                   l23541 2658  
                                                   l23445 2414  
                                                   l20885 8194  
                                                   l20877 817C  
                                                   l20797 4420  
                                                   l21845 2E3E  
                                                   l21773 2D1A  
                                                   l21781 2D4E  
                                                   l21765 2D02  
                                                   l21757 2CC2  
                                                   l21749 2C86  
                                                   l21669 2AEA  
                                                   l22487 6FF4  
                                                   l22807 7E6E  
                                                   l24423 6132  
                                                   l24511 8974  
                                                   l20895 93A0  
                                                   l23295 47DE  
                                                   l23279 47A4  
                                                   l22903 48F6  
                                                   l21599 8AA4  
                                                   l23703 29A2  
                                                   l23391 232A  
                                                   l23447 2452  
                                                   l20799 4444  
                                                   l21839 2E20  
                                                   l21791 2D66  
                                                   l21775 2D22  
                                                   l21759 2CDE  
                                                   l21695 2B60  
                                                   l20969 9738  
                                                   l24337 66BE  
                                                   l22809 7E76  
                                                   l22817 7E8E  
                                                   l25321 4114  
                                                   l25313 40DE  
                                                   l25241 510C  
                                                   l25217 5066  
                                                   l22673 581E  
                                                   l22665 57FA  
                                                   l22649 57AC  
                                                   l22593 56B0  
                                                   l22585 568C  
                                                   l24521 7182  
                                                   l22737 5A00  
                                                   l23289 47CA  
                                                   l23297 47E6  
                                                   l22905 490C  
                                                   l23561 26AC  
                                                   l23529 2600  
                                                   l23473 2504  
                                                   l23465 24C8  
                                                   l23449 2468  
                                                   l21865 2E70  
                                                   l21793 2D82  
                                                   l21785 2D54  
                                                   l21769 2D0E  
                                                   l21689 2B1E  
                                                   l23801 1BB8  
                                                   l20987 731A  
                                                   l24339 66D4  
                                                   l22819 7EB6  
                                                   l25411 42C0  
                                                   l25243 5110  
                                                   l25163 89B6  
                                                   l20899 93A6  
                                                   l23467 24E4  
                                                   l23387 2306  
                                                   l23379 22D4  
                                                   l21875 2E98  
                                                   l21859 2E52  
                                                   l21787 2D5C  
                                                   l21779 2D2C  
                                                   l21699 2B72  
                                                   l23811 1C02  
                                                   l23731 19A8  
                                                   l23723 1964  
                                                   l22829 7EE4  
                                                   l25421 42FA  
                                                   l25341 4170  
                                                   l25325 412A  
                                                   l25309 40CA  
                                                   l25245 511C  
                                                   l22669 580C  
                                                   l22597 56C2  
                                                   l22589 569E  
                                                   l24533 71AE  
                                                   l22693 58FC  
                                                   l24453 61DA  
                                                   l24445 61AC  
                                                   l24509 8970  
                                                   l22853 7AF6  
                                                   l23653 28BA  
                                                   l23629 282A  
                                                   l23573 2704  
                                                   l21893 2EE0  
                                                   l21797 2D86  
                                                   l23813 1C08  
                                                   l25501 30DC  
                                                   l25415 42D6  
                                                   l25343 4180  
                                                   l25319 4106  
                                                   l25327 4138  
                                                   l25271 51D4  
                                                   l25247 512E  
                                                   l25191 4FEE  
                                                   l25167 89CA  
                                                   l25159 89A4  
                                                   l24535 71B6  
                                                   l24519 717A  
                                                   l22855 7B0C  
                                                   l22919 493C  
                                                   l23655 28C2  
                                                   l23399 234E  
                                                   l21887 2ECA  
                                                   l21879 2EAA  
                                                   l21895 2EFC  
                                                   l21799 2D8E  
                                                   l23823 1C2A  
                                                   l23807 1BD6  
                                                   l23735 19CA  
                                                   l23727 1986  
                                                   l23719 1944  
                                                   l25431 2F7E  
                                                   l24625 73DA  
                                                   l24609 73AE  
                                                   l25417 42E4  
                                                   l22785 8822  
                                                   l25273 51E0  
                                                   l25185 4FDE  
                                                   l27201 1132  
                                                   l27121 0F26  
                                                   l24385 6A66  
                                                   l22689 58EE  
                                                   l24481 6294  
                                                   l24457 6200  
                                                   l22953 49F2  
                                                   l23913 1E50  
                                                   l23809 1BD8  
                                                   l25441 2FC8  
                                                   l24635 7400  
                                                   l22795 9328  
                                                   l25427 4314  
                                                   l25347 4196  
                                                   l25355 41C0  
                                                   l22779 880A  
                                                   l27051 4E86  
                                                   l27043 4D98  
                                                   l27211 1144  
                                                   l27203 1136  
                                                   l27123 0F32  
                                                   l24475 6280  
                                                   l24459 6206  
                                                   l24491 8938  
                                                   l22875 7B42  
                                                   l22971 4A34  
                                                   l22939 49B0  
                                                   l23675 2918  
                                                   l23931 1E9E  
                                                   l23915 1E54  
                                                   l23827 1C56  
                                                   l23771 1A64  
                                                   l23763 1A3E  
                                                   l23755 1A1C  
                                                   l23747 1A04  
                                                   l23739 19EC  
                                                   l25531 313C  
                                                   l25373 4202  
                                                   l25285 4044  
                                                   l25269 51D0  
                                                   l27221 11A6  
                                                   l27213 114E  
                                                   l27125 0F42  
                                                   l24581 7256  
                                                   l24477 6288  
                                                   l24493 893C  
                                                   l22869 7B38  
                                                   l23693 2952  
                                                   l23941 1EBC  
                                                   l23917 1E60  
                                                   l23845 1CE2  
                                                   l23781 1AE2  
                                                   l25605 3268  
                                                   l25525 3122  
                                                   l25509 30FA  
                                                   l25445 2FE8  
                                                   l25437 2FA6  
                                                   l25383 423A  
                                                   l25279 4026  
                                                   l25199 500C  
                                                   l27047 4DCE  
                                                   l27063 4F40  
                                                   l27303 13C6  
                                                   l27231 11C2  
                                                   l27223 11AA  
                                                   l27135 0F88  
                                                   l27127 0F5E  
                                                   l22959 4A0C  
                                                   l23687 2938  
                                                   l23599 277E  
                                                   l23951 1F26  
                                                   l23791 1B4E  
                                                   l25631 32A2  
                                                   l25535 314E  
                                                   l25519 310A  
                                                   l25471 309A  
                                                   l25455 3024  
                                                   l24649 742C  
                                                   l25377 4218  
                                                   l25297 4090  
                                                   l27049 4E40  
                                                   l27065 4F82  
                                                   l27321 1418  
                                                   l27241 121E  
                                                   l27145 0FB4  
                                                   l23849 1D04  
                                                   l23777 1A88  
                                                   l25465 307A  
                                                   l25449 300A  
                                                   l25457 3050  
                                                   l24595 7382  
                                                   l25395 426C  
                                                   l25379 4226  
                                                   l27091 8CCC  
                                                   l27067 4F86  
                                                   l27139 0F9A  
                                                   l22987 4A6E  
                                                   l25811 3E1A  
                                                   l23971 1FAC  
                                                   l23947 1F04  
                                                   l23939 1EBA  
                                                   l23875 1D7A  
                                                   l23867 1D5A  
                                                   l23883 1D98  
                                                   l23779 1ACC  
                                                   l25707 33CE  
                                                   l25731 3446  
                                                   l25619 328C  
                                                   l25555 31AC  
                                                   l25459 3066  
                                                   l25389 424A  
                                                   l27405 1590  
                                                   l27317 13F6  
                                                   l27229 11B8  
                                                   l27157 0FEE  
                                                   l24669 8F04  
                                                   l22989 4A76  
                                                   l25725 3428  
                                                   l25709 33E2  
                                                   l25661 330C  
                                                   l25557 31B8  
                                                   l25549 3188  
                                                   l25399 4280  
                                                   l27511 17B8  
                                                   l27423 1604  
                                                   l27415 15F2  
                                                   l27407 159A  
                                                   l27335 142A  
                                                   l27271 133A  
                                                   l27247 122C  
                                                   l27239 121A  
                                                   l27183 10B8  
                                                   l27175 1060  
                                                   l25815 3E3C  
                                                   l25751 3CD8  
                                                   l23967 1F8A  
                                                   l25639 32C0  
                                                   l25591 322E  
                                                   l25559 31C6  
                                                   l25479 30B8  
                                                   l25735 3452  
                                                   l27441 1678  
                                                   l27433 1666  
                                                   l27425 160E  
                                                   l27417 15F6  
                                                   l27361 14B4  
                                                   l27337 142E  
                                                   l27329 1424  
                                                   l27281 1388  
                                                   l27273 134A  
                                                   l27265 12FC  
                                                   l27193 10E4  
                                                   l27185 10BC  
                                                   l25825 3E7C  
                                                   l25729 343A  
                                                   l25681 3364  
                                                   l25665 331E  
                                                   l25569 31E8  
                                                   l25489 30C6  
                                                   l27531 17F0  
                                                   l27523 17E6  
                                                   l27515 17DA  
                                                   l27435 166A  
                                                   l27259 1286  
                                                   l27179 1094  
                                                   l25851 3F3E  
                                                   l25771 3D42  
                                                   l25763 3D20  
                                                   l25827 3EBC  
                                                   l25755 3CE6  
                                                   l23987 1FF6  
                                                   l23899 1E08  
                                                   l25675 3340  
                                    write_package@package 0011  
                                   _eusart1RxStatusBuffer 0274  
                                                   l27541 1852  
                                                   l27373 14FA  
                                                   l27357 1492  
                                                   l27293 13AC  
                                                   l27277 1366  
                                                   l27197 110E  
                                                   l25829 3ED2  
                                                   l25597 324C  
                                                   l27551 186A  
                                                   l27471 1742  
                                                   l27391 155A  
                                                   l27367 14C0  
                                                   l27287 13A6  
                                                   l25871 3FA0  
                                                   l25783 3D7A  
                                                   l25759 3D08  
                                                   l23999 2030  
                                                   l27623 6522  
                                                   l27561 189A  
                                                   l27529 17EC  
                                                   l27481 1770  
                                                   l27377 151E  
                                                   l27369 14C6  
                                                   l25881 3FBC  
                                                   l25873 3FA6  
                                                   l27609 648E  
                                                   l19723 8874  
                                                   l27563 18A0  
                                                   l27555 188C  
                                                   l27475 1764  
                                                   l27459 1702  
                                                   l27395 157E  
                                                   l27387 1530  
                                                   l27379 1522  
                                                   l27299 13B4  
                                                   l25875 3FAA  
                                                   l25891 3FD0  
                                                   l25787 3D9C  
                                                   l27493 1776  
                                                   l27397 1582  
                                                   l25885 3FC2  
                                                   l25877 3FB6  
                                                   l27629 654C  
                                                   l19911 8010  
                                                   l25799 3DD8  
                                                   l27639 656A  
                                                   l27497 1788  
                                                   l27569 18A6  
                                                   l19915 8016  
                                                   l19933 808C  
                                                   l19925 8022  
                                                   l19919 801C  
                                                   l27599 6478  
                                                   l19955 84CE  
                                                   l19981 8B76  
                                                   l19965 84DA  
                                                   l19991 8B84  
                                                   l19959 84D4  
                                                   l19985 8B7C  
                                                   l19997 8B8A  
                                                   _ADACQ 000F5C  
                                       __end_of_I2C1_Open 82A6  
                                                   _ADCAP 000F5D  
                                                   _ADACT 000F56  
                                   __end_of_saveNewSerial 867C  
                                                   ?_main 0001  
                                                   _ADCLK 000F57  
                                                   _ADCNT 000F67  
                                                   _ADPCH 000F5F  
                                                   _ADREF 000F58  
                                         __end_of___awdiv 819E  
                          ?_keeloq_classic_decrypt_packet 0038  
                                         __end_of___lbdiv 93C8  
                                                   _ADPRE 000F5E  
                                                   _ADRPT 000F66  
                                         __end_of___lbmod 972C  
                                            _zeroCrossing 0079  
                                         __end_of___lldiv 8328  
                                                   _T1CLK 000FD2  
                                         ___awdiv@divisor 0016  
                                                   _T1CON 000FCF  
                                                   u30100 66F8  
                                                   u30020 6652  
                                                   u30110 6706  
                                                   u30040 666A  
                                                   _T2CON 000FBD  
                                                   u30130 6720  
                                                   u30300 61DA  
                                                   u30070 66A0  
                                                   u30320 6200  
                                                   u30170 907A  
                                                   u30330 6216  
                                                   u30180 909E  
                                                   u32110 5166  
                                                   u24030 6BE2  
                                                   u32200 4056  
                                                   u32210 4066  
                                                   u32130 518C  
                                                   u32050 5148  
                                                   u30290 61CA  
                                                   u30450 8952  
                                                   u33010 321A  
                                                   u23500 7900  
                                                   u32220 4076  
                                                   u30380 6264  
                                                   u25100 54B2  
                                                   _T2HLT 000FBE  
                                                   u23270 9B2A  
                                                   u32070 5152  
                                                   u23328 84E6  
                                                   u23520 791E  
                                                   u24240 6E00  
                                                   u25120 54C0  
                                                   u33120 32E0  
                                                   u23329 84F8  
                                                   u34001 1042  
                                                   u25025 8D28  
                                                   u33121 32DE  
                                                   u23338 8B96  
                                                   u23530 7932  
                                                   u30730 739A  
                                                   u32090 515C  
                                                   u25130 54CE  
                                                   u26010 7A1C  
                                                   u23339 8BA8  
                                                   u23348 8FF0  
                                                   u23540 7940  
                                                   u30820 73D4  
                                                   u30660 736E  
                                                   u32500 4236  
                                                   u32420 41D2  
                                                   u24180 6D5A  
                                                   u25140 54D4  
                                                   u24420 8160  
                                                   u23349 9002  
                                                   u23470 78BA  
                                                   u30750 73A4  
                                                   u32270 40DA  
                                                   u34030 10C8  
                                                   u25230 5564  
                                                   u25070 546E  
                                                   u26030 94A0  
                                                   u34111 120E  
                                                   u30680 7378  
                                                   u32600 42AE  
                                                   u32360 4160  
                                                   u24280 902A  
                                                   u25320 55E4  
                                                   u25240 5572  
                                                   u34041 10D6  
                                                   u23298 802E  
                                                   u23490 78F2  
                                                   u32450 41E6  
                                                   u32290 40F6  
                                                   u34210 1394  
                                                   u25410 86BC  
                                                   u25250 5578  
                                                   u33410 3CFC  
                                                   u26130 82D8  
                                                   u33330 33F6  
                                                   u33250 338E  
                                                   u33170 332C  
                                                   u23299 8040  
                                                   u23388 8E78  
                                                   u30860 73F6  
                                                   u34140 1240  
                                                   u24460 93AA  
                                                   u23820 8AF0  
                                                   u25340 560C  
                                                   u25180 552C  
                                                   u32700 2FFE  
                                                   u23389 8E8A  
                                                   u25181 552A  
                                                   u30950 743A  
                                                   u30870 73FC  
                                                   u32550 427C  
                                                   u31910 5086  
                                                   u31670 8990  
                                                   u24630 5C18  
                                                   u25430 8782  
                                                   u33430 3D36  
                                                   u34151 1272  
                                                   u26160 8EB2  
                                                   u30960 7440  
                                                   u32640 4308  
                                                   u31840 5042  
                                                   u25600 2EA4  
                                                   u33360 340A  
                                                   u34401 165A  
                                                   u34081 119A  
                                                   u30970 7446  
                                                   u30890 740C  
                                                   u31930 5090  
                                                   u31850 5050  
                                                   u27050 7B1A  
                                                   u28010 479A  
                                                   u27210 49C6  
                                                   u33290 33A8  
                                                   u23755 7588  
                                                   u26340 5F7E  
                                                   u26260 6F8C  
                                                   u31860 5060  
                                                   u30980 8EEC  
                                                   u24660 5C76  
                                                   u28020 47B4  
                                                   u27140 4924  
                                                   u33460 3D6E  
                                                   u25620 2ED6  
                                                   u32900 3198  
                                                   u31861 505E  
                                                   u26350 5F96  
                                                   u32590 42A6  
                                                   u31950 509A  
                                                   u23790 8C16  
                                                   u25390 869A  
                                                   u27230 49DE  
                                                   u33630 3F2E  
                                                   u25630 38F4  
                                                   u32670 2F9A  
                                                   u34191 1358  
                                                   u30991 8EFA  
                                                   u23775 75F8  
                                                   u31880 5074  
                                                   u28120 486C  
                                                   u33480 3D90  
                                                   u25640 38FA  
                                                   u31970 50A4  
                                                   u28050 4802  
                                                   u27330 4AAA  
                                                   u28210 22C8  
                                         __end_of___lwdiv 8EE2  
                                                   u34371 15E6  
                                                   u34291 1484  
                                                   u26380 5FDC  
                                                   u26460 5670  
                                                   u27420 4B20  
                                                   u27260 4A1C  
                                                   u25740 3A44  
                                                   u32940 31E2  
                                                   u34621 6536  
                                                   u26390 5FEE  
                                                   u31990 50C8  
                                                   u27190 4964  
                                                   u33590 3EEE  
                                                   u25830 3B26  
                                                   u28240 22FA  
                                                   u32880 315E  
                                                   u33921 8B64  
                                                   u34561 1846  
                                                   u28090 484A  
                                                   u27610 5AD0  
                                                   u27290 4A44  
                                                   u25690 3988  
                                                   u33851 4ED4  
                                                   u33931 0F50  
                                                   u25940 3C24  
                                                   u25860 3B64  
                                                   u29220 1CA8  
                                                   u33861 4F32  
                                                   u26910 9322  
                                                   u33870 4F96  
                                                   u26670 57DE  
                                                   u24990 810C  
                                                   u28430 24A0  
                                                   u29230 1CB6  
                                                   u32990 320A  
                                                   u33951 0F7A  
                                                   u26920 9338  
                                                   u27800 5BB0  
                                                   u27640 5AEE  
                                                   u28520 257A  
                                                   u29240 1D14  
                                                   u26850 87EE  
                                                   u27570 5AAE  
                                                   u28610 2668  
                                                   u29410 1ECA  
                                                   u29250 1D1A  
                                                   u29090 1A7A  
                                                   u34667 8588  
                                                   u33891 4FAA  
                                                   u26780 599A  
                                                   u28700 272C  
                                                   u28620 2684  
                                                   u28540 25A4  
                                                   u29500 200A  
                                                   u29420 1ED8  
                                                   _T2TMR 000FBB  
                                                   u34677 85FE  
                                                   u33981 0FE0  
                                                   u28621 2682  
                                                   u27910 4674  
                                                   u28710 2734  
                                                   u28550 25AA  
                                                   u28470 2522  
                                                   u29510 203E  
                                                   u29270 1D6A  
                                                   u33991 1018  
                                                   u29511 203C  
                                                   u26960 7EC6  
                                                   u27760 5B82  
                                                   u28800 27F6  
                                                   u28720 275A  
                                                   u28640 26CC  
                                                   u28560 25C6  
                                                   u28480 252A  
                                                   u29280 1D70  
                                                   u28801 27F4  
                                                   u28721 2758  
                                                   u28641 26CA  
                                                   u28561 25C4  
                                                   u26890 881C  
                                                   u28810 2804  
                                                   u28650 26DA  
                                                   u28490 2546  
                                                   u29530 2056  
                                                   u29450 1F50  
                                                   u29370 1E70  
                                                   u29290 1D88  
                                                   _T2RST 000FC0  
                                                   u28491 2544  
                                                   u29291 1D86  
                                                   u27940 473C  
                                                   u27860 5BF8  
                                                   u28900 2930  
                                                   u28580 2620  
                                                   u29620 20FE  
                                                   u29540 2064  
                                                   u29460 1F5E  
                                                   u29380 1E76  
                                                   u27861 5BF6  
                                                   u28581 261E  
                                                   u29621 20FC  
                                                   u28750 2796  
                                                   u28590 262E  
                                                   u29720 9AE4  
                                                   u27960 4754  
                                                   u29560 207A  
                                                   i2l106 948C  
                                                   u28930 2950  
                                                   u28850 2848  
                                                   u28770 27A4  
                                                   u29490 2004  
                                                   u28940 296E  
                                                   u28860 2850  
                                                   u28941 296C  
                                                   u27990 478C  
                                                   u28950 297C  
                                                   u28790 27D8  
                                                   u29671 374E  
                                                   u29690 38D8  
                                                   u29985 9916  
                                                   u29986 9918  
                                                   i2l870 004C  
                                                   i2l872 006A  
                                                   i2l873 0080  
                                                   i2l874 0076  
                                                   i2l867 0030  
                                         ___awdiv@counter 0018  
                                              _CloseOrder 9754  
                              __end_of_i2c1_fsmStateTable 0F21  
                                                   _OSCEN 000EDC  
                                                   _TMR0H 000FD4  
                                                   _TMR1H 000FCE  
                                                   _TMR0L 000FD3  
                                                   _TMR1L 000FCD  
                                                   _RFBit 0080  
                                                   _PORTB 000F8E  
                               __end_of_SaveNVM_VarSystem 9144  
                          DecryptPacket_12BIT@commandType 00E4  
                                                   _TRISA 000F88  
                                                   _TRISB 000F89  
                                                   _TRISC 000F8A  
                                                   _TRISD 000F8B  
                                                   _TRISE 000F8C  
                                  ??_I2C1_MasterGetRxData 0010  
                                   ?_I2C1_DO_RX_NACK_STOP 0001  
                             validateRemoteSerialNumber@i 003A  
                             validateRemoteSerialNumber@j 0039  
                                     ___lmul@multiplicand 0021  
                               ?_TMR0_SetInterruptHandler 0010  
                                           _InitSoftStart 8AB6  
                              ??_I2C1_CallbackReturnReset 001B  
                                       ??_I2C1_MasterOpen 0010  
                                        _idxAdcAquisition 0088  
                                    _EUSART1_Transmit_ISR 9460  
                                       ??_I2C1_MasterStop 0010  
                                       ??_I2C1_Initialize 0010  
                               GetMotorPower@defineatraso 0013  
                                        __end_of_TMR0_ISR 9812  
                                        __end_of_TMR1_ISR 938E  
                                        __end_of_TMR2_ISR 6884  
                                    _idxSaveEnergyADCHist 0087  
                                                   _rfCMD 003B  
                                                   _aux_i 0071  
                          actionZone_Closed@typeOpenOrder 0021  
                                        _setFlashLigth_ON 9312  
                                          ?_EUSART1_Write 0001  
                                          readbutton@key1 007C  
                                   SetSegmentValueMain@d1 001D  
                                          readbutton@key2 0153  
                                   SetSegmentValueMain@d2 001C  
                                 __end_of_TMR1_Initialize 9252  
                                    setFlashLigth_ON@Freq 0010  
                                                   pclath 000FFA  
       rd1RegCompleteHandler@i2c1_master_example$F500@ptr 0019  
                                                   pclatu 000FFB  
                                         __end_of_sumHIST 735C  
                                         __end_of_sm_init 8D90  
                                                   tablat 000FF5  
       rd2RegCompleteHandler@i2c1_master_example$F511@ptr 0019  
       wr2RegCompleteHandler@i2c1_master_example$F523@ptr 0019  
       wr1RegCompleteHandler@i2c1_master_example$F517@ptr 0019  
     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr 0019  
                                          ??_EUSART1_Read 0010  
                                                   plusw0 000FEB  
                                                   plusw2 000FDB  
                                 __end_of_sm_execute_main 3480  
                                                   ttemp5 0051  
                                                   ttemp6 0054  
                                                   ttemp7 0058  
                                                   status 000FD8  
                                         ??_ControlLights 0016  
                                                   wtemp8 0051  
                                            ??_I2C1_DO_RX 001B  
                                            ??_I2C1_DO_TX 001B  
                                         ??_ControlInputs 0010  
                                         ___lbdiv@divisor 0010  
              __end_of_EUSART1_DefaultFramingErrorHandler 9C6E  
                    ??_EUSART1_DefaultFramingErrorHandler 0001  
                     ?_EUSART1_DefaultFramingErrorHandler 0001  
                      _EUSART1_DefaultFramingErrorHandler 9C6C  
                                         _TMR1_WriteTimer 9936  
                                  ??_I2C1_DO_ADDRESS_NACK 001B  
                                         ___lbdiv@counter 0012  
                            __end_of_getStateOpenPosition 6E5E  
                                            ??_I2C1_Close 0010  
                                          ??_InitReceiver 0010  
                        VerifyElectricalBrake@actualState 0011  
                      i2VerifyElectricalBrake@actualState 0002  
                                         __initialization 76F6  
                                 cmdMemoryIsEmpty@cmdType 0031  
                             ?_SetSegmentValueIntermitent 0010  
                              __end_of_EUSART1_Initialize 8428  
                                            __end_of_main 65C0  
                                              _ReadSerial 86EC  
                         sm_execute_menuConfiguration@psm 00E9  
                             __end_of_DecryptPacket_12BIT 7F78  
                                          _refreshCurrent 9188  
                                          ??_InitSoftStop 0014  
                      validateRemoteSerialNumber@position 0033  
                                 __end_of_TMR2_Initialize 9576  
                             ?_INTERRUPT_InterruptManager 0001  
                                          _refreshSegment 8328  
                                  ??_I2C1_MasterOperation 0020  
                                _TMR2_SetInterruptHandler 9B44  
                                                  ??_main 003B  
                                       ??_WWDT_Initialize 0010  
                                           __activetblptr 000003  
                                       Segments_Set@value 0001  
                                   saveNewSerial@position 00DC  
                      __end_of_validateRemoteSerialNumber 5F6E  
                              _validateRemoteSerialNumber 5DCA  
                                          ?_InitSoftStart 0001  
                                   ?_EUSART1_Transmit_ISR 0001  
                                           sumEnergyADC@i 0018  
                                      __end_of_I2C1_DO_RX 851C  
                                      __end_of_I2C1_DO_TX 8090  
                                       ?_InitWalkAutoTime 0001  
                                       ??_controlVelocity 00DA  
                                               ??_RGB_Set 0010  
                              ?_ControlDecelarationFactor 0001  
                                    __end_of_getSerialCmd 8FD0  
                  __end_of_SetSegmentValueIntermitentMain 9AB2  
                          _SetSegmentValueIntermitentMain 9A9E  
                                      ReadSerial@position 002F  
                                      __end_of_I2C1_Close 98C0  
                                                  _ADACCH 000F71  
                                                  _ADACCL 000F70  
                                 ?_I2C1_Read1ByteRegister 0022  
                                      ??_InitWalkAutoTime 0010  
                                                  _ADCON0 000F60  
                                                  _ADCON1 000F59  
                                                  _ADCON2 000F5A  
                                                  _ADCON3 000F5B  
                                                  _ADERRH 000F6F  
                                                  _ADERRL 000F6E  
                                                  _ADLTHH 000F6B  
                                                  _ADLTHL 000F6A  
                                                  _ADRESH 000F64  
                                                  _ADRESL 000F63  
                                                  _ADSTAT 000F65  
                                                  _ADUTHH 000F6D  
                                        ___awdiv@dividend 0014  
                                                  _ADUTHL 000F6C  
                                                  _ANSELA 000F11  
                                                  _ANSELB 000F19  
                                                  _ANSELC 000F21  
                                                  _ANSELD 000F26  
                                                  _ANSELE 000F2E  
                                                  _T0CON0 000FD5  
                                                  _T0CON1 000FD6  
                                                  _T1GATE 000FD1  
                                                  _T1GCON 000FD0  
                                     readRFButtons@serial 0142  
                                                  _IOCBN3 00789B  
                                                  _IOCBP3 0078A3  
                                                  _RC1REG 000F99  
                                           _readRFButtons 610C  
                                                  _RC1STA 000F9D  
                                                  _RC3PPS 000EFA  
                                 TMR1_WriteTimer@timerVal 0001  
                                                  _RC4PPS 000EFB  
                                                  _ODCONA 000F0F  
                                                  _ODCONB 000F17  
                                                  _ODCONC 000F1F  
                                                  _ODCOND 000F24  
                                                  _ODCONE 000F2C  
                                                  _RC7PPS 000EFE  
                                   __end_of_GetMotorPower 7950  
                                                  i2l2032 6CEA  
                                                  i2l1147 9948  
                                                  i2l2211 5314  
                                                  i2l2207 5222  
                                                  i2l2144 8358  
                                                  i2l1266 6794  
                                                  i2l1620 4CDA  
                                                  i2l2156 83A8  
                                                  i2l2229 5330  
                                                  i2l2149 8376  
                                                  i2l1277 681A  
                                                  i2l2238 53FE  
                                                  i2l2256 79E0  
                                                  i2l2344 8910  
                                                  i2l2339 8906  
                                                  _INLVLA 000F0D  
                                                  _INLVLB 000F15  
                                                  _INLVLC 000F1D  
                                                  _INLVLD 000F22  
                                                  _INLVLE 000F2A  
                                               ??_Decrypt 001D  
                                  calculateMean@meanValue 0010  
                                                  _OSCFRQ 000EDE  
                         __end_ofi2_VerifyElectricalBrake 8914  
                                  read_eusartparser@state 001F  
                                                  _TMR0IE 007615  
                                                  _TMR0IF 007655  
                                                  _RX1PPS 000EB5  
                            __end_of_refreshADCZeroOffset 706C  
                                           ?_init_package 0010  
                                                  _TX1REG 000F9A  
                                                  _TX1STA 000F9E  
                                __end_of_cmdMemoryIsEmpty 7E58  
                                       ?_I2C1_MasterClose 0001  
                                                  _DecCHK 93FC  
                                 __end_ofi2_GetMotorPower 7A0E  
                                                  _RFFull 00D7  
                                rdBlkRegCompleteHandler@p 0019  
                                               ??_ReadADC 0002  
                                 ??_I2C1_MasterDisableIrq 0010  
                                       ?_I2C1_MasterStart 0001  
                                         eusartparser@pos 00EC  
                    __end_of_sm_execute_menuConfiguration 229A  
                            _sm_execute_menuConfiguration 1942  
                                       ?_I2C1_MasterWrite 0001  
                                                  _HopCHK 8090  
                                ?_I2C1_MasterWaitForEvent 0001  
                                      ??_I2C1_MasterClose 0010  
                                        _I2C1_DO_TX_EMPTY 8B72  
                                 controlSelectRemote@temp 00E8  
                                  _SumEnergyADCHist_array 0260  
                                      ??_I2C1_MasterStart 0010  
                                      ??_I2C1_MasterWrite 0022  
                                       _decrementTimeslot 97C6  
                    __end_of_TMR1_DefaultInterruptHandler 9C6A  
                            _TMR1_DefaultInterruptHandler 9C68  
                                  __end_of_refreshCurrent 91CC  
                                           ?_read_package 0011  
                                                  ___lmul 8D90  
                                         ??_LoadManufCode 0010  
                                                  ___wmul 97A0  
                                  __end_of_refreshSegment 83AA  
                                               ??___awdiv 0018  
                                               ??___lbdiv 0011  
                                               ??___lbmod 0011  
                                               ??___lldiv 0018  
                                      ?_decrementTimeslot 0001  
                                               ??___lwdiv 0014  
                                       ??_i2c_writeNBytes 0028  
                                           _load_New_Menu 4322  
                             setValueToEdit@posindex_7062 00E2  
                             __end_of_keeloqDecryptPacket 5A26  
                                ?_EUSART1_SetErrorHandler 0010  
                                                  _memcpy 91CC  
                                        ?_TMR0_Initialize 0001  
                                                  clear_0 7786  
                                                  clear_1 7792  
                                                  clear_2 779E  
                                                  clear_3 77AA  
                                                  clear_4 77B6  
                                        ___awdiv@quotient 001A  
                                       ??_WWDT_TimerClear 0010  
                      __end_of_sm_execute_ControlLearning 29E2  
                              _sm_execute_ControlLearning 229A  
                                                  isa$std 000001  
                        ??_EUSART1_SetOverrunErrorHandler 0012  
                         ?_EUSART1_SetOverrunErrorHandler 0010  
                                       ??_WWDT_SoftEnable 0010  
                                ??_I2C1_DO_SEND_ADR_WRITE 0011  
                          SetSegmentValueIntermitent@time 0011  
                                  setValueToEdit@menuType 00E0  
                                       ?_I2C1_SetCallback 0010  
                                  ??_I2C1_DO_RX_NACK_STOP 0010  
                                           ??_ShowVersion 001E  
                                         _ADCC_Initialize 8F32  
                                     ??_decrementTimeslot 0002  
                                             ?_CloseOrder 0001  
                                   _I2C1_DO_SEND_ADR_READ 9B14  
                                          _PMD_Initialize 991A  
                                              _StateTRIAC 0077  
                                           ?_eusartparser 00E0  
                           ?_I2C1_SetDataCompleteCallback 0015  
                                      ??_I2C1_SetCallback 0014  
                                            __mediumconst 0000  
                          __end_of_I2C1_Read1ByteRegister 8C88  
                                    __end_of_ControlMotor 51F2  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                           Decrypt@Buffer 0022  
                                                  tblptru 000FF8  
                                               ??_sumHIST 0014  
                                               ??_sm_init 0017  
                                   SaveNVM_VarSystem@page 00D8  
                              __end_of_actionZone_Closing 48C0  
                               ?_ADCC_GetSingleConversion 0001  
                                         ??_EUSART1_Write 0010  
                       __end_of_ControlDecelarationFactor 9A8A  
                TMR2_SetInterruptHandler@InterruptHandler 0010  
                TMR1_SetInterruptHandler@InterruptHandler 0010  
                TMR0_SetInterruptHandler@InterruptHandler 0010  
                                        ??_ControlCurrent 0023  
                                  setValueToEdit@posindex 00E1  
                                 __end_of_TMR1_WriteTimer 9952  
                                         _eusart1RxBuffer 027C  
                                          ?_readRFButtons 0001  
                                        ___lbdiv@dividend 0011  
                                 _I2C1_DO_RX_NACK_RESTART 9BC2  
                                         _eusart1TxBuffer 0284  
                                     _SetSegmentValueMain 9952  
                                        ?_TMR1_Initialize 0001  
                                          ??_init_package 0012  
                                       _SYSTEM_Initialize 94F0  
                              __end_of_actionZone_Opening 4B2E  
                          I2C1_SetDataCompleteCallback@cb 0015  
                                         ___lbmod@divisor 0010  
                                              __accesstop 0060  
                                 __end_of__initialization 77BC  
                                         ___lbmod@counter 0012  
                                           Decrypt@packet 001B  
                           setValueToEdit@haveValueToEdit 00E3  
                                        ?_sm_execute_main 00ED  
                                          _setValueToEdit 29E2  
                                      getSerialCmd@serial 001B  
                         I2C1_MasterOperation@returnValue 0021  
                                      ?_SYSTEM_Initialize 0001  
                                           ___rparam_used 000001  
                               __end_of_decrementTimeslot 97EC  
                                           ??_I2C1_Poller 0020  
                                           ?_Segments_Set 0001  
                                          ??_read_package 0018  
                         ??_setPositionInvertionInClosing 00D8  
                           ?_sm_execute_menuConfiguration 00E9  
                           __end_of_EUSART1_RxDataHandler 98E2  
                                 _rdBlkRegCompleteHandler 92D2  
                                          __pcstackCOMRAM 0001  
                                         ?_refreshCurrent 0001  
                                   __end_of_getKeyPressed 9A02  
                                            __pidataBANK0 9C64  
                                            __pidataBANK1 9C6E  
                                            __pidataBANK2 9C02  
                                            __pidataBANK3 9812  
                                            __pidataBANK4 744C  
                                     ??_SYSTEM_Initialize 0014  
                                             ?_ReadSerial 002E  
                        __end_of_I2C1_MasterEnableRestart 9C58  
                                          ?_load_New_Menu 0001  
                               sm_execute_ControlGate@psm 00E7  
                                               ?_TMR0_ISR 0001  
                                         ?_refreshSegment 0001  
                                               ?_TMR1_ISR 0001  
                                               ?_TMR2_ISR 0001  
                           ?_TMR1_DefaultInterruptHandler 0001  
                         ??_setPositionInvertionInOpening 0032  
                                    ?_SetSegmentValueMain 001C  
                                        ?_TMR2_Initialize 0001  
                                        ___lbdiv@quotient 0013  
                                  __end_of_PMD_Initialize 9936  
                            ??_I2C1_DO_SEND_RESTART_WRITE 0010  
                                 ??_I2C1_MasterSendTxData 0010  
                                         ??_InitSoftStart 0014  
                                    __end_of_EUSART1_Read 90FE  
                                          ??_eusartparser 00E2  
                                  ??_EUSART1_Transmit_ISR 0001  
                                    _getStateOpenPosition 6D48  
                               write_eusartparser@package 0016  
                                           ?_RemoveSerial 00D8  
                                    __end_of_InitReceiver 99D2  
                         actionZone_Closing@typeOpenOrder 0033  
                             __end_of_EUSART1_Receive_ISR 7D2E  
                                   __end_of_I2C1_DO_RESET 9B9E  
                          keeloqDecryptPacket@commandType 00E9  
                                        sumEnergyADC@sumE 0014  
                        verifyProgramingMode@classic_data 0010  
                                       __end_of_ReqResync 99EA  
                             VerifyFollowMe@securityClose 0010  
                                        ??_confirmpackage 0015  
                               __end_of_SYSTEM_Initialize 951E  
                                     __end_of_ShowVersion 89EC  
                                           _eusart1RxHead 008C  
                                           _eusart1TxHead 008E  
                                           _eusart1RxTail 008B  
                                              __pbssBANK0 0060  
                                              __pbssBANK1 0100  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                  __end_of_setValueToEdit 2F7C  
                                           _eusart1TxTail 008D  
                         __end_of_I2C1_MasterWaitForEvent 9BC2  
                       _EUSART1_TxDefaultInterruptHandler 02ED  
                                            _GetOpenOrder 5C00  
                                    __end_of_InitSoftStop 906A  
                         ??_EUSART1_SetRxInterruptHandler 0012  
                          validateRemoteSerialNumber@mask 0035  
                                cmdMemoryIsEmpty@position 002E  
                           __end_of_rd2RegCompleteHandler 967E  
                                    I2C1_Open@returnValue 0011  
                                                 ?_DecCHK 0010  
                                           ?_WaitPreFlash 0001  
                                        ?i2_GetMotorPower 0001  
                            __end_of_SetSegmentValueLearn 7168  
                                       ?_controlTimeslots 0001  
                           __end_of_wr2RegCompleteHandler 9652  
                                           ?_NormalKeyGen 0026  
                                   __end_of_sm_send_event 8C2C  
                                   _rd1RegCompleteHandler 967E  
                                                 ?_HopCHK 0024  
                                          ??_Segments_Set 0001  
              validateRemoteSerialNumber@VerifyOnlySerial 0032  
                                              _edit_Param 0046  
                                       _I2C1_DO_SEND_STOP 9BDA  
                                      ??_controlTimeslots 0004  
                                           _button_struct 004C  
                                   _wr1RegCompleteHandler 96AA  
                         __end_of_EUSART1_SetErrorHandler 9B94  
                                       getHopCode@tempHop 0020  
                                       getHopCode@tempPos 0022  
                        __end_of_TMR0_SetInterruptHandler 9B62  
                                                 ?___lmul 001D  
                                      ?_I2C1_DO_SEND_STOP 0001  
                                                 ?___wmul 0010  
                                              ??_TMR0_ISR 0003  
                                              _getHopCode 6AF4  
                                              ??_TMR1_ISR 000A  
                                              ??_TMR2_ISR 0005  
                                 __end_of_ADCC_Initialize 8F82  
                                         _I2C1_MasterOpen 9A1A  
                                   ??_SetSegmentValueMain 001D  
                                         _I2C1_MasterStop 9C50  
                                         _I2C1_Initialize 9AB2  
                                     __end_of_I2C1_Poller 9AF8  
                                __end_of_setFlashLigth_ON 9350  
                                                 _ADFLTRH 000F73  
                                                 _ADFLTRL 000F72  
                                                 ?_memcpy 0010  
                                    readRFButtons@keyType 007E  
                                       __end_of_StopOrder 98FE  
                                          ___lmul@product 0025  
                                                 _ADPREVH 000F62  
                                                 _ADPREVL 000F61  
                              __end_of_ResetDefaultMemory 6434  
                                                 _ADSTPTH 000F69  
                                                 _ADSTPTL 000F68  
                          _menuConfiguration_stateMachine 02BD  
                                         ?_PMD_Initialize 0001  
                       keeloq_classic_decrypt_packet@data 0038  
                                  ?_I2C1_DO_SEND_ADR_READ 0001  
                                           _erroranterior 014C  
                                     ??_I2C1_DO_SEND_STOP 0010  
                  __end_of_EUSART1_SetFramingErrorHandler 9B8A  
                          _EUSART1_SetFramingErrorHandler 9B80  
                                    _refreshADCZeroOffset 6F6C  
                                ??_sm_execute_ControlGate 00E9  
                                   i2c_readDataBlock@data 0024  
                                   _VerifyElectricalBrake 87CA  
                                                 i2l13005 98DE  
                                                 i2l14431 799A  
                                                 i2l14423 7962  
                                                 i2l14433 79A2  
                                                 i2l14443 79D0  
                                                 i2l24211 67B6  
                                                 i2l14453 7A02  
                                                 i2l24221 67E0  
                                                 i2l14711 4CE4  
                                                 i2l14631 4B4C  
                                                 i2l24231 6800  
                                                 i2l14473 88E6  
                                                 i2l14723 4D08  
                                                 i2l14635 4B62  
                                                 i2l14627 4B40  
                                                 i2l14733 4D2C  
                                                 i2l14717 4CF2  
                                                 i2l14637 4B68  
                                                 i2l14901 83A4  
                                                 i2l24253 684E  
                                                 i2l24245 6832  
                                                 i2l14727 4D14  
                                                 i2l14663 4BE0  
                                                 i2l14647 4B96  
                                                 i2l14479 88FE  
                                                 i2l14831 53A0  
                                                 i2l14807 5328  
                                                 i2l14681 4C48  
                                                 i2l14657 4BBE  
                                                 i2l14737 4D42  
                                                 i2l14691 4C76  
                                                 i2l14675 4C26  
                                                 i2l14843 53E4  
                                                 i2l14771 525E  
                                                 i2l14755 5216  
                                                 i2l24195 676C  
                                                 i2l24259 6864  
                                                 i2l24187 675A  
                                                 i2l14677 4C34  
                                                 i2l14679 4C42  
                                                 i2l14855 541A  
                                                 i2l14777 527C  
                                                 i2l14769 5254  
                                                 i2l16635 9486  
                                                 i2l14699 4C9E  
                                                 i2l14787 52A6  
                                                 i2l14867 8DF6  
                                                 i2l14891 837A  
                                                 i2l16655 7D28  
                                                 i2l14799 52E8  
                          actionZone_Opened@typeOpenOrder 0021  
                                   ?_getStateOpenPosition 0001  
                                          ??_RemoveSerial 00D9  
                                              _fimdecurso 0136  
                            ?_EUSART1_DefaultErrorHandler 0001  
                                       _I2C1_MasterIsNack 9B22  
                                                 _SP1BRGH 000F9C  
                                                 _SP1BRGL 000F9B  
                                              _dispStruct 0060  
                                                 _OSCCON1 000ED8  
                                                 _OSCCON3 000EDA  
                                               _I2C1_Open 8222  
                               ??_I2C1_DO_RX_NACK_RESTART 0010  
                                                 _RGB_Set 9AF8  
                                              _auxCounter 00FC  
                                         ??_readRFButtons 003B  
                                                 _OSCTUNE 000EDD  
                                       _I2C1_MasterSetIrq 9C14  
                                                 _SSP1ADD 000F93  
                                                 _SLRCONA 000F0E  
                                                 _SLRCONB 000F16  
                                                 _SLRCONC 000F1E  
                                                 _SLRCOND 000F23  
                                                 _SLRCONE 000F2B  
                                                 _WDTCON0 000ED2  
                                                 _SSP1BUF 000F92  
                                                 _WDTCON1 000ED3  
                                      ?_I2C1_MasterIsNack 0001  
                              ?_I2C1_DO_SEND_RESTART_READ 0001  
                          ??_I2C1_SetDataCompleteCallback 0019  
                                        ?_TMR1_WriteTimer 0001  
                                      ?_I2C1_MasterSetIrq 0001  
                            __end_of_generateErrorLearnig 8A54  
                                            _classic_data 0292  
                                          load_New_Menu@i 0023  
                                         ?_setValueToEdit 00DD  
                                                 _RFcount 006C  
                         ??_keeloq_classic_decrypt_packet 00D8  
                                                 _Decrypt 77C6  
                                  eusartparser@relcounter 00F7  
                                          ??_WaitPreFlash 0018  
                                                 _RFstate 0084  
                                      _i2c1_fsmStateTable 0F01  
                                          ??_NormalKeyGen 0028  
                                     ??_I2C1_MasterIsNack 0010  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F500 9626  
          _rd1RegCompleteHandler@i2c1_master_example$F500 95FA  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F511 95FA  
          _rd2RegCompleteHandler@i2c1_master_example$F511 95CE  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F523 9702  
          _wr2RegCompleteHandler@i2c1_master_example$F523 96D6  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F517 95CE  
                               __end_of_I2C1_DO_SEND_STOP 9BE2  
          _wr1RegCompleteHandler@i2c1_master_example$F517 95A2  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535 92D2  
        _rdBlkRegCompleteHandler@i2c1_master_example$F535 9292  
                               ??_rdBlkRegCompleteHandler 001B  
                          getCurrentComparator@tempOffset 0020  
                                                 _ReadADC 8DE6  
                                      I2C1_SetCallback@cb 0010  
                                           _write_package 951E  
                                     ??_I2C1_MasterSetIrq 0010  
                                     _controlSelectRemote 38DA  
                              __end_of_clearLearningValue 84A2  
                                                 _NextHop 028E  
                                                 __Hparam 0000  
                              __end_of_write_eusartparser 38DA  
                                                 __Lparam 0000  
                                         _WWDT_Initialize 9B3A  
                                         ??_load_New_Menu 0020  
                              ??_TMR2_SetInterruptHandler 0012  
                                               _ADC_array 0200  
                                            _getSerialCmd 8F82  
                                                 ___awdiv 811A  
                                                 ___lbdiv 938E  
                                                 ___lbmod 9702  
                                                 ___lldiv 82A6  
                                              _readInputs 7168  
                                         _controlVelocity 542A  
                                                 ___lwdiv 8E90  
                                           _OpenFullOrder 977A  
                                            __psmallconst 0F00  
                                     RemoveSerial@cmdType 00DB  
                   __end_of_setPositionInvertionInClosing 69BE  
                           _setPositionInvertionInClosing 6884  
                          ??_sm_execute_menuConfiguration 00EB  
                                     _EUSART1_is_rx_ready 9AD8  
                                          getHopCode@data 0016  
                                                 _difTime 0076  
                                                 __pcinit 76F6  
                                           ?_I2C1_DO_IDLE 0001  
                                           ?_I2C1_DO_RCEN 0001  
                                                 __ramtop 0F00  
                                  i2c_writeNBytes@address 003A  
                                   __end_of_getTypeRemote 9C0E  
                                    __end_of_init_package 9460  
                                                 __ptext0 6434  
                                                 __ptext1 2F7C  
                                                 __ptext2 1942  
                                                 __ptext3 29E2  
                                                 __ptext4 4322  
                                                 __ptext5 99BA  
                                                 __ptext6 38DA  
                                                 __ptext7 9C08  
                                                 __ptext8 8F82  
                                                 __ptext9 7A0E  
                                   ?_refreshADCZeroOffset 0001  
                                              _memoryTEMP 02A2  
                                      i2c_readDataBlock@d 002A  
                                _I2C1_MasterEnableRestart 9C54  
                          ??_TMR1_DefaultInterruptHandler 0001  
                               __end_of_I2C1_MasterIsNack 9B2E  
                            ?_I2C1_SetAddressNackCallback 0015  
                                               _T1CONbits 000FCF  
                   __end_of_setPositionInvertionInOpening 76F6  
                           _setPositionInvertionInOpening 7620  
                                                 _lastKey 0151  
                                              _readbutton 8914  
                                   _OSCILLATOR_Initialize 9A4A  
                                   OpenWalkOrder@diffTime 001A  
                                             _ShowVersion 8980  
                                    ?_controlSelectRemote 0001  
                             ?_validateRemoteSerialNumber 002E  
                                        _InitFullAutoTime 996C  
                               __end_of_I2C1_MasterSetIrq 9C1A  
                             checkNVM_VarSystem@saveParam 00DD  
                                                 _menu_st 0100  
                                __end_of_I2C1_DO_TX_EMPTY 8BD0  
                                  RemoveSerial@tempSerial 00DC  
                                       __end_of_setRGB_ON 7EEA  
                                      _EUSART1_Initialize 83AA  
                                ??_PIN_MANAGER_Initialize 0010  
                               ?_TMR1_SetInterruptHandler 0010  
                                              ?_I2C1_Open 0001  
                                                 _sumHIST 7262  
                                                 _sm_init 8D3A  
                                          _BufferRF_12BIT 014A  
                                             sumHIST@sumH 001C  
                                    __end_of_read_package 8F32  
                                                 _var_sys 0155  
                           ??_EUSART1_DefaultErrorHandler 0001  
                             ??_ControlDecelarationFactor 0010  
                                ?_I2C1_CallbackReturnStop 0019  
                                     init_package@package 0010  
                                           _OpenWalkOrder 875C  
                                    _zeroCrossingWaitTime 02FA  
                                       SetSegmentValue@d1 001D  
                                       SetSegmentValue@d2 001C  
                       __end_of_I2C1_DO_SEND_RESTART_READ 9BFA  
                                    end_of_initialization 77BC  
                              __end_of_I2C1_MasterSendAck 9C20  
                                    ?_EUSART1_is_rx_ready 0001  
                                     _I2C1_MasterClearIrq 9C26  
                                     ?_EUSART1_Initialize 0001  
                                               _PCON0bits 000FD7  
                                                 memcpy@d 0017  
                                                 memcpy@n 0014  
                                                 memcpy@s 0019  
                              __end_of_I2C1_MasterStartRx 9C48  
                             _EUSART1_OverrunErrorHandler 02E7  
                                  ?_rd1RegCompleteHandler 0019  
                                         _i2c_writeNBytes 8592  
                              ?_GetSecurityStateInClosing 0001  
                                  _I2C1_DO_SEND_ADR_WRITE 9B06  
                                       ?_cmdMemoryIsEmpty 002E  
                                          ?_write_package 0011  
                                           _calculateMean 8A54  
                            __end_of_sm_get_current_state 9AD8  
                                               i2u1502_40 5210  
                                               i2u1521_40 5354  
                                               i2u1522_40 5362  
                                               i2u1514_40 52DA  
                                               i2u1531_40 53C4  
                                               i2u1515_40 52E2  
                                               i2u1460_40 79B0  
                                               i2u1461_40 79BE  
                                               i2u1525_40 537C  
                                               i2u1509_40 5274  
                                               i2u1534_40 53F0  
                                               i2u1542_45 8E0E  
                                               i2u1463_40 79DC  
                                               i2u1535_40 53F6  
                                               i2u1527_40 5396  
                            __end_of_I2C1_DO_SEND_RESTART 9BEA  
                                               i2u1464_40 79F0  
                                               i2u1472_40 88F8  
                                               i2u1544_40 8338  
                                               i2u1465_40 79FE  
                                               i2u1537_40 5412  
                                               i2u1458_40 7978  
                                               i2u1546_40 8388  
                                    __end_of_eusartparser 1942  
                                               i2u1484_40 4BD2  
                                               i2u1468_40 88CA  
                                         _WWDT_TimerClear 98FE  
                                 __end_of_I2C1_MasterOpen 9A32  
                                  ?_wr1RegCompleteHandler 0019  
                                               i2u1486_40 4BF6  
                                               i2u1487_40 4C06  
                                               i2u1479_40 4B62  
                                               i2u1910_48 9800  
                                               i2u2623_40 6CE2  
                                               i2u1488_40 4C16  
                                               i2u2536_40 97DE  
                                               i2u2624_40 6D36  
                                               i2u1904_48 7CBE  
                                               i2u1497_40 4D06  
                                   __end_of_ControlLights 4322  
                                               i2u1904_49 7CD0  
                                               i2u1906_48 7CEA  
                                               i2u1914_48 937C  
                                               i2u1906_49 7CFC  
                                               i2u1908_48 7D14  
                                               i2u3372_48 0056  
                                 __end_of_I2C1_MasterStop 9C54  
                                 __end_of_I2C1_Initialize 9AC6  
                                               i2u3369_48 003E  
                                         ___lldiv@divisor 0014  
                                               i2u3468_47 9A6A  
                                   __end_of_ControlInputs 744C  
                   __end_of_EUSART1_SetRxInterruptHandler 9B76  
                           _EUSART1_SetRxInterruptHandler 9B6C  
                                               i2u2982_40 67A8  
                                             _I2C1_Poller 9AE8  
                                               i2u2985_40 67CC  
                        ??_SetSegmentValueIntermitentMain 001F  
                         ?_SetSegmentValueIntermitentMain 001C  
                                         _WWDT_SoftEnable 9C38  
                                         ___lldiv@counter 001C  
                                      ??_cmdMemoryIsEmpty 002F  
                                               i2u2997_48 6872  
                               ?_I2C1_CallbackReturnReset 0019  
                           __end_of_I2C1_MasterDisableIrq 9C60  
                                             _I2C1_Status 023C  
                              ?_GetSecurityStateInOpening 0001  
                                            _ControlMotor 4FB8  
                                            _done_changes 014E  
                                  SaveNVM_VarSystem@point 00DB  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                             ?_getHopCode 0016  
                                          ?_OpenFullOrder 0001  
                        SetSegmentValueIntermitentMain@d1 001F  
                        SetSegmentValueIntermitentMain@d2 001C  
                                     _I2C1_MasterSendNack 9C20  
                                           HopCHK@hopDiff 0026  
                     __end_of_I2C1_SetAddressNackCallback 9A1A  
                             _I2C1_SetAddressNackCallback 9A02  
                                        ?_ADCC_Initialize 0001  
                                     _getTimeDecelaration 7538  
                                              _sm_restart 9144  
                        __end_of_ADCC_GetSingleConversion 9A76  
                                    ?_I2C1_MasterClearIrq 0001  
                                          ??_I2C1_DO_IDLE 0010  
                                    ??_EUSART1_Initialize 0012  
                                        NormalKeyGen@SEED 02D9  
                                          ??_I2C1_DO_RCEN 0010  
                      __end_of_I2C1_DO_SEND_RESTART_WRITE 9BF2  
                              _I2C1_DO_SEND_RESTART_WRITE 9BEA  
                       actionZone_Closing@securityClosing 0032  
                             ?_sm_execute_ControlLearning 00DD  
                                _TMR0_SetInterruptHandler 9B58  
                                               _PORTAbits 000F8D  
                                               _PORTBbits 000F8E  
                                  ?_VerifyElectricalBrake 0001  
                                               _PORTEbits 000F91  
                         __end_of_rdBlkRegCompleteHandler 9312  
                                  ??_getStateOpenPosition 0032  
                                            ??_CloseOrder 0018  
                                   ??_controlSelectRemote 00E0  
                                    _SetSegmentValueLearn 706C  
                           ??_I2C1_SetAddressNackCallback 0019  
                               I2C1_Read1ByteRegister@reg 0022  
                                        ___lbmod@dividend 0011  
                                    __end_of_Segments_Set 9B3A  
                                     _ControlCounterMoves 906A  
                            _controlLearning_stateMachine 02B2  
                         I2C1_SetDataCompleteCallback@ptr 0017  
                                          ?_OpenWalkOrder 0001  
                                              _stateMotor 0075  
                                      eusartparser@i_7481 00EA  
                                      eusartparser@i_7482 00EB  
                                      eusartparser@i_7474 00E9  
                                      eusartparser@i_7483 00EF  
                                      eusartparser@i_7475 00ED  
                                      eusartparser@i_7484 00F0  
                                      eusartparser@i_7476 00EE  
                                      eusartparser@i_7485 00F4  
                                      eusartparser@i_7477 00F1  
                                      eusartparser@i_7486 00F5  
                                      eusartparser@i_7478 00F2  
                                      eusartparser@i_7487 00F6  
                                      eusartparser@i_7479 00F3  
                                           ?_sumEnergyADC 0010  
                          I2C1_CallbackReturnReset@funPtr 0019  
                       actionZone_Opening@securityClosing 00E4  
                                    ?_I2C1_MasterSendNack 0001  
                         keeloqDecryptPacket@classic_data 00E2  
                                     EUSART1_Write@txData 0010  
                                       ??_ClearFlag_rfCMD 0010  
                                    ?_getTimeDecelaration 0029  
                                   ??_EUSART1_is_rx_ready 0010  
                                       _saveEnergyADCHist 972C  
                                 __end_of_WWDT_Initialize 9B44  
                                             ___lbmod@rem 0013  
                       actionZone_Opening@securityOpening 00E5  
                                      eusartparser@buffer 0146  
                                          ?_calculateMean 0010  
                                        ??_refreshCurrent 0021  
                                     _updateChangesToUart 8B14  
                                       ??_SetSegmentValue 001D  
                                            _EUSART1_Read 90B6  
                                      ?_saveEnergyADCHist 0010  
                                      eusartparser@save_f 006E  
                       __end_of_GetSecurityStateInClosing 7BFA  
                                      eusartparser@serial 00F8  
                                        ??_refreshSegment 0002  
                                          __end_of_DecCHK 942E  
                                       _controlLearnDigit 9492  
                                 __end_of_controlVelocity 5638  
                                    ?_ControlCounterMoves 0001  
                                     setValueToEdit@value 01FC  
                                      _actionZone_Closing 461C  
                                    __end_of_RemoveSerial 8222  
                                          __end_of_HopCHK 811A  
                                      __end_of_CloseOrder 977A  
                                 _zeroCrossingWaitTimeIdx 007A  
                                            _InitReceiver 99BA  
                               _ControlDecelarationFactor 9A76  
                                      ?_controlLearnDigit 0001  
                                    _timer0ReloadVal16bit 0290  
                       __end_of_GetSecurityStateInOpening 7C94  
                                       setRGB_ON@RGBLigth 0015  
                                            ??_ReadSerial 0030  
                                     ??_saveEnergyADCHist 0012  
                            __end_of_INTERRUPT_Initialize 9C40  
                                      _actionZone_Opening 48C0  
                                   ??_I2C1_MasterClearIrq 0010  
                    __end_of_TMR2_DefaultInterruptHandler 9C68  
                            _TMR2_DefaultInterruptHandler 9C66  
                                             ?_readInputs 0001  
                                               _DispTable 03D2  
                                          __end_of___lmul 8DE6  
                                   __end_of_LoadManufCode 987C  
                                     ?_actionZone_Closing 0001  
                                          __end_of___wmul 97C6  
                                          _I2C1_DO_RX_ACK 9BD2  
                                  ??_refreshADCZeroOffset 0017  
                                    _generateErrorLearnig 89EC  
                                            _InitSoftStop 901E  
                                     ??_controlLearnDigit 0013  
                                 i2_VerifyElectricalBrake 88A6  
                                          __end_of_memcpy 9210  
                                    ?_updateChangesToUart 0001  
                                  ?_OSCILLATOR_Initialize 0001  
                                    __end_of_WaitPreFlash 86EC  
                            __end_of_getCurrentComparator 610C  
                                      sm_send_event@event 0014  
                                    __end_of_NormalKeyGen 6F6C  
                                           _saveNewSerial 8608  
                                             ?_readbutton 0001  
                                     ?_actionZone_Opening 0001  
                                   ?_SetSegmentValueLearn 0001  
                         __end_of_I2C1_CallbackReturnStop 9C50  
                          ?_setPositionInvertionInClosing 0001  
                           __end_of_I2C1_MasterSendTxData 9C02  
                                       _read_eusartparser 4D78  
                                   refreshADCZeroOffset@i 0017  
                                     start_initialization 76F6  
                             i2GetMotorPower@defineatraso 0004  
                                             ??_I2C1_Open 0010  
                                          ??_sumEnergyADC 0012  
                                      ?_read_eusartparser 0018  
                                             __end_of_rxi 4D78  
                                   ??_I2C1_MasterSendNack 0010  
                                 __end_of_i2c_writeNBytes 8608  
                          ?_setPositionInvertionInOpening 0001  
                                   ??_getTimeDecelaration 002D  
           EUSART1_SetRxInterruptHandler@interruptHandler 0010  
           EUSART1_SetTxInterruptHandler@interruptHandler 0010  
                               __end_of_saveEnergyADCHist 9754  
                                 __end_of_WWDT_TimerClear 991A  
                                    ??_actionZone_Closing 0032  
                                   __end_of_EUSART1_Write 9292  
                                 __end_of_WWDT_SoftEnable 9C3C  
                                      __end_of_ReadSerial 875C  
                                         ??_write_package 0018  
                                  rd1RegCompleteHandler@p 0019  
                            __end_of_verifyProgramingMode 93FC  
                                               _ReqResync 99D2  
                               __end_of_controlLearnDigit 94C2  
                                     ??_read_eusartparser 001A  
                                                ??_DecCHK 0012  
                                       _programmer_enable 007B  
                                    ??_actionZone_Opening 003B  
                                  _sm_execute_ControlGate 3CC2  
                 sm_execute_ControlLearning@typeOpenOrder 00E1  
                                                ??_HopCHK 0026  
                               refreshADCZeroOffset@media 0018  
                                I2C1_SetBuffer@bufferSize 0012  
                                   ??_ControlCounterMoves 003B  
                                       _controlSaveRemote 7A0E  
                                        ?_I2C1_MasterOpen 0001  
                            keeloqDecryptPacket@hop_error 00E8  
                                        ?_I2C1_MasterStop 0001  
                                        ?_I2C1_Initialize 0001  
                                 saveNewSerial@tempSerial 00D8  
                                  controlSelectRemote@pos 00E2  
                                         ??_OpenFullOrder 0018  
                                   calculateMean@newValue 0014  
                                      ?_controlSaveRemote 0001  
                                 sm_get_current_state@psm 0010  
                                        ??_PMD_Initialize 0010  
                                                ??___lmul 0025  
                                  __end_of_I2C1_DO_RX_ACK 9BDA  
                                                ??___wmul 0014  
                                      _zeroCrossingLength 0150  
                                          _VerifyFollowMe 9838  
                                  wr1RegCompleteHandler@p 0019  
                                   _EUSART1_RxDataHandler 98C0  
                                 ??_I2C1_DO_SEND_ADR_READ 0010  
                          ?_EUSART1_SetRxInterruptHandler 0010  
                                             ?_sm_restart 0010  
                                             __pdataBANK0 00FC  
                                             __pdataBANK1 01FE  
                                             __pdataBANK2 02F6  
                                             __pdataBANK3 03D2  
                                             __pdataBANK4 0400  
                                   ?_generateErrorLearnig 0001  
                                                ??_memcpy 0016  
                                       ?_setFlashLigth_ON 0010  
                           ?_TMR2_DefaultInterruptHandler 0001  
                                   ??_updateChangesToUart 0022  
                                       _controlMotorForce 51F2  
                                     ??_controlSaveRemote 0020  
                               __end_of_read_eusartparser 4FB8  
                                          ?_saveNewSerial 00D8  
                                        I2C1_Open@address 0010  
                                          _eusart1RxCount 008A  
                                      ??_setFlashLigth_ON 0012  
                                _ADCC_GetSingleConversion 9A60  
                                      ?_controlMotorForce 0001  
                                   __end_of_InitSoftStart 8B14  
                                               _StopOrder 98E2  
                                    _sm_get_current_state 9AC6  
                                             __pbssCOMRAM 003B  
                                         ??_OpenWalkOrder 0018  
                                    _I2C1_DO_SEND_RESTART 9BE2  
                                getTimeDecelaration@state 0031  
                       _EUSART1_RxDefaultInterruptHandler 02EB  
                                           __pcstackBANK0 00D8  
                                        ??_setValueToEdit 00DE  
                                           __pcstackBANK2 02EF  
                                                ?_RGB_Set 0001  
                                        _brakeElectric_st 0066  
                             ??_I2C1_DO_SEND_RESTART_READ 0010  
                                     ??_controlMotorForce 0005  
                                      _ResetDefaultMemory 62A4  
                                    ReadSerial@tempSerial 002E  
                                         ??_calculateMean 0018  
                         ??_EUSART1_SetTxInterruptHandler 0012  
                                    __end_of_I2C1_DO_IDLE 9BB2  
                        ??_EUSART1_SetFramingErrorHandler 0012  
                         ?_EUSART1_SetFramingErrorHandler 0010  
                                                ?_Decrypt 001B  
                                    __end_of_I2C1_DO_RCEN 9BA8  
                                           _GetMotorPower 7892  
                                        ?_WWDT_Initialize 0001  
                                              ?_ReqResync 0010  
                               __end_of_controlSaveRemote 7AC0  
                                            _init_package 942E  
                           I2C1_SetAddressNackCallback@cb 0015  
                                    updateChangesToUart@i 0022  
                                      sm_execute_main@psm 00ED  
                                                ?_ReadADC 0001  
                                            RGB_Set@value 0010  
                                   _TMR0_InterruptHandler 02E3  
                                     ?_ResetDefaultMemory 0001  
                                               __pnvBANK1 01FD  
                                               __pnvBANK2 02DD  
                                   _rd2RegCompleteHandler 9652  
                                        _InitWalkAutoTime 9A8A  
                                        ?_controlVelocity 0001  
                                __end_of_InitFullAutoTime 9986  
                             __end_of_SetSegmentValueMain 996C  
                          VerifyElectricalBrake@tempState 0010  
                        i2VerifyElectricalBrake@tempState 0001  
                                        ___lwdiv@dividend 0010  
                                  _PIN_MANAGER_Initialize 7D2E  
                                  __end_of_VerifyFollowMe 985A  
                                   _wr2RegCompleteHandler 9626  
                              ??_I2C1_MasterEnableRestart 0010  
                                               __pintcode 0008  
                                            _read_package 8EE2  
                                          _I2C1_MasterFsm 8E3C  
                              __end_of_checkNVM_VarSystem 5846  
                        __end_of_TMR1_SetInterruptHandler 9B58  
                         ADCC_GetSingleConversion@channel 0001  
                                         ?_I2C1_DO_RX_ACK 0001  
                                                ?___awdiv 0014  
                                               __ptext100 991A  
                                               __ptext101 7D2E  
                                                ?___lbdiv 0010  
                                               __ptext110 9B8A  
                                               __ptext102 9A4A  
                                               __ptext111 8F32  
                                               __ptext103 9C3C  
                                               __ptext200 9936  
                                               __ptext120 65C0  
                                               __ptext112 9AD8  
                                               __ptext104 9AB2  
                                               __ptext201 9C68  
                                               __ptext121 9188  
                                               __ptext113 4FB8  
                                               __ptext105 83AA  
                                               __ptext210 98C0  
                                               __ptext202 97EC  
                                               __ptext130 906A  
                                               __ptext122 7262  
                                               __ptext114 87CA  
                                               __ptext106 9B62  
                                               __ptext211 0000  
                                               __ptext203 4B2E  
                                               __ptext131 90FE  
                                               __ptext123 7F78  
                                               __ptext115 4010  
                                               __ptext107 9B6C  
                                               __ptext204 9C6A  
                                               __ptext140 9BBA  
                                               __ptext132 8592  
                                               __ptext124 972C  
                                               __ptext116 7E58  
                                               __ptext108 9B76  
                                               __ptext205 9460  
                                               __ptext141 8E3C  
                                               __ptext133 91CC  
                                               __ptext125 6F6C  
                                               __ptext117 9AF8  
                                               __ptext109 9B80  
                                               __ptext206 7C94  
                                               __ptext150 9BF2  
                                               __ptext142 8FD0  
                                               __ptext134 9A02  
                                               __ptext126 8E90  
                                               __ptext118 9312  
                                               __ptext207 9C2C  
                                               __ptext151 9B9E  
                                               __ptext143 9B94  
                                               __ptext135 8222  
                                               __ptext127 5F6E  
                                               __ptext119 735C  
                                               __ptext208 9C6C  
                                               __ptext160 9BFA  
                                               __ptext152 84A2  
                                               __ptext144 9BC2  
                                               __ptext136 9A1A  
                                               __ptext128 97A0  
                                               __ptext209 9C32  
                                               __ptext161 9C1A  
                                               __ptext153 8004  
                                               __ptext145 9BCA  
                                               __ptext137 9BB2  
                                               __ptext129 7892  
                                               __ptext170 95FA  
                                               __ptext162 9C40  
                                               __ptext154 9B06  
                                               __ptext146 9BD2  
                                               __ptext138 9576  
                                               __ptext171 92D2  
                                               __ptext163 9C20  
                                               __ptext155 9B14  
                                               __ptext147 9BDA  
                                               __ptext139 9AE8  
                                               __ptext180 9C50  
                                               __ptext172 9626  
                                               __ptext164 9C44  
                                               __ptext156 9BA8  
                                               __ptext148 9BE2  
                                               __ptext181 9C54  
                                               __ptext173 9652  
                                               __ptext165 9C48  
                                               __ptext157 8B72  
                                               __ptext149 9BEA  
                              updateChangesToUart@package 0023  
                                               __ptext190 9B2E  
                                               __ptext182 9C58  
                                               __ptext174 967E  
                                               __ptext166 9C4C  
                                               __ptext158 9C14  
                                               __ptext191 6C22  
                                               __ptext183 989E  
                                               __ptext175 96AA  
                                               __ptext167 9292  
                                               __ptext159 9B22  
                                               __ptext192 97C6  
                                               __ptext184 9C5C  
                                               __ptext176 96D6  
                                               __ptext168 95A2  
                                               __ptext193 9C66  
                                               __ptext185 9C60  
                                               __ptext177 9A32  
                                               __ptext169 95CE  
                                               __ptext194 8DE6  
                                               __ptext186 9C26  
                                               __ptext178 8838  
                                               __ptext195 9A60  
                                               __ptext179 99A0  
                                               __ptext196 9350  
                                               __ptext188 6740  
                                               __ptext197 51F2  
                                               __ptext189 8328  
                                               __ptext198 88A6  
                                               __ptext199 7950  
                                                ?___lbmod 0010  
                            ??_SetSegmentValueIntermitent 0013  
                                                ?___lldiv 0010  
                               ??i2_VerifyElectricalBrake 0001  
                               __end_of_controlMotorForce 542A  
                                                ?___lwdiv 0010  
                                   confirmpackage@confirm 0014  
                                    i2c_readDataBlock@len 0026  
                                    i2c_readDataBlock@reg 0022  
                                   confirmpackage@package 0012  
                                 _I2C1_MasterWaitForEvent 9BBA  
                                        _I2C1_MasterClose 9C60  
                         DecryptPacket_12BIT@classic_data 00E2  
                                ??_I2C1_Read1ByteRegister 0023  
                                          _I2C1_SetBuffer 99A0  
                            ??_INTERRUPT_InterruptManager 000A  
                                  ??_SetSegmentValueLearn 0010  
                                        _I2C1_MasterStart 9C58  
                                    NormalKeyGen@SKEYtemp 002C  
                                        _I2C1_MasterWrite 9BB2  
                                      _clearLearningValue 8428  
                                      _write_eusartparser 3480  
                                    ??_ResetDefaultMemory 003B  
                                                _BAUD1CON 000F9F  
                                             __smallconst 0F00  
                                   ?_sm_get_current_state 0010  
                                            ?_ShowVersion 0001  
                                                _F2Chance 0152  
                                              ?_StopOrder 0001  
              __end_of_EUSART1_DefaultOverrunErrorHandler 9C32  
                    ??_EUSART1_DefaultOverrunErrorHandler 0001  
                     ?_EUSART1_DefaultOverrunErrorHandler 0001  
                      _EUSART1_DefaultOverrunErrorHandler 9C2C  
                                   ?_I2C1_DO_SEND_RESTART 0001  
                                       _i2c_readDataBlock 851C  
                                            _eusartparser 0F22  
                                    _EUSART1_ErrorHandler 02E5  
                                       ?_I2C1_DO_TX_EMPTY 0001  
                                                ?_sumHIST 0010  
                                                ?_sm_init 0012  
                                 _EUSART1_SetErrorHandler 9B8A  
                                      ?_i2c_readDataBlock 0022  
                                     ReqResync@CurrentHop 0010  
                        __end_of_I2C1_CallbackReturnReset 9C4C  
                                     ?_clearLearningValue 0001  
                                        ___lwdiv@quotient 0015  
                                     ?_write_eusartparser 0016  
                                        ?_i2c_writeNBytes 0022  
                                      ??_I2C1_DO_TX_EMPTY 001B  
                                                _T2CLKCON 000FBF  
                                   __end_of_readRFButtons 62A4  
                                 ??_rd1RegCompleteHandler 001B  
                                 ?_I2C1_DO_SEND_ADR_WRITE 0001  
                                               _setRGB_ON 7E58  
                               I2C1_MasterSendTxData@data 0010  
                                        ?_WWDT_TimerClear 0001  
                                    _INTERRUPT_Initialize 9C3C  
                                          ?_GetMotorPower 0001  
                                 ??_wr1RegCompleteHandler 001B  
                                        ?_WWDT_SoftEnable 0001  
                                              sumHIST@max 0018  
                                              sumHIST@min 001A  
                                       ??_TMR0_Initialize 0012  
                                     ??_i2c_readDataBlock 0028  
                                        _I2C1_SetCallback 8838  
                                              sm_init@psm 0012  
                                          ___wmul@product 0014  
                                                _LATAbits 000F83  
                 EUSART1_SetErrorHandler@interruptHandler 0010  
                                                _LATCbits 000F85  
                                read_eusartparser@package 0018  
                                                _LATDbits 000F86  
                                                _LATEbits 000F87  
                                              _I2C1_DO_RX 84A2  
                                              _I2C1_DO_TX 8004  
                             ??_GetSecurityStateInClosing 0014  
                                                _PIE0bits 000EC2  
                                    _getCurrentComparator 5F6E  
                                                _PIE3bits 000EC5  
                                                _PIE4bits 000EC6  
                                              DecCHK@data 0010  
                                                Decrypt@i 001E  
                                                Decrypt@j 001F  
                                                Decrypt@p 0020  
                                         _firstselectflag 01FE  
                                     _DecryptPacket_12BIT 7EEA  
                                              _I2C1_Close 989E  
                         setValueToEdit@ParameterSelected 00DD  
                                            ?_I2C1_Poller 0001  
                                  __end_of_I2C1_MasterFsm 8E90  
                            __end_of_I2C1_MasterGetRxData 9C44  
                              ??_TMR0_SetInterruptHandler 0012  
                                                _PIR0bits 000ECA  
                                            _Segments_Set 9B2E  
                                                _PIR3bits 000ECD  
                                         ?_VerifyFollowMe 0001  
                                                _PIR4bits 000ECE  
                                readRFButtons@rollingCode 0148  
                             ??_GetSecurityStateInOpening 0014  
                                  ?_EUSART1_RxDataHandler 0001  
                                    ??_clearLearningValue 0010  
                                      _I2C1_MasterSendAck 9C1A  
                                    ??_write_eusartparser 001D  
                                    __end_of_sumEnergyADC 8004  
                               _I2C1_DO_SEND_RESTART_READ 9BF2  
                                            ??_getHopCode 0018  
                                               _pointSync 0068  
                                   __end_of_load_New_Menu 461C  
                                                _SSP1CON1 000F96  
                                                _SSP1CON2 000F97  
                                  ??_generateErrorLearnig 0017  
                                                _TMR0_ISR 97EC  
                                                _TMR1_ISR 9350  
                                                _TMR2_ISR 6740  
                                           _getKeyPressed 99EA  
                                 ??_VerifyElectricalBrake 0010  
                                  __end_of_I2C1_SetBuffer 99BA  
                                         _powerControl_st 013C  
                                               _temppower 0074  
                                                _SSP1STAT 000F95  
                    __end_of_I2C1_SetDataCompleteCallback 9A4A  
                            _I2C1_SetDataCompleteCallback 9A32  
                                      _I2C1_MasterStartRx 9C44  
                                         ??_saveNewSerial 00DD  
                             ?_I2C1_DO_SEND_RESTART_WRITE 0001  
                                       ??_TMR1_Initialize 0012  
                                         _ClearFlag_rfCMD 9C0E  
                                     ?_I2C1_MasterSendAck 0001  
                                              _ADCON0bits 000F60  
                               __end_of_i2c_readDataBlock 8592  
                                       ___wmul@multiplier 0010  
                                ?_I2C1_DO_RX_NACK_RESTART 0001  
                                    _verifyProgramingMode 93C8  
                                       ??_sm_execute_main 00EF  
                                    _numberOfErrorCurrent 0085  
                                    ?_DecryptPacket_12BIT 00E0  
                                               _ts_system 008F  
                                                _BitCount 0082  
                                     ?_I2C1_MasterStartRx 0001  
                            __end_of_I2C1_DO_ADDRESS_NACK 901E  
                          controlSelectRemote@validSerial 00E1  
                          ??_TMR2_DefaultInterruptHandler 0001  
                                       _actionZone_Closed 7AC0  
                               ?_TMR2_SetInterruptHandler 0010  
                                    _idxAdcZeroAquisition 0086  
                                         _SetSegmentValue 9986  
                                            _RemoveSerial 819E  
                          getStateOpenPosition@stateMotor 00D9  
                          __end_of_I2C1_DO_SEND_ADR_WRITE 9B14  
                                       _actionZone_Opened 5A26  
                                           _I2C1_DO_RESET 9B94  
                                      ?_actionZone_Closed 0001  
                                                _BufferRF 02C8  
                                     read_package@package 0018  
                                       ___lmul@multiplier 001D  
                                               copy_data0 770A  
                                               copy_data1 772A  
                                               copy_data2 774A  
                                   ?_INTERRUPT_Initialize 0001  
                                              ?_setRGB_ON 0011  
                                   I2C1_Close@returnValue 0010  
                                ?_rdBlkRegCompleteHandler 0019  
                                      ?_actionZone_Opened 0001  
                                        _Abertura_pedonal 0072  
                                     I2C1_SetCallback@idx 0014  
                                     I2C1_SetCallback@ptr 0012  
                                      __end_of_getHopCode 6C22  
                                             ??_ReqResync 0012  
                                    ??_I2C1_MasterSendAck 0010  
                                       ??_TMR2_Initialize 0012  
                                   EUSART1_Read@readValue 0010  
                                  ?_rd2RegCompleteHandler 0019  
                                     ??_actionZone_Closed 0020  
                                            _WaitPreFlash 867C  
                                   ?_getCurrentComparator 0016  
                            __end_of_I2C1_MasterOperation 95A2  
                                            _NormalKeyGen 6E5E  
                     sm_execute_ControlGate@typeOpenOrder 00EB  
                                  ?_wr2RegCompleteHandler 0019  
                                    ??_I2C1_MasterStartRx 0010  
                                     ??_actionZone_Opened 0020  
                            saveEnergyADCHist@valueToSave 0010  
                   __end_of_EUSART1_SetTxInterruptHandler 9B6C  
                           _EUSART1_SetTxInterruptHandler 9B62  
                                           _sm_send_event 8BD0  
                                     _keeloqDecryptPacket 5846  
                                                __Hrparam 0000  
                                         ?_I2C1_MasterFsm 0001  
                                               memcpy@tmp 0016  
                                                __Lrparam 0000  
                                    sumEnergyADC@auxValue 0016  
                                     i2c_writeNBytes@data 0024  
                         actionZone_Opening@typeOpenOrder 00E6  
                                          ?_getKeyPressed 0001  
                               ??_I2C1_MasterWaitForEvent 0010  
                                       _main_stateMachine 01F1  
                                   _I2C1_MasterDisableIrq 9C5C  
                                            ??_readInputs 0010  
                                 ??_OSCILLATOR_Initialize 0010  
                             __end_of_controlSelectRemote 3CC2  
                                         ?_I2C1_SetBuffer 0010  
                                          _fullmotorPower 0073  
                                  ResetDefaultMemory@type 00DD  
                                        _controlTimeslots 6C22  
                                _TMR1_SetInterruptHandler 9B4E  
                                  ??_sm_get_current_state 0012  
                                   ?_verifyProgramingMode 0010  
                               _GetSecurityStateInClosing 7B60  
                       I2C1_Read1ByteRegister@returnValue 0024  
                                  ??_I2C1_DO_SEND_RESTART 0010  
                                            ??_readbutton 0010  
                               __end_of_actionZone_Closed 7B60  
                                   ??_DecryptPacket_12BIT 003B  
                                   _TMR1_InterruptHandler 02DF  
                               ??_EUSART1_SetErrorHandler 0012  
                                       ??i2_GetMotorPower 0001  
                     __end_of_EUSART1_DefaultErrorHandler 9C38  
                             _EUSART1_DefaultErrorHandler 9C32  
                                             ??_StopOrder 0018  
                             __end_of_EUSART1_is_rx_ready 9AE8  
                                    ?_keeloqDecryptPacket 00E0  
                               __end_of_actionZone_Opened 5C00  
                               getStateOpenPosition@state 00D8  
                               _GetSecurityStateInOpening 7BFA  
                                         ___lwdiv@divisor 0012  
                                          ?_I2C1_DO_RESET 0001  
                                         ___lwdiv@counter 0014  
                                                __ptext10 9702  
                                                __ptext11 811A  
                                                __ptext20 8D3A  
                                                __ptext12 9952  
                                                __ptext21 9144  
                                                __ptext13 9C0E  
                                                __ptext30 5A26  
                                                __ptext22 8428  
                                                __ptext14 9492  
                                                __ptext31 9838  
                                                __ptext23 8A54  
                                                __ptext15 706C  
                                                __ptext40 867C  
                                                __ptext32 9754  
                                                __ptext24 48C0  
                                                __ptext16 82A6  
                                                __ptext41 977A  
                                                __ptext33 461C  
                                                __ptext25 7620  
                                                __ptext17 3CC2  
                                                __ptext50 5C00  
                                                __ptext42 996C  
                                                __ptext34 6884  
                                                __ptext26 542A  
                                                __ptext18 229A  
                                                __ptext51 938E  
                                                __ptext43 875C  
                                                __ptext35 7538  
                                                __ptext27 6D48  
                                                __ptext19 89EC  
                                                __ptext60 6E5E  
                                                __ptext52 9A9E  
                                                __ptext44 8BD0  
                                                __ptext36 8D90  
                                                __ptext28 901E  
                                                __ptext61 985A  
                                                __ptext53 8914  
                                                __ptext45 9AC6  
                                                __ptext37 98E2  
                                                __ptext29 9A76  
                                                __ptext70 5638  
                                                __ptext62 77C6  
                                                __ptext54 8EE2  
                                                __ptext46 8AB6  
                                                __ptext38 7B60  
                                                __ptext71 62A4  
                                                __ptext63 8090  
                                                __ptext55 90B6  
                                                __ptext47 9A8A  
                                                __ptext39 7AC0  
                                                __ptext80 9252  
                                                __ptext72 8C2C  
                                                __ptext64 6AF4  
                                                __ptext56 610C  
                                                __ptext48 7BFA  
                                                __ptext81 8C88  
                                                __ptext73 99EA  
                                                __ptext65 99D2  
                                                __ptext57 5846  
                                                __ptext49 94C2  
                                                __ptext90 8980  
                                                __ptext82 942E  
                                                __ptext74 0F22  
                                                __ptext66 93FC  
                                                __ptext58 93C8  
                                                __ptext91 9986  
                                                __ptext83 8608  
                                                __ptext75 3480  
                                                __ptext67 7EEA  
                                                __ptext59 8CE2  
                                                __ptext92 94F0  
                                                __ptext84 7DC6  
                                                __ptext76 5DCA  
                                                __ptext68 7168  
                                                __ptext93 9B3A  
                                                __ptext85 819E  
                                                __ptext77 8B14  
                                                __ptext69 69BE  
                                                __ptext94 954A  
                                                __ptext86 86EC  
                                                __ptext78 4D78  
                                                __ptext95 9B44  
                                                __ptext87 851C  
                                                __ptext79 951E  
                                                __ptext96 9210  
                                                __ptext88 98FE  
                                                __ptext97 9B4E  
                                                __ptext89 9C38  
                                                __ptext98 987C  
                                                __ptext99 9B58  
                                            _SSP1CON1bits 000F96  
                                            _SSP1CON2bits 000F97  
                                     NormalKeyGen@HOPtemp 0028  
                                         ??_GetMotorPower 0010  
                                _controlGate_stateMachine 01E6  
                                           ?_GetOpenOrder 0001  
                                 ?_sm_execute_ControlGate 00E7  
                                 DecryptPacket_12BIT@data 00E0  
                                                _learn_st 0119  
                ?_wr1RegCompleteHandler@pic18f46k40$F7960 0019  
               ??_rd1RegCompleteHandler@pic18f46k40$F7970 001B  
               ??_wr1RegCompleteHandler@pic18f46k40$F7962 001B  
                ?_wr2RegCompleteHandler@pic18f46k40$F7980 0019  
               ??_wr2RegCompleteHandler@pic18f46k40$F7982 001B  
                ?_rd2RegCompleteHandler@pic18f46k40$F7974 0019  
               ??_rd2RegCompleteHandler@pic18f46k40$F7976 001B  
                ?_rd1RegCompleteHandler@pic18f46k40$F7968 0019  
              ?_rdBlkRegCompleteHandler@pic18f46k40$F7986 0019  
             ??_rdBlkRegCompleteHandler@pic18f46k40$F7988 001B  
                                      __end_of_readInputs 7262  
                                _I2C1_CallbackReturnReset 9C48  
                                             ?_I2C1_DO_RX 0001  
                                             ?_I2C1_DO_TX 0001  
                                          ?_sm_send_event 0012  
                    __end_of_TMR0_DefaultInterruptHandler 9C6C  
                            _TMR0_DefaultInterruptHandler 9C6A  
                                i2c_readDataBlock@address 0029  
                             __end_of_I2C1_MasterClearIrq 9C2C  
                            __end_of_I2C1_DO_RX_NACK_STOP 9BD2  
                                             ?_I2C1_Close 0001  
                                          _ControlCurrent 65C0  
                                                _security 012B  
                                    RemoveSerial@position 00D8  
                                      __end_of_readbutton 8980  
                                              _RC1STAbits 000F9D  
          EUSART1_SetOverrunErrorHandler@interruptHandler 0010  
                                 __end_of_ClearFlag_rfCMD 9C14  
                                    sm_init@initial_state 0014  
                      __end_of_SetSegmentValueIntermitent 94F0  
                              _SetSegmentValueIntermitent 94C2  
                                                isa$xinst 000000  
                              ??_ADCC_GetSingleConversion 0001  
                                                int$flags 0050  
                         __end_of_I2C1_DO_RX_NACK_RESTART 9BCA  
                           SetSegmentValueLearn@direction 0012  
                                            ??_sm_restart 0012  
                                I2C1_MasterOperation@read 0020  
                      __end_of_INTERRUPT_InterruptManager 009C  
                              _INTERRUPT_InterruptManager 0008  
                                       _loadNVM_VarSystem 69BE  
                                SaveNVM_VarSystem@tempAdd 00D9  
                                       ??_TMR1_WriteTimer 0003  
                                 __end_of_SetSegmentValue 99A0  
                           __end_of_I2C1_DO_SEND_ADR_READ 9B22  
                             _EUSART1_FramingErrorHandler 02E9  
                                            _I2C1_DO_IDLE 9BA8  
                                     _EUSART1_Receive_ISR 7C94  
                                            _I2C1_DO_RCEN 9B9E  
                                      read_eusartparser@i 0020  
                                     decrementTimeslot@ts 0001  
                                      ?_loadNVM_VarSystem 0001  
                           controlSelectRemote@tempSerial 00E4  
                                           _getTypeRemote 9C08  
                             __end_of_I2C1_MasterSendNack 9C26  
                                        sm_send_event@psm 0012  
                             __end_of_getTimeDecelaration 7620  
                                   ??_keeloqDecryptPacket 00E4  
                                            _waitZeroPeak 0078  
                                __end_of_InitWalkAutoTime 9A9E  
                                              _INTCONbits 000FF2  
                                       _aux_in_auto_close 014F  
                                                memcpy@d1 0010  
                                                memcpy@s1 0012  
                          I2C1_SetAddressNackCallback@ptr 0017  
                                      i2c_writeNBytes@dat 0029  
                                      i2c_writeNBytes@len 0026  
                                      i2c_writeNBytes@reg 0022  
                                    _I2C1_MasterGetRxData 9C40  
                                   _I2C1_MasterSendTxData 9BFA  
                                     ??_loadNVM_VarSystem 003B  
                                           sm_restart@psm 0010  
                                  ??_INTERRUPT_Initialize 0010  
                                            _RFFull_12BIT 0081  
                                    _control_limit_switch 0070  
                          __end_of_sm_execute_ControlGate 4010  
                                              Decrypt@aux 0021  
                                              Decrypt@key 001D  
                                          ??_GetOpenOrder 0020  
                                             ??_setRGB_ON 0013  
                             __end_of_ControlCounterMoves 90B6  
                                                intlevel2 0000  
                        actionZone_Opened@securityClosing 0020  
                        actionZone_Closed@securityOpening 0020  
                                __end_of_I2C1_MasterClose 9C64  
                                    ?_EUSART1_Receive_ISR 0001  
                                  _I2C1_Read1ByteRegister 8C2C  
                                 readRFButtons@typeRemote 007D  
                                  ??_getCurrentComparator 001A  
                                  rd2RegCompleteHandler@p 0019  
                                      __end_of_sm_restart 9188  
                                        ___lldiv@dividend 0010  
                                 ?_PIN_MANAGER_Initialize 0001  
                                  __end_of_ControlCurrent 6740  
                           I2C1_Read1ByteRegister@address 0023  
                                __end_of_I2C1_MasterStart 9C5C  
                                __end_of_I2C1_MasterWrite 9BBA  
                                   __end_of_write_package 954A  
                                             _tempCounter 02F6  
                  __end_of_EUSART1_SetOverrunErrorHandler 9B80  
                          _EUSART1_SetOverrunErrorHandler 9B76  
                                        ??_I2C1_DO_RX_ACK 0010  
                                             _WDTCON0bits 000ED2  
                                             getHopCode@i 0023  
                                 _I2C1_CallbackReturnStop 9C4C  
                            __end_of_EUSART1_Transmit_ISR 9492  
                                          _confirmpackage 8C88  
                                      NormalKeyGen@Buffer 0030  
                                                sumHIST@i 0020  
                                         ??_getKeyPressed 0010  
                                           _ControlLights 4010  
                                       ?_InitFullAutoTime 0001  
                                           _ControlInputs 735C  
                           ?_TMR0_DefaultInterruptHandler 0001  
                                    _I2C1_DO_ADDRESS_NACK 8FD0  
                                              HopCHK@data 0024  
                                  ?_I2C1_MasterDisableIrq 0001  
                                           ?_getSerialCmd 001B  
                             __end_of_updateChangesToUart 8B72  
                                      _systemVarAddresses 0400  
                                          _ADC_zero_array 0396  
                               __end_of_loadNVM_VarSystem 6AF4  
                                      ??_InitFullAutoTime 0010  
                   __end_of_keeloq_classic_decrypt_packet 8D3A  
                           _keeloq_classic_decrypt_packet 8CE2  
                                   __end_of_OpenFullOrder 97A0  
                                  wr2RegCompleteHandler@p 0019  
          EUSART1_SetFramingErrorHandler@interruptHandler 0010  
                          ?_EUSART1_SetTxInterruptHandler 0010  
                                  ??_verifyProgramingMode 0012  
                                      _eusart1RxLastError 0154  
                                          ?_getTypeRemote 0001  
                                        _cmdMemoryIsEmpty 7DC6  
                                      NormalKeyGen@serial 0026  
                                __end_of_I2C1_SetCallback 88A6  
                                             _var_sys_NVM 01A6  
                                              _SSP1DATPPS 000EB8  
                                              _SSP1CLKPPS 000EB7  
                                         ??_I2C1_DO_RESET 0010  
                                    WWDT_TimerClear@state 0010  
                                        ___lldiv@quotient 0018  
                                    _I2C1_MasterOperation 9576  
                                         _TMR0_Initialize 987C  
                            ??_validateRemoteSerialNumber 00D8  
                                      _checkNVM_VarSystem 5638  
                                   ?_I2C1_MasterGetRxData 0001  
                           controlSelectRemote@typeRemote 00E3  
                                   __end_of_OpenWalkOrder 87CA  
                                            _sumEnergyADC 7F78  
                                          _listSyncValues 0300  
                                           setRGB_ON@Freq 0011  
                                     ?_checkNVM_VarSystem 0001  
                                   ??_EUSART1_Receive_ISR 0001  
                          __end_of_PIN_MANAGER_Initialize 7DC6  
                                       ??_ADCC_Initialize 0010  
                           __end_of_rd1RegCompleteHandler 96AA  
                                         ??_sm_send_event 0016  
                                        ??_VerifyFollowMe 0010  
                                   __end_of_calculateMean 8AB6  
                                        sm_init@hist_mode 0016  
                                  __end_of_confirmpackage 8CE2  
                                         ?_ControlCurrent 0001  
                           __end_of_wr1RegCompleteHandler 96D6  
                                   _TMR2_InterruptHandler 02DD  
                                 ??_EUSART1_RxDataHandler 0001  
                                          ?_ControlLights 0001  
                                         _TMR1_Initialize 9210  
                                          ?_ControlInputs 0001  
                                   ?_I2C1_DO_ADDRESS_NACK 0001  
                                          ??_getSerialCmd 001C  
                                           ?_ControlMotor 0001  
                                         _sm_execute_main 2F7C  
