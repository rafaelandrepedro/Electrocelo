

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Sep 01 14:09:22 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1,group=2
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1,inline
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1,inline
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1,inline
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=2,class=CODE,delta=1
   180                           	psect	text155,global,reloc=2,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1,inline
   184                           	psect	text159,global,reloc=2,class=CODE,delta=1,inline
   185                           	psect	text160,global,reloc=2,class=CODE,delta=1,inline
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1,inline
   187                           	psect	text162,global,reloc=2,class=CODE,delta=1,inline
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1,inline
   189                           	psect	text164,global,reloc=2,class=CODE,delta=1,inline
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=2,class=CODE,delta=1
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1
   194                           	psect	text169,global,reloc=2,class=CODE,delta=1
   195                           	psect	text170,global,reloc=2,class=CODE,delta=1
   196                           	psect	text171,global,reloc=2,class=CODE,delta=1
   197                           	psect	text172,global,reloc=2,class=CODE,delta=1
   198                           	psect	text173,global,reloc=2,class=CODE,delta=1
   199                           	psect	text174,global,reloc=2,class=CODE,delta=1
   200                           	psect	text175,global,reloc=2,class=CODE,delta=1
   201                           	psect	text176,global,reloc=2,class=CODE,delta=1
   202                           	psect	text177,global,reloc=2,class=CODE,delta=1
   203                           	psect	text178,global,reloc=2,class=CODE,delta=1
   204                           	psect	text179,global,reloc=2,class=CODE,delta=1
   205                           	psect	text180,global,reloc=2,class=CODE,delta=1,inline
   206                           	psect	text181,global,reloc=2,class=CODE,delta=1,inline
   207                           	psect	text182,global,reloc=2,class=CODE,delta=1,inline
   208                           	psect	text183,global,reloc=2,class=CODE,delta=1
   209                           	psect	text184,global,reloc=2,class=CODE,delta=1,inline
   210                           	psect	text185,global,reloc=2,class=CODE,delta=1,inline
   211                           	psect	text186,global,reloc=2,class=CODE,delta=1,inline
   212                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   213                           	psect	text188,global,reloc=2,class=CODE,delta=1
   214                           	psect	text189,global,reloc=2,class=CODE,delta=1
   215                           	psect	text190,global,reloc=2,class=CODE,delta=1
   216                           	psect	text191,global,reloc=2,class=CODE,delta=1
   217                           	psect	text192,global,reloc=2,class=CODE,delta=1
   218                           	psect	text193,global,reloc=2,class=CODE,delta=1
   219                           	psect	text194,global,reloc=2,class=CODE,delta=1
   220                           	psect	text195,global,reloc=2,class=CODE,delta=1
   221                           	psect	text196,global,reloc=2,class=CODE,delta=1
   222                           	psect	text197,global,reloc=2,class=CODE,delta=1
   223                           	psect	text198,global,reloc=2,class=CODE,delta=1
   224                           	psect	text199,global,reloc=2,class=CODE,delta=1
   225                           	psect	text200,global,reloc=2,class=CODE,delta=1
   226                           	psect	text201,global,reloc=2,class=CODE,delta=1
   227                           	psect	text202,global,reloc=2,class=CODE,delta=1
   228                           	psect	text203,global,reloc=2,class=CODE,delta=1
   229                           	psect	text204,global,reloc=2,class=CODE,delta=1
   230                           	psect	text205,global,reloc=2,class=CODE,delta=1
   231                           	psect	text206,global,reloc=2,class=CODE,delta=1
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	text208,global,reloc=2,class=CODE,delta=1
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	text210,global,reloc=2,class=CODE,delta=1
   236                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   237                           	psect	text211,global,reloc=2,class=CODE,delta=1
   238                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   239                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   240                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   241                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   242  0000                     
   243                           ; Version 2.36
   244                           ; Generated 28/01/2022 GMT
   245                           ; 
   246                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   247                           ; All rights reserved.
   248                           ; 
   249                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   250                           ; 
   251                           ; Redistribution and use in source and binary forms, with or without modification, are
   252                           ; permitted provided that the following conditions are met:
   253                           ; 
   254                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   255                           ;        conditions and the following disclaimer.
   256                           ; 
   257                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   258                           ;        of conditions and the following disclaimer in the documentation and/or other
   259                           ;        materials provided with the distribution. Publication is not required when
   260                           ;        this file is used in an embedded application.
   261                           ; 
   262                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   263                           ;        software without specific prior written permission.
   264                           ; 
   265                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   266                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   267                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   268                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   269                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   270                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   271                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   272                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   273                           ; 
   274                           ; 
   275                           ; Code-generator required, PIC18F46K40 Definitions
   276                           ; 
   277                           ; SFR Addresses
   278  0000                     
   279                           	psect	idataBANK0
   280  00A0E8                     __pidataBANK0:
   281                           	callstack 0
   282                           
   283                           ;initializer for _auxCounter
   284  00A0E8  03E8               	dw	1000
   285                           
   286                           	psect	idataBANK1
   287  00A0F2                     __pidataBANK1:
   288                           	callstack 0
   289                           
   290                           ;initializer for _firstselectflag
   291  00A0F2  01                 	db	1
   292                           
   293                           	psect	idataBANK2
   294  00A086                     __pidataBANK2:
   295                           	callstack 0
   296                           
   297                           ;initializer for _tempCounter
   298  00A086  3DDD               	dw	15837
   299  00A088  000F               	dw	15
   300                           
   301                           ;initializer for _zeroCrossingWaitTime
   302  00A08A  19                 	db	25
   303  00A08B  19                 	db	25
   304                           
   305                           	psect	idataBANK3
   306  009C8E                     __pidataBANK3:
   307                           	callstack 0
   308                           
   309                           ;initializer for _DispTable
   310  009C8E  6F                 	db	111
   311  009C8F  21                 	db	33
   312  009C90  76                 	db	118
   313  009C91  73                 	db	115
   314  009C92  39                 	db	57
   315  009C93  5B                 	db	91
   316  009C94  5F                 	db	95
   317  009C95  61                 	db	97
   318  009C96  7F                 	db	127
   319  009C97  7B                 	db	123
   320  009C98  7D                 	db	125
   321  009C99  7F                 	db	127
   322  009C9A  4E                 	db	78
   323  009C9B  37                 	db	55
   324  009C9C  5E                 	db	94
   325  009C9D  5C                 	db	92
   326  009C9E  7C                 	db	124
   327  009C9F  3D                 	db	61
   328  009CA0  0E                 	db	14
   329  009CA1  2F                 	db	47
   330  009CA2  14                 	db	20
   331  009CA3  1E                 	db	30
   332  009CA4  07                 	db	7
   333  009CA5  45                 	db	69
   334  009CA6  10                 	db	16
   335  009CA7  0C                 	db	12
   336  009CA8  40                 	db	64
   337  009CA9  20                 	db	32
   338  009CAA  01                 	db	1
   339  009CAB  02                 	db	2
   340  009CAC  04                 	db	4
   341  009CAD  08                 	db	8
   342  009CAE  00                 	db	0
   343  009CAF  3B                 	db	59
   344  009CB0  1F                 	db	31
   345  009CB1  16                 	db	22
   346  009CB2  17                 	db	23
   347                           
   348                           	psect	smallconst
   349  000F00                     __psmallconst:
   350                           	callstack 0
   351  000F00  00                 	db	0
   352  000F01                     _i2c1_fsmStateTable:
   353                           	callstack 0
   354  000F01  2C                 	db	low _I2C1_DO_IDLE
   355  000F02  A0                 	db	high _I2C1_DO_IDLE
   356  000F03  98                 	db	low _I2C1_DO_SEND_ADR_READ
   357  000F04  9F                 	db	high _I2C1_DO_SEND_ADR_READ
   358  000F05  8A                 	db	low _I2C1_DO_SEND_ADR_WRITE
   359  000F06  9F                 	db	high _I2C1_DO_SEND_ADR_WRITE
   360  000F07  76                 	db	low _I2C1_DO_TX
   361  000F08  84                 	db	high _I2C1_DO_TX
   362  000F09  16                 	db	low _I2C1_DO_RX
   363  000F0A  89                 	db	high _I2C1_DO_RX
   364  000F0B  22                 	db	low _I2C1_DO_RCEN
   365  000F0C  A0                 	db	high _I2C1_DO_RCEN
   366  000F0D  90                 	db	low _I2C1_DO_TX_EMPTY
   367  000F0E  8F                 	db	high _I2C1_DO_TX_EMPTY
   368  000F0F  76                 	db	low _I2C1_DO_SEND_RESTART_READ
   369  000F10  A0                 	db	high _I2C1_DO_SEND_RESTART_READ
   370  000F11  6E                 	db	low _I2C1_DO_SEND_RESTART_WRITE
   371  000F12  A0                 	db	high _I2C1_DO_SEND_RESTART_WRITE
   372  000F13  66                 	db	low _I2C1_DO_SEND_RESTART
   373  000F14  A0                 	db	high _I2C1_DO_SEND_RESTART
   374  000F15  5E                 	db	low _I2C1_DO_SEND_STOP
   375  000F16  A0                 	db	high _I2C1_DO_SEND_STOP
   376  000F17  56                 	db	low _I2C1_DO_RX_ACK
   377  000F18  A0                 	db	high _I2C1_DO_RX_ACK
   378  000F19  4E                 	db	low _I2C1_DO_RX_NACK_STOP
   379  000F1A  A0                 	db	high _I2C1_DO_RX_NACK_STOP
   380  000F1B  46                 	db	low _I2C1_DO_RX_NACK_RESTART
   381  000F1C  A0                 	db	high _I2C1_DO_RX_NACK_RESTART
   382  000F1D  18                 	db	low _I2C1_DO_RESET
   383  000F1E  A0                 	db	high _I2C1_DO_RESET
   384  000F1F  A4                 	db	low _I2C1_DO_ADDRESS_NACK
   385  000F20  94                 	db	high _I2C1_DO_ADDRESS_NACK
   386  000F21                     __end_of_i2c1_fsmStateTable:
   387                           	callstack 0
   388  0000                     _T2CON	set	4029
   389  0000                     _T1CON	set	4047
   390  0000                     _T1CLK	set	4050
   391  0000                     _T1GATE	set	4049
   392  0000                     _T0CON0	set	4053
   393  0000                     _INLVLD	set	3874
   394  0000                     _SLRCOND	set	3875
   395  0000                     _ODCOND	set	3876
   396  0000                     _WPUD	set	3877
   397  0000                     _TRISD	set	3979
   398  0000                     _TRISC	set	3978
   399  0000                     _TRISB	set	3977
   400  0000                     _TRISA	set	3976
   401  0000                     _TRISE	set	3980
   402  0000                     _LATC	set	3973
   403  0000                     _LATB	set	3972
   404  0000                     _OSCTUNE	set	3805
   405  0000                     _OSCFRQ	set	3806
   406  0000                     _ADERRL	set	3950
   407  0000                     _ADERRH	set	3951
   408  0000                     _ADPREVL	set	3937
   409  0000                     _ADPREVH	set	3938
   410  0000                     _ADFLTRL	set	3954
   411  0000                     _ADFLTRH	set	3955
   412  0000                     _ADACCL	set	3952
   413  0000                     _ADACCH	set	3953
   414  0000                     _ADCNT	set	3943
   415  0000                     _ADRESL	set	3939
   416  0000                     _ADRESH	set	3940
   417  0000                     _ADACQ	set	3932
   418  0000                     _ADCON0	set	3936
   419  0000                     _ADCLK	set	3927
   420  0000                     _ADSTAT	set	3941
   421  0000                     _ADCON3	set	3931
   422  0000                     _ADCON2	set	3930
   423  0000                     _ADPRE	set	3934
   424  0000                     _ADSTPTH	set	3945
   425  0000                     _ADUTHH	set	3949
   426  0000                     _ADUTHL	set	3948
   427  0000                     _ADLTHH	set	3947
   428  0000                     _SP1BRGH	set	3996
   429  0000                     _TX1STA	set	3998
   430  000F21  00                 	db	0	; dummy byte at the end
   431  0000                     
   432                           	psect	nvBANK1
   433  0001FD                     __pnvBANK1:
   434                           	callstack 0
   435  0001FD                     _eusart1TxBufferRemaining:
   436                           	callstack 0
   437  0001FD                     	ds	1
   438                           
   439                           	psect	nvBANK2
   440  0002DD                     __pnvBANK2:
   441                           	callstack 0
   442  0002DD                     _TMR2_InterruptHandler:
   443                           	callstack 0
   444  0002DD                     	ds	2
   445  0002DF                     _TMR1_InterruptHandler:
   446                           	callstack 0
   447  0002DF                     	ds	2
   448  0002E1                     _timer1ReloadVal:
   449                           	callstack 0
   450  0002E1                     	ds	2
   451  0002E3                     _TMR0_InterruptHandler:
   452                           	callstack 0
   453  0002E3                     	ds	2
   454  0002E5                     _EUSART1_ErrorHandler:
   455                           	callstack 0
   456  0002E5                     	ds	2
   457  0002E7                     _EUSART1_OverrunErrorHandler:
   458                           	callstack 0
   459  0002E7                     	ds	2
   460  0002E9                     _EUSART1_FramingErrorHandler:
   461                           	callstack 0
   462  0002E9                     	ds	2
   463  0002EB                     _EUSART1_RxDefaultInterruptHandler:
   464                           	callstack 0
   465  0002EB                     	ds	2
   466  0002ED                     _EUSART1_TxDefaultInterruptHandler:
   467                           	callstack 0
   468  0002ED                     	ds	2
   469  0000                     _WDTCON0bits	set	3794
   470  0000                     _TMR0IE	set	30229
   471  0000                     _TMR0IF	set	30293
   472  0000                     _LATEbits	set	3975
   473  0000                     _LATDbits	set	3974
   474  0000                     _LATAbits	set	3971
   475  0000                     _LATCbits	set	3973
   476  0000                     _PORTB	set	3982
   477  0000                     _T1CONbits	set	4047
   478  0000                     _SSP1CON2bits	set	3991
   479  0000                     _SSP1CON1bits	set	3990
   480  0000                     _ADCON0bits	set	3936
   481  0000                     _RC1STAbits	set	3997
   482  0000                     _GIE	set	32663
   483  0000                     _RX1PPS	set	3765
   484  0000                     _SSP1CLKPPS	set	3767
   485  0000                     _PIE0bits	set	3778
   486  0000                     _PIE3bits	set	3781
   487  0000                     _PIE4bits	set	3782
   488  0000                     _PIR0bits	set	3786
   489  0000                     _PIR3bits	set	3789
   490  0000                     _ADACT	set	3926
   491  0000                     _ADREF	set	3928
   492  0000                     _ADCON1	set	3929
   493  0000                     _ADCAP	set	3933
   494  0000                     _ADPCH	set	3935
   495  0000                     _ADRPT	set	3942
   496  0000                     _ADSTPTL	set	3944
   497  0000                     _ADLTHL	set	3946
   498  0000                     _RC1REG	set	3993
   499  0000                     _TX1REG	set	3994
   500  0000                     _SP1BRGL	set	3995
   501  0000                     _RC1STA	set	3997
   502  0000                     _BAUD1CON	set	3999
   503  0000                     _T2TMR	set	4027
   504  0000                     _T2PR	set	4028
   505  0000                     _T2HLT	set	4030
   506  0000                     _T2CLKCON	set	4031
   507  0000                     _TMR1L	set	4045
   508  0000                     _TMR1H	set	4046
   509  0000                     _T1GCON	set	4048
   510  0000                     _TMR0L	set	4051
   511  0000                     _TMR0H	set	4052
   512  0000                     _T0CON1	set	4054
   513  0000                     _PCON0bits	set	4055
   514  0000                     _INTCONbits	set	4082
   515  0000                     _LATA	set	3971
   516  0000                     _LATD	set	3974
   517  0000                     _LATE	set	3975
   518  0000                     _SSP1BUF	set	3986
   519  0000                     _SSP1ADD	set	3987
   520  0000                     _SSP1STAT	set	3989
   521  0000                     _SSP1CON2	set	3991
   522  0000                     _SSP1CON1	set	3990
   523  0000                     _WDTCON0	set	3794
   524  0000                     _OSCCON1	set	3800
   525  0000                     _PIR4bits	set	3790
   526  0000                     _OSCCON3	set	3802
   527  0000                     _OSCEN	set	3804
   528  0000                     _PMD0	set	3809
   529  0000                     _RC3PPS	set	3834
   530  0000                     _INLVLA	set	3853
   531  0000                     _SLRCONA	set	3854
   532  0000                     _ODCONA	set	3855
   533  0000                     _WPUA	set	3856
   534  0000                     _ANSELA	set	3857
   535  0000                     _ANSELB	set	3865
   536  0000                     _ANSELC	set	3873
   537  0000                     _ANSELD	set	3878
   538  0000                     _PMD5	set	3814
   539  0000                     _PMD4	set	3813
   540  0000                     _PMD3	set	3812
   541  0000                     _PMD2	set	3811
   542  0000                     _PMD1	set	3810
   543  0000                     _WDTCON1	set	3795
   544  0000                     _PORTEbits	set	3985
   545  0000                     _PORTBbits	set	3982
   546  0000                     _PORTAbits	set	3981
   547  0000                     _INLVLE	set	3882
   548  0000                     _SLRCONE	set	3883
   549  0000                     _ODCONE	set	3884
   550  0000                     _WPUE	set	3885
   551  0000                     _ANSELE	set	3886
   552  0000                     _INLVLC	set	3869
   553  0000                     _SLRCONC	set	3870
   554  0000                     _ODCONC	set	3871
   555  0000                     _WPUC	set	3872
   556  0000                     _INLVLB	set	3861
   557  0000                     _SLRCONB	set	3862
   558  0000                     _ODCONB	set	3863
   559  0000                     _WPUB	set	3864
   560  0000                     _IOCBN3	set	30875
   561  0000                     _IOCBP3	set	30883
   562  0000                     _SSP1DATPPS	set	3768
   563  0000                     _RC7PPS	set	3838
   564  0000                     _RC4PPS	set	3835
   565  0000                     _T2RST	set	4032
   566                           
   567                           ; #config settings
   568                           
   569                           	psect	cinit
   570  007E64                     __pcinit:
   571                           	callstack 0
   572  007E64                     start_initialization:
   573                           	callstack 0
   574  007E64                     __initialization:
   575                           	callstack 0
   576                           
   577                           ; Initialize objects allocated to BANK3 (37 bytes)
   578                           ; load TBLPTR registers with __pidataBANK3
   579  007E64  0E8E               	movlw	low __pidataBANK3
   580  007E66  6EF6               	movwf	tblptrl,c
   581  007E68  0E9C               	movlw	high __pidataBANK3
   582  007E6A  6EF7               	movwf	tblptrh,c
   583  007E6C  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   584  007E6E  6EF8               	movwf	tblptru,c
   585  007E70  EE03  F0D2         	lfsr	0,__pdataBANK3
   586  007E74  EE10 F025          	lfsr	1,37
   587  007E78                     copy_data0:
   588  007E78  0009               	tblrd		*+
   589  007E7A  CFF5 FFEE          	movff	tablat,postinc0
   590  007E7E  50E5               	movf	postdec1,w,c
   591  007E80  50E1               	movf	fsr1l,w,c
   592  007E82  E1FA               	bnz	copy_data0
   593                           
   594                           ; Initialize objects allocated to BANK2 (6 bytes)
   595                           ; load TBLPTR registers with __pidataBANK2
   596  007E84  0E86               	movlw	low __pidataBANK2
   597  007E86  6EF6               	movwf	tblptrl,c
   598  007E88  0EA0               	movlw	high __pidataBANK2
   599  007E8A  6EF7               	movwf	tblptrh,c
   600  007E8C  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   601  007E8E  6EF8               	movwf	tblptru,c
   602  007E90  EE02  F0F6         	lfsr	0,__pdataBANK2
   603  007E94  EE10 F006          	lfsr	1,6
   604  007E98                     copy_data1:
   605  007E98  0009               	tblrd		*+
   606  007E9A  CFF5 FFEE          	movff	tablat,postinc0
   607  007E9E  50E5               	movf	postdec1,w,c
   608  007EA0  50E1               	movf	fsr1l,w,c
   609  007EA2  E1FA               	bnz	copy_data1
   610                           
   611                           ; Initialize objects allocated to BANK1 (1 bytes)
   612                           ; load TBLPTR registers with __pidataBANK1
   613  007EA4  0EF2               	movlw	low __pidataBANK1
   614  007EA6  6EF6               	movwf	tblptrl,c
   615  007EA8  0EA0               	movlw	high __pidataBANK1
   616  007EAA  6EF7               	movwf	tblptrh,c
   617  007EAC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   618  007EAE  6EF8               	movwf	tblptru,c
   619  007EB0  0009               	tblrd		*+	;fetch initializer
   620  007EB2  CFF5 F1FE          	movff	tablat,__pdataBANK1
   621                           
   622                           ; Initialize objects allocated to BANK0 (2 bytes)
   623                           ; load TBLPTR registers with __pidataBANK0
   624  007EB6  0EE8               	movlw	low __pidataBANK0
   625  007EB8  6EF6               	movwf	tblptrl,c
   626  007EBA  0EA0               	movlw	high __pidataBANK0
   627  007EBC  6EF7               	movwf	tblptrh,c
   628  007EBE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   629  007EC0  6EF8               	movwf	tblptru,c
   630  007EC2  0009               	tblrd		*+	;fetch initializer
   631  007EC4  CFF5 F0FC          	movff	tablat,__pdataBANK0
   632  007EC8  0009               	tblrd		*+	;fetch initializer
   633  007ECA  CFF5 F0FD          	movff	tablat,__pdataBANK0+1
   634                           
   635                           ; Clear objects allocated to BANK3 (210 bytes)
   636  007ECE  EE03  F000         	lfsr	0,__pbssBANK3
   637  007ED2  0ED2               	movlw	210
   638  007ED4                     clear_0:
   639  007ED4  6AEE               	clrf	postinc0,c
   640  007ED6  06E8               	decf	wreg,f,c
   641  007ED8  E1FD               	bnz	clear_0
   642                           
   643                           ; Clear objects allocated to BANK2 (221 bytes)
   644  007EDA  EE02  F000         	lfsr	0,__pbssBANK2
   645  007EDE  0EDD               	movlw	221
   646  007EE0                     clear_1:
   647  007EE0  6AEE               	clrf	postinc0,c
   648  007EE2  06E8               	decf	wreg,f,c
   649  007EE4  E1FD               	bnz	clear_1
   650                           
   651                           ; Clear objects allocated to BANK1 (253 bytes)
   652  007EE6  EE01  F000         	lfsr	0,__pbssBANK1
   653  007EEA  0EFD               	movlw	253
   654  007EEC                     clear_2:
   655  007EEC  6AEE               	clrf	postinc0,c
   656  007EEE  06E8               	decf	wreg,f,c
   657  007EF0  E1FD               	bnz	clear_2
   658                           
   659                           ; Clear objects allocated to BANK0 (120 bytes)
   660  007EF2  EE00  F060         	lfsr	0,__pbssBANK0
   661  007EF6  0E78               	movlw	120
   662  007EF8                     clear_3:
   663  007EF8  6AEE               	clrf	postinc0,c
   664  007EFA  06E8               	decf	wreg,f,c
   665  007EFC  E1FD               	bnz	clear_3
   666                           
   667                           ; Clear objects allocated to COMRAM (21 bytes)
   668  007EFE  EE00  F03B         	lfsr	0,__pbssCOMRAM
   669  007F02  0E15               	movlw	21
   670  007F04                     clear_4:
   671  007F04  6AEE               	clrf	postinc0,c
   672  007F06  06E8               	decf	wreg,f,c
   673  007F08  E1FD               	bnz	clear_4
   674  007F0A                     end_of_initialization:
   675                           	callstack 0
   676  007F0A                     __end_of__initialization:
   677                           	callstack 0
   678  007F0A  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   679  007F0C  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   680  007F0E  0100               	movlb	0
   681  007F10  EF44  F035         	goto	_main	;jump to C main() function
   682                           
   683                           	psect	bssCOMRAM
   684  00003B                     __pbssCOMRAM:
   685                           	callstack 0
   686  00003B                     _rfCMD:
   687                           	callstack 0
   688  00003B                     	ds	11
   689  000046                     _edit_Param:
   690                           	callstack 0
   691  000046                     	ds	6
   692  00004C                     _button_struct:
   693                           	callstack 0
   694  00004C                     	ds	4
   695                           
   696                           	psect	bssBANK0
   697  000060                     __pbssBANK0:
   698                           	callstack 0
   699  000060                     _learn_st:
   700                           	callstack 0
   701  000060                     	ds	18
   702  000072                     _dispStruct:
   703                           	callstack 0
   704  000072                     	ds	6
   705  000078                     _brakeElectric_st:
   706                           	callstack 0
   707  000078                     	ds	2
   708  00007A                     _pointSync:
   709                           	callstack 0
   710  00007A                     	ds	2
   711  00007C                     _Hop:
   712                           	callstack 0
   713  00007C                     	ds	2
   714  00007E                     _RFcount:
   715                           	callstack 0
   716  00007E                     	ds	2
   717  000080                     _temp:
   718                           	callstack 0
   719  000080                     	ds	1
   720  000081                     _control_limit_switch:
   721                           	callstack 0
   722  000081                     	ds	1
   723  000082                     _fullmotorPower:
   724                           	callstack 0
   725  000082                     	ds	1
   726  000083                     _stateMotor:
   727                           	callstack 0
   728  000083                     	ds	1
   729  000084                     _zeroCrossingWaitTimeIdx:
   730                           	callstack 0
   731  000084                     	ds	1
   732  000085                     _programmer_enable:
   733                           	callstack 0
   734  000085                     	ds	1
   735  000086                     readbutton@key1:
   736                           	callstack 0
   737  000086                     	ds	1
   738  000087                     readRFButtons@keyType:
   739                           	callstack 0
   740  000087                     	ds	1
   741  000088                     readRFButtons@key1:
   742                           	callstack 0
   743  000088                     	ds	1
   744  000089                     _RFBit:
   745                           	callstack 0
   746  000089                     	ds	1
   747  00008A                     _RFFull_12BIT:
   748                           	callstack 0
   749  00008A                     	ds	1
   750  00008B                     _RFFull:
   751                           	callstack 0
   752  00008B                     	ds	1
   753  00008C                     _BitCount:
   754                           	callstack 0
   755  00008C                     	ds	1
   756  00008D                     _Bptr:
   757                           	callstack 0
   758  00008D                     	ds	1
   759  00008E                     _numberOfErrorCurrent:
   760                           	callstack 0
   761  00008E                     	ds	1
   762  00008F                     _idxAdcZeroAquisition:
   763                           	callstack 0
   764  00008F                     	ds	1
   765  000090                     _idxSaveEnergyADCHist:
   766                           	callstack 0
   767  000090                     	ds	1
   768  000091                     _idxAdcAquisition:
   769                           	callstack 0
   770  000091                     	ds	1
   771  000092                     _Counterchoose:
   772                           	callstack 0
   773  000092                     	ds	1
   774  000093                     _eusart1RxCount:
   775                           	callstack 0
   776  000093                     	ds	1
   777  000094                     _eusart1RxTail:
   778                           	callstack 0
   779  000094                     	ds	1
   780  000095                     _eusart1RxHead:
   781                           	callstack 0
   782  000095                     	ds	1
   783  000096                     _eusart1TxTail:
   784                           	callstack 0
   785  000096                     	ds	1
   786  000097                     _eusart1TxHead:
   787                           	callstack 0
   788  000097                     	ds	1
   789  000098                     _var_sys_NVM:
   790                           	callstack 0
   791  000098                     	ds	64
   792                           
   793                           	psect	dataBANK0
   794  0000FC                     __pdataBANK0:
   795                           	callstack 0
   796  0000FC                     _auxCounter:
   797                           	callstack 0
   798  0000FC                     	ds	2
   799                           
   800                           	psect	bssBANK1
   801  000100                     __pbssBANK1:
   802                           	callstack 0
   803  000100                     _var_sys:
   804                           	callstack 0
   805  000100                     	ds	81
   806  000151                     _menu_st:
   807                           	callstack 0
   808  000151                     	ds	25
   809  00016A                     _security:
   810                           	callstack 0
   811  00016A                     	ds	11
   812  000175                     _fimdecurso:
   813                           	callstack 0
   814  000175                     	ds	6
   815  00017B                     _powerControl_st:
   816                           	callstack 0
   817  00017B                     	ds	6
   818  000181                     readRFButtons@serial:
   819                           	callstack 0
   820  000181                     	ds	4
   821  000185                     eusartparser@buffer:
   822                           	callstack 0
   823  000185                     	ds	2
   824  000187                     readRFButtons@rollingCode:
   825                           	callstack 0
   826  000187                     	ds	2
   827  000189                     _BufferRF_12BIT:
   828                           	callstack 0
   829  000189                     	ds	2
   830  00018B                     _erroranterior:
   831                           	callstack 0
   832  00018B                     	ds	2
   833  00018D                     eusartparser@save_f:
   834                           	callstack 0
   835  00018D                     	ds	1
   836  00018E                     _done_changes:
   837                           	callstack 0
   838  00018E                     	ds	1
   839  00018F                     _aux_in_auto_close:
   840                           	callstack 0
   841  00018F                     	ds	1
   842  000190                     _aux_i:
   843                           	callstack 0
   844  000190                     	ds	1
   845  000191                     _Abertura_pedonal:
   846                           	callstack 0
   847  000191                     	ds	1
   848  000192                     _temppower:
   849                           	callstack 0
   850  000192                     	ds	1
   851  000193                     _difTime:
   852                           	callstack 0
   853  000193                     	ds	1
   854  000194                     _StateTRIAC:
   855                           	callstack 0
   856  000194                     	ds	1
   857  000195                     _waitZeroPeak:
   858                           	callstack 0
   859  000195                     	ds	1
   860  000196                     _zeroCrossing:
   861                           	callstack 0
   862  000196                     	ds	1
   863  000197                     _zeroCrossingLength:
   864                           	callstack 0
   865  000197                     	ds	1
   866  000198                     _lastKey:
   867                           	callstack 0
   868  000198                     	ds	1
   869  000199                     _F2Chance:
   870                           	callstack 0
   871  000199                     	ds	1
   872  00019A                     readbutton@key2:
   873                           	callstack 0
   874  00019A                     	ds	1
   875  00019B                     readRFButtons@typeRemote:
   876                           	callstack 0
   877  00019B                     	ds	1
   878  00019C                     _RFstate:
   879                           	callstack 0
   880  00019C                     	ds	1
   881  00019D                     _eusart1RxLastError:
   882                           	callstack 0
   883  00019D                     	ds	1
   884  00019E                     _ts_system:
   885                           	callstack 0
   886  00019E                     	ds	72
   887  0001E6                     _controlGate_stateMachine:
   888                           	callstack 0
   889  0001E6                     	ds	11
   890  0001F1                     _main_stateMachine:
   891                           	callstack 0
   892  0001F1                     	ds	11
   893  0001FC                     setValueToEdit@value:
   894                           	callstack 0
   895  0001FC                     	ds	1
   896                           
   897                           	psect	dataBANK1
   898  0001FE                     __pdataBANK1:
   899                           	callstack 0
   900  0001FE                     _firstselectflag:
   901                           	callstack 0
   902  0001FE                     	ds	1
   903                           
   904                           	psect	bssBANK2
   905  000200                     __pbssBANK2:
   906                           	callstack 0
   907  000200                     _ADC_array:
   908                           	callstack 0
   909  000200                     	ds	60
   910  00023C                     _I2C1_Status:
   911                           	callstack 0
   912  00023C                     	ds	36
   913  000260                     _SumEnergyADCHist_array:
   914                           	callstack 0
   915  000260                     	ds	20
   916  000274                     _eusart1RxStatusBuffer:
   917                           	callstack 0
   918  000274                     	ds	8
   919  00027C                     _eusart1RxBuffer:
   920                           	callstack 0
   921  00027C                     	ds	8
   922  000284                     _eusart1TxBuffer:
   923                           	callstack 0
   924  000284                     	ds	8
   925  00028C                     _EHop:
   926                           	callstack 0
   927  00028C                     	ds	2
   928  00028E                     _NextHop:
   929                           	callstack 0
   930  00028E                     	ds	2
   931  000290                     _timer0ReloadVal16bit:
   932                           	callstack 0
   933  000290                     	ds	2
   934  000292                     _classic_data:
   935                           	callstack 0
   936  000292                     	ds	16
   937  0002A2                     _memoryTEMP:
   938                           	callstack 0
   939  0002A2                     	ds	16
   940  0002B2                     _controlLearning_stateMachine:
   941                           	callstack 0
   942  0002B2                     	ds	11
   943  0002BD                     _menuConfiguration_stateMachine:
   944                           	callstack 0
   945  0002BD                     	ds	11
   946  0002C8                     _BufferRF:
   947                           	callstack 0
   948  0002C8                     	ds	9
   949  0002D1                     _DKEY:
   950                           	callstack 0
   951  0002D1                     	ds	8
   952  0002D9                     NormalKeyGen@SEED:
   953                           	callstack 0
   954  0002D9                     	ds	4
   955                           
   956                           	psect	dataBANK2
   957  0002F6                     __pdataBANK2:
   958                           	callstack 0
   959  0002F6                     _tempCounter:
   960                           	callstack 0
   961  0002F6                     	ds	4
   962  0002FA                     _zeroCrossingWaitTime:
   963                           	callstack 0
   964  0002FA                     	ds	2
   965                           
   966                           	psect	bssBANK3
   967  000300                     __pbssBANK3:
   968                           	callstack 0
   969  000300                     _listSyncValues:
   970                           	callstack 0
   971  000300                     	ds	150
   972  000396                     _ADC_zero_array:
   973                           	callstack 0
   974  000396                     	ds	60
   975                           
   976                           	psect	dataBANK3
   977  0003D2                     __pdataBANK3:
   978                           	callstack 0
   979  0003D2                     _DispTable:
   980                           	callstack 0
   981  0003D2                     	ds	37
   982                           
   983                           	psect	cstackBANK2
   984  0002EF                     __pcstackBANK2:
   985                           	callstack 0
   986  0002EF                     main@package:
   987                           	callstack 0
   988                           
   989                           ; 7 bytes @ 0x0
   990  0002EF                     	ds	7
   991                           
   992                           	psect	cstackBANK0
   993  0000D8                     __pcstackBANK0:
   994                           	callstack 0
   995  0000D8                     ??_keeloq_classic_decrypt_packet:
   996  0000D8                     ??_setPositionInvertionInClosing:
   997  0000D8                     ??_validateRemoteSerialNumber:
   998  0000D8                     ??_RemoveSerial:
   999  0000D8                     SaveNVM_VarSystem@page:
  1000                           	callstack 0
  1001  0000D8                     getStateOpenPosition@state:
  1002                           	callstack 0
  1003  0000D8                     saveNewSerial@tempSerial:
  1004                           	callstack 0
  1005                           
  1006                           ; 4 bytes @ 0x0
  1007  0000D8                     	ds	1
  1008  0000D9                     getStateOpenPosition@stateMotor:
  1009                           	callstack 0
  1010  0000D9                     SaveNVM_VarSystem@tempAdd:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x1
  1014  0000D9                     	ds	1
  1015  0000DA                     ??_controlVelocity:
  1016  0000DA                     RemoveSerial@cmdType:
  1017                           	callstack 0
  1018                           
  1019                           ; 1 bytes @ 0x2
  1020  0000DA                     	ds	1
  1021  0000DB                     SaveNVM_VarSystem@point:
  1022                           	callstack 0
  1023  0000DB                     RemoveSerial@tempSerial:
  1024                           	callstack 0
  1025                           
  1026                           ; 4 bytes @ 0x3
  1027  0000DB                     	ds	1
  1028  0000DC                     ??_setValueToEdit:
  1029  0000DC                     saveNewSerial@position:
  1030                           	callstack 0
  1031  0000DC                     sm_execute_ControlLearning@psm:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x4
  1035  0000DC                     	ds	1
  1036  0000DD                     ??_saveNewSerial:
  1037                           
  1038                           ; 1 bytes @ 0x5
  1039  0000DD                     	ds	1
  1040  0000DE                     ??_sm_execute_ControlLearning:
  1041  0000DE                     setValueToEdit@menuType:
  1042                           	callstack 0
  1043                           
  1044                           ; 1 bytes @ 0x6
  1045  0000DE                     	ds	1
  1046  0000DF                     setValueToEdit@posindex:
  1047                           	callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x7
  1050  0000DF                     	ds	1
  1051  0000E0                     ??_controlSelectRemote:
  1052  0000E0                     setValueToEdit@posindex_6980:
  1053                           	callstack 0
  1054  0000E0                     keeloqDecryptPacket@data:
  1055                           	callstack 0
  1056  0000E0                     DecryptPacket_12BIT@data:
  1057                           	callstack 0
  1058  0000E0                     eusartparser@package:
  1059                           	callstack 0
  1060                           
  1061                           ; 2 bytes @ 0x8
  1062  0000E0                     	ds	1
  1063  0000E1                     setValueToEdit@haveValueToEdit:
  1064                           	callstack 0
  1065  0000E1                     controlSelectRemote@validSerial:
  1066                           	callstack 0
  1067                           
  1068                           ; 1 bytes @ 0x9
  1069  0000E1                     	ds	1
  1070  0000E2                     ??_eusartparser:
  1071  0000E2                     controlSelectRemote@pos:
  1072                           	callstack 0
  1073  0000E2                     keeloqDecryptPacket@classic_data:
  1074                           	callstack 0
  1075  0000E2                     DecryptPacket_12BIT@classic_data:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0xA
  1079  0000E2                     	ds	1
  1080  0000E3                     controlSelectRemote@typeRemote:
  1081                           	callstack 0
  1082                           
  1083                           ; 1 bytes @ 0xB
  1084  0000E3                     	ds	1
  1085  0000E4                     ??_keeloqDecryptPacket:
  1086  0000E4                     DecryptPacket_12BIT@commandType:
  1087                           	callstack 0
  1088  0000E4                     actionZone_Opening@securityClosing:
  1089                           	callstack 0
  1090  0000E4                     controlSelectRemote@tempSerial:
  1091                           	callstack 0
  1092                           
  1093                           ; 4 bytes @ 0xC
  1094  0000E4                     	ds	1
  1095  0000E5                     actionZone_Opening@securityOpening:
  1096                           	callstack 0
  1097                           
  1098                           ; 1 bytes @ 0xD
  1099  0000E5                     	ds	1
  1100  0000E6                     actionZone_Opening@typeOpenOrder:
  1101                           	callstack 0
  1102                           
  1103                           ; 1 bytes @ 0xE
  1104  0000E6                     	ds	1
  1105  0000E7                     sm_execute_ControlGate@psm:
  1106                           	callstack 0
  1107                           
  1108                           ; 2 bytes @ 0xF
  1109  0000E7                     	ds	1
  1110  0000E8                     keeloqDecryptPacket@hop_error:
  1111                           	callstack 0
  1112  0000E8                     controlSelectRemote@temp:
  1113                           	callstack 0
  1114  0000E8                     eusartparser@i:
  1115                           	callstack 0
  1116                           
  1117                           ; 1 bytes @ 0x10
  1118  0000E8                     	ds	1
  1119  0000E9                     ??_sm_execute_ControlGate:
  1120  0000E9                     keeloqDecryptPacket@commandType:
  1121                           	callstack 0
  1122  0000E9                     eusartparser@i_7381:
  1123                           	callstack 0
  1124  0000E9                     sm_execute_menuConfiguration@psm:
  1125                           	callstack 0
  1126                           
  1127                           ; 2 bytes @ 0x11
  1128  0000E9                     	ds	1
  1129  0000EA                     eusartparser@i_7388:
  1130                           	callstack 0
  1131                           
  1132                           ; 1 bytes @ 0x12
  1133  0000EA                     	ds	1
  1134  0000EB                     ??_sm_execute_menuConfiguration:
  1135  0000EB                     sm_execute_ControlGate@typeOpenOrder:
  1136                           	callstack 0
  1137  0000EB                     eusartparser@i_7389:
  1138                           	callstack 0
  1139                           
  1140                           ; 1 bytes @ 0x13
  1141  0000EB                     	ds	1
  1142  0000EC                     eusartparser@pos:
  1143                           	callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x14
  1146  0000EC                     	ds	1
  1147  0000ED                     eusartparser@i_7382:
  1148                           	callstack 0
  1149  0000ED                     sm_execute_main@psm:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x15
  1153  0000ED                     	ds	1
  1154  0000EE                     eusartparser@i_7383:
  1155                           	callstack 0
  1156                           
  1157                           ; 1 bytes @ 0x16
  1158  0000EE                     	ds	1
  1159  0000EF                     ??_sm_execute_main:
  1160  0000EF                     eusartparser@i_7390:
  1161                           	callstack 0
  1162                           
  1163                           ; 1 bytes @ 0x17
  1164  0000EF                     	ds	1
  1165  0000F0                     eusartparser@i_7391:
  1166                           	callstack 0
  1167                           
  1168                           ; 1 bytes @ 0x18
  1169  0000F0                     	ds	1
  1170  0000F1                     eusartparser@i_7384:
  1171                           	callstack 0
  1172                           
  1173                           ; 1 bytes @ 0x19
  1174  0000F1                     	ds	1
  1175  0000F2                     eusartparser@i_7385:
  1176                           	callstack 0
  1177                           
  1178                           ; 1 bytes @ 0x1A
  1179  0000F2                     	ds	1
  1180  0000F3                     eusartparser@i_7386:
  1181                           	callstack 0
  1182                           
  1183                           ; 1 bytes @ 0x1B
  1184  0000F3                     	ds	1
  1185  0000F4                     eusartparser@i_7392:
  1186                           	callstack 0
  1187                           
  1188                           ; 1 bytes @ 0x1C
  1189  0000F4                     	ds	1
  1190  0000F5                     eusartparser@i_7393:
  1191                           	callstack 0
  1192                           
  1193                           ; 1 bytes @ 0x1D
  1194  0000F5                     	ds	1
  1195  0000F6                     eusartparser@i_7394:
  1196                           	callstack 0
  1197                           
  1198                           ; 1 bytes @ 0x1E
  1199  0000F6                     	ds	1
  1200  0000F7                     eusartparser@relcounter:
  1201                           	callstack 0
  1202                           
  1203                           ; 1 bytes @ 0x1F
  1204  0000F7                     	ds	1
  1205  0000F8                     eusartparser@serial:
  1206                           	callstack 0
  1207                           
  1208                           ; 4 bytes @ 0x20
  1209  0000F8                     	ds	4
  1210                           
  1211                           	psect	cstackCOMRAM
  1212  000001                     __pcstackCOMRAM:
  1213                           	callstack 0
  1214  000001                     ??_rxi:
  1215  000001                     ??i2_GetMotorPower:
  1216  000001                     ADCC_GetSingleConversion@channel:
  1217                           	callstack 0
  1218  000001                     Segments_Set@value:
  1219                           	callstack 0
  1220  000001                     i2VerifyElectricalBrake@tempState:
  1221                           	callstack 0
  1222  000001                     TMR1_WriteTimer@timerVal:
  1223                           	callstack 0
  1224  000001                     decrementTimeslot@ts:
  1225                           	callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x0
  1228  000001                     	ds	1
  1229  000002                     ??_ReadADC:
  1230  000002                     i2VerifyElectricalBrake@actualState:
  1231                           	callstack 0
  1232                           
  1233                           ; 1 bytes @ 0x1
  1234  000002                     	ds	1
  1235  000003                     
  1236                           ; 1 bytes @ 0x2
  1237  000003                     	ds	1
  1238  000004                     i2GetMotorPower@defineatraso:
  1239                           	callstack 0
  1240                           
  1241                           ; 1 bytes @ 0x3
  1242  000004                     	ds	1
  1243  000005                     ??_controlMotorForce:
  1244  000005                     
  1245                           ; 1 bytes @ 0x4
  1246  000005                     	ds	5
  1247  00000A                     ??_INTERRUPT_InterruptManager:
  1248                           
  1249                           ; 1 bytes @ 0x9
  1250  00000A                     	ds	6
  1251  000010                     ??_GetMotorPower:
  1252  000010                     ??_SetSegmentValueLearn:
  1253  000010                     ?_sumEnergyADC:
  1254                           	callstack 0
  1255  000010                     ?_sm_get_current_state:
  1256                           	callstack 0
  1257  000010                     ?___wmul:
  1258                           	callstack 0
  1259  000010                     ?___lwdiv:
  1260                           	callstack 0
  1261  000010                     ?_calculateMean:
  1262                           	callstack 0
  1263  000010                     ?_sumHIST:
  1264                           	callstack 0
  1265  000010                     ?___lldiv:
  1266                           	callstack 0
  1267  000010                     EUSART1_Read@readValue:
  1268                           	callstack 0
  1269  000010                     EUSART1_Write@txData:
  1270                           	callstack 0
  1271  000010                     I2C1_Open@address:
  1272                           	callstack 0
  1273  000010                     I2C1_Close@returnValue:
  1274                           	callstack 0
  1275  000010                     I2C1_MasterSendTxData@data:
  1276                           	callstack 0
  1277  000010                     WWDT_TimerClear@state:
  1278                           	callstack 0
  1279  000010                     getKeyPressed@temp:
  1280                           	callstack 0
  1281  000010                     RGB_Set@value:
  1282                           	callstack 0
  1283  000010                     SetSegmentValueIntermitent@d2:
  1284                           	callstack 0
  1285  000010                     VerifyElectricalBrake@tempState:
  1286                           	callstack 0
  1287  000010                     VerifyFollowMe@securityClose:
  1288                           	callstack 0
  1289  000010                     ___lbdiv@divisor:
  1290                           	callstack 0
  1291  000010                     ___lbmod@divisor:
  1292                           	callstack 0
  1293  000010                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1294                           	callstack 0
  1295  000010                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1296                           	callstack 0
  1297  000010                     EUSART1_SetErrorHandler@interruptHandler:
  1298                           	callstack 0
  1299  000010                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1300                           	callstack 0
  1301  000010                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1302                           	callstack 0
  1303  000010                     I2C1_SetBuffer@buffer:
  1304                           	callstack 0
  1305  000010                     I2C1_SetCallback@cb:
  1306                           	callstack 0
  1307  000010                     TMR0_SetInterruptHandler@InterruptHandler:
  1308                           	callstack 0
  1309  000010                     TMR1_SetInterruptHandler@InterruptHandler:
  1310                           	callstack 0
  1311  000010                     TMR2_SetInterruptHandler@InterruptHandler:
  1312                           	callstack 0
  1313  000010                     saveEnergyADCHist@valueToSave:
  1314                           	callstack 0
  1315  000010                     DecCHK@data:
  1316                           	callstack 0
  1317  000010                     ReqResync@CurrentHop:
  1318                           	callstack 0
  1319  000010                     verifyProgramingMode@classic_data:
  1320                           	callstack 0
  1321  000010                     setFlashLigth_ON@Freq:
  1322                           	callstack 0
  1323  000010                     sm_restart@psm:
  1324                           	callstack 0
  1325  000010                     sm_get_current_state@psm:
  1326                           	callstack 0
  1327  000010                     init_package@package:
  1328                           	callstack 0
  1329  000010                     ___wmul@multiplier:
  1330                           	callstack 0
  1331  000010                     ___lwdiv@dividend:
  1332                           	callstack 0
  1333  000010                     memcpy@d1:
  1334                           	callstack 0
  1335  000010                     calculateMean@meanValue:
  1336                           	callstack 0
  1337  000010                     ___lldiv@dividend:
  1338                           	callstack 0
  1339  000010                     write_eusartparser@package:
  1340                           	callstack 0
  1341                           
  1342                           ; 7 bytes @ 0xF
  1343  000010                     	ds	1
  1344  000011                     ?_read_package:
  1345                           	callstack 0
  1346  000011                     I2C1_Open@returnValue:
  1347                           	callstack 0
  1348  000011                     VerifyElectricalBrake@actualState:
  1349                           	callstack 0
  1350  000011                     ___lbdiv@dividend:
  1351                           	callstack 0
  1352  000011                     ___lbmod@dividend:
  1353                           	callstack 0
  1354  000011                     SetSegmentValueIntermitent@time:
  1355                           	callstack 0
  1356  000011                     setRGB_ON@Freq:
  1357                           	callstack 0
  1358  000011                     write_package@package:
  1359                           	callstack 0
  1360                           
  1361                           ; 7 bytes @ 0x10
  1362  000011                     	ds	1
  1363  000012                     ??_TMR1_Initialize:
  1364  000012                     ??_ControlMotor:
  1365  000012                     ??_sumEnergyADC:
  1366  000012                     ??_DecCHK:
  1367  000012                     SetSegmentValueLearn@direction:
  1368                           	callstack 0
  1369  000012                     ___lbdiv@counter:
  1370                           	callstack 0
  1371  000012                     ___lbmod@counter:
  1372                           	callstack 0
  1373  000012                     I2C1_SetBuffer@bufferSize:
  1374                           	callstack 0
  1375  000012                     I2C1_SetCallback@ptr:
  1376                           	callstack 0
  1377  000012                     sm_init@psm:
  1378                           	callstack 0
  1379  000012                     sm_send_event@psm:
  1380                           	callstack 0
  1381  000012                     confirmpackage@package:
  1382                           	callstack 0
  1383  000012                     ___wmul@multiplicand:
  1384                           	callstack 0
  1385  000012                     ___lwdiv@divisor:
  1386                           	callstack 0
  1387  000012                     memcpy@s1:
  1388                           	callstack 0
  1389                           
  1390                           ; 2 bytes @ 0x11
  1391  000012                     	ds	1
  1392  000013                     ??_setRGB_ON:
  1393  000013                     SetSegmentValueIntermitent@d1:
  1394                           	callstack 0
  1395  000013                     GetMotorPower@defineatraso:
  1396                           	callstack 0
  1397  000013                     ___lbdiv@quotient:
  1398                           	callstack 0
  1399  000013                     ___lbmod@rem:
  1400                           	callstack 0
  1401                           
  1402                           ; 1 bytes @ 0x12
  1403  000013                     	ds	1
  1404  000014                     ??_InitSoftStop:
  1405  000014                     ??_InitSoftStart:
  1406  000014                     ??_sumHIST:
  1407  000014                     ?___awdiv:
  1408                           	callstack 0
  1409  000014                     I2C1_SetCallback@idx:
  1410                           	callstack 0
  1411  000014                     confirmpackage@confirm:
  1412                           	callstack 0
  1413  000014                     ___lwdiv@counter:
  1414                           	callstack 0
  1415  000014                     sumEnergyADC@sumE:
  1416                           	callstack 0
  1417  000014                     sm_init@initial_state:
  1418                           	callstack 0
  1419  000014                     sm_send_event@event:
  1420                           	callstack 0
  1421  000014                     ___wmul@product:
  1422                           	callstack 0
  1423  000014                     ___awdiv@dividend:
  1424                           	callstack 0
  1425  000014                     memcpy@n:
  1426                           	callstack 0
  1427  000014                     calculateMean@newValue:
  1428                           	callstack 0
  1429  000014                     ___lldiv@divisor:
  1430                           	callstack 0
  1431                           
  1432                           ; 4 bytes @ 0x13
  1433  000014                     	ds	1
  1434  000015                     setRGB_ON@RGBLigth:
  1435                           	callstack 0
  1436  000015                     I2C1_SetDataCompleteCallback@cb:
  1437                           	callstack 0
  1438  000015                     I2C1_SetAddressNackCallback@cb:
  1439                           	callstack 0
  1440  000015                     ___lwdiv@quotient:
  1441                           	callstack 0
  1442                           
  1443                           ; 2 bytes @ 0x14
  1444  000015                     	ds	1
  1445  000016                     ?_getHopCode:
  1446                           	callstack 0
  1447  000016                     ?_getCurrentComparator:
  1448                           	callstack 0
  1449  000016                     sm_init@hist_mode:
  1450                           	callstack 0
  1451  000016                     memcpy@tmp:
  1452                           	callstack 0
  1453  000016                     sumEnergyADC@auxValue:
  1454                           	callstack 0
  1455  000016                     getHopCode@data:
  1456                           	callstack 0
  1457  000016                     ___awdiv@divisor:
  1458                           	callstack 0
  1459                           
  1460                           ; 2 bytes @ 0x15
  1461  000016                     	ds	1
  1462  000017                     ??_write_eusartparser:
  1463  000017                     refreshADCZeroOffset@i:
  1464                           	callstack 0
  1465  000017                     I2C1_SetDataCompleteCallback@ptr:
  1466                           	callstack 0
  1467  000017                     I2C1_SetAddressNackCallback@ptr:
  1468                           	callstack 0
  1469  000017                     memcpy@d:
  1470                           	callstack 0
  1471                           
  1472                           ; 2 bytes @ 0x16
  1473  000017                     	ds	1
  1474  000018                     ??_getHopCode:
  1475  000018                     ??_calculateMean:
  1476  000018                     ??_OpenWalkOrder:
  1477  000018                     sumEnergyADC@i:
  1478                           	callstack 0
  1479  000018                     ControlMotor@stateMotor:
  1480                           	callstack 0
  1481  000018                     ___awdiv@counter:
  1482                           	callstack 0
  1483  000018                     refreshADCZeroOffset@media:
  1484                           	callstack 0
  1485  000018                     sumHIST@max:
  1486                           	callstack 0
  1487  000018                     read_eusartparser@package:
  1488                           	callstack 0
  1489  000018                     ___lldiv@quotient:
  1490                           	callstack 0
  1491  000018                     read_package@package:
  1492                           	callstack 0
  1493                           
  1494                           ; 7 bytes @ 0x17
  1495  000018                     	ds	1
  1496  000019                     ___awdiv@sign:
  1497                           	callstack 0
  1498  000019                     wr1RegCompleteHandler@p:
  1499                           	callstack 0
  1500  000019                     rd1RegCompleteHandler@p:
  1501                           	callstack 0
  1502  000019                     rd2RegCompleteHandler@p:
  1503                           	callstack 0
  1504  000019                     wr2RegCompleteHandler@p:
  1505                           	callstack 0
  1506  000019                     rdBlkRegCompleteHandler@p:
  1507                           	callstack 0
  1508  000019                     rd1RegCompleteHandler@i2c1_master_example$F500@ptr:
  1509                           	callstack 0
  1510  000019                     rd2RegCompleteHandler@i2c1_master_example$F511@ptr:
  1511                           	callstack 0
  1512  000019                     wr1RegCompleteHandler@i2c1_master_example$F517@ptr:
  1513                           	callstack 0
  1514  000019                     wr2RegCompleteHandler@i2c1_master_example$F523@ptr:
  1515                           	callstack 0
  1516  000019                     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr:
  1517                           	callstack 0
  1518  000019                     I2C1_CallbackReturnReset@funPtr:
  1519                           	callstack 0
  1520  000019                     memcpy@s:
  1521                           	callstack 0
  1522                           
  1523                           ; 2 bytes @ 0x18
  1524  000019                     	ds	1
  1525  00001A                     ??_getCurrentComparator:
  1526  00001A                     ??_read_eusartparser:
  1527  00001A                     sumHIST@min:
  1528                           	callstack 0
  1529  00001A                     OpenWalkOrder@diffTime:
  1530                           	callstack 0
  1531  00001A                     ___awdiv@quotient:
  1532                           	callstack 0
  1533                           
  1534                           ; 2 bytes @ 0x19
  1535  00001A                     	ds	1
  1536  00001B                     ??_I2C1_DO_TX:
  1537  00001B                     ??_I2C1_DO_RX:
  1538  00001B                     ??_I2C1_DO_TX_EMPTY:
  1539  00001B                     ??_I2C1_DO_ADDRESS_NACK:
  1540  00001B                     getSerialCmd@serial:
  1541                           	callstack 0
  1542  00001B                     Decrypt@packet:
  1543                           	callstack 0
  1544                           
  1545                           ; 2 bytes @ 0x1A
  1546  00001B                     	ds	1
  1547  00001C                     getSerialCmd@temp:
  1548                           	callstack 0
  1549  00001C                     SetSegmentValueMain@d2:
  1550                           	callstack 0
  1551  00001C                     SetSegmentValue@d2:
  1552                           	callstack 0
  1553  00001C                     SetSegmentValueIntermitentMain@d2:
  1554                           	callstack 0
  1555  00001C                     updateChangesToUart@i:
  1556                           	callstack 0
  1557  00001C                     ___lldiv@counter:
  1558                           	callstack 0
  1559  00001C                     sumHIST@sumH:
  1560                           	callstack 0
  1561                           
  1562                           ; 4 bytes @ 0x1B
  1563  00001C                     	ds	1
  1564  00001D                     ??_I2C1_MasterFsm:
  1565  00001D                     ?___lmul:
  1566                           	callstack 0
  1567  00001D                     Decrypt@key:
  1568                           	callstack 0
  1569  00001D                     SetSegmentValueMain@d1:
  1570                           	callstack 0
  1571  00001D                     SetSegmentValue@d1:
  1572                           	callstack 0
  1573  00001D                     SetSegmentValueIntermitentMain@time:
  1574                           	callstack 0
  1575  00001D                     ___lmul@multiplier:
  1576                           	callstack 0
  1577  00001D                     updateChangesToUart@package:
  1578                           	callstack 0
  1579                           
  1580                           ; 7 bytes @ 0x1C
  1581  00001D                     	ds	1
  1582  00001E                     Decrypt@i:
  1583                           	callstack 0
  1584                           
  1585                           ; 1 bytes @ 0x1D
  1586  00001E                     	ds	1
  1587  00001F                     Decrypt@j:
  1588                           	callstack 0
  1589  00001F                     SetSegmentValueIntermitentMain@d1:
  1590                           	callstack 0
  1591  00001F                     write_eusartparser@debug:
  1592                           	callstack 0
  1593                           
  1594                           ; 2 bytes @ 0x1E
  1595  00001F                     	ds	1
  1596  000020                     ??_load_New_Menu:
  1597  000020                     ??_controlSaveRemote:
  1598  000020                     I2C1_MasterOperation@read:
  1599                           	callstack 0
  1600  000020                     sumHIST@i:
  1601                           	callstack 0
  1602  000020                     Decrypt@p:
  1603                           	callstack 0
  1604  000020                     actionZone_Closed@securityOpening:
  1605                           	callstack 0
  1606  000020                     actionZone_Opened@securityClosing:
  1607                           	callstack 0
  1608  000020                     getCurrentComparator@tempOffset:
  1609                           	callstack 0
  1610  000020                     getHopCode@tempHop:
  1611                           	callstack 0
  1612                           
  1613                           ; 2 bytes @ 0x1F
  1614  000020                     	ds	1
  1615  000021                     I2C1_MasterOperation@returnValue:
  1616                           	callstack 0
  1617  000021                     Decrypt@aux:
  1618                           	callstack 0
  1619  000021                     actionZone_Closed@typeOpenOrder:
  1620                           	callstack 0
  1621  000021                     actionZone_Opened@typeOpenOrder:
  1622                           	callstack 0
  1623  000021                     write_eusartparser@debug2:
  1624                           	callstack 0
  1625  000021                     ___lmul@multiplicand:
  1626                           	callstack 0
  1627                           
  1628                           ; 4 bytes @ 0x20
  1629  000021                     	ds	1
  1630  000022                     I2C1_Read1ByteRegister@reg:
  1631                           	callstack 0
  1632  000022                     getCurrentComparator@x:
  1633                           	callstack 0
  1634  000022                     getHopCode@tempPos:
  1635                           	callstack 0
  1636  000022                     load_New_Menu@Menu:
  1637                           	callstack 0
  1638  000022                     i2c_writeNBytes@reg:
  1639                           	callstack 0
  1640  000022                     i2c_readDataBlock@reg:
  1641                           	callstack 0
  1642  000022                     Decrypt@Buffer:
  1643                           	callstack 0
  1644                           
  1645                           ; 4 bytes @ 0x21
  1646  000022                     	ds	1
  1647  000023                     ??_ControlCurrent:
  1648  000023                     I2C1_Read1ByteRegister@address:
  1649                           	callstack 0
  1650  000023                     getHopCode@i:
  1651                           	callstack 0
  1652  000023                     load_New_Menu@i:
  1653                           	callstack 0
  1654                           
  1655                           ; 1 bytes @ 0x22
  1656  000023                     	ds	1
  1657  000024                     i2c_writeNBytes@data:
  1658                           	callstack 0
  1659  000024                     I2C1_Read1ByteRegister@returnValue:
  1660                           	callstack 0
  1661  000024                     i2c_readDataBlock@data:
  1662                           	callstack 0
  1663  000024                     HopCHK@data:
  1664                           	callstack 0
  1665                           
  1666                           ; 2 bytes @ 0x23
  1667  000024                     	ds	1
  1668  000025                     i2c_writeNBytes@len:
  1669                           	callstack 0
  1670  000025                     ___lmul@product:
  1671                           	callstack 0
  1672                           
  1673                           ; 4 bytes @ 0x24
  1674  000025                     	ds	1
  1675  000026                     i2c_readDataBlock@len:
  1676                           	callstack 0
  1677  000026                     NormalKeyGen@serial:
  1678                           	callstack 0
  1679  000026                     HopCHK@hopDiff:
  1680                           	callstack 0
  1681                           
  1682                           ; 2 bytes @ 0x25
  1683  000026                     	ds	1
  1684  000027                     ??_i2c_writeNBytes:
  1685                           
  1686                           ; 1 bytes @ 0x26
  1687  000027                     	ds	1
  1688  000028                     ??_i2c_readDataBlock:
  1689  000028                     NormalKeyGen@HOPtemp:
  1690                           	callstack 0
  1691  000028                     i2c_writeNBytes@dat:
  1692                           	callstack 0
  1693                           
  1694                           ; 17 bytes @ 0x27
  1695  000028                     	ds	1
  1696  000029                     ?_getTimeDecelaration:
  1697                           	callstack 0
  1698  000029                     i2c_readDataBlock@address:
  1699                           	callstack 0
  1700                           
  1701                           ; 1 bytes @ 0x28
  1702  000029                     	ds	1
  1703  00002A                     i2c_readDataBlock@d:
  1704                           	callstack 0
  1705                           
  1706                           ; 4 bytes @ 0x29
  1707  00002A                     	ds	2
  1708  00002C                     NormalKeyGen@SKEYtemp:
  1709                           	callstack 0
  1710                           
  1711                           ; 4 bytes @ 0x2B
  1712  00002C                     	ds	1
  1713  00002D                     ??_getTimeDecelaration:
  1714                           
  1715                           ; 1 bytes @ 0x2C
  1716  00002D                     	ds	1
  1717  00002E                     ReadSerial@tempSerial:
  1718                           	callstack 0
  1719  00002E                     cmdMemoryIsEmpty@position:
  1720                           	callstack 0
  1721  00002E                     validateRemoteSerialNumber@serial:
  1722                           	callstack 0
  1723                           
  1724                           ; 4 bytes @ 0x2D
  1725  00002E                     	ds	1
  1726  00002F                     ??_cmdMemoryIsEmpty:
  1727  00002F                     ReadSerial@position:
  1728                           	callstack 0
  1729                           
  1730                           ; 1 bytes @ 0x2E
  1731  00002F                     	ds	1
  1732  000030                     ??_ReadSerial:
  1733  000030                     NormalKeyGen@Buffer:
  1734                           	callstack 0
  1735                           
  1736                           ; 8 bytes @ 0x2F
  1737  000030                     	ds	1
  1738  000031                     cmdMemoryIsEmpty@cmdType:
  1739                           	callstack 0
  1740  000031                     getTimeDecelaration@state:
  1741                           	callstack 0
  1742                           
  1743                           ; 1 bytes @ 0x30
  1744  000031                     	ds	1
  1745  000032                     ??_setPositionInvertionInOpening:
  1746  000032                     ??_getStateOpenPosition:
  1747  000032                     validateRemoteSerialNumber@VerifyOnlySerial:
  1748                           	callstack 0
  1749  000032                     ReadSerial@cmdType:
  1750                           	callstack 0
  1751  000032                     actionZone_Closing@securityClosing:
  1752                           	callstack 0
  1753  000032                     cmdMemoryIsEmpty@tempSerial:
  1754                           	callstack 0
  1755                           
  1756                           ; 4 bytes @ 0x31
  1757  000032                     	ds	1
  1758  000033                     actionZone_Closing@typeOpenOrder:
  1759                           	callstack 0
  1760  000033                     validateRemoteSerialNumber@position:
  1761                           	callstack 0
  1762                           
  1763                           ; 2 bytes @ 0x32
  1764  000033                     	ds	2
  1765  000035                     validateRemoteSerialNumber@mask:
  1766                           	callstack 0
  1767                           
  1768                           ; 4 bytes @ 0x34
  1769  000035                     	ds	3
  1770  000038                     keeloq_classic_decrypt_packet@data:
  1771                           	callstack 0
  1772                           
  1773                           ; 2 bytes @ 0x37
  1774  000038                     	ds	1
  1775  000039                     i2c_writeNBytes@address:
  1776                           	callstack 0
  1777  000039                     validateRemoteSerialNumber@j:
  1778                           	callstack 0
  1779                           
  1780                           ; 1 bytes @ 0x38
  1781  000039                     	ds	1
  1782  00003A                     validateRemoteSerialNumber@i:
  1783                           	callstack 0
  1784  00003A                     saveNewSerial@cmdType:
  1785                           	callstack 0
  1786  00003A                     RemoveSerial@position:
  1787                           	callstack 0
  1788  00003A                     ResetDefaultMemory@type:
  1789                           	callstack 0
  1790  00003A                     checkNVM_VarSystem@saveParam:
  1791                           	callstack 0
  1792  00003A                     sm_execute_ControlLearning@typeOpenOrder:
  1793                           	callstack 0
  1794  00003A                     setValueToEdit@ParameterSelected:
  1795                           	callstack 0
  1796                           
  1797                           ; 1 bytes @ 0x39
  1798  00003A                     	ds	1
  1799  00003B                     
  1800                           ; 1 bytes @ 0x3A
  1801 ;;
  1802 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1803 ;;
  1804 ;; *************** function _main *****************
  1805 ;; Defined at:
  1806 ;;		line 63 in file "main_MC50.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;		None
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;  package         7    0[BANK2 ] struct package_t
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  1    wreg      void 
  1813 ;; Registers used:
  1814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 3F/1
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1821 ;;      Locals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1823 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1824 ;;Total ram usage:        7 bytes
  1825 ;; Hardware stack levels required when called: 17
  1826 ;; This function calls:
  1827 ;;		_ControlCounterMoves
  1828 ;;		_ControlCurrent
  1829 ;;		_ControlInputs
  1830 ;;		_ControlLights
  1831 ;;		_ControlMotor
  1832 ;;		_EUSART1_is_rx_ready
  1833 ;;		_InitReceiver
  1834 ;;		_SYSTEM_Initialize
  1835 ;;		_SetSegmentValue
  1836 ;;		_ShowVersion
  1837 ;;		_WWDT_SoftEnable
  1838 ;;		_WWDT_TimerClear
  1839 ;;		_controlVelocity
  1840 ;;		_eusartparser
  1841 ;;		_getKeyPressed
  1842 ;;		_loadNVM_VarSystem
  1843 ;;		_readInputs
  1844 ;;		_readRFButtons
  1845 ;;		_read_package
  1846 ;;		_readbutton
  1847 ;;		_sm_execute_ControlGate
  1848 ;;		_sm_execute_main
  1849 ;;		_sm_init
  1850 ;; This function is called by:
  1851 ;;		Startup code after reset
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           	psect	text0
  1856  006A88                     __ptext0:
  1857                           	callstack 0
  1858  006A88                     _main:
  1859                           	callstack 14
  1860                           
  1861                           ;main_MC50.c: 70:     dispStruct.display_grp.value_display1=dMinus;
  1862                           
  1863                           ;incstack = 0
  1864  006A88  0E18               	movlw	24
  1865  006A8A  0100               	movlb	0	; () banked
  1866  006A8C  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1867                           
  1868                           ;main_MC50.c: 71:     dispStruct.display_grp.value_display1=dMinus;
  1869  006A8E  0E18               	movlw	24
  1870  006A90  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1871                           
  1872                           ;main_MC50.c: 72:     dispStruct.intermitentFreq=0;
  1873  006A92  0E00               	movlw	0
  1874  006A94  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  1875  006A96  0E00               	movlw	0
  1876  006A98  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  1877                           
  1878                           ;main_MC50.c: 73:     dispStruct.upFase=1;
  1879  006A9A  0E01               	movlw	1
  1880  006A9C  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;main_MC50.c: 76:     SYSTEM_Initialize();
  1884  006A9E  EC9E  F04C         	call	_SYSTEM_Initialize	;wreg free
  1885                           
  1886                           ; BSR set to: 14
  1887                           ;main_MC50.c: 77:     WWDT_SoftEnable();
  1888  006AA2  EC5E  F050         	call	_WWDT_SoftEnable	;wreg free
  1889                           
  1890                           ; BSR set to: 14
  1891                           ;main_MC50.c: 80:       (INTCONbits.GIE = 1);
  1892  006AA6  8EF2               	bsf	242,7,c	;volatile
  1893                           
  1894                           ; BSR set to: 14
  1895                           ;main_MC50.c: 83:      (INTCONbits.PEIE = 1);
  1896  006AA8  8CF2               	bsf	242,6,c	;volatile
  1897                           
  1898                           ; BSR set to: 14
  1899                           ;main_MC50.c: 86:     IOCBP3=1;
  1900  006AAA  010F               	movlb	15	; () banked
  1901  006AAC  8714               	bsf	20,3,b	;volatile
  1902                           
  1903                           ; BSR set to: 15
  1904                           ;main_MC50.c: 87:     IOCBN3=1;
  1905  006AAE  8713               	bsf	19,3,b	;volatile
  1906                           
  1907                           ; BSR set to: 15
  1908                           ;main_MC50.c: 94:     InitReceiver();
  1909  006AB0  ECE8  F04E         	call	_InitReceiver	;wreg free
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;main_MC50.c: 95:     loadNVM_VarSystem();
  1913  006AB4  EC00  F038         	call	_loadNVM_VarSystem	;wreg free
  1914                           
  1915                           ;main_MC50.c: 97:     WWDT_TimerClear();
  1916  006AB8  ECBE  F04E         	call	_WWDT_TimerClear	;wreg free
  1917                           
  1918                           ;main_MC50.c: 99:     SetSegmentValue(dMinus,dMinus);
  1919  006ABC  0E18               	movlw	24
  1920  006ABE  6E1C               	movwf	SetSegmentValue@d2^0,c
  1921  006AC0  0E18               	movlw	24
  1922  006AC2  EC0F  F04F         	call	_SetSegmentValue
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;main_MC50.c: 100:     ts_system.ts_TimeSlot1ms = ( 100/50);
  1926  006AC6  0E02               	movlw	2
  1927  006AC8  0101               	movlb	1	; () banked
  1928  006ACA  6FA0               	movwf	(_ts_system+2)& (0+255),b	;volatile
  1929                           
  1930                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1931  006ACC  D00B               	goto	l28134
  1932  006ACE                     l28124:
  1933                           
  1934                           ; BSR set to: 1
  1935                           ;main_MC50.c: 102:     {;main_MC50.c: 103:         if ( ts_system.ts_TimeSlotMain<=0 )
  1936  006ACE  51A1               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  1937  006AD0  A4D8               	btfss	status,2,c
  1938  006AD2  D008               	goto	l28134
  1939                           
  1940                           ; BSR set to: 1
  1941                           ;main_MC50.c: 104:         {;main_MC50.c: 105:             WWDT_TimerClear();
  1942  006AD4  ECBE  F04E         	call	_WWDT_TimerClear	;wreg free
  1943                           
  1944                           ;main_MC50.c: 106:             ts_system.ts_TimeSlotMain = 50;
  1945  006AD8  0E32               	movlw	50
  1946  006ADA  0101               	movlb	1	; () banked
  1947  006ADC  6FA1               	movwf	(_ts_system+3)& (0+255),b	;volatile
  1948                           
  1949                           ; BSR set to: 1
  1950                           ;main_MC50.c: 108:             ts_system.ts_TimeSlot1ms--;
  1951  006ADE  07A0               	decf	(_ts_system+2)& (0+255),f,b	;volatile
  1952                           
  1953                           ; BSR set to: 1
  1954                           ;main_MC50.c: 109:             readInputs();
  1955  006AE0  ECCC  F03A         	call	_readInputs	;wreg free
  1956  006AE4                     l28134:
  1957                           
  1958                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1959  006AE4  0101               	movlb	1	; () banked
  1960  006AE6  51A0               	movf	(_ts_system+2)& (0+255),w,b	;volatile
  1961  006AE8  A4D8               	btfss	status,2,c
  1962  006AEA  D7F1               	goto	l28124
  1963                           
  1964                           ; BSR set to: 1
  1965                           ;main_MC50.c: 117:     sm_init(&menuConfiguration_stateMachine,st_MainMenu,HIST_NONE);
  1966  006AEC  0EBD               	movlw	low _menuConfiguration_stateMachine
  1967  006AEE  6E12               	movwf	sm_init@psm^0,c
  1968  006AF0  0E02               	movlw	high _menuConfiguration_stateMachine
  1969  006AF2  6E13               	movwf	(sm_init@psm+1)^0,c
  1970  006AF4  0E00               	movlw	0
  1971  006AF6  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1972  006AF8  0E00               	movlw	0
  1973  006AFA  6E14               	movwf	sm_init@initial_state^0,c
  1974  006AFC  0E00               	movlw	0
  1975  006AFE  6E16               	movwf	sm_init@hist_mode^0,c
  1976  006B00  EC07  F049         	call	_sm_init	;wreg free
  1977                           
  1978                           ;main_MC50.c: 118:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
  1979  006B04  0EF1               	movlw	low _main_stateMachine
  1980  006B06  6E12               	movwf	sm_init@psm^0,c
  1981  006B08  0E01               	movlw	high _main_stateMachine
  1982  006B0A  6E13               	movwf	(sm_init@psm+1)^0,c
  1983  006B0C  0E00               	movlw	0
  1984  006B0E  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1985  006B10  0E00               	movlw	0
  1986  006B12  6E14               	movwf	sm_init@initial_state^0,c
  1987  006B14  0E00               	movlw	0
  1988  006B16  6E16               	movwf	sm_init@hist_mode^0,c
  1989  006B18  EC07  F049         	call	_sm_init	;wreg free
  1990                           
  1991                           ;main_MC50.c: 119:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE);
  1992  006B1C  0EE6               	movlw	low _controlGate_stateMachine
  1993  006B1E  6E12               	movwf	sm_init@psm^0,c
  1994  006B20  0E01               	movlw	high _controlGate_stateMachine
  1995  006B22  6E13               	movwf	(sm_init@psm+1)^0,c
  1996  006B24  0E00               	movlw	0
  1997  006B26  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1998  006B28  0E00               	movlw	0
  1999  006B2A  6E14               	movwf	sm_init@initial_state^0,c
  2000  006B2C  0E00               	movlw	0
  2001  006B2E  6E16               	movwf	sm_init@hist_mode^0,c
  2002  006B30  EC07  F049         	call	_sm_init	;wreg free
  2003                           
  2004                           ;main_MC50.c: 120:     sm_init(&controlLearning_stateMachine,st_InitLearning,HIST_NONE);
  2005  006B34  0EB2               	movlw	low _controlLearning_stateMachine
  2006  006B36  6E12               	movwf	sm_init@psm^0,c
  2007  006B38  0E02               	movlw	high _controlLearning_stateMachine
  2008  006B3A  6E13               	movwf	(sm_init@psm+1)^0,c
  2009  006B3C  0E00               	movlw	0
  2010  006B3E  6E15               	movwf	(sm_init@initial_state+1)^0,c
  2011  006B40  0E00               	movlw	0
  2012  006B42  6E14               	movwf	sm_init@initial_state^0,c
  2013  006B44  0E00               	movlw	0
  2014  006B46  6E16               	movwf	sm_init@hist_mode^0,c
  2015  006B48  EC07  F049         	call	_sm_init	;wreg free
  2016                           
  2017                           ;main_MC50.c: 122:     ts_system.Debug_TS=(1000/50);
  2018  006B4C  0E00               	movlw	0
  2019  006B4E  0101               	movlb	1	; () banked
  2020  006B50  6FA7               	movwf	(_ts_system+9)& (0+255),b	;volatile
  2021  006B52  0E14               	movlw	20
  2022  006B54  6FA6               	movwf	(_ts_system+8)& (0+255),b	;volatile
  2023                           
  2024                           ; BSR set to: 1
  2025                           ;main_MC50.c: 124:     var_sys.ADCZeroOffset = 510;
  2026  006B56  0E01               	movlw	1
  2027  006B58  6F4C               	movwf	(_var_sys+76)& (0+255),b	;volatile
  2028  006B5A  0EFE               	movlw	254
  2029  006B5C  6F4B               	movwf	(_var_sys+75)& (0+255),b	;volatile
  2030                           
  2031                           ; BSR set to: 1
  2032                           ;main_MC50.c: 125:     ts_system.TimeStopADCZeroOffsetCalc = (5*(1000/50));
  2033  006B5E  0E00               	movlw	0
  2034  006B60  6FDD               	movwf	(_ts_system+63)& (0+255),b	;volatile
  2035  006B62  0E64               	movlw	100
  2036  006B64  6FDC               	movwf	(_ts_system+62)& (0+255),b	;volatile
  2037                           
  2038                           ; BSR set to: 1
  2039                           ;main_MC50.c: 126:     ts_system.TimeStopElectricBrake = 0;
  2040  006B66  0E00               	movlw	0
  2041  006B68  6FDF               	movwf	(_ts_system+65)& (0+255),b	;volatile
  2042  006B6A  0E00               	movlw	0
  2043  006B6C  6FDE               	movwf	(_ts_system+64)& (0+255),b	;volatile
  2044                           
  2045                           ; BSR set to: 1
  2046                           ;main_MC50.c: 129:     var_sys.StateMotor = Stopped;
  2047  006B6E  0E00               	movlw	0
  2048  006B70  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2049  006B72                     l28148:
  2050                           
  2051                           ;main_MC50.c: 136:     {;main_MC50.c: 140:         struct package_t package;;main_MC50.c
      +                          : 141:         if(EUSART1_is_rx_ready()){
  2052  006B72  ECAE  F04F         	call	_EUSART1_is_rx_ready	;wreg free
  2053  006B76  0900               	iorlw	0
  2054  006B78  B4D8               	btfsc	status,2,c
  2055  006B7A  D010               	goto	l28154
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;main_MC50.c: 142:             package=read_package();
  2059  006B7C  ECDB  F049         	call	_read_package	;wreg free
  2060  006B80  EE22  F0EF         	lfsr	2,main@package
  2061  006B84  0E06               	movlw	6
  2062  006B86                     u34371:
  2063  006B86  CFEB FFDB          	movff	plusw0,plusw2
  2064  006B8A  06E8               	decf	wreg,f,c
  2065  006B8C  E2FC               	bc	u34371
  2066                           
  2067                           ; BSR set to: 14
  2068                           ;main_MC50.c: 143:             eusartparser(&package);
  2069  006B8E  0EEF               	movlw	low main@package
  2070  006B90  0100               	movlb	0	; () banked
  2071  006B92  6FE0               	movwf	eusartparser@package& (0+255),b
  2072  006B94  0E02               	movlw	high main@package
  2073  006B96  6FE1               	movwf	(eusartparser@package+1)& (0+255),b
  2074  006B98  EC91  F007         	call	_eusartparser	;wreg free
  2075  006B9C                     l28154:
  2076                           
  2077                           ;main_MC50.c: 147:         if ( ts_system.ts_TimeSlotMain<=0 )
  2078  006B9C  0101               	movlb	1	; () banked
  2079  006B9E  51A1               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  2080  006BA0  A4D8               	btfss	status,2,c
  2081  006BA2  D7E7               	goto	l28148
  2082                           
  2083                           ; BSR set to: 1
  2084                           ;main_MC50.c: 148:         {;main_MC50.c: 149:              ts_system.ts_TimeSlotMain = 
      +                          50;
  2085  006BA4  0E32               	movlw	50
  2086  006BA6  6FA1               	movwf	(_ts_system+3)& (0+255),b	;volatile
  2087                           
  2088                           ; BSR set to: 1
  2089                           ;main_MC50.c: 150:             WWDT_TimerClear();
  2090  006BA8  ECBE  F04E         	call	_WWDT_TimerClear	;wreg free
  2091                           
  2092                           ;main_MC50.c: 152:             if(var_sys.StateVersion<4)
  2093  006BAC  0E04               	movlw	4
  2094  006BAE  0101               	movlb	1	; () banked
  2095  006BB0  6149               	cpfslt	(_var_sys+73)& (0+255),b	;volatile
  2096  006BB2  D003               	goto	l28164
  2097                           
  2098                           ; BSR set to: 1
  2099                           ;main_MC50.c: 154:             {;main_MC50.c: 155:                 ShowVersion();
  2100  006BB4  EC35  F047         	call	_ShowVersion	;wreg free
  2101                           
  2102                           ;main_MC50.c: 156:             }
  2103  006BB8  D7DC               	goto	l28148
  2104  006BBA                     l28164:
  2105                           
  2106                           ; BSR set to: 1
  2107                           ;main_MC50.c: 158:             {;main_MC50.c: 160:                 readbutton();
  2108  006BBA  ECCB  F046         	call	_readbutton	;wreg free
  2109                           
  2110                           ; BSR set to: 1
  2111                           ;main_MC50.c: 162:                 readRFButtons();
  2112  006BBE  ECB4  F033         	call	_readRFButtons	;wreg free
  2113                           
  2114                           ;main_MC50.c: 163:                lastKey=getKeyPressed();
  2115  006BC2  EC41  F04F         	call	_getKeyPressed	;wreg free
  2116  006BC6  0101               	movlb	1	; () banked
  2117  006BC8  6F98               	movwf	_lastKey& (0+255),b
  2118                           
  2119                           ; BSR set to: 1
  2120                           ;main_MC50.c: 165:                 readInputs();
  2121  006BCA  ECCC  F03A         	call	_readInputs	;wreg free
  2122                           
  2123                           ;main_MC50.c: 166:                 ControlInputs();
  2124  006BCE  EC2B  F039         	call	_ControlInputs	;wreg free
  2125                           
  2126                           ;main_MC50.c: 167:                 ControlCurrent();
  2127  006BD2  EC08  F036         	call	_ControlCurrent	;wreg free
  2128                           
  2129                           ;main_MC50.c: 168:                 controlVelocity();
  2130  006BD6  ECA9  F02C         	call	_controlVelocity	;wreg free
  2131                           
  2132                           ;main_MC50.c: 169:                 ControlMotor();
  2133  006BDA  EC73  F02A         	call	_ControlMotor	;wreg free
  2134                           
  2135                           ;main_MC50.c: 170:                 ControlLights();
  2136  006BDE  ECBB  F023         	call	_ControlLights	;wreg free
  2137                           
  2138                           ;main_MC50.c: 171:                 ControlCounterMoves();
  2139  006BE2  ECAE  F048         	call	_ControlCounterMoves	;wreg free
  2140                           
  2141                           ;main_MC50.c: 173:                 sm_execute_main(&main_stateMachine);
  2142  006BE6  0EF1               	movlw	low _main_stateMachine
  2143  006BE8  0100               	movlb	0	; () banked
  2144  006BEA  6FED               	movwf	sm_execute_main@psm& (0+255),b
  2145  006BEC  0E01               	movlw	high _main_stateMachine
  2146  006BEE  6FEE               	movwf	(sm_execute_main@psm+1)& (0+255),b
  2147  006BF0  EC9B  F01D         	call	_sm_execute_main	;wreg free
  2148                           
  2149                           ;main_MC50.c: 174:                 sm_execute_ControlGate(&controlGate_stateMachine);
  2150  006BF4  0EE6               	movlw	low _controlGate_stateMachine
  2151  006BF6  0100               	movlb	0	; () banked
  2152  006BF8  6FE7               	movwf	sm_execute_ControlGate@psm& (0+255),b
  2153  006BFA  0E01               	movlw	high _controlGate_stateMachine
  2154  006BFC  6FE8               	movwf	(sm_execute_ControlGate@psm+1)& (0+255),b
  2155  006BFE  EC15  F022         	call	_sm_execute_ControlGate	;wreg free
  2156                           
  2157                           ;main_MC50.c: 177:                 if(lastKey!=0xff)
  2158  006C02  0101               	movlb	1	; () banked
  2159  006C04  2998               	incf	_lastKey& (0+255),w,b
  2160  006C06  B4D8               	btfsc	status,2,c
  2161  006C08  D7B4               	goto	l28148
  2162                           
  2163                           ; BSR set to: 1
  2164                           ;main_MC50.c: 178:                 {;main_MC50.c: 180:                       InitReceive
      +                          r();
  2165  006C0A  ECE8  F04E         	call	_InitReceiver	;wreg free
  2166                           
  2167                           ; BSR set to: 1
  2168                           
  2169                           ;main_MC50.c: 185:         }
  2170  006C0E  D7B1               	goto	l28148
  2171  006C10                     __end_of_main:
  2172                           	callstack 0
  2173                           
  2174 ;; *************** function _sm_execute_main *****************
  2175 ;; Defined at:
  2176 ;;		line 26 in file "sm_Main_MC50.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  psm             2   21[BANK0 ] PTR struct .
  2179 ;;		 -> main_stateMachine(11), 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;		None
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  1    wreg      void 
  2184 ;; Registers used:
  2185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2186 ;; Tracked objects:
  2187 ;;		On entry : 3F/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2191 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2193 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2194 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2195 ;;Total ram usage:        4 bytes
  2196 ;; Hardware stack levels used: 1
  2197 ;; Hardware stack levels required when called: 16
  2198 ;; This function calls:
  2199 ;;		_SetSegmentValueIntermitentMain
  2200 ;;		_SetSegmentValueMain
  2201 ;;		_load_New_Menu
  2202 ;;		_sm_execute_menuConfiguration
  2203 ;;		_sm_send_event
  2204 ;; This function is called by:
  2205 ;;		_main
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text1
  2210  003B36                     __ptext1:
  2211                           	callstack 0
  2212  003B36                     _sm_execute_main:
  2213                           	callstack 14
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;sm_Main_MC50.c: 29:     switch((sm_state_Main_t) psm->current_state)
  2217                           
  2218                           ; BSR set to: 1
  2219                           ;incstack = 0
  2220  003B36  D053               	goto	l25856
  2221  003B38                     l25832:
  2222                           
  2223                           ; BSR set to: 0
  2224                           ;sm_Main_MC50.c: 32:         {;sm_Main_MC50.c: 33:             if(programmer_enable==0)
  2225  003B38  5185               	movf	_programmer_enable& (0+255),w,b
  2226  003B3A  A4D8               	btfss	status,2,c
  2227  003B3C  D066               	goto	l25858
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;sm_Main_MC50.c: 34:                 if(psm->last_event==ev_goto_MenuConfig)
  2231  003B3E  EE20 F004          	lfsr	2,4
  2232  003B42  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2233  003B44  26D9               	addwf	fsr2l,f,c
  2234  003B46  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2235  003B48  22DA               	addwfc	fsr2h,f,c
  2236  003B4A  0E06               	movlw	6
  2237  003B4C  18DE               	xorwf	postinc2,w,c
  2238  003B4E  10DE               	iorwf	postinc2,w,c
  2239  003B50  A4D8               	btfss	status,2,c
  2240  003B52  D006               	goto	l25838
  2241  003B54                     u32480:
  2242                           
  2243                           ; BSR set to: 0
  2244                           ;sm_Main_MC50.c: 35:                 {;sm_Main_MC50.c: 37:                     psm->curr
      +                          ent_state = st_MenuConfiguration;
  2245  003B54  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2246  003B58  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2247  003B5C  0E01               	movlw	1
  2248  003B5E  D01D               	goto	L2
  2249  003B60                     l25838:
  2250                           
  2251                           ; BSR set to: 0
  2252  003B60  EE20 F004          	lfsr	2,4
  2253  003B64  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2254  003B66  26D9               	addwf	fsr2l,f,c
  2255  003B68  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2256  003B6A  22DA               	addwfc	fsr2h,f,c
  2257  003B6C  0E11               	movlw	17
  2258  003B6E  18DE               	xorwf	postinc2,w,c
  2259  003B70  10DE               	iorwf	postinc2,w,c
  2260  003B72  A4D8               	btfss	status,2,c
  2261  003B74  D04A               	goto	l25858
  2262                           
  2263                           ; BSR set to: 0
  2264                           ;sm_Main_MC50.c: 40:                 {;sm_Main_MC50.c: 41:                     psm->curr
      +                          ent_state = st_MotorON;
  2265  003B76  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2266  003B7A  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2267  003B7E  0E02               	movlw	2
  2268  003B80  D00C               	goto	L2
  2269  003B82                     l25842:
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;sm_Main_MC50.c: 46:         {;sm_Main_MC50.c: 47:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2273  003B82  EE20 F004          	lfsr	2,4
  2274  003B86  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2275  003B88  26D9               	addwf	fsr2l,f,c
  2276  003B8A  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2277  003B8C  22DA               	addwfc	fsr2h,f,c
  2278  003B8E  0E07               	movlw	7
  2279  003B90  18DE               	xorwf	postinc2,w,c
  2280  003B92  10DE               	iorwf	postinc2,w,c
  2281  003B94  A4D8               	btfss	status,2,c
  2282  003B96  D039               	goto	l25858
  2283  003B98  D00F               	goto	u32510
  2284  003B9A                     L2:
  2285  003B9A  6EDE               	movwf	postinc2,c
  2286  003B9C  0E00               	movlw	0
  2287  003B9E  6EDD               	movwf	postdec2,c
  2288  003BA0  D034               	goto	l25858
  2289  003BA2                     l25846:
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;sm_Main_MC50.c: 54:         {;sm_Main_MC50.c: 55:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2293  003BA2  EE20 F004          	lfsr	2,4
  2294  003BA6  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2295  003BA8  26D9               	addwf	fsr2l,f,c
  2296  003BAA  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2297  003BAC  22DA               	addwfc	fsr2h,f,c
  2298  003BAE  0E07               	movlw	7
  2299  003BB0  18DE               	xorwf	postinc2,w,c
  2300  003BB2  10DE               	iorwf	postinc2,w,c
  2301  003BB4  A4D8               	btfss	status,2,c
  2302  003BB6  D006               	goto	l25850
  2303  003BB8                     u32510:
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;sm_Main_MC50.c: 56:             {;sm_Main_MC50.c: 57:                 psm->current_stat
      +                          e = st_standBy;
  2307  003BB8  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2308  003BBC  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2309  003BC0  0E00               	movlw	0
  2310  003BC2  D7EB               	goto	L2
  2311  003BC4                     l25850:
  2312                           
  2313                           ; BSR set to: 0
  2314  003BC4  EE20 F004          	lfsr	2,4
  2315  003BC8  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2316  003BCA  26D9               	addwf	fsr2l,f,c
  2317  003BCC  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2318  003BCE  22DA               	addwfc	fsr2h,f,c
  2319  003BD0  0E06               	movlw	6
  2320  003BD2  18DE               	xorwf	postinc2,w,c
  2321  003BD4  10DE               	iorwf	postinc2,w,c
  2322  003BD6  A4D8               	btfss	status,2,c
  2323  003BD8  D018               	goto	l25858
  2324  003BDA  D7BC               	goto	u32480
  2325  003BDC                     l3053:
  2326                           
  2327                           ; BSR set to: 0
  2328  003BDC  D7FF               	goto	l3053
  2329  003BDE                     l25856:
  2330                           
  2331                           ; BSR set to: 0
  2332  003BDE  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2333  003BE2  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2334  003BE6  50DF               	movf	indf2,w,c
  2335  003BE8  6FEF               	movwf	??_sm_execute_main& (0+255),b
  2336  003BEA  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  2337                           
  2338                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2339                           ; Switch size 1, requested type "simple"
  2340                           ; Number of cases is 1, Range of values is 0 to 0
  2341                           ; switch strategies available:
  2342                           ; Name         Instructions Cycles
  2343                           ; simple_byte            4     3 (average)
  2344                           ;	Chosen strategy is simple_byte
  2345  003BEC  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  2346  003BEE  0A00               	xorlw	0	; case 0
  2347  003BF0  A4D8               	btfss	status,2,c
  2348  003BF2  D7F4               	goto	l3053
  2349                           
  2350                           ; BSR set to: 0
  2351                           ; Switch size 1, requested type "simple"
  2352                           ; Number of cases is 3, Range of values is 0 to 2
  2353                           ; switch strategies available:
  2354                           ; Name         Instructions Cycles
  2355                           ; simple_byte           10     6 (average)
  2356                           ;	Chosen strategy is simple_byte
  2357  003BF4  51EF               	movf	??_sm_execute_main& (0+255),w,b
  2358  003BF6  0A00               	xorlw	0	; case 0
  2359  003BF8  B4D8               	btfsc	status,2,c
  2360  003BFA  D79E               	goto	l25832
  2361  003BFC  0A01               	xorlw	1	; case 1
  2362  003BFE  B4D8               	btfsc	status,2,c
  2363  003C00  D7C0               	goto	l25842
  2364  003C02  0A03               	xorlw	3	; case 2
  2365  003C04  B4D8               	btfsc	status,2,c
  2366  003C06  D7CD               	goto	l25846
  2367  003C08  D7E9               	goto	l3053
  2368  003C0A                     l25858:
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;sm_Main_MC50.c: 77:     sm_send_event(&main_stateMachine, ev_NULL);
  2372  003C0A  0EF1               	movlw	low _main_stateMachine
  2373  003C0C  6E12               	movwf	sm_send_event@psm^0,c
  2374  003C0E  0E01               	movlw	high _main_stateMachine
  2375  003C10  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2376  003C12  0E00               	movlw	0
  2377  003C14  6E15               	movwf	(sm_send_event@event+1)^0,c
  2378  003C16  0E00               	movlw	0
  2379  003C18  6E14               	movwf	sm_send_event@event^0,c
  2380  003C1A  ECF7  F047         	call	_sm_send_event	;wreg free
  2381                           
  2382                           ;sm_Main_MC50.c: 82:     switch((sm_state_Main_t) psm->current_state)
  2383  003C1E  D1FD               	goto	l26136
  2384  003C20                     l25860:
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;sm_Main_MC50.c: 85:         {;sm_Main_MC50.c: 86:             if (button_struct.current
      +                          ==0x27 && button_struct.timer>((1000/50)*5))
  2388  003C20  0E27               	movlw	39
  2389  003C22  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2390  003C24  A4D8               	btfss	status,2,c
  2391  003C26  D016               	goto	l25872
  2392                           
  2393                           ; BSR set to: 0
  2394  003C28  0E64               	movlw	100
  2395  003C2A  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2396  003C2C  D013               	goto	l25872
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;sm_Main_MC50.c: 87:             {;sm_Main_MC50.c: 88:                 load_New_Menu(E_M
      +                          enu);
  2400  003C2E  0E01               	movlw	1
  2401  003C30  EC4D  F025         	call	_load_New_Menu
  2402  003C34                     l25866:
  2403                           
  2404                           ;sm_Main_MC50.c: 89:                 sm_send_event(&main_stateMachine, ev_goto_MenuConfi
      +                          g);
  2405  003C34  0EF1               	movlw	low _main_stateMachine
  2406  003C36  6E12               	movwf	sm_send_event@psm^0,c
  2407  003C38  0E01               	movlw	high _main_stateMachine
  2408  003C3A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2409  003C3C  0E00               	movlw	0
  2410  003C3E  6E15               	movwf	(sm_send_event@event+1)^0,c
  2411  003C40  0E06               	movlw	6
  2412  003C42  6E14               	movwf	sm_send_event@event^0,c
  2413  003C44  ECF7  F047         	call	_sm_send_event	;wreg free
  2414                           
  2415                           ;sm_Main_MC50.c: 90:                 button_struct.processed=1;
  2416  003C48  0E01               	movlw	1
  2417  003C4A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2418                           
  2419                           ;sm_Main_MC50.c: 91:                 temp=0;
  2420  003C4C  0E00               	movlw	0
  2421  003C4E  0100               	movlb	0	; () banked
  2422  003C50  6F80               	movwf	_temp& (0+255),b
  2423                           
  2424                           ;sm_Main_MC50.c: 92:             }
  2425  003C52  0012               	return	
  2426  003C54                     l25872:
  2427                           
  2428                           ; BSR set to: 0
  2429  003C54  0E27               	movlw	39
  2430  003C56  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2431  003C58  A4D8               	btfss	status,2,c
  2432  003C5A  D00B               	goto	l25880
  2433                           
  2434                           ; BSR set to: 0
  2435  003C5C  0E14               	movlw	20
  2436  003C5E  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2437  003C60  D008               	goto	l25880
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;sm_Main_MC50.c: 94:             {;sm_Main_MC50.c: 97:                 SetSegmentValueMa
      +                          in(dP,d0);
  2441  003C62  0E00               	movlw	0
  2442  003C64  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2443  003C66  0E10               	movlw	16
  2444  003C68  ECF5  F04E         	call	_SetSegmentValueMain
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;sm_Main_MC50.c: 98:                 temp=1;
  2448  003C6C  0E01               	movlw	1
  2449  003C6E  6F80               	movwf	_temp& (0+255),b
  2450                           
  2451                           ;sm_Main_MC50.c: 99:             }
  2452  003C70  0012               	return	
  2453  003C72                     l25880:
  2454                           
  2455                           ; BSR set to: 0
  2456  003C72  0580               	decf	_temp& (0+255),w,b
  2457  003C74  A4D8               	btfss	status,2,c
  2458  003C76  D004               	goto	l25890
  2459                           
  2460                           ; BSR set to: 0
  2461                           ;sm_Main_MC50.c: 101:             {;sm_Main_MC50.c: 102:                 load_New_Menu(P
      +                          _Menu);
  2462  003C78  0E00               	movlw	0
  2463  003C7A  EC4D  F025         	call	_load_New_Menu
  2464  003C7E  D7DA               	goto	l25866
  2465  003C80                     l25890:
  2466                           
  2467                           ; BSR set to: 0
  2468  003C80  0E07               	movlw	7
  2469  003C82  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2470  003C84  A4D8               	btfss	status,2,c
  2471  003C86  D007               	goto	l25902
  2472                           
  2473                           ; BSR set to: 0
  2474  003C88  0E78               	movlw	120
  2475  003C8A  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2476  003C8C  D004               	goto	l25902
  2477                           
  2478                           ; BSR set to: 0
  2479                           ;sm_Main_MC50.c: 108:             {;sm_Main_MC50.c: 110:                 load_New_Menu(D
      +                          el_Menu);
  2480  003C8E  0E0D               	movlw	13
  2481  003C90  EC4D  F025         	call	_load_New_Menu
  2482  003C94  D7CF               	goto	l25866
  2483  003C96                     l25902:
  2484                           
  2485                           ; BSR set to: 0
  2486  003C96  0E07               	movlw	7
  2487  003C98  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2488  003C9A  A4D8               	btfss	status,2,c
  2489  003C9C  D00B               	goto	l25910
  2490                           
  2491                           ; BSR set to: 0
  2492  003C9E  0E14               	movlw	20
  2493  003CA0  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2494  003CA2  D008               	goto	l25910
  2495                           
  2496                           ; BSR set to: 0
  2497                           ;sm_Main_MC50.c: 116:             {;sm_Main_MC50.c: 118:                 SetSegmentValue
      +                          Main(d5,dU);
  2498  003CA4  0E13               	movlw	19
  2499  003CA6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2500  003CA8  0E05               	movlw	5
  2501  003CAA  ECF5  F04E         	call	_SetSegmentValueMain
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;sm_Main_MC50.c: 119:                 temp=2;
  2505  003CAE  0E02               	movlw	2
  2506  003CB0  6F80               	movwf	_temp& (0+255),b
  2507                           
  2508                           ;sm_Main_MC50.c: 120:             }
  2509  003CB2  0012               	return	
  2510  003CB4                     l25910:
  2511                           
  2512                           ; BSR set to: 0
  2513  003CB4  0E02               	movlw	2
  2514  003CB6  1980               	xorwf	_temp& (0+255),w,b
  2515  003CB8  A4D8               	btfss	status,2,c
  2516  003CBA  D004               	goto	l25920
  2517                           
  2518                           ; BSR set to: 0
  2519                           ;sm_Main_MC50.c: 122:             {;sm_Main_MC50.c: 123:                 load_New_Menu(S
      +                          _Menu);
  2520  003CBC  0E0C               	movlw	12
  2521  003CBE  EC4D  F025         	call	_load_New_Menu
  2522  003CC2  D7B8               	goto	l25866
  2523  003CC4                     l25920:
  2524                           
  2525                           ; BSR set to: 0
  2526  003CC4  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2527  003CC6  A4D8               	btfss	status,2,c
  2528  003CC8  D009               	goto	l25926
  2529                           
  2530                           ; BSR set to: 0
  2531  003CCA  0101               	movlb	1	; () banked
  2532  003CCC  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
  2533  003CCE  A4D8               	btfss	status,2,c
  2534  003CD0  D005               	goto	l25926
  2535                           
  2536                           ; BSR set to: 1
  2537                           ;sm_Main_MC50.c: 129:             {;sm_Main_MC50.c: 130:                 var_sys.StartFr
      +                          omButton=YES;
  2538  003CD2  0E01               	movlw	1
  2539  003CD4  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2540                           
  2541                           ;sm_Main_MC50.c: 131:                 var_sys.StateMotor=InClose;
  2542  003CD6  0E03               	movlw	3
  2543  003CD8  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2544                           
  2545                           ;sm_Main_MC50.c: 132:             }
  2546  003CDA  0012               	return	
  2547  003CDC                     l25926:
  2548  003CDC  0E17               	movlw	23
  2549  003CDE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2550  003CE0  A4D8               	btfss	status,2,c
  2551  003CE2  D009               	goto	l25932
  2552  003CE4  0101               	movlb	1	; () banked
  2553  003CE6  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
  2554  003CE8  A4D8               	btfss	status,2,c
  2555  003CEA  D005               	goto	l25932
  2556                           
  2557                           ; BSR set to: 1
  2558                           ;sm_Main_MC50.c: 134:             {;sm_Main_MC50.c: 135:                 var_sys.StartFr
      +                          omButton=YES;
  2559  003CEC  0E01               	movlw	1
  2560  003CEE  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2561                           
  2562                           ;sm_Main_MC50.c: 136:                 var_sys.StateMotor=InOpenFull;
  2563  003CF0  0E01               	movlw	1
  2564  003CF2  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2565                           
  2566                           ;sm_Main_MC50.c: 137:             }
  2567  003CF4  0012               	return	
  2568  003CF6                     l25932:
  2569  003CF6  0101               	movlb	1	; () banked
  2570  003CF8  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
  2571  003CFA  A4D8               	btfss	status,2,c
  2572  003CFC  D005               	goto	l25936
  2573                           
  2574                           ; BSR set to: 1
  2575                           ;sm_Main_MC50.c: 139:             {;sm_Main_MC50.c: 140:                 var_sys.StartFr
      +                          omButton=NO;
  2576  003CFE  0E00               	movlw	0
  2577  003D00  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2578                           
  2579                           ;sm_Main_MC50.c: 141:                 var_sys.StateMotor = Stopped;
  2580  003D02  0E00               	movlw	0
  2581  003D04  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2582                           
  2583                           ;sm_Main_MC50.c: 142:             }
  2584  003D06  0012               	return	
  2585  003D08                     l25936:
  2586                           
  2587                           ; BSR set to: 1
  2588  003D08  0E06               	movlw	6
  2589  003D0A  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2590  003D0C  B4D8               	btfsc	status,2,c
  2591  003D0E  D004               	goto	u32690
  2592                           
  2593                           ; BSR set to: 1
  2594  003D10  0E05               	movlw	5
  2595  003D12  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2596  003D14  A4D8               	btfss	status,2,c
  2597  003D16  D015               	goto	l25950
  2598  003D18                     u32690:
  2599                           
  2600                           ; BSR set to: 1
  2601  003D18  0E63               	movlw	99
  2602  003D1A  6444               	cpfsgt	(_rfCMD+9)^0,c	;volatile
  2603  003D1C  D012               	goto	l25950
  2604                           
  2605                           ; BSR set to: 1
  2606                           ;sm_Main_MC50.c: 144:             {;sm_Main_MC50.c: 145:                 load_New_Menu(S
      +                          _Menu);
  2607  003D1E  0E0C               	movlw	12
  2608  003D20  EC4D  F025         	call	_load_New_Menu
  2609                           
  2610                           ;sm_Main_MC50.c: 146:                 sm_send_event(&main_stateMachine, ev_goto_MenuConf
      +                          ig);
  2611  003D24  0EF1               	movlw	low _main_stateMachine
  2612  003D26  6E12               	movwf	sm_send_event@psm^0,c
  2613  003D28  0E01               	movlw	high _main_stateMachine
  2614  003D2A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2615  003D2C  0E00               	movlw	0
  2616  003D2E  6E15               	movwf	(sm_send_event@event+1)^0,c
  2617  003D30  0E06               	movlw	6
  2618  003D32  6E14               	movwf	sm_send_event@event^0,c
  2619  003D34  ECF7  F047         	call	_sm_send_event	;wreg free
  2620                           
  2621                           ;sm_Main_MC50.c: 147:                 var_sys.ProgrammingDistanceIs=rfCMD.currentType;
  2622  003D38  C03B  F13B         	movff	_rfCMD,_var_sys+59	;volatile
  2623                           
  2624                           ;sm_Main_MC50.c: 148:                 rfCMD.processed=1;
  2625  003D3C  0E01               	movlw	1
  2626  003D3E  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  2627                           
  2628                           ;sm_Main_MC50.c: 149:             }
  2629  003D40  0012               	return	
  2630  003D42                     l25950:
  2631                           
  2632                           ; BSR set to: 1
  2633  003D42  BFAB               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2634  003D44  D005               	goto	u32710
  2635  003D46  51AB               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2636  003D48  E111               	bnz	l3065
  2637  003D4A  05AA               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2638  003D4C  B0D8               	btfsc	status,0,c
  2639  003D4E  0012               	return	
  2640  003D50                     u32710:
  2641                           
  2642                           ; BSR set to: 1
  2643                           ;sm_Main_MC50.c: 151:             {;sm_Main_MC50.c: 152:                 if(var_sys.FimC
      +                          urso_CloseIsEnabled == YES)
  2644  003D50  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  2645  003D52  A4D8               	btfss	status,2,c
  2646  003D54  D006               	goto	l25956
  2647                           
  2648                           ; BSR set to: 1
  2649                           ;sm_Main_MC50.c: 154:                     {;sm_Main_MC50.c: 156:                        
      +                           SetSegmentValueMain(dF,dC);
  2650  003D56  0E0C               	movlw	12
  2651  003D58  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2652  003D5A  0E0F               	movlw	15
  2653  003D5C  ECF5  F04E         	call	_SetSegmentValueMain
  2654                           
  2655                           ;sm_Main_MC50.c: 157:                     }
  2656  003D60  0012               	return	
  2657  003D62                     l25956:
  2658                           
  2659                           ; BSR set to: 1
  2660                           ;sm_Main_MC50.c: 160:                 SetSegmentValueMain(dMinus,dMinus);
  2661  003D62  0E18               	movlw	24
  2662  003D64  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2663  003D66  0E18               	movlw	24
  2664  003D68  ECF5  F04E         	call	_SetSegmentValueMain
  2665  003D6C                     l3065:
  2666                           
  2667                           ; BSR set to: 1
  2668  003D6C  0012               	return	
  2669  003D6E                     l25958:
  2670                           
  2671                           ; BSR set to: 0
  2672                           ;sm_Main_MC50.c: 167:         {;sm_Main_MC50.c: 168:             sm_execute_menuConfigur
      +                          ation(&menuConfiguration_stateMachine);
  2673  003D6E  0EBD               	movlw	low _menuConfiguration_stateMachine
  2674  003D70  6FE9               	movwf	sm_execute_menuConfiguration@psm& (0+255),b
  2675  003D72  0E02               	movlw	high _menuConfiguration_stateMachine
  2676  003D74  6FEA               	movwf	(sm_execute_menuConfiguration@psm+1)& (0+255),b
  2677  003D76  EC84  F00C         	call	_sm_execute_menuConfiguration	;wreg free
  2678                           
  2679                           ;sm_Main_MC50.c: 169:         };sm_Main_MC50.c: 170:         break;
  2680  003D7A  0012               	return	
  2681  003D7C                     l25960:
  2682                           
  2683                           ; BSR set to: 0
  2684                           ;sm_Main_MC50.c: 172:         {;sm_Main_MC50.c: 175:             aux_in_auto_close = NO;
  2685  003D7C  0E00               	movlw	0
  2686  003D7E  0101               	movlb	1	; () banked
  2687  003D80  6F8F               	movwf	_aux_in_auto_close& (0+255),b
  2688                           
  2689                           ; BSR set to: 1
  2690                           ;sm_Main_MC50.c: 176:             if ( controlGate_stateMachine.current_state == st_Open
      +                          ed )
  2691  003D82  0E04               	movlw	4
  2692  003D84  19E6               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2693  003D86  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2694  003D88  A4D8               	btfss	status,2,c
  2695  003D8A  D013               	goto	l3088
  2696                           
  2697                           ; BSR set to: 1
  2698                           ;sm_Main_MC50.c: 177:             {;sm_Main_MC50.c: 179:                 if ( var_sys_NV
      +                          M.operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES )
  2699  003D8C  0100               	movlb	0	; () banked
  2700  003D8E  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2701  003D90  A4D8               	btfss	status,2,c
  2702  003D92  D007               	goto	l25970
  2703                           
  2704                           ; BSR set to: 0
  2705  003D94  0101               	movlb	1	; () banked
  2706  003D96  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  2707  003D98  A4D8               	btfss	status,2,c
  2708  003D9A  D003               	goto	l25970
  2709  003D9C                     u32750:
  2710                           
  2711                           ; BSR set to: 1
  2712                           ;sm_Main_MC50.c: 180:                 {;sm_Main_MC50.c: 181:                     aux_in_
      +                          auto_close = YES;
  2713  003D9C  0E01               	movlw	1
  2714  003D9E  6F8F               	movwf	_aux_in_auto_close& (0+255),b
  2715                           
  2716                           ;sm_Main_MC50.c: 182:                 }
  2717  003DA0  D008               	goto	l3088
  2718  003DA2                     l25970:
  2719  003DA2  0100               	movlb	0	; () banked
  2720  003DA4  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2721  003DA6  B4D8               	btfsc	status,2,c
  2722  003DA8  D004               	goto	l3088
  2723                           
  2724                           ; BSR set to: 0
  2725  003DAA  0101               	movlb	1	; () banked
  2726  003DAC  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2727  003DAE  A4D8               	btfss	status,2,c
  2728  003DB0  D7F5               	goto	u32750
  2729  003DB2                     l3088:
  2730                           
  2731                           ;sm_Main_MC50.c: 193:             if(var_sys.StateMotor==Stopped && ( (controlGate_state
      +                          Machine.current_state==st_Opened && aux_in_auto_close==NO) || controlGate_stateMachine.c
      +                          urrent_state==st_Closed || controlGate_stateMachine.current_state==st_Idle ) )
  2732  003DB2  0101               	movlb	1	; () banked
  2733  003DB4  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2734  003DB6  A4D8               	btfss	status,2,c
  2735  003DB8  D06B               	goto	l3102
  2736                           
  2737                           ; BSR set to: 1
  2738  003DBA  0E04               	movlw	4
  2739  003DBC  19E6               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2740  003DBE  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2741  003DC0  A4D8               	btfss	status,2,c
  2742  003DC2  D003               	goto	u32800
  2743                           
  2744                           ; BSR set to: 1
  2745  003DC4  518F               	movf	_aux_in_auto_close& (0+255),w,b
  2746  003DC6  B4D8               	btfsc	status,2,c
  2747  003DC8  D008               	goto	u32820
  2748  003DCA                     u32800:
  2749                           
  2750                           ; BSR set to: 1
  2751  003DCA  05E6               	decf	_controlGate_stateMachine& (0+255),w,b
  2752  003DCC  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2753  003DCE  B4D8               	btfsc	status,2,c
  2754  003DD0  D004               	goto	u32820
  2755                           
  2756                           ; BSR set to: 1
  2757  003DD2  51E6               	movf	_controlGate_stateMachine& (0+255),w,b
  2758  003DD4  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2759  003DD6  A4D8               	btfss	status,2,c
  2760  003DD8  D05B               	goto	l3102
  2761  003DDA                     u32820:
  2762                           
  2763                           ; BSR set to: 1
  2764                           ;sm_Main_MC50.c: 194:             {;sm_Main_MC50.c: 195:                 if (button_stru
      +                          ct.current==0x27 && button_struct.timer>((1000/50)*5))
  2765  003DDA  0E27               	movlw	39
  2766  003DDC  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2767  003DDE  A4D8               	btfss	status,2,c
  2768  003DE0  D015               	goto	l25998
  2769                           
  2770                           ; BSR set to: 1
  2771  003DE2  0E64               	movlw	100
  2772  003DE4  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2773  003DE6  D012               	goto	l25998
  2774                           
  2775                           ; BSR set to: 1
  2776                           ;sm_Main_MC50.c: 196:                 {;sm_Main_MC50.c: 197:                     load_Ne
      +                          w_Menu(E_Menu);
  2777  003DE8  0E01               	movlw	1
  2778  003DEA  EC4D  F025         	call	_load_New_Menu
  2779  003DEE                     l25992:
  2780                           
  2781                           ;sm_Main_MC50.c: 198:                     sm_send_event(&main_stateMachine, ev_goto_Menu
      +                          Config);
  2782  003DEE  0EF1               	movlw	low _main_stateMachine
  2783  003DF0  6E12               	movwf	sm_send_event@psm^0,c
  2784  003DF2  0E01               	movlw	high _main_stateMachine
  2785  003DF4  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2786  003DF6  0E00               	movlw	0
  2787  003DF8  6E15               	movwf	(sm_send_event@event+1)^0,c
  2788  003DFA  0E06               	movlw	6
  2789  003DFC  6E14               	movwf	sm_send_event@event^0,c
  2790  003DFE  ECF7  F047         	call	_sm_send_event	;wreg free
  2791                           
  2792                           ;sm_Main_MC50.c: 199:                     button_struct.processed=1;
  2793  003E02  0E01               	movlw	1
  2794  003E04  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2795                           
  2796                           ;sm_Main_MC50.c: 200:                     temp=0;
  2797  003E06  0E00               	movlw	0
  2798  003E08  0100               	movlb	0	; () banked
  2799  003E0A  D038               	goto	L4
  2800  003E0C                     l25998:
  2801                           
  2802                           ; BSR set to: 1
  2803  003E0C  0E27               	movlw	39
  2804  003E0E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2805  003E10  A4D8               	btfss	status,2,c
  2806  003E12  D00A               	goto	l26006
  2807                           
  2808                           ; BSR set to: 1
  2809  003E14  0E14               	movlw	20
  2810  003E16  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2811  003E18  D007               	goto	l26006
  2812                           
  2813                           ; BSR set to: 1
  2814                           ;sm_Main_MC50.c: 203:                 {;sm_Main_MC50.c: 205:                     SetSegm
      +                          entValueMain(dP,d0);
  2815  003E1A  0E00               	movlw	0
  2816  003E1C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2817  003E1E  0E10               	movlw	16
  2818  003E20  ECF5  F04E         	call	_SetSegmentValueMain
  2819                           
  2820                           ; BSR set to: 0
  2821                           ;sm_Main_MC50.c: 206:                     temp=1;
  2822  003E24  0E01               	movlw	1
  2823  003E26  D02A               	goto	L4
  2824  003E28                     l26006:
  2825                           
  2826                           ; BSR set to: 1
  2827  003E28  0100               	movlb	0	; () banked
  2828  003E2A  0580               	decf	_temp& (0+255),w,b
  2829  003E2C  A4D8               	btfss	status,2,c
  2830  003E2E  D00E               	goto	l26020
  2831                           
  2832                           ; BSR set to: 0
  2833                           ;sm_Main_MC50.c: 209:                 {;sm_Main_MC50.c: 210:                     load_Ne
      +                          w_Menu(P_Menu);
  2834  003E30  0E00               	movlw	0
  2835  003E32  EC4D  F025         	call	_load_New_Menu
  2836                           
  2837                           ;sm_Main_MC50.c: 212:                     button_struct.processed=1;
  2838  003E36  0E01               	movlw	1
  2839  003E38  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2840                           
  2841                           ;sm_Main_MC50.c: 213:                     temp=0;
  2842  003E3A  0E00               	movlw	0
  2843  003E3C  0100               	movlb	0	; () banked
  2844  003E3E  6F80               	movwf	_temp& (0+255),b
  2845                           
  2846                           ; BSR set to: 0
  2847                           ;sm_Main_MC50.c: 214:                     main_stateMachine.current_state = st_MenuConfi
      +                          guration;
  2848  003E40  0E00               	movlw	0
  2849  003E42  0101               	movlb	1	; () banked
  2850  003E44  6FF2               	movwf	(_main_stateMachine+1)& (0+255),b
  2851  003E46  0E01               	movlw	1
  2852  003E48  6FF1               	movwf	_main_stateMachine& (0+255),b
  2853  003E4A  0012               	return	
  2854  003E4C                     l26020:
  2855                           
  2856                           ; BSR set to: 0
  2857  003E4C  0E07               	movlw	7
  2858  003E4E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2859  003E50  A4D8               	btfss	status,2,c
  2860  003E52  D007               	goto	l26032
  2861                           
  2862                           ; BSR set to: 0
  2863  003E54  0E78               	movlw	120
  2864  003E56  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2865  003E58  D004               	goto	l26032
  2866                           
  2867                           ; BSR set to: 0
  2868                           ;sm_Main_MC50.c: 218:             {;sm_Main_MC50.c: 220:                 load_New_Menu(D
      +                          el_Menu);
  2869  003E5A  0E0D               	movlw	13
  2870  003E5C  EC4D  F025         	call	_load_New_Menu
  2871  003E60  D7C6               	goto	l25992
  2872  003E62                     l26032:
  2873                           
  2874                           ; BSR set to: 0
  2875  003E62  0E07               	movlw	7
  2876  003E64  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2877  003E66  A4D8               	btfss	status,2,c
  2878  003E68  D00B               	goto	l26040
  2879                           
  2880                           ; BSR set to: 0
  2881  003E6A  0E14               	movlw	20
  2882  003E6C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2883  003E6E  D008               	goto	l26040
  2884                           
  2885                           ; BSR set to: 0
  2886                           ;sm_Main_MC50.c: 226:             {;sm_Main_MC50.c: 228:                 SetSegmentValue
      +                          Main(d5,dU);
  2887  003E70  0E13               	movlw	19
  2888  003E72  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2889  003E74  0E05               	movlw	5
  2890  003E76  ECF5  F04E         	call	_SetSegmentValueMain
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;sm_Main_MC50.c: 229:                 temp=2;
  2894  003E7A  0E02               	movlw	2
  2895  003E7C                     L4:
  2896  003E7C  6F80               	movwf	_temp& (0+255),b
  2897                           
  2898                           ;sm_Main_MC50.c: 230:             }
  2899  003E7E  D008               	goto	l3102
  2900  003E80                     l26040:
  2901                           
  2902                           ; BSR set to: 0
  2903  003E80  0E02               	movlw	2
  2904  003E82  1980               	xorwf	_temp& (0+255),w,b
  2905  003E84  A4D8               	btfss	status,2,c
  2906  003E86  D004               	goto	l3102
  2907                           
  2908                           ; BSR set to: 0
  2909                           ;sm_Main_MC50.c: 232:             {;sm_Main_MC50.c: 233:                 load_New_Menu(S
      +                          _Menu);
  2910  003E88  0E0C               	movlw	12
  2911  003E8A  EC4D  F025         	call	_load_New_Menu
  2912  003E8E  D6D2               	goto	l25866
  2913  003E90                     l3102:
  2914                           
  2915                           ;sm_Main_MC50.c: 243:             if( ts_system.timeSinalizationDigit<=0 && (button_stru
      +                          ct.current!=0x27 && button_struct.current!=0x07) )
  2916                           
  2917                           ; BSR set to: 0
  2918  003E90  0101               	movlb	1	; () banked
  2919  003E92  BFAB               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2920  003E94  D005               	goto	u32930
  2921  003E96  51AB               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2922  003E98  E102               	bnz	u32931
  2923  003E9A  05AA               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2924  003E9C  B0D8               	btfsc	status,0,c
  2925  003E9E                     u32931:
  2926  003E9E  0012               	return	
  2927  003EA0                     u32930:
  2928                           
  2929                           ; BSR set to: 1
  2930  003EA0  0E27               	movlw	39
  2931  003EA2  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2932  003EA4  B4D8               	btfsc	status,2,c
  2933  003EA6  0012               	return	
  2934                           
  2935                           ; BSR set to: 1
  2936  003EA8  0E07               	movlw	7
  2937  003EAA  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2938  003EAC  B4D8               	btfsc	status,2,c
  2939  003EAE  0012               	return	
  2940                           
  2941                           ; BSR set to: 1
  2942                           ;sm_Main_MC50.c: 244:             {;sm_Main_MC50.c: 245:                 if(var_sys.Stat
      +                          eMotor==InClose )
  2943  003EB0  0E03               	movlw	3
  2944  003EB2  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2945  003EB4  A4D8               	btfss	status,2,c
  2946  003EB6  D011               	goto	l26066
  2947                           
  2948                           ; BSR set to: 1
  2949                           ;sm_Main_MC50.c: 246:                 {;sm_Main_MC50.c: 248:                    SetSegme
      +                          ntValueIntermitentMain(dC,dL,( 500/50));
  2950  003EB8  0E12               	movlw	18
  2951  003EBA  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2952  003EBC  0E00               	movlw	0
  2953  003EBE  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2954  003EC0  0E0A               	movlw	10
  2955  003EC2  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2956  003EC4  0E0C               	movlw	12
  2957  003EC6  EC91  F04F         	call	_SetSegmentValueIntermitentMain
  2958  003ECA                     l26062:
  2959                           
  2960                           ;sm_Main_MC50.c: 249:                    ts_system.timeSinalizationDigit=( 200/50);
  2961  003ECA  0E00               	movlw	0
  2962  003ECC  0101               	movlb	1	; () banked
  2963  003ECE  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
  2964  003ED0  0E04               	movlw	4
  2965  003ED2  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
  2966                           
  2967                           ; BSR set to: 1
  2968                           ;sm_Main_MC50.c: 251:                     var_sys.showAP = NO;
  2969  003ED4  0E00               	movlw	0
  2970  003ED6  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
  2971                           
  2972                           ;sm_Main_MC50.c: 252:                 }
  2973  003ED8  0012               	return	
  2974  003EDA                     l26066:
  2975                           
  2976                           ; BSR set to: 1
  2977  003EDA  0E02               	movlw	2
  2978  003EDC  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2979  003EDE  B4D8               	btfsc	status,2,c
  2980  003EE0  D003               	goto	u32980
  2981                           
  2982                           ; BSR set to: 1
  2983  003EE2  0500               	decf	_var_sys& (0+255),w,b	;volatile
  2984  003EE4  A4D8               	btfss	status,2,c
  2985  003EE6  D00A               	goto	l26076
  2986  003EE8                     u32980:
  2987                           
  2988                           ; BSR set to: 1
  2989                           ;sm_Main_MC50.c: 254:                 {;sm_Main_MC50.c: 256:                     SetSegm
      +                          entValueIntermitentMain(d0,dP,( 500/50));
  2990  003EE8  0E10               	movlw	16
  2991  003EEA  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2992  003EEC  0E00               	movlw	0
  2993  003EEE  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2994  003EF0  0E0A               	movlw	10
  2995  003EF2  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2996  003EF4  0E00               	movlw	0
  2997  003EF6  EC91  F04F         	call	_SetSegmentValueIntermitentMain
  2998  003EFA  D7E7               	goto	l26062
  2999  003EFC                     l26076:
  3000                           
  3001                           ; BSR set to: 1
  3002  003EFC  5100               	movf	_var_sys& (0+255),w,b	;volatile
  3003  003EFE  A4D8               	btfss	status,2,c
  3004  003F00  D00F               	goto	l26082
  3005                           
  3006                           ; BSR set to: 1
  3007  003F02  05E6               	decf	_controlGate_stateMachine& (0+255),w,b
  3008  003F04  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  3009  003F06  A4D8               	btfss	status,2,c
  3010  003F08  D00B               	goto	l26082
  3011                           
  3012                           ; BSR set to: 1
  3013                           ;sm_Main_MC50.c: 262:                 {;sm_Main_MC50.c: 263:                     sm_send
      +                          _event(&main_stateMachine, ev_goto_StandBy);
  3014  003F0A  0EF1               	movlw	low _main_stateMachine
  3015  003F0C  6E12               	movwf	sm_send_event@psm^0,c
  3016  003F0E  0E01               	movlw	high _main_stateMachine
  3017  003F10  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3018  003F12  0E00               	movlw	0
  3019  003F14  6E15               	movwf	(sm_send_event@event+1)^0,c
  3020  003F16  0E07               	movlw	7
  3021  003F18  6E14               	movwf	sm_send_event@event^0,c
  3022  003F1A  ECF7  F047         	call	_sm_send_event	;wreg free
  3023                           
  3024                           ;sm_Main_MC50.c: 264:                 }
  3025  003F1E  0012               	return	
  3026  003F20                     l26082:
  3027                           
  3028                           ; BSR set to: 1
  3029  003F20  5100               	movf	_var_sys& (0+255),w,b	;volatile
  3030  003F22  A4D8               	btfss	status,2,c
  3031  003F24  D074               	goto	l26132
  3032                           
  3033                           ; BSR set to: 1
  3034  003F26  0E04               	movlw	4
  3035  003F28  19E6               	xorwf	_controlGate_stateMachine& (0+255),w,b
  3036  003F2A  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  3037  003F2C  A4D8               	btfss	status,2,c
  3038  003F2E  D06F               	goto	l26132
  3039                           
  3040                           ; BSR set to: 1
  3041                           ;sm_Main_MC50.c: 266:                 {;sm_Main_MC50.c: 268:                     if
  3042  003F30  0100               	movlb	0	; () banked
  3043  003F32  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3044  003F34  B4D8               	btfsc	status,2,c
  3045  003F36  D00B               	goto	u33060
  3046                           
  3047                           ; BSR set to: 0
  3048  003F38  0101               	movlb	1	; () banked
  3049  003F3A  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3050  003F3C  B4D8               	btfsc	status,2,c
  3051  003F3E  D007               	goto	u33060
  3052                           
  3053                           ; BSR set to: 1
  3054  003F40  050B               	decf	(_var_sys+11)& (0+255),w,b	;volatile
  3055  003F42  B4D8               	btfsc	status,2,c
  3056  003F44  D013               	goto	u33100
  3057                           
  3058                           ; BSR set to: 1
  3059  003F46  0E03               	movlw	3
  3060  003F48  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3061  003F4A  B4D8               	btfsc	status,2,c
  3062  003F4C  D00F               	goto	u33100
  3063  003F4E                     u33060:
  3064  003F4E  0100               	movlb	0	; () banked
  3065  003F50  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3066  003F52  A4D8               	btfss	status,2,c
  3067  003F54  D026               	goto	l26110
  3068                           
  3069                           ; BSR set to: 0
  3070  003F56  0101               	movlb	1	; () banked
  3071  003F58  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3072  003F5A  A4D8               	btfss	status,2,c
  3073  003F5C  D022               	goto	l26110
  3074                           
  3075                           ; BSR set to: 1
  3076  003F5E  0E02               	movlw	2
  3077  003F60  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3078  003F62  B4D8               	btfsc	status,2,c
  3079  003F64  D01E               	goto	l26110
  3080                           
  3081                           ; BSR set to: 1
  3082  003F66  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3083  003F68  B4D8               	btfsc	status,2,c
  3084  003F6A  D01B               	goto	l26110
  3085  003F6C                     u33100:
  3086                           
  3087                           ; BSR set to: 1
  3088                           ;sm_Main_MC50.c: 273:                     {;sm_Main_MC50.c: 274:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3089  003F6C  0E00               	movlw	0
  3090  003F6E  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3091  003F70  0E0A               	movlw	10
  3092  003F72  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3093                           
  3094                           ; BSR set to: 1
  3095                           ;sm_Main_MC50.c: 279:                         if ( var_sys.showAP == YES )
  3096  003F74  054F               	decf	(_var_sys+79)& (0+255),w,b	;volatile
  3097  003F76  A4D8               	btfss	status,2,c
  3098  003F78  D00A               	goto	l26108
  3099                           
  3100                           ; BSR set to: 1
  3101                           ;sm_Main_MC50.c: 280:                         {;sm_Main_MC50.c: 281:                    
      +                                   SetSegmentValueIntermitentMain(dA,dP,( 500/50));
  3102  003F7A  0E10               	movlw	16
  3103  003F7C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3104  003F7E  0E00               	movlw	0
  3105  003F80  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3106  003F82  0E0A               	movlw	10
  3107  003F84  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3108  003F86  0E0A               	movlw	10
  3109  003F88  EC91  F04F         	call	_SetSegmentValueIntermitentMain
  3110                           
  3111                           ;sm_Main_MC50.c: 282:                         }
  3112  003F8C  0012               	return	
  3113  003F8E                     l26108:
  3114                           
  3115                           ; BSR set to: 1
  3116                           ;sm_Main_MC50.c: 284:                         {;sm_Main_MC50.c: 285:                    
      +                                   SetSegmentValueIntermitentMain(dA,dF,( 500/50));
  3117  003F8E  0E0F               	movlw	15
  3118  003F90  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3119  003F92  0E00               	movlw	0
  3120  003F94  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3121  003F96  0E0A               	movlw	10
  3122  003F98  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3123  003F9A  0E0A               	movlw	10
  3124  003F9C  EC91  F04F         	call	_SetSegmentValueIntermitentMain
  3125  003FA0  0012               	return	
  3126  003FA2                     l26110:
  3127  003FA2  0100               	movlb	0	; () banked
  3128  003FA4  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3129  003FA6  B4D8               	btfsc	status,2,c
  3130  003FA8  D008               	goto	u33140
  3131                           
  3132                           ; BSR set to: 0
  3133  003FAA  0101               	movlb	1	; () banked
  3134  003FAC  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3135  003FAE  B4D8               	btfsc	status,2,c
  3136  003FB0  D004               	goto	u33140
  3137                           
  3138                           ; BSR set to: 1
  3139  003FB2  0E02               	movlw	2
  3140  003FB4  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3141  003FB6  B4D8               	btfsc	status,2,c
  3142  003FB8  D00C               	goto	u33170
  3143  003FBA                     u33140:
  3144  003FBA  0100               	movlb	0	; () banked
  3145  003FBC  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3146  003FBE  A4D8               	btfss	status,2,c
  3147  003FC0  D016               	goto	l26126
  3148                           
  3149                           ; BSR set to: 0
  3150  003FC2  0101               	movlb	1	; () banked
  3151  003FC4  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3152  003FC6  A4D8               	btfss	status,2,c
  3153  003FC8  D012               	goto	l26126
  3154                           
  3155                           ; BSR set to: 1
  3156  003FCA  0E02               	movlw	2
  3157  003FCC  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3158  003FCE  A4D8               	btfss	status,2,c
  3159  003FD0  D00E               	goto	l26126
  3160  003FD2                     u33170:
  3161                           
  3162                           ; BSR set to: 1
  3163                           ;sm_Main_MC50.c: 294:                     {;sm_Main_MC50.c: 295:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3164  003FD2  0E00               	movlw	0
  3165  003FD4  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3166  003FD6  0E0A               	movlw	10
  3167  003FD8  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3168                           
  3169                           ; BSR set to: 1
  3170                           ;sm_Main_MC50.c: 297:                         SetSegmentValueIntermitentMain(dA,dP,( 500
      +                          /50));
  3171  003FDA  0E10               	movlw	16
  3172  003FDC  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3173  003FDE  0E00               	movlw	0
  3174  003FE0  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3175  003FE2  0E0A               	movlw	10
  3176  003FE4  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3177  003FE6  0E0A               	movlw	10
  3178  003FE8  EC91  F04F         	call	_SetSegmentValueIntermitentMain
  3179                           
  3180                           ;sm_Main_MC50.c: 298:                     }
  3181  003FEC  0012               	return	
  3182  003FEE                     l26126:
  3183  003FEE  0101               	movlb	1	; () banked
  3184  003FF0  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
  3185  003FF2  A4D8               	btfss	status,2,c
  3186  003FF4  D006               	goto	l26130
  3187                           
  3188                           ; BSR set to: 1
  3189                           ;sm_Main_MC50.c: 301:                     {;sm_Main_MC50.c: 303:                        
      +                           SetSegmentValueMain(dF,d0);
  3190  003FF6  0E00               	movlw	0
  3191  003FF8  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3192  003FFA  0E0F               	movlw	15
  3193  003FFC  ECF5  F04E         	call	_SetSegmentValueMain
  3194                           
  3195                           ;sm_Main_MC50.c: 304:                     }
  3196  004000  0012               	return	
  3197  004002                     l26130:
  3198                           
  3199                           ; BSR set to: 1
  3200                           ;sm_Main_MC50.c: 306:                     {;sm_Main_MC50.c: 307:                       S
      +                          etSegmentValueMain(dMinus,dMinus);
  3201  004002  0E18               	movlw	24
  3202  004004  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3203  004006  0E18               	movlw	24
  3204  004008  ECF5  F04E         	call	_SetSegmentValueMain
  3205  00400C  0012               	return	
  3206  00400E                     l26132:
  3207                           
  3208                           ; BSR set to: 1
  3209                           ;sm_Main_MC50.c: 311:                 {;sm_Main_MC50.c: 313:                     SetSegm
      +                          entValueMain(dMinus,dMinus);
  3210  00400E  0E18               	movlw	24
  3211  004010  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3212  004012  0E18               	movlw	24
  3213  004014  ECF5  F04E         	call	_SetSegmentValueMain
  3214  004018  0012               	return	
  3215  00401A                     l26136:
  3216  00401A  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  3217  00401E  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  3218  004022  50DF               	movf	indf2,w,c
  3219  004024  0100               	movlb	0	; () banked
  3220  004026  6FEF               	movwf	??_sm_execute_main& (0+255),b
  3221  004028  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  3222                           
  3223                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3224                           ; Switch size 1, requested type "simple"
  3225                           ; Number of cases is 1, Range of values is 0 to 0
  3226                           ; switch strategies available:
  3227                           ; Name         Instructions Cycles
  3228                           ; simple_byte            4     3 (average)
  3229                           ;	Chosen strategy is simple_byte
  3230  00402A  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  3231  00402C  0A00               	xorlw	0	; case 0
  3232  00402E  A4D8               	btfss	status,2,c
  3233  004030  0012               	return	
  3234                           
  3235                           ; BSR set to: 0
  3236                           ; Switch size 1, requested type "simple"
  3237                           ; Number of cases is 3, Range of values is 0 to 2
  3238                           ; switch strategies available:
  3239                           ; Name         Instructions Cycles
  3240                           ; simple_byte           10     6 (average)
  3241                           ;	Chosen strategy is simple_byte
  3242  004032  51EF               	movf	??_sm_execute_main& (0+255),w,b
  3243  004034  0A00               	xorlw	0	; case 0
  3244  004036  B4D8               	btfsc	status,2,c
  3245  004038  D5F3               	goto	l25860
  3246  00403A  0A01               	xorlw	1	; case 1
  3247  00403C  B4D8               	btfsc	status,2,c
  3248  00403E  D697               	goto	l25958
  3249  004040  0A03               	xorlw	3	; case 2
  3250  004042  A4D8               	btfss	status,2,c
  3251  004044  0012               	return	
  3252  004046  D69A               	goto	l25960
  3253  004048                     __end_of_sm_execute_main:
  3254                           	callstack 0
  3255                           
  3256 ;; *************** function _sm_execute_menuConfiguration *****************
  3257 ;; Defined at:
  3258 ;;		line 33 in file "sm_MenuConfiguration_MC50.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;  psm             2   17[BANK0 ] PTR struct .
  3261 ;;		 -> menuConfiguration_stateMachine(11), 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;		None
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  1    wreg      void 
  3266 ;; Registers used:
  3267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3268 ;; Tracked objects:
  3269 ;;		On entry : 3F/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3273 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3275 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3276 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3277 ;;Total ram usage:        4 bytes
  3278 ;; Hardware stack levels used: 1
  3279 ;; Hardware stack levels required when called: 15
  3280 ;; This function calls:
  3281 ;;		_ClearFlag_rfCMD
  3282 ;;		_ResetDefaultMemory
  3283 ;;		_SaveNVM_VarSystem
  3284 ;;		_SetSegmentValueIntermitentMain
  3285 ;;		_SetSegmentValueMain
  3286 ;;		___lbdiv
  3287 ;;		___lldiv
  3288 ;;		___lmul
  3289 ;;		___lwdiv
  3290 ;;		_controlLearnDigit
  3291 ;;		_controlSaveRemote
  3292 ;;		_controlSelectRemote
  3293 ;;		_load_New_Menu
  3294 ;;		_setValueToEdit
  3295 ;;		_sm_send_event
  3296 ;; This function is called by:
  3297 ;;		_sm_execute_main
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301                           	psect	text2
  3302  001908                     __ptext2:
  3303                           	callstack 0
  3304  001908                     _sm_execute_menuConfiguration:
  3305                           	callstack 14
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;sm_MenuConfiguration_MC50.c: 36:     switch((sm_state_Menu_t) psm->current_state)
  3309                           
  3310                           ;incstack = 0
  3311  001908  D0A2               	goto	l24274
  3312  00190A                     l24216:
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;sm_MenuConfiguration_MC50.c: 39:         {;sm_MenuConfiguration_MC50.c: 40:            
      +                           if(psm->last_event==ev_ParameterIsSelected)
  3316  00190A  EE20 F004          	lfsr	2,4
  3317  00190E  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3318  001910  26D9               	addwf	fsr2l,f,c
  3319  001912  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3320  001914  22DA               	addwfc	fsr2h,f,c
  3321  001916  04DE               	decf	postinc2,w,c
  3322  001918  10DE               	iorwf	postinc2,w,c
  3323  00191A  A4D8               	btfss	status,2,c
  3324  00191C  D006               	goto	l24220
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;sm_MenuConfiguration_MC50.c: 41:             {;sm_MenuConfiguration_MC50.c: 42:        
      +                                   psm->current_state = st_EditParameter;
  3328  00191E  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3329  001922  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3330  001926  0E01               	movlw	1
  3331  001928  D04C               	goto	L9
  3332  00192A                     l24220:
  3333                           
  3334                           ; BSR set to: 0
  3335  00192A  EE20 F004          	lfsr	2,4
  3336  00192E  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3337  001930  26D9               	addwf	fsr2l,f,c
  3338  001932  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3339  001934  22DA               	addwfc	fsr2h,f,c
  3340  001936  0E05               	movlw	5
  3341  001938  18DE               	xorwf	postinc2,w,c
  3342  00193A  10DE               	iorwf	postinc2,w,c
  3343  00193C  A4D8               	btfss	status,2,c
  3344  00193E  D006               	goto	l24224
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;sm_MenuConfiguration_MC50.c: 45:             {;sm_MenuConfiguration_MC50.c: 46:        
      +                                   psm->current_state = st_Counter;
  3348  001940  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3349  001944  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3350  001948  0E03               	movlw	3
  3351  00194A  D03B               	goto	L9
  3352  00194C                     l24224:
  3353                           
  3354                           ; BSR set to: 0
  3355  00194C  EE20 F004          	lfsr	2,4
  3356  001950  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3357  001952  26D9               	addwf	fsr2l,f,c
  3358  001954  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3359  001956  22DA               	addwfc	fsr2h,f,c
  3360  001958  0E08               	movlw	8
  3361  00195A  18DE               	xorwf	postinc2,w,c
  3362  00195C  10DE               	iorwf	postinc2,w,c
  3363  00195E  A4D8               	btfss	status,2,c
  3364  001960  D006               	goto	l24228
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;sm_MenuConfiguration_MC50.c: 49:             {;sm_MenuConfiguration_MC50.c: 50:        
      +                                   psm->current_state = st_SelectRemote;
  3368  001962  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3369  001966  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3370  00196A  0E04               	movlw	4
  3371  00196C  D02A               	goto	L9
  3372  00196E                     l24228:
  3373                           
  3374                           ; BSR set to: 0
  3375  00196E  EE20 F004          	lfsr	2,4
  3376  001972  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3377  001974  26D9               	addwf	fsr2l,f,c
  3378  001976  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3379  001978  22DA               	addwfc	fsr2h,f,c
  3380  00197A  0E14               	movlw	20
  3381  00197C  18DE               	xorwf	postinc2,w,c
  3382  00197E  10DE               	iorwf	postinc2,w,c
  3383  001980  A4D8               	btfss	status,2,c
  3384  001982  D087               	goto	l24276
  3385                           
  3386                           ; BSR set to: 0
  3387                           ;sm_MenuConfiguration_MC50.c: 53:             {;sm_MenuConfiguration_MC50.c: 55:        
      +                                   psm->current_state = st_LearningMode;
  3388  001984  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3389  001988  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3390  00198C  0E06               	movlw	6
  3391  00198E  D019               	goto	L9
  3392  001990                     l24232:
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;sm_MenuConfiguration_MC50.c: 65:         {;sm_MenuConfiguration_MC50.c: 66:            
      +                           if(psm->last_event==ev_ParameterIsEdited)
  3396  001990  EE20 F004          	lfsr	2,4
  3397  001994  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3398  001996  26D9               	addwf	fsr2l,f,c
  3399  001998  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3400  00199A  22DA               	addwfc	fsr2h,f,c
  3401  00199C  0E02               	movlw	2
  3402  00199E  18DE               	xorwf	postinc2,w,c
  3403  0019A0  10DE               	iorwf	postinc2,w,c
  3404  0019A2  A4D8               	btfss	status,2,c
  3405  0019A4  D006               	goto	l24236
  3406                           
  3407                           ; BSR set to: 0
  3408                           ;sm_MenuConfiguration_MC50.c: 67:             {;sm_MenuConfiguration_MC50.c: 68:        
      +                                   psm->current_state = st_SaveParameter;
  3409  0019A6  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3410  0019AA  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3411  0019AE  0E02               	movlw	2
  3412  0019B0  D008               	goto	L9
  3413  0019B2                     l24236:
  3414                           
  3415                           ; BSR set to: 0
  3416  0019B2  EE20 F004          	lfsr	2,4
  3417  0019B6  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3418  0019B8  26D9               	addwf	fsr2l,f,c
  3419  0019BA  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3420  0019BC  22DA               	addwfc	fsr2h,f,c
  3421  0019BE  0E03               	movlw	3
  3422  0019C0  D03B               	goto	L125
  3423  0019C2                     L9:
  3424  0019C2  6EDE               	movwf	postinc2,c
  3425  0019C4  0E00               	movlw	0
  3426  0019C6  6EDD               	movwf	postdec2,c
  3427  0019C8  D064               	goto	l24276
  3428  0019CA                     l24244:
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;sm_MenuConfiguration_MC50.c: 85:         {;sm_MenuConfiguration_MC50.c: 86:            
      +                           if(psm->last_event==ev_ParameterIsSaved)
  3432  0019CA  EE20 F004          	lfsr	2,4
  3433  0019CE  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3434  0019D0  26D9               	addwf	fsr2l,f,c
  3435  0019D2  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3436  0019D4  22DA               	addwfc	fsr2h,f,c
  3437  0019D6  0E04               	movlw	4
  3438  0019D8  18DE               	xorwf	postinc2,w,c
  3439  0019DA  10DE               	iorwf	postinc2,w,c
  3440  0019DC  A4D8               	btfss	status,2,c
  3441  0019DE  D7E9               	goto	l24236
  3442  0019E0  D02F               	goto	u29180
  3443  0019E2                     l24252:
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;sm_MenuConfiguration_MC50.c: 97:         {;sm_MenuConfiguration_MC50.c: 98:            
      +                           if(psm->last_event==ev_addRemotes)
  3447  0019E2  EE20 F004          	lfsr	2,4
  3448  0019E6  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3449  0019E8  26D9               	addwf	fsr2l,f,c
  3450  0019EA  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3451  0019EC  22DA               	addwfc	fsr2h,f,c
  3452  0019EE  0E08               	movlw	8
  3453  0019F0  18DE               	xorwf	postinc2,w,c
  3454  0019F2  10DE               	iorwf	postinc2,w,c
  3455  0019F4  A4D8               	btfss	status,2,c
  3456  0019F6  D7DD               	goto	l24236
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;sm_MenuConfiguration_MC50.c: 99:             {;sm_MenuConfiguration_MC50.c: 100:       
      +                                    psm->current_state = st_SaveRemotes;
  3460  0019F8  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3461  0019FC  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3462  001A00  0E05               	movlw	5
  3463  001A02  D7DF               	goto	L9
  3464  001A04                     l24260:
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;sm_MenuConfiguration_MC50.c: 109:         {;sm_MenuConfiguration_MC50.c: 110:          
      +                             if(psm->last_event==ev_NextRemote)
  3468  001A04  EE20 F004          	lfsr	2,4
  3469  001A08  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3470  001A0A  26D9               	addwf	fsr2l,f,c
  3471  001A0C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3472  001A0E  22DA               	addwfc	fsr2h,f,c
  3473  001A10  0E09               	movlw	9
  3474  001A12  18DE               	xorwf	postinc2,w,c
  3475  001A14  10DE               	iorwf	postinc2,w,c
  3476  001A16  A4D8               	btfss	status,2,c
  3477  001A18  D008               	goto	l24268
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;sm_MenuConfiguration_MC50.c: 111:             {;sm_MenuConfiguration_MC50.c: 112:      
      +                                     psm->current_state = st_SelectRemote;
  3481  001A1A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3482  001A1E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3483  001A22  0E04               	movlw	4
  3484  001A24  6EDE               	movwf	postinc2,c
  3485  001A26  0E00               	movlw	0
  3486  001A28  6EDD               	movwf	postdec2,c
  3487  001A2A                     l24268:
  3488                           
  3489                           ; BSR set to: 0
  3490                           ;sm_MenuConfiguration_MC50.c: 121:         {;sm_MenuConfiguration_MC50.c: 122:          
      +                             if(psm->last_event==ev_ParameterIsSaved)
  3491  001A2A  EE20 F004          	lfsr	2,4
  3492  001A2E  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3493  001A30  26D9               	addwf	fsr2l,f,c
  3494  001A32  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3495  001A34  22DA               	addwfc	fsr2h,f,c
  3496  001A36  0E04               	movlw	4
  3497  001A38                     L125:
  3498  001A38  18DE               	xorwf	postinc2,w,c
  3499  001A3A  10DE               	iorwf	postinc2,w,c
  3500  001A3C  A4D8               	btfss	status,2,c
  3501  001A3E  D029               	goto	l24276
  3502  001A40                     u29180:
  3503                           
  3504                           ; BSR set to: 0
  3505                           ;sm_MenuConfiguration_MC50.c: 123:             {;sm_MenuConfiguration_MC50.c: 124:      
      +                                     psm->current_state = st_MainMenu;
  3506  001A40  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3507  001A44  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3508  001A48  0E00               	movlw	0
  3509  001A4A  D7BB               	goto	L9
  3510  001A4C                     l3233:
  3511                           
  3512                           ; BSR set to: 0
  3513  001A4C  D7FF               	goto	l3233
  3514  001A4E                     l24274:
  3515                           
  3516                           ; BSR set to: 0
  3517  001A4E  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3518  001A52  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3519  001A56  50DF               	movf	indf2,w,c
  3520  001A58  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3521  001A5A  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  3522                           
  3523                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3524                           ; Switch size 1, requested type "simple"
  3525                           ; Number of cases is 1, Range of values is 0 to 0
  3526                           ; switch strategies available:
  3527                           ; Name         Instructions Cycles
  3528                           ; simple_byte            4     3 (average)
  3529                           ;	Chosen strategy is simple_byte
  3530  001A5C  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  3531  001A5E  0A00               	xorlw	0	; case 0
  3532  001A60  A4D8               	btfss	status,2,c
  3533  001A62  D7F4               	goto	l3233
  3534                           
  3535                           ; BSR set to: 0
  3536                           ; Switch size 1, requested type "simple"
  3537                           ; Number of cases is 7, Range of values is 0 to 6
  3538                           ; switch strategies available:
  3539                           ; Name         Instructions Cycles
  3540                           ; simple_byte           22    12 (average)
  3541                           ;	Chosen strategy is simple_byte
  3542  001A64  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3543  001A66  0A00               	xorlw	0	; case 0
  3544  001A68  B4D8               	btfsc	status,2,c
  3545  001A6A  D74F               	goto	l24216
  3546  001A6C  0A01               	xorlw	1	; case 1
  3547  001A6E  B4D8               	btfsc	status,2,c
  3548  001A70  D78F               	goto	l24232
  3549  001A72  0A03               	xorlw	3	; case 2
  3550  001A74  B4D8               	btfsc	status,2,c
  3551  001A76  D7D9               	goto	l24268
  3552  001A78  0A01               	xorlw	1	; case 3
  3553  001A7A  B4D8               	btfsc	status,2,c
  3554  001A7C  D7A6               	goto	l24244
  3555  001A7E  0A07               	xorlw	7	; case 4
  3556  001A80  B4D8               	btfsc	status,2,c
  3557  001A82  D7AF               	goto	l24252
  3558  001A84  0A01               	xorlw	1	; case 5
  3559  001A86  B4D8               	btfsc	status,2,c
  3560  001A88  D7BD               	goto	l24260
  3561  001A8A  0A03               	xorlw	3	; case 6
  3562  001A8C  B4D8               	btfsc	status,2,c
  3563  001A8E  D7CD               	goto	l24268
  3564  001A90  D7DD               	goto	l3233
  3565  001A92                     l24276:
  3566                           
  3567                           ; BSR set to: 0
  3568                           ;sm_MenuConfiguration_MC50.c: 137:     sm_send_event(&menuConfiguration_stateMachine, ev
      +                          _NULL);
  3569  001A92  0EBD               	movlw	low _menuConfiguration_stateMachine
  3570  001A94  6E12               	movwf	sm_send_event@psm^0,c
  3571  001A96  0E02               	movlw	high _menuConfiguration_stateMachine
  3572  001A98  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3573  001A9A  0E00               	movlw	0
  3574  001A9C  6E15               	movwf	(sm_send_event@event+1)^0,c
  3575  001A9E  0E00               	movlw	0
  3576  001AA0  6E14               	movwf	sm_send_event@event^0,c
  3577  001AA2  ECF7  F047         	call	_sm_send_event	;wreg free
  3578                           
  3579                           ;sm_MenuConfiguration_MC50.c: 142:     switch((sm_state_Menu_t) psm->current_state)
  3580  001AA6  D3C1               	goto	l24588
  3581  001AA8                     l24278:
  3582                           
  3583                           ; BSR set to: 0
  3584                           ;sm_MenuConfiguration_MC50.c: 145:         {;sm_MenuConfiguration_MC50.c: 146:          
      +                             if(var_sys.ProgrammingDistanceIs==TypeProgrammingModeFull)
  3585  001AA8  0E06               	movlw	6
  3586  001AAA  0101               	movlb	1	; () banked
  3587  001AAC  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3588  001AAE  A4D8               	btfss	status,2,c
  3589  001AB0  D02F               	goto	l24288
  3590                           
  3591                           ; BSR set to: 1
  3592                           ;sm_MenuConfiguration_MC50.c: 147:             {;sm_MenuConfiguration_MC50.c: 148:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3593  001AB2  0E00               	movlw	0
  3594  001AB4  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3595  001AB6  0EC8               	movlw	200
  3596  001AB8  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3597                           
  3598                           ;sm_MenuConfiguration_MC50.c: 149:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3599  001ABA  0E01               	movlw	1
  3600  001ABC  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3601                           
  3602                           ;sm_MenuConfiguration_MC50.c: 150:                 menu_st.parameterSelected=0;
  3603  001ABE  0E00               	movlw	0
  3604  001AC0  6F68               	movwf	(_menu_st+23)& (0+255),b
  3605                           
  3606                           ; BSR set to: 1
  3607                           ;sm_MenuConfiguration_MC50.c: 151:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3608  001AC2  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3609  001AC6  5166               	movf	(_menu_st+21)& (0+255),w,b
  3610  001AC8  EC02  F01B         	call	_setValueToEdit
  3611  001ACC  0900               	iorlw	0
  3612  001ACE  B4D8               	btfsc	status,2,c
  3613  001AD0  0012               	return	
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;sm_MenuConfiguration_MC50.c: 153:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3617  001AD2  0EBD               	movlw	low _menuConfiguration_stateMachine
  3618  001AD4  6E12               	movwf	sm_send_event@psm^0,c
  3619  001AD6  0E02               	movlw	high _menuConfiguration_stateMachine
  3620  001AD8  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3621  001ADA  0E00               	movlw	0
  3622  001ADC  6E15               	movwf	(sm_send_event@event+1)^0,c
  3623  001ADE  0E08               	movlw	8
  3624  001AE0  6E14               	movwf	sm_send_event@event^0,c
  3625  001AE2  ECF7  F047         	call	_sm_send_event	;wreg free
  3626                           
  3627                           ;sm_MenuConfiguration_MC50.c: 154:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3628  001AE6  0E0A               	movlw	10
  3629  001AE8  6E10               	movwf	___lbdiv@divisor^0,c
  3630  001AEA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3631  001AEC  ECE8  F04B         	call	___lbdiv
  3632  001AF0  0DF6               	mullw	246
  3633  001AF2  50F3               	movf	243,w,c
  3634  001AF4  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3635  001AF6  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3636  001AF8  0E00               	movlw	0
  3637  001AFA  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3638  001AFC  0E14               	movlw	20
  3639  001AFE  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3640  001B00  0E0A               	movlw	10
  3641  001B02  6E10               	movwf	___lbdiv@divisor^0,c
  3642  001B04  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3643  001B06  ECE8  F04B         	call	___lbdiv
  3644  001B0A  EC91  F04F         	call	_SetSegmentValueIntermitentMain
  3645  001B0E  0012               	return	
  3646  001B10                     l24288:
  3647                           
  3648                           ; BSR set to: 1
  3649  001B10  0E05               	movlw	5
  3650  001B12  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3651  001B14  A4D8               	btfss	status,2,c
  3652  001B16  D02F               	goto	l24298
  3653                           
  3654                           ; BSR set to: 1
  3655                           ;sm_MenuConfiguration_MC50.c: 158:             {;sm_MenuConfiguration_MC50.c: 159:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3656  001B18  0E00               	movlw	0
  3657  001B1A  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3658  001B1C  0EC8               	movlw	200
  3659  001B1E  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3660                           
  3661                           ;sm_MenuConfiguration_MC50.c: 160:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3662  001B20  0E01               	movlw	1
  3663  001B22  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3664                           
  3665                           ;sm_MenuConfiguration_MC50.c: 161:                 menu_st.parameterSelected=1;
  3666  001B24  0E01               	movlw	1
  3667  001B26  6F68               	movwf	(_menu_st+23)& (0+255),b
  3668                           
  3669                           ; BSR set to: 1
  3670                           ;sm_MenuConfiguration_MC50.c: 162:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3671  001B28  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3672  001B2C  5166               	movf	(_menu_st+21)& (0+255),w,b
  3673  001B2E  EC02  F01B         	call	_setValueToEdit
  3674  001B32  0900               	iorlw	0
  3675  001B34  B4D8               	btfsc	status,2,c
  3676  001B36  0012               	return	
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;sm_MenuConfiguration_MC50.c: 164:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3680  001B38  0EBD               	movlw	low _menuConfiguration_stateMachine
  3681  001B3A  6E12               	movwf	sm_send_event@psm^0,c
  3682  001B3C  0E02               	movlw	high _menuConfiguration_stateMachine
  3683  001B3E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3684  001B40  0E00               	movlw	0
  3685  001B42  6E15               	movwf	(sm_send_event@event+1)^0,c
  3686  001B44  0E08               	movlw	8
  3687  001B46  6E14               	movwf	sm_send_event@event^0,c
  3688  001B48  ECF7  F047         	call	_sm_send_event	;wreg free
  3689                           
  3690                           ;sm_MenuConfiguration_MC50.c: 165:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3691  001B4C  0E0A               	movlw	10
  3692  001B4E  6E10               	movwf	___lbdiv@divisor^0,c
  3693  001B50  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3694  001B52  ECE8  F04B         	call	___lbdiv
  3695  001B56  0DF6               	mullw	246
  3696  001B58  50F3               	movf	243,w,c
  3697  001B5A  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3698  001B5C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3699  001B5E  0E00               	movlw	0
  3700  001B60  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3701  001B62  0E14               	movlw	20
  3702  001B64  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3703  001B66  0E0A               	movlw	10
  3704  001B68  6E10               	movwf	___lbdiv@divisor^0,c
  3705  001B6A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3706  001B6C  ECE8  F04B         	call	___lbdiv
  3707  001B70  EC91  F04F         	call	_SetSegmentValueIntermitentMain
  3708                           
  3709                           ; BSR set to: 1
  3710                           ;sm_MenuConfiguration_MC50.c: 167:             }
  3711                           
  3712                           ;sm_MenuConfiguration_MC50.c: 166:                 }
  3713  001B74  0012               	return	
  3714  001B76                     l24298:
  3715                           
  3716                           ; BSR set to: 1
  3717  001B76  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3718  001B78  A4D8               	btfss	status,2,c
  3719  001B7A  D023               	goto	l24310
  3720                           
  3721                           ; BSR set to: 1
  3722                           ;sm_MenuConfiguration_MC50.c: 169:             {;sm_MenuConfiguration_MC50.c: 170:      
      +                                     ts_system.timeoutMenu= ((1000/50)*5) ;
  3723  001B7C  0E00               	movlw	0
  3724  001B7E  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3725  001B80  0E64               	movlw	100
  3726  001B82  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3727                           
  3728                           ;sm_MenuConfiguration_MC50.c: 171:                 if(menu_st.parameterSelected==0)
  3729  001B84  5168               	movf	(_menu_st+23)& (0+255),w,b
  3730  001B86  A4D8               	btfss	status,2,c
  3731  001B88  D003               	goto	l24304
  3732                           
  3733                           ; BSR set to: 1
  3734                           ;sm_MenuConfiguration_MC50.c: 172:                 {;sm_MenuConfiguration_MC50.c: 173:  
      +                                             menu_st.parameterSelected=menu_st.menuSize-1;
  3735  001B8A  0567               	decf	(_menu_st+22)& (0+255),w,b
  3736  001B8C  6F68               	movwf	(_menu_st+23)& (0+255),b
  3737                           
  3738                           ;sm_MenuConfiguration_MC50.c: 174:                 }
  3739  001B8E  D001               	goto	l24306
  3740  001B90                     l24304:
  3741                           
  3742                           ; BSR set to: 1
  3743                           ;sm_MenuConfiguration_MC50.c: 176:                 {;sm_MenuConfiguration_MC50.c: 177:  
      +                                             menu_st.parameterSelected--;
  3744  001B90  0768               	decf	(_menu_st+23)& (0+255),f,b
  3745  001B92                     l24306:
  3746                           
  3747                           ; BSR set to: 1
  3748                           ;sm_MenuConfiguration_MC50.c: 179:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3749  001B92  5168               	movf	(_menu_st+23)& (0+255),w,b
  3750  001B94  0D02               	mullw	2
  3751  001B96  0E52               	movlw	low (_menu_st+1)
  3752  001B98  24F3               	addwf	243,w,c
  3753  001B9A  6ED9               	movwf	fsr2l,c
  3754  001B9C  0E01               	movlw	high (_menu_st+1)
  3755  001B9E  20F4               	addwfc	prodh,w,c
  3756  001BA0  6EDA               	movwf	fsr2h,c
  3757  001BA2  50DF               	movf	indf2,w,c
  3758  001BA4  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3759  001BA6  5168               	movf	(_menu_st+23)& (0+255),w,b
  3760  001BA8  0D02               	mullw	2
  3761  001BAA  0E51               	movlw	low _menu_st
  3762  001BAC  24F3               	addwf	243,w,c
  3763  001BAE  6ED9               	movwf	fsr2l,c
  3764  001BB0  0E01               	movlw	high _menu_st
  3765  001BB2  20F4               	addwfc	prodh,w,c
  3766  001BB4  6EDA               	movwf	fsr2h,c
  3767  001BB6  50DF               	movf	indf2,w,c
  3768  001BB8  ECF5  F04E         	call	_SetSegmentValueMain
  3769  001BBC                     l24308:
  3770                           
  3771                           ;sm_MenuConfiguration_MC50.c: 180:                 button_struct.processed=1;
  3772  001BBC  0E01               	movlw	1
  3773  001BBE  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3774                           
  3775                           ;sm_MenuConfiguration_MC50.c: 181:             }
  3776  001BC0  0012               	return	
  3777  001BC2                     l24310:
  3778                           
  3779                           ; BSR set to: 1
  3780  001BC2  0E17               	movlw	23
  3781  001BC4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3782  001BC6  A4D8               	btfss	status,2,c
  3783  001BC8  D021               	goto	l24324
  3784                           
  3785                           ; BSR set to: 1
  3786                           ;sm_MenuConfiguration_MC50.c: 183:             {;sm_MenuConfiguration_MC50.c: 184:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  3787  001BCA  0E00               	movlw	0
  3788  001BCC  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3789  001BCE  0E64               	movlw	100
  3790  001BD0  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3791                           
  3792                           ; BSR set to: 1
  3793                           ;sm_MenuConfiguration_MC50.c: 185:                 menu_st.parameterSelected++;
  3794  001BD2  2B68               	incf	(_menu_st+23)& (0+255),f,b
  3795                           
  3796                           ; BSR set to: 1
  3797                           ;sm_MenuConfiguration_MC50.c: 186:                 if(menu_st.parameterSelected>=menu_st
      +                          .menuSize)
  3798  001BD4  5167               	movf	(_menu_st+22)& (0+255),w,b
  3799  001BD6  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  3800  001BD8  A0D8               	btfss	status,0,c
  3801  001BDA  D002               	goto	l24320
  3802                           
  3803                           ; BSR set to: 1
  3804                           ;sm_MenuConfiguration_MC50.c: 187:                 {;sm_MenuConfiguration_MC50.c: 188:  
      +                                             menu_st.parameterSelected=0;
  3805  001BDC  0E00               	movlw	0
  3806  001BDE  6F68               	movwf	(_menu_st+23)& (0+255),b
  3807  001BE0                     l24320:
  3808                           
  3809                           ; BSR set to: 1
  3810                           ;sm_MenuConfiguration_MC50.c: 190:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3811  001BE0  5168               	movf	(_menu_st+23)& (0+255),w,b
  3812  001BE2  0D02               	mullw	2
  3813  001BE4  0E52               	movlw	low (_menu_st+1)
  3814  001BE6  24F3               	addwf	243,w,c
  3815  001BE8  6ED9               	movwf	fsr2l,c
  3816  001BEA  0E01               	movlw	high (_menu_st+1)
  3817  001BEC  20F4               	addwfc	prodh,w,c
  3818  001BEE  6EDA               	movwf	fsr2h,c
  3819  001BF0  50DF               	movf	indf2,w,c
  3820  001BF2  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3821  001BF4  5168               	movf	(_menu_st+23)& (0+255),w,b
  3822  001BF6  0D02               	mullw	2
  3823  001BF8  0E51               	movlw	low _menu_st
  3824  001BFA  24F3               	addwf	243,w,c
  3825  001BFC  6ED9               	movwf	fsr2l,c
  3826  001BFE  0E01               	movlw	high _menu_st
  3827  001C00  20F4               	addwfc	prodh,w,c
  3828  001C02  6EDA               	movwf	fsr2h,c
  3829  001C04  50DF               	movf	indf2,w,c
  3830  001C06  ECF5  F04E         	call	_SetSegmentValueMain
  3831  001C0A  D7D8               	goto	l24308
  3832  001C0C                     l24324:
  3833                           
  3834                           ; BSR set to: 1
  3835  001C0C  0E0C               	movlw	12
  3836  001C0E  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3837  001C10  D09B               	goto	l24380
  3838                           
  3839                           ; BSR set to: 1
  3840                           ;sm_MenuConfiguration_MC50.c: 194:             {;sm_MenuConfiguration_MC50.c: 195:      
      +                                     if (button_struct.current==0x27 && button_struct.timer>(( 500/50)) )
  3841  001C12  0E27               	movlw	39
  3842  001C14  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3843  001C16  A4D8               	btfss	status,2,c
  3844  001C18  D053               	goto	l24346
  3845                           
  3846                           ; BSR set to: 1
  3847  001C1A  0E0A               	movlw	10
  3848  001C1C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  3849  001C1E  D050               	goto	l24346
  3850                           
  3851                           ; BSR set to: 1
  3852                           ;sm_MenuConfiguration_MC50.c: 196:                 {;sm_MenuConfiguration_MC50.c: 197:  
      +                                             ts_system.timeoutMenu=((1000/50)*5) ;
  3853  001C20  0E00               	movlw	0
  3854  001C22  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3855  001C24  0E64               	movlw	100
  3856  001C26  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3857                           
  3858                           ; BSR set to: 1
  3859                           ;sm_MenuConfiguration_MC50.c: 199:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  3860  001C28  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3861  001C2C  5166               	movf	(_menu_st+21)& (0+255),w,b
  3862  001C2E  EC02  F01B         	call	_setValueToEdit
  3863  001C32  0900               	iorlw	0
  3864  001C34  B4D8               	btfsc	status,2,c
  3865  001C36  D7C2               	goto	l24308
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;sm_MenuConfiguration_MC50.c: 200:                     {;sm_MenuConfiguration_MC50.c: 20
      +                          2:                          sm_send_event(&menuConfiguration_stateMachine, ev_ParameterI
      +                          sSelected);
  3869  001C38  0EBD               	movlw	low _menuConfiguration_stateMachine
  3870  001C3A  6E12               	movwf	sm_send_event@psm^0,c
  3871  001C3C  0E02               	movlw	high _menuConfiguration_stateMachine
  3872  001C3E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3873  001C40  0E00               	movlw	0
  3874  001C42  6E15               	movwf	(sm_send_event@event+1)^0,c
  3875  001C44  0E01               	movlw	1
  3876  001C46  6E14               	movwf	sm_send_event@event^0,c
  3877  001C48  ECF7  F047         	call	_sm_send_event	;wreg free
  3878                           
  3879                           ;sm_MenuConfiguration_MC50.c: 203:                          if((edit_Param.Value==(unsig
      +                          ned char*)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Dir
      +                          ection_motor)){
  3880  001C4C  0E98               	movlw	_var_sys_NVM& (0+255)
  3881  001C4E  0F1C               	addlw	28
  3882  001C50  0100               	movlb	0	; () banked
  3883  001C52  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3884  001C54  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3885  001C56  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3886  001C58  E101               	bnz	u29315
  3887  001C5A  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3888  001C5C                     u29315:
  3889  001C5C  B4D8               	btfsc	status,2,c
  3890  001C5E  D009               	goto	u29320
  3891                           
  3892                           ; BSR set to: 0
  3893  001C60  0E98               	movlw	_var_sys_NVM& (0+255)
  3894  001C62  0F1B               	addlw	27
  3895  001C64  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3896  001C66  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3897  001C68  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3898  001C6A  E101               	bnz	u29325
  3899  001C6C  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3900  001C6E                     u29325:
  3901  001C6E  A4D8               	btfss	status,2,c
  3902  001C70  D016               	goto	l24342
  3903  001C72                     u29320:
  3904                           
  3905                           ; BSR set to: 0
  3906                           ;sm_MenuConfiguration_MC50.c: 204:                            SetSegmentValueMain(menu_s
      +                          t.menuList[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].
      +                          value_display2);
  3907  001C72  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3908  001C74  0D02               	mullw	2
  3909  001C76  0E52               	movlw	low (_menu_st+1)
  3910  001C78  24F3               	addwf	243,w,c
  3911  001C7A  6ED9               	movwf	fsr2l,c
  3912  001C7C  0E01               	movlw	high (_menu_st+1)
  3913  001C7E  20F4               	addwfc	prodh,w,c
  3914  001C80  6EDA               	movwf	fsr2h,c
  3915  001C82  50DF               	movf	indf2,w,c
  3916  001C84  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3917  001C86  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3918  001C88  0D02               	mullw	2
  3919  001C8A  0E51               	movlw	low _menu_st
  3920  001C8C  24F3               	addwf	243,w,c
  3921  001C8E  6ED9               	movwf	fsr2l,c
  3922  001C90  0E01               	movlw	high _menu_st
  3923  001C92  20F4               	addwfc	prodh,w,c
  3924  001C94  6EDA               	movwf	fsr2h,c
  3925  001C96  50DF               	movf	indf2,w,c
  3926  001C98  ECF5  F04E         	call	_SetSegmentValueMain
  3927                           
  3928                           ;sm_MenuConfiguration_MC50.c: 206:                          }
  3929  001C9C  D78F               	goto	l24308
  3930  001C9E                     l24342:
  3931                           
  3932                           ; BSR set to: 0
  3933                           ;sm_MenuConfiguration_MC50.c: 208:                          SetSegmentValueMain(edit_Par
      +                          am.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  3934  001C9E  0E0A               	movlw	10
  3935  001CA0  6E10               	movwf	___lbdiv@divisor^0,c
  3936  001CA2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3937  001CA4  ECE8  F04B         	call	___lbdiv
  3938  001CA8  0DF6               	mullw	246
  3939  001CAA  50F3               	movf	243,w,c
  3940  001CAC  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3941  001CAE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3942  001CB0  0E0A               	movlw	10
  3943  001CB2  6E10               	movwf	___lbdiv@divisor^0,c
  3944  001CB4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3945  001CB6  ECE8  F04B         	call	___lbdiv
  3946  001CBA  ECF5  F04E         	call	_SetSegmentValueMain
  3947  001CBE  D77E               	goto	l24308
  3948  001CC0                     l24346:
  3949                           
  3950                           ; BSR set to: 1
  3951  001CC0  BFAD               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3952  001CC2  D008               	goto	u29340
  3953  001CC4  51AD               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3954  001CC6  E103               	bnz	u29330
  3955  001CC8  05AC               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3956  001CCA  A0D8               	btfss	status,0,c
  3957  001CCC  D003               	goto	u29340
  3958  001CCE                     u29330:
  3959                           
  3960                           ; BSR set to: 1
  3961  001CCE  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3962  001CD0  A4D8               	btfss	status,2,c
  3963  001CD2  D01E               	goto	l24364
  3964  001CD4                     u29340:
  3965                           
  3966                           ; BSR set to: 1
  3967  001CD4  0E02               	movlw	2
  3968  001CD6  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3969  001CD8  D01B               	goto	l24364
  3970                           
  3971                           ; BSR set to: 1
  3972                           ;sm_MenuConfiguration_MC50.c: 216:                 {;sm_MenuConfiguration_MC50.c: 217:  
      +                                             ts_system.timeoutMenu=0;
  3973  001CDA  0E00               	movlw	0
  3974  001CDC  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3975  001CDE  0E00               	movlw	0
  3976  001CE0  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3977                           
  3978                           ; BSR set to: 1
  3979                           ;sm_MenuConfiguration_MC50.c: 218:                     sm_send_event(&main_stateMachine,
      +                           ev_goto_StandBy);
  3980  001CE2  0EF1               	movlw	low _main_stateMachine
  3981  001CE4  6E12               	movwf	sm_send_event@psm^0,c
  3982  001CE6  0E01               	movlw	high _main_stateMachine
  3983  001CE8  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3984  001CEA  0E00               	movlw	0
  3985  001CEC  6E15               	movwf	(sm_send_event@event+1)^0,c
  3986  001CEE  0E07               	movlw	7
  3987  001CF0  6E14               	movwf	sm_send_event@event^0,c
  3988  001CF2  ECF7  F047         	call	_sm_send_event	;wreg free
  3989                           
  3990                           ;sm_MenuConfiguration_MC50.c: 219:                     SetSegmentValueMain(dMinus,dMinus
      +                          );
  3991  001CF6  0E18               	movlw	24
  3992  001CF8  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3993  001CFA  0E18               	movlw	24
  3994  001CFC  ECF5  F04E         	call	_SetSegmentValueMain
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;sm_MenuConfiguration_MC50.c: 220:                     menu_st.lastMainParameterSelected
      +                           = 0;
  3998  001D00  0E00               	movlw	0
  3999  001D02  0101               	movlb	1	; () banked
  4000  001D04  6F69               	movwf	(_menu_st+24)& (0+255),b
  4001                           
  4002                           ; BSR set to: 1
  4003                           ;sm_MenuConfiguration_MC50.c: 221:                     button_struct.processed=1;
  4004  001D06  0E01               	movlw	1
  4005  001D08  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4006                           
  4007                           ; BSR set to: 1
  4008                           ;sm_MenuConfiguration_MC50.c: 222:                     ClearFlag_rfCMD();
  4009  001D0A  EC49  F050         	call	_ClearFlag_rfCMD	;wreg free
  4010                           
  4011                           ;sm_MenuConfiguration_MC50.c: 224:                 }
  4012  001D0E  0012               	return	
  4013  001D10                     l24364:
  4014                           
  4015                           ; BSR set to: 1
  4016  001D10  BFAD               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4017  001D12  D008               	goto	u29370
  4018  001D14  51AD               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4019  001D16  E103               	bnz	u29360
  4020  001D18  05AC               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4021  001D1A  A0D8               	btfss	status,0,c
  4022  001D1C  D003               	goto	u29370
  4023  001D1E                     u29360:
  4024                           
  4025                           ; BSR set to: 1
  4026  001D1E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4027  001D20  A4D8               	btfss	status,2,c
  4028  001D22  D004               	goto	l24372
  4029  001D24                     u29370:
  4030                           
  4031                           ; BSR set to: 1
  4032                           ;sm_MenuConfiguration_MC50.c: 226:                 {;sm_MenuConfiguration_MC50.c: 228:  
      +                                             load_New_Menu(menu_st.lastMenu);
  4033  001D24  5165               	movf	(_menu_st+20)& (0+255),w,b
  4034  001D26  EC4D  F025         	call	_load_New_Menu
  4035  001D2A  D748               	goto	l24308
  4036  001D2C                     l24372:
  4037                           
  4038                           ; BSR set to: 1
  4039  001D2C  BFAD               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4040  001D2E  D005               	goto	u29380
  4041  001D30  51AD               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4042  001D32  E102               	bnz	u29381
  4043  001D34  05AC               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4044  001D36  B0D8               	btfsc	status,0,c
  4045  001D38                     u29381:
  4046  001D38  0012               	return	
  4047  001D3A                     u29380:
  4048                           
  4049                           ; BSR set to: 1
  4050  001D3A  0E01               	movlw	1
  4051  001D3C  6566               	cpfsgt	(_menu_st+21)& (0+255),b
  4052  001D3E  0012               	return	
  4053                           
  4054                           ; BSR set to: 1
  4055                           ;sm_MenuConfiguration_MC50.c: 232:                 {;sm_MenuConfiguration_MC50.c: 234:  
      +                                             load_New_Menu(menu_st.lastMenu);
  4056  001D40  5165               	movf	(_menu_st+20)& (0+255),w,b
  4057  001D42  EC4D  F025         	call	_load_New_Menu
  4058  001D46  D73A               	goto	l24308
  4059  001D48                     l24380:
  4060                           
  4061                           ; BSR set to: 1
  4062  001D48  0E07               	movlw	7
  4063  001D4A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4064  001D4C  A4D8               	btfss	status,2,c
  4065  001D4E  D032               	goto	l24396
  4066                           
  4067                           ; BSR set to: 1
  4068  001D50  0E0A               	movlw	10
  4069  001D52  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4070  001D54  D02F               	goto	l24396
  4071                           
  4072                           ; BSR set to: 1
  4073  001D56  0E0D               	movlw	13
  4074  001D58  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4075  001D5A  B4D8               	btfsc	status,2,c
  4076  001D5C  D02B               	goto	l24396
  4077                           
  4078                           ; BSR set to: 1
  4079                           ;sm_MenuConfiguration_MC50.c: 239:             {;sm_MenuConfiguration_MC50.c: 240:      
      +                                         ts_system.timeoutMenu=((1000/50)*5);
  4080  001D5E  0E00               	movlw	0
  4081  001D60  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4082  001D62  0E64               	movlw	100
  4083  001D64  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4084                           
  4085                           ; BSR set to: 1
  4086                           ;sm_MenuConfiguration_MC50.c: 241:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  4087  001D66  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  4088  001D6A  5166               	movf	(_menu_st+21)& (0+255),w,b
  4089  001D6C  EC02  F01B         	call	_setValueToEdit
  4090  001D70  0900               	iorlw	0
  4091  001D72  B4D8               	btfsc	status,2,c
  4092  001D74  D723               	goto	l24308
  4093                           
  4094                           ; BSR set to: 0
  4095                           ;sm_MenuConfiguration_MC50.c: 243:                     {;sm_MenuConfiguration_MC50.c: 24
      +                          4:                         sm_send_event(&menuConfiguration_stateMachine, ev_addRemotes)
      +                          ;
  4096  001D76  0EBD               	movlw	low _menuConfiguration_stateMachine
  4097  001D78  6E12               	movwf	sm_send_event@psm^0,c
  4098  001D7A  0E02               	movlw	high _menuConfiguration_stateMachine
  4099  001D7C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4100  001D7E  0E00               	movlw	0
  4101  001D80  6E15               	movwf	(sm_send_event@event+1)^0,c
  4102  001D82  0E08               	movlw	8
  4103  001D84  6E14               	movwf	sm_send_event@event^0,c
  4104  001D86  ECF7  F047         	call	_sm_send_event	;wreg free
  4105                           
  4106                           ;sm_MenuConfiguration_MC50.c: 245:                         SetSegmentValueIntermitentMai
      +                          n(edit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50)
      +                          );
  4107  001D8A  0E0A               	movlw	10
  4108  001D8C  6E10               	movwf	___lbdiv@divisor^0,c
  4109  001D8E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4110  001D90  ECE8  F04B         	call	___lbdiv
  4111  001D94  0DF6               	mullw	246
  4112  001D96  50F3               	movf	243,w,c
  4113  001D98  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4114  001D9A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4115  001D9C  0E00               	movlw	0
  4116  001D9E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4117  001DA0  0E14               	movlw	20
  4118  001DA2  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4119  001DA4  0E0A               	movlw	10
  4120  001DA6  6E10               	movwf	___lbdiv@divisor^0,c
  4121  001DA8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4122  001DAA  ECE8  F04B         	call	___lbdiv
  4123  001DAE  EC91  F04F         	call	_SetSegmentValueIntermitentMain
  4124  001DB2  D704               	goto	l24308
  4125  001DB4                     l24396:
  4126                           
  4127                           ; BSR set to: 1
  4128  001DB4  0E0D               	movlw	13
  4129  001DB6  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4130  001DB8  A4D8               	btfss	status,2,c
  4131  001DBA  D027               	goto	l24414
  4132                           
  4133                           ; BSR set to: 1
  4134  001DBC  51AA               	movf	(_ts_system+12)& (0+255),w,b	;volatile
  4135  001DBE  11AB               	iorwf	(_ts_system+13)& (0+255),w,b	;volatile
  4136  001DC0  A4D8               	btfss	status,2,c
  4137  001DC2  D023               	goto	l24414
  4138                           
  4139                           ; BSR set to: 1
  4140                           ;sm_MenuConfiguration_MC50.c: 250:             {;sm_MenuConfiguration_MC50.c: 251:      
      +                                     var_sys_NVM.positionRemotesFull=0;
  4141  001DC4  0E00               	movlw	0
  4142  001DC6  0100               	movlb	0	; () banked
  4143  001DC8  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
  4144                           
  4145                           ;sm_MenuConfiguration_MC50.c: 252:                 var_sys_NVM.positionRemotesWalk=0;
  4146  001DCA  0E00               	movlw	0
  4147  001DCC  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
  4148                           
  4149                           ;sm_MenuConfiguration_MC50.c: 253:                 var_sys_NVM.OnlyRollingCode=NO;
  4150  001DCE  0E00               	movlw	0
  4151  001DD0  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;sm_MenuConfiguration_MC50.c: 254:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4155  001DD2  0E02               	movlw	2
  4156  001DD4  EC05  F04C         	call	_SaveNVM_VarSystem
  4157                           
  4158                           ;sm_MenuConfiguration_MC50.c: 255:                 sm_send_event(&main_stateMachine, ev_
      +                          goto_StandBy);
  4159  001DD8  0EF1               	movlw	low _main_stateMachine
  4160  001DDA  6E12               	movwf	sm_send_event@psm^0,c
  4161  001DDC  0E01               	movlw	high _main_stateMachine
  4162  001DDE  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4163  001DE0  0E00               	movlw	0
  4164  001DE2  6E15               	movwf	(sm_send_event@event+1)^0,c
  4165  001DE4  0E07               	movlw	7
  4166  001DE6  6E14               	movwf	sm_send_event@event^0,c
  4167  001DE8  ECF7  F047         	call	_sm_send_event	;wreg free
  4168                           
  4169                           ;sm_MenuConfiguration_MC50.c: 256:                 SetSegmentValueMain(dMinus,dMinus);
  4170  001DEC  0E18               	movlw	24
  4171  001DEE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4172  001DF0  0E18               	movlw	24
  4173  001DF2  ECF5  F04E         	call	_SetSegmentValueMain
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;sm_MenuConfiguration_MC50.c: 257:                 button_struct.processed=1;
  4177  001DF6  0E01               	movlw	1
  4178  001DF8  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4179  001DFA                     l24410:
  4180                           
  4181                           ;sm_MenuConfiguration_MC50.c: 258:                 ClearFlag_rfCMD();
  4182  001DFA  EC49  F050         	call	_ClearFlag_rfCMD	;wreg free
  4183  001DFE                     l24412:
  4184                           
  4185                           ;sm_MenuConfiguration_MC50.c: 259:                  ts_system.timeoutMenu=0;
  4186  001DFE  0E00               	movlw	0
  4187  001E00  0101               	movlb	1	; () banked
  4188  001E02  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4189  001E04  0E00               	movlw	0
  4190  001E06  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4191                           
  4192                           ;sm_MenuConfiguration_MC50.c: 260:             }
  4193  001E08  0012               	return	
  4194  001E0A                     l24414:
  4195                           
  4196                           ; BSR set to: 1
  4197  001E0A  BFAD               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4198  001E0C  D008               	goto	u29470
  4199  001E0E  51AD               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4200  001E10  E103               	bnz	u29460
  4201  001E12  05AC               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4202  001E14  A0D8               	btfss	status,0,c
  4203  001E16  D003               	goto	u29470
  4204  001E18                     u29460:
  4205                           
  4206                           ; BSR set to: 1
  4207  001E18  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4208  001E1A  A4D8               	btfss	status,2,c
  4209  001E1C  0012               	return	
  4210  001E1E                     u29470:
  4211                           
  4212                           ; BSR set to: 1
  4213                           ;sm_MenuConfiguration_MC50.c: 262:             {;sm_MenuConfiguration_MC50.c: 263:      
      +                                      sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4214  001E1E  0EF1               	movlw	low _main_stateMachine
  4215  001E20  6E12               	movwf	sm_send_event@psm^0,c
  4216  001E22  0E01               	movlw	high _main_stateMachine
  4217  001E24  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4218  001E26  0E00               	movlw	0
  4219  001E28  6E15               	movwf	(sm_send_event@event+1)^0,c
  4220  001E2A  0E07               	movlw	7
  4221  001E2C  6E14               	movwf	sm_send_event@event^0,c
  4222  001E2E  ECF7  F047         	call	_sm_send_event	;wreg free
  4223                           
  4224                           ;sm_MenuConfiguration_MC50.c: 264:                  SetSegmentValueMain(dMinus,dMinus);
  4225  001E32  0E18               	movlw	24
  4226  001E34  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4227  001E36  0E18               	movlw	24
  4228  001E38  ECF5  F04E         	call	_SetSegmentValueMain
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;sm_MenuConfiguration_MC50.c: 265:                  ClearFlag_rfCMD();
  4232  001E3C  EC49  F050         	call	_ClearFlag_rfCMD	;wreg free
  4233                           
  4234                           ;sm_MenuConfiguration_MC50.c: 266:                  button_struct.processed=1;
  4235  001E40  0E01               	movlw	1
  4236  001E42  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4237  001E44  D7DC               	goto	l24412
  4238  001E46                     l24428:
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;sm_MenuConfiguration_MC50.c: 272:         {;sm_MenuConfiguration_MC50.c: 273:          
      +                             if (button_struct.current==0x00)
  4242  001E46  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4243  001E48  A4D8               	btfss	status,2,c
  4244  001E4A  D047               	goto	l24448
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;sm_MenuConfiguration_MC50.c: 274:             {;sm_MenuConfiguration_MC50.c: 275:      
      +                                     ts_system.timeoutMenu=((1000/50)*5);
  4248  001E4C  0E00               	movlw	0
  4249  001E4E  0101               	movlb	1	; () banked
  4250  001E50  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4251  001E52  0E64               	movlw	100
  4252  001E54  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4253                           
  4254                           ; BSR set to: 1
  4255                           ;sm_MenuConfiguration_MC50.c: 276:                 if(edit_Param.tempValue<=edit_Param.M
      +                          in)
  4256  001E56  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4257  001E58  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  4258  001E5A  A0D8               	btfss	status,0,c
  4259  001E5C  D003               	goto	l24436
  4260                           
  4261                           ; BSR set to: 1
  4262                           ;sm_MenuConfiguration_MC50.c: 277:                 {;sm_MenuConfiguration_MC50.c: 278:  
      +                                             edit_Param.tempValue=edit_Param.Max;
  4263  001E5E  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  4264                           
  4265                           ;sm_MenuConfiguration_MC50.c: 279:                 }
  4266  001E62  D001               	goto	l24438
  4267  001E64                     l24436:
  4268                           
  4269                           ; BSR set to: 1
  4270                           ;sm_MenuConfiguration_MC50.c: 281:                 {;sm_MenuConfiguration_MC50.c: 282:  
      +                                             edit_Param.tempValue--;
  4271  001E64  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  4272  001E66                     l24438:
  4273                           
  4274                           ; BSR set to: 1
  4275                           ;sm_MenuConfiguration_MC50.c: 284:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4276  001E66  0E98               	movlw	_var_sys_NVM& (0+255)
  4277  001E68  0F1C               	addlw	28
  4278  001E6A  0100               	movlb	0	; () banked
  4279  001E6C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4280  001E6E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4281  001E70  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4282  001E72  E101               	bnz	u29505
  4283  001E74  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4284  001E76                     u29505:
  4285  001E76  B4D8               	btfsc	status,2,c
  4286  001E78  D009               	goto	u29510
  4287                           
  4288                           ; BSR set to: 0
  4289  001E7A  0E98               	movlw	_var_sys_NVM& (0+255)
  4290  001E7C  0F1B               	addlw	27
  4291  001E7E  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4292  001E80  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4293  001E82  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4294  001E84  E101               	bnz	u29515
  4295  001E86  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4296  001E88                     u29515:
  4297  001E88  A4D8               	btfss	status,2,c
  4298  001E8A  D016               	goto	l24444
  4299  001E8C                     u29510:
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;sm_MenuConfiguration_MC50.c: 285:                 SetSegmentValueMain(menu_st.menuList[
      +                          edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_displ
      +                          ay2);
  4303  001E8C  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4304  001E8E  0D02               	mullw	2
  4305  001E90  0E52               	movlw	low (_menu_st+1)
  4306  001E92  24F3               	addwf	243,w,c
  4307  001E94  6ED9               	movwf	fsr2l,c
  4308  001E96  0E01               	movlw	high (_menu_st+1)
  4309  001E98  20F4               	addwfc	prodh,w,c
  4310  001E9A  6EDA               	movwf	fsr2h,c
  4311  001E9C  50DF               	movf	indf2,w,c
  4312  001E9E  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4313  001EA0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4314  001EA2  0D02               	mullw	2
  4315  001EA4  0E51               	movlw	low _menu_st
  4316  001EA6  24F3               	addwf	243,w,c
  4317  001EA8  6ED9               	movwf	fsr2l,c
  4318  001EAA  0E01               	movlw	high _menu_st
  4319  001EAC  20F4               	addwfc	prodh,w,c
  4320  001EAE  6EDA               	movwf	fsr2h,c
  4321  001EB0  50DF               	movf	indf2,w,c
  4322  001EB2  ECF5  F04E         	call	_SetSegmentValueMain
  4323                           
  4324                           ;sm_MenuConfiguration_MC50.c: 286:                 }
  4325  001EB6  D682               	goto	l24308
  4326  001EB8                     l24444:
  4327                           
  4328                           ; BSR set to: 0
  4329                           ;sm_MenuConfiguration_MC50.c: 289:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4330  001EB8  0E0A               	movlw	10
  4331  001EBA  6E10               	movwf	___lbdiv@divisor^0,c
  4332  001EBC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4333  001EBE  ECE8  F04B         	call	___lbdiv
  4334  001EC2  0DF6               	mullw	246
  4335  001EC4  50F3               	movf	243,w,c
  4336  001EC6  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4337  001EC8  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4338  001ECA  0E0A               	movlw	10
  4339  001ECC  6E10               	movwf	___lbdiv@divisor^0,c
  4340  001ECE  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4341  001ED0  ECE8  F04B         	call	___lbdiv
  4342  001ED4  ECF5  F04E         	call	_SetSegmentValueMain
  4343  001ED8  D671               	goto	l24308
  4344  001EDA                     l24448:
  4345                           
  4346                           ; BSR set to: 0
  4347  001EDA  0E17               	movlw	23
  4348  001EDC  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4349  001EDE  A4D8               	btfss	status,2,c
  4350  001EE0  D045               	goto	l24468
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;sm_MenuConfiguration_MC50.c: 294:             {;sm_MenuConfiguration_MC50.c: 295:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4354  001EE2  0E00               	movlw	0
  4355  001EE4  0101               	movlb	1	; () banked
  4356  001EE6  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4357  001EE8  0E64               	movlw	100
  4358  001EEA  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4359                           
  4360                           ; BSR set to: 1
  4361                           ;sm_MenuConfiguration_MC50.c: 296:                 edit_Param.tempValue++;
  4362  001EEC  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  4363                           
  4364                           ; BSR set to: 1
  4365                           ;sm_MenuConfiguration_MC50.c: 297:                 if(edit_Param.tempValue>edit_Param.Ma
      +                          x)
  4366  001EEE  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4367  001EF0  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  4368  001EF2  A0D8               	btfss	status,0,c
  4369                           
  4370                           ; BSR set to: 1
  4371                           ;sm_MenuConfiguration_MC50.c: 298:                 {;sm_MenuConfiguration_MC50.c: 299:  
      +                                              edit_Param.tempValue=edit_Param.Min;
  4372  001EF4  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  4373                           
  4374                           ; BSR set to: 1
  4375                           ;sm_MenuConfiguration_MC50.c: 301:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4376  001EF8  0E98               	movlw	_var_sys_NVM& (0+255)
  4377  001EFA  0F1C               	addlw	28
  4378  001EFC  0100               	movlb	0	; () banked
  4379  001EFE  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4380  001F00  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4381  001F02  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4382  001F04  E101               	bnz	u29545
  4383  001F06  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4384  001F08                     u29545:
  4385  001F08  B4D8               	btfsc	status,2,c
  4386  001F0A  D009               	goto	u29550
  4387                           
  4388                           ; BSR set to: 0
  4389  001F0C  0E98               	movlw	_var_sys_NVM& (0+255)
  4390  001F0E  0F1B               	addlw	27
  4391  001F10  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4392  001F12  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4393  001F14  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4394  001F16  E101               	bnz	u29555
  4395  001F18  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4396  001F1A                     u29555:
  4397  001F1A  A4D8               	btfss	status,2,c
  4398  001F1C  D016               	goto	l24464
  4399  001F1E                     u29550:
  4400                           
  4401                           ; BSR set to: 0
  4402                           ;sm_MenuConfiguration_MC50.c: 302:                     SetSegmentValueMain(menu_st.menuL
      +                          ist[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_d
      +                          isplay2);
  4403  001F1E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4404  001F20  0D02               	mullw	2
  4405  001F22  0E52               	movlw	low (_menu_st+1)
  4406  001F24  24F3               	addwf	243,w,c
  4407  001F26  6ED9               	movwf	fsr2l,c
  4408  001F28  0E01               	movlw	high (_menu_st+1)
  4409  001F2A  20F4               	addwfc	prodh,w,c
  4410  001F2C  6EDA               	movwf	fsr2h,c
  4411  001F2E  50DF               	movf	indf2,w,c
  4412  001F30  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4413  001F32  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4414  001F34  0D02               	mullw	2
  4415  001F36  0E51               	movlw	low _menu_st
  4416  001F38  24F3               	addwf	243,w,c
  4417  001F3A  6ED9               	movwf	fsr2l,c
  4418  001F3C  0E01               	movlw	high _menu_st
  4419  001F3E  20F4               	addwfc	prodh,w,c
  4420  001F40  6EDA               	movwf	fsr2h,c
  4421  001F42  50DF               	movf	indf2,w,c
  4422  001F44  ECF5  F04E         	call	_SetSegmentValueMain
  4423                           
  4424                           ;sm_MenuConfiguration_MC50.c: 303:                 }
  4425  001F48  D639               	goto	l24308
  4426  001F4A                     l24464:
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;sm_MenuConfiguration_MC50.c: 306:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4430  001F4A  0E0A               	movlw	10
  4431  001F4C  6E10               	movwf	___lbdiv@divisor^0,c
  4432  001F4E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4433  001F50  ECE8  F04B         	call	___lbdiv
  4434  001F54  0DF6               	mullw	246
  4435  001F56  50F3               	movf	243,w,c
  4436  001F58  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4437  001F5A  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4438  001F5C  0E0A               	movlw	10
  4439  001F5E  6E10               	movwf	___lbdiv@divisor^0,c
  4440  001F60  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4441  001F62  ECE8  F04B         	call	___lbdiv
  4442  001F66  ECF5  F04E         	call	_SetSegmentValueMain
  4443  001F6A  D628               	goto	l24308
  4444  001F6C                     l24468:
  4445                           
  4446                           ; BSR set to: 0
  4447  001F6C  0E27               	movlw	39
  4448  001F6E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4449  001F70  A4D8               	btfss	status,2,c
  4450  001F72  D023               	goto	l24484
  4451                           
  4452                           ; BSR set to: 0
  4453  001F74  0E09               	movlw	9
  4454  001F76  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4455  001F78  D020               	goto	l24484
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;sm_MenuConfiguration_MC50.c: 312:             {;sm_MenuConfiguration_MC50.c: 313:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4459  001F7A  0E00               	movlw	0
  4460  001F7C  0101               	movlb	1	; () banked
  4461  001F7E  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4462  001F80  0E64               	movlw	100
  4463  001F82  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4464                           
  4465                           ; BSR set to: 1
  4466                           ;sm_MenuConfiguration_MC50.c: 315:                 edit_Param.Value[0]=edit_Param.tempVa
      +                          lue;
  4467  001F84  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4468  001F88  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4469  001F8C  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  4470                           
  4471                           ; BSR set to: 1
  4472                           ;sm_MenuConfiguration_MC50.c: 316:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsEdited);
  4473  001F90  0EBD               	movlw	low _menuConfiguration_stateMachine
  4474  001F92  6E12               	movwf	sm_send_event@psm^0,c
  4475  001F94  0E02               	movlw	high _menuConfiguration_stateMachine
  4476  001F96  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4477  001F98  0E00               	movlw	0
  4478  001F9A  6E15               	movwf	(sm_send_event@event+1)^0,c
  4479  001F9C  0E02               	movlw	2
  4480  001F9E  6E14               	movwf	sm_send_event@event^0,c
  4481  001FA0  ECF7  F047         	call	_sm_send_event	;wreg free
  4482                           
  4483                           ;sm_MenuConfiguration_MC50.c: 317:                 SetSegmentValueMain(dBar,d1);
  4484  001FA4  0E01               	movlw	1
  4485  001FA6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4486  001FA8  0E19               	movlw	25
  4487  001FAA  ECF5  F04E         	call	_SetSegmentValueMain
  4488                           
  4489                           ; BSR set to: 0
  4490                           ;sm_MenuConfiguration_MC50.c: 318:                 ts_system.timeSinalizationDigit=((100
      +                          0/50)*2);
  4491  001FAE  0E00               	movlw	0
  4492  001FB0  0101               	movlb	1	; () banked
  4493  001FB2  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
  4494  001FB4  0E28               	movlw	40
  4495  001FB6  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
  4496  001FB8  D601               	goto	l24308
  4497  001FBA                     l24484:
  4498                           
  4499                           ; BSR set to: 0
  4500  001FBA  0101               	movlb	1	; () banked
  4501  001FBC  BFAD               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4502  001FBE  D008               	goto	u29590
  4503  001FC0  51AD               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4504  001FC2  E103               	bnz	u29580
  4505  001FC4  05AC               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4506  001FC6  A0D8               	btfss	status,0,c
  4507  001FC8  D003               	goto	u29590
  4508  001FCA                     u29580:
  4509                           
  4510                           ; BSR set to: 1
  4511  001FCA  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4512  001FCC  A4D8               	btfss	status,2,c
  4513  001FCE  0012               	return	
  4514  001FD0                     u29590:
  4515                           
  4516                           ; BSR set to: 1
  4517                           ;sm_MenuConfiguration_MC50.c: 323:             {;sm_MenuConfiguration_MC50.c: 324:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4518  001FD0  0E00               	movlw	0
  4519  001FD2  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4520  001FD4  0E64               	movlw	100
  4521  001FD6  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4522                           
  4523                           ; BSR set to: 1
  4524                           ;sm_MenuConfiguration_MC50.c: 325:                 load_New_Menu(menu_st.actualMenu);
  4525  001FD8  5166               	movf	(_menu_st+21)& (0+255),w,b
  4526  001FDA  EC4D  F025         	call	_load_New_Menu
  4527                           
  4528                           ;sm_MenuConfiguration_MC50.c: 326:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_CancelEdition);
  4529  001FDE  0EBD               	movlw	low _menuConfiguration_stateMachine
  4530  001FE0  6E12               	movwf	sm_send_event@psm^0,c
  4531  001FE2  0E02               	movlw	high _menuConfiguration_stateMachine
  4532  001FE4  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4533  001FE6  0E00               	movlw	0
  4534  001FE8  6E15               	movwf	(sm_send_event@event+1)^0,c
  4535  001FEA  0E03               	movlw	3
  4536  001FEC  6E14               	movwf	sm_send_event@event^0,c
  4537  001FEE  ECF7  F047         	call	_sm_send_event	;wreg free
  4538  001FF2  D5E4               	goto	l24308
  4539  001FF4                     l24496:
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;sm_MenuConfiguration_MC50.c: 332:         {;sm_MenuConfiguration_MC50.c: 333:          
      +                             if (ts_system.timeSinalizationDigit<=0)
  4543  001FF4  0101               	movlb	1	; () banked
  4544  001FF6  BFAB               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  4545  001FF8  D005               	goto	u29600
  4546  001FFA  51AB               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  4547  001FFC  E102               	bnz	u29601
  4548  001FFE  05AA               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  4549  002000  B0D8               	btfsc	status,0,c
  4550  002002                     u29601:
  4551  002002  0012               	return	
  4552  002004                     u29600:
  4553                           
  4554                           ; BSR set to: 1
  4555                           ;sm_MenuConfiguration_MC50.c: 334:             {;sm_MenuConfiguration_MC50.c: 335:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4556  002004  0E00               	movlw	0
  4557  002006  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4558  002008  0E64               	movlw	100
  4559  00200A  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4560                           
  4561                           ; BSR set to: 1
  4562                           ;sm_MenuConfiguration_MC50.c: 337:                 if((menu_st.actualMenu==E_Menu && men
      +                          u_st.parameterSelected==8)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.TypeofMotor)
      +                          )
  4563  00200C  0566               	decf	(_menu_st+21)& (0+255),w,b
  4564  00200E  A4D8               	btfss	status,2,c
  4565  002010  D004               	goto	u29620
  4566                           
  4567                           ; BSR set to: 1
  4568  002012  0E08               	movlw	8
  4569  002014  1968               	xorwf	(_menu_st+23)& (0+255),w,b
  4570  002016  B4D8               	btfsc	status,2,c
  4571  002018  D00A               	goto	u29630
  4572  00201A                     u29620:
  4573                           
  4574                           ; BSR set to: 1
  4575  00201A  0E98               	movlw	_var_sys_NVM& (0+255)
  4576  00201C  0F1C               	addlw	28
  4577  00201E  0100               	movlb	0	; () banked
  4578  002020  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4579  002022  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4580  002024  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4581  002026  E101               	bnz	u29635
  4582  002028  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4583  00202A                     u29635:
  4584  00202A  A4D8               	btfss	status,2,c
  4585  00202C  D005               	goto	l24508
  4586  00202E                     u29630:
  4587                           
  4588                           ;sm_MenuConfiguration_MC50.c: 338:                 {;sm_MenuConfiguration_MC50.c: 341:  
      +                                             ResetDefaultMemory(var_sys_NVM.TypeofMotor);
  4589  00202E  0100               	movlb	0	; () banked
  4590  002030  51B4               	movf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
  4591  002032  EC7F  F034         	call	_ResetDefaultMemory
  4592                           
  4593                           ;sm_MenuConfiguration_MC50.c: 343:                 }
  4594  002036  D023               	goto	l24526
  4595  002038                     l24508:
  4596                           
  4597                           ; BSR set to: 0
  4598  002038  0101               	movlb	1	; () banked
  4599  00203A  0566               	decf	(_menu_st+21)& (0+255),w,b
  4600  00203C  B4D8               	btfsc	status,2,c
  4601  00203E  D004               	goto	u29650
  4602                           
  4603                           ; BSR set to: 1
  4604  002040  0E0A               	movlw	10
  4605  002042  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4606  002044  A4D8               	btfss	status,2,c
  4607  002046  D004               	goto	l24514
  4608  002048                     u29650:
  4609                           
  4610                           ; BSR set to: 1
  4611                           ;sm_MenuConfiguration_MC50.c: 345:                 {;sm_MenuConfiguration_MC50.c: 346:  
      +                                             SaveNVM_VarSystem(pageMemoryE);
  4612  002048  0E01               	movlw	1
  4613  00204A  EC05  F04C         	call	_SaveNVM_VarSystem
  4614                           
  4615                           ;sm_MenuConfiguration_MC50.c: 347:                 }
  4616  00204E  D017               	goto	l24526
  4617  002050                     l24514:
  4618                           
  4619                           ; BSR set to: 1
  4620                           ;sm_MenuConfiguration_MC50.c: 349:                 {;sm_MenuConfiguration_MC50.c: 350:  
      +                                             if (menu_st.parameterSelected == 1 && edit_Param.Value[0] >=1 && menu
      +                          _st.actualMenu == P2_SMenu )
  4621  002050  0568               	decf	(_menu_st+23)& (0+255),w,b
  4622  002052  A4D8               	btfss	status,2,c
  4623  002054  D00E               	goto	l24522
  4624                           
  4625                           ; BSR set to: 1
  4626  002056  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4627  00205A  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4628  00205E  50DF               	movf	indf2,w,c
  4629  002060  B4D8               	btfsc	status,2,c
  4630  002062  D007               	goto	l24522
  4631                           
  4632                           ; BSR set to: 1
  4633  002064  0E06               	movlw	6
  4634  002066  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4635  002068  A4D8               	btfss	status,2,c
  4636  00206A  D003               	goto	l24522
  4637                           
  4638                           ; BSR set to: 1
  4639                           ;sm_MenuConfiguration_MC50.c: 351:                     {;sm_MenuConfiguration_MC50.c: 35
      +                          2:                       var_sys_NVM.motorPower = 9;
  4640  00206C  0E09               	movlw	9
  4641  00206E  0100               	movlb	0	; () banked
  4642  002070  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
  4643  002072                     l24522:
  4644                           
  4645                           ;sm_MenuConfiguration_MC50.c: 355:                       SaveNVM_VarSystem(pageMemoryE);
  4646  002072  0E01               	movlw	1
  4647  002074  EC05  F04C         	call	_SaveNVM_VarSystem
  4648                           
  4649                           ;sm_MenuConfiguration_MC50.c: 356:                       SaveNVM_VarSystem(pageMemoryP);
  4650  002078  0E00               	movlw	0
  4651  00207A  EC05  F04C         	call	_SaveNVM_VarSystem
  4652  00207E                     l24526:
  4653                           
  4654                           ;sm_MenuConfiguration_MC50.c: 360:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4655  00207E  0EBD               	movlw	low _menuConfiguration_stateMachine
  4656  002080  6E12               	movwf	sm_send_event@psm^0,c
  4657  002082  0E02               	movlw	high _menuConfiguration_stateMachine
  4658  002084  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4659  002086  0E00               	movlw	0
  4660  002088  6E15               	movwf	(sm_send_event@event+1)^0,c
  4661  00208A  0E04               	movlw	4
  4662  00208C  6E14               	movwf	sm_send_event@event^0,c
  4663  00208E  ECF7  F047         	call	_sm_send_event	;wreg free
  4664                           
  4665                           ;sm_MenuConfiguration_MC50.c: 363:                 menu_st.parameterSelected++;
  4666  002092  0101               	movlb	1	; () banked
  4667  002094  2B68               	incf	(_menu_st+23)& (0+255),f,b
  4668                           
  4669                           ; BSR set to: 1
  4670                           ;sm_MenuConfiguration_MC50.c: 364:                 if(menu_st.actualMenu<=E_Menu)
  4671  002096  0E02               	movlw	2
  4672  002098  6166               	cpfslt	(_menu_st+21)& (0+255),b
  4673  00209A  D005               	goto	l24536
  4674                           
  4675                           ; BSR set to: 1
  4676                           ;sm_MenuConfiguration_MC50.c: 365:                 {;sm_MenuConfiguration_MC50.c: 366:  
      +                                             menu_st.lastMainParameterSelected++;
  4677  00209C  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4678                           
  4679                           ; BSR set to: 1
  4680                           ;sm_MenuConfiguration_MC50.c: 367:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4681  00209E  5166               	movf	(_menu_st+21)& (0+255),w,b
  4682  0020A0  EC4D  F025         	call	_load_New_Menu
  4683                           
  4684                           ;sm_MenuConfiguration_MC50.c: 368:                 }
  4685  0020A4  0012               	return	
  4686  0020A6                     l24536:
  4687                           
  4688                           ; BSR set to: 1
  4689  0020A6  5167               	movf	(_menu_st+22)& (0+255),w,b
  4690  0020A8  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  4691  0020AA  A0D8               	btfss	status,0,c
  4692  0020AC  D005               	goto	l24542
  4693                           
  4694                           ; BSR set to: 1
  4695                           ;sm_MenuConfiguration_MC50.c: 370:                 {;sm_MenuConfiguration_MC50.c: 371:  
      +                                             menu_st.lastMainParameterSelected++;
  4696  0020AE  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4697                           
  4698                           ; BSR set to: 1
  4699                           ;sm_MenuConfiguration_MC50.c: 372:                     load_New_Menu(menu_st.lastMenu);
  4700  0020B0  5165               	movf	(_menu_st+20)& (0+255),w,b
  4701  0020B2  EC4D  F025         	call	_load_New_Menu
  4702                           
  4703                           ;sm_MenuConfiguration_MC50.c: 373:                 }
  4704  0020B6  0012               	return	
  4705  0020B8                     l24542:
  4706                           
  4707                           ; BSR set to: 1
  4708                           ;sm_MenuConfiguration_MC50.c: 375:                 {;sm_MenuConfiguration_MC50.c: 376:  
      +                                             load_New_Menu(menu_st.actualMenu);
  4709  0020B8  5166               	movf	(_menu_st+21)& (0+255),w,b
  4710  0020BA  EC4D  F025         	call	_load_New_Menu
  4711  0020BE  0012               	return	
  4712  0020C0                     l24544:
  4713                           
  4714                           ; BSR set to: 0
  4715                           ;sm_MenuConfiguration_MC50.c: 382:         {;sm_MenuConfiguration_MC50.c: 383:          
      +                             if(ts_system.timeoutMenu<=0)
  4716  0020C0  0101               	movlb	1	; () banked
  4717  0020C2  BFAD               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4718  0020C4  D005               	goto	u29710
  4719  0020C6  51AD               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4720  0020C8  E102               	bnz	u29711
  4721  0020CA  05AC               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4722  0020CC  B0D8               	btfsc	status,0,c
  4723  0020CE                     u29711:
  4724  0020CE  0012               	return	
  4725  0020D0                     u29710:
  4726                           
  4727                           ; BSR set to: 1
  4728                           ;sm_MenuConfiguration_MC50.c: 384:             {;sm_MenuConfiguration_MC50.c: 386:      
      +                                     if(auxCounter<=0){
  4729  0020D0  0100               	movlb	0	; () banked
  4730  0020D2  51FC               	movf	_auxCounter& (0+255),w,b
  4731  0020D4  11FD               	iorwf	(_auxCounter+1)& (0+255),w,b
  4732  0020D6  A4D8               	btfss	status,2,c
  4733  0020D8  D010               	goto	l24554
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;sm_MenuConfiguration_MC50.c: 387:                     menu_st.lastMainParameterSelected
      +                          ++;
  4737  0020DA  0101               	movlb	1	; () banked
  4738  0020DC  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4739                           
  4740                           ; BSR set to: 1
  4741                           ;sm_MenuConfiguration_MC50.c: 388:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4742  0020DE  5166               	movf	(_menu_st+21)& (0+255),w,b
  4743  0020E0  EC4D  F025         	call	_load_New_Menu
  4744                           
  4745                           ;sm_MenuConfiguration_MC50.c: 389:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_ParameterIsSaved);
  4746  0020E4  0EBD               	movlw	low _menuConfiguration_stateMachine
  4747  0020E6  6E12               	movwf	sm_send_event@psm^0,c
  4748  0020E8  0E02               	movlw	high _menuConfiguration_stateMachine
  4749  0020EA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4750  0020EC  0E00               	movlw	0
  4751  0020EE  6E15               	movwf	(sm_send_event@event+1)^0,c
  4752  0020F0  0E04               	movlw	4
  4753  0020F2  6E14               	movwf	sm_send_event@event^0,c
  4754  0020F4  ECF7  F047         	call	_sm_send_event	;wreg free
  4755                           
  4756                           ;sm_MenuConfiguration_MC50.c: 390:                 }
  4757  0020F8  0012               	return	
  4758  0020FA                     l24554:
  4759                           
  4760                           ; BSR set to: 0
  4761                           ;sm_MenuConfiguration_MC50.c: 392:                 {;sm_MenuConfiguration_MC50.c: 393:  
      +                                             ts_system.timeoutMenu=(1000/50)*3;
  4762  0020FA  0E00               	movlw	0
  4763  0020FC  0101               	movlb	1	; () banked
  4764  0020FE  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4765  002100  0E3C               	movlw	60
  4766  002102  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4767                           
  4768                           ; BSR set to: 1
  4769                           ;sm_MenuConfiguration_MC50.c: 394:                     edit_Param.tempValue=(unsigned ch
      +                          ar)(tempCounter/auxCounter);
  4770  002104  C2F6  F010         	movff	_tempCounter,___lldiv@dividend
  4771  002108  C2F7  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4772  00210C  C2F8  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4773  002110  C2F9  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4774  002114  C0FC  F014         	movff	_auxCounter,___lldiv@divisor
  4775  002118  C0FD  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4776  00211C  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4777  00211E  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4778  002120  EC8D  F043         	call	___lldiv	;wreg free
  4779  002124  5010               	movf	?___lldiv^0,w,c
  4780  002126  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4781                           
  4782                           ;sm_MenuConfiguration_MC50.c: 395:                     tempCounter=tempCounter-(tempCoun
      +                          ter/auxCounter*auxCounter);
  4783  002128  C0FC  F014         	movff	_auxCounter,___lldiv@divisor
  4784  00212C  C0FD  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4785  002130  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4786  002132  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4787  002134  C2F6  F010         	movff	_tempCounter,___lldiv@dividend
  4788  002138  C2F7  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4789  00213C  C2F8  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4790  002140  C2F9  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4791  002144  EC8D  F043         	call	___lldiv	;wreg free
  4792  002148  C010  F01D         	movff	?___lldiv,___lmul@multiplier
  4793  00214C  C011  F01E         	movff	?___lldiv+1,___lmul@multiplier+1
  4794  002150  C012  F01F         	movff	?___lldiv+2,___lmul@multiplier+2
  4795  002154  C013  F020         	movff	?___lldiv+3,___lmul@multiplier+3
  4796  002158  C0FC  F021         	movff	_auxCounter,___lmul@multiplicand
  4797  00215C  C0FD  F022         	movff	_auxCounter+1,___lmul@multiplicand+1
  4798  002160  6A23               	clrf	(___lmul@multiplicand+2)^0,c
  4799  002162  6A24               	clrf	(___lmul@multiplicand+3)^0,c
  4800  002164  EC32  F049         	call	___lmul	;wreg free
  4801  002168  501D               	movf	?___lmul^0,w,c
  4802  00216A  0102               	movlb	2	; () banked
  4803  00216C  5DF6               	subwf	_tempCounter& (0+255),w,b
  4804  00216E  6FF6               	movwf	_tempCounter& (0+255),b
  4805  002170  501E               	movf	(?___lmul+1)^0,w,c
  4806  002172  59F7               	subwfb	(_tempCounter+1)& (0+255),w,b
  4807  002174  6FF7               	movwf	(_tempCounter+1)& (0+255),b
  4808  002176  501F               	movf	(?___lmul+2)^0,w,c
  4809  002178  59F8               	subwfb	(_tempCounter+2)& (0+255),w,b
  4810  00217A  6FF8               	movwf	(_tempCounter+2)& (0+255),b
  4811  00217C  5020               	movf	(?___lmul+3)^0,w,c
  4812  00217E  59F9               	subwfb	(_tempCounter+3)& (0+255),w,b
  4813  002180  6FF9               	movwf	(_tempCounter+3)& (0+255),b
  4814                           
  4815                           ; BSR set to: 2
  4816                           ;sm_MenuConfiguration_MC50.c: 396:                     auxCounter=auxCounter/100;
  4817  002182  C0FC  F010         	movff	_auxCounter,___lwdiv@dividend
  4818  002186  C0FD  F011         	movff	_auxCounter+1,___lwdiv@dividend+1
  4819  00218A  0E00               	movlw	0
  4820  00218C  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  4821  00218E  0E64               	movlw	100
  4822  002190  6E12               	movwf	___lwdiv@divisor^0,c
  4823  002192  ECB2  F049         	call	___lwdiv	;wreg free
  4824  002196  C010  F0FC         	movff	?___lwdiv,_auxCounter
  4825  00219A  C011  F0FD         	movff	?___lwdiv+1,_auxCounter+1
  4826                           
  4827                           ;sm_MenuConfiguration_MC50.c: 397:                     SetSegmentValueIntermitentMain(ed
      +                          it_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),( 500/50));
  4828  00219E  0E0A               	movlw	10
  4829  0021A0  6E10               	movwf	___lbdiv@divisor^0,c
  4830  0021A2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4831  0021A4  ECE8  F04B         	call	___lbdiv
  4832  0021A8  0DF6               	mullw	246
  4833  0021AA  50F3               	movf	243,w,c
  4834  0021AC  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4835  0021AE  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4836  0021B0  0E00               	movlw	0
  4837  0021B2  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4838  0021B4  0E0A               	movlw	10
  4839  0021B6  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4840  0021B8  0E0A               	movlw	10
  4841  0021BA  6E10               	movwf	___lbdiv@divisor^0,c
  4842  0021BC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4843  0021BE  ECE8  F04B         	call	___lbdiv
  4844  0021C2  EC91  F04F         	call	_SetSegmentValueIntermitentMain
  4845  0021C6  0012               	return	
  4846  0021C8                     l24564:
  4847                           
  4848                           ; BSR set to: 0
  4849                           ;sm_MenuConfiguration_MC50.c: 403:         {;sm_MenuConfiguration_MC50.c: 404:          
      +                             if(firstselectflag==1){
  4850  0021C8  0101               	movlb	1	; () banked
  4851  0021CA  05FE               	decf	_firstselectflag& (0+255),w,b
  4852  0021CC  A4D8               	btfss	status,2,c
  4853  0021CE  D004               	goto	l24568
  4854                           
  4855                           ; BSR set to: 1
  4856                           ;sm_MenuConfiguration_MC50.c: 405:                 edit_Param.tempValue=0;
  4857  0021D0  0E00               	movlw	0
  4858  0021D2  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4859                           
  4860                           ;sm_MenuConfiguration_MC50.c: 406:                 firstselectflag=0;
  4861  0021D4  0E00               	movlw	0
  4862  0021D6  6FFE               	movwf	_firstselectflag& (0+255),b
  4863  0021D8                     l24568:
  4864                           
  4865                           ; BSR set to: 1
  4866                           ;sm_MenuConfiguration_MC50.c: 408:             controlSelectRemote();
  4867  0021D8  EC24  F020         	call	_controlSelectRemote	;wreg free
  4868                           
  4869                           ;sm_MenuConfiguration_MC50.c: 409:         };sm_MenuConfiguration_MC50.c: 410:         b
      +                          reak;
  4870  0021DC  0012               	return	
  4871  0021DE                     l24570:
  4872                           
  4873                           ; BSR set to: 0
  4874                           ;sm_MenuConfiguration_MC50.c: 412:         {;sm_MenuConfiguration_MC50.c: 413:          
      +                             controlSaveRemote();
  4875  0021DE  ECD8  F03E         	call	_controlSaveRemote	;wreg free
  4876                           
  4877                           ;sm_MenuConfiguration_MC50.c: 414:         };sm_MenuConfiguration_MC50.c: 415:         b
      +                          reak;
  4878  0021E2  0012               	return	
  4879  0021E4                     l24572:
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;sm_MenuConfiguration_MC50.c: 417:         {;sm_MenuConfiguration_MC50.c: 418:          
      +                             controlLearnDigit();
  4883  0021E4  EC86  F04C         	call	_controlLearnDigit	;wreg free
  4884                           
  4885                           ;sm_MenuConfiguration_MC50.c: 419:             if(var_sys.LearningIsEnabled==NO)
  4886  0021E8  0101               	movlb	1	; () banked
  4887  0021EA  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
  4888  0021EC  A4D8               	btfss	status,2,c
  4889  0021EE  0012               	return	
  4890                           
  4891                           ; BSR set to: 1
  4892                           ;sm_MenuConfiguration_MC50.c: 420:             {;sm_MenuConfiguration_MC50.c: 421:      
      +                                     sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4893  0021F0  0EF1               	movlw	low _main_stateMachine
  4894  0021F2  6E12               	movwf	sm_send_event@psm^0,c
  4895  0021F4  0E01               	movlw	high _main_stateMachine
  4896  0021F6  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4897  0021F8  0E00               	movlw	0
  4898  0021FA  6E15               	movwf	(sm_send_event@event+1)^0,c
  4899  0021FC  0E07               	movlw	7
  4900  0021FE  6E14               	movwf	sm_send_event@event^0,c
  4901  002200  ECF7  F047         	call	_sm_send_event	;wreg free
  4902                           
  4903                           ;sm_MenuConfiguration_MC50.c: 422:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4904  002204  0EBD               	movlw	low _menuConfiguration_stateMachine
  4905  002206  6E12               	movwf	sm_send_event@psm^0,c
  4906  002208  0E02               	movlw	high _menuConfiguration_stateMachine
  4907  00220A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4908  00220C  0E00               	movlw	0
  4909  00220E  6E15               	movwf	(sm_send_event@event+1)^0,c
  4910  002210  0E04               	movlw	4
  4911  002212  6E14               	movwf	sm_send_event@event^0,c
  4912  002214  ECF7  F047         	call	_sm_send_event	;wreg free
  4913                           
  4914                           ;sm_MenuConfiguration_MC50.c: 423:                 SetSegmentValueMain(dMinus,dMinus);
  4915  002218  0E18               	movlw	24
  4916  00221A  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4917  00221C  0E18               	movlw	24
  4918  00221E  ECF5  F04E         	call	_SetSegmentValueMain
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;sm_MenuConfiguration_MC50.c: 424:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4922  002222  0E02               	movlw	2
  4923  002224  EC05  F04C         	call	_SaveNVM_VarSystem
  4924  002228  D5E8               	goto	l24410
  4925  00222A                     l24588:
  4926  00222A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  4927  00222E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  4928  002232  50DF               	movf	indf2,w,c
  4929  002234  0100               	movlb	0	; () banked
  4930  002236  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4931  002238  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  4932                           
  4933                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4934                           ; Switch size 1, requested type "simple"
  4935                           ; Number of cases is 1, Range of values is 0 to 0
  4936                           ; switch strategies available:
  4937                           ; Name         Instructions Cycles
  4938                           ; simple_byte            4     3 (average)
  4939                           ;	Chosen strategy is simple_byte
  4940  00223A  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  4941  00223C  0A00               	xorlw	0	; case 0
  4942  00223E  A4D8               	btfss	status,2,c
  4943  002240  0012               	return	
  4944                           
  4945                           ; BSR set to: 0
  4946                           ; Switch size 1, requested type "simple"
  4947                           ; Number of cases is 7, Range of values is 0 to 6
  4948                           ; switch strategies available:
  4949                           ; Name         Instructions Cycles
  4950                           ; simple_byte           22    12 (average)
  4951                           ;	Chosen strategy is simple_byte
  4952  002242  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4953  002244  0A00               	xorlw	0	; case 0
  4954  002246  B4D8               	btfsc	status,2,c
  4955  002248  D42F               	goto	l24278
  4956  00224A  0A01               	xorlw	1	; case 1
  4957  00224C  B4D8               	btfsc	status,2,c
  4958  00224E  D5FB               	goto	l24428
  4959  002250  0A03               	xorlw	3	; case 2
  4960  002252  B4D8               	btfsc	status,2,c
  4961  002254  D6CF               	goto	l24496
  4962  002256  0A01               	xorlw	1	; case 3
  4963  002258  B4D8               	btfsc	status,2,c
  4964  00225A  D732               	goto	l24544
  4965  00225C  0A07               	xorlw	7	; case 4
  4966  00225E  B4D8               	btfsc	status,2,c
  4967  002260  D7B3               	goto	l24564
  4968  002262  0A01               	xorlw	1	; case 5
  4969  002264  B4D8               	btfsc	status,2,c
  4970  002266  D7BB               	goto	l24570
  4971  002268  0A03               	xorlw	3	; case 6
  4972  00226A  A4D8               	btfss	status,2,c
  4973  00226C  0012               	return	
  4974  00226E  D7BA               	goto	l24572
  4975  002270                     __end_of_sm_execute_menuConfiguration:
  4976                           	callstack 0
  4977                           
  4978 ;; *************** function _setValueToEdit *****************
  4979 ;; Defined at:
  4980 ;;		line 648 in file "sm_MenuConfiguration_MC50.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;  menuType        1    wreg     enum E10813
  4983 ;;  ParameterSel    1   57[COMRAM] unsigned char 
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;  menuType        1    6[BANK0 ] enum E10813
  4986 ;;  posindex        1    8[BANK0 ] unsigned char 
  4987 ;;  posindex        1    7[BANK0 ] unsigned char 
  4988 ;;  haveValueToE    1    9[BANK0 ] unsigned char 
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  1    wreg      unsigned char 
  4991 ;; Registers used:
  4992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4993 ;; Tracked objects:
  4994 ;;		On entry : 3F/1
  4995 ;;		On exit  : 3F/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4998 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4999 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5000 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5001 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5002 ;;Total ram usage:        7 bytes
  5003 ;; Hardware stack levels used: 1
  5004 ;; Hardware stack levels required when called: 14
  5005 ;; This function calls:
  5006 ;;		_InitReceiver
  5007 ;;		_SaveNVM_VarSystem
  5008 ;;		_cmdMemoryIsEmpty
  5009 ;;		_load_New_Menu
  5010 ;;		_sm_send_event
  5011 ;; This function is called by:
  5012 ;;		_sm_execute_menuConfiguration
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016                           	psect	text3
  5017  003604                     __ptext3:
  5018                           	callstack 0
  5019  003604                     _setValueToEdit:
  5020                           	callstack 14
  5021                           
  5022                           ;incstack = 0
  5023                           ;setValueToEdit@menuType stored from wreg
  5024  003604  0100               	movlb	0	; () banked
  5025  003606  6FDE               	movwf	setValueToEdit@menuType& (0+255),b
  5026                           
  5027                           ;sm_MenuConfiguration_MC50.c: 649:     char haveValueToEdit=0;
  5028  003608  0E00               	movlw	0
  5029  00360A  0100               	movlb	0	; () banked
  5030  00360C  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5031                           
  5032                           ;sm_MenuConfiguration_MC50.c: 652:     switch (menuType)
  5033  00360E  D267               	goto	l22286
  5034  003610                     l3358:
  5035                           
  5036                           ; BSR set to: 0
  5037                           ;sm_MenuConfiguration_MC50.c: 655:         {;sm_MenuConfiguration_MC50.c: 656:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  5038  003610  C168  F169         	movff	_menu_st+23,_menu_st+24
  5039                           
  5040                           ; BSR set to: 0
  5041                           ;sm_MenuConfiguration_MC50.c: 657:             edit_Param.Min=0;
  5042  003614  0E00               	movlw	0
  5043  003616  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5044                           
  5045                           ;sm_MenuConfiguration_MC50.c: 658:             switch (ParameterSelected)
  5046  003618  D034               	goto	l22034
  5047  00361A                     l21988:
  5048                           
  5049                           ; BSR set to: 0
  5050                           ;sm_MenuConfiguration_MC50.c: 661:                 {;sm_MenuConfiguration_MC50.c: 662:  
      +                                             load_New_Menu(P0_SMenu);
  5051  00361A  0E04               	movlw	4
  5052  00361C  EC4D  F025         	call	_load_New_Menu
  5053                           
  5054                           ;sm_MenuConfiguration_MC50.c: 664:                 };sm_MenuConfiguration_MC50.c: 665:  
      +                                         break;
  5055  003620  D287               	goto	l22288
  5056  003622                     l21990:
  5057                           
  5058                           ; BSR set to: 0
  5059                           ;sm_MenuConfiguration_MC50.c: 667:                 {;sm_MenuConfiguration_MC50.c: 668:  
      +                                             load_New_Menu(P1_SMenu);
  5060  003622  0E05               	movlw	5
  5061  003624  EC4D  F025         	call	_load_New_Menu
  5062                           
  5063                           ;sm_MenuConfiguration_MC50.c: 669:                 };sm_MenuConfiguration_MC50.c: 670:  
      +                                         break;
  5064  003628  D283               	goto	l22288
  5065  00362A                     l21992:
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;sm_MenuConfiguration_MC50.c: 672:                 {;sm_MenuConfiguration_MC50.c: 673:  
      +                                             load_New_Menu(P2_SMenu);
  5069  00362A  0E06               	movlw	6
  5070  00362C  EC4D  F025         	call	_load_New_Menu
  5071                           
  5072                           ;sm_MenuConfiguration_MC50.c: 674:                 };sm_MenuConfiguration_MC50.c: 675:  
      +                                         break;
  5073  003630  D27F               	goto	l22288
  5074  003632                     l21994:
  5075                           
  5076                           ; BSR set to: 0
  5077                           ;sm_MenuConfiguration_MC50.c: 677:                 {;sm_MenuConfiguration_MC50.c: 678:  
      +                                             edit_Param.Max=99;
  5078  003632  0E63               	movlw	99
  5079  003634  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5080                           
  5081                           ; BSR set to: 0
  5082                           ;sm_MenuConfiguration_MC50.c: 680:                     edit_Param.tempValue=var_sys_NVM.
      +                          walkTime;
  5083  003636  C09C  F049         	movff	_var_sys_NVM+4,_edit_Param+3	;volatile
  5084                           
  5085                           ; BSR set to: 0
  5086                           ;sm_MenuConfiguration_MC50.c: 681:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.walkTime;
  5087  00363A  0E9C               	movlw	low (_var_sys_NVM+4)
  5088  00363C                     L13:
  5089  00363C  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5090  00363E  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5091                           
  5092                           ; BSR set to: 0
  5093                           ;sm_MenuConfiguration_MC50.c: 682:                     haveValueToEdit=1;
  5094  003640  0E01               	movlw	1
  5095  003642  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5096                           
  5097                           ;sm_MenuConfiguration_MC50.c: 683:                 };sm_MenuConfiguration_MC50.c: 684:  
      +                                         break;
  5098  003644  D275               	goto	l22288
  5099  003646                     l22002:
  5100                           
  5101                           ; BSR set to: 0
  5102                           ;sm_MenuConfiguration_MC50.c: 686:                 {;sm_MenuConfiguration_MC50.c: 687:  
      +                                             load_New_Menu(P4_SMenu);
  5103  003646  0E07               	movlw	7
  5104  003648  EC4D  F025         	call	_load_New_Menu
  5105                           
  5106                           ;sm_MenuConfiguration_MC50.c: 688:                 };sm_MenuConfiguration_MC50.c: 689:  
      +                                         break;
  5107  00364C  D271               	goto	l22288
  5108  00364E                     l22004:
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;sm_MenuConfiguration_MC50.c: 691:                 {;sm_MenuConfiguration_MC50.c: 692:  
      +                                             load_New_Menu(P5_SMenu);
  5112  00364E  0E08               	movlw	8
  5113  003650  EC4D  F025         	call	_load_New_Menu
  5114                           
  5115                           ;sm_MenuConfiguration_MC50.c: 693:                 };sm_MenuConfiguration_MC50.c: 694:  
      +                                         break;
  5116  003654  D26D               	goto	l22288
  5117  003656                     l22006:
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;sm_MenuConfiguration_MC50.c: 696:                 {;sm_MenuConfiguration_MC50.c: 697:  
      +                                             load_New_Menu(P6_SMenu);
  5121  003656  0E09               	movlw	9
  5122  003658  EC4D  F025         	call	_load_New_Menu
  5123                           
  5124                           ;sm_MenuConfiguration_MC50.c: 698:                 };sm_MenuConfiguration_MC50.c: 699:  
      +                                         break;
  5125  00365C  D269               	goto	l22288
  5126  00365E                     l22008:
  5127                           
  5128                           ; BSR set to: 0
  5129                           ;sm_MenuConfiguration_MC50.c: 701:                 {;sm_MenuConfiguration_MC50.c: 702:  
      +                                             edit_Param.Max=2;
  5130  00365E  0E02               	movlw	2
  5131  003660  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5132                           
  5133                           ; BSR set to: 0
  5134                           ;sm_MenuConfiguration_MC50.c: 704:                     edit_Param.tempValue=var_sys_NVM.
      +                          operationMode;
  5135  003662  C0A4  F049         	movff	_var_sys_NVM+12,_edit_Param+3	;volatile
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;sm_MenuConfiguration_MC50.c: 705:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.operationMode;
  5139  003666  0EA4               	movlw	low (_var_sys_NVM+12)
  5140  003668  D7E9               	goto	L13
  5141  00366A                     l22016:
  5142                           
  5143                           ; BSR set to: 0
  5144                           ;sm_MenuConfiguration_MC50.c: 710:                 {;sm_MenuConfiguration_MC50.c: 711:  
      +                                             edit_Param.Max=3;
  5145  00366A  0E03               	movlw	3
  5146  00366C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5147                           
  5148                           ; BSR set to: 0
  5149                           ;sm_MenuConfiguration_MC50.c: 713:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashLightMode;
  5150  00366E  C0A5  F049         	movff	_var_sys_NVM+13,_edit_Param+3	;volatile
  5151                           
  5152                           ; BSR set to: 0
  5153                           ;sm_MenuConfiguration_MC50.c: 714:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashLightMode;
  5154  003672  0EA5               	movlw	low (_var_sys_NVM+13)
  5155  003674  D7E3               	goto	L13
  5156  003676                     l22024:
  5157                           
  5158                           ; BSR set to: 0
  5159                           ;sm_MenuConfiguration_MC50.c: 719:                 {;sm_MenuConfiguration_MC50.c: 720:  
      +                                             edit_Param.Max=1;
  5160  003676  0E01               	movlw	1
  5161  003678  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;sm_MenuConfiguration_MC50.c: 722:                     edit_Param.tempValue=var_sys_NVM.
      +                          programmingDistance;
  5165  00367A  C0A6  F049         	movff	_var_sys_NVM+14,_edit_Param+3	;volatile
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;sm_MenuConfiguration_MC50.c: 723:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.programmingDistance;
  5169  00367E  0EA6               	movlw	low (_var_sys_NVM+14)
  5170  003680  D7DD               	goto	L13
  5171  003682                     l22034:
  5172                           
  5173                           ; BSR set to: 0
  5174  003682  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5175  003684  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5176  003686  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5177                           
  5178                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5179                           ; Switch size 1, requested type "simple"
  5180                           ; Number of cases is 1, Range of values is 0 to 0
  5181                           ; switch strategies available:
  5182                           ; Name         Instructions Cycles
  5183                           ; simple_byte            4     3 (average)
  5184                           ;	Chosen strategy is simple_byte
  5185  003688  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5186  00368A  0A00               	xorlw	0	; case 0
  5187  00368C  A4D8               	btfss	status,2,c
  5188  00368E  D250               	goto	l22288
  5189                           
  5190                           ; BSR set to: 0
  5191                           ; Switch size 1, requested type "simple"
  5192                           ; Number of cases is 10, Range of values is 0 to 9
  5193                           ; switch strategies available:
  5194                           ; Name         Instructions Cycles
  5195                           ; simple_byte           31    16 (average)
  5196                           ;	Chosen strategy is simple_byte
  5197  003690  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5198  003692  0A00               	xorlw	0	; case 0
  5199  003694  B4D8               	btfsc	status,2,c
  5200  003696  D7C1               	goto	l21988
  5201  003698  0A01               	xorlw	1	; case 1
  5202  00369A  B4D8               	btfsc	status,2,c
  5203  00369C  D7C2               	goto	l21990
  5204  00369E  0A03               	xorlw	3	; case 2
  5205  0036A0  B4D8               	btfsc	status,2,c
  5206  0036A2  D7C3               	goto	l21992
  5207  0036A4  0A01               	xorlw	1	; case 3
  5208  0036A6  B4D8               	btfsc	status,2,c
  5209  0036A8  D7C4               	goto	l21994
  5210  0036AA  0A07               	xorlw	7	; case 4
  5211  0036AC  B4D8               	btfsc	status,2,c
  5212  0036AE  D7CB               	goto	l22002
  5213  0036B0  0A01               	xorlw	1	; case 5
  5214  0036B2  B4D8               	btfsc	status,2,c
  5215  0036B4  D7CC               	goto	l22004
  5216  0036B6  0A03               	xorlw	3	; case 6
  5217  0036B8  B4D8               	btfsc	status,2,c
  5218  0036BA  D7CD               	goto	l22006
  5219  0036BC  0A01               	xorlw	1	; case 7
  5220  0036BE  B4D8               	btfsc	status,2,c
  5221  0036C0  D7CE               	goto	l22008
  5222  0036C2  0A0F               	xorlw	15	; case 8
  5223  0036C4  B4D8               	btfsc	status,2,c
  5224  0036C6  D7D1               	goto	l22016
  5225  0036C8  0A01               	xorlw	1	; case 9
  5226  0036CA  B4D8               	btfsc	status,2,c
  5227  0036CC  D7D4               	goto	l22024
  5228  0036CE  D230               	goto	l22288
  5229  0036D0                     l3372:
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;sm_MenuConfiguration_MC50.c: 733:         {;sm_MenuConfiguration_MC50.c: 734:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  5233  0036D0  C168  F169         	movff	_menu_st+23,_menu_st+24
  5234                           
  5235                           ; BSR set to: 0
  5236                           ;sm_MenuConfiguration_MC50.c: 735:             edit_Param.Max=1;
  5237  0036D4  0E01               	movlw	1
  5238  0036D6  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5239                           
  5240                           ;sm_MenuConfiguration_MC50.c: 736:             edit_Param.Min=0;
  5241  0036D8  0E00               	movlw	0
  5242  0036DA  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5243                           
  5244                           ;sm_MenuConfiguration_MC50.c: 737:             switch (ParameterSelected)
  5245  0036DC  D057               	goto	l22090
  5246  0036DE                     l22038:
  5247                           
  5248                           ; BSR set to: 0
  5249                           ;sm_MenuConfiguration_MC50.c: 740:                 {;sm_MenuConfiguration_MC50.c: 741:  
      +                                             load_New_Menu(E0_SMenu);
  5250  0036DE  0E0A               	movlw	10
  5251  0036E0  EC4D  F025         	call	_load_New_Menu
  5252                           
  5253                           ;sm_MenuConfiguration_MC50.c: 742:                 };sm_MenuConfiguration_MC50.c: 743:  
      +                                         break;
  5254  0036E4  D225               	goto	l22288
  5255  0036E6                     l22040:
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;sm_MenuConfiguration_MC50.c: 745:                 {;sm_MenuConfiguration_MC50.c: 748:  
      +                                             load_New_Menu(E1_SMenu);
  5259  0036E6  0E0B               	movlw	11
  5260  0036E8  EC4D  F025         	call	_load_New_Menu
  5261                           
  5262                           ;sm_MenuConfiguration_MC50.c: 750:                 };sm_MenuConfiguration_MC50.c: 751:  
      +                                         break;
  5263  0036EC  D221               	goto	l22288
  5264  0036EE                     l22042:
  5265                           
  5266                           ; BSR set to: 0
  5267                           ;sm_MenuConfiguration_MC50.c: 753:                 {;sm_MenuConfiguration_MC50.c: 754:  
      +                                             edit_Param.Max=99;
  5268  0036EE  0E63               	movlw	99
  5269  0036F0  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5270                           
  5271                           ; BSR set to: 0
  5272                           ;sm_MenuConfiguration_MC50.c: 756:                     edit_Param.tempValue=var_sys_NVM.
      +                          ligthTime;
  5273  0036F2  C0AC  F049         	movff	_var_sys_NVM+20,_edit_Param+3	;volatile
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;sm_MenuConfiguration_MC50.c: 757:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.ligthTime;
  5277  0036F6  0EAC               	movlw	low (_var_sys_NVM+20)
  5278  0036F8  D7A1               	goto	L13
  5279  0036FA                     l22050:
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;sm_MenuConfiguration_MC50.c: 762:                 {;sm_MenuConfiguration_MC50.c: 763:  
      +                                            edit_Param.Max=9;
  5283  0036FA  0E09               	movlw	9
  5284  0036FC  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5285                           
  5286                           ;sm_MenuConfiguration_MC50.c: 764:                    edit_Param.Min=1;
  5287  0036FE  0E01               	movlw	1
  5288  003700  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;sm_MenuConfiguration_MC50.c: 765:                    edit_Param.tempValue=var_sys_NVM.f
      +                          olow_me;
  5292  003702  C0AD  F049         	movff	_var_sys_NVM+21,_edit_Param+3	;volatile
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;sm_MenuConfiguration_MC50.c: 766:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.folow_me;
  5296  003706  0EAD               	movlw	low (_var_sys_NVM+21)
  5297  003708  D799               	goto	L13
  5298  00370A                     l3380:
  5299                           
  5300                           ; BSR set to: 0
  5301                           ;sm_MenuConfiguration_MC50.c: 778:                 {;sm_MenuConfiguration_MC50.c: 779:  
      +                                            edit_Param.tempValue=var_sys_NVM.electricBrake;
  5302  00370A  C0AF  F049         	movff	_var_sys_NVM+23,_edit_Param+3	;volatile
  5303                           
  5304                           ; BSR set to: 0
  5305                           ;sm_MenuConfiguration_MC50.c: 780:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.electricBrake;
  5306  00370E  0EAF               	movlw	low (_var_sys_NVM+23)
  5307  003710  D795               	goto	L13
  5308  003712                     l22062:
  5309                           
  5310                           ; BSR set to: 0
  5311                           ;sm_MenuConfiguration_MC50.c: 785:                 {;sm_MenuConfiguration_MC50.c: 786:  
      +                                             edit_Param.Max=9;
  5312  003712  0E09               	movlw	9
  5313  003714  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5314                           
  5315                           ;sm_MenuConfiguration_MC50.c: 787:                     edit_Param.Min=1;
  5316  003716  0E01               	movlw	1
  5317  003718  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5318                           
  5319                           ; BSR set to: 0
  5320                           ;sm_MenuConfiguration_MC50.c: 788:                     edit_Param.tempValue=var_sys_NVM.
      +                          velocityDecelaration;
  5321  00371A  C0B0  F049         	movff	_var_sys_NVM+24,_edit_Param+3	;volatile
  5322                           
  5323                           ; BSR set to: 0
  5324                           ;sm_MenuConfiguration_MC50.c: 789:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.velocityDecelaration;
  5325  00371E  0EB0               	movlw	low (_var_sys_NVM+24)
  5326  003720  D78D               	goto	L13
  5327  003722                     l22070:
  5328                           
  5329                           ; BSR set to: 0
  5330                           ;sm_MenuConfiguration_MC50.c: 794:                 {;sm_MenuConfiguration_MC50.c: 795:  
      +                                             edit_Param.tempValue=0;
  5331  003722  0E00               	movlw	0
  5332  003724  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5333                           
  5334                           ;sm_MenuConfiguration_MC50.c: 796:                     ts_system.timeoutMenu=0;
  5335  003726  0E00               	movlw	0
  5336  003728  0101               	movlb	1	; () banked
  5337  00372A  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  5338  00372C  0E00               	movlw	0
  5339  00372E  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  5340                           
  5341                           ;sm_MenuConfiguration_MC50.c: 798:                     auxCounter=10000;
  5342  003730  0E27               	movlw	39
  5343  003732  0100               	movlb	0	; () banked
  5344  003734  6FFD               	movwf	(_auxCounter+1)& (0+255),b
  5345  003736  0E10               	movlw	16
  5346  003738  6FFC               	movwf	_auxCounter& (0+255),b
  5347                           
  5348                           ;sm_MenuConfiguration_MC50.c: 799:                     ts_system.timeBetweenSaveCounters
      +                          =0;
  5349  00373A  0E00               	movlw	0
  5350  00373C  0101               	movlb	1	; () banked
  5351  00373E  6FC5               	movwf	(_ts_system+39)& (0+255),b	;volatile
  5352  003740  0E00               	movlw	0
  5353  003742  6FC4               	movwf	(_ts_system+38)& (0+255),b	;volatile
  5354                           
  5355                           ; BSR set to: 1
  5356                           ;sm_MenuConfiguration_MC50.c: 800:                     tempCounter=var_sys.actualCounter
      +                          Moves;
  5357  003744  C13C  F2F6         	movff	_var_sys+60,_tempCounter	;volatile
  5358  003748  C13D  F2F7         	movff	_var_sys+61,_tempCounter+1	;volatile
  5359  00374C  C13E  F2F8         	movff	_var_sys+62,_tempCounter+2	;volatile
  5360  003750  C13F  F2F9         	movff	_var_sys+63,_tempCounter+3	;volatile
  5361                           
  5362                           ; BSR set to: 1
  5363                           ;sm_MenuConfiguration_MC50.c: 801:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_showCounter);
  5364  003754  0EBD               	movlw	low _menuConfiguration_stateMachine
  5365  003756  6E12               	movwf	sm_send_event@psm^0,c
  5366  003758  0E02               	movlw	high _menuConfiguration_stateMachine
  5367  00375A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5368  00375C  0E00               	movlw	0
  5369  00375E  6E15               	movwf	(sm_send_event@event+1)^0,c
  5370  003760  0E05               	movlw	5
  5371  003762  6E14               	movwf	sm_send_event@event^0,c
  5372  003764  ECF7  F047         	call	_sm_send_event	;wreg free
  5373                           
  5374                           ;sm_MenuConfiguration_MC50.c: 802:                 };sm_MenuConfiguration_MC50.c: 803:  
      +                                         break;
  5375  003768  D1E3               	goto	l22288
  5376  00376A                     l22076:
  5377                           
  5378                           ; BSR set to: 0
  5379                           ;sm_MenuConfiguration_MC50.c: 805:                 {;sm_MenuConfiguration_MC50.c: 806:  
      +                                             edit_Param.tempValue=0;
  5380  00376A  0E00               	movlw	0
  5381  00376C  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5382                           
  5383                           ;sm_MenuConfiguration_MC50.c: 807:                     haveValueToEdit=1;
  5384  00376E  0E01               	movlw	1
  5385  003770  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5386                           
  5387                           ; BSR set to: 0
  5388                           ;sm_MenuConfiguration_MC50.c: 808:                     edit_Param.Value = 0;
  5389  003772  0E00               	movlw	0
  5390  003774  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5391  003776  0E00               	movlw	0
  5392  003778  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  5393                           
  5394                           ;sm_MenuConfiguration_MC50.c: 809:                 };sm_MenuConfiguration_MC50.c: 810:  
      +                                         break;
  5395  00377A  D1DA               	goto	l22288
  5396  00377C                     l22080:
  5397                           
  5398                           ; BSR set to: 0
  5399                           ;sm_MenuConfiguration_MC50.c: 812:                 {;sm_MenuConfiguration_MC50.c: 813:  
      +                                             edit_Param.Max=3;
  5400  00377C  0E03               	movlw	3
  5401  00377E  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5402                           
  5403                           ;sm_MenuConfiguration_MC50.c: 814:                     edit_Param.Min=0;
  5404  003780  0E00               	movlw	0
  5405  003782  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5406                           
  5407                           ; BSR set to: 0
  5408                           ;sm_MenuConfiguration_MC50.c: 815:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashRGBMode;
  5409  003784  C0B1  F049         	movff	_var_sys_NVM+25,_edit_Param+3	;volatile
  5410                           
  5411                           ; BSR set to: 0
  5412                           ;sm_MenuConfiguration_MC50.c: 816:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashRGBMode;
  5413  003788  0EB1               	movlw	low (_var_sys_NVM+25)
  5414  00378A  D758               	goto	L13
  5415  00378C                     l22090:
  5416                           
  5417                           ; BSR set to: 0
  5418  00378C  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5419  00378E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5420  003790  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5421                           
  5422                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5423                           ; Switch size 1, requested type "simple"
  5424                           ; Number of cases is 1, Range of values is 0 to 0
  5425                           ; switch strategies available:
  5426                           ; Name         Instructions Cycles
  5427                           ; simple_byte            4     3 (average)
  5428                           ;	Chosen strategy is simple_byte
  5429  003792  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5430  003794  0A00               	xorlw	0	; case 0
  5431  003796  A4D8               	btfss	status,2,c
  5432  003798  D1CB               	goto	l22288
  5433                           
  5434                           ; BSR set to: 0
  5435                           ; Switch size 1, requested type "simple"
  5436                           ; Number of cases is 10, Range of values is 0 to 9
  5437                           ; switch strategies available:
  5438                           ; Name         Instructions Cycles
  5439                           ; simple_byte           31    16 (average)
  5440                           ;	Chosen strategy is simple_byte
  5441  00379A  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5442  00379C  0A00               	xorlw	0	; case 0
  5443  00379E  B4D8               	btfsc	status,2,c
  5444  0037A0  D79E               	goto	l22038
  5445  0037A2  0A01               	xorlw	1	; case 1
  5446  0037A4  B4D8               	btfsc	status,2,c
  5447  0037A6  D79F               	goto	l22040
  5448  0037A8  0A03               	xorlw	3	; case 2
  5449  0037AA  B4D8               	btfsc	status,2,c
  5450  0037AC  D7A0               	goto	l22042
  5451  0037AE  0A01               	xorlw	1	; case 3
  5452  0037B0  B4D8               	btfsc	status,2,c
  5453  0037B2  D7A3               	goto	l22050
  5454  0037B4  0A07               	xorlw	7	; case 4
  5455  0037B6  B4D8               	btfsc	status,2,c
  5456  0037B8  D1BB               	goto	l22288
  5457  0037BA  0A01               	xorlw	1	; case 5
  5458  0037BC  B4D8               	btfsc	status,2,c
  5459  0037BE  D7A5               	goto	l3380
  5460  0037C0  0A03               	xorlw	3	; case 6
  5461  0037C2  B4D8               	btfsc	status,2,c
  5462  0037C4  D7A6               	goto	l22062
  5463  0037C6  0A01               	xorlw	1	; case 7
  5464  0037C8  B4D8               	btfsc	status,2,c
  5465  0037CA  D7AB               	goto	l22070
  5466  0037CC  0A0F               	xorlw	15	; case 8
  5467  0037CE  B4D8               	btfsc	status,2,c
  5468  0037D0  D7CC               	goto	l22076
  5469  0037D2  0A01               	xorlw	1	; case 9
  5470  0037D4  B4D8               	btfsc	status,2,c
  5471  0037D6  D7D2               	goto	l22080
  5472  0037D8  D1AB               	goto	l22288
  5473  0037DA                     l22092:
  5474                           
  5475                           ; BSR set to: 0
  5476                           ;sm_MenuConfiguration_MC50.c: 829:                 {;sm_MenuConfiguration_MC50.c: 830:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5477  0037DA  0EBD               	movlw	low _menuConfiguration_stateMachine
  5478  0037DC  6E12               	movwf	sm_send_event@psm^0,c
  5479  0037DE  0E02               	movlw	high _menuConfiguration_stateMachine
  5480  0037E0  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5481  0037E2  0E00               	movlw	0
  5482  0037E4  6E15               	movwf	(sm_send_event@event+1)^0,c
  5483  0037E6  0E14               	movlw	20
  5484  0037E8  6E14               	movwf	sm_send_event@event^0,c
  5485  0037EA  ECF7  F047         	call	_sm_send_event	;wreg free
  5486                           
  5487                           ;sm_MenuConfiguration_MC50.c: 831:                  sm_send_event(&controlGate_stateMach
      +                          ine,ev_SartLearning );
  5488  0037EE  0EE6               	movlw	low _controlGate_stateMachine
  5489  0037F0  6E12               	movwf	sm_send_event@psm^0,c
  5490  0037F2  0E01               	movlw	high _controlGate_stateMachine
  5491  0037F4  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5492  0037F6  0E00               	movlw	0
  5493  0037F8  6E15               	movwf	(sm_send_event@event+1)^0,c
  5494  0037FA  0E14               	movlw	20
  5495  0037FC  6E14               	movwf	sm_send_event@event^0,c
  5496  0037FE  ECF7  F047         	call	_sm_send_event	;wreg free
  5497                           
  5498                           ;sm_MenuConfiguration_MC50.c: 832:                  var_sys.LearningIsEnabled=YES;
  5499  003802  0E01               	movlw	1
  5500  003804  0101               	movlb	1	; () banked
  5501  003806  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5502                           
  5503                           ; BSR set to: 1
  5504                           ;sm_MenuConfiguration_MC50.c: 833:                  var_sys.programinAutomatic = Automat
      +                          ic;
  5505  003808  0E00               	movlw	0
  5506  00380A  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5507                           
  5508                           ; BSR set to: 1
  5509                           ;sm_MenuConfiguration_MC50.c: 834:                  SaveNVM_VarSystem(pageMemoryE);
  5510  00380C  0E01               	movlw	1
  5511  00380E  EC05  F04C         	call	_SaveNVM_VarSystem
  5512                           
  5513                           ;sm_MenuConfiguration_MC50.c: 837:                 };sm_MenuConfiguration_MC50.c: 838:  
      +                                         break;
  5514  003812  D18E               	goto	l22288
  5515  003814                     l22100:
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;sm_MenuConfiguration_MC50.c: 840:                 {;sm_MenuConfiguration_MC50.c: 841:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5519  003814  0EBD               	movlw	low _menuConfiguration_stateMachine
  5520  003816  6E12               	movwf	sm_send_event@psm^0,c
  5521  003818  0E02               	movlw	high _menuConfiguration_stateMachine
  5522  00381A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5523  00381C  0E00               	movlw	0
  5524  00381E  6E15               	movwf	(sm_send_event@event+1)^0,c
  5525  003820  0E14               	movlw	20
  5526  003822  6E14               	movwf	sm_send_event@event^0,c
  5527  003824  ECF7  F047         	call	_sm_send_event	;wreg free
  5528                           
  5529                           ;sm_MenuConfiguration_MC50.c: 842:                  sm_send_event(&controlGate_stateMach
      +                          ine, ev_SartLearning);
  5530  003828  0EE6               	movlw	low _controlGate_stateMachine
  5531  00382A  6E12               	movwf	sm_send_event@psm^0,c
  5532  00382C  0E01               	movlw	high _controlGate_stateMachine
  5533  00382E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5534  003830  0E00               	movlw	0
  5535  003832  6E15               	movwf	(sm_send_event@event+1)^0,c
  5536  003834  0E14               	movlw	20
  5537  003836  6E14               	movwf	sm_send_event@event^0,c
  5538  003838  ECF7  F047         	call	_sm_send_event	;wreg free
  5539                           
  5540                           ;sm_MenuConfiguration_MC50.c: 843:                  var_sys.LearningIsEnabled=YES;
  5541  00383C  0E01               	movlw	1
  5542  00383E  0101               	movlb	1	; () banked
  5543  003840  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5544                           
  5545                           ; BSR set to: 1
  5546                           ;sm_MenuConfiguration_MC50.c: 844:                  var_sys.programinAutomatic = Manual;
  5547  003842  0E01               	movlw	1
  5548  003844  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5549                           
  5550                           ; BSR set to: 1
  5551                           ;sm_MenuConfiguration_MC50.c: 845:                  SaveNVM_VarSystem(pageMemoryE);
  5552  003846  0E01               	movlw	1
  5553  003848  EC05  F04C         	call	_SaveNVM_VarSystem
  5554                           
  5555                           ;sm_MenuConfiguration_MC50.c: 848:                 };sm_MenuConfiguration_MC50.c: 849:  
      +                                         break;
  5556  00384C  D171               	goto	l22288
  5557  00384E                     l3390:
  5558                           
  5559                           ; BSR set to: 0
  5560                           ;sm_MenuConfiguration_MC50.c: 851:                 {;sm_MenuConfiguration_MC50.c: 852:  
      +                                          edit_Param.tempValue=var_sys_NVM.TypeofMotor;
  5561  00384E  C0B4  F049         	movff	_var_sys_NVM+28,_edit_Param+3	;volatile
  5562                           
  5563                           ; BSR set to: 0
  5564                           ;sm_MenuConfiguration_MC50.c: 853:                  load_New_Menu(TypeMotor_Menu);
  5565  003852  0E03               	movlw	3
  5566  003854  EC4D  F025         	call	_load_New_Menu
  5567                           
  5568                           ;sm_MenuConfiguration_MC50.c: 854:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.TypeofMotor;
  5569  003858  0EB4               	movlw	low (_var_sys_NVM+28)
  5570  00385A  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5571  00385C  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5572                           
  5573                           ;sm_MenuConfiguration_MC50.c: 855:                  haveValueToEdit=1;
  5574  00385E  0E01               	movlw	1
  5575  003860  0100               	movlb	0	; () banked
  5576  003862  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;sm_MenuConfiguration_MC50.c: 856:                  edit_Param.Max=2;
  5580  003864  0E02               	movlw	2
  5581  003866  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5582                           
  5583                           ; BSR set to: 0
  5584                           ;sm_MenuConfiguration_MC50.c: 857:                  edit_Param.Min=0;
  5585  003868  0E00               	movlw	0
  5586  00386A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5587                           
  5588                           ;sm_MenuConfiguration_MC50.c: 859:                 };sm_MenuConfiguration_MC50.c: 860:  
      +                                         break;
  5589  00386C  D161               	goto	l22288
  5590  00386E                     l3391:
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;sm_MenuConfiguration_MC50.c: 862:                 {;sm_MenuConfiguration_MC50.c: 863:  
      +                                          edit_Param.tempValue=var_sys_NVM.Direction_motor;
  5594  00386E  C0B3  F049         	movff	_var_sys_NVM+27,_edit_Param+3	;volatile
  5595                           
  5596                           ; BSR set to: 0
  5597                           ;sm_MenuConfiguration_MC50.c: 864:                  load_New_Menu(Direction_Menu);
  5598  003872  0E02               	movlw	2
  5599  003874  EC4D  F025         	call	_load_New_Menu
  5600                           
  5601                           ;sm_MenuConfiguration_MC50.c: 865:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.Direction_motor;
  5602  003878  0EB3               	movlw	low (_var_sys_NVM+27)
  5603  00387A  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5604  00387C  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5605                           
  5606                           ;sm_MenuConfiguration_MC50.c: 866:                  haveValueToEdit=1;
  5607  00387E  0E01               	movlw	1
  5608  003880  0100               	movlb	0	; () banked
  5609  003882  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5610                           
  5611                           ; BSR set to: 0
  5612                           ;sm_MenuConfiguration_MC50.c: 867:                  edit_Param.Max=1;
  5613  003884  0E01               	movlw	1
  5614  003886  D7EF               	goto	L14
  5615  003888                     l22130:
  5616                           
  5617                           ; BSR set to: 0
  5618  003888  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5619  00388A  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5620  00388C  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5621                           
  5622                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5623                           ; Switch size 1, requested type "simple"
  5624                           ; Number of cases is 1, Range of values is 0 to 0
  5625                           ; switch strategies available:
  5626                           ; Name         Instructions Cycles
  5627                           ; simple_byte            4     3 (average)
  5628                           ;	Chosen strategy is simple_byte
  5629  00388E  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5630  003890  0A00               	xorlw	0	; case 0
  5631  003892  A4D8               	btfss	status,2,c
  5632  003894  D14D               	goto	l22288
  5633                           
  5634                           ; BSR set to: 0
  5635                           ; Switch size 1, requested type "simple"
  5636                           ; Number of cases is 4, Range of values is 0 to 3
  5637                           ; switch strategies available:
  5638                           ; Name         Instructions Cycles
  5639                           ; simple_byte           13     7 (average)
  5640                           ;	Chosen strategy is simple_byte
  5641  003896  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5642  003898  0A00               	xorlw	0	; case 0
  5643  00389A  B4D8               	btfsc	status,2,c
  5644  00389C  D79E               	goto	l22092
  5645  00389E  0A01               	xorlw	1	; case 1
  5646  0038A0  B4D8               	btfsc	status,2,c
  5647  0038A2  D7B8               	goto	l22100
  5648  0038A4  0A03               	xorlw	3	; case 2
  5649  0038A6  B4D8               	btfsc	status,2,c
  5650  0038A8  D7D2               	goto	l3390
  5651  0038AA  0A01               	xorlw	1	; case 3
  5652  0038AC  B4D8               	btfsc	status,2,c
  5653  0038AE  D7DF               	goto	l3391
  5654  0038B0  D13F               	goto	l22288
  5655  0038B2                     l22132:
  5656                           
  5657                           ; BSR set to: 0
  5658                           ;sm_MenuConfiguration_MC50.c: 883:                 {;sm_MenuConfiguration_MC50.c: 884:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationOpen;
  5659  0038B2  0E98               	movlw	low _var_sys_NVM
  5660  0038B4  D001               	goto	L15
  5661  0038B6                     l22134:
  5662                           
  5663                           ; BSR set to: 0
  5664                           ;sm_MenuConfiguration_MC50.c: 888:                 {;sm_MenuConfiguration_MC50.c: 889:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationClose;
  5665  0038B6  0E99               	movlw	low (_var_sys_NVM+1)
  5666  0038B8                     L15:
  5667  0038B8  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5668  0038BA  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5669                           
  5670                           ;sm_MenuConfiguration_MC50.c: 890:                 };sm_MenuConfiguration_MC50.c: 891:  
      +                                         break;
  5671  0038BC  D00E               	goto	l22140
  5672  0038BE                     l22138:
  5673                           
  5674                           ; BSR set to: 0
  5675  0038BE  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5676  0038C0  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5677  0038C2  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5678                           
  5679                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5680                           ; Switch size 1, requested type "simple"
  5681                           ; Number of cases is 1, Range of values is 0 to 0
  5682                           ; switch strategies available:
  5683                           ; Name         Instructions Cycles
  5684                           ; simple_byte            4     3 (average)
  5685                           ;	Chosen strategy is simple_byte
  5686  0038C4  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5687  0038C6  0A00               	xorlw	0	; case 0
  5688  0038C8  A4D8               	btfss	status,2,c
  5689  0038CA  D007               	goto	l22140
  5690                           
  5691                           ; BSR set to: 0
  5692                           ; Switch size 1, requested type "simple"
  5693                           ; Number of cases is 2, Range of values is 0 to 1
  5694                           ; switch strategies available:
  5695                           ; Name         Instructions Cycles
  5696                           ; simple_byte            7     4 (average)
  5697                           ;	Chosen strategy is simple_byte
  5698  0038CC  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5699  0038CE  0A00               	xorlw	0	; case 0
  5700  0038D0  B4D8               	btfsc	status,2,c
  5701  0038D2  D7EF               	goto	l22132
  5702  0038D4  0A01               	xorlw	1	; case 1
  5703  0038D6  B4D8               	btfsc	status,2,c
  5704  0038D8  D7EE               	goto	l22134
  5705  0038DA                     l22140:
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;sm_MenuConfiguration_MC50.c: 895:                 edit_Param.Max=45;
  5709  0038DA  0E2D               	movlw	45
  5710  0038DC                     L29:
  5711  0038DC  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5712                           
  5713                           ;sm_MenuConfiguration_MC50.c: 896:                 edit_Param.Min=0;
  5714  0038DE  0E00               	movlw	0
  5715  0038E0  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5716  0038E2                     L19:
  5717                           
  5718                           ;sm_MenuConfiguration_MC50.c: 899:             haveValueToEdit=1;
  5719  0038E2  0E01               	movlw	1
  5720  0038E4  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5721                           
  5722                           ; BSR set to: 0
  5723                           ;sm_MenuConfiguration_MC50.c: 900:             edit_Param.tempValue= edit_Param.Value[0]
      +                          ;
  5724  0038E6  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  5725  0038EA  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  5726  0038EE  50DF               	movf	indf2,w,c
  5727  0038F0  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5728                           
  5729                           ;sm_MenuConfiguration_MC50.c: 901:         };sm_MenuConfiguration_MC50.c: 902:         b
      +                          reak;
  5730  0038F2  D11E               	goto	l22288
  5731  0038F4                     l22144:
  5732                           
  5733                           ; BSR set to: 0
  5734                           ;sm_MenuConfiguration_MC50.c: 904:         {;sm_MenuConfiguration_MC50.c: 905:          
      +                             edit_Param.Max=9;
  5735  0038F4  0E09               	movlw	9
  5736  0038F6  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5737                           
  5738                           ;sm_MenuConfiguration_MC50.c: 906:             edit_Param.Min=0;
  5739  0038F8  0E00               	movlw	0
  5740  0038FA  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5741                           
  5742                           ;sm_MenuConfiguration_MC50.c: 907:             switch (ParameterSelected)
  5743  0038FC  D00F               	goto	l22160
  5744  0038FE                     l22146:
  5745                           
  5746                           ; BSR set to: 0
  5747                           ;sm_MenuConfiguration_MC50.c: 910:                 {;sm_MenuConfiguration_MC50.c: 911:  
      +                                               if (var_sys_NVM.motorSensitivity <2)
  5748  0038FE  0E02               	movlw	2
  5749  003900  619B               	cpfslt	(_var_sys_NVM+3)& (0+255),b	;volatile
  5750  003902  D002               	goto	l22150
  5751                           
  5752                           ; BSR set to: 0
  5753                           ;sm_MenuConfiguration_MC50.c: 912:                       {;sm_MenuConfiguration_MC50.c: 
      +                          913:                         edit_Param.Min=0;
  5754  003904  0E00               	movlw	0
  5755  003906  D001               	goto	L16
  5756  003908                     l22150:
  5757                           
  5758                           ; BSR set to: 0
  5759                           ;sm_MenuConfiguration_MC50.c: 916:                       {;sm_MenuConfiguration_MC50.c: 
      +                          917:                         edit_Param.Min=9;
  5760  003908  0E09               	movlw	9
  5761  00390A                     L16:
  5762  00390A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5763                           
  5764                           ; BSR set to: 0
  5765                           ;sm_MenuConfiguration_MC50.c: 919:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.motorPower;
  5766  00390C  0E9A               	movlw	low (_var_sys_NVM+2)
  5767  00390E  D003               	goto	L18
  5768  003910                     l22154:
  5769                           
  5770                           ; BSR set to: 0
  5771                           ;sm_MenuConfiguration_MC50.c: 923:                 {;sm_MenuConfiguration_MC50.c: 924:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.motorSensitivity;
  5772  003910  0E9B               	movlw	low (_var_sys_NVM+3)
  5773  003912  D001               	goto	L18
  5774  003914                     l22156:
  5775                           
  5776                           ; BSR set to: 0
  5777                           ;sm_MenuConfiguration_MC50.c: 928:                 {;sm_MenuConfiguration_MC50.c: 929:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationSensivity;
  5778  003914  0EA7               	movlw	low (_var_sys_NVM+15)
  5779  003916                     L18:
  5780  003916  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5781  003918  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5782                           
  5783                           ;sm_MenuConfiguration_MC50.c: 930:                 };sm_MenuConfiguration_MC50.c: 931:  
      +                                         break;
  5784  00391A  D7E3               	goto	L19
  5785  00391C                     l22160:
  5786                           
  5787                           ; BSR set to: 0
  5788  00391C  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5789  00391E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5790  003920  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5791                           
  5792                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5793                           ; Switch size 1, requested type "simple"
  5794                           ; Number of cases is 1, Range of values is 0 to 0
  5795                           ; switch strategies available:
  5796                           ; Name         Instructions Cycles
  5797                           ; simple_byte            4     3 (average)
  5798                           ;	Chosen strategy is simple_byte
  5799  003922  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5800  003924  0A00               	xorlw	0	; case 0
  5801  003926  A4D8               	btfss	status,2,c
  5802  003928  D7DC               	goto	L19
  5803                           
  5804                           ; BSR set to: 0
  5805                           ; Switch size 1, requested type "simple"
  5806                           ; Number of cases is 3, Range of values is 0 to 2
  5807                           ; switch strategies available:
  5808                           ; Name         Instructions Cycles
  5809                           ; simple_byte           10     6 (average)
  5810                           ;	Chosen strategy is simple_byte
  5811  00392A  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5812  00392C  0A00               	xorlw	0	; case 0
  5813  00392E  B4D8               	btfsc	status,2,c
  5814  003930  D7E6               	goto	l22146
  5815  003932  0A01               	xorlw	1	; case 1
  5816  003934  B4D8               	btfsc	status,2,c
  5817  003936  D7EC               	goto	l22154
  5818  003938  0A03               	xorlw	3	; case 2
  5819  00393A  B4D8               	btfsc	status,2,c
  5820  00393C  D7EB               	goto	l22156
  5821  00393E  D7D1               	goto	L19
  5822  003940                     l22166:
  5823                           
  5824                           ; BSR set to: 0
  5825                           ;sm_MenuConfiguration_MC50.c: 942:                 {;sm_MenuConfiguration_MC50.c: 943:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeFullClose;
  5826  003940  0E9D               	movlw	low (_var_sys_NVM+5)
  5827  003942  D001               	goto	L20
  5828  003944                     l22168:
  5829                           
  5830                           ; BSR set to: 0
  5831                           ;sm_MenuConfiguration_MC50.c: 947:                 {;sm_MenuConfiguration_MC50.c: 948:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeWalkClose;
  5832  003944  0E9E               	movlw	low (_var_sys_NVM+6)
  5833  003946                     L20:
  5834  003946  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5835  003948  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5836                           
  5837                           ;sm_MenuConfiguration_MC50.c: 949:                 };sm_MenuConfiguration_MC50.c: 950:  
      +                                         break;
  5838  00394A  D00E               	goto	l22174
  5839  00394C                     l22172:
  5840                           
  5841                           ; BSR set to: 0
  5842  00394C  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5843  00394E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5844  003950  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5845                           
  5846                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5847                           ; Switch size 1, requested type "simple"
  5848                           ; Number of cases is 1, Range of values is 0 to 0
  5849                           ; switch strategies available:
  5850                           ; Name         Instructions Cycles
  5851                           ; simple_byte            4     3 (average)
  5852                           ;	Chosen strategy is simple_byte
  5853  003952  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5854  003954  0A00               	xorlw	0	; case 0
  5855  003956  A4D8               	btfss	status,2,c
  5856  003958  D007               	goto	l22174
  5857                           
  5858                           ; BSR set to: 0
  5859                           ; Switch size 1, requested type "simple"
  5860                           ; Number of cases is 2, Range of values is 0 to 1
  5861                           ; switch strategies available:
  5862                           ; Name         Instructions Cycles
  5863                           ; simple_byte            7     4 (average)
  5864                           ;	Chosen strategy is simple_byte
  5865  00395A  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5866  00395C  0A00               	xorlw	0	; case 0
  5867  00395E  B4D8               	btfsc	status,2,c
  5868  003960  D7EF               	goto	l22166
  5869  003962  0A01               	xorlw	1	; case 1
  5870  003964  B4D8               	btfsc	status,2,c
  5871  003966  D7EE               	goto	l22168
  5872  003968                     l22174:
  5873                           
  5874                           ; BSR set to: 0
  5875                           ;sm_MenuConfiguration_MC50.c: 952:             edit_Param.Max=99;
  5876  003968  0E63               	movlw	99
  5877  00396A  D7B8               	goto	L29
  5878  00396C                     l22178:
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;sm_MenuConfiguration_MC50.c: 963:                 {;sm_MenuConfiguration_MC50.c: 964:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellIsON;
  5882  00396C  0E9F               	movlw	low (_var_sys_NVM+7)
  5883  00396E  D034               	goto	L127
  5884  003970                     l22180:
  5885                           
  5886                           ; BSR set to: 0
  5887                           ;sm_MenuConfiguration_MC50.c: 968:                 {;sm_MenuConfiguration_MC50.c: 969:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellInOpen;
  5888  003970  0EA0               	movlw	low (_var_sys_NVM+8)
  5889  003972  D032               	goto	L127
  5890  003974                     l22184:
  5891                           
  5892                           ; BSR set to: 0
  5893  003974  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5894  003976  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5895  003978  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5896                           
  5897                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5898                           ; Switch size 1, requested type "simple"
  5899                           ; Number of cases is 1, Range of values is 0 to 0
  5900                           ; switch strategies available:
  5901                           ; Name         Instructions Cycles
  5902                           ; simple_byte            4     3 (average)
  5903                           ;	Chosen strategy is simple_byte
  5904  00397A  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5905  00397C  0A00               	xorlw	0	; case 0
  5906  00397E  A4D8               	btfss	status,2,c
  5907  003980  D02D               	goto	L126
  5908                           
  5909                           ; BSR set to: 0
  5910                           ; Switch size 1, requested type "simple"
  5911                           ; Number of cases is 2, Range of values is 0 to 1
  5912                           ; switch strategies available:
  5913                           ; Name         Instructions Cycles
  5914                           ; simple_byte            7     4 (average)
  5915                           ;	Chosen strategy is simple_byte
  5916  003982  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5917  003984  0A00               	xorlw	0	; case 0
  5918  003986  B4D8               	btfsc	status,2,c
  5919  003988  D7F1               	goto	l22178
  5920  00398A  0A01               	xorlw	1	; case 1
  5921  00398C  B4D8               	btfsc	status,2,c
  5922  00398E  D7F0               	goto	l22180
  5923  003990  D025               	goto	L126
  5924  003992                     l22190:
  5925                           
  5926                           ; BSR set to: 0
  5927                           ;sm_MenuConfiguration_MC50.c: 984:                 {;sm_MenuConfiguration_MC50.c: 985:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandIsON;
  5928  003992  0EA1               	movlw	low (_var_sys_NVM+9)
  5929  003994  D021               	goto	L127
  5930  003996                     l22192:
  5931                           
  5932                           ; BSR set to: 0
  5933                           ;sm_MenuConfiguration_MC50.c: 989:                 {;sm_MenuConfiguration_MC50.c: 990:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandType;
  5934  003996  0EA2               	movlw	low (_var_sys_NVM+10)
  5935  003998  D01F               	goto	L127
  5936  00399A                     l22194:
  5937                           
  5938                           ; BSR set to: 0
  5939                           ;sm_MenuConfiguration_MC50.c: 994:                 {;sm_MenuConfiguration_MC50.c: 995:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandInOpen;
  5940  00399A  0EA3               	movlw	low (_var_sys_NVM+11)
  5941  00399C  D01D               	goto	L127
  5942  00399E                     l22196:
  5943                           
  5944                           ; BSR set to: 0
  5945                           ;sm_MenuConfiguration_MC50.c: 999:                 {;sm_MenuConfiguration_MC50.c: 1000: 
      +                                              edit_Param.Value=(unsigned char*)&var_sys_NVM.Stopboton;
  5946  00399E  0EAE               	movlw	low (_var_sys_NVM+22)
  5947  0039A0  D01B               	goto	L127
  5948  0039A2                     l22200:
  5949                           
  5950                           ; BSR set to: 0
  5951  0039A2  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5952  0039A4  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5953  0039A6  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5954                           
  5955                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5956                           ; Switch size 1, requested type "simple"
  5957                           ; Number of cases is 1, Range of values is 0 to 0
  5958                           ; switch strategies available:
  5959                           ; Name         Instructions Cycles
  5960                           ; simple_byte            4     3 (average)
  5961                           ;	Chosen strategy is simple_byte
  5962  0039A8  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5963  0039AA  0A00               	xorlw	0	; case 0
  5964  0039AC  A4D8               	btfss	status,2,c
  5965  0039AE  D016               	goto	L126
  5966                           
  5967                           ; BSR set to: 0
  5968                           ; Switch size 1, requested type "simple"
  5969                           ; Number of cases is 4, Range of values is 0 to 3
  5970                           ; switch strategies available:
  5971                           ; Name         Instructions Cycles
  5972                           ; simple_byte           13     7 (average)
  5973                           ;	Chosen strategy is simple_byte
  5974  0039B0  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5975  0039B2  0A00               	xorlw	0	; case 0
  5976  0039B4  B4D8               	btfsc	status,2,c
  5977  0039B6  D7ED               	goto	l22190
  5978  0039B8  0A01               	xorlw	1	; case 1
  5979  0039BA  B4D8               	btfsc	status,2,c
  5980  0039BC  D7EC               	goto	l22192
  5981  0039BE  0A03               	xorlw	3	; case 2
  5982  0039C0  B4D8               	btfsc	status,2,c
  5983  0039C2  D7EB               	goto	l22194
  5984  0039C4  0A01               	xorlw	1	; case 3
  5985  0039C6  B4D8               	btfsc	status,2,c
  5986  0039C8  D7EA               	goto	l22196
  5987  0039CA  D008               	goto	L126
  5988  0039CC                     l22206:
  5989                           
  5990                           ; BSR set to: 0
  5991                           ;sm_MenuConfiguration_MC50.c: 1018:                 {;sm_MenuConfiguration_MC50.c: 1019:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.homemPresente;
  5992  0039CC  0EA8               	movlw	low (_var_sys_NVM+16)
  5993  0039CE  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5994  0039D0  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5995                           
  5996                           ; BSR set to: 0
  5997                           ;sm_MenuConfiguration_MC50.c: 1020:                       edit_Param.Max=2;
  5998  0039D2  0E02               	movlw	2
  5999  0039D4  D783               	goto	L29
  6000  0039D6                     l22212:
  6001                           
  6002                           ; BSR set to: 0
  6003                           ;sm_MenuConfiguration_MC50.c: 1025:                 {;sm_MenuConfiguration_MC50.c: 1026:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.logicDigital;
  6004  0039D6  0EA9               	movlw	low (_var_sys_NVM+17)
  6005  0039D8                     L127:
  6006  0039D8  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6007  0039DA  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  6008  0039DC                     L126:
  6009                           
  6010                           ; BSR set to: 0
  6011                           ;sm_MenuConfiguration_MC50.c: 1027:                     edit_Param.Max=1;
  6012  0039DC  0E01               	movlw	1
  6013  0039DE  D77E               	goto	L29
  6014  0039E0                     l22220:
  6015                           
  6016                           ; BSR set to: 0
  6017  0039E0  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6018  0039E2  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6019  0039E4  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6020                           
  6021                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6022                           ; Switch size 1, requested type "simple"
  6023                           ; Number of cases is 1, Range of values is 0 to 0
  6024                           ; switch strategies available:
  6025                           ; Name         Instructions Cycles
  6026                           ; simple_byte            4     3 (average)
  6027                           ;	Chosen strategy is simple_byte
  6028  0039E6  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6029  0039E8  0A00               	xorlw	0	; case 0
  6030  0039EA  A4D8               	btfss	status,2,c
  6031  0039EC  D77A               	goto	L19
  6032                           
  6033                           ; BSR set to: 0
  6034                           ; Switch size 1, requested type "simple"
  6035                           ; Number of cases is 2, Range of values is 0 to 1
  6036                           ; switch strategies available:
  6037                           ; Name         Instructions Cycles
  6038                           ; simple_byte            7     4 (average)
  6039                           ;	Chosen strategy is simple_byte
  6040  0039EE  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6041  0039F0  0A00               	xorlw	0	; case 0
  6042  0039F2  B4D8               	btfsc	status,2,c
  6043  0039F4  D7EB               	goto	l22206
  6044  0039F6  0A01               	xorlw	1	; case 1
  6045  0039F8  B4D8               	btfsc	status,2,c
  6046  0039FA  D7ED               	goto	l22212
  6047  0039FC  D772               	goto	L19
  6048  0039FE                     l22226:
  6049                           
  6050                           ; BSR set to: 0
  6051                           ;sm_MenuConfiguration_MC50.c: 1042:                 {;sm_MenuConfiguration_MC50.c: 1043:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softStart;
  6052  0039FE  0EAA               	movlw	low (_var_sys_NVM+18)
  6053  003A00  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6054  003A02  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  6055                           
  6056                           ; BSR set to: 0
  6057                           ;sm_MenuConfiguration_MC50.c: 1044:                      edit_Param.Max=9;
  6058  003A04  0E09               	movlw	9
  6059  003A06  D76A               	goto	L29
  6060  003A08                     l22232:
  6061                           
  6062                           ; BSR set to: 0
  6063                           ;sm_MenuConfiguration_MC50.c: 1049:                 {;sm_MenuConfiguration_MC50.c: 1050:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softstop;
  6064  003A08  0EAB               	movlw	low (_var_sys_NVM+19)
  6065  003A0A  D7FA               	goto	L27
  6066  003A0C                     l22240:
  6067                           
  6068                           ; BSR set to: 0
  6069  003A0C  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6070  003A0E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6071  003A10  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6072                           
  6073                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6074                           ; Switch size 1, requested type "simple"
  6075                           ; Number of cases is 1, Range of values is 0 to 0
  6076                           ; switch strategies available:
  6077                           ; Name         Instructions Cycles
  6078                           ; simple_byte            4     3 (average)
  6079                           ;	Chosen strategy is simple_byte
  6080  003A12  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6081  003A14  0A00               	xorlw	0	; case 0
  6082  003A16  A4D8               	btfss	status,2,c
  6083  003A18  D764               	goto	L19
  6084                           
  6085                           ; BSR set to: 0
  6086                           ; Switch size 1, requested type "simple"
  6087                           ; Number of cases is 2, Range of values is 0 to 1
  6088                           ; switch strategies available:
  6089                           ; Name         Instructions Cycles
  6090                           ; simple_byte            7     4 (average)
  6091                           ;	Chosen strategy is simple_byte
  6092  003A1A  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6093  003A1C  0A00               	xorlw	0	; case 0
  6094  003A1E  B4D8               	btfsc	status,2,c
  6095  003A20  D7EE               	goto	l22226
  6096  003A22  0A01               	xorlw	1	; case 1
  6097  003A24  B4D8               	btfsc	status,2,c
  6098  003A26  D7F0               	goto	l22232
  6099  003A28  D75C               	goto	L19
  6100  003A2A                     l22246:
  6101                           
  6102                           ; BSR set to: 0
  6103                           ;sm_MenuConfiguration_MC50.c: 1068:                 {;sm_MenuConfiguration_MC50.c: 1069:
      +                                 edit_Param.Value=&value;
  6104  003A2A  0EFC               	movlw	low setValueToEdit@value
  6105  003A2C  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6106  003A2E  0E01               	movlw	high setValueToEdit@value
  6107  003A30  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  6108                           
  6109                           ; BSR set to: 0
  6110                           ;sm_MenuConfiguration_MC50.c: 1070:                     for(unsigned char posindex=0; po
      +                          sindex <= *(unsigned char*)&var_sys_NVM.positionRemotesFull; posindex++)
  6111  003A32  0E00               	movlw	0
  6112  003A34  6FDF               	movwf	setValueToEdit@posindex& (0+255),b
  6113  003A36  D00D               	goto	l22256
  6114  003A38                     l3438:
  6115                           
  6116                           ; BSR set to: 0
  6117                           ;sm_MenuConfiguration_MC50.c: 1071:                     {;sm_MenuConfiguration_MC50.c: 1
      +                          072:                         value=posindex;
  6118  003A38  C0DF  F1FC         	movff	setValueToEdit@posindex,setValueToEdit@value
  6119                           
  6120                           ; BSR set to: 0
  6121                           ;sm_MenuConfiguration_MC50.c: 1073:                         if(cmdMemoryIsEmpty(menu_st.
      +                          parameterSelected, posindex))
  6122  003A3C  C0DF  F02E         	movff	setValueToEdit@posindex,cmdMemoryIsEmpty@position
  6123  003A40  0101               	movlb	1	; () banked
  6124  003A42  5168               	movf	(_menu_st+23)& (0+255),w,b
  6125  003A44  EC1E  F041         	call	_cmdMemoryIsEmpty
  6126  003A48  0900               	iorlw	0
  6127  003A4A  A4D8               	btfss	status,2,c
  6128  003A4C  D008               	goto	u25650
  6129                           
  6130                           ;sm_MenuConfiguration_MC50.c: 1075:                     }
  6131  003A4E  0100               	movlb	0	; () banked
  6132  003A50  2BDF               	incf	setValueToEdit@posindex& (0+255),f,b
  6133  003A52                     l22256:
  6134                           
  6135                           ; BSR set to: 0
  6136  003A52  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6137  003A56  51DF               	movf	setValueToEdit@posindex& (0+255),w,b
  6138  003A58  5CDE               	subwf	postinc2,w,c
  6139  003A5A  B0D8               	btfsc	status,0,c
  6140  003A5C  D7ED               	goto	l3438
  6141  003A5E                     u25650:
  6142                           
  6143                           ;sm_MenuConfiguration_MC50.c: 1076:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesFull;
  6144  003A5E  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6145  003A62  D018               	goto	L28
  6146  003A64                     l22260:
  6147                           
  6148                           ; BSR set to: 0
  6149                           ;sm_MenuConfiguration_MC50.c: 1080:                 {;sm_MenuConfiguration_MC50.c: 1081:
      +                                               for(unsigned char posindex=0; posindex <= *(unsigned char*)&var_sys
      +                          _NVM.positionRemotesWalk; posindex++)
  6150  003A64  0E00               	movlw	0
  6151  003A66  6FE0               	movwf	setValueToEdit@posindex_6980& (0+255),b
  6152  003A68  D00D               	goto	l22268
  6153  003A6A                     l3444:
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;sm_MenuConfiguration_MC50.c: 1082:                     {;sm_MenuConfiguration_MC50.c: 1
      +                          083:                         value=posindex;
  6157  003A6A  C0E0  F1FC         	movff	setValueToEdit@posindex_6980,setValueToEdit@value
  6158                           
  6159                           ; BSR set to: 0
  6160                           ;sm_MenuConfiguration_MC50.c: 1084:                         if(cmdMemoryIsEmpty(menu_st.
      +                          parameterSelected, posindex))
  6161  003A6E  C0E0  F02E         	movff	setValueToEdit@posindex_6980,cmdMemoryIsEmpty@position
  6162  003A72  0101               	movlb	1	; () banked
  6163  003A74  5168               	movf	(_menu_st+23)& (0+255),w,b
  6164  003A76  EC1E  F041         	call	_cmdMemoryIsEmpty
  6165  003A7A  0900               	iorlw	0
  6166  003A7C  A4D8               	btfss	status,2,c
  6167  003A7E  D008               	goto	u25670
  6168                           
  6169                           ;sm_MenuConfiguration_MC50.c: 1086:                     }
  6170  003A80  0100               	movlb	0	; () banked
  6171  003A82  2BE0               	incf	setValueToEdit@posindex_6980& (0+255),f,b
  6172  003A84                     l22268:
  6173                           
  6174                           ; BSR set to: 0
  6175  003A84  EE20  F0B9         	lfsr	2,_var_sys_NVM+33
  6176  003A88  51E0               	movf	setValueToEdit@posindex_6980& (0+255),w,b
  6177  003A8A  5CDE               	subwf	postinc2,w,c
  6178  003A8C  B0D8               	btfsc	status,0,c
  6179  003A8E  D7ED               	goto	l3444
  6180  003A90                     u25670:
  6181                           
  6182                           ;sm_MenuConfiguration_MC50.c: 1087:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesWalk;
  6183  003A90  EE20  F0B9         	lfsr	2,_var_sys_NVM+33
  6184  003A94                     L28:
  6185  003A94  50DF               	movf	indf2,w,c
  6186  003A96  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  6187                           
  6188                           ;sm_MenuConfiguration_MC50.c: 1088:                 };sm_MenuConfiguration_MC50.c: 1089:
      +                                           break;
  6189  003A98  D00E               	goto	l22276
  6190  003A9A                     l22274:
  6191                           
  6192                           ; BSR set to: 0
  6193  003A9A  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6194  003A9C  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6195  003A9E  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6196                           
  6197                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6198                           ; Switch size 1, requested type "simple"
  6199                           ; Number of cases is 1, Range of values is 0 to 0
  6200                           ; switch strategies available:
  6201                           ; Name         Instructions Cycles
  6202                           ; simple_byte            4     3 (average)
  6203                           ;	Chosen strategy is simple_byte
  6204  003AA0  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6205  003AA2  0A00               	xorlw	0	; case 0
  6206  003AA4  A4D8               	btfss	status,2,c
  6207  003AA6  D007               	goto	l22276
  6208                           
  6209                           ; BSR set to: 0
  6210                           ; Switch size 1, requested type "simple"
  6211                           ; Number of cases is 2, Range of values is 0 to 1
  6212                           ; switch strategies available:
  6213                           ; Name         Instructions Cycles
  6214                           ; simple_byte            7     4 (average)
  6215                           ;	Chosen strategy is simple_byte
  6216  003AA8  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6217  003AAA  0A00               	xorlw	0	; case 0
  6218  003AAC  B4D8               	btfsc	status,2,c
  6219  003AAE  D7BD               	goto	l22246
  6220  003AB0  0A01               	xorlw	1	; case 1
  6221  003AB2  B4D8               	btfsc	status,2,c
  6222  003AB4  D7D7               	goto	l22260
  6223  003AB6                     l22276:
  6224                           
  6225                           ;sm_MenuConfiguration_MC50.c: 1091:             edit_Param.position=*edit_Param.Value;
  6226  003AB6  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6227  003ABA  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6228  003ABE  50DF               	movf	indf2,w,c
  6229  003AC0  6E46               	movwf	_edit_Param^0,c	;volatile
  6230                           
  6231                           ;sm_MenuConfiguration_MC50.c: 1092:             edit_Param.Min=0;
  6232  003AC2  0E00               	movlw	0
  6233  003AC4  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  6234                           
  6235                           ;sm_MenuConfiguration_MC50.c: 1093:             haveValueToEdit=1;
  6236  003AC6  0E01               	movlw	1
  6237  003AC8  0100               	movlb	0	; () banked
  6238  003ACA  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  6239                           
  6240                           ;sm_MenuConfiguration_MC50.c: 1094:             edit_Param.tempValue=*edit_Param.Value;
  6241  003ACC  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6242  003AD0  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6243  003AD4  50DF               	movf	indf2,w,c
  6244  003AD6  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  6245                           
  6246                           ; BSR set to: 0
  6247                           ;sm_MenuConfiguration_MC50.c: 1095:             InitReceiver();
  6248  003AD8  ECE8  F04E         	call	_InitReceiver	;wreg free
  6249                           
  6250                           ;sm_MenuConfiguration_MC50.c: 1096:         };sm_MenuConfiguration_MC50.c: 1097:        
      +                           break;
  6251  003ADC  D029               	goto	l22288
  6252  003ADE                     l22286:
  6253                           
  6254                           ; BSR set to: 0
  6255  003ADE  51DE               	movf	setValueToEdit@menuType& (0+255),w,b
  6256  003AE0  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6257  003AE2  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6258                           
  6259                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6260                           ; Switch size 1, requested type "simple"
  6261                           ; Number of cases is 1, Range of values is 0 to 0
  6262                           ; switch strategies available:
  6263                           ; Name         Instructions Cycles
  6264                           ; simple_byte            4     3 (average)
  6265                           ;	Chosen strategy is simple_byte
  6266  003AE4  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6267  003AE6  0A00               	xorlw	0	; case 0
  6268  003AE8  A4D8               	btfss	status,2,c
  6269  003AEA  D022               	goto	l22288
  6270                           
  6271                           ; BSR set to: 0
  6272                           ; Switch size 1, requested type "simple"
  6273                           ; Number of cases is 11, Range of values is 0 to 12
  6274                           ; switch strategies available:
  6275                           ; Name         Instructions Cycles
  6276                           ; simple_byte           34    18 (average)
  6277                           ;	Chosen strategy is simple_byte
  6278  003AEC  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6279  003AEE  0A00               	xorlw	0	; case 0
  6280  003AF0  B4D8               	btfsc	status,2,c
  6281  003AF2  D58E               	goto	l3358
  6282  003AF4  0A01               	xorlw	1	; case 1
  6283  003AF6  B4D8               	btfsc	status,2,c
  6284  003AF8  D5EB               	goto	l3372
  6285  003AFA  0A05               	xorlw	5	; case 4
  6286  003AFC  B4D8               	btfsc	status,2,c
  6287  003AFE  D6C4               	goto	l22130
  6288  003B00  0A01               	xorlw	1	; case 5
  6289  003B02  B4D8               	btfsc	status,2,c
  6290  003B04  D6DC               	goto	l22138
  6291  003B06  0A03               	xorlw	3	; case 6
  6292  003B08  B4D8               	btfsc	status,2,c
  6293  003B0A  D6F4               	goto	l22144
  6294  003B0C  0A01               	xorlw	1	; case 7
  6295  003B0E  B4D8               	btfsc	status,2,c
  6296  003B10  D71D               	goto	l22172
  6297  003B12  0A0F               	xorlw	15	; case 8
  6298  003B14  B4D8               	btfsc	status,2,c
  6299  003B16  D72E               	goto	l22184
  6300  003B18  0A01               	xorlw	1	; case 9
  6301  003B1A  B4D8               	btfsc	status,2,c
  6302  003B1C  D742               	goto	l22200
  6303  003B1E  0A03               	xorlw	3	; case 10
  6304  003B20  B4D8               	btfsc	status,2,c
  6305  003B22  D75E               	goto	l22220
  6306  003B24  0A01               	xorlw	1	; case 11
  6307  003B26  B4D8               	btfsc	status,2,c
  6308  003B28  D771               	goto	l22240
  6309  003B2A  0A07               	xorlw	7	; case 12
  6310  003B2C  B4D8               	btfsc	status,2,c
  6311  003B2E  D7B5               	goto	l22274
  6312  003B30                     l22288:
  6313                           
  6314                           ;sm_MenuConfiguration_MC50.c: 1100:     return haveValueToEdit;
  6315  003B30  0100               	movlb	0	; () banked
  6316  003B32  51E1               	movf	setValueToEdit@haveValueToEdit& (0+255),w,b
  6317                           
  6318                           ; BSR set to: 0
  6319  003B34  0012               	return		;funcret
  6320  003B36                     __end_of_setValueToEdit:
  6321                           	callstack 0
  6322                           
  6323 ;; *************** function _load_New_Menu *****************
  6324 ;; Defined at:
  6325 ;;		line 434 in file "sm_MenuConfiguration_MC50.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;  Menu            1    wreg     enum E10813
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;  Menu            1   33[COMRAM] enum E10813
  6330 ;;  i               1   34[COMRAM] unsigned char 
  6331 ;; Return value:  Size  Location     Type
  6332 ;;                  1    wreg      void 
  6333 ;; Registers used:
  6334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6335 ;; Tracked objects:
  6336 ;;		On entry : 0/0
  6337 ;;		On exit  : 0/0
  6338 ;;		Unchanged: 0/0
  6339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6341 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6342 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6343 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6344 ;;Total ram usage:        4 bytes
  6345 ;; Hardware stack levels used: 1
  6346 ;; Hardware stack levels required when called: 5
  6347 ;; This function calls:
  6348 ;;		_SetSegmentValueIntermitentMain
  6349 ;;		_SetSegmentValueMain
  6350 ;; This function is called by:
  6351 ;;		_sm_execute_main
  6352 ;;		_sm_execute_menuConfiguration
  6353 ;;		_setValueToEdit
  6354 ;; This function uses a non-reentrant model
  6355 ;;
  6356                           
  6357                           	psect	text4
  6358  004A9A                     __ptext4:
  6359                           	callstack 0
  6360  004A9A                     _load_New_Menu:
  6361                           	callstack 22
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;incstack = 0
  6365                           ;load_New_Menu@Menu stored from wreg
  6366  004A9A  6E22               	movwf	load_New_Menu@Menu^0,c
  6367                           
  6368                           ;sm_MenuConfiguration_MC50.c: 435:     ts_system.timeoutMenu=((1000/50)*5) ;
  6369  004A9C  0E00               	movlw	0
  6370  004A9E  0101               	movlb	1	; () banked
  6371  004AA0  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  6372  004AA2  0E64               	movlw	100
  6373  004AA4  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  6374                           
  6375                           ; BSR set to: 1
  6376                           ;sm_MenuConfiguration_MC50.c: 439:     if(menu_st.actualMenu!=Menu && Menu>E_Menu)
  6377  004AA6  5022               	movf	load_New_Menu@Menu^0,w,c
  6378  004AA8  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  6379  004AAA  B4D8               	btfsc	status,2,c
  6380  004AAC  D006               	goto	l21148
  6381                           
  6382                           ; BSR set to: 1
  6383  004AAE  0E01               	movlw	1
  6384  004AB0  6422               	cpfsgt	load_New_Menu@Menu^0,c
  6385  004AB2  D003               	goto	l21148
  6386                           
  6387                           ; BSR set to: 1
  6388                           ;sm_MenuConfiguration_MC50.c: 440:     {;sm_MenuConfiguration_MC50.c: 441:         menu_
      +                          st.parameterSelected=0;
  6389  004AB4  0E00               	movlw	0
  6390  004AB6  6F68               	movwf	(_menu_st+23)& (0+255),b
  6391                           
  6392                           ;sm_MenuConfiguration_MC50.c: 442:     }
  6393  004AB8  D005               	goto	l21152
  6394  004ABA                     l21148:
  6395                           
  6396                           ; BSR set to: 1
  6397  004ABA  0E02               	movlw	2
  6398  004ABC  6022               	cpfslt	load_New_Menu@Menu^0,c
  6399  004ABE  D002               	goto	l21152
  6400                           
  6401                           ; BSR set to: 1
  6402                           ;sm_MenuConfiguration_MC50.c: 444:     {;sm_MenuConfiguration_MC50.c: 445:        menu_s
      +                          t.parameterSelected = menu_st.lastMainParameterSelected;
  6403  004AC0  C169  F168         	movff	_menu_st+24,_menu_st+23
  6404  004AC4                     l21152:
  6405                           
  6406                           ; BSR set to: 1
  6407                           ;sm_MenuConfiguration_MC50.c: 449:     menu_st.lastMenu=((void*)0);
  6408  004AC4  0E00               	movlw	0
  6409  004AC6  6F65               	movwf	(_menu_st+20)& (0+255),b
  6410                           
  6411                           ;sm_MenuConfiguration_MC50.c: 450:     switch (Menu)
  6412  004AC8  D0F6               	goto	l21204
  6413  004ACA                     l21154:
  6414                           
  6415                           ; BSR set to: 1
  6416                           ;sm_MenuConfiguration_MC50.c: 453:         {;sm_MenuConfiguration_MC50.c: 455:          
      +                             menu_st.actualMenu=P_Menu;
  6417  004ACA  0E00               	movlw	0
  6418  004ACC  6F66               	movwf	(_menu_st+21)& (0+255),b
  6419                           
  6420                           ;sm_MenuConfiguration_MC50.c: 456:             menu_st.menuSize=10;
  6421  004ACE  0E0A               	movlw	10
  6422  004AD0  6F67               	movwf	(_menu_st+22)& (0+255),b
  6423                           
  6424                           ;sm_MenuConfiguration_MC50.c: 457:             menu_st.lastMainParameterSelected=0;
  6425  004AD2  0E00               	movlw	0
  6426  004AD4  6F69               	movwf	(_menu_st+24)& (0+255),b
  6427                           
  6428                           ;sm_MenuConfiguration_MC50.c: 458:             for (i=0;i<(10);i++)
  6429  004AD6  0E00               	movlw	0
  6430  004AD8  6E23               	movwf	load_New_Menu@i^0,c
  6431  004ADA                     l21160:
  6432                           
  6433                           ;sm_MenuConfiguration_MC50.c: 459:             {;sm_MenuConfiguration_MC50.c: 460:      
      +                                    menu_st.menuList[i].value_display1=dP;
  6434  004ADA  5023               	movf	load_New_Menu@i^0,w,c
  6435  004ADC  0D02               	mullw	2
  6436  004ADE  0E51               	movlw	low _menu_st
  6437  004AE0  24F3               	addwf	243,w,c
  6438  004AE2  6ED9               	movwf	fsr2l,c
  6439  004AE4  0E01               	movlw	high _menu_st
  6440  004AE6  20F4               	addwfc	prodh,w,c
  6441  004AE8  6EDA               	movwf	fsr2h,c
  6442  004AEA  0E10               	movlw	16
  6443  004AEC  6EDF               	movwf	indf2,c
  6444                           
  6445                           ;sm_MenuConfiguration_MC50.c: 461:                menu_st.menuList[i].value_display2=i;
  6446  004AEE  5023               	movf	load_New_Menu@i^0,w,c
  6447  004AF0  0D02               	mullw	2
  6448  004AF2  0E52               	movlw	low (_menu_st+1)
  6449  004AF4  24F3               	addwf	243,w,c
  6450  004AF6  6ED9               	movwf	fsr2l,c
  6451  004AF8  0E01               	movlw	high (_menu_st+1)
  6452  004AFA  20F4               	addwfc	prodh,w,c
  6453  004AFC  6EDA               	movwf	fsr2h,c
  6454  004AFE  C023  FFDF         	movff	load_New_Menu@i,indf2
  6455                           
  6456                           ;sm_MenuConfiguration_MC50.c: 462:             }
  6457  004B02  2A23               	incf	load_New_Menu@i^0,f,c
  6458  004B04  0E09               	movlw	9
  6459  004B06  6423               	cpfsgt	load_New_Menu@i^0,c
  6460  004B08  D7E8               	goto	l21160
  6461  004B0A  D107               	goto	l21206
  6462  004B0C                     l21166:
  6463                           
  6464                           ; BSR set to: 1
  6465                           ;sm_MenuConfiguration_MC50.c: 466:         {;sm_MenuConfiguration_MC50.c: 468:          
      +                             menu_st.actualMenu=E_Menu;
  6466  004B0C  0E01               	movlw	1
  6467  004B0E  6F66               	movwf	(_menu_st+21)& (0+255),b
  6468                           
  6469                           ;sm_MenuConfiguration_MC50.c: 469:             menu_st.menuSize=10;
  6470  004B10  0E0A               	movlw	10
  6471  004B12  6F67               	movwf	(_menu_st+22)& (0+255),b
  6472                           
  6473                           ;sm_MenuConfiguration_MC50.c: 470:             menu_st.lastMainParameterSelected=0;
  6474  004B14  0E00               	movlw	0
  6475  004B16  6F69               	movwf	(_menu_st+24)& (0+255),b
  6476                           
  6477                           ;sm_MenuConfiguration_MC50.c: 471:             for (i=0;i<(10);i++)
  6478  004B18  0E00               	movlw	0
  6479  004B1A  6E23               	movwf	load_New_Menu@i^0,c
  6480  004B1C                     l21172:
  6481                           
  6482                           ;sm_MenuConfiguration_MC50.c: 472:             {;sm_MenuConfiguration_MC50.c: 473:      
      +                                    menu_st.menuList[i].value_display1=dE;
  6483  004B1C  5023               	movf	load_New_Menu@i^0,w,c
  6484  004B1E  0D02               	mullw	2
  6485  004B20  0E51               	movlw	low _menu_st
  6486  004B22  24F3               	addwf	243,w,c
  6487  004B24  6ED9               	movwf	fsr2l,c
  6488  004B26  0E01               	movlw	high _menu_st
  6489  004B28  20F4               	addwfc	prodh,w,c
  6490  004B2A  6EDA               	movwf	fsr2h,c
  6491  004B2C  0E0E               	movlw	14
  6492  004B2E  6EDF               	movwf	indf2,c
  6493                           
  6494                           ;sm_MenuConfiguration_MC50.c: 474:                menu_st.menuList[i].value_display2=i;
  6495  004B30  5023               	movf	load_New_Menu@i^0,w,c
  6496  004B32  0D02               	mullw	2
  6497  004B34  0E52               	movlw	low (_menu_st+1)
  6498  004B36  24F3               	addwf	243,w,c
  6499  004B38  6ED9               	movwf	fsr2l,c
  6500  004B3A  0E01               	movlw	high (_menu_st+1)
  6501  004B3C  20F4               	addwfc	prodh,w,c
  6502  004B3E  6EDA               	movwf	fsr2h,c
  6503  004B40  C023  FFDF         	movff	load_New_Menu@i,indf2
  6504                           
  6505                           ;sm_MenuConfiguration_MC50.c: 475:             }
  6506  004B44  2A23               	incf	load_New_Menu@i^0,f,c
  6507  004B46  0E09               	movlw	9
  6508  004B48  6423               	cpfsgt	load_New_Menu@i^0,c
  6509  004B4A  D7E8               	goto	l21172
  6510  004B4C  D0E6               	goto	l21206
  6511  004B4E                     l21178:
  6512                           
  6513                           ; BSR set to: 1
  6514                           ;sm_MenuConfiguration_MC50.c: 479:         {;sm_MenuConfiguration_MC50.c: 480:          
      +                             menu_st.lastMenu=P_Menu;
  6515  004B4E  0E00               	movlw	0
  6516  004B50  6F65               	movwf	(_menu_st+20)& (0+255),b
  6517                           
  6518                           ;sm_MenuConfiguration_MC50.c: 481:             menu_st.actualMenu=P0_SMenu;
  6519  004B52  0E04               	movlw	4
  6520  004B54  6F66               	movwf	(_menu_st+21)& (0+255),b
  6521                           
  6522                           ;sm_MenuConfiguration_MC50.c: 482:             menu_st.menuSize=4;
  6523  004B56  0E04               	movlw	4
  6524  004B58  6F67               	movwf	(_menu_st+22)& (0+255),b
  6525                           
  6526                           ;sm_MenuConfiguration_MC50.c: 483:             menu_st.menuList[0].value_display1=dA;
  6527  004B5A  0E0A               	movlw	10
  6528  004B5C  6F51               	movwf	_menu_st& (0+255),b
  6529                           
  6530                           ;sm_MenuConfiguration_MC50.c: 484:             menu_st.menuList[0].value_display2=dU;
  6531  004B5E  0E13               	movlw	19
  6532  004B60  6F52               	movwf	(_menu_st+1)& (0+255),b
  6533                           
  6534                           ;sm_MenuConfiguration_MC50.c: 485:             menu_st.menuList[1].value_display1=dM;
  6535  004B62  0E17               	movlw	23
  6536  004B64  6F53               	movwf	(_menu_st+2)& (0+255),b
  6537                           
  6538                           ;sm_MenuConfiguration_MC50.c: 486:             menu_st.menuList[1].value_display2=dA;
  6539  004B66  0E0A               	movlw	10
  6540  004B68  6F54               	movwf	(_menu_st+3)& (0+255),b
  6541                           
  6542                           ;sm_MenuConfiguration_MC50.c: 487:             menu_st.menuList[2].value_display1=d5;
  6543  004B6A  0E05               	movlw	5
  6544  004B6C  6F55               	movwf	(_menu_st+4)& (0+255),b
  6545                           
  6546                           ;sm_MenuConfiguration_MC50.c: 488:             menu_st.menuList[2].value_display2=dy;
  6547  004B6E  0E21               	movlw	33
  6548  004B70  6F56               	movwf	(_menu_st+5)& (0+255),b
  6549                           
  6550                           ;sm_MenuConfiguration_MC50.c: 489:             menu_st.menuList[3].value_display1=dd;
  6551  004B72  0E0D               	movlw	13
  6552  004B74  6F57               	movwf	(_menu_st+6)& (0+255),b
  6553                           
  6554                           ;sm_MenuConfiguration_MC50.c: 490:             menu_st.menuList[3].value_display2=d1;
  6555  004B76  0E01               	movlw	1
  6556  004B78  D051               	goto	L31
  6557  004B7A                     l21180:
  6558                           
  6559                           ; BSR set to: 1
  6560                           ;sm_MenuConfiguration_MC50.c: 494:         {;sm_MenuConfiguration_MC50.c: 495:          
      +                             menu_st.lastMenu=P_Menu;
  6561  004B7A  0E00               	movlw	0
  6562  004B7C  6F65               	movwf	(_menu_st+20)& (0+255),b
  6563                           
  6564                           ;sm_MenuConfiguration_MC50.c: 496:             menu_st.actualMenu=P1_SMenu;
  6565  004B7E  0E05               	movlw	5
  6566  004B80  6F66               	movwf	(_menu_st+21)& (0+255),b
  6567                           
  6568                           ;sm_MenuConfiguration_MC50.c: 497:             menu_st.menuSize=2;
  6569  004B82  0E02               	movlw	2
  6570  004B84  6F67               	movwf	(_menu_st+22)& (0+255),b
  6571                           
  6572                           ;sm_MenuConfiguration_MC50.c: 498:             menu_st.menuList[0].value_display1=dd;
  6573  004B86  0E0D               	movlw	13
  6574  004B88  6F51               	movwf	_menu_st& (0+255),b
  6575                           
  6576                           ;sm_MenuConfiguration_MC50.c: 499:             menu_st.menuList[0].value_display2=dA;
  6577  004B8A  0E0A               	movlw	10
  6578  004B8C  6F52               	movwf	(_menu_st+1)& (0+255),b
  6579                           
  6580                           ;sm_MenuConfiguration_MC50.c: 500:             menu_st.menuList[1].value_display1=dd;
  6581  004B8E  0E0D               	movlw	13
  6582  004B90  6F53               	movwf	(_menu_st+2)& (0+255),b
  6583                           
  6584                           ;sm_MenuConfiguration_MC50.c: 501:             menu_st.menuList[1].value_display2=dF;
  6585  004B92  0E0F               	movlw	15
  6586  004B94  D08E               	goto	L38
  6587  004B96                     l21182:
  6588                           
  6589                           ; BSR set to: 1
  6590                           ;sm_MenuConfiguration_MC50.c: 508:         {;sm_MenuConfiguration_MC50.c: 509:          
      +                             menu_st.lastMenu=P_Menu;
  6591  004B96  0E00               	movlw	0
  6592  004B98  6F65               	movwf	(_menu_st+20)& (0+255),b
  6593                           
  6594                           ;sm_MenuConfiguration_MC50.c: 510:             menu_st.actualMenu=P2_SMenu;
  6595  004B9A  0E06               	movlw	6
  6596  004B9C  6F66               	movwf	(_menu_st+21)& (0+255),b
  6597                           
  6598                           ;sm_MenuConfiguration_MC50.c: 511:             menu_st.menuSize=3;
  6599  004B9E  0E03               	movlw	3
  6600  004BA0  6F67               	movwf	(_menu_st+22)& (0+255),b
  6601                           
  6602                           ;sm_MenuConfiguration_MC50.c: 512:             menu_st.menuList[0].value_display1=dF;
  6603  004BA2  0E0F               	movlw	15
  6604  004BA4  6F51               	movwf	_menu_st& (0+255),b
  6605                           
  6606                           ;sm_MenuConfiguration_MC50.c: 513:             menu_st.menuList[0].value_display2=d0;
  6607  004BA6  0E00               	movlw	0
  6608  004BA8  6F52               	movwf	(_menu_st+1)& (0+255),b
  6609                           
  6610                           ;sm_MenuConfiguration_MC50.c: 514:             menu_st.menuList[1].value_display1=dF;
  6611  004BAA  0E0F               	movlw	15
  6612  004BAC  6F53               	movwf	(_menu_st+2)& (0+255),b
  6613                           
  6614                           ;sm_MenuConfiguration_MC50.c: 515:             menu_st.menuList[1].value_display2=d5;
  6615  004BAE  0E05               	movlw	5
  6616  004BB0  6F54               	movwf	(_menu_st+3)& (0+255),b
  6617                           
  6618                           ;sm_MenuConfiguration_MC50.c: 516:             menu_st.menuList[2].value_display1=dF;
  6619  004BB2  0E0F               	movlw	15
  6620  004BB4  6F55               	movwf	(_menu_st+4)& (0+255),b
  6621                           
  6622                           ;sm_MenuConfiguration_MC50.c: 517:             menu_st.menuList[2].value_display2=dd;
  6623  004BB6  0E0D               	movlw	13
  6624  004BB8  D073               	goto	L33
  6625  004BBA                     l21184:
  6626                           
  6627                           ; BSR set to: 1
  6628                           ;sm_MenuConfiguration_MC50.c: 521:         {;sm_MenuConfiguration_MC50.c: 522:          
      +                             menu_st.lastMenu=P_Menu;
  6629  004BBA  0E00               	movlw	0
  6630  004BBC  6F65               	movwf	(_menu_st+20)& (0+255),b
  6631                           
  6632                           ;sm_MenuConfiguration_MC50.c: 523:             menu_st.actualMenu=P4_SMenu;
  6633  004BBE  0E07               	movlw	7
  6634  004BC0  6F66               	movwf	(_menu_st+21)& (0+255),b
  6635                           
  6636                           ;sm_MenuConfiguration_MC50.c: 524:             menu_st.menuSize=2;
  6637  004BC2  0E02               	movlw	2
  6638  004BC4  6F67               	movwf	(_menu_st+22)& (0+255),b
  6639                           
  6640                           ;sm_MenuConfiguration_MC50.c: 525:             menu_st.menuList[0].value_display1=dA;
  6641  004BC6  0E0A               	movlw	10
  6642  004BC8  6F51               	movwf	_menu_st& (0+255),b
  6643                           
  6644                           ;sm_MenuConfiguration_MC50.c: 526:             menu_st.menuList[0].value_display2=dF;
  6645  004BCA  0E0F               	movlw	15
  6646  004BCC  6F52               	movwf	(_menu_st+1)& (0+255),b
  6647                           
  6648                           ;sm_MenuConfiguration_MC50.c: 527:             menu_st.menuList[1].value_display1=dA;
  6649  004BCE  0E0A               	movlw	10
  6650  004BD0  6F53               	movwf	(_menu_st+2)& (0+255),b
  6651                           
  6652                           ;sm_MenuConfiguration_MC50.c: 528:             menu_st.menuList[1].value_display2=dP;
  6653  004BD2  0E10               	movlw	16
  6654  004BD4  D06E               	goto	L38
  6655  004BD6                     l21186:
  6656                           
  6657                           ; BSR set to: 1
  6658                           ;sm_MenuConfiguration_MC50.c: 532:         {;sm_MenuConfiguration_MC50.c: 533:          
      +                             menu_st.lastMenu=P_Menu;
  6659  004BD6  0E00               	movlw	0
  6660  004BD8  6F65               	movwf	(_menu_st+20)& (0+255),b
  6661                           
  6662                           ;sm_MenuConfiguration_MC50.c: 534:             menu_st.actualMenu=P5_SMenu;
  6663  004BDA  0E08               	movlw	8
  6664  004BDC  6F66               	movwf	(_menu_st+21)& (0+255),b
  6665                           
  6666                           ;sm_MenuConfiguration_MC50.c: 535:             menu_st.menuSize=2;
  6667  004BDE  0E02               	movlw	2
  6668  004BE0  6F67               	movwf	(_menu_st+22)& (0+255),b
  6669                           
  6670                           ;sm_MenuConfiguration_MC50.c: 536:             menu_st.menuList[0].value_display1=dL;
  6671  004BE2  0E12               	movlw	18
  6672  004BE4  6F51               	movwf	_menu_st& (0+255),b
  6673                           
  6674                           ;sm_MenuConfiguration_MC50.c: 537:             menu_st.menuList[0].value_display2=dE;
  6675  004BE6  0E0E               	movlw	14
  6676  004BE8  6F52               	movwf	(_menu_st+1)& (0+255),b
  6677                           
  6678                           ;sm_MenuConfiguration_MC50.c: 538:             menu_st.menuList[1].value_display1=dH;
  6679  004BEA  0E11               	movlw	17
  6680  004BEC  6F53               	movwf	(_menu_st+2)& (0+255),b
  6681                           
  6682                           ;sm_MenuConfiguration_MC50.c: 539:             menu_st.menuList[1].value_display2=dC;
  6683  004BEE  0E0C               	movlw	12
  6684  004BF0  D060               	goto	L38
  6685  004BF2                     l21188:
  6686                           
  6687                           ; BSR set to: 1
  6688                           ;sm_MenuConfiguration_MC50.c: 543:         {;sm_MenuConfiguration_MC50.c: 544:          
      +                             menu_st.lastMenu=P_Menu;
  6689  004BF2  0E00               	movlw	0
  6690  004BF4  6F65               	movwf	(_menu_st+20)& (0+255),b
  6691                           
  6692                           ;sm_MenuConfiguration_MC50.c: 545:             menu_st.actualMenu=P6_SMenu;
  6693  004BF6  0E09               	movlw	9
  6694  004BF8  6F66               	movwf	(_menu_st+21)& (0+255),b
  6695                           
  6696                           ;sm_MenuConfiguration_MC50.c: 546:             menu_st.menuSize=4;
  6697  004BFA  0E04               	movlw	4
  6698  004BFC  6F67               	movwf	(_menu_st+22)& (0+255),b
  6699                           
  6700                           ;sm_MenuConfiguration_MC50.c: 547:             menu_st.menuList[0].value_display1=dL;
  6701  004BFE  0E12               	movlw	18
  6702  004C00  6F51               	movwf	_menu_st& (0+255),b
  6703                           
  6704                           ;sm_MenuConfiguration_MC50.c: 548:             menu_st.menuList[0].value_display2=dA;
  6705  004C02  0E0A               	movlw	10
  6706  004C04  6F52               	movwf	(_menu_st+1)& (0+255),b
  6707                           
  6708                           ;sm_MenuConfiguration_MC50.c: 549:             menu_st.menuList[1].value_display1=dH;
  6709  004C06  0E11               	movlw	17
  6710  004C08  6F53               	movwf	(_menu_st+2)& (0+255),b
  6711                           
  6712                           ;sm_MenuConfiguration_MC50.c: 550:             menu_st.menuList[1].value_display2=dA;
  6713  004C0A  0E0A               	movlw	10
  6714  004C0C  6F54               	movwf	(_menu_st+3)& (0+255),b
  6715                           
  6716                           ;sm_MenuConfiguration_MC50.c: 551:             menu_st.menuList[2].value_display1=dH;
  6717  004C0E  0E11               	movlw	17
  6718  004C10  6F55               	movwf	(_menu_st+4)& (0+255),b
  6719                           
  6720                           ;sm_MenuConfiguration_MC50.c: 552:             menu_st.menuList[2].value_display2=dL;
  6721  004C12  0E12               	movlw	18
  6722  004C14  6F56               	movwf	(_menu_st+5)& (0+255),b
  6723                           
  6724                           ;sm_MenuConfiguration_MC50.c: 553:             menu_st.menuList[3].value_display1=d5;
  6725  004C16  0E05               	movlw	5
  6726  004C18  6F57               	movwf	(_menu_st+6)& (0+255),b
  6727                           
  6728                           ;sm_MenuConfiguration_MC50.c: 554:             menu_st.menuList[3].value_display2=dt;
  6729  004C1A  0E15               	movlw	21
  6730  004C1C                     L31:
  6731  004C1C  6F58               	movwf	(_menu_st+7)& (0+255),b
  6732                           
  6733                           ;sm_MenuConfiguration_MC50.c: 556:         };sm_MenuConfiguration_MC50.c: 557:         b
      +                          reak;
  6734  004C1E  D07D               	goto	l21206
  6735  004C20                     l21190:
  6736                           
  6737                           ; BSR set to: 1
  6738                           ;sm_MenuConfiguration_MC50.c: 559:         {;sm_MenuConfiguration_MC50.c: 560:          
      +                             menu_st.lastMenu=E_Menu;
  6739  004C20  0E01               	movlw	1
  6740  004C22  6F65               	movwf	(_menu_st+20)& (0+255),b
  6741                           
  6742                           ;sm_MenuConfiguration_MC50.c: 561:             menu_st.actualMenu=E0_SMenu;
  6743  004C24  0E0A               	movlw	10
  6744  004C26  6F66               	movwf	(_menu_st+21)& (0+255),b
  6745                           
  6746                           ;sm_MenuConfiguration_MC50.c: 562:             menu_st.menuSize=2;
  6747  004C28  0E02               	movlw	2
  6748  004C2A  6F67               	movwf	(_menu_st+22)& (0+255),b
  6749                           
  6750                           ;sm_MenuConfiguration_MC50.c: 563:             menu_st.menuList[0].value_display1=dH;
  6751  004C2C  0E11               	movlw	17
  6752  004C2E  6F51               	movwf	_menu_st& (0+255),b
  6753                           
  6754                           ;sm_MenuConfiguration_MC50.c: 564:             menu_st.menuList[0].value_display2=dP;
  6755  004C30  0E10               	movlw	16
  6756  004C32  6F52               	movwf	(_menu_st+1)& (0+255),b
  6757                           
  6758                           ;sm_MenuConfiguration_MC50.c: 565:             menu_st.menuList[1].value_display1=dP;
  6759  004C34  0E10               	movlw	16
  6760  004C36  6F53               	movwf	(_menu_st+2)& (0+255),b
  6761                           
  6762                           ;sm_MenuConfiguration_MC50.c: 566:             menu_st.menuList[1].value_display2=dL;
  6763  004C38  0E12               	movlw	18
  6764  004C3A  D03B               	goto	L38
  6765  004C3C                     l21192:
  6766                           
  6767                           ; BSR set to: 1
  6768                           ;sm_MenuConfiguration_MC50.c: 570:         {;sm_MenuConfiguration_MC50.c: 571:          
      +                             menu_st.lastMenu=E_Menu;
  6769  004C3C  0E01               	movlw	1
  6770  004C3E  6F65               	movwf	(_menu_st+20)& (0+255),b
  6771                           
  6772                           ;sm_MenuConfiguration_MC50.c: 572:             menu_st.actualMenu=E1_SMenu;
  6773  004C40  0E0B               	movlw	11
  6774  004C42  6F66               	movwf	(_menu_st+21)& (0+255),b
  6775                           
  6776                           ;sm_MenuConfiguration_MC50.c: 573:             menu_st.menuSize=2;
  6777  004C44  0E02               	movlw	2
  6778  004C46  6F67               	movwf	(_menu_st+22)& (0+255),b
  6779                           
  6780                           ;sm_MenuConfiguration_MC50.c: 574:             menu_st.menuList[0].value_display1=dr;
  6781  004C48  0E14               	movlw	20
  6782  004C4A  6F51               	movwf	_menu_st& (0+255),b
  6783                           
  6784                           ;sm_MenuConfiguration_MC50.c: 575:             menu_st.menuList[0].value_display2=dq;
  6785  004C4C  0E24               	movlw	36
  6786  004C4E  6F52               	movwf	(_menu_st+1)& (0+255),b
  6787                           
  6788                           ;sm_MenuConfiguration_MC50.c: 576:             menu_st.menuList[1].value_display1=dr;
  6789  004C50  0E14               	movlw	20
  6790  004C52  6F53               	movwf	(_menu_st+2)& (0+255),b
  6791                           
  6792                           ;sm_MenuConfiguration_MC50.c: 577:             menu_st.menuList[1].value_display2=dc;
  6793  004C54  0E23               	movlw	35
  6794  004C56  D02D               	goto	L38
  6795  004C58                     l21194:
  6796                           
  6797                           ; BSR set to: 1
  6798                           ;sm_MenuConfiguration_MC50.c: 581:         {;sm_MenuConfiguration_MC50.c: 583:          
      +                             menu_st.actualMenu=S_Menu;
  6799  004C58  0E0C               	movlw	12
  6800  004C5A  6F66               	movwf	(_menu_st+21)& (0+255),b
  6801                           
  6802                           ;sm_MenuConfiguration_MC50.c: 584:             menu_st.parameterSelected=0;
  6803  004C5C  0E00               	movlw	0
  6804  004C5E  6F68               	movwf	(_menu_st+23)& (0+255),b
  6805                           
  6806                           ;sm_MenuConfiguration_MC50.c: 585:             menu_st.menuSize=2;
  6807  004C60  0E02               	movlw	2
  6808  004C62  6F67               	movwf	(_menu_st+22)& (0+255),b
  6809                           
  6810                           ;sm_MenuConfiguration_MC50.c: 586:             menu_st.menuList[0].value_display1=d5;
  6811  004C64  0E05               	movlw	5
  6812  004C66  6F51               	movwf	_menu_st& (0+255),b
  6813                           
  6814                           ;sm_MenuConfiguration_MC50.c: 587:             menu_st.menuList[0].value_display2=dU;
  6815  004C68  0E13               	movlw	19
  6816  004C6A  6F52               	movwf	(_menu_st+1)& (0+255),b
  6817                           
  6818                           ;sm_MenuConfiguration_MC50.c: 588:             menu_st.menuList[1].value_display1=d5;
  6819  004C6C  0E05               	movlw	5
  6820  004C6E  D7B0               	goto	L39
  6821  004C70                     l21196:
  6822                           
  6823                           ; BSR set to: 1
  6824                           ;sm_MenuConfiguration_MC50.c: 593:         {;sm_MenuConfiguration_MC50.c: 595:          
      +                             menu_st.actualMenu=Del_Menu;
  6825  004C70  0E0D               	movlw	13
  6826  004C72  6F66               	movwf	(_menu_st+21)& (0+255),b
  6827                           
  6828                           ;sm_MenuConfiguration_MC50.c: 596:             menu_st.menuSize=1;
  6829  004C74  0E01               	movlw	1
  6830  004C76  6F67               	movwf	(_menu_st+22)& (0+255),b
  6831                           
  6832                           ;sm_MenuConfiguration_MC50.c: 597:             menu_st.menuList[0].value_display1=dd;
  6833  004C78  0E0D               	movlw	13
  6834  004C7A  6F51               	movwf	_menu_st& (0+255),b
  6835                           
  6836                           ;sm_MenuConfiguration_MC50.c: 598:             menu_st.menuList[0].value_display2=dL;
  6837  004C7C  0E12               	movlw	18
  6838  004C7E  6F52               	movwf	(_menu_st+1)& (0+255),b
  6839                           
  6840                           ;sm_MenuConfiguration_MC50.c: 599:             ts_system.timeSinalizationDigit=(1000/50)
      +                          *3;
  6841  004C80  0E00               	movlw	0
  6842  004C82  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
  6843  004C84  0E3C               	movlw	60
  6844  004C86  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
  6845                           
  6846                           ;sm_MenuConfiguration_MC50.c: 600:         };sm_MenuConfiguration_MC50.c: 601:         b
      +                          reak;
  6847  004C88  D048               	goto	l21206
  6848  004C8A                     l21198:
  6849                           
  6850                           ; BSR set to: 1
  6851                           ;sm_MenuConfiguration_MC50.c: 604:         {;sm_MenuConfiguration_MC50.c: 608:          
      +                             menu_st.menuList[0].value_display1=d5;
  6852  004C8A  0E05               	movlw	5
  6853  004C8C  6F51               	movwf	_menu_st& (0+255),b
  6854                           
  6855                           ;sm_MenuConfiguration_MC50.c: 609:             menu_st.menuList[0].value_display2=dC;
  6856  004C8E  0E0C               	movlw	12
  6857  004C90  6F52               	movwf	(_menu_st+1)& (0+255),b
  6858                           
  6859                           ;sm_MenuConfiguration_MC50.c: 610:             menu_st.menuList[1].value_display1=d5;
  6860  004C92  0E05               	movlw	5
  6861  004C94  6F53               	movwf	(_menu_st+2)& (0+255),b
  6862                           
  6863                           ;sm_MenuConfiguration_MC50.c: 611:             menu_st.menuList[1].value_display2=dE;
  6864  004C96  0E0E               	movlw	14
  6865  004C98  6F54               	movwf	(_menu_st+3)& (0+255),b
  6866                           
  6867                           ;sm_MenuConfiguration_MC50.c: 612:             menu_st.menuList[2].value_display1=db;
  6868  004C9A  0E22               	movlw	34
  6869  004C9C  6F55               	movwf	(_menu_st+4)& (0+255),b
  6870                           
  6871                           ;sm_MenuConfiguration_MC50.c: 613:             menu_st.menuList[2].value_display2=dr;
  6872  004C9E  0E14               	movlw	20
  6873  004CA0                     L33:
  6874  004CA0  6F56               	movwf	(_menu_st+5)& (0+255),b
  6875                           
  6876                           ;sm_MenuConfiguration_MC50.c: 614:         };sm_MenuConfiguration_MC50.c: 615:         b
      +                          reak;
  6877  004CA2  D03B               	goto	l21206
  6878  004CA4                     l21200:
  6879                           
  6880                           ; BSR set to: 1
  6881                           ;sm_MenuConfiguration_MC50.c: 617:         {;sm_MenuConfiguration_MC50.c: 621:          
      +                             menu_st.menuList[0].value_display1=dL;
  6882  004CA4  0E12               	movlw	18
  6883  004CA6  6F51               	movwf	_menu_st& (0+255),b
  6884                           
  6885                           ;sm_MenuConfiguration_MC50.c: 622:             menu_st.menuList[0].value_display2=dE;
  6886  004CA8  0E0E               	movlw	14
  6887  004CAA  6F52               	movwf	(_menu_st+1)& (0+255),b
  6888                           
  6889                           ;sm_MenuConfiguration_MC50.c: 623:             menu_st.menuList[1].value_display1=dr;
  6890  004CAC  0E14               	movlw	20
  6891  004CAE  6F53               	movwf	(_menu_st+2)& (0+255),b
  6892                           
  6893                           ;sm_MenuConfiguration_MC50.c: 624:             menu_st.menuList[1].value_display2=dt;
  6894  004CB0  0E15               	movlw	21
  6895  004CB2                     L38:
  6896  004CB2  6F54               	movwf	(_menu_st+3)& (0+255),b
  6897                           
  6898                           ;sm_MenuConfiguration_MC50.c: 626:         };sm_MenuConfiguration_MC50.c: 627:         b
      +                          reak;
  6899  004CB4  D032               	goto	l21206
  6900  004CB6                     l21204:
  6901                           
  6902                           ; BSR set to: 1
  6903  004CB6  5022               	movf	load_New_Menu@Menu^0,w,c
  6904  004CB8  6E20               	movwf	??_load_New_Menu^0,c
  6905  004CBA  6A21               	clrf	(??_load_New_Menu+1)^0,c
  6906                           
  6907                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6908                           ; Switch size 1, requested type "simple"
  6909                           ; Number of cases is 1, Range of values is 0 to 0
  6910                           ; switch strategies available:
  6911                           ; Name         Instructions Cycles
  6912                           ; simple_byte            4     3 (average)
  6913                           ;	Chosen strategy is simple_byte
  6914  004CBC  5021               	movf	(??_load_New_Menu+1)^0,w,c
  6915  004CBE  0A00               	xorlw	0	; case 0
  6916  004CC0  A4D8               	btfss	status,2,c
  6917  004CC2  D02B               	goto	l21206
  6918                           
  6919                           ; BSR set to: 1
  6920                           ; Switch size 1, requested type "simple"
  6921                           ; Number of cases is 14, Range of values is 0 to 13
  6922                           ; switch strategies available:
  6923                           ; Name         Instructions Cycles
  6924                           ; simple_byte           43    22 (average)
  6925                           ;	Chosen strategy is simple_byte
  6926  004CC4  5020               	movf	??_load_New_Menu^0,w,c
  6927  004CC6  0A00               	xorlw	0	; case 0
  6928  004CC8  B4D8               	btfsc	status,2,c
  6929  004CCA  D6FF               	goto	l21154
  6930  004CCC  0A01               	xorlw	1	; case 1
  6931  004CCE  B4D8               	btfsc	status,2,c
  6932  004CD0  D71D               	goto	l21166
  6933  004CD2  0A03               	xorlw	3	; case 2
  6934  004CD4  B4D8               	btfsc	status,2,c
  6935  004CD6  D7E6               	goto	l21200
  6936  004CD8  0A01               	xorlw	1	; case 3
  6937  004CDA  B4D8               	btfsc	status,2,c
  6938  004CDC  D7D6               	goto	l21198
  6939  004CDE  0A07               	xorlw	7	; case 4
  6940  004CE0  B4D8               	btfsc	status,2,c
  6941  004CE2  D735               	goto	l21178
  6942  004CE4  0A01               	xorlw	1	; case 5
  6943  004CE6  B4D8               	btfsc	status,2,c
  6944  004CE8  D748               	goto	l21180
  6945  004CEA  0A03               	xorlw	3	; case 6
  6946  004CEC  B4D8               	btfsc	status,2,c
  6947  004CEE  D753               	goto	l21182
  6948  004CF0  0A01               	xorlw	1	; case 7
  6949  004CF2  B4D8               	btfsc	status,2,c
  6950  004CF4  D762               	goto	l21184
  6951  004CF6  0A0F               	xorlw	15	; case 8
  6952  004CF8  B4D8               	btfsc	status,2,c
  6953  004CFA  D76D               	goto	l21186
  6954  004CFC  0A01               	xorlw	1	; case 9
  6955  004CFE  B4D8               	btfsc	status,2,c
  6956  004D00  D778               	goto	l21188
  6957  004D02  0A03               	xorlw	3	; case 10
  6958  004D04  B4D8               	btfsc	status,2,c
  6959  004D06  D78C               	goto	l21190
  6960  004D08  0A01               	xorlw	1	; case 11
  6961  004D0A  B4D8               	btfsc	status,2,c
  6962  004D0C  D797               	goto	l21192
  6963  004D0E  0A07               	xorlw	7	; case 12
  6964  004D10  B4D8               	btfsc	status,2,c
  6965  004D12  D7A2               	goto	l21194
  6966  004D14  0A01               	xorlw	1	; case 13
  6967  004D16  B4D8               	btfsc	status,2,c
  6968  004D18  D7AB               	goto	l21196
  6969  004D1A                     l21206:
  6970                           
  6971                           ;sm_MenuConfiguration_MC50.c: 632:     if(menu_st.parameterSelected>=menu_st.menuSize)
  6972  004D1A  0101               	movlb	1	; () banked
  6973  004D1C  5167               	movf	(_menu_st+22)& (0+255),w,b
  6974  004D1E  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  6975  004D20  A0D8               	btfss	status,0,c
  6976  004D22  D002               	goto	l21210
  6977                           
  6978                           ; BSR set to: 1
  6979                           ;sm_MenuConfiguration_MC50.c: 633:     {;sm_MenuConfiguration_MC50.c: 634:         menu_
      +                          st.parameterSelected=0;
  6980  004D24  0E00               	movlw	0
  6981  004D26  6F68               	movwf	(_menu_st+23)& (0+255),b
  6982  004D28                     l21210:
  6983                           
  6984                           ; BSR set to: 1
  6985                           ;sm_MenuConfiguration_MC50.c: 637:     if(Menu==Del_Menu)
  6986  004D28  0E0D               	movlw	13
  6987  004D2A  1822               	xorwf	load_New_Menu@Menu^0,w,c
  6988  004D2C  A4D8               	btfss	status,2,c
  6989  004D2E  D01A               	goto	l21214
  6990                           
  6991                           ; BSR set to: 1
  6992                           ;sm_MenuConfiguration_MC50.c: 638:     {;sm_MenuConfiguration_MC50.c: 639:         SetSe
      +                          gmentValueIntermitentMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, m
      +                          enu_st.menuList[ menu_st.parameterSelected].value_display2,( 500/50));
  6993  004D30  5168               	movf	(_menu_st+23)& (0+255),w,b
  6994  004D32  0D02               	mullw	2
  6995  004D34  0E52               	movlw	low (_menu_st+1)
  6996  004D36  24F3               	addwf	243,w,c
  6997  004D38  6ED9               	movwf	fsr2l,c
  6998  004D3A  0E01               	movlw	high (_menu_st+1)
  6999  004D3C  20F4               	addwfc	prodh,w,c
  7000  004D3E  6EDA               	movwf	fsr2h,c
  7001  004D40  50DF               	movf	indf2,w,c
  7002  004D42  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7003  004D44  0E00               	movlw	0
  7004  004D46  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7005  004D48  0E0A               	movlw	10
  7006  004D4A  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7007  004D4C  5168               	movf	(_menu_st+23)& (0+255),w,b
  7008  004D4E  0D02               	mullw	2
  7009  004D50  0E51               	movlw	low _menu_st
  7010  004D52  24F3               	addwf	243,w,c
  7011  004D54  6ED9               	movwf	fsr2l,c
  7012  004D56  0E01               	movlw	high _menu_st
  7013  004D58  20F4               	addwfc	prodh,w,c
  7014  004D5A  6EDA               	movwf	fsr2h,c
  7015  004D5C  50DF               	movf	indf2,w,c
  7016  004D5E  EC91  F04F         	call	_SetSegmentValueIntermitentMain
  7017                           
  7018                           ;sm_MenuConfiguration_MC50.c: 640:     }
  7019  004D62  0012               	return	
  7020  004D64                     l21214:
  7021                           
  7022                           ; BSR set to: 1
  7023                           ;sm_MenuConfiguration_MC50.c: 642:     {;sm_MenuConfiguration_MC50.c: 643:         SetSe
      +                          gmentValueMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, menu_st.menu
      +                          List[ menu_st.parameterSelected].value_display2);
  7024  004D64  5168               	movf	(_menu_st+23)& (0+255),w,b
  7025  004D66  0D02               	mullw	2
  7026  004D68  0E52               	movlw	low (_menu_st+1)
  7027  004D6A  24F3               	addwf	243,w,c
  7028  004D6C  6ED9               	movwf	fsr2l,c
  7029  004D6E  0E01               	movlw	high (_menu_st+1)
  7030  004D70  20F4               	addwfc	prodh,w,c
  7031  004D72  6EDA               	movwf	fsr2h,c
  7032  004D74  50DF               	movf	indf2,w,c
  7033  004D76  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7034  004D78  5168               	movf	(_menu_st+23)& (0+255),w,b
  7035  004D7A  0D02               	mullw	2
  7036  004D7C  0E51               	movlw	low _menu_st
  7037  004D7E  24F3               	addwf	243,w,c
  7038  004D80  6ED9               	movwf	fsr2l,c
  7039  004D82  0E01               	movlw	high _menu_st
  7040  004D84  20F4               	addwfc	prodh,w,c
  7041  004D86  6EDA               	movwf	fsr2h,c
  7042  004D88  50DF               	movf	indf2,w,c
  7043  004D8A  ECF5  F04E         	call	_SetSegmentValueMain
  7044  004D8E  0012               	return		;funcret
  7045  004D90                     __end_of_load_New_Menu:
  7046                           	callstack 0
  7047                           
  7048 ;; *************** function _InitReceiver *****************
  7049 ;; Defined at:
  7050 ;;		line 207 in file "inputs_MC50.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;		None
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;		None
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  1    wreg      void 
  7057 ;; Registers used:
  7058 ;;		wreg, status,2
  7059 ;; Tracked objects:
  7060 ;;		On entry : 30/F
  7061 ;;		On exit  : 3F/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7068 ;;Total ram usage:        0 bytes
  7069 ;; Hardware stack levels used: 1
  7070 ;; Hardware stack levels required when called: 4
  7071 ;; This function calls:
  7072 ;;		Nothing
  7073 ;; This function is called by:
  7074 ;;		_main
  7075 ;;		_setValueToEdit
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           	psect	text5
  7080  009DD0                     __ptext5:
  7081                           	callstack 0
  7082  009DD0                     _InitReceiver:
  7083                           	callstack 23
  7084                           
  7085                           ;inputs_MC50.c: 208:     TMR0IF = 0;
  7086                           
  7087                           ;incstack = 0
  7088  009DD0  010E               	movlb	14	; () banked
  7089  009DD2  9BCA               	bcf	202,5,b	;volatile
  7090                           
  7091                           ;inputs_MC50.c: 209:     TMR0IE = 1;
  7092  009DD4  8BC2               	bsf	194,5,b	;volatile
  7093                           
  7094                           ;inputs_MC50.c: 210:     GIE = 1;
  7095  009DD6  8EF2               	bsf	4082,7,c	;volatile
  7096                           
  7097                           ; BSR set to: 14
  7098                           ;inputs_MC50.c: 211:     RFstate = 0;
  7099  009DD8  0E00               	movlw	0
  7100  009DDA  0101               	movlb	1	; () banked
  7101  009DDC  6F9C               	movwf	_RFstate& (0+255),b
  7102                           
  7103                           ;inputs_MC50.c: 212:     RFFull_12BIT=0;
  7104  009DDE  0E00               	movlw	0
  7105  009DE0  0100               	movlb	0	; () banked
  7106  009DE2  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
  7107                           
  7108                           ;inputs_MC50.c: 213:     RFFull = 0;
  7109  009DE4  0E00               	movlw	0
  7110  009DE6  6F8B               	movwf	_RFFull& (0+255),b	;volatile
  7111                           
  7112                           ; BSR set to: 0
  7113  009DE8  0012               	return		;funcret
  7114  009DEA                     __end_of_InitReceiver:
  7115                           	callstack 0
  7116                           
  7117 ;; *************** function _controlSelectRemote *****************
  7118 ;; Defined at:
  7119 ;;		line 1103 in file "sm_MenuConfiguration_MC50.c"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;		None
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;  typeRemote      1   11[BANK0 ] enum E10392
  7124 ;;  pos             1   10[BANK0 ] unsigned char 
  7125 ;;  tempSerial      4   12[BANK0 ] unsigned long 
  7126 ;;  temp            1   16[BANK0 ] unsigned char 
  7127 ;;  validSerial     1    9[BANK0 ] unsigned char 
  7128 ;; Return value:  Size  Location     Type
  7129 ;;                  1    wreg      void 
  7130 ;; Registers used:
  7131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7132 ;; Tracked objects:
  7133 ;;		On entry : 3F/1
  7134 ;;		On exit  : 0/0
  7135 ;;		Unchanged: 0/0
  7136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7138 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7139 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7140 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7141 ;;Total ram usage:        9 bytes
  7142 ;; Hardware stack levels used: 1
  7143 ;; Hardware stack levels required when called: 14
  7144 ;; This function calls:
  7145 ;;		_ClearFlag_rfCMD
  7146 ;;		_RemoveSerial
  7147 ;;		_SaveNVM_VarSystem
  7148 ;;		_SetSegmentValue
  7149 ;;		_SetSegmentValueIntermitentMain
  7150 ;;		_SetSegmentValueMain
  7151 ;;		___awdiv
  7152 ;;		___lbmod
  7153 ;;		_cmdMemoryIsEmpty
  7154 ;;		_getSerialCmd
  7155 ;;		_getTypeRemote
  7156 ;;		_saveNewSerial
  7157 ;;		_sm_send_event
  7158 ;;		_validateRemoteSerialNumber
  7159 ;; This function is called by:
  7160 ;;		_sm_execute_menuConfiguration
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           	psect	text6
  7165  004048                     __ptext6:
  7166                           	callstack 0
  7167  004048                     _controlSelectRemote:
  7168                           	callstack 14
  7169                           
  7170                           ; BSR set to: 1
  7171                           ;sm_MenuConfiguration_MC50.c: 1104:     unsigned long tempSerial;;sm_MenuConfiguration_M
      +                          C50.c: 1105:     char temp=getSerialCmd(&tempSerial);
  7172                           
  7173                           ; BSR set to: 0
  7174                           ;incstack = 0
  7175  004048  0EE4               	movlw	low controlSelectRemote@tempSerial
  7176  00404A  6E1B               	movwf	getSerialCmd@serial^0,c
  7177  00404C  EC2B  F04A         	call	_getSerialCmd	;wreg free
  7178  004050  0100               	movlb	0	; () banked
  7179  004052  6FE8               	movwf	controlSelectRemote@temp& (0+255),b
  7180                           
  7181                           ; BSR set to: 0
  7182                           ;sm_MenuConfiguration_MC50.c: 1106:     char validSerial;;sm_MenuConfiguration_MC50.c: 1
      +                          107:     if(ts_system.timeoutMenu<=0 || button_struct.current==0x00)
  7183  004054  0101               	movlb	1	; () banked
  7184  004056  BFAD               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  7185  004058  D008               	goto	u25690
  7186  00405A  51AD               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  7187  00405C  E103               	bnz	u25680
  7188  00405E  05AC               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  7189  004060  A0D8               	btfss	status,0,c
  7190  004062  D003               	goto	u25690
  7191  004064                     u25680:
  7192                           
  7193                           ; BSR set to: 1
  7194  004064  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7195  004066  A4D8               	btfss	status,2,c
  7196  004068  D028               	goto	l22432
  7197  00406A                     u25690:
  7198                           
  7199                           ; BSR set to: 1
  7200                           ;sm_MenuConfiguration_MC50.c: 1108:     {;sm_MenuConfiguration_MC50.c: 1109:         sm_
      +                          send_event(&main_stateMachine, ev_goto_StandBy);
  7201  00406A  0EF1               	movlw	low _main_stateMachine
  7202  00406C  6E12               	movwf	sm_send_event@psm^0,c
  7203  00406E  0E01               	movlw	high _main_stateMachine
  7204  004070  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7205  004072  0E00               	movlw	0
  7206  004074  6E15               	movwf	(sm_send_event@event+1)^0,c
  7207  004076  0E07               	movlw	7
  7208  004078  6E14               	movwf	sm_send_event@event^0,c
  7209  00407A  ECF7  F047         	call	_sm_send_event	;wreg free
  7210                           
  7211                           ;sm_MenuConfiguration_MC50.c: 1110:         sm_send_event(&menuConfiguration_stateMachin
      +                          e, ev_CancelEdition);
  7212  00407E  0EBD               	movlw	low _menuConfiguration_stateMachine
  7213  004080  6E12               	movwf	sm_send_event@psm^0,c
  7214  004082  0E02               	movlw	high _menuConfiguration_stateMachine
  7215  004084  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7216  004086  0E00               	movlw	0
  7217  004088  6E15               	movwf	(sm_send_event@event+1)^0,c
  7218  00408A  0E03               	movlw	3
  7219  00408C  6E14               	movwf	sm_send_event@event^0,c
  7220  00408E  ECF7  F047         	call	_sm_send_event	;wreg free
  7221                           
  7222                           ;sm_MenuConfiguration_MC50.c: 1111:         var_sys.DistanceProgrammingActive=NO;
  7223  004092  0E00               	movlw	0
  7224  004094  0101               	movlb	1	; () banked
  7225  004096  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7226                           
  7227                           ; BSR set to: 1
  7228                           ;sm_MenuConfiguration_MC50.c: 1112:         var_sys.ProgrammingDistanceIs=NoCMD;
  7229  004098  0E00               	movlw	0
  7230  00409A  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7231                           
  7232                           ; BSR set to: 1
  7233                           ;sm_MenuConfiguration_MC50.c: 1113:         SetSegmentValueMain(dMinus,dMinus);
  7234  00409C  0E18               	movlw	24
  7235  00409E  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7236  0040A0  0E18               	movlw	24
  7237  0040A2  ECF5  F04E         	call	_SetSegmentValueMain
  7238                           
  7239                           ; BSR set to: 0
  7240                           ;sm_MenuConfiguration_MC50.c: 1114:         ClearFlag_rfCMD();
  7241  0040A6  EC49  F050         	call	_ClearFlag_rfCMD	;wreg free
  7242                           
  7243                           ;sm_MenuConfiguration_MC50.c: 1115:         button_struct.processed=1;
  7244  0040AA  0E01               	movlw	1
  7245  0040AC  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7246                           
  7247                           ;sm_MenuConfiguration_MC50.c: 1116:         ts_system.timeoutMenu = 0;
  7248  0040AE  0E00               	movlw	0
  7249  0040B0  0101               	movlb	1	; () banked
  7250  0040B2  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7251  0040B4  0E00               	movlw	0
  7252  0040B6  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7253                           
  7254                           ;sm_MenuConfiguration_MC50.c: 1118:     }
  7255  0040B8  0012               	return	
  7256  0040BA                     l22432:
  7257                           
  7258                           ; BSR set to: 1
  7259  0040BA  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7260  0040BC  A4D8               	btfss	status,2,c
  7261  0040BE  D05B               	goto	l22454
  7262                           
  7263                           ; BSR set to: 1
  7264  0040C0  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7265  0040C2  B4D8               	btfsc	status,2,c
  7266  0040C4  D058               	goto	l22454
  7267                           
  7268                           ; BSR set to: 1
  7269                           ;sm_MenuConfiguration_MC50.c: 1120:     {;sm_MenuConfiguration_MC50.c: 1121:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7270  0040C6  0E00               	movlw	0
  7271  0040C8  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7272  0040CA  0E64               	movlw	100
  7273  0040CC  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7274                           
  7275                           ; BSR set to: 1
  7276                           ;sm_MenuConfiguration_MC50.c: 1122:         if(edit_Param.tempValue<=edit_Param.Min)
  7277  0040CE  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7278  0040D0  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  7279  0040D2  A0D8               	btfss	status,0,c
  7280  0040D4  D003               	goto	l22442
  7281                           
  7282                           ; BSR set to: 1
  7283                           ;sm_MenuConfiguration_MC50.c: 1123:         {;sm_MenuConfiguration_MC50.c: 1124:        
      +                               edit_Param.tempValue=edit_Param.Max;
  7284  0040D6  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  7285                           
  7286                           ;sm_MenuConfiguration_MC50.c: 1125:         }
  7287  0040DA  D001               	goto	l22444
  7288  0040DC                     l22442:
  7289                           
  7290                           ; BSR set to: 1
  7291                           ;sm_MenuConfiguration_MC50.c: 1127:         {;sm_MenuConfiguration_MC50.c: 1128:        
      +                               edit_Param.tempValue--;
  7292  0040DC  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  7293  0040DE                     l22444:
  7294                           
  7295                           ; BSR set to: 1
  7296                           ;sm_MenuConfiguration_MC50.c: 1130:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1 || edit_Param.tempValue==edit_Param.Max)
  7297  0040DE  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7298  0040E2  5168               	movf	(_menu_st+23)& (0+255),w,b
  7299  0040E4  EC1E  F041         	call	_cmdMemoryIsEmpty
  7300  0040E8  06E8               	decf	wreg,f,c
  7301  0040EA  B4D8               	btfsc	status,2,c
  7302  0040EC  D004               	goto	u25740
  7303  0040EE  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7304  0040F0  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7305  0040F2  A4D8               	btfss	status,2,c
  7306  0040F4  D021               	goto	l22450
  7307  0040F6                     u25740:
  7308                           
  7309                           ;sm_MenuConfiguration_MC50.c: 1131:         {;sm_MenuConfiguration_MC50.c: 1132:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7310  0040F6  0E0A               	movlw	10
  7311  0040F8  6E10               	movwf	___lbmod@divisor^0,c
  7312  0040FA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7313  0040FC  ECBD  F04D         	call	___lbmod
  7314  004100  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7315  004102  0E00               	movlw	0
  7316  004104  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7317  004106  0E14               	movlw	20
  7318  004108  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7319  00410A  0E0A               	movlw	10
  7320  00410C  6E10               	movwf	___lbmod@divisor^0,c
  7321  00410E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7322  004110  ECBD  F04D         	call	___lbmod
  7323  004114  0100               	movlb	0	; () banked
  7324  004116  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7325  004118  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7326  00411A  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7327  00411C  6E14               	movwf	___awdiv@dividend^0,c
  7328  00411E  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7329  004120  A0D8               	btfss	status,0,c
  7330  004122  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7331  004124  0E00               	movlw	0
  7332  004126  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7333  004128  0E0A               	movlw	10
  7334  00412A  6E16               	movwf	___awdiv@divisor^0,c
  7335  00412C  EC09  F043         	call	___awdiv	;wreg free
  7336  004130  5014               	movf	?___awdiv^0,w,c
  7337  004132  EC91  F04F         	call	_SetSegmentValueIntermitentMain
  7338                           
  7339                           ;sm_MenuConfiguration_MC50.c: 1133:         }
  7340  004136  D01C               	goto	l22452
  7341  004138                     l22450:
  7342                           
  7343                           ;sm_MenuConfiguration_MC50.c: 1135:         {;sm_MenuConfiguration_MC50.c: 1136:        
      +                               SetSegmentValueMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.t
      +                          empValue%10);
  7344  004138  0E0A               	movlw	10
  7345  00413A  6E10               	movwf	___lbmod@divisor^0,c
  7346  00413C  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7347  00413E  ECBD  F04D         	call	___lbmod
  7348  004142  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7349  004144  0E0A               	movlw	10
  7350  004146  6E10               	movwf	___lbmod@divisor^0,c
  7351  004148  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7352  00414A  ECBD  F04D         	call	___lbmod
  7353  00414E  0100               	movlb	0	; () banked
  7354  004150  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7355  004152  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7356  004154  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7357  004156  6E14               	movwf	___awdiv@dividend^0,c
  7358  004158  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7359  00415A  A0D8               	btfss	status,0,c
  7360  00415C  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7361  00415E  0E00               	movlw	0
  7362  004160  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7363  004162  0E0A               	movlw	10
  7364  004164  6E16               	movwf	___awdiv@divisor^0,c
  7365  004166  EC09  F043         	call	___awdiv	;wreg free
  7366  00416A  5014               	movf	?___awdiv^0,w,c
  7367  00416C  ECF5  F04E         	call	_SetSegmentValueMain
  7368  004170                     l22452:
  7369                           
  7370                           ;sm_MenuConfiguration_MC50.c: 1138:         button_struct.processed=1;
  7371  004170  0E01               	movlw	1
  7372  004172  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7373                           
  7374                           ;sm_MenuConfiguration_MC50.c: 1139:     }
  7375  004174  0012               	return	
  7376  004176                     l22454:
  7377                           
  7378                           ; BSR set to: 1
  7379  004176  0E17               	movlw	23
  7380  004178  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7381  00417A  A4D8               	btfss	status,2,c
  7382  00417C  D057               	goto	l22476
  7383                           
  7384                           ; BSR set to: 1
  7385  00417E  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7386  004180  B4D8               	btfsc	status,2,c
  7387  004182  D054               	goto	l22476
  7388                           
  7389                           ; BSR set to: 1
  7390                           ;sm_MenuConfiguration_MC50.c: 1141:     {;sm_MenuConfiguration_MC50.c: 1142:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7391  004184  0E00               	movlw	0
  7392  004186  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7393  004188  0E64               	movlw	100
  7394  00418A  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7395                           
  7396                           ; BSR set to: 1
  7397                           ;sm_MenuConfiguration_MC50.c: 1143:         edit_Param.tempValue++;
  7398  00418C  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7399                           
  7400                           ; BSR set to: 1
  7401                           ;sm_MenuConfiguration_MC50.c: 1144:         if(edit_Param.tempValue>edit_Param.Max)
  7402  00418E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7403  004190  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  7404  004192  A0D8               	btfss	status,0,c
  7405                           
  7406                           ; BSR set to: 1
  7407                           ;sm_MenuConfiguration_MC50.c: 1145:         {;sm_MenuConfiguration_MC50.c: 1146:        
      +                                edit_Param.tempValue=edit_Param.Min;
  7408  004194  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  7409                           
  7410                           ; BSR set to: 1
  7411                           ;sm_MenuConfiguration_MC50.c: 1148:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1|| edit_Param.tempValue==edit_Param.Max)
  7412  004198  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7413  00419C  5168               	movf	(_menu_st+23)& (0+255),w,b
  7414  00419E  EC1E  F041         	call	_cmdMemoryIsEmpty
  7415  0041A2  06E8               	decf	wreg,f,c
  7416  0041A4  B4D8               	btfsc	status,2,c
  7417  0041A6  D004               	goto	u25790
  7418  0041A8  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7419  0041AA  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7420  0041AC  A4D8               	btfss	status,2,c
  7421  0041AE  D021               	goto	l22472
  7422  0041B0                     u25790:
  7423                           
  7424                           ;sm_MenuConfiguration_MC50.c: 1149:         {;sm_MenuConfiguration_MC50.c: 1150:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7425  0041B0  0E0A               	movlw	10
  7426  0041B2  6E10               	movwf	___lbmod@divisor^0,c
  7427  0041B4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7428  0041B6  ECBD  F04D         	call	___lbmod
  7429  0041BA  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7430  0041BC  0E00               	movlw	0
  7431  0041BE  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7432  0041C0  0E14               	movlw	20
  7433  0041C2  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7434  0041C4  0E0A               	movlw	10
  7435  0041C6  6E10               	movwf	___lbmod@divisor^0,c
  7436  0041C8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7437  0041CA  ECBD  F04D         	call	___lbmod
  7438  0041CE  0100               	movlb	0	; () banked
  7439  0041D0  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7440  0041D2  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7441  0041D4  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7442  0041D6  6E14               	movwf	___awdiv@dividend^0,c
  7443  0041D8  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7444  0041DA  A0D8               	btfss	status,0,c
  7445  0041DC  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7446  0041DE  0E00               	movlw	0
  7447  0041E0  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7448  0041E2  0E0A               	movlw	10
  7449  0041E4  6E16               	movwf	___awdiv@divisor^0,c
  7450  0041E6  EC09  F043         	call	___awdiv	;wreg free
  7451  0041EA  5014               	movf	?___awdiv^0,w,c
  7452  0041EC  EC91  F04F         	call	_SetSegmentValueIntermitentMain
  7453                           
  7454                           ;sm_MenuConfiguration_MC50.c: 1151:         }
  7455  0041F0  D7BF               	goto	l22452
  7456  0041F2                     l22472:
  7457                           
  7458                           ;sm_MenuConfiguration_MC50.c: 1153:         {;sm_MenuConfiguration_MC50.c: 1154:        
      +                               SetSegmentValue((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempV
      +                          alue%10);
  7459  0041F2  0E0A               	movlw	10
  7460  0041F4  6E10               	movwf	___lbmod@divisor^0,c
  7461  0041F6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7462  0041F8  ECBD  F04D         	call	___lbmod
  7463  0041FC  6E1C               	movwf	SetSegmentValue@d2^0,c
  7464  0041FE  0E0A               	movlw	10
  7465  004200  6E10               	movwf	___lbmod@divisor^0,c
  7466  004202  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7467  004204  ECBD  F04D         	call	___lbmod
  7468  004208  0100               	movlb	0	; () banked
  7469  00420A  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7470  00420C  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7471  00420E  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7472  004210  6E14               	movwf	___awdiv@dividend^0,c
  7473  004212  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7474  004214  A0D8               	btfss	status,0,c
  7475  004216  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7476  004218  0E00               	movlw	0
  7477  00421A  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7478  00421C  0E0A               	movlw	10
  7479  00421E  6E16               	movwf	___awdiv@divisor^0,c
  7480  004220  EC09  F043         	call	___awdiv	;wreg free
  7481  004224  5014               	movf	?___awdiv^0,w,c
  7482  004226  EC0F  F04F         	call	_SetSegmentValue
  7483  00422A  D7A2               	goto	l22452
  7484  00422C                     l22476:
  7485                           
  7486                           ; BSR set to: 1
  7487  00422C  0E63               	movlw	99
  7488  00422E  644A               	cpfsgt	(_edit_Param+4)^0,c	;volatile
  7489  004230  D01A               	goto	l22486
  7490                           
  7491                           ; BSR set to: 1
  7492  004232  0E63               	movlw	99
  7493  004234  6449               	cpfsgt	(_edit_Param+3)^0,c	;volatile
  7494  004236  D017               	goto	l22486
  7495                           
  7496                           ; BSR set to: 1
  7497                           ;sm_MenuConfiguration_MC50.c: 1159:     {;sm_MenuConfiguration_MC50.c: 1160:         if(
      +                          menu_st.parameterSelected==0)
  7498  004238  5168               	movf	(_menu_st+23)& (0+255),w,b
  7499  00423A  A4D8               	btfss	status,2,c
  7500  00423C  D00A               	goto	l22484
  7501                           
  7502                           ; BSR set to: 1
  7503                           ;sm_MenuConfiguration_MC50.c: 1161:         {;sm_MenuConfiguration_MC50.c: 1162:        
      +                               SetSegmentValueIntermitentMain(dL, dU,( 500/50));
  7504  00423E  0E13               	movlw	19
  7505  004240  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7506  004242  0E00               	movlw	0
  7507  004244  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7508  004246  0E0A               	movlw	10
  7509  004248  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7510  00424A  0E12               	movlw	18
  7511  00424C  EC91  F04F         	call	_SetSegmentValueIntermitentMain
  7512                           
  7513                           ;sm_MenuConfiguration_MC50.c: 1163:         }
  7514  004250  0012               	return	
  7515  004252                     l22484:
  7516                           
  7517                           ; BSR set to: 1
  7518                           ;sm_MenuConfiguration_MC50.c: 1165:         {;sm_MenuConfiguration_MC50.c: 1166:        
      +                               SetSegmentValueIntermitentMain(dL, dP,( 500/50));
  7519  004252  0E10               	movlw	16
  7520  004254  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7521  004256  0E00               	movlw	0
  7522  004258  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7523  00425A  0E0A               	movlw	10
  7524  00425C  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7525  00425E  0E12               	movlw	18
  7526  004260  EC91  F04F         	call	_SetSegmentValueIntermitentMain
  7527  004264  0012               	return	
  7528  004266                     l22486:
  7529                           
  7530                           ; BSR set to: 1
  7531  004266  0100               	movlb	0	; () banked
  7532  004268  29E8               	incf	controlSelectRemote@temp& (0+255),w,b
  7533  00426A  B4D8               	btfsc	status,2,c
  7534  00426C  D0A8               	goto	l22554
  7535                           
  7536                           ; BSR set to: 0
  7537  00426E  51E8               	movf	controlSelectRemote@temp& (0+255),w,b
  7538  004270  B4D8               	btfsc	status,2,c
  7539  004272  D00F               	goto	u25880
  7540                           
  7541                           ; BSR set to: 0
  7542  004274  05E8               	decf	controlSelectRemote@temp& (0+255),w,b
  7543  004276  B4D8               	btfsc	status,2,c
  7544  004278  D00C               	goto	u25880
  7545                           
  7546                           ; BSR set to: 0
  7547  00427A  0E02               	movlw	2
  7548  00427C  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7549  00427E  B4D8               	btfsc	status,2,c
  7550  004280  D008               	goto	u25880
  7551                           
  7552                           ; BSR set to: 0
  7553  004282  0E04               	movlw	4
  7554  004284  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7555  004286  B4D8               	btfsc	status,2,c
  7556  004288  D004               	goto	u25880
  7557                           
  7558                           ; BSR set to: 0
  7559  00428A  0E08               	movlw	8
  7560  00428C  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7561  00428E  A4D8               	btfss	status,2,c
  7562  004290  D096               	goto	l22554
  7563  004292                     u25880:
  7564                           
  7565                           ; BSR set to: 0
  7566                           ;sm_MenuConfiguration_MC50.c: 1170:     {;sm_MenuConfiguration_MC50.c: 1171:         cha
      +                          r pos;;sm_MenuConfiguration_MC50.c: 1172:         validSerial=validateRemoteSerialNumber
      +                          (tempSerial,NO,&pos);
  7567  004292  C0E4  F02E         	movff	controlSelectRemote@tempSerial,validateRemoteSerialNumber@serial
  7568  004296  C0E5  F02F         	movff	controlSelectRemote@tempSerial+1,validateRemoteSerialNumber@serial+1
  7569  00429A  C0E6  F030         	movff	controlSelectRemote@tempSerial+2,validateRemoteSerialNumber@serial+2
  7570  00429E  C0E7  F031         	movff	controlSelectRemote@tempSerial+3,validateRemoteSerialNumber@serial+3
  7571  0042A2  0E00               	movlw	0
  7572  0042A4  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
  7573  0042A6  0EE2               	movlw	low controlSelectRemote@pos
  7574  0042A8  6E33               	movwf	validateRemoteSerialNumber@position^0,c
  7575  0042AA  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
  7576  0042AC  EC4C  F031         	call	_validateRemoteSerialNumber	;wreg free
  7577  0042B0  6FE1               	movwf	controlSelectRemote@validSerial& (0+255),b
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;sm_MenuConfiguration_MC50.c: 1174:         TypeRemote_st typeRemote = getTypeRemote();
  7581  0042B2  EC46  F050         	call	_getTypeRemote	;wreg free
  7582  0042B6  0100               	movlb	0	; () banked
  7583  0042B8  6FE3               	movwf	controlSelectRemote@typeRemote& (0+255),b
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;sm_MenuConfiguration_MC50.c: 1175:         if(validSerial==0&&(typeRemote==Keeloq_Rolli
      +                          ngCode || (var_sys_NVM.OnlyRollingCode==NO)))
  7587  0042BA  51E1               	movf	controlSelectRemote@validSerial& (0+255),w,b
  7588  0042BC  A4D8               	btfss	status,2,c
  7589  0042BE  0012               	return	
  7590                           
  7591                           ; BSR set to: 0
  7592  0042C0  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7593  0042C2  B4D8               	btfsc	status,2,c
  7594  0042C4  D003               	goto	u25910
  7595                           
  7596                           ; BSR set to: 0
  7597  0042C6  51BE               	movf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
  7598  0042C8  A4D8               	btfss	status,2,c
  7599  0042CA  0012               	return	
  7600  0042CC                     u25910:
  7601                           
  7602                           ; BSR set to: 0
  7603                           ;sm_MenuConfiguration_MC50.c: 1176:         {;sm_MenuConfiguration_MC50.c: 1177:        
      +                               saveNewSerial(menu_st.parameterSelected,tempSerial,edit_Param.tempValue);
  7604  0042CC  C0E4  F0D8         	movff	controlSelectRemote@tempSerial,saveNewSerial@tempSerial
  7605  0042D0  C0E5  F0D9         	movff	controlSelectRemote@tempSerial+1,saveNewSerial@tempSerial+1
  7606  0042D4  C0E6  F0DA         	movff	controlSelectRemote@tempSerial+2,saveNewSerial@tempSerial+2
  7607  0042D8  C0E7  F0DB         	movff	controlSelectRemote@tempSerial+3,saveNewSerial@tempSerial+3
  7608  0042DC  C049  F0DC         	movff	_edit_Param+3,saveNewSerial@position	;volatile
  7609  0042E0  0101               	movlb	1	; () banked
  7610  0042E2  5168               	movf	(_menu_st+23)& (0+255),w,b
  7611  0042E4  ECED  F045         	call	_saveNewSerial
  7612                           
  7613                           ;sm_MenuConfiguration_MC50.c: 1178:             if(menu_st.parameterSelected==0&&edit_Pa
      +                          ram.tempValue==var_sys_NVM.positionRemotesFull&&var_sys_NVM.positionRemotesFull<99)
  7614  0042E8  0101               	movlb	1	; () banked
  7615  0042EA  5168               	movf	(_menu_st+23)& (0+255),w,b
  7616  0042EC  A4D8               	btfss	status,2,c
  7617  0042EE  D009               	goto	l22518
  7618                           
  7619                           ; BSR set to: 1
  7620  0042F0  0100               	movlb	0	; () banked
  7621  0042F2  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7622  0042F4  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7623  0042F6  A4D8               	btfss	status,2,c
  7624  0042F8  D004               	goto	l22518
  7625                           
  7626                           ; BSR set to: 0
  7627  0042FA  0E63               	movlw	99
  7628  0042FC  61B8               	cpfslt	(_var_sys_NVM+32)& (0+255),b	;volatile
  7629  0042FE  D001               	goto	l22518
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;sm_MenuConfiguration_MC50.c: 1179:                 var_sys_NVM.positionRemotesFull++;
  7633  004300  2BB8               	incf	(_var_sys_NVM+32)& (0+255),f,b	;volatile
  7634  004302                     l22518:
  7635                           
  7636                           ;sm_MenuConfiguration_MC50.c: 1180:             if(menu_st.parameterSelected==1&&edit_Pa
      +                          ram.tempValue==var_sys_NVM.positionRemotesWalk&&var_sys_NVM.positionRemotesWalk<99)
  7637  004302  0101               	movlb	1	; () banked
  7638  004304  0568               	decf	(_menu_st+23)& (0+255),w,b
  7639  004306  A4D8               	btfss	status,2,c
  7640  004308  D009               	goto	l22526
  7641                           
  7642                           ; BSR set to: 1
  7643  00430A  0100               	movlb	0	; () banked
  7644  00430C  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
  7645  00430E  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7646  004310  A4D8               	btfss	status,2,c
  7647  004312  D004               	goto	l22526
  7648                           
  7649                           ; BSR set to: 0
  7650  004314  0E63               	movlw	99
  7651  004316  61B9               	cpfslt	(_var_sys_NVM+33)& (0+255),b	;volatile
  7652  004318  D001               	goto	l22526
  7653                           
  7654                           ; BSR set to: 0
  7655                           ;sm_MenuConfiguration_MC50.c: 1181:                 var_sys_NVM.positionRemotesWalk++;
  7656  00431A  2BB9               	incf	(_var_sys_NVM+33)& (0+255),f,b	;volatile
  7657  00431C                     l22526:
  7658                           
  7659                           ;sm_MenuConfiguration_MC50.c: 1182:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_addRemotes);
  7660  00431C  0EBD               	movlw	low _menuConfiguration_stateMachine
  7661  00431E  6E12               	movwf	sm_send_event@psm^0,c
  7662  004320  0E02               	movlw	high _menuConfiguration_stateMachine
  7663  004322  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7664  004324  0E00               	movlw	0
  7665  004326  6E15               	movwf	(sm_send_event@event+1)^0,c
  7666  004328  0E08               	movlw	8
  7667  00432A  6E14               	movwf	sm_send_event@event^0,c
  7668  00432C  ECF7  F047         	call	_sm_send_event	;wreg free
  7669                           
  7670                           ;sm_MenuConfiguration_MC50.c: 1183:             var_sys.DistanceProgrammingActive=NO;
  7671  004330  0E00               	movlw	0
  7672  004332  0101               	movlb	1	; () banked
  7673  004334  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7674                           
  7675                           ; BSR set to: 1
  7676                           ;sm_MenuConfiguration_MC50.c: 1184:             var_sys.ProgrammingDistanceIs=NoCMD;
  7677  004336  0E00               	movlw	0
  7678  004338  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7679                           
  7680                           ; BSR set to: 1
  7681                           ;sm_MenuConfiguration_MC50.c: 1185:             ts_system.timeSinalizationDigit=(1000/50
      +                          )*2;
  7682  00433A  0E00               	movlw	0
  7683  00433C  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
  7684  00433E  0E28               	movlw	40
  7685  004340  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
  7686                           
  7687                           ; BSR set to: 1
  7688                           ;sm_MenuConfiguration_MC50.c: 1186:             SetSegmentValueIntermitentMain((edit_Par
      +                          am.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,( 200/50));
  7689  004342  0E0A               	movlw	10
  7690  004344  6E10               	movwf	___lbmod@divisor^0,c
  7691  004346  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7692  004348  ECBD  F04D         	call	___lbmod
  7693  00434C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7694  00434E  0E00               	movlw	0
  7695  004350  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7696  004352  0E04               	movlw	4
  7697  004354  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7698  004356  0E0A               	movlw	10
  7699  004358  6E10               	movwf	___lbmod@divisor^0,c
  7700  00435A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7701  00435C  ECBD  F04D         	call	___lbmod
  7702  004360  0100               	movlb	0	; () banked
  7703  004362  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7704  004364  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7705  004366  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7706  004368  6E14               	movwf	___awdiv@dividend^0,c
  7707  00436A  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7708  00436C  A0D8               	btfss	status,0,c
  7709  00436E  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7710  004370  0E00               	movlw	0
  7711  004372  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7712  004374  0E0A               	movlw	10
  7713  004376  6E16               	movwf	___awdiv@divisor^0,c
  7714  004378  EC09  F043         	call	___awdiv	;wreg free
  7715  00437C  5014               	movf	?___awdiv^0,w,c
  7716  00437E  EC91  F04F         	call	_SetSegmentValueIntermitentMain
  7717                           
  7718                           ;sm_MenuConfiguration_MC50.c: 1187:             if(edit_Param.Max==edit_Param.tempValue 
      +                          || edit_Param.Max==0 )
  7719  004382  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7720  004384  184A               	xorwf	(_edit_Param+4)^0,w,c	;volatile
  7721  004386  B4D8               	btfsc	status,2,c
  7722  004388  D003               	goto	u25990
  7723  00438A  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7724  00438C  A4D8               	btfss	status,2,c
  7725  00438E  0012               	return	
  7726  004390                     u25990:
  7727                           
  7728                           ;sm_MenuConfiguration_MC50.c: 1188:             {;sm_MenuConfiguration_MC50.c: 1192:    
      +                                       if(var_sys_NVM.positionRemotesFull==0 && var_sys_NVM.positionRemotesWalk==0
      +                           && typeRemote==Keeloq_RollingCode)
  7729  004390  0100               	movlb	0	; () banked
  7730  004392  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7731  004394  A4D8               	btfss	status,2,c
  7732  004396  D008               	goto	l22548
  7733                           
  7734                           ; BSR set to: 0
  7735  004398  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
  7736  00439A  A4D8               	btfss	status,2,c
  7737  00439C  D005               	goto	l22548
  7738                           
  7739                           ; BSR set to: 0
  7740  00439E  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7741  0043A0  A4D8               	btfss	status,2,c
  7742  0043A2  D002               	goto	l22548
  7743                           
  7744                           ; BSR set to: 0
  7745                           ;sm_MenuConfiguration_MC50.c: 1193:                 {;sm_MenuConfiguration_MC50.c: 1195:
      +                                               var_sys_NVM.OnlyRollingCode=YES;
  7746  0043A4  0E01               	movlw	1
  7747  0043A6  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  7748  0043A8                     l22548:
  7749                           
  7750                           ; BSR set to: 0
  7751                           ;sm_MenuConfiguration_MC50.c: 1199:                 edit_Param.tempValue++;
  7752  0043A8  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7753                           
  7754                           ; BSR set to: 0
  7755                           ;sm_MenuConfiguration_MC50.c: 1200:                 edit_Param.Value[0]=edit_Param.tempV
      +                          alue;
  7756  0043AA  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  7757  0043AE  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  7758  0043B2  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  7759                           
  7760                           ; BSR set to: 0
  7761                           ;sm_MenuConfiguration_MC50.c: 1201:                 SaveNVM_VarSystem(pageMemoryCounters
      +                          );
  7762  0043B6  0E02               	movlw	2
  7763  0043B8  EC05  F04C         	call	_SaveNVM_VarSystem
  7764  0043BC  0012               	return	
  7765  0043BE                     l22554:
  7766                           
  7767                           ; BSR set to: 0
  7768  0043BE  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7769  0043C0  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7770  0043C2  B4D8               	btfsc	status,2,c
  7771  0043C4  0012               	return	
  7772                           
  7773                           ; BSR set to: 0
  7774  0043C6  0E07               	movlw	7
  7775  0043C8  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7776  0043CA  A4D8               	btfss	status,2,c
  7777  0043CC  0012               	return	
  7778                           
  7779                           ; BSR set to: 0
  7780  0043CE  0E27               	movlw	39
  7781  0043D0  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  7782  0043D2  0012               	return	
  7783                           
  7784                           ; BSR set to: 0
  7785                           ;sm_MenuConfiguration_MC50.c: 1208:     {;sm_MenuConfiguration_MC50.c: 1209:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7786  0043D4  0E00               	movlw	0
  7787  0043D6  0101               	movlb	1	; () banked
  7788  0043D8  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7789  0043DA  0E64               	movlw	100
  7790  0043DC  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7791                           
  7792                           ; BSR set to: 1
  7793                           ;sm_MenuConfiguration_MC50.c: 1210:         RemoveSerial(menu_st.parameterSelected,edit_
      +                          Param.tempValue);
  7794  0043DE  C049  F03A         	movff	_edit_Param+3,RemoveSerial@position	;volatile
  7795  0043E2  5168               	movf	(_menu_st+23)& (0+255),w,b
  7796  0043E4  ECCE  F043         	call	_RemoveSerial
  7797                           
  7798                           ;sm_MenuConfiguration_MC50.c: 1211:         SetSegmentValueIntermitentMain((edit_Param.t
      +                          empValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  7799  0043E8  0E0A               	movlw	10
  7800  0043EA  6E10               	movwf	___lbmod@divisor^0,c
  7801  0043EC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7802  0043EE  ECBD  F04D         	call	___lbmod
  7803  0043F2  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7804  0043F4  0E00               	movlw	0
  7805  0043F6  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7806  0043F8  0E14               	movlw	20
  7807  0043FA  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7808  0043FC  0E0A               	movlw	10
  7809  0043FE  6E10               	movwf	___lbmod@divisor^0,c
  7810  004400  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7811  004402  ECBD  F04D         	call	___lbmod
  7812  004406  0100               	movlb	0	; () banked
  7813  004408  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7814  00440A  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7815  00440C  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7816  00440E  6E14               	movwf	___awdiv@dividend^0,c
  7817  004410  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7818  004412  A0D8               	btfss	status,0,c
  7819  004414  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7820  004416  0E00               	movlw	0
  7821  004418  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7822  00441A  0E0A               	movlw	10
  7823  00441C  6E16               	movwf	___awdiv@divisor^0,c
  7824  00441E  EC09  F043         	call	___awdiv	;wreg free
  7825  004422  5014               	movf	?___awdiv^0,w,c
  7826  004424  EC91  F04F         	call	_SetSegmentValueIntermitentMain
  7827  004428  0012               	return	
  7828  00442A                     __end_of_controlSelectRemote:
  7829                           	callstack 0
  7830                           
  7831 ;; *************** function _getTypeRemote *****************
  7832 ;; Defined at:
  7833 ;;		line 459 in file "inputs_MC50.c"
  7834 ;; Parameters:    Size  Location     Type
  7835 ;;		None
  7836 ;; Auto vars:     Size  Location     Type
  7837 ;;		None
  7838 ;; Return value:  Size  Location     Type
  7839 ;;                  1    wreg      enum E10559
  7840 ;; Registers used:
  7841 ;;		wreg, status,2
  7842 ;; Tracked objects:
  7843 ;;		On entry : 3F/0
  7844 ;;		On exit  : 3F/2
  7845 ;;		Unchanged: 0/0
  7846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7851 ;;Total ram usage:        0 bytes
  7852 ;; Hardware stack levels used: 1
  7853 ;; Hardware stack levels required when called: 4
  7854 ;; This function calls:
  7855 ;;		Nothing
  7856 ;; This function is called by:
  7857 ;;		_controlSelectRemote
  7858 ;; This function uses a non-reentrant model
  7859 ;;
  7860                           
  7861                           	psect	text7
  7862  00A08C                     __ptext7:
  7863                           	callstack 0
  7864  00A08C                     _getTypeRemote:
  7865                           	callstack 23
  7866                           
  7867                           ; BSR set to: 0
  7868                           ;inputs_MC50.c: 460:     return classic_data.type;
  7869                           
  7870                           ;incstack = 0
  7871  00A08C  0102               	movlb	2	; () banked
  7872  00A08E  51A0               	movf	(_classic_data+14)& (0+255),w,b
  7873                           
  7874                           ; BSR set to: 2
  7875  00A090  0012               	return		;funcret
  7876  00A092                     __end_of_getTypeRemote:
  7877                           	callstack 0
  7878                           
  7879 ;; *************** function _getSerialCmd *****************
  7880 ;; Defined at:
  7881 ;;		line 442 in file "inputs_MC50.c"
  7882 ;; Parameters:    Size  Location     Type
  7883 ;;  serial          1   26[COMRAM] PTR unsigned long 
  7884 ;;		 -> controlSelectRemote@tempSerial(4), 
  7885 ;; Auto vars:     Size  Location     Type
  7886 ;;  temp            1   27[COMRAM] char 
  7887 ;; Return value:  Size  Location     Type
  7888 ;;                  1    wreg      char 
  7889 ;; Registers used:
  7890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7891 ;; Tracked objects:
  7892 ;;		On entry : 3F/1
  7893 ;;		On exit  : 0/0
  7894 ;;		Unchanged: 0/0
  7895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7896 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7897 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7899 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7900 ;;Total ram usage:        2 bytes
  7901 ;; Hardware stack levels used: 1
  7902 ;; Hardware stack levels required when called: 5
  7903 ;; This function calls:
  7904 ;;		_memcpy
  7905 ;; This function is called by:
  7906 ;;		_controlSelectRemote
  7907 ;; This function uses a non-reentrant model
  7908 ;;
  7909                           
  7910                           	psect	text8
  7911  009456                     __ptext8:
  7912                           	callstack 0
  7913  009456                     _getSerialCmd:
  7914                           	callstack 22
  7915                           
  7916                           ; BSR set to: 1
  7917                           ;inputs_MC50.c: 443:     signed char temp=-1;
  7918                           
  7919                           ; BSR set to: 2
  7920                           ;incstack = 0
  7921  009456  681C               	setf	getSerialCmd@temp^0,c
  7922                           
  7923                           ; BSR set to: 1
  7924                           ;inputs_MC50.c: 444:     if(RFFull)
  7925  009458  0100               	movlb	0	; () banked
  7926  00945A  518B               	movf	_RFFull& (0+255),w,b	;volatile
  7927  00945C  B4D8               	btfsc	status,2,c
  7928  00945E  D020               	goto	l20908
  7929                           
  7930                           ; BSR set to: 0
  7931                           ;inputs_MC50.c: 445:     {;inputs_MC50.c: 446:         if(RFFull_12BIT)
  7932  009460  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
  7933  009462  B4D8               	btfsc	status,2,c
  7934  009464  D00E               	goto	l20904
  7935                           
  7936                           ; BSR set to: 0
  7937                           ;inputs_MC50.c: 447:         {;inputs_MC50.c: 448:             memcpy((char*)serial,&cla
      +                          ssic_data.serialnumber,4);
  7938  009466  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7939  00946A  6A11               	clrf	(memcpy@d1+1)^0,c
  7940  00946C  0E96               	movlw	low (_classic_data+4)
  7941  00946E  6E12               	movwf	memcpy@s1^0,c
  7942  009470  0E02               	movlw	high (_classic_data+4)
  7943  009472  6E13               	movwf	(memcpy@s1+1)^0,c
  7944  009474  0E00               	movlw	0
  7945  009476  6E15               	movwf	(memcpy@n+1)^0,c
  7946  009478  0E04               	movlw	4
  7947  00947A  6E14               	movwf	memcpy@n^0,c
  7948  00947C  EC07  F04B         	call	_memcpy	;wreg free
  7949                           
  7950                           ;inputs_MC50.c: 449:         }
  7951  009480  D00D               	goto	l20906
  7952  009482                     l20904:
  7953                           
  7954                           ; BSR set to: 0
  7955                           ;inputs_MC50.c: 451:         {;inputs_MC50.c: 452:             memcpy((char*)serial,(cha
      +                          r*)BufferRF+4,4);
  7956  009482  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7957  009486  6A11               	clrf	(memcpy@d1+1)^0,c
  7958  009488  0ECC               	movlw	low (_BufferRF+4)
  7959  00948A  6E12               	movwf	memcpy@s1^0,c
  7960  00948C  0E02               	movlw	high (_BufferRF+4)
  7961  00948E  6E13               	movwf	(memcpy@s1+1)^0,c
  7962  009490  0E00               	movlw	0
  7963  009492  6E15               	movwf	(memcpy@n+1)^0,c
  7964  009494  0E04               	movlw	4
  7965  009496  6E14               	movwf	memcpy@n^0,c
  7966  009498  EC07  F04B         	call	_memcpy	;wreg free
  7967  00949C                     l20906:
  7968                           
  7969                           ;inputs_MC50.c: 454:         temp=classic_data.fcode1;
  7970  00949C  C29E  F01C         	movff	_classic_data+12,getSerialCmd@temp
  7971  0094A0                     l20908:
  7972                           
  7973                           ;inputs_MC50.c: 456:     return temp;
  7974  0094A0  501C               	movf	getSerialCmd@temp^0,w,c
  7975  0094A2  0012               	return		;funcret
  7976  0094A4                     __end_of_getSerialCmd:
  7977                           	callstack 0
  7978                           
  7979 ;; *************** function _controlSaveRemote *****************
  7980 ;; Defined at:
  7981 ;;		line 1216 in file "sm_MenuConfiguration_MC50.c"
  7982 ;; Parameters:    Size  Location     Type
  7983 ;;		None
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;		None
  7986 ;; Return value:  Size  Location     Type
  7987 ;;                  1    wreg      void 
  7988 ;; Registers used:
  7989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7990 ;; Tracked objects:
  7991 ;;		On entry : 3F/0
  7992 ;;		On exit  : 0/0
  7993 ;;		Unchanged: 0/0
  7994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7997 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7998 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7999 ;;Total ram usage:        1 bytes
  8000 ;; Hardware stack levels used: 1
  8001 ;; Hardware stack levels required when called: 6
  8002 ;; This function calls:
  8003 ;;		_ClearFlag_rfCMD
  8004 ;;		_SetSegmentValueIntermitentMain
  8005 ;;		_SetSegmentValueMain
  8006 ;;		___awdiv
  8007 ;;		___lbmod
  8008 ;;		_sm_send_event
  8009 ;; This function is called by:
  8010 ;;		_sm_execute_menuConfiguration
  8011 ;; This function uses a non-reentrant model
  8012 ;;
  8013                           
  8014                           	psect	text9
  8015  007DB0                     __ptext9:
  8016                           	callstack 0
  8017  007DB0                     _controlSaveRemote:
  8018                           	callstack 22
  8019                           
  8020                           ; BSR set to: 0
  8021                           ;sm_MenuConfiguration_MC50.c: 1217:      if (ts_system.timeSinalizationDigit<=0)
  8022                           
  8023                           ;incstack = 0
  8024  007DB0  0101               	movlb	1	; () banked
  8025  007DB2  BFAB               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8026  007DB4  D005               	goto	u26060
  8027  007DB6  51AB               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8028  007DB8  E154               	bnz	l3493
  8029  007DBA  05AA               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8030  007DBC  B0D8               	btfsc	status,0,c
  8031  007DBE  0012               	return	
  8032  007DC0                     u26060:
  8033                           
  8034                           ; BSR set to: 1
  8035                           ;sm_MenuConfiguration_MC50.c: 1218:      {;sm_MenuConfiguration_MC50.c: 1219:          i
      +                          f(edit_Param.Max==0)
  8036  007DC0  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  8037  007DC2  A4D8               	btfss	status,2,c
  8038  007DC4  D02E               	goto	l22576
  8039                           
  8040                           ; BSR set to: 1
  8041                           ;sm_MenuConfiguration_MC50.c: 1220:          {;sm_MenuConfiguration_MC50.c: 1221:       
      +                                 ts_system.timeoutMenu=10*(1000/50);
  8042  007DC6  0E00               	movlw	0
  8043  007DC8  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8044  007DCA  0EC8               	movlw	200
  8045  007DCC  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8046                           
  8047                           ; BSR set to: 1
  8048                           ;sm_MenuConfiguration_MC50.c: 1222:              sm_send_event(&menuConfiguration_stateM
      +                          achine, ev_NextRemote);
  8049  007DCE  0EBD               	movlw	low _menuConfiguration_stateMachine
  8050  007DD0  6E12               	movwf	sm_send_event@psm^0,c
  8051  007DD2  0E02               	movlw	high _menuConfiguration_stateMachine
  8052  007DD4  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8053  007DD6  0E00               	movlw	0
  8054  007DD8  6E15               	movwf	(sm_send_event@event+1)^0,c
  8055  007DDA  0E09               	movlw	9
  8056  007DDC  6E14               	movwf	sm_send_event@event^0,c
  8057  007DDE  ECF7  F047         	call	_sm_send_event	;wreg free
  8058                           
  8059                           ;sm_MenuConfiguration_MC50.c: 1223:              SetSegmentValueIntermitentMain((edit_Pa
      +                          ram.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  8060  007DE2  0E0A               	movlw	10
  8061  007DE4  6E10               	movwf	___lbmod@divisor^0,c
  8062  007DE6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8063  007DE8  ECBD  F04D         	call	___lbmod
  8064  007DEC  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  8065  007DEE  0E00               	movlw	0
  8066  007DF0  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  8067  007DF2  0E14               	movlw	20
  8068  007DF4  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  8069  007DF6  0E0A               	movlw	10
  8070  007DF8  6E10               	movwf	___lbmod@divisor^0,c
  8071  007DFA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8072  007DFC  ECBD  F04D         	call	___lbmod
  8073  007E00  6E20               	movwf	??_controlSaveRemote^0,c
  8074  007E02  5020               	movf	??_controlSaveRemote^0,w,c
  8075  007E04  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  8076  007E06  6E14               	movwf	___awdiv@dividend^0,c
  8077  007E08  6A15               	clrf	(___awdiv@dividend+1)^0,c
  8078  007E0A  A0D8               	btfss	status,0,c
  8079  007E0C  0615               	decf	(___awdiv@dividend+1)^0,f,c
  8080  007E0E  0E00               	movlw	0
  8081  007E10  6E17               	movwf	(___awdiv@divisor+1)^0,c
  8082  007E12  0E0A               	movlw	10
  8083  007E14  6E16               	movwf	___awdiv@divisor^0,c
  8084  007E16  EC09  F043         	call	___awdiv	;wreg free
  8085  007E1A  5014               	movf	?___awdiv^0,w,c
  8086  007E1C  EC91  F04F         	call	_SetSegmentValueIntermitentMain
  8087                           
  8088                           ;sm_MenuConfiguration_MC50.c: 1224:          }
  8089  007E20  0012               	return	
  8090  007E22                     l22576:
  8091                           
  8092                           ; BSR set to: 1
  8093                           ;sm_MenuConfiguration_MC50.c: 1226:          {;sm_MenuConfiguration_MC50.c: 1227:       
      +                                sm_send_event(&main_stateMachine, ev_goto_StandBy);
  8094  007E22  0EF1               	movlw	low _main_stateMachine
  8095  007E24  6E12               	movwf	sm_send_event@psm^0,c
  8096  007E26  0E01               	movlw	high _main_stateMachine
  8097  007E28  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8098  007E2A  0E00               	movlw	0
  8099  007E2C  6E15               	movwf	(sm_send_event@event+1)^0,c
  8100  007E2E  0E07               	movlw	7
  8101  007E30  6E14               	movwf	sm_send_event@event^0,c
  8102  007E32  ECF7  F047         	call	_sm_send_event	;wreg free
  8103                           
  8104                           ;sm_MenuConfiguration_MC50.c: 1228:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_ParameterIsSaved);
  8105  007E36  0EBD               	movlw	low _menuConfiguration_stateMachine
  8106  007E38  6E12               	movwf	sm_send_event@psm^0,c
  8107  007E3A  0E02               	movlw	high _menuConfiguration_stateMachine
  8108  007E3C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8109  007E3E  0E00               	movlw	0
  8110  007E40  6E15               	movwf	(sm_send_event@event+1)^0,c
  8111  007E42  0E04               	movlw	4
  8112  007E44  6E14               	movwf	sm_send_event@event^0,c
  8113  007E46  ECF7  F047         	call	_sm_send_event	;wreg free
  8114                           
  8115                           ;sm_MenuConfiguration_MC50.c: 1229:             SetSegmentValueMain(dMinus,dMinus);
  8116  007E4A  0E18               	movlw	24
  8117  007E4C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  8118  007E4E  0E18               	movlw	24
  8119  007E50  ECF5  F04E         	call	_SetSegmentValueMain
  8120                           
  8121                           ; BSR set to: 0
  8122                           ;sm_MenuConfiguration_MC50.c: 1230:             ClearFlag_rfCMD();
  8123  007E54  EC49  F050         	call	_ClearFlag_rfCMD	;wreg free
  8124                           
  8125                           ;sm_MenuConfiguration_MC50.c: 1231:             ts_system.timeoutMenu = 0;
  8126  007E58  0E00               	movlw	0
  8127  007E5A  0101               	movlb	1	; () banked
  8128  007E5C  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8129  007E5E  0E00               	movlw	0
  8130  007E60  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8131  007E62                     l3493:
  8132  007E62  0012               	return		;funcret
  8133  007E64                     __end_of_controlSaveRemote:
  8134                           	callstack 0
  8135                           
  8136 ;; *************** function ___lbmod *****************
  8137 ;; Defined at:
  8138 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbmod.c"
  8139 ;; Parameters:    Size  Location     Type
  8140 ;;  dividend        1    wreg     unsigned char 
  8141 ;;  divisor         1   15[COMRAM] unsigned char 
  8142 ;; Auto vars:     Size  Location     Type
  8143 ;;  dividend        1   16[COMRAM] unsigned char 
  8144 ;;  rem             1   18[COMRAM] unsigned char 
  8145 ;;  counter         1   17[COMRAM] unsigned char 
  8146 ;; Return value:  Size  Location     Type
  8147 ;;                  1    wreg      unsigned char 
  8148 ;; Registers used:
  8149 ;;		wreg, status,2, status,0
  8150 ;; Tracked objects:
  8151 ;;		On entry : 0/1
  8152 ;;		On exit  : 0/0
  8153 ;;		Unchanged: 0/0
  8154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8155 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8156 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8158 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8159 ;;Total ram usage:        4 bytes
  8160 ;; Hardware stack levels used: 1
  8161 ;; Hardware stack levels required when called: 4
  8162 ;; This function calls:
  8163 ;;		Nothing
  8164 ;; This function is called by:
  8165 ;;		_controlSelectRemote
  8166 ;;		_controlSaveRemote
  8167 ;; This function uses a non-reentrant model
  8168 ;;
  8169                           
  8170                           	psect	text10
  8171  009B7A                     __ptext10:
  8172                           	callstack 0
  8173  009B7A                     ___lbmod:
  8174                           	callstack 23
  8175                           
  8176                           ;incstack = 0
  8177                           ;___lbmod@dividend stored from wreg
  8178  009B7A  6E11               	movwf	___lbmod@dividend^0,c
  8179  009B7C  0E08               	movlw	8
  8180  009B7E  6E12               	movwf	___lbmod@counter^0,c
  8181  009B80  0E00               	movlw	0
  8182  009B82  6E13               	movwf	___lbmod@rem^0,c
  8183  009B84                     l21302:
  8184  009B84  90D8               	bcf	status,0,c
  8185  009B86  3411               	rlcf	___lbmod@dividend^0,w,c
  8186  009B88  3413               	rlcf	___lbmod@rem^0,w,c
  8187  009B8A  6E13               	movwf	___lbmod@rem^0,c
  8188  009B8C  90D8               	bcf	status,0,c
  8189  009B8E  3611               	rlcf	___lbmod@dividend^0,f,c
  8190  009B90  5010               	movf	___lbmod@divisor^0,w,c
  8191  009B92  5C13               	subwf	___lbmod@rem^0,w,c
  8192  009B94  A0D8               	btfss	status,0,c
  8193  009B96  D002               	goto	l21310
  8194  009B98  5010               	movf	___lbmod@divisor^0,w,c
  8195  009B9A  5E13               	subwf	___lbmod@rem^0,f,c
  8196  009B9C                     l21310:
  8197  009B9C  2E12               	decfsz	___lbmod@counter^0,f,c
  8198  009B9E  D7F2               	goto	l21302
  8199  009BA0  5013               	movf	___lbmod@rem^0,w,c
  8200  009BA2  0012               	return		;funcret
  8201  009BA4                     __end_of___lbmod:
  8202                           	callstack 0
  8203                           
  8204 ;; *************** function ___awdiv *****************
  8205 ;; Defined at:
  8206 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  8207 ;; Parameters:    Size  Location     Type
  8208 ;;  dividend        2   19[COMRAM] int 
  8209 ;;  divisor         2   21[COMRAM] int 
  8210 ;; Auto vars:     Size  Location     Type
  8211 ;;  quotient        2   25[COMRAM] int 
  8212 ;;  sign            1   24[COMRAM] unsigned char 
  8213 ;;  counter         1   23[COMRAM] unsigned char 
  8214 ;; Return value:  Size  Location     Type
  8215 ;;                  2   19[COMRAM] int 
  8216 ;; Registers used:
  8217 ;;		wreg, status,2, status,0
  8218 ;; Tracked objects:
  8219 ;;		On entry : 0/0
  8220 ;;		On exit  : 0/0
  8221 ;;		Unchanged: 0/0
  8222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8223 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8224 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8226 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8227 ;;Total ram usage:        8 bytes
  8228 ;; Hardware stack levels used: 1
  8229 ;; Hardware stack levels required when called: 4
  8230 ;; This function calls:
  8231 ;;		Nothing
  8232 ;; This function is called by:
  8233 ;;		_controlSelectRemote
  8234 ;;		_controlSaveRemote
  8235 ;; This function uses a non-reentrant model
  8236 ;;
  8237                           
  8238                           	psect	text11
  8239  008612                     __ptext11:
  8240                           	callstack 0
  8241  008612                     ___awdiv:
  8242                           	callstack 23
  8243                           
  8244                           ;incstack = 0
  8245  008612  0E00               	movlw	0
  8246  008614  6E19               	movwf	___awdiv@sign^0,c
  8247  008616  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8248  008618  D006               	goto	l21238
  8249  00861A  6C16               	negf	___awdiv@divisor^0,c
  8250  00861C  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  8251  00861E  B0D8               	btfsc	status,0,c
  8252  008620  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  8253  008622  0E01               	movlw	1
  8254  008624  6E19               	movwf	___awdiv@sign^0,c
  8255  008626                     l21238:
  8256  008626  AE15               	btfss	(___awdiv@dividend+1)^0,7,c
  8257  008628  D006               	goto	l21244
  8258  00862A  6C14               	negf	___awdiv@dividend^0,c
  8259  00862C  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  8260  00862E  B0D8               	btfsc	status,0,c
  8261  008630  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  8262  008632  0E01               	movlw	1
  8263  008634  1A19               	xorwf	___awdiv@sign^0,f,c
  8264  008636                     l21244:
  8265  008636  0E00               	movlw	0
  8266  008638  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  8267  00863A  0E00               	movlw	0
  8268  00863C  6E1A               	movwf	___awdiv@quotient^0,c
  8269  00863E  5016               	movf	___awdiv@divisor^0,w,c
  8270  008640  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  8271  008642  B4D8               	btfsc	status,2,c
  8272  008644  D01C               	goto	l21266
  8273  008646  0E01               	movlw	1
  8274  008648  6E18               	movwf	___awdiv@counter^0,c
  8275  00864A  D004               	goto	l21252
  8276  00864C                     l21250:
  8277  00864C  90D8               	bcf	status,0,c
  8278  00864E  3616               	rlcf	___awdiv@divisor^0,f,c
  8279  008650  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  8280  008652  2A18               	incf	___awdiv@counter^0,f,c
  8281  008654                     l21252:
  8282  008654  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8283  008656  D7FA               	goto	l21250
  8284  008658                     u24480:
  8285  008658  90D8               	bcf	status,0,c
  8286  00865A  361A               	rlcf	___awdiv@quotient^0,f,c
  8287  00865C  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  8288  00865E  5016               	movf	___awdiv@divisor^0,w,c
  8289  008660  5C14               	subwf	___awdiv@dividend^0,w,c
  8290  008662  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8291  008664  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  8292  008666  A0D8               	btfss	status,0,c
  8293  008668  D005               	goto	l21262
  8294  00866A  5016               	movf	___awdiv@divisor^0,w,c
  8295  00866C  5E14               	subwf	___awdiv@dividend^0,f,c
  8296  00866E  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8297  008670  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  8298  008672  801A               	bsf	___awdiv@quotient^0,0,c
  8299  008674                     l21262:
  8300  008674  90D8               	bcf	status,0,c
  8301  008676  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  8302  008678  3216               	rrcf	___awdiv@divisor^0,f,c
  8303  00867A  2E18               	decfsz	___awdiv@counter^0,f,c
  8304  00867C  D7ED               	goto	u24480
  8305  00867E                     l21266:
  8306  00867E  5019               	movf	___awdiv@sign^0,w,c
  8307  008680  B4D8               	btfsc	status,2,c
  8308  008682  D004               	goto	l21270
  8309  008684  6C1A               	negf	___awdiv@quotient^0,c
  8310  008686  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  8311  008688  B0D8               	btfsc	status,0,c
  8312  00868A  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  8313  00868C                     l21270:
  8314  00868C  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  8315  008690  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  8316  008694  0012               	return		;funcret
  8317  008696                     __end_of___awdiv:
  8318                           	callstack 0
  8319                           
  8320 ;; *************** function _SetSegmentValueMain *****************
  8321 ;; Defined at:
  8322 ;;		line 104 in file "outputs_MC50.c"
  8323 ;; Parameters:    Size  Location     Type
  8324 ;;  d1              1    wreg     unsigned char 
  8325 ;;  d2              1   27[COMRAM] unsigned char 
  8326 ;; Auto vars:     Size  Location     Type
  8327 ;;  d1              1   28[COMRAM] unsigned char 
  8328 ;; Return value:  Size  Location     Type
  8329 ;;                  1    wreg      void 
  8330 ;; Registers used:
  8331 ;;		wreg, status,2
  8332 ;; Tracked objects:
  8333 ;;		On entry : 0/0
  8334 ;;		On exit  : 3F/0
  8335 ;;		Unchanged: 0/0
  8336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8337 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8338 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8340 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8341 ;;Total ram usage:        2 bytes
  8342 ;; Hardware stack levels used: 1
  8343 ;; Hardware stack levels required when called: 4
  8344 ;; This function calls:
  8345 ;;		Nothing
  8346 ;; This function is called by:
  8347 ;;		_sm_execute_main
  8348 ;;		_sm_execute_menuConfiguration
  8349 ;;		_load_New_Menu
  8350 ;;		_controlSelectRemote
  8351 ;;		_controlSaveRemote
  8352 ;; This function uses a non-reentrant model
  8353 ;;
  8354                           
  8355                           	psect	text12
  8356  009DEA                     __ptext12:
  8357                           	callstack 0
  8358  009DEA                     _SetSegmentValueMain:
  8359                           	callstack 22
  8360                           
  8361                           ;incstack = 0
  8362                           ;SetSegmentValueMain@d1 stored from wreg
  8363  009DEA  6E1D               	movwf	SetSegmentValueMain@d1^0,c
  8364                           
  8365                           ;outputs_MC50.c: 104: void SetSegmentValueMain(char d1, char d2);outputs_MC50.c: 105: {;
      +                          outputs_MC50.c: 106:     dispStruct.display_grp.value_display1=d1;
  8366  009DEC  C01D  F072         	movff	SetSegmentValueMain@d1,_dispStruct	;volatile
  8367                           
  8368                           ;outputs_MC50.c: 107:     dispStruct.display_grp.value_display2=d2;
  8369  009DF0  C01C  F073         	movff	SetSegmentValueMain@d2,_dispStruct+1	;volatile
  8370                           
  8371                           ;outputs_MC50.c: 108:     dispStruct.intermitentFreq=0;
  8372  009DF4  0E00               	movlw	0
  8373  009DF6  0100               	movlb	0	; () banked
  8374  009DF8  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8375  009DFA  0E00               	movlw	0
  8376  009DFC  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8377                           
  8378                           ; BSR set to: 0
  8379                           ;outputs_MC50.c: 109:     dispStruct.upFase=0;
  8380  009DFE  0E00               	movlw	0
  8381  009E00  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8382                           
  8383                           ; BSR set to: 0
  8384  009E02  0012               	return		;funcret
  8385  009E04                     __end_of_SetSegmentValueMain:
  8386                           	callstack 0
  8387                           
  8388 ;; *************** function _ClearFlag_rfCMD *****************
  8389 ;; Defined at:
  8390 ;;		line 463 in file "inputs_MC50.c"
  8391 ;; Parameters:    Size  Location     Type
  8392 ;;		None
  8393 ;; Auto vars:     Size  Location     Type
  8394 ;;		None
  8395 ;; Return value:  Size  Location     Type
  8396 ;;                  1    wreg      void 
  8397 ;; Registers used:
  8398 ;;		wreg, status,2
  8399 ;; Tracked objects:
  8400 ;;		On entry : 0/1
  8401 ;;		On exit  : 0/0
  8402 ;;		Unchanged: 0/0
  8403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8408 ;;Total ram usage:        0 bytes
  8409 ;; Hardware stack levels used: 1
  8410 ;; Hardware stack levels required when called: 4
  8411 ;; This function calls:
  8412 ;;		Nothing
  8413 ;; This function is called by:
  8414 ;;		_sm_execute_menuConfiguration
  8415 ;;		_controlSelectRemote
  8416 ;;		_controlSaveRemote
  8417 ;; This function uses a non-reentrant model
  8418 ;;
  8419                           
  8420                           	psect	text13
  8421  00A092                     __ptext13:
  8422                           	callstack 0
  8423  00A092                     _ClearFlag_rfCMD:
  8424                           	callstack 23
  8425                           
  8426                           ;inputs_MC50.c: 464:     rfCMD.processed=1;
  8427                           
  8428                           ; BSR set to: 0
  8429                           ;incstack = 0
  8430  00A092  0E01               	movlw	1
  8431  00A094  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  8432  00A096  0012               	return		;funcret
  8433  00A098                     __end_of_ClearFlag_rfCMD:
  8434                           	callstack 0
  8435                           
  8436 ;; *************** function _controlLearnDigit *****************
  8437 ;; Defined at:
  8438 ;;		line 1237 in file "sm_MenuConfiguration_MC50.c"
  8439 ;; Parameters:    Size  Location     Type
  8440 ;;		None
  8441 ;; Auto vars:     Size  Location     Type
  8442 ;;		None
  8443 ;; Return value:  Size  Location     Type
  8444 ;;                  1    wreg      void 
  8445 ;; Registers used:
  8446 ;;		wreg, status,2, status,0, cstack
  8447 ;; Tracked objects:
  8448 ;;		On entry : 3F/0
  8449 ;;		On exit  : 3E/0
  8450 ;;		Unchanged: 0/0
  8451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8456 ;;Total ram usage:        0 bytes
  8457 ;; Hardware stack levels used: 1
  8458 ;; Hardware stack levels required when called: 5
  8459 ;; This function calls:
  8460 ;;		_SetSegmentValueLearn
  8461 ;; This function is called by:
  8462 ;;		_sm_execute_menuConfiguration
  8463 ;; This function uses a non-reentrant model
  8464 ;;
  8465                           
  8466                           	psect	text14
  8467  00990C                     __ptext14:
  8468                           	callstack 0
  8469  00990C                     _controlLearnDigit:
  8470                           	callstack 23
  8471                           
  8472                           ; BSR set to: 0
  8473                           ;sm_MenuConfiguration_MC50.c: 1239:     if(ts_system.timeSinalizationDigit<=0 )
  8474                           
  8475                           ;incstack = 0
  8476  00990C  0101               	movlb	1	; () banked
  8477  00990E  BFAB               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8478  009910  D005               	goto	u26080
  8479  009912  51AB               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8480  009914  E112               	bnz	l3499
  8481  009916  05AA               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8482  009918  B0D8               	btfsc	status,0,c
  8483  00991A  0012               	return	
  8484  00991C                     u26080:
  8485                           
  8486                           ; BSR set to: 1
  8487                           ;sm_MenuConfiguration_MC50.c: 1240:     {;sm_MenuConfiguration_MC50.c: 1241:         ts_
      +                          system.timeSinalizationDigit=( 100/50);
  8488  00991C  0E00               	movlw	0
  8489  00991E  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
  8490  009920  0E02               	movlw	2
  8491  009922  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
  8492                           
  8493                           ; BSR set to: 1
  8494                           ;sm_MenuConfiguration_MC50.c: 1242:         if(var_sys.StateMotor==InClose)
  8495  009924  0E03               	movlw	3
  8496  009926  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  8497  009928  A4D8               	btfss	status,2,c
  8498  00992A  D004               	goto	l22592
  8499                           
  8500                           ; BSR set to: 1
  8501                           ;sm_MenuConfiguration_MC50.c: 1243:         {;sm_MenuConfiguration_MC50.c: 1244:        
      +                               SetSegmentValueLearn(Left);
  8502  00992C  0E00               	movlw	0
  8503  00992E  ECCF  F03B         	call	_SetSegmentValueLearn
  8504                           
  8505                           ;sm_MenuConfiguration_MC50.c: 1245:         }
  8506  009932  0012               	return	
  8507  009934                     l22592:
  8508                           
  8509                           ; BSR set to: 1
  8510                           ;sm_MenuConfiguration_MC50.c: 1247:         {;sm_MenuConfiguration_MC50.c: 1248:        
      +                               SetSegmentValueLearn(Rigth);
  8511  009934  0E01               	movlw	1
  8512  009936  ECCF  F03B         	call	_SetSegmentValueLearn
  8513  00993A                     l3499:
  8514  00993A  0012               	return		;funcret
  8515  00993C                     __end_of_controlLearnDigit:
  8516                           	callstack 0
  8517                           
  8518 ;; *************** function _SetSegmentValueLearn *****************
  8519 ;; Defined at:
  8520 ;;		line 124 in file "outputs_MC50.c"
  8521 ;; Parameters:    Size  Location     Type
  8522 ;;  direction       1    wreg     enum E10602
  8523 ;; Auto vars:     Size  Location     Type
  8524 ;;  direction       1   17[COMRAM] enum E10602
  8525 ;; Return value:  Size  Location     Type
  8526 ;;                  1    wreg      void 
  8527 ;; Registers used:
  8528 ;;		wreg, status,2, status,0
  8529 ;; Tracked objects:
  8530 ;;		On entry : 3F/1
  8531 ;;		On exit  : 3F/0
  8532 ;;		Unchanged: 0/0
  8533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8535 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8536 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8537 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8538 ;;Total ram usage:        3 bytes
  8539 ;; Hardware stack levels used: 1
  8540 ;; Hardware stack levels required when called: 4
  8541 ;; This function calls:
  8542 ;;		Nothing
  8543 ;; This function is called by:
  8544 ;;		_controlLearnDigit
  8545 ;; This function uses a non-reentrant model
  8546 ;;
  8547                           
  8548                           	psect	text15
  8549  00779E                     __ptext15:
  8550                           	callstack 0
  8551  00779E                     _SetSegmentValueLearn:
  8552                           	callstack 23
  8553                           
  8554                           ;incstack = 0
  8555                           ;SetSegmentValueLearn@direction stored from wreg
  8556  00779E  6E12               	movwf	SetSegmentValueLearn@direction^0,c
  8557                           
  8558                           ;outputs_MC50.c: 124: void SetSegmentValueLearn(Direction_en direction);outputs_MC50.c: 
      +                          125: {;outputs_MC50.c: 126:     dispStruct.intermitentFreq=0;
  8559  0077A0  0E00               	movlw	0
  8560  0077A2  0100               	movlb	0	; () banked
  8561  0077A4  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8562  0077A6  0E00               	movlw	0
  8563  0077A8  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8564                           
  8565                           ;outputs_MC50.c: 127:     dispStruct.upFase=0;
  8566  0077AA  0E00               	movlw	0
  8567  0077AC  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8568                           
  8569                           ;outputs_MC50.c: 128:     switch (direction)
  8570  0077AE  D066               	goto	l21066
  8571  0077B0                     l21012:
  8572                           
  8573                           ; BSR set to: 0
  8574                           ;outputs_MC50.c: 131:             if(dispStruct.display_grp.value_display1==sA && dispSt
      +                          ruct.display_grp.value_display2==dBlank)
  8575  0077B0  0E1A               	movlw	26
  8576  0077B2  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8577  0077B4  A4D8               	btfss	status,2,c
  8578  0077B6  D009               	goto	l21018
  8579                           
  8580                           ; BSR set to: 0
  8581  0077B8  0E20               	movlw	32
  8582  0077BA  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8583  0077BC  A4D8               	btfss	status,2,c
  8584  0077BE  D005               	goto	l21018
  8585                           
  8586                           ; BSR set to: 0
  8587                           ;outputs_MC50.c: 132:             {;outputs_MC50.c: 133:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8588  0077C0  0E20               	movlw	32
  8589  0077C2  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8590                           
  8591                           ;outputs_MC50.c: 134:                dispStruct.display_grp.value_display2=sA;
  8592  0077C4  0E1A               	movlw	26
  8593  0077C6  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8594                           
  8595                           ;outputs_MC50.c: 135:             }
  8596  0077C8  0012               	return	
  8597  0077CA                     l21018:
  8598                           
  8599                           ; BSR set to: 0
  8600  0077CA  0E20               	movlw	32
  8601  0077CC  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8602  0077CE  A4D8               	btfss	status,2,c
  8603  0077D0  D009               	goto	l21024
  8604                           
  8605                           ; BSR set to: 0
  8606  0077D2  0E1D               	movlw	29
  8607  0077D4  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8608  0077D6  A4D8               	btfss	status,2,c
  8609  0077D8  D005               	goto	l21024
  8610                           
  8611                           ; BSR set to: 0
  8612                           ;outputs_MC50.c: 137:             {;outputs_MC50.c: 138:                dispStruct.displ
      +                          ay_grp.value_display1=sD;
  8613  0077DA  0E1D               	movlw	29
  8614  0077DC  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8615                           
  8616                           ;outputs_MC50.c: 139:                dispStruct.display_grp.value_display2=dBlank;
  8617  0077DE  0E20               	movlw	32
  8618  0077E0  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8619                           
  8620                           ;outputs_MC50.c: 140:             }
  8621  0077E2  0012               	return	
  8622  0077E4                     l21024:
  8623                           
  8624                           ; BSR set to: 0
  8625  0077E4  0E1F               	movlw	31
  8626  0077E6  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8627  0077E8  A4D8               	btfss	status,2,c
  8628  0077EA  D005               	goto	l21028
  8629                           
  8630                           ; BSR set to: 0
  8631                           ;outputs_MC50.c: 142:             {;outputs_MC50.c: 143:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8632  0077EC  0E1A               	movlw	26
  8633  0077EE  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8634                           
  8635                           ;outputs_MC50.c: 144:                dispStruct.display_grp.value_display2=dBlank;
  8636  0077F0  0E20               	movlw	32
  8637  0077F2  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8638                           
  8639                           ;outputs_MC50.c: 145:             }
  8640  0077F4  0012               	return	
  8641  0077F6                     l21028:
  8642                           
  8643                           ; BSR set to: 0
  8644  0077F6  0E20               	movlw	32
  8645  0077F8  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8646  0077FA  A4D8               	btfss	status,2,c
  8647  0077FC  D002               	goto	l21032
  8648                           
  8649                           ; BSR set to: 0
  8650                           ;outputs_MC50.c: 147:             {;outputs_MC50.c: 148:                dispStruct.displ
      +                          ay_grp.value_display2++;
  8651  0077FE  2B73               	incf	(_dispStruct+1)& (0+255),f,b	;volatile
  8652                           
  8653                           ;outputs_MC50.c: 149:             }
  8654  007800  0012               	return	
  8655  007802                     l21032:
  8656                           
  8657                           ; BSR set to: 0
  8658  007802  0E20               	movlw	32
  8659  007804  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8660  007806  A4D8               	btfss	status,2,c
  8661  007808  D002               	goto	l21036
  8662                           
  8663                           ; BSR set to: 0
  8664                           ;outputs_MC50.c: 151:             {;outputs_MC50.c: 152:                dispStruct.displ
      +                          ay_grp.value_display1++;
  8665  00780A  2B72               	incf	_dispStruct& (0+255),f,b	;volatile
  8666                           
  8667                           ;outputs_MC50.c: 153:             }
  8668  00780C  0012               	return	
  8669  00780E                     l21036:
  8670                           
  8671                           ; BSR set to: 0
  8672                           ;outputs_MC50.c: 155:             {;outputs_MC50.c: 156:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8673  00780E  0E1A               	movlw	26
  8674  007810  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8675                           
  8676                           ;outputs_MC50.c: 157:                dispStruct.display_grp.value_display2=dBlank;
  8677  007812  0E20               	movlw	32
  8678  007814  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8679  007816  0012               	return	
  8680  007818                     l21038:
  8681                           
  8682                           ; BSR set to: 0
  8683                           ;outputs_MC50.c: 161:             if(dispStruct.display_grp.value_display2==sA && dispSt
      +                          ruct.display_grp.value_display1==dBlank)
  8684  007818  0E1A               	movlw	26
  8685  00781A  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8686  00781C  A4D8               	btfss	status,2,c
  8687  00781E  D009               	goto	l21044
  8688                           
  8689                           ; BSR set to: 0
  8690  007820  0E20               	movlw	32
  8691  007822  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8692  007824  A4D8               	btfss	status,2,c
  8693  007826  D005               	goto	l21044
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;outputs_MC50.c: 162:             {;outputs_MC50.c: 163:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8697  007828  0E1A               	movlw	26
  8698  00782A  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8699                           
  8700                           ;outputs_MC50.c: 164:                dispStruct.display_grp.value_display2=dBlank;
  8701  00782C  0E20               	movlw	32
  8702  00782E  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8703                           
  8704                           ;outputs_MC50.c: 165:             }
  8705  007830  0012               	return	
  8706  007832                     l21044:
  8707                           
  8708                           ; BSR set to: 0
  8709  007832  0E20               	movlw	32
  8710  007834  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8711  007836  A4D8               	btfss	status,2,c
  8712  007838  D009               	goto	l21050
  8713                           
  8714                           ; BSR set to: 0
  8715  00783A  0E1D               	movlw	29
  8716  00783C  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8717  00783E  A4D8               	btfss	status,2,c
  8718  007840  D005               	goto	l21050
  8719                           
  8720                           ; BSR set to: 0
  8721                           ;outputs_MC50.c: 167:             {;outputs_MC50.c: 168:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8722  007842  0E20               	movlw	32
  8723  007844  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8724                           
  8725                           ;outputs_MC50.c: 169:                dispStruct.display_grp.value_display2=sD;
  8726  007846  0E1D               	movlw	29
  8727  007848  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8728                           
  8729                           ;outputs_MC50.c: 170:             }
  8730  00784A  0012               	return	
  8731  00784C                     l21050:
  8732                           
  8733                           ; BSR set to: 0
  8734  00784C  0E1A               	movlw	26
  8735  00784E  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8736  007850  A4D8               	btfss	status,2,c
  8737  007852  D003               	goto	l21054
  8738                           
  8739                           ; BSR set to: 0
  8740                           ;outputs_MC50.c: 172:             {;outputs_MC50.c: 173:                dispStruct.displ
      +                          ay_grp.value_display1=sF;
  8741  007854  0E1F               	movlw	31
  8742  007856  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8743                           
  8744                           ;outputs_MC50.c: 174:             }
  8745  007858  0012               	return	
  8746  00785A                     l21054:
  8747                           
  8748                           ; BSR set to: 0
  8749  00785A  0E20               	movlw	32
  8750  00785C  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8751  00785E  A4D8               	btfss	status,2,c
  8752  007860  D002               	goto	l21058
  8753                           
  8754                           ; BSR set to: 0
  8755                           ;outputs_MC50.c: 176:             {;outputs_MC50.c: 177:                dispStruct.displ
      +                          ay_grp.value_display2--;
  8756  007862  0773               	decf	(_dispStruct+1)& (0+255),f,b	;volatile
  8757                           
  8758                           ;outputs_MC50.c: 178:             }
  8759  007864  0012               	return	
  8760  007866                     l21058:
  8761                           
  8762                           ; BSR set to: 0
  8763  007866  0E20               	movlw	32
  8764  007868  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8765  00786A  A4D8               	btfss	status,2,c
  8766  00786C  D002               	goto	l21062
  8767                           
  8768                           ; BSR set to: 0
  8769                           ;outputs_MC50.c: 180:             {;outputs_MC50.c: 181:                dispStruct.displ
      +                          ay_grp.value_display1--;
  8770  00786E  0772               	decf	_dispStruct& (0+255),f,b	;volatile
  8771                           
  8772                           ;outputs_MC50.c: 182:             }
  8773  007870  0012               	return	
  8774  007872                     l21062:
  8775                           
  8776                           ; BSR set to: 0
  8777                           ;outputs_MC50.c: 184:             {;outputs_MC50.c: 185:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8778  007872  0E1A               	movlw	26
  8779  007874  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8780                           
  8781                           ;outputs_MC50.c: 186:                dispStruct.display_grp.value_display2=dBlank;
  8782  007876  0E20               	movlw	32
  8783  007878  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8784  00787A  0012               	return	
  8785  00787C                     l21066:
  8786                           
  8787                           ; BSR set to: 0
  8788  00787C  5012               	movf	SetSegmentValueLearn@direction^0,w,c
  8789  00787E  6E10               	movwf	??_SetSegmentValueLearn^0,c
  8790  007880  6A11               	clrf	(??_SetSegmentValueLearn+1)^0,c
  8791                           
  8792                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8793                           ; Switch size 1, requested type "simple"
  8794                           ; Number of cases is 1, Range of values is 0 to 0
  8795                           ; switch strategies available:
  8796                           ; Name         Instructions Cycles
  8797                           ; simple_byte            4     3 (average)
  8798                           ;	Chosen strategy is simple_byte
  8799  007882  5011               	movf	(??_SetSegmentValueLearn+1)^0,w,c
  8800  007884  0A00               	xorlw	0	; case 0
  8801  007886  A4D8               	btfss	status,2,c
  8802  007888  0012               	return	
  8803                           
  8804                           ; BSR set to: 0
  8805                           ; Switch size 1, requested type "simple"
  8806                           ; Number of cases is 2, Range of values is 0 to 1
  8807                           ; switch strategies available:
  8808                           ; Name         Instructions Cycles
  8809                           ; simple_byte            7     4 (average)
  8810                           ;	Chosen strategy is simple_byte
  8811  00788A  5010               	movf	??_SetSegmentValueLearn^0,w,c
  8812  00788C  0A00               	xorlw	0	; case 0
  8813  00788E  B4D8               	btfsc	status,2,c
  8814  007890  D7C3               	goto	l21038
  8815  007892  0A01               	xorlw	1	; case 1
  8816  007894  A4D8               	btfss	status,2,c
  8817  007896  0012               	return	
  8818  007898  D78B               	goto	l21012
  8819  00789A                     __end_of_SetSegmentValueLearn:
  8820                           	callstack 0
  8821                           
  8822 ;; *************** function ___lldiv *****************
  8823 ;; Defined at:
  8824 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  8825 ;; Parameters:    Size  Location     Type
  8826 ;;  dividend        4   15[COMRAM] unsigned long 
  8827 ;;  divisor         4   19[COMRAM] unsigned long 
  8828 ;; Auto vars:     Size  Location     Type
  8829 ;;  quotient        4   23[COMRAM] unsigned long 
  8830 ;;  counter         1   27[COMRAM] unsigned char 
  8831 ;; Return value:  Size  Location     Type
  8832 ;;                  4   15[COMRAM] unsigned long 
  8833 ;; Registers used:
  8834 ;;		wreg, status,2, status,0
  8835 ;; Tracked objects:
  8836 ;;		On entry : 0/1
  8837 ;;		On exit  : 0/0
  8838 ;;		Unchanged: 0/0
  8839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8840 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8841 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8843 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8844 ;;Total ram usage:       13 bytes
  8845 ;; Hardware stack levels used: 1
  8846 ;; Hardware stack levels required when called: 4
  8847 ;; This function calls:
  8848 ;;		Nothing
  8849 ;; This function is called by:
  8850 ;;		_sm_execute_menuConfiguration
  8851 ;; This function uses a non-reentrant model
  8852 ;;
  8853                           
  8854                           	psect	text16
  8855  00871A                     __ptext16:
  8856                           	callstack 0
  8857  00871A                     ___lldiv:
  8858                           	callstack 24
  8859                           
  8860                           ; BSR set to: 0
  8861                           ;incstack = 0
  8862  00871A  0E00               	movlw	0
  8863  00871C  6E18               	movwf	___lldiv@quotient^0,c
  8864  00871E  0E00               	movlw	0
  8865  008720  6E19               	movwf	(___lldiv@quotient+1)^0,c
  8866  008722  0E00               	movlw	0
  8867  008724  6E1A               	movwf	(___lldiv@quotient+2)^0,c
  8868  008726  0E00               	movlw	0
  8869  008728  6E1B               	movwf	(___lldiv@quotient+3)^0,c
  8870  00872A  5014               	movf	___lldiv@divisor^0,w,c
  8871  00872C  1015               	iorwf	(___lldiv@divisor+1)^0,w,c
  8872  00872E  1016               	iorwf	(___lldiv@divisor+2)^0,w,c
  8873  008730  1017               	iorwf	(___lldiv@divisor+3)^0,w,c
  8874  008732  B4D8               	btfsc	status,2,c
  8875  008734  D02A               	goto	l3842
  8876  008736  0E01               	movlw	1
  8877  008738  6E1C               	movwf	___lldiv@counter^0,c
  8878  00873A  D006               	goto	l22790
  8879  00873C                     l22788:
  8880  00873C  90D8               	bcf	status,0,c
  8881  00873E  3614               	rlcf	___lldiv@divisor^0,f,c
  8882  008740  3615               	rlcf	(___lldiv@divisor+1)^0,f,c
  8883  008742  3616               	rlcf	(___lldiv@divisor+2)^0,f,c
  8884  008744  3617               	rlcf	(___lldiv@divisor+3)^0,f,c
  8885  008746  2A1C               	incf	___lldiv@counter^0,f,c
  8886  008748                     l22790:
  8887  008748  AE17               	btfss	(___lldiv@divisor+3)^0,7,c
  8888  00874A  D7F8               	goto	l22788
  8889  00874C                     u26250:
  8890  00874C  90D8               	bcf	status,0,c
  8891  00874E  3618               	rlcf	___lldiv@quotient^0,f,c
  8892  008750  3619               	rlcf	(___lldiv@quotient+1)^0,f,c
  8893  008752  361A               	rlcf	(___lldiv@quotient+2)^0,f,c
  8894  008754  361B               	rlcf	(___lldiv@quotient+3)^0,f,c
  8895  008756  5014               	movf	___lldiv@divisor^0,w,c
  8896  008758  5C10               	subwf	___lldiv@dividend^0,w,c
  8897  00875A  5015               	movf	(___lldiv@divisor+1)^0,w,c
  8898  00875C  5811               	subwfb	(___lldiv@dividend+1)^0,w,c
  8899  00875E  5016               	movf	(___lldiv@divisor+2)^0,w,c
  8900  008760  5812               	subwfb	(___lldiv@dividend+2)^0,w,c
  8901  008762  5017               	movf	(___lldiv@divisor+3)^0,w,c
  8902  008764  5813               	subwfb	(___lldiv@dividend+3)^0,w,c
  8903  008766  A0D8               	btfss	status,0,c
  8904  008768  D009               	goto	l22800
  8905  00876A  5014               	movf	___lldiv@divisor^0,w,c
  8906  00876C  5E10               	subwf	___lldiv@dividend^0,f,c
  8907  00876E  5015               	movf	(___lldiv@divisor+1)^0,w,c
  8908  008770  5A11               	subwfb	(___lldiv@dividend+1)^0,f,c
  8909  008772  5016               	movf	(___lldiv@divisor+2)^0,w,c
  8910  008774  5A12               	subwfb	(___lldiv@dividend+2)^0,f,c
  8911  008776  5017               	movf	(___lldiv@divisor+3)^0,w,c
  8912  008778  5A13               	subwfb	(___lldiv@dividend+3)^0,f,c
  8913  00877A  8018               	bsf	___lldiv@quotient^0,0,c
  8914  00877C                     l22800:
  8915  00877C  90D8               	bcf	status,0,c
  8916  00877E  3217               	rrcf	(___lldiv@divisor+3)^0,f,c
  8917  008780  3216               	rrcf	(___lldiv@divisor+2)^0,f,c
  8918  008782  3215               	rrcf	(___lldiv@divisor+1)^0,f,c
  8919  008784  3214               	rrcf	___lldiv@divisor^0,f,c
  8920  008786  2E1C               	decfsz	___lldiv@counter^0,f,c
  8921  008788  D7E1               	goto	u26250
  8922  00878A                     l3842:
  8923  00878A  C018  F010         	movff	___lldiv@quotient,?___lldiv
  8924  00878E  C019  F011         	movff	___lldiv@quotient+1,?___lldiv+1
  8925  008792  C01A  F012         	movff	___lldiv@quotient+2,?___lldiv+2
  8926  008796  C01B  F013         	movff	___lldiv@quotient+3,?___lldiv+3
  8927  00879A  0012               	return		;funcret
  8928  00879C                     __end_of___lldiv:
  8929                           	callstack 0
  8930                           
  8931 ;; *************** function _sm_execute_ControlGate *****************
  8932 ;; Defined at:
  8933 ;;		line 128 in file "sm_ControlGate_MC50.c"
  8934 ;; Parameters:    Size  Location     Type
  8935 ;;  psm             2   15[BANK0 ] PTR struct .
  8936 ;;		 -> controlGate_stateMachine(11), 
  8937 ;; Auto vars:     Size  Location     Type
  8938 ;;  typeOpenOrde    1   19[BANK0 ] enum E10372
  8939 ;; Return value:  Size  Location     Type
  8940 ;;                  1    wreg      void 
  8941 ;; Registers used:
  8942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  8943 ;; Tracked objects:
  8944 ;;		On entry : 3F/0
  8945 ;;		On exit  : 0/0
  8946 ;;		Unchanged: 0/0
  8947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8948 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8949 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8950 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8951 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8952 ;;Total ram usage:        5 bytes
  8953 ;; Hardware stack levels used: 1
  8954 ;; Hardware stack levels required when called: 15
  8955 ;; This function calls:
  8956 ;;		_GetOpenOrder
  8957 ;;		_SetSegmentValueIntermitent
  8958 ;;		_WaitPreFlash
  8959 ;;		_actionZone_Closed
  8960 ;;		_actionZone_Closing
  8961 ;;		_actionZone_Opened
  8962 ;;		_actionZone_Opening
  8963 ;;		_sm_execute_ControlLearning
  8964 ;;		_sm_send_event
  8965 ;; This function is called by:
  8966 ;;		_main
  8967 ;; This function uses a non-reentrant model
  8968 ;;
  8969                           
  8970                           	psect	text17
  8971  00442A                     __ptext17:
  8972                           	callstack 0
  8973  00442A                     _sm_execute_ControlGate:
  8974                           	callstack 15
  8975                           
  8976                           ; BSR set to: 0
  8977                           ;sm_ControlGate_MC50.c: 129:     TypeCMD typeOpenOrder;;sm_ControlGate_MC50.c: 133:     
      +                          if ( (main_stateMachine.current_state == st_MenuConfiguration) && (menuConfiguration_sta
      +                          teMachine.current_state != st_LearningMode) )
  8978                           
  8979                           ;incstack = 0
  8980  00442A  0101               	movlb	1	; () banked
  8981  00442C  05F1               	decf	_main_stateMachine& (0+255),w,b
  8982  00442E  11F2               	iorwf	(_main_stateMachine+1)& (0+255),w,b
  8983  004430  A4D8               	btfss	status,2,c
  8984  004432  D006               	goto	l26152
  8985                           
  8986                           ; BSR set to: 1
  8987  004434  0E06               	movlw	6
  8988  004436  0102               	movlb	2	; () banked
  8989  004438  19BD               	xorwf	_menuConfiguration_stateMachine& (0+255),w,b
  8990  00443A  11BE               	iorwf	(_menuConfiguration_stateMachine+1)& (0+255),w,b
  8991  00443C  A4D8               	btfss	status,2,c
  8992  00443E  0012               	return	
  8993  004440                     l26152:
  8994                           
  8995                           ;sm_ControlGate_MC50.c: 137:         if (var_sys.preflashingcontrol == YES){
  8996  004440  0101               	movlb	1	; () banked
  8997  004442  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
  8998  004444  A4D8               	btfss	status,2,c
  8999  004446  D0CE               	goto	l26226
  9000                           
  9001                           ; BSR set to: 1
  9002                           ;sm_ControlGate_MC50.c: 139:         WaitPreFlash();
  9003  004448  ECB5  F045         	call	_WaitPreFlash	;wreg free
  9004  00444C  D0CB               	goto	l26226
  9005  00444E                     l26156:
  9006                           
  9007                           ; BSR set to: 0
  9008                           ;sm_ControlGate_MC50.c: 145:         {;sm_ControlGate_MC50.c: 148:             if (psm->
      +                          last_event == ev_GateClosed) {
  9009  00444E  EE20 F004          	lfsr	2,4
  9010  004452  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9011  004454  26D9               	addwf	fsr2l,f,c
  9012  004456  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9013  004458  22DA               	addwfc	fsr2h,f,c
  9014  00445A  0E0A               	movlw	10
  9015  00445C  18DE               	xorwf	postinc2,w,c
  9016  00445E  10DE               	iorwf	postinc2,w,c
  9017  004460  A4D8               	btfss	status,2,c
  9018  004462  D006               	goto	l26160
  9019  004464                     u33220:
  9020                           
  9021                           ; BSR set to: 0
  9022                           ;sm_ControlGate_MC50.c: 149:                 psm->current_state = st_Closed;
  9023  004464  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9024  004468  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9025  00446C  0E01               	movlw	1
  9026  00446E  D0B5               	goto	L55
  9027  004470                     l26160:
  9028                           
  9029                           ; BSR set to: 0
  9030  004470  EE20 F004          	lfsr	2,4
  9031  004474  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9032  004476  26D9               	addwf	fsr2l,f,c
  9033  004478  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9034  00447A  22DA               	addwfc	fsr2h,f,c
  9035  00447C  0E0B               	movlw	11
  9036  00447E  18DE               	xorwf	postinc2,w,c
  9037  004480  10DE               	iorwf	postinc2,w,c
  9038  004482  A4D8               	btfss	status,2,c
  9039  004484  D0CF               	goto	l26228
  9040  004486  D038               	goto	u33290
  9041  004488                     l26164:
  9042                           
  9043                           ; BSR set to: 0
  9044                           ;sm_ControlGate_MC50.c: 160:         {;sm_ControlGate_MC50.c: 161:             if (psm->
      +                          last_event == ev_OpenGate) {
  9045  004488  EE20 F004          	lfsr	2,4
  9046  00448C  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9047  00448E  26D9               	addwf	fsr2l,f,c
  9048  004490  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9049  004492  22DA               	addwfc	fsr2h,f,c
  9050  004494  0E0C               	movlw	12
  9051  004496  18DE               	xorwf	postinc2,w,c
  9052  004498  10DE               	iorwf	postinc2,w,c
  9053  00449A  A4D8               	btfss	status,2,c
  9054  00449C  D072               	goto	l26212
  9055  00449E                     u33240:
  9056                           
  9057                           ; BSR set to: 0
  9058                           ;sm_ControlGate_MC50.c: 162:                 psm->current_state = st_Opening;
  9059  00449E  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9060  0044A2  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9061  0044A6  0E02               	movlw	2
  9062  0044A8  D098               	goto	L55
  9063  0044AA                     l26172:
  9064                           
  9065                           ; BSR set to: 0
  9066                           ;sm_ControlGate_MC50.c: 169:         {;sm_ControlGate_MC50.c: 170:             if (psm->
      +                          last_event == ev_StopGate) {
  9067  0044AA  EE20 F004          	lfsr	2,4
  9068  0044AE  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9069  0044B0  26D9               	addwf	fsr2l,f,c
  9070  0044B2  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9071  0044B4  22DA               	addwfc	fsr2h,f,c
  9072  0044B6  0E0D               	movlw	13
  9073  0044B8  18DE               	xorwf	postinc2,w,c
  9074  0044BA  10DE               	iorwf	postinc2,w,c
  9075  0044BC  B4D8               	btfsc	status,2,c
  9076  0044BE  D01C               	goto	u33290
  9077                           
  9078                           ; BSR set to: 0
  9079                           
  9080                           ;sm_ControlGate_MC50.c: 172:             } else if (psm->last_event == ev_CloseGate) {
  9081                           
  9082                           ; BSR set to: 0
  9083                           ;sm_ControlGate_MC50.c: 171:                 psm->current_state = st_Opened;
  9084  0044C0  EE20 F004          	lfsr	2,4
  9085  0044C4  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9086  0044C6  26D9               	addwf	fsr2l,f,c
  9087  0044C8  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9088  0044CA  22DA               	addwfc	fsr2h,f,c
  9089  0044CC  0E0E               	movlw	14
  9090  0044CE  18DE               	xorwf	postinc2,w,c
  9091  0044D0  10DE               	iorwf	postinc2,w,c
  9092  0044D2  A4D8               	btfss	status,2,c
  9093  0044D4  D02D               	goto	L131
  9094  0044D6                     u33270:
  9095                           
  9096                           ; BSR set to: 0
  9097                           ;sm_ControlGate_MC50.c: 173:                 psm->current_state = st_Closing;
  9098  0044D6  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9099  0044DA  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9100  0044DE  0E03               	movlw	3
  9101  0044E0  D07C               	goto	L55
  9102  0044E2                     l26184:
  9103                           
  9104                           ; BSR set to: 0
  9105                           ;sm_ControlGate_MC50.c: 180:         {;sm_ControlGate_MC50.c: 181:             if (psm->
      +                          last_event == ev_StopGate) {
  9106  0044E2  EE20 F004          	lfsr	2,4
  9107  0044E6  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9108  0044E8  26D9               	addwf	fsr2l,f,c
  9109  0044EA  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9110  0044EC  22DA               	addwfc	fsr2h,f,c
  9111  0044EE  0E0D               	movlw	13
  9112  0044F0  18DE               	xorwf	postinc2,w,c
  9113  0044F2  10DE               	iorwf	postinc2,w,c
  9114  0044F4  A4D8               	btfss	status,2,c
  9115  0044F6  D006               	goto	l26188
  9116  0044F8                     u33290:
  9117                           
  9118                           ; BSR set to: 0
  9119                           ;sm_ControlGate_MC50.c: 182:                 psm->current_state = st_Opened;
  9120  0044F8  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9121  0044FC  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9122  004500  0E04               	movlw	4
  9123  004502  D06B               	goto	L55
  9124  004504                     l26188:
  9125                           
  9126                           ; BSR set to: 0
  9127  004504  EE20 F004          	lfsr	2,4
  9128  004508  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9129  00450A  26D9               	addwf	fsr2l,f,c
  9130  00450C  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9131  00450E  22DA               	addwfc	fsr2h,f,c
  9132  004510  0E0F               	movlw	15
  9133  004512  18DE               	xorwf	postinc2,w,c
  9134  004514  10DE               	iorwf	postinc2,w,c
  9135  004516  B4D8               	btfsc	status,2,c
  9136  004518  D7A5               	goto	u33220
  9137                           
  9138                           ; BSR set to: 0
  9139                           
  9140                           ;sm_ControlGate_MC50.c: 185:             } else if (psm->last_event == ev_OpenGate) {
  9141                           
  9142                           ; BSR set to: 0
  9143                           ;sm_ControlGate_MC50.c: 184:                 psm->current_state = st_Closed;
  9144  00451A  EE20 F004          	lfsr	2,4
  9145  00451E  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9146  004520  26D9               	addwf	fsr2l,f,c
  9147  004522  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9148  004524  22DA               	addwfc	fsr2h,f,c
  9149  004526  0E0C               	movlw	12
  9150  004528  18DE               	xorwf	postinc2,w,c
  9151  00452A  10DE               	iorwf	postinc2,w,c
  9152  00452C  B4D8               	btfsc	status,2,c
  9153  00452E  D7B7               	goto	u33240
  9154  004530                     L131:
  9155                           
  9156                           ; BSR set to: 0
  9157                           
  9158                           ;sm_ControlGate_MC50.c: 187:             } else if (psm->last_event == ev_ErrorGate) {
  9159                           
  9160                           ; BSR set to: 0
  9161                           ;sm_ControlGate_MC50.c: 186:                 psm->current_state = st_Opening;
  9162  004530  EE20 F004          	lfsr	2,4
  9163  004534  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9164  004536  26D9               	addwf	fsr2l,f,c
  9165  004538  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9166  00453A  22DA               	addwfc	fsr2h,f,c
  9167  00453C  0E10               	movlw	16
  9168  00453E  D044               	goto	L128
  9169  004540                     l26200:
  9170                           
  9171                           ; BSR set to: 0
  9172                           ;sm_ControlGate_MC50.c: 193:         {;sm_ControlGate_MC50.c: 194:             if (psm->
      +                          last_event == ev_CloseGate) {
  9173  004540  EE20 F004          	lfsr	2,4
  9174  004544  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9175  004546  26D9               	addwf	fsr2l,f,c
  9176  004548  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9177  00454A  22DA               	addwfc	fsr2h,f,c
  9178  00454C  0E0E               	movlw	14
  9179  00454E  18DE               	xorwf	postinc2,w,c
  9180  004550  10DE               	iorwf	postinc2,w,c
  9181  004552  B4D8               	btfsc	status,2,c
  9182  004554  D7C0               	goto	u33270
  9183                           
  9184                           ; BSR set to: 0
  9185                           
  9186                           ;sm_ControlGate_MC50.c: 196:             } else if (psm->last_event == ev_OpenGate) {
  9187                           
  9188                           ; BSR set to: 0
  9189                           ;sm_ControlGate_MC50.c: 195:                 psm->current_state = st_Closing;
  9190  004556  EE20 F004          	lfsr	2,4
  9191  00455A  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9192  00455C  26D9               	addwf	fsr2l,f,c
  9193  00455E  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9194  004560  22DA               	addwfc	fsr2h,f,c
  9195  004562  0E0C               	movlw	12
  9196  004564  18DE               	xorwf	postinc2,w,c
  9197  004566  10DE               	iorwf	postinc2,w,c
  9198  004568  B4D8               	btfsc	status,2,c
  9199  00456A  D799               	goto	u33240
  9200                           
  9201                           ; BSR set to: 0
  9202                           
  9203                           ;sm_ControlGate_MC50.c: 198:             } else if (psm->last_event == ev_ErrorGate) {
  9204                           
  9205                           ; BSR set to: 0
  9206                           ;sm_ControlGate_MC50.c: 197:                 psm->current_state = st_Opening;
  9207  00456C  EE20 F004          	lfsr	2,4
  9208  004570  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9209  004572  26D9               	addwf	fsr2l,f,c
  9210  004574  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9211  004576  22DA               	addwfc	fsr2h,f,c
  9212  004578  0E10               	movlw	16
  9213  00457A  18DE               	xorwf	postinc2,w,c
  9214  00457C  10DE               	iorwf	postinc2,w,c
  9215  00457E  B4D8               	btfsc	status,2,c
  9216  004580  D027               	goto	L129
  9217  004582                     l26212:
  9218                           
  9219                           ; BSR set to: 0
  9220  004582  EE20 F004          	lfsr	2,4
  9221  004586  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9222  004588  26D9               	addwf	fsr2l,f,c
  9223  00458A  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9224  00458C  22DA               	addwfc	fsr2h,f,c
  9225  00458E  0E14               	movlw	20
  9226  004590  18DE               	xorwf	postinc2,w,c
  9227  004592  10DE               	iorwf	postinc2,w,c
  9228  004594  A4D8               	btfss	status,2,c
  9229  004596  D046               	goto	l26228
  9230                           
  9231                           ; BSR set to: 0
  9232                           ;sm_ControlGate_MC50.c: 205:                 psm->current_state = st_Learning;
  9233  004598  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9234  00459C  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9235  0045A0  0E05               	movlw	5
  9236  0045A2  D01B               	goto	L55
  9237  0045A4                     l26216:
  9238                           
  9239                           ; BSR set to: 0
  9240                           ;sm_ControlGate_MC50.c: 217:         {;sm_ControlGate_MC50.c: 218:             if (psm->
      +                          last_event == ev_LearningComplete) {
  9241  0045A4  EE20 F004          	lfsr	2,4
  9242  0045A8  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9243  0045AA  26D9               	addwf	fsr2l,f,c
  9244  0045AC  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9245  0045AE  22DA               	addwfc	fsr2h,f,c
  9246  0045B0  0E13               	movlw	19
  9247  0045B2  18DE               	xorwf	postinc2,w,c
  9248  0045B4  10DE               	iorwf	postinc2,w,c
  9249  0045B6  B4D8               	btfsc	status,2,c
  9250  0045B8  D755               	goto	u33220
  9251                           
  9252                           ; BSR set to: 0
  9253                           
  9254                           ;sm_ControlGate_MC50.c: 220:             } else if (psm->last_event == ev_ErrorLearning)
      +                           {
  9255                           
  9256                           ; BSR set to: 0
  9257                           ;sm_ControlGate_MC50.c: 219:                 psm->current_state = st_Closed;
  9258  0045BA  EE20 F004          	lfsr	2,4
  9259  0045BE  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9260  0045C0  26D9               	addwf	fsr2l,f,c
  9261  0045C2  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9262  0045C4  22DA               	addwfc	fsr2h,f,c
  9263  0045C6  0E12               	movlw	18
  9264  0045C8                     L128:
  9265  0045C8  18DE               	xorwf	postinc2,w,c
  9266  0045CA  10DE               	iorwf	postinc2,w,c
  9267  0045CC  A4D8               	btfss	status,2,c
  9268  0045CE  D02A               	goto	l26228
  9269  0045D0                     L129:
  9270                           
  9271                           ; BSR set to: 0
  9272                           ;sm_ControlGate_MC50.c: 221:                 psm->current_state = st_Idle;
  9273  0045D0  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9274  0045D4  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9275  0045D8  0E00               	movlw	0
  9276  0045DA                     L55:
  9277  0045DA  6EDE               	movwf	postinc2,c
  9278  0045DC  0E00               	movlw	0
  9279  0045DE  6EDD               	movwf	postdec2,c
  9280  0045E0  D021               	goto	l26228
  9281  0045E2                     l2653:
  9282                           
  9283                           ; BSR set to: 0
  9284  0045E2  D7FF               	goto	l2653
  9285  0045E4                     l26226:
  9286                           
  9287                           ; BSR set to: 1
  9288  0045E4  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9289  0045E8  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9290  0045EC  50DF               	movf	indf2,w,c
  9291  0045EE  0100               	movlb	0	; () banked
  9292  0045F0  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9293  0045F2  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9294                           
  9295                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9296                           ; Switch size 1, requested type "simple"
  9297                           ; Number of cases is 1, Range of values is 0 to 0
  9298                           ; switch strategies available:
  9299                           ; Name         Instructions Cycles
  9300                           ; simple_byte            4     3 (average)
  9301                           ;	Chosen strategy is simple_byte
  9302  0045F4  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9303  0045F6  0A00               	xorlw	0	; case 0
  9304  0045F8  A4D8               	btfss	status,2,c
  9305  0045FA  D7F3               	goto	l2653
  9306                           
  9307                           ; BSR set to: 0
  9308                           ; Switch size 1, requested type "simple"
  9309                           ; Number of cases is 6, Range of values is 0 to 5
  9310                           ; switch strategies available:
  9311                           ; Name         Instructions Cycles
  9312                           ; simple_byte           19    10 (average)
  9313                           ;	Chosen strategy is simple_byte
  9314  0045FC  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9315  0045FE  0A00               	xorlw	0	; case 0
  9316  004600  B4D8               	btfsc	status,2,c
  9317  004602  D725               	goto	l26156
  9318  004604  0A01               	xorlw	1	; case 1
  9319  004606  B4D8               	btfsc	status,2,c
  9320  004608  D73F               	goto	l26164
  9321  00460A  0A03               	xorlw	3	; case 2
  9322  00460C  B4D8               	btfsc	status,2,c
  9323  00460E  D74D               	goto	l26172
  9324  004610  0A01               	xorlw	1	; case 3
  9325  004612  B4D8               	btfsc	status,2,c
  9326  004614  D766               	goto	l26184
  9327  004616  0A07               	xorlw	7	; case 4
  9328  004618  B4D8               	btfsc	status,2,c
  9329  00461A  D792               	goto	l26200
  9330  00461C  0A01               	xorlw	1	; case 5
  9331  00461E  B4D8               	btfsc	status,2,c
  9332  004620  D7C1               	goto	l26216
  9333  004622  D7DF               	goto	l2653
  9334  004624                     l26228:
  9335                           
  9336                           ; BSR set to: 0
  9337                           ;sm_ControlGate_MC50.c: 234:     sm_send_event(&controlGate_stateMachine, ev_NULL);
  9338  004624  0EE6               	movlw	low _controlGate_stateMachine
  9339  004626  6E12               	movwf	sm_send_event@psm^0,c
  9340  004628  0E01               	movlw	high _controlGate_stateMachine
  9341  00462A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9342  00462C  0E00               	movlw	0
  9343  00462E  6E15               	movwf	(sm_send_event@event+1)^0,c
  9344  004630  0E00               	movlw	0
  9345  004632  6E14               	movwf	sm_send_event@event^0,c
  9346  004634  ECF7  F047         	call	_sm_send_event	;wreg free
  9347                           
  9348                           ;sm_ControlGate_MC50.c: 239:     switch ((sm_state_ControlGate_t) psm->current_state) {
  9349  004638  D07E               	goto	l26292
  9350  00463A                     l26230:
  9351                           
  9352                           ; BSR set to: 0
  9353                           ;sm_ControlGate_MC50.c: 241:         {;sm_ControlGate_MC50.c: 244:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (5 * (1000/50));
  9354  00463A  0E00               	movlw	0
  9355  00463C  0101               	movlb	1	; () banked
  9356  00463E  6FDD               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9357  004640  0E64               	movlw	100
  9358  004642  6FDC               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9359                           
  9360                           ;sm_ControlGate_MC50.c: 247:             var_sys.PositionIsLost = YES;
  9361  004644  0E01               	movlw	1
  9362  004646  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9363                           
  9364                           ; BSR set to: 1
  9365                           ;sm_ControlGate_MC50.c: 248:             if (var_sys.WorkTimeMaxAlarmState == EmAlarme |
      +                          | var_sys.NumberOffErrors > 3)
  9366  004648  0E02               	movlw	2
  9367  00464A  1942               	xorwf	(_var_sys+66)& (0+255),w,b	;volatile
  9368  00464C  B4D8               	btfsc	status,2,c
  9369  00464E  D003               	goto	u33400
  9370                           
  9371                           ; BSR set to: 1
  9372  004650  0E03               	movlw	3
  9373  004652  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
  9374  004654  D028               	goto	l26252
  9375  004656                     u33400:
  9376                           
  9377                           ; BSR set to: 1
  9378                           ;sm_ControlGate_MC50.c: 249:             {;sm_ControlGate_MC50.c: 252:                 t
      +                          ypeOpenOrder = GetOpenOrder();
  9379  004656  EC98  F02F         	call	_GetOpenOrder	;wreg free
  9380  00465A  0100               	movlb	0	; () banked
  9381  00465C  6FEB               	movwf	sm_execute_ControlGate@typeOpenOrder& (0+255),b
  9382                           
  9383                           ; BSR set to: 0
  9384                           ;sm_ControlGate_MC50.c: 253:                 SetSegmentValueIntermitent(dE,dr, (1000/50)
      +                          );
  9385  00465E  0E14               	movlw	20
  9386  004660  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9387  004662  0E00               	movlw	0
  9388  004664  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9389  004666  0E14               	movlw	20
  9390  004668  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9391  00466A  0E0E               	movlw	14
  9392  00466C  ECB5  F04C         	call	_SetSegmentValueIntermitent
  9393                           
  9394                           ; BSR set to: 1
  9395                           ;sm_ControlGate_MC50.c: 254:                 ts_system.timeSinalizationDigit = ( 500/50)
      +                          ;
  9396  004670  0E00               	movlw	0
  9397  004672  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9398  004674  0E0A               	movlw	10
  9399  004676  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9400                           
  9401                           ; BSR set to: 1
  9402                           ;sm_ControlGate_MC50.c: 255:                 if ((typeOpenOrder != NoCMD) ||(button_stru
      +                          ct.current==0x27 || button_struct.current==0x00 ||button_struct.current==0x17 ))
  9403  004678  0100               	movlb	0	; () banked
  9404  00467A  51EB               	movf	sm_execute_ControlGate@typeOpenOrder& (0+255),w,b
  9405  00467C  A4D8               	btfss	status,2,c
  9406  00467E  D00B               	goto	u33440
  9407                           
  9408                           ; BSR set to: 0
  9409  004680  0E27               	movlw	39
  9410  004682  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  9411  004684  B4D8               	btfsc	status,2,c
  9412  004686  D007               	goto	u33440
  9413                           
  9414                           ; BSR set to: 0
  9415  004688  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9416  00468A  B4D8               	btfsc	status,2,c
  9417  00468C  D004               	goto	u33440
  9418                           
  9419                           ; BSR set to: 0
  9420  00468E  0E17               	movlw	23
  9421  004690  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  9422  004692  A4D8               	btfss	status,2,c
  9423  004694  0012               	return	
  9424  004696                     u33440:
  9425                           
  9426                           ; BSR set to: 0
  9427                           ;sm_ControlGate_MC50.c: 256:                 {;sm_ControlGate_MC50.c: 257:              
      +                                 var_sys.WorkTimeMaxAlarmState = Clear;
  9428  004696  0E00               	movlw	0
  9429  004698  0101               	movlb	1	; () banked
  9430  00469A  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
  9431                           
  9432                           ;sm_ControlGate_MC50.c: 258:                     var_sys.NumberOffErrors = 0;
  9433  00469C  0E00               	movlw	0
  9434  00469E  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9435                           
  9436                           ;sm_ControlGate_MC50.c: 259:                     button_struct.processed=1;
  9437  0046A0  0E01               	movlw	1
  9438  0046A2  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  9439  0046A4  0012               	return	
  9440  0046A6                     l26252:
  9441                           
  9442                           ; BSR set to: 1
  9443                           ;sm_ControlGate_MC50.c: 264:             {;sm_ControlGate_MC50.c: 267:                  
      +                             var_sys.Statedoorcontrol = st_Closed;
  9444  0046A6  0E01               	movlw	1
  9445  0046A8  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
  9446                           
  9447                           ; BSR set to: 1
  9448                           ;sm_ControlGate_MC50.c: 268:                     var_sys.actualCounterMoves++;
  9449  0046AA  0E01               	movlw	1
  9450  0046AC  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
  9451  0046AE  0E00               	movlw	0
  9452  0046B0  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
  9453  0046B2  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
  9454  0046B4  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
  9455                           
  9456                           ; BSR set to: 1
  9457                           ;sm_ControlGate_MC50.c: 269:                     var_sys.Timewalkisactived = 0;
  9458  0046B6  0E00               	movlw	0
  9459  0046B8  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
  9460                           
  9461                           ; BSR set to: 1
  9462                           ;sm_ControlGate_MC50.c: 270:                     var_sys.PositionActual = 0;
  9463  0046BA  0E00               	movlw	0
  9464  0046BC  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
  9465  0046BE  0E00               	movlw	0
  9466  0046C0  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
  9467  0046C2  0E00               	movlw	0
  9468  0046C4  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
  9469  0046C6  0E00               	movlw	0
  9470  0046C8  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
  9471                           
  9472                           ; BSR set to: 1
  9473                           ;sm_ControlGate_MC50.c: 272:                     var_sys.PositionIsLost = NO;
  9474  0046CA  0E00               	movlw	0
  9475  0046CC  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9476                           
  9477                           ; BSR set to: 1
  9478                           ;sm_ControlGate_MC50.c: 273:                     var_sys.NumberOffErrors = 0;
  9479  0046CE  0E00               	movlw	0
  9480  0046D0  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9481                           
  9482                           ; BSR set to: 1
  9483                           ;sm_ControlGate_MC50.c: 274:                     var_sys.StateMotor = Stopped;
  9484  0046D2  0E00               	movlw	0
  9485  0046D4  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9486                           
  9487                           ; BSR set to: 1
  9488                           ;sm_ControlGate_MC50.c: 276:                     ts_system.timeSinalizationDigit = (1000
      +                          /50) * 2;
  9489  0046D6  0E00               	movlw	0
  9490  0046D8  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9491  0046DA  0E28               	movlw	40
  9492  0046DC  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9493                           
  9494                           ; BSR set to: 1
  9495                           ;sm_ControlGate_MC50.c: 277:                     SetSegmentValueIntermitent(dF, dC, ( 20
      +                          0/50));
  9496  0046DE  0E0C               	movlw	12
  9497  0046E0  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9498  0046E2  0E00               	movlw	0
  9499  0046E4  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9500  0046E6  0E04               	movlw	4
  9501  0046E8  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9502  0046EA  0E0F               	movlw	15
  9503  0046EC  ECB5  F04C         	call	_SetSegmentValueIntermitent
  9504                           
  9505                           ; BSR set to: 1
  9506                           ;sm_ControlGate_MC50.c: 278:                     sm_send_event(&controlGate_stateMachine
      +                          , ev_GateClosed);
  9507  0046F0  0EE6               	movlw	low _controlGate_stateMachine
  9508  0046F2  6E12               	movwf	sm_send_event@psm^0,c
  9509  0046F4  0E01               	movlw	high _controlGate_stateMachine
  9510  0046F6  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9511  0046F8  0E00               	movlw	0
  9512  0046FA  6E15               	movwf	(sm_send_event@event+1)^0,c
  9513  0046FC  0E0A               	movlw	10
  9514  0046FE  6E14               	movwf	sm_send_event@event^0,c
  9515  004700  ECF7  F047         	call	_sm_send_event	;wreg free
  9516  004704  0012               	return	
  9517  004706                     l26272:
  9518                           
  9519                           ; BSR set to: 0
  9520                           ;sm_ControlGate_MC50.c: 285:         {;sm_ControlGate_MC50.c: 287:             actionZon
      +                          e_Closed();
  9521  004706  EC8A  F03F         	call	_actionZone_Closed	;wreg free
  9522                           
  9523                           ;sm_ControlGate_MC50.c: 288:         };sm_ControlGate_MC50.c: 289:             break;
  9524  00470A  0012               	return	
  9525  00470C                     l26274:
  9526                           
  9527                           ; BSR set to: 0
  9528                           ;sm_ControlGate_MC50.c: 291:         {;sm_ControlGate_MC50.c: 293:             actionZon
      +                          e_Opening();
  9529  00470C  EC49  F029         	call	_actionZone_Opening	;wreg free
  9530  004710                     l26276:
  9531                           
  9532                           ;sm_ControlGate_MC50.c: 295:             ts_system.TimeStopADCZeroOffsetCalc = (5 * (100
      +                          0/50));
  9533  004710  0E00               	movlw	0
  9534  004712  0101               	movlb	1	; () banked
  9535  004714  6FDD               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9536  004716  0E64               	movlw	100
  9537  004718  6FDC               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9538                           
  9539                           ;sm_ControlGate_MC50.c: 296:         };sm_ControlGate_MC50.c: 297:             break;
  9540  00471A  0012               	return	
  9541  00471C                     l26278:
  9542                           
  9543                           ; BSR set to: 0
  9544                           ;sm_ControlGate_MC50.c: 299:         {;sm_ControlGate_MC50.c: 301:             actionZon
      +                          e_Opened();
  9545  00471C  ECB8  F02D         	call	_actionZone_Opened	;wreg free
  9546  004720  D7F7               	goto	l26276
  9547  004722                     l26282:
  9548                           
  9549                           ; BSR set to: 0
  9550                           ;sm_ControlGate_MC50.c: 307:         {;sm_ControlGate_MC50.c: 309:             actionZon
      +                          e_Closing();
  9551  004722  ECC8  F026         	call	_actionZone_Closing	;wreg free
  9552  004726  D7F4               	goto	l26276
  9553  004728                     l26286:
  9554                           
  9555                           ; BSR set to: 0
  9556                           ;sm_ControlGate_MC50.c: 315:         {;sm_ControlGate_MC50.c: 316:             sm_execut
      +                          e_ControlLearning(&controlLearning_stateMachine);
  9557  004728  0EB2               	movlw	low _controlLearning_stateMachine
  9558  00472A  6FDC               	movwf	sm_execute_ControlLearning@psm& (0+255),b
  9559  00472C  0E02               	movlw	high _controlLearning_stateMachine
  9560  00472E  6FDD               	movwf	(sm_execute_ControlLearning@psm+1)& (0+255),b
  9561  004730  EC38  F011         	call	_sm_execute_ControlLearning	;wreg free
  9562  004734  D7ED               	goto	l26276
  9563  004736                     l26292:
  9564  004736  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9565  00473A  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9566  00473E  50DF               	movf	indf2,w,c
  9567  004740  0100               	movlb	0	; () banked
  9568  004742  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9569  004744  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9570                           
  9571                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9572                           ; Switch size 1, requested type "simple"
  9573                           ; Number of cases is 1, Range of values is 0 to 0
  9574                           ; switch strategies available:
  9575                           ; Name         Instructions Cycles
  9576                           ; simple_byte            4     3 (average)
  9577                           ;	Chosen strategy is simple_byte
  9578  004746  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9579  004748  0A00               	xorlw	0	; case 0
  9580  00474A  A4D8               	btfss	status,2,c
  9581  00474C  0012               	return	
  9582                           
  9583                           ; BSR set to: 0
  9584                           ; Switch size 1, requested type "simple"
  9585                           ; Number of cases is 6, Range of values is 0 to 5
  9586                           ; switch strategies available:
  9587                           ; Name         Instructions Cycles
  9588                           ; simple_byte           19    10 (average)
  9589                           ;	Chosen strategy is simple_byte
  9590  00474E  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9591  004750  0A00               	xorlw	0	; case 0
  9592  004752  B4D8               	btfsc	status,2,c
  9593  004754  D772               	goto	l26230
  9594  004756  0A01               	xorlw	1	; case 1
  9595  004758  B4D8               	btfsc	status,2,c
  9596  00475A  D7D5               	goto	l26272
  9597  00475C  0A03               	xorlw	3	; case 2
  9598  00475E  B4D8               	btfsc	status,2,c
  9599  004760  D7D5               	goto	l26274
  9600  004762  0A01               	xorlw	1	; case 3
  9601  004764  B4D8               	btfsc	status,2,c
  9602  004766  D7DD               	goto	l26282
  9603  004768  0A07               	xorlw	7	; case 4
  9604  00476A  B4D8               	btfsc	status,2,c
  9605  00476C  D7D7               	goto	l26278
  9606  00476E  0A01               	xorlw	1	; case 5
  9607  004770  A4D8               	btfss	status,2,c
  9608  004772  0012               	return	
  9609  004774  D7D9               	goto	l26286
  9610  004776                     __end_of_sm_execute_ControlGate:
  9611                           	callstack 0
  9612                           
  9613 ;; *************** function _sm_execute_ControlLearning *****************
  9614 ;; Defined at:
  9615 ;;		line 29 in file "sm_ControlLearning_MC50.c"
  9616 ;; Parameters:    Size  Location     Type
  9617 ;;  psm             2    4[BANK0 ] PTR struct .
  9618 ;;		 -> controlLearning_stateMachine(11), 
  9619 ;; Auto vars:     Size  Location     Type
  9620 ;;  typeOpenOrde    1   57[COMRAM] enum E10372
  9621 ;; Return value:  Size  Location     Type
  9622 ;;                  1    wreg      void 
  9623 ;; Registers used:
  9624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9625 ;; Tracked objects:
  9626 ;;		On entry : 3F/0
  9627 ;;		On exit  : 0/0
  9628 ;;		Unchanged: 0/0
  9629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9630 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9631 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9632 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9633 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9634 ;;Total ram usage:        5 bytes
  9635 ;; Hardware stack levels used: 1
  9636 ;; Hardware stack levels required when called: 14
  9637 ;; This function calls:
  9638 ;;		_GetOpenOrder
  9639 ;;		_SaveNVM_VarSystem
  9640 ;;		_calculateMean
  9641 ;;		_clearLearningValue
  9642 ;;		_generateErrorLearnig
  9643 ;;		_sm_send_event
  9644 ;; This function is called by:
  9645 ;;		_sm_execute_ControlGate
  9646 ;; This function uses a non-reentrant model
  9647 ;;
  9648                           
  9649                           	psect	text18
  9650  002270                     __ptext18:
  9651                           	callstack 0
  9652  002270                     _sm_execute_ControlLearning:
  9653                           	callstack 15
  9654                           
  9655                           ; BSR set to: 0
  9656                           ;sm_ControlLearning_MC50.c: 31:    TypeCMD typeOpenOrder = GetOpenOrder();
  9657                           
  9658                           ;incstack = 0
  9659  002270  EC98  F02F         	call	_GetOpenOrder	;wreg free
  9660  002274  6E3A               	movwf	sm_execute_ControlLearning@typeOpenOrder^0,c
  9661                           
  9662                           ;sm_ControlLearning_MC50.c: 33:     switch((sm_state_ControlLearning_t) psm->current_sta
      +                          te)
  9663  002276  D0B8               	goto	l23942
  9664  002278                     l23868:
  9665                           
  9666                           ; BSR set to: 0
  9667                           ;sm_ControlLearning_MC50.c: 36:         {;sm_ControlLearning_MC50.c: 37:              if
      +                          ((psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0)&& (var_sys.p
      +                          rograminAutomatic == 0))
  9668  002278  EE20 F004          	lfsr	2,4
  9669  00227C  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9670  00227E  26D9               	addwf	fsr2l,f,c
  9671  002280  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9672  002282  22DA               	addwfc	fsr2h,f,c
  9673  002284  0E0A               	movlw	10
  9674  002286  18DE               	xorwf	postinc2,w,c
  9675  002288  10DE               	iorwf	postinc2,w,c
  9676  00228A  A4D8               	btfss	status,2,c
  9677  00228C  D00D               	goto	l23876
  9678                           
  9679                           ; BSR set to: 0
  9680  00228E  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9681  002290  B4D8               	btfsc	status,2,c
  9682  002292  D00A               	goto	l23876
  9683                           
  9684                           ; BSR set to: 0
  9685  002294  0101               	movlb	1	; () banked
  9686  002296  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9687  002298  A4D8               	btfss	status,2,c
  9688  00229A  D006               	goto	l23876
  9689  00229C                     u28300:
  9690                           
  9691                           ; BSR set to: 1
  9692                           ;sm_ControlLearning_MC50.c: 38:             {;sm_ControlLearning_MC50.c: 39:            
      +                               psm->current_state = st_WaitLearnigOpen;
  9693  00229C  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9694  0022A0  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9695  0022A4  0E02               	movlw	2
  9696  0022A6  D08A               	goto	L66
  9697  0022A8                     l23876:
  9698  0022A8  0100               	movlb	0	; () banked
  9699  0022AA  EE20 F004          	lfsr	2,4
  9700  0022AE  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9701  0022B0  26D9               	addwf	fsr2l,f,c
  9702  0022B2  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9703  0022B4  22DA               	addwfc	fsr2h,f,c
  9704  0022B6  0E0A               	movlw	10
  9705  0022B8  18DE               	xorwf	postinc2,w,c
  9706  0022BA  10DE               	iorwf	postinc2,w,c
  9707  0022BC  A4D8               	btfss	status,2,c
  9708  0022BE  D00D               	goto	l23884
  9709                           
  9710                           ; BSR set to: 0
  9711  0022C0  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9712  0022C2  B4D8               	btfsc	status,2,c
  9713  0022C4  D004               	goto	u28330
  9714                           
  9715                           ; BSR set to: 0
  9716  0022C6  0101               	movlb	1	; () banked
  9717  0022C8  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9718  0022CA  A4D8               	btfss	status,2,c
  9719  0022CC  D006               	goto	l23884
  9720  0022CE                     u28330:
  9721                           
  9722                           ;sm_ControlLearning_MC50.c: 43:             {;sm_ControlLearning_MC50.c: 44:            
      +                               psm->current_state = st_WaitForOpened;
  9723  0022CE  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9724  0022D2  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9725  0022D6  0E04               	movlw	4
  9726  0022D8  D071               	goto	L66
  9727  0022DA                     l23884:
  9728  0022DA  0100               	movlb	0	; () banked
  9729  0022DC  EE20 F004          	lfsr	2,4
  9730  0022E0  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9731  0022E2  26D9               	addwf	fsr2l,f,c
  9732  0022E4  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9733  0022E6  22DA               	addwfc	fsr2h,f,c
  9734  0022E8  0E0B               	movlw	11
  9735  0022EA  18DE               	xorwf	postinc2,w,c
  9736  0022EC  10DE               	iorwf	postinc2,w,c
  9737  0022EE  A4D8               	btfss	status,2,c
  9738  0022F0  D09B               	goto	l23944
  9739                           
  9740                           ; BSR set to: 0
  9741                           ;sm_ControlLearning_MC50.c: 47:             {;sm_ControlLearning_MC50.c: 48:            
      +                               psm->current_state = st_WaitForClosed;
  9742  0022F2  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9743  0022F6  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9744  0022FA  0E01               	movlw	1
  9745  0022FC  D05F               	goto	L66
  9746  0022FE                     l23888:
  9747                           
  9748                           ; BSR set to: 0
  9749                           ;sm_ControlLearning_MC50.c: 53:         {;sm_ControlLearning_MC50.c: 54:             if(
      +                          (psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0) && (var_sys.p
      +                          rograminAutomatic == 0))
  9750  0022FE  EE20 F004          	lfsr	2,4
  9751  002302  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9752  002304  26D9               	addwf	fsr2l,f,c
  9753  002306  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9754  002308  22DA               	addwfc	fsr2h,f,c
  9755  00230A  0E0A               	movlw	10
  9756  00230C  18DE               	xorwf	postinc2,w,c
  9757  00230E  10DE               	iorwf	postinc2,w,c
  9758  002310  A4D8               	btfss	status,2,c
  9759  002312  D007               	goto	l23896
  9760                           
  9761                           ; BSR set to: 0
  9762  002314  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9763  002316  B4D8               	btfsc	status,2,c
  9764  002318  D004               	goto	l23896
  9765                           
  9766                           ; BSR set to: 0
  9767  00231A  0101               	movlb	1	; () banked
  9768  00231C  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9769  00231E  B4D8               	btfsc	status,2,c
  9770  002320  D7BD               	goto	u28300
  9771  002322                     l23896:
  9772  002322  0100               	movlb	0	; () banked
  9773  002324  EE20 F004          	lfsr	2,4
  9774  002328  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9775  00232A  26D9               	addwf	fsr2l,f,c
  9776  00232C  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9777  00232E  22DA               	addwfc	fsr2h,f,c
  9778  002330  0E0A               	movlw	10
  9779  002332  18DE               	xorwf	postinc2,w,c
  9780  002334  10DE               	iorwf	postinc2,w,c
  9781  002336  A4D8               	btfss	status,2,c
  9782  002338  D007               	goto	l23904
  9783                           
  9784                           ; BSR set to: 0
  9785  00233A  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9786  00233C  B4D8               	btfsc	status,2,c
  9787  00233E  D7C7               	goto	u28330
  9788                           
  9789                           ; BSR set to: 0
  9790  002340  0101               	movlb	1	; () banked
  9791  002342  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9792  002344  B4D8               	btfsc	status,2,c
  9793  002346  D7C3               	goto	u28330
  9794  002348                     l23904:
  9795  002348  0100               	movlb	0	; () banked
  9796  00234A                     L68:
  9797  00234A  EE20 F004          	lfsr	2,4
  9798  00234E  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9799  002350  26D9               	addwf	fsr2l,f,c
  9800  002352  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9801  002354  22DA               	addwfc	fsr2h,f,c
  9802  002356  0E10               	movlw	16
  9803  002358  18DE               	xorwf	postinc2,w,c
  9804  00235A  10DE               	iorwf	postinc2,w,c
  9805  00235C  A4D8               	btfss	status,2,c
  9806  00235E  D064               	goto	l23944
  9807  002360  D03C               	goto	L130
  9808  002362                     l23908:
  9809                           
  9810                           ; BSR set to: 0
  9811                           ;sm_ControlLearning_MC50.c: 70:         {;sm_ControlLearning_MC50.c: 71:             if(
      +                          psm->last_event==ev_GateOpened)
  9812  002362  EE20 F004          	lfsr	2,4
  9813  002366  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9814  002368  26D9               	addwf	fsr2l,f,c
  9815  00236A  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9816  00236C  22DA               	addwfc	fsr2h,f,c
  9817  00236E  0E0B               	movlw	11
  9818  002370  18DE               	xorwf	postinc2,w,c
  9819  002372  10DE               	iorwf	postinc2,w,c
  9820  002374  A4D8               	btfss	status,2,c
  9821  002376  D7E9               	goto	L68
  9822                           
  9823                           ; BSR set to: 0
  9824                           ;sm_ControlLearning_MC50.c: 72:             {;sm_ControlLearning_MC50.c: 73:            
      +                               psm->current_state = st_WaitLearnigClose;
  9825  002378  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9826  00237C  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9827  002380  0E03               	movlw	3
  9828  002382  D01C               	goto	L66
  9829  002384                     l23916:
  9830                           
  9831                           ; BSR set to: 0
  9832                           ;sm_ControlLearning_MC50.c: 82:         {;sm_ControlLearning_MC50.c: 83:             if(
      +                          psm->last_event==ev_GateClosed)
  9833  002384  EE20 F004          	lfsr	2,4
  9834  002388  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9835  00238A  26D9               	addwf	fsr2l,f,c
  9836  00238C  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9837  00238E  22DA               	addwfc	fsr2h,f,c
  9838  002390  0E0A               	movlw	10
  9839  002392  18DE               	xorwf	postinc2,w,c
  9840  002394  10DE               	iorwf	postinc2,w,c
  9841  002396  A4D8               	btfss	status,2,c
  9842  002398  D7D8               	goto	L68
  9843  00239A  D799               	goto	u28330
  9844  00239C                     l23924:
  9845                           
  9846                           ; BSR set to: 0
  9847                           ;sm_ControlLearning_MC50.c: 94:         {;sm_ControlLearning_MC50.c: 95:             if(
      +                          psm->last_event==ev_GateOpened)
  9848  00239C  EE20 F004          	lfsr	2,4
  9849  0023A0  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9850  0023A2  26D9               	addwf	fsr2l,f,c
  9851  0023A4  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9852  0023A6  22DA               	addwfc	fsr2h,f,c
  9853  0023A8  0E0B               	movlw	11
  9854  0023AA  18DE               	xorwf	postinc2,w,c
  9855  0023AC  10DE               	iorwf	postinc2,w,c
  9856  0023AE  A4D8               	btfss	status,2,c
  9857  0023B0  D7CC               	goto	L68
  9858                           
  9859                           ; BSR set to: 0
  9860                           ;sm_ControlLearning_MC50.c: 96:             {;sm_ControlLearning_MC50.c: 97:            
      +                               psm->current_state = st_WaitForEndLearn;
  9861  0023B2  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9862  0023B6  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9863  0023BA  0E05               	movlw	5
  9864  0023BC                     L66:
  9865  0023BC  6EDE               	movwf	postinc2,c
  9866  0023BE  0E00               	movlw	0
  9867  0023C0  6EDD               	movwf	postdec2,c
  9868  0023C2  D032               	goto	l23944
  9869  0023C4                     l23932:
  9870                           
  9871                           ; BSR set to: 0
  9872                           ;sm_ControlLearning_MC50.c: 106:         {;sm_ControlLearning_MC50.c: 107:             i
      +                          f(psm->last_event==ev_GateClosed)
  9873  0023C4  EE20 F004          	lfsr	2,4
  9874  0023C8  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9875  0023CA  26D9               	addwf	fsr2l,f,c
  9876  0023CC  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9877  0023CE  22DA               	addwfc	fsr2h,f,c
  9878  0023D0  0E0A               	movlw	10
  9879  0023D2  18DE               	xorwf	postinc2,w,c
  9880  0023D4  10DE               	iorwf	postinc2,w,c
  9881  0023D6  A4D8               	btfss	status,2,c
  9882  0023D8  D7B8               	goto	L68
  9883  0023DA                     L130:
  9884                           
  9885                           ; BSR set to: 0
  9886                           ;sm_ControlLearning_MC50.c: 112:             {;sm_ControlLearning_MC50.c: 113:          
      +                                 psm->current_state = st_InitLearning;
  9887  0023DA  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9888  0023DE  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9889  0023E2  0E00               	movlw	0
  9890  0023E4  D7EB               	goto	L66
  9891  0023E6                     l2912:
  9892                           
  9893                           ; BSR set to: 0
  9894  0023E6  D7FF               	goto	l2912
  9895  0023E8                     l23942:
  9896  0023E8  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9897  0023EC  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9898  0023F0  50DF               	movf	indf2,w,c
  9899  0023F2  0100               	movlb	0	; () banked
  9900  0023F4  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
  9901  0023F6  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
  9902                           
  9903                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9904                           ; Switch size 1, requested type "simple"
  9905                           ; Number of cases is 1, Range of values is 0 to 0
  9906                           ; switch strategies available:
  9907                           ; Name         Instructions Cycles
  9908                           ; simple_byte            4     3 (average)
  9909                           ;	Chosen strategy is simple_byte
  9910  0023F8  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
  9911  0023FA  0A00               	xorlw	0	; case 0
  9912  0023FC  A4D8               	btfss	status,2,c
  9913  0023FE  D7F3               	goto	l2912
  9914                           
  9915                           ; BSR set to: 0
  9916                           ; Switch size 1, requested type "simple"
  9917                           ; Number of cases is 6, Range of values is 0 to 5
  9918                           ; switch strategies available:
  9919                           ; Name         Instructions Cycles
  9920                           ; simple_byte           19    10 (average)
  9921                           ;	Chosen strategy is simple_byte
  9922  002400  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
  9923  002402  0A00               	xorlw	0	; case 0
  9924  002404  B4D8               	btfsc	status,2,c
  9925  002406  D738               	goto	l23868
  9926  002408  0A01               	xorlw	1	; case 1
  9927  00240A  B4D8               	btfsc	status,2,c
  9928  00240C  D778               	goto	l23888
  9929  00240E  0A03               	xorlw	3	; case 2
  9930  002410  B4D8               	btfsc	status,2,c
  9931  002412  D7A7               	goto	l23908
  9932  002414  0A01               	xorlw	1	; case 3
  9933  002416  B4D8               	btfsc	status,2,c
  9934  002418  D7B5               	goto	l23916
  9935  00241A  0A07               	xorlw	7	; case 4
  9936  00241C  B4D8               	btfsc	status,2,c
  9937  00241E  D7BE               	goto	l23924
  9938  002420  0A01               	xorlw	1	; case 5
  9939  002422  B4D8               	btfsc	status,2,c
  9940  002424  D7CF               	goto	l23932
  9941  002426  D7DF               	goto	l2912
  9942  002428                     l23944:
  9943                           
  9944                           ;sm_ControlLearning_MC50.c: 126:     sm_send_event(&controlLearning_stateMachine, ev_NUL
      +                          L);
  9945  002428  0EB2               	movlw	low _controlLearning_stateMachine
  9946  00242A  6E12               	movwf	sm_send_event@psm^0,c
  9947  00242C  0E02               	movlw	high _controlLearning_stateMachine
  9948  00242E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9949  002430  0E00               	movlw	0
  9950  002432  6E15               	movwf	(sm_send_event@event+1)^0,c
  9951  002434  0E00               	movlw	0
  9952  002436  6E14               	movwf	sm_send_event@event^0,c
  9953  002438  ECF7  F047         	call	_sm_send_event	;wreg free
  9954                           
  9955                           ;sm_ControlLearning_MC50.c: 131:     switch((sm_state_ControlGate_t) psm->current_state)
  9956  00243C  D285               	goto	l24200
  9957  00243E                     l23946:
  9958                           
  9959                           ; BSR set to: 0
  9960                           ;sm_ControlLearning_MC50.c: 134:         {;sm_ControlLearning_MC50.c: 135:             i
      +                          f(var_sys.FimCurso_CloseIsEnabled==YES)
  9961  00243E  0101               	movlb	1	; () banked
  9962  002440  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  9963  002442  A4D8               	btfss	status,2,c
  9964  002444  D03A               	goto	l23964
  9965                           
  9966                           ; BSR set to: 1
  9967                           ;sm_ControlLearning_MC50.c: 136:             {;sm_ControlLearning_MC50.c: 137:          
      +                                 control_limit_switch = 1;
  9968  002446  0E01               	movlw	1
  9969  002448  0100               	movlb	0	; () banked
  9970  00244A  6F81               	movwf	_control_limit_switch& (0+255),b
  9971                           
  9972                           ; BSR set to: 0
  9973                           ;sm_ControlLearning_MC50.c: 138:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
  9974  00244C  0EB2               	movlw	low _controlLearning_stateMachine
  9975  00244E  6E12               	movwf	sm_send_event@psm^0,c
  9976  002450  0E02               	movlw	high _controlLearning_stateMachine
  9977  002452  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9978  002454  0E00               	movlw	0
  9979  002456  6E15               	movwf	(sm_send_event@event+1)^0,c
  9980  002458  0E0A               	movlw	10
  9981  00245A  6E14               	movwf	sm_send_event@event^0,c
  9982  00245C  ECF7  F047         	call	_sm_send_event	;wreg free
  9983                           
  9984                           ;sm_ControlLearning_MC50.c: 139:                 var_sys.StateMotor=InOpenFull;
  9985  002460  0E01               	movlw	1
  9986  002462  0101               	movlb	1	; () banked
  9987  002464  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9988                           
  9989                           ; BSR set to: 1
  9990                           ;sm_ControlLearning_MC50.c: 140:                 clearLearningValue();
  9991  002466  EC4D  F044         	call	_clearLearningValue	;wreg free
  9992                           
  9993                           ; BSR set to: 0
  9994                           ;sm_ControlLearning_MC50.c: 141:                  if ((var_sys_NVM.decelarationSensivity
      +                           != 0) && (var_sys.programinAutomatic == 0))
  9995  00246A  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9996  00246C  B4D8               	btfsc	status,2,c
  9997  00246E  D016               	goto	l23962
  9998                           
  9999                           ; BSR set to: 0
 10000  002470  0101               	movlb	1	; () banked
 10001  002472  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10002  002474  A4D8               	btfss	status,2,c
 10003  002476  D012               	goto	l23962
 10004  002478                     u28520:
 10005                           
 10006                           ; BSR set to: 1
 10007                           ;sm_ControlLearning_MC50.c: 142:                          {;sm_ControlLearning_MC50.c: 1
      +                          43:                 ts_system.TimeLearningDecelaration=(1000/50)*15;
 10008  002478  0E01               	movlw	1
 10009  00247A  6FD5               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10010  00247C  0E2C               	movlw	44
 10011  00247E  6FD4               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10012                           
 10013                           ;sm_ControlLearning_MC50.c: 144:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*6;
 10014  002480  0E00               	movlw	0
 10015  002482  6FD3               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10016  002484  0E78               	movlw	120
 10017  002486  6FD2               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10018                           
 10019                           ;sm_ControlLearning_MC50.c: 145:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10020  002488  0E00               	movlw	0
 10021  00248A  6FE3               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10022  00248C  0E14               	movlw	20
 10023  00248E  6FE2               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10024                           
 10025                           ;sm_ControlLearning_MC50.c: 146:                 var_sys.LearningDecelaration=YES;
 10026  002490  0E01               	movlw	1
 10027  002492  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10028                           
 10029                           ;sm_ControlLearning_MC50.c: 147:                 control_limit_switch = 0;
 10030  002494  0E00               	movlw	0
 10031  002496  0100               	movlb	0	; () banked
 10032  002498  6F81               	movwf	_control_limit_switch& (0+255),b
 10033                           
 10034                           ;sm_ControlLearning_MC50.c: 148:                  }
 10035  00249A  0012               	return	
 10036  00249C                     l23962:
 10037                           
 10038                           ;sm_ControlLearning_MC50.c: 150:                 {;sm_ControlLearning_MC50.c: 151:      
      +                                     var_sys.LearningDecelaration=NO;
 10039  00249C  0E00               	movlw	0
 10040  00249E  0101               	movlb	1	; () banked
 10041  0024A0  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10042                           
 10043                           ;sm_ControlLearning_MC50.c: 152:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10044  0024A2  0E00               	movlw	0
 10045  0024A4  6FD3               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10046  0024A6  0E50               	movlw	80
 10047  0024A8  6FD2               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10048                           
 10049                           ;sm_ControlLearning_MC50.c: 153:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10050  0024AA  0E00               	movlw	0
 10051  0024AC  6FE3               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10052  0024AE  0E14               	movlw	20
 10053  0024B0  6FE2               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10054                           
 10055                           ;sm_ControlLearning_MC50.c: 154:                 control_limit_switch = 0;
 10056  0024B2  0E00               	movlw	0
 10057  0024B4  0100               	movlb	0	; () banked
 10058  0024B6  6F81               	movwf	_control_limit_switch& (0+255),b
 10059  0024B8  0012               	return	
 10060  0024BA                     l23964:
 10061                           
 10062                           ; BSR set to: 1
 10063                           ;sm_ControlLearning_MC50.c: 159:             {;sm_ControlLearning_MC50.c: 160:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10064  0024BA  0EB2               	movlw	low _controlLearning_stateMachine
 10065  0024BC  6E12               	movwf	sm_send_event@psm^0,c
 10066  0024BE  0E02               	movlw	high _controlLearning_stateMachine
 10067  0024C0  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10068  0024C2  0E00               	movlw	0
 10069  0024C4  6E15               	movwf	(sm_send_event@event+1)^0,c
 10070  0024C6  0E0B               	movlw	11
 10071  0024C8  6E14               	movwf	sm_send_event@event^0,c
 10072  0024CA  ECF7  F047         	call	_sm_send_event	;wreg free
 10073                           
 10074                           ;sm_ControlLearning_MC50.c: 161:                 var_sys.StateMotor = InClose;
 10075  0024CE  0E03               	movlw	3
 10076  0024D0  0101               	movlb	1	; () banked
 10077  0024D2  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10078                           
 10079                           ; BSR set to: 1
 10080                           ;sm_ControlLearning_MC50.c: 162:                 var_sys.LearningDecelaration= YES;
 10081  0024D4  0E01               	movlw	1
 10082  0024D6  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10083                           
 10084                           ; BSR set to: 1
 10085                           ;sm_ControlLearning_MC50.c: 164:         };sm_ControlLearning_MC50.c: 165:         break
      +                          ;
 10086                           
 10087                           ;sm_ControlLearning_MC50.c: 163:             }
 10088  0024D8  0012               	return	
 10089  0024DA                     l23970:
 10090                           
 10091                           ; BSR set to: 0
 10092                           ;sm_ControlLearning_MC50.c: 167:         {;sm_ControlLearning_MC50.c: 168:             i
      +                          f(((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1)) || ((button_stru
      +                          ct.current == 0x27 ||typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
 10093  0024DA  0101               	movlb	1	; () banked
 10094  0024DC  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10095  0024DE  B4D8               	btfsc	status,2,c
 10096  0024E0  D00F               	goto	u28570
 10097                           
 10098                           ; BSR set to: 1
 10099  0024E2  0100               	movlb	0	; () banked
 10100  0024E4  0581               	decf	_control_limit_switch& (0+255),w,b
 10101  0024E6  B4D8               	btfsc	status,2,c
 10102  0024E8  D00B               	goto	u28570
 10103                           
 10104                           ; BSR set to: 0
 10105  0024EA  0E27               	movlw	39
 10106  0024EC  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 10107  0024EE  B4D8               	btfsc	status,2,c
 10108  0024F0  D003               	goto	u28560
 10109                           
 10110                           ; BSR set to: 0
 10111  0024F2  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10112  0024F4  A4D8               	btfss	status,2,c
 10113  0024F6  D028               	goto	l23998
 10114  0024F8                     u28560:
 10115                           
 10116                           ; BSR set to: 0
 10117  0024F8  0101               	movlb	1	; () banked
 10118  0024FA  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10119  0024FC  A4D8               	btfss	status,2,c
 10120  0024FE  D024               	goto	l23998
 10121  002500                     u28570:
 10122                           
 10123                           ;sm_ControlLearning_MC50.c: 169:             {;sm_ControlLearning_MC50.c: 171:          
      +                                 control_limit_switch = 1;
 10124  002500  0E01               	movlw	1
 10125  002502  0100               	movlb	0	; () banked
 10126  002504  6F81               	movwf	_control_limit_switch& (0+255),b
 10127                           
 10128                           ;sm_ControlLearning_MC50.c: 172:                 var_sys.StateMotor=Stopped;
 10129  002506  0E00               	movlw	0
 10130  002508  0101               	movlb	1	; () banked
 10131  00250A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10132                           
 10133                           ; BSR set to: 1
 10134                           ;sm_ControlLearning_MC50.c: 173:                 if(ts_system.TimeWaitToNextState<=0)
 10135  00250C  BFC3               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10136  00250E  D005               	goto	u28580
 10137  002510  51C3               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10138  002512  E102               	bnz	u28581
 10139  002514  05C2               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10140  002516  B0D8               	btfsc	status,0,c
 10141  002518                     u28581:
 10142  002518  0012               	return	
 10143  00251A                     u28580:
 10144                           
 10145                           ; BSR set to: 1
 10146                           ;sm_ControlLearning_MC50.c: 174:                 {;sm_ControlLearning_MC50.c: 175:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10147  00251A  0EB2               	movlw	low _controlLearning_stateMachine
 10148  00251C  6E12               	movwf	sm_send_event@psm^0,c
 10149  00251E  0E02               	movlw	high _controlLearning_stateMachine
 10150  002520  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10151  002522  0E00               	movlw	0
 10152  002524  6E15               	movwf	(sm_send_event@event+1)^0,c
 10153  002526  0E0A               	movlw	10
 10154  002528  6E14               	movwf	sm_send_event@event^0,c
 10155  00252A  ECF7  F047         	call	_sm_send_event	;wreg free
 10156                           
 10157                           ;sm_ControlLearning_MC50.c: 176:                     var_sys.StateMotor=InOpenFull;
 10158  00252E  0E01               	movlw	1
 10159  002530  0101               	movlb	1	; () banked
 10160  002532  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10161                           
 10162                           ; BSR set to: 1
 10163                           ;sm_ControlLearning_MC50.c: 177:                     clearLearningValue();
 10164  002534  EC4D  F044         	call	_clearLearningValue	;wreg free
 10165                           
 10166                           ; BSR set to: 0
 10167                           ;sm_ControlLearning_MC50.c: 178:                         if ((var_sys_NVM.decelarationSe
      +                          nsivity != 0) && (var_sys.programinAutomatic == 0))
 10168  002538  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10169  00253A  B4D8               	btfsc	status,2,c
 10170  00253C  D7AF               	goto	l23962
 10171                           
 10172                           ; BSR set to: 0
 10173  00253E  0101               	movlb	1	; () banked
 10174  002540  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10175  002542  B4D8               	btfsc	status,2,c
 10176  002544  D799               	goto	u28520
 10177  002546  D7AA               	goto	l23962
 10178  002548                     l23998:
 10179  002548  0101               	movlb	1	; () banked
 10180  00254A  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10181  00254C  A4D8               	btfss	status,2,c
 10182  00254E  D003               	goto	l24002
 10183  002550                     u28610:
 10184                           
 10185                           ; BSR set to: 1
 10186                           ;sm_ControlLearning_MC50.c: 196:             {;sm_ControlLearning_MC50.c: 197:          
      +                                 generateErrorLearnig();
 10187  002550  EC01  F047         	call	_generateErrorLearnig	;wreg free
 10188                           
 10189                           ;sm_ControlLearning_MC50.c: 198:             }
 10190  002554  0012               	return	
 10191  002556                     l24002:
 10192                           
 10193                           ; BSR set to: 1
 10194                           ;sm_ControlLearning_MC50.c: 200:             {;sm_ControlLearning_MC50.c: 201:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10195  002556  0E00               	movlw	0
 10196  002558  6FC3               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10197  00255A  0E28               	movlw	40
 10198  00255C  6FC2               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10199  00255E  0012               	return	
 10200  002560                     l24004:
 10201                           
 10202                           ; BSR set to: 0
 10203                           ;sm_ControlLearning_MC50.c: 206:         {;sm_ControlLearning_MC50.c: 207:             i
      +                          f((var_sys.FimCurso_OpenIsEnabled==YES) || (ts_system.TimeLearningDecelaration<=0)||(con
      +                          trol_limit_switch == 1))
 10204  002560  0101               	movlb	1	; () banked
 10205  002562  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10206  002564  A4D8               	btfss	status,2,c
 10207                           
 10208                           ; BSR set to: 1
 10209  002566  BFD5               	btfsc	(_ts_system+55)& (0+255),7,b	;volatile
 10210  002568  D009               	goto	u28640
 10211  00256A  51D5               	movf	(_ts_system+55)& (0+255),w,b	;volatile
 10212  00256C  E103               	bnz	u28630
 10213  00256E  05D4               	decf	(_ts_system+54)& (0+255),w,b	;volatile
 10214  002570  A0D8               	btfss	status,0,c
 10215  002572  D004               	goto	u28640
 10216  002574                     u28630:
 10217                           
 10218                           ; BSR set to: 1
 10219  002574  0100               	movlb	0	; () banked
 10220  002576  0581               	decf	_control_limit_switch& (0+255),w,b
 10221  002578  A4D8               	btfss	status,2,c
 10222  00257A  D02A               	goto	l24026
 10223  00257C                     u28640:
 10224                           
 10225                           ;sm_ControlLearning_MC50.c: 209:             {;sm_ControlLearning_MC50.c: 210:          
      +                                  control_limit_switch = 1;
 10226  00257C  0E01               	movlw	1
 10227  00257E  0100               	movlb	0	; () banked
 10228  002580  6F81               	movwf	_control_limit_switch& (0+255),b
 10229                           
 10230                           ;sm_ControlLearning_MC50.c: 211:                 var_sys.StateMotor=Stopped;
 10231  002582  0E00               	movlw	0
 10232  002584  0101               	movlb	1	; () banked
 10233  002586  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10234                           
 10235                           ; BSR set to: 1
 10236                           ;sm_ControlLearning_MC50.c: 212:             if(ts_system.TimeWaitToNextState<=0)
 10237  002588  BFC3               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10238  00258A  D005               	goto	u28650
 10239  00258C  51C3               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10240  00258E  E102               	bnz	u28651
 10241  002590  05C2               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10242  002592  B0D8               	btfsc	status,0,c
 10243  002594                     u28651:
 10244  002594  0012               	return	
 10245  002596                     u28650:
 10246                           
 10247                           ; BSR set to: 1
 10248                           ;sm_ControlLearning_MC50.c: 213:             {;sm_ControlLearning_MC50.c: 215:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10249  002596  0EB2               	movlw	low _controlLearning_stateMachine
 10250  002598  6E12               	movwf	sm_send_event@psm^0,c
 10251  00259A  0E02               	movlw	high _controlLearning_stateMachine
 10252  00259C  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10253  00259E  0E00               	movlw	0
 10254  0025A0  6E15               	movwf	(sm_send_event@event+1)^0,c
 10255  0025A2  0E0B               	movlw	11
 10256  0025A4  6E14               	movwf	sm_send_event@event^0,c
 10257  0025A6  ECF7  F047         	call	_sm_send_event	;wreg free
 10258                           
 10259                           ;sm_ControlLearning_MC50.c: 216:                 var_sys.StateMotor=InClose;
 10260  0025AA  0E03               	movlw	3
 10261  0025AC  0101               	movlb	1	; () banked
 10262  0025AE  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10263                           
 10264                           ; BSR set to: 1
 10265                           ;sm_ControlLearning_MC50.c: 217:                 ts_system.TimeLearningDecelaration=(100
      +                          0/50)*5;
 10266  0025B0  0E00               	movlw	0
 10267  0025B2  6FD5               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10268  0025B4  0E64               	movlw	100
 10269  0025B6  6FD4               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10270                           
 10271                           ; BSR set to: 1
 10272                           ;sm_ControlLearning_MC50.c: 218:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*5;
 10273  0025B8  0E00               	movlw	0
 10274  0025BA  6FD3               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10275  0025BC  0E64               	movlw	100
 10276  0025BE                     L67:
 10277  0025BE  6FD2               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10278                           
 10279                           ; BSR set to: 1
 10280                           ;sm_ControlLearning_MC50.c: 219:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10281  0025C0  0E00               	movlw	0
 10282  0025C2  6FE3               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10283  0025C4  0E14               	movlw	20
 10284  0025C6  6FE2               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10285                           
 10286                           ; BSR set to: 1
 10287                           ;sm_ControlLearning_MC50.c: 220:                 control_limit_switch = 0;
 10288  0025C8  0E00               	movlw	0
 10289  0025CA  0100               	movlb	0	; () banked
 10290  0025CC  6F81               	movwf	_control_limit_switch& (0+255),b
 10291  0025CE  0012               	return	
 10292  0025D0                     l24026:
 10293                           
 10294                           ; BSR set to: 0
 10295  0025D0  0101               	movlb	1	; () banked
 10296  0025D2  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10297  0025D4  B4D8               	btfsc	status,2,c
 10298  0025D6  D7BC               	goto	u28610
 10299                           
 10300                           ; BSR set to: 1
 10301                           ;sm_ControlLearning_MC50.c: 230:             {;sm_ControlLearning_MC50.c: 231:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10302  0025D8  0E00               	movlw	0
 10303  0025DA  6FC3               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10304  0025DC  0E28               	movlw	40
 10305  0025DE  6FC2               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10306                           
 10307                           ; BSR set to: 1
 10308                           ;sm_ControlLearning_MC50.c: 232:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10309  0025E0  BFE3               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10310  0025E2  D005               	goto	u28670
 10311  0025E4  51E3               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10312  0025E6  E102               	bnz	u28671
 10313  0025E8  05E2               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10314  0025EA  B0D8               	btfsc	status,0,c
 10315  0025EC                     u28671:
 10316  0025EC  0012               	return	
 10317  0025EE                     u28670:
 10318                           
 10319                           ; BSR set to: 1
 10320                           ;sm_ControlLearning_MC50.c: 233:                 {;sm_ControlLearning_MC50.c: 234:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10321  0025EE  BFD3               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10322  0025F0  0012               	return	
 10323  0025F2  51D3               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10324  0025F4  E103               	bnz	u28680
 10325  0025F6  05D2               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10326  0025F8  A0D8               	btfss	status,0,c
 10327  0025FA  0012               	return	
 10328  0025FC                     u28680:
 10329                           
 10330                           ; BSR set to: 1
 10331                           ;sm_ControlLearning_MC50.c: 235:                 {;sm_ControlLearning_MC50.c: 236:      
      +                                         learn_st.openHistCurrent=calculateMean(learn_st.openHistCurrent,var_sys.A
      +                          ctualHistCurrent);
 10332  0025FC  C06E  F010         	movff	_learn_st+14,calculateMean@meanValue	;volatile
 10333  002600  C06F  F011         	movff	_learn_st+15,calculateMean@meanValue+1	;volatile
 10334  002604  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10335  002606  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10336  002608  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10337  00260C  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10338  002610  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10339  002614  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10340  002618  EC68  F047         	call	_calculateMean	;wreg free
 10341  00261C  C010  F06E         	movff	?_calculateMean,_learn_st+14	;volatile
 10342  002620  C011  F06F         	movff	?_calculateMean+1,_learn_st+15	;volatile
 10343  002624  0012               	return	
 10344  002626                     l24038:
 10345                           
 10346                           ; BSR set to: 0
 10347                           ;sm_ControlLearning_MC50.c: 243:         {;sm_ControlLearning_MC50.c: 244:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1))
 10348  002626  0101               	movlb	1	; () banked
 10349  002628  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10350  00262A  B4D8               	btfsc	status,2,c
 10351  00262C  D004               	goto	u28700
 10352                           
 10353                           ; BSR set to: 1
 10354  00262E  0100               	movlb	0	; () banked
 10355  002630  0581               	decf	_control_limit_switch& (0+255),w,b
 10356  002632  A4D8               	btfss	status,2,c
 10357  002634  D020               	goto	l24058
 10358  002636                     u28700:
 10359                           
 10360                           ;sm_ControlLearning_MC50.c: 245:             {;sm_ControlLearning_MC50.c: 246:          
      +                                 control_limit_switch = 1;
 10361  002636  0E01               	movlw	1
 10362  002638  0100               	movlb	0	; () banked
 10363  00263A  6F81               	movwf	_control_limit_switch& (0+255),b
 10364                           
 10365                           ;sm_ControlLearning_MC50.c: 247:                 var_sys.StateMotor=Stopped;
 10366  00263C  0E00               	movlw	0
 10367  00263E  0101               	movlb	1	; () banked
 10368  002640  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10369                           
 10370                           ; BSR set to: 1
 10371                           ;sm_ControlLearning_MC50.c: 248:                 if(ts_system.TimeWaitToNextState<=0)
 10372  002642  BFC3               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10373  002644  D005               	goto	u28710
 10374  002646  51C3               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10375  002648  E102               	bnz	u28711
 10376  00264A  05C2               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10377  00264C  B0D8               	btfsc	status,0,c
 10378  00264E                     u28711:
 10379  00264E  0012               	return	
 10380  002650                     u28710:
 10381                           
 10382                           ; BSR set to: 1
 10383                           ;sm_ControlLearning_MC50.c: 249:                 {;sm_ControlLearning_MC50.c: 250:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10384  002650  0EB2               	movlw	low _controlLearning_stateMachine
 10385  002652  6E12               	movwf	sm_send_event@psm^0,c
 10386  002654  0E02               	movlw	high _controlLearning_stateMachine
 10387  002656  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10388  002658  0E00               	movlw	0
 10389  00265A  6E15               	movwf	(sm_send_event@event+1)^0,c
 10390  00265C  0E0A               	movlw	10
 10391  00265E  6E14               	movwf	sm_send_event@event^0,c
 10392  002660  ECF7  F047         	call	_sm_send_event	;wreg free
 10393                           
 10394                           ;sm_ControlLearning_MC50.c: 251:                     var_sys.StateMotor=InOpenFull;
 10395  002664  0E01               	movlw	1
 10396  002666  0101               	movlb	1	; () banked
 10397  002668  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10398                           
 10399                           ; BSR set to: 1
 10400                           ;sm_ControlLearning_MC50.c: 252:                     var_sys.LearningDecelaration=NO;
 10401  00266A  0E00               	movlw	0
 10402  00266C  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10403                           
 10404                           ; BSR set to: 1
 10405                           ;sm_ControlLearning_MC50.c: 253:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*3;
 10406  00266E  0E00               	movlw	0
 10407  002670  6FD3               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10408  002672  0E3C               	movlw	60
 10409  002674  D7A4               	goto	L67
 10410  002676                     l24058:
 10411                           
 10412                           ; BSR set to: 0
 10413  002676  0101               	movlb	1	; () banked
 10414  002678  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10415  00267A  B4D8               	btfsc	status,2,c
 10416  00267C  D769               	goto	u28610
 10417                           
 10418                           ; BSR set to: 1
 10419                           ;sm_ControlLearning_MC50.c: 265:             {;sm_ControlLearning_MC50.c: 266:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10420  00267E  0E00               	movlw	0
 10421  002680  6FC3               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10422  002682  0E28               	movlw	40
 10423  002684  6FC2               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10424                           
 10425                           ; BSR set to: 1
 10426                           ;sm_ControlLearning_MC50.c: 267:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10427  002686  BFE3               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10428  002688  D005               	goto	u28730
 10429  00268A  51E3               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10430  00268C  E102               	bnz	u28731
 10431  00268E  05E2               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10432  002690  B0D8               	btfsc	status,0,c
 10433  002692                     u28731:
 10434  002692  0012               	return	
 10435  002694                     u28730:
 10436                           
 10437                           ; BSR set to: 1
 10438                           ;sm_ControlLearning_MC50.c: 268:                 {;sm_ControlLearning_MC50.c: 269:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10439  002694  BFD3               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10440  002696  0012               	return	
 10441  002698  51D3               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10442  00269A  E103               	bnz	u28740
 10443  00269C  05D2               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10444  00269E  A0D8               	btfss	status,0,c
 10445  0026A0  0012               	return	
 10446  0026A2                     u28740:
 10447                           
 10448                           ; BSR set to: 1
 10449                           ;sm_ControlLearning_MC50.c: 270:                 {;sm_ControlLearning_MC50.c: 271:      
      +                                         learn_st.closeHistCurrent=calculateMean(learn_st.closeHistCurrent,var_sys
      +                          .ActualHistCurrent);
 10450  0026A2  C070  F010         	movff	_learn_st+16,calculateMean@meanValue	;volatile
 10451  0026A6  C071  F011         	movff	_learn_st+17,calculateMean@meanValue+1	;volatile
 10452  0026AA  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10453  0026AC  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10454  0026AE  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10455  0026B2  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10456  0026B6  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10457  0026BA  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10458  0026BE  EC68  F047         	call	_calculateMean	;wreg free
 10459  0026C2  C010  F070         	movff	?_calculateMean,_learn_st+16	;volatile
 10460  0026C6  C011  F071         	movff	?_calculateMean+1,_learn_st+17	;volatile
 10461  0026CA  0012               	return	
 10462  0026CC                     l24070:
 10463                           
 10464                           ; BSR set to: 0
 10465                           ;sm_ControlLearning_MC50.c: 278:         {;sm_ControlLearning_MC50.c: 279:             i
      +                          f(((var_sys.FimCurso_OpenIsEnabled==YES)||control_limit_switch == 1)||(var_sys.LearningD
      +                          ecelaration==YES && (button_struct.current == 0x27 ||typeOpenOrder == TypeFull) && var_s
      +                          ys.programinAutomatic == 1))
 10466  0026CC  0101               	movlb	1	; () banked
 10467  0026CE  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10468  0026D0  B4D8               	btfsc	status,2,c
 10469  0026D2  D012               	goto	u28800
 10470                           
 10471                           ; BSR set to: 1
 10472  0026D4  0100               	movlb	0	; () banked
 10473  0026D6  0581               	decf	_control_limit_switch& (0+255),w,b
 10474  0026D8  B4D8               	btfsc	status,2,c
 10475  0026DA  D00E               	goto	u28800
 10476                           
 10477                           ; BSR set to: 0
 10478  0026DC  0101               	movlb	1	; () banked
 10479  0026DE  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10480  0026E0  A4D8               	btfss	status,2,c
 10481  0026E2  D02D               	goto	l24096
 10482                           
 10483                           ; BSR set to: 1
 10484  0026E4  0E27               	movlw	39
 10485  0026E6  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 10486  0026E8  B4D8               	btfsc	status,2,c
 10487  0026EA  D003               	goto	u28790
 10488                           
 10489                           ; BSR set to: 1
 10490  0026EC  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10491  0026EE  A4D8               	btfss	status,2,c
 10492  0026F0  D026               	goto	l24096
 10493  0026F2                     u28790:
 10494                           
 10495                           ; BSR set to: 1
 10496  0026F2  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10497  0026F4  A4D8               	btfss	status,2,c
 10498  0026F6  D023               	goto	l24096
 10499  0026F8                     u28800:
 10500                           
 10501                           ;sm_ControlLearning_MC50.c: 280:             {;sm_ControlLearning_MC50.c: 282:          
      +                                 var_sys.Counter_Learning = 0;
 10502  0026F8  0E00               	movlw	0
 10503  0026FA  0101               	movlb	1	; () banked
 10504  0026FC  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10505                           
 10506                           ;sm_ControlLearning_MC50.c: 283:                 var_sys.LearningDecelaration = NO;
 10507  0026FE  0E00               	movlw	0
 10508  002700  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10509                           
 10510                           ;sm_ControlLearning_MC50.c: 284:                 control_limit_switch = 1;
 10511  002702  0E01               	movlw	1
 10512  002704  0100               	movlb	0	; () banked
 10513  002706  6F81               	movwf	_control_limit_switch& (0+255),b
 10514                           
 10515                           ;sm_ControlLearning_MC50.c: 285:                 var_sys.StateMotor=Stopped;
 10516  002708  0E00               	movlw	0
 10517  00270A  0101               	movlb	1	; () banked
 10518  00270C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10519                           
 10520                           ; BSR set to: 1
 10521                           ;sm_ControlLearning_MC50.c: 286:                 if(ts_system.TimeWaitToNextState<=0)
 10522  00270E  BFC3               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10523  002710  D005               	goto	u28810
 10524  002712  51C3               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10525  002714  E102               	bnz	u28811
 10526  002716  05C2               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10527  002718  B0D8               	btfsc	status,0,c
 10528  00271A                     u28811:
 10529  00271A  0012               	return	
 10530  00271C                     u28810:
 10531                           
 10532                           ; BSR set to: 1
 10533                           ;sm_ControlLearning_MC50.c: 287:                 {;sm_ControlLearning_MC50.c: 288:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10534  00271C  0EB2               	movlw	low _controlLearning_stateMachine
 10535  00271E  6E12               	movwf	sm_send_event@psm^0,c
 10536  002720  0E02               	movlw	high _controlLearning_stateMachine
 10537  002722  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10538  002724  0E00               	movlw	0
 10539  002726  6E15               	movwf	(sm_send_event@event+1)^0,c
 10540  002728  0E0B               	movlw	11
 10541  00272A  6E14               	movwf	sm_send_event@event^0,c
 10542  00272C  ECF7  F047         	call	_sm_send_event	;wreg free
 10543                           
 10544                           ;sm_ControlLearning_MC50.c: 289:                     var_sys.StateMotor=InClose;
 10545  002730  0E03               	movlw	3
 10546  002732  0101               	movlb	1	; () banked
 10547  002734  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10548                           
 10549                           ; BSR set to: 1
 10550                           ;sm_ControlLearning_MC50.c: 290:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*4;
 10551  002736  0E00               	movlw	0
 10552  002738  6FD3               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10553  00273A  0E50               	movlw	80
 10554  00273C  D740               	goto	L67
 10555  00273E                     l24096:
 10556                           
 10557                           ; BSR set to: 1
 10558  00273E  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10559  002740  B4D8               	btfsc	status,2,c
 10560  002742  D706               	goto	u28610
 10561                           
 10562                           ; BSR set to: 1
 10563  002744  0E27               	movlw	39
 10564  002746  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 10565  002748  B4D8               	btfsc	status,2,c
 10566  00274A  D003               	goto	u28840
 10567                           
 10568                           ; BSR set to: 1
 10569  00274C  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10570  00274E  A4D8               	btfss	status,2,c
 10571  002750  D00F               	goto	l24110
 10572  002752                     u28840:
 10573                           
 10574                           ; BSR set to: 1
 10575  002752  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10576  002754  A4D8               	btfss	status,2,c
 10577  002756  D00C               	goto	l24110
 10578                           
 10579                           ; BSR set to: 1
 10580  002758  5147               	movf	(_var_sys+71)& (0+255),w,b	;volatile
 10581  00275A  A4D8               	btfss	status,2,c
 10582  00275C  D009               	goto	l24110
 10583  00275E                     u28860:
 10584                           
 10585                           ; BSR set to: 1
 10586                           ;sm_ControlLearning_MC50.c: 303:                 var_sys.LearningDecelaration=YES;
 10587  00275E  0E01               	movlw	1
 10588  002760  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10589                           
 10590                           ;sm_ControlLearning_MC50.c: 306:                 button_struct.processed = 1;
 10591  002762  0E01               	movlw	1
 10592  002764  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 10593                           
 10594                           ;sm_ControlLearning_MC50.c: 307:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10595  002766  0E00               	movlw	0
 10596  002768  6FD3               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10597  00276A  0E50               	movlw	80
 10598  00276C  6FD2               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10599                           
 10600                           ;sm_ControlLearning_MC50.c: 309:             }
 10601  00276E  0012               	return	
 10602  002770                     l24110:
 10603                           
 10604                           ; BSR set to: 1
 10605  002770  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10606  002772  A4D8               	btfss	status,2,c
 10607  002774  D00C               	goto	l24118
 10608                           
 10609                           ; BSR set to: 1
 10610                           ;sm_ControlLearning_MC50.c: 313:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10611  002776  0E00               	movlw	0
 10612  002778  6FC3               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10613  00277A  0E28               	movlw	40
 10614  00277C  6FC2               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10615                           
 10616                           ; BSR set to: 1
 10617                           ;sm_ControlLearning_MC50.c: 315:                 if(ts_system.TimeWaitToGetCurrent>0)
 10618  00277E  BFD3               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10619  002780  0012               	return	
 10620  002782  51D3               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10621  002784  E103               	bnz	u28880
 10622  002786  05D2               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10623  002788  A0D8               	btfss	status,0,c
 10624  00278A  0012               	return	
 10625  00278C                     u28880:
 10626  00278C  D737               	goto	u28680
 10627  00278E                     l24118:
 10628                           
 10629                           ; BSR set to: 1
 10630                           ;sm_ControlLearning_MC50.c: 322:             {;sm_ControlLearning_MC50.c: 323:          
      +                                 var_sys.Counter_Learning = 1;
 10631  00278E  0E01               	movlw	1
 10632  002790  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10633                           
 10634                           ;sm_ControlLearning_MC50.c: 324:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10635  002792  0E00               	movlw	0
 10636  002794  6FC3               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10637  002796  0E28               	movlw	40
 10638  002798  6FC2               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10639                           
 10640                           ; BSR set to: 1
 10641                           ;sm_ControlLearning_MC50.c: 326:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10642  00279A  BFE3               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10643  00279C  D005               	goto	u28890
 10644  00279E  51E3               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10645  0027A0  E102               	bnz	u28891
 10646  0027A2  05E2               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10647  0027A4  B0D8               	btfsc	status,0,c
 10648  0027A6                     u28891:
 10649  0027A6  0012               	return	
 10650  0027A8                     u28890:
 10651                           
 10652                           ; BSR set to: 1
 10653                           ;sm_ControlLearning_MC50.c: 327:                 {;sm_ControlLearning_MC50.c: 328:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10654  0027A8  BFD3               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10655  0027AA  0012               	return	
 10656  0027AC  51D3               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10657  0027AE  E103               	bnz	u28900
 10658  0027B0  05D2               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10659  0027B2  A0D8               	btfss	status,0,c
 10660  0027B4  0012               	return	
 10661  0027B6                     u28900:
 10662                           
 10663                           ; BSR set to: 1
 10664                           ;sm_ControlLearning_MC50.c: 329:                 {;sm_ControlLearning_MC50.c: 330:      
      +                                         learn_st.openCurrent=calculateMean(learn_st.openCurrent,var_sys.ActualCur
      +                          rent);
 10665  0027B6  C06A  F010         	movff	_learn_st+10,calculateMean@meanValue	;volatile
 10666  0027BA  C06B  F011         	movff	_learn_st+11,calculateMean@meanValue+1	;volatile
 10667  0027BE  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10668  0027C0  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10669  0027C2  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 10670  0027C6  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 10671  0027CA  6A16               	clrf	(calculateMean@newValue+2)^0,c
 10672  0027CC  6A17               	clrf	(calculateMean@newValue+3)^0,c
 10673  0027CE  EC68  F047         	call	_calculateMean	;wreg free
 10674  0027D2  C010  F06A         	movff	?_calculateMean,_learn_st+10	;volatile
 10675  0027D6  C011  F06B         	movff	?_calculateMean+1,_learn_st+11	;volatile
 10676  0027DA  0012               	return	
 10677  0027DC                     l24126:
 10678                           
 10679                           ; BSR set to: 0
 10680                           ;sm_ControlLearning_MC50.c: 337:         {;sm_ControlLearning_MC50.c: 338:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||( var_sys.LearningDecelaration==YES && (button
      +                          _struct.current == 0x27 || typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1
      +                          ))
 10681  0027DC  0101               	movlb	1	; () banked
 10682  0027DE  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10683  0027E0  B4D8               	btfsc	status,2,c
 10684  0027E2  D00D               	goto	u28950
 10685                           
 10686                           ; BSR set to: 1
 10687  0027E4  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10688  0027E6  A4D8               	btfss	status,2,c
 10689  0027E8  D070               	goto	l24172
 10690                           
 10691                           ; BSR set to: 1
 10692  0027EA  0E27               	movlw	39
 10693  0027EC  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 10694  0027EE  B4D8               	btfsc	status,2,c
 10695  0027F0  D003               	goto	u28940
 10696                           
 10697                           ; BSR set to: 1
 10698  0027F2  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10699  0027F4  A4D8               	btfss	status,2,c
 10700  0027F6  D069               	goto	l24172
 10701  0027F8                     u28940:
 10702                           
 10703                           ; BSR set to: 1
 10704  0027F8  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10705  0027FA  A4D8               	btfss	status,2,c
 10706  0027FC  D066               	goto	l24172
 10707  0027FE                     u28950:
 10708                           
 10709                           ; BSR set to: 1
 10710                           ;sm_ControlLearning_MC50.c: 339:             {;sm_ControlLearning_MC50.c: 342:          
      +                                 var_sys.Statedoorcontrol = st_Closed;
 10711  0027FE  0E01               	movlw	1
 10712  002800  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 10713                           
 10714                           ;sm_ControlLearning_MC50.c: 343:                 var_sys.Counter_Learning = 0;
 10715  002802  0E00               	movlw	0
 10716  002804  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10717                           
 10718                           ;sm_ControlLearning_MC50.c: 344:                 var_sys.LearningDecelaration = NO;
 10719  002806  0E00               	movlw	0
 10720  002808  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10721                           
 10722                           ;sm_ControlLearning_MC50.c: 345:                 var_sys.StateMotor=Stopped;
 10723  00280A  0E00               	movlw	0
 10724  00280C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10725                           
 10726                           ; BSR set to: 1
 10727                           ;sm_ControlLearning_MC50.c: 346:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
 10728  00280E  0EB2               	movlw	low _controlLearning_stateMachine
 10729  002810  6E12               	movwf	sm_send_event@psm^0,c
 10730  002812  0E02               	movlw	high _controlLearning_stateMachine
 10731  002814  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10732  002816  0E00               	movlw	0
 10733  002818  6E15               	movwf	(sm_send_event@event+1)^0,c
 10734  00281A  0E0A               	movlw	10
 10735  00281C  6E14               	movwf	sm_send_event@event^0,c
 10736  00281E  ECF7  F047         	call	_sm_send_event	;wreg free
 10737                           
 10738                           ;sm_ControlLearning_MC50.c: 347:                 sm_send_event(&controlGate_stateMachine
      +                          , ev_LearningComplete);
 10739  002822  0EE6               	movlw	low _controlGate_stateMachine
 10740  002824  6E12               	movwf	sm_send_event@psm^0,c
 10741  002826  0E01               	movlw	high _controlGate_stateMachine
 10742  002828  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10743  00282A  0E00               	movlw	0
 10744  00282C  6E15               	movwf	(sm_send_event@event+1)^0,c
 10745  00282E  0E13               	movlw	19
 10746  002830  6E14               	movwf	sm_send_event@event^0,c
 10747  002832  ECF7  F047         	call	_sm_send_event	;wreg free
 10748                           
 10749                           ;sm_ControlLearning_MC50.c: 348:                 var_sys_NVM.learningTimeToClose=learn_s
      +                          t.timeClose;
 10750  002836  C060  F0D0         	movff	_learn_st,_var_sys_NVM+56	;volatile
 10751  00283A  C061  F0D1         	movff	_learn_st+1,_var_sys_NVM+57	;volatile
 10752  00283E  C062  F0D2         	movff	_learn_st+2,_var_sys_NVM+58	;volatile
 10753  002842  C063  F0D3         	movff	_learn_st+3,_var_sys_NVM+59	;volatile
 10754                           
 10755                           ;sm_ControlLearning_MC50.c: 349:                 var_sys_NVM.learningTimeToOpen=learn_st
      +                          .timeOpen;
 10756  002846  C064  F0CC         	movff	_learn_st+4,_var_sys_NVM+52	;volatile
 10757  00284A  C065  F0CD         	movff	_learn_st+5,_var_sys_NVM+53	;volatile
 10758  00284E  C066  F0CE         	movff	_learn_st+6,_var_sys_NVM+54	;volatile
 10759  002852  C067  F0CF         	movff	_learn_st+7,_var_sys_NVM+55	;volatile
 10760                           
 10761                           ;sm_ControlLearning_MC50.c: 350:                 if (var_sys.programinAutomatic == 1){
 10762  002856  0101               	movlb	1	; () banked
 10763  002858  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10764  00285A  A4D8               	btfss	status,2,c
 10765  00285C  D005               	goto	l24150
 10766                           
 10767                           ; BSR set to: 1
 10768                           ;sm_ControlLearning_MC50.c: 351:                     var_sys_NVM.decelarationClose=learn
      +                          _st.timeDecelerationClose ;
 10769  00285E  C068  F099         	movff	_learn_st+8,_var_sys_NVM+1	;volatile
 10770                           
 10771                           ;sm_ControlLearning_MC50.c: 352:                     var_sys_NVM.decelarationOpen=learn_
      +                          st.timeDecelerationOpen ;
 10772  002862  C069  F098         	movff	_learn_st+9,_var_sys_NVM	;volatile
 10773                           
 10774                           ;sm_ControlLearning_MC50.c: 353:                                 }
 10775  002866  D005               	goto	l24152
 10776  002868                     l24150:
 10777                           
 10778                           ; BSR set to: 1
 10779                           ;sm_ControlLearning_MC50.c: 355:                     var_sys_NVM.decelarationClose=4 ;
 10780  002868  0E04               	movlw	4
 10781  00286A  0100               	movlb	0	; () banked
 10782  00286C  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 10783                           
 10784                           ;sm_ControlLearning_MC50.c: 356:                     var_sys_NVM.decelarationOpen=4 ;
 10785  00286E  0E04               	movlw	4
 10786  002870  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 10787  002872                     l24152:
 10788                           
 10789                           ;sm_ControlLearning_MC50.c: 358:                 var_sys_NVM.learningCurrentNormalClose=
      +                          learn_st.closeCurrent;
 10790  002872  C06C  F0C8         	movff	_learn_st+12,_var_sys_NVM+48	;volatile
 10791  002876  C06D  F0C9         	movff	_learn_st+13,_var_sys_NVM+49	;volatile
 10792                           
 10793                           ;sm_ControlLearning_MC50.c: 359:                 var_sys_NVM.learningCurrentNormalOpen=l
      +                          earn_st.openCurrent;
 10794  00287A  C06A  F0CA         	movff	_learn_st+10,_var_sys_NVM+50	;volatile
 10795  00287E  C06B  F0CB         	movff	_learn_st+11,_var_sys_NVM+51	;volatile
 10796                           
 10797                           ;sm_ControlLearning_MC50.c: 360:                 var_sys_NVM.learningCurrentDecelaration
      +                          Open=learn_st.openHistCurrent;
 10798  002882  C06E  F0C4         	movff	_learn_st+14,_var_sys_NVM+44	;volatile
 10799  002886  C06F  F0C5         	movff	_learn_st+15,_var_sys_NVM+45	;volatile
 10800  00288A  0100               	movlb	0	; () banked
 10801  00288C  6BC6               	clrf	(_var_sys_NVM+46)& (0+255),b	;volatile
 10802  00288E  6BC7               	clrf	(_var_sys_NVM+47)& (0+255),b	;volatile
 10803                           
 10804                           ; BSR set to: 0
 10805                           ;sm_ControlLearning_MC50.c: 361:                 var_sys_NVM.learningCurrentDecelaration
      +                          Close=learn_st.closeHistCurrent;
 10806  002890  C070  F0C0         	movff	_learn_st+16,_var_sys_NVM+40	;volatile
 10807  002894  C071  F0C1         	movff	_learn_st+17,_var_sys_NVM+41	;volatile
 10808  002898  6BC2               	clrf	(_var_sys_NVM+42)& (0+255),b	;volatile
 10809  00289A  6BC3               	clrf	(_var_sys_NVM+43)& (0+255),b	;volatile
 10810                           
 10811                           ; BSR set to: 0
 10812                           ;sm_ControlLearning_MC50.c: 362:                 SaveNVM_VarSystem(pageMemoryP);
 10813  00289C  0E00               	movlw	0
 10814  00289E  EC05  F04C         	call	_SaveNVM_VarSystem
 10815                           
 10816                           ;sm_ControlLearning_MC50.c: 363:                 SaveNVM_VarSystem(pageMemoryLearningVar
      +                          s);
 10817  0028A2  0E03               	movlw	3
 10818  0028A4  EC05  F04C         	call	_SaveNVM_VarSystem
 10819                           
 10820                           ;sm_ControlLearning_MC50.c: 364:                 SaveNVM_VarSystem(pageMemoryCounters);
 10821  0028A8  0E02               	movlw	2
 10822  0028AA  EC05  F04C         	call	_SaveNVM_VarSystem
 10823                           
 10824                           ;sm_ControlLearning_MC50.c: 365:                 var_sys.LearningIsEnabled=NO;
 10825  0028AE  0E00               	movlw	0
 10826  0028B0  0101               	movlb	1	; () banked
 10827  0028B2  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 10828                           
 10829                           ; BSR set to: 1
 10830                           ;sm_ControlLearning_MC50.c: 366:                 var_sys.PositionActual=0;
 10831  0028B4  0E00               	movlw	0
 10832  0028B6  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 10833  0028B8  0E00               	movlw	0
 10834  0028BA  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 10835  0028BC  0E00               	movlw	0
 10836  0028BE  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 10837  0028C0  0E00               	movlw	0
 10838  0028C2  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 10839                           
 10840                           ; BSR set to: 1
 10841                           ;sm_ControlLearning_MC50.c: 367:                 var_sys.PositionIsLost = NO;
 10842  0028C4  0E00               	movlw	0
 10843  0028C6  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 10844                           
 10845                           ;sm_ControlLearning_MC50.c: 369:             }
 10846  0028C8  0012               	return	
 10847  0028CA                     l24172:
 10848                           
 10849                           ; BSR set to: 1
 10850  0028CA  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10851  0028CC  B4D8               	btfsc	status,2,c
 10852  0028CE  D640               	goto	u28610
 10853                           
 10854                           ; BSR set to: 1
 10855  0028D0  0E27               	movlw	39
 10856  0028D2  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 10857  0028D4  B4D8               	btfsc	status,2,c
 10858  0028D6  D003               	goto	u28990
 10859                           
 10860                           ; BSR set to: 1
 10861  0028D8  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10862  0028DA  A4D8               	btfss	status,2,c
 10863  0028DC  D003               	goto	l24184
 10864  0028DE                     u28990:
 10865                           
 10866                           ; BSR set to: 1
 10867  0028DE  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10868  0028E0  B4D8               	btfsc	status,2,c
 10869  0028E2  D73D               	goto	u28860
 10870  0028E4                     l24184:
 10871                           
 10872                           ; BSR set to: 1
 10873  0028E4  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10874  0028E6  A4D8               	btfss	status,2,c
 10875  0028E8  D008               	goto	l24190
 10876                           
 10877                           ; BSR set to: 1
 10878                           ;sm_ControlLearning_MC50.c: 384:                  if(ts_system.TimeWaitToGetCurrent>0)
 10879  0028EA  BFD3               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10880  0028EC  0012               	return	
 10881  0028EE  51D3               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10882  0028F0  E103               	bnz	u29020
 10883  0028F2  05D2               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10884  0028F4  A0D8               	btfss	status,0,c
 10885  0028F6  0012               	return	
 10886  0028F8                     u29020:
 10887  0028F8  D6D4               	goto	u28740
 10888  0028FA                     l24190:
 10889                           
 10890                           ; BSR set to: 1
 10891                           ;sm_ControlLearning_MC50.c: 390:             {;sm_ControlLearning_MC50.c: 391:          
      +                                 var_sys.Counter_Learning = 1;
 10892  0028FA  0E01               	movlw	1
 10893  0028FC  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10894                           
 10895                           ;sm_ControlLearning_MC50.c: 392:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10896  0028FE  0E00               	movlw	0
 10897  002900  6FC3               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10898  002902  0E28               	movlw	40
 10899  002904  6FC2               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10900                           
 10901                           ; BSR set to: 1
 10902                           ;sm_ControlLearning_MC50.c: 395:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10903  002906  BFE3               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10904  002908  D005               	goto	u29030
 10905  00290A  51E3               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10906  00290C  E102               	bnz	u29031
 10907  00290E  05E2               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10908  002910  B0D8               	btfsc	status,0,c
 10909  002912                     u29031:
 10910  002912  0012               	return	
 10911  002914                     u29030:
 10912                           
 10913                           ; BSR set to: 1
 10914                           ;sm_ControlLearning_MC50.c: 396:                 {;sm_ControlLearning_MC50.c: 397:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10915  002914  BFD3               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10916  002916  0012               	return	
 10917  002918  51D3               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10918  00291A  E103               	bnz	u29040
 10919  00291C  05D2               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10920  00291E  A0D8               	btfss	status,0,c
 10921  002920  0012               	return	
 10922  002922                     u29040:
 10923                           
 10924                           ; BSR set to: 1
 10925                           ;sm_ControlLearning_MC50.c: 398:                 {;sm_ControlLearning_MC50.c: 399:      
      +                                         learn_st.closeCurrent=calculateMean(learn_st.closeCurrent,var_sys.ActualC
      +                          urrent);
 10926  002922  C06C  F010         	movff	_learn_st+12,calculateMean@meanValue	;volatile
 10927  002926  C06D  F011         	movff	_learn_st+13,calculateMean@meanValue+1	;volatile
 10928  00292A  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10929  00292C  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10930  00292E  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 10931  002932  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 10932  002936  6A16               	clrf	(calculateMean@newValue+2)^0,c
 10933  002938  6A17               	clrf	(calculateMean@newValue+3)^0,c
 10934  00293A  EC68  F047         	call	_calculateMean	;wreg free
 10935  00293E  C010  F06C         	movff	?_calculateMean,_learn_st+12	;volatile
 10936  002942  C011  F06D         	movff	?_calculateMean+1,_learn_st+13	;volatile
 10937  002946  0012               	return	
 10938  002948                     l24200:
 10939  002948  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10940  00294C  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10941  002950  50DF               	movf	indf2,w,c
 10942  002952  0100               	movlb	0	; () banked
 10943  002954  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
 10944  002956  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
 10945                           
 10946                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10947                           ; Switch size 1, requested type "simple"
 10948                           ; Number of cases is 1, Range of values is 0 to 0
 10949                           ; switch strategies available:
 10950                           ; Name         Instructions Cycles
 10951                           ; simple_byte            4     3 (average)
 10952                           ;	Chosen strategy is simple_byte
 10953  002958  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
 10954  00295A  0A00               	xorlw	0	; case 0
 10955  00295C  A4D8               	btfss	status,2,c
 10956  00295E  0012               	return	
 10957                           
 10958                           ; BSR set to: 0
 10959                           ; Switch size 1, requested type "simple"
 10960                           ; Number of cases is 6, Range of values is 0 to 5
 10961                           ; switch strategies available:
 10962                           ; Name         Instructions Cycles
 10963                           ; simple_byte           19    10 (average)
 10964                           ;	Chosen strategy is simple_byte
 10965  002960  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
 10966  002962  0A00               	xorlw	0	; case 0
 10967  002964  B4D8               	btfsc	status,2,c
 10968  002966  D56B               	goto	l23946
 10969  002968  0A01               	xorlw	1	; case 1
 10970  00296A  B4D8               	btfsc	status,2,c
 10971  00296C  D5B6               	goto	l23970
 10972  00296E  0A03               	xorlw	3	; case 2
 10973  002970  B4D8               	btfsc	status,2,c
 10974  002972  D5F6               	goto	l24004
 10975  002974  0A01               	xorlw	1	; case 3
 10976  002976  B4D8               	btfsc	status,2,c
 10977  002978  D656               	goto	l24038
 10978  00297A  0A07               	xorlw	7	; case 4
 10979  00297C  B4D8               	btfsc	status,2,c
 10980  00297E  D6A6               	goto	l24070
 10981  002980  0A01               	xorlw	1	; case 5
 10982  002982  A4D8               	btfss	status,2,c
 10983  002984  0012               	return	
 10984  002986  D72A               	goto	l24126
 10985  002988                     __end_of_sm_execute_ControlLearning:
 10986                           	callstack 0
 10987                           
 10988 ;; *************** function _generateErrorLearnig *****************
 10989 ;; Defined at:
 10990 ;;		line 424 in file "sm_ControlLearning_MC50.c"
 10991 ;; Parameters:    Size  Location     Type
 10992 ;;		None
 10993 ;; Auto vars:     Size  Location     Type
 10994 ;;		None
 10995 ;; Return value:  Size  Location     Type
 10996 ;;                  1    wreg      void 
 10997 ;; Registers used:
 10998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10999 ;; Tracked objects:
 11000 ;;		On entry : 3E/1
 11001 ;;		On exit  : 0/0
 11002 ;;		Unchanged: 0/0
 11003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11008 ;;Total ram usage:        0 bytes
 11009 ;; Hardware stack levels used: 1
 11010 ;; Hardware stack levels required when called: 6
 11011 ;; This function calls:
 11012 ;;		_sm_init
 11013 ;; This function is called by:
 11014 ;;		_sm_execute_ControlLearning
 11015 ;; This function uses a non-reentrant model
 11016 ;;
 11017                           
 11018                           	psect	text19
 11019  008E02                     __ptext19:
 11020                           	callstack 0
 11021  008E02                     _generateErrorLearnig:
 11022                           	callstack 22
 11023                           
 11024                           ;sm_ControlLearning_MC50.c: 428:     var_sys.LearningIsEnabled=NO;
 11025                           
 11026                           ;incstack = 0
 11027  008E02  0E00               	movlw	0
 11028  008E04  0101               	movlb	1	; () banked
 11029  008E06  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 11030                           
 11031                           ; BSR set to: 1
 11032                           ;sm_ControlLearning_MC50.c: 430:     sm_init(&menuConfiguration_stateMachine,st_MainMenu
      +                          ,HIST_NONE);
 11033  008E08  0EBD               	movlw	low _menuConfiguration_stateMachine
 11034  008E0A  6E12               	movwf	sm_init@psm^0,c
 11035  008E0C  0E02               	movlw	high _menuConfiguration_stateMachine
 11036  008E0E  6E13               	movwf	(sm_init@psm+1)^0,c
 11037  008E10  0E00               	movlw	0
 11038  008E12  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11039  008E14  0E00               	movlw	0
 11040  008E16  6E14               	movwf	sm_init@initial_state^0,c
 11041  008E18  0E00               	movlw	0
 11042  008E1A  6E16               	movwf	sm_init@hist_mode^0,c
 11043  008E1C  EC07  F049         	call	_sm_init	;wreg free
 11044                           
 11045                           ;sm_ControlLearning_MC50.c: 431:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
 11046  008E20  0EF1               	movlw	low _main_stateMachine
 11047  008E22  6E12               	movwf	sm_init@psm^0,c
 11048  008E24  0E01               	movlw	high _main_stateMachine
 11049  008E26  6E13               	movwf	(sm_init@psm+1)^0,c
 11050  008E28  0E00               	movlw	0
 11051  008E2A  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11052  008E2C  0E00               	movlw	0
 11053  008E2E  6E14               	movwf	sm_init@initial_state^0,c
 11054  008E30  0E00               	movlw	0
 11055  008E32  6E16               	movwf	sm_init@hist_mode^0,c
 11056  008E34  EC07  F049         	call	_sm_init	;wreg free
 11057                           
 11058                           ;sm_ControlLearning_MC50.c: 432:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE
      +                          );
 11059  008E38  0EE6               	movlw	low _controlGate_stateMachine
 11060  008E3A  6E12               	movwf	sm_init@psm^0,c
 11061  008E3C  0E01               	movlw	high _controlGate_stateMachine
 11062  008E3E  6E13               	movwf	(sm_init@psm+1)^0,c
 11063  008E40  0E00               	movlw	0
 11064  008E42  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11065  008E44  0E00               	movlw	0
 11066  008E46  6E14               	movwf	sm_init@initial_state^0,c
 11067  008E48  0E00               	movlw	0
 11068  008E4A  6E16               	movwf	sm_init@hist_mode^0,c
 11069  008E4C  EC07  F049         	call	_sm_init	;wreg free
 11070                           
 11071                           ;sm_ControlLearning_MC50.c: 433:     sm_init(&controlLearning_stateMachine,st_InitLearni
      +                          ng,HIST_NONE);
 11072  008E50  0EB2               	movlw	low _controlLearning_stateMachine
 11073  008E52  6E12               	movwf	sm_init@psm^0,c
 11074  008E54  0E02               	movlw	high _controlLearning_stateMachine
 11075  008E56  6E13               	movwf	(sm_init@psm+1)^0,c
 11076  008E58  0E00               	movlw	0
 11077  008E5A  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11078  008E5C  0E00               	movlw	0
 11079  008E5E  6E14               	movwf	sm_init@initial_state^0,c
 11080  008E60  0E00               	movlw	0
 11081  008E62  6E16               	movwf	sm_init@hist_mode^0,c
 11082  008E64  EC07  F049         	call	_sm_init	;wreg free
 11083  008E68  0012               	return		;funcret
 11084  008E6A                     __end_of_generateErrorLearnig:
 11085                           	callstack 0
 11086                           
 11087 ;; *************** function _sm_init *****************
 11088 ;; Defined at:
 11089 ;;		line 12 in file "sm_common_MC50.c"
 11090 ;; Parameters:    Size  Location     Type
 11091 ;;  psm             2   17[COMRAM] PTR struct .
 11092 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11093 ;;  initial_stat    2   19[COMRAM] int 
 11094 ;;  hist_mode       1   21[COMRAM] enum E348
 11095 ;; Auto vars:     Size  Location     Type
 11096 ;;		None
 11097 ;; Return value:  Size  Location     Type
 11098 ;;                  1    wreg      void 
 11099 ;; Registers used:
 11100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11101 ;; Tracked objects:
 11102 ;;		On entry : 0/1
 11103 ;;		On exit  : 0/0
 11104 ;;		Unchanged: 0/0
 11105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11106 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11109 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11110 ;;Total ram usage:        5 bytes
 11111 ;; Hardware stack levels used: 1
 11112 ;; Hardware stack levels required when called: 5
 11113 ;; This function calls:
 11114 ;;		_sm_restart
 11115 ;; This function is called by:
 11116 ;;		_main
 11117 ;;		_generateErrorLearnig
 11118 ;; This function uses a non-reentrant model
 11119 ;;
 11120                           
 11121                           	psect	text20
 11122  00920E                     __ptext20:
 11123                           	callstack 0
 11124  00920E                     _sm_init:
 11125                           	callstack 25
 11126                           
 11127                           ;sm_common_MC50.c: 12: void sm_init(sm_t *psm, int initial_state, sm_history_t hist_mode
      +                          );sm_common_MC50.c: 13: {;sm_common_MC50.c: 14:  psm->initial_state = initial_state;
 11128                           
 11129                           ;incstack = 0
 11130  00920E  EE20 F002          	lfsr	2,2
 11131  009212  5012               	movf	sm_init@psm^0,w,c
 11132  009214  26D9               	addwf	fsr2l,f,c
 11133  009216  5013               	movf	(sm_init@psm+1)^0,w,c
 11134  009218  22DA               	addwfc	fsr2h,f,c
 11135  00921A  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11136  00921E  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11137                           
 11138                           ;sm_common_MC50.c: 15:  psm->history = hist_mode;
 11139  009222  EE20 F006          	lfsr	2,6
 11140  009226  5012               	movf	sm_init@psm^0,w,c
 11141  009228  26D9               	addwf	fsr2l,f,c
 11142  00922A  5013               	movf	(sm_init@psm+1)^0,w,c
 11143  00922C  22DA               	addwfc	fsr2h,f,c
 11144  00922E  C016  FFDF         	movff	sm_init@hist_mode,indf2
 11145                           
 11146                           ;sm_common_MC50.c: 16:  psm->current_state = initial_state;
 11147  009232  C012  FFD9         	movff	sm_init@psm,fsr2l
 11148  009236  C013  FFDA         	movff	sm_init@psm+1,fsr2h
 11149  00923A  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11150  00923E  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11151                           
 11152                           ;sm_common_MC50.c: 19:  psm->parent_machine = ((void*)0);
 11153  009242  EE20 F007          	lfsr	2,7
 11154  009246  5012               	movf	sm_init@psm^0,w,c
 11155  009248  26D9               	addwf	fsr2l,f,c
 11156  00924A  5013               	movf	(sm_init@psm+1)^0,w,c
 11157  00924C  22DA               	addwfc	fsr2h,f,c
 11158  00924E  0E00               	movlw	0
 11159  009250  6EDE               	movwf	postinc2,c
 11160  009252  0E00               	movlw	0
 11161  009254  6EDD               	movwf	postdec2,c
 11162                           
 11163                           ;sm_common_MC50.c: 20:  sm_restart(psm);
 11164  009256  C012  F010         	movff	sm_init@psm,sm_restart@psm
 11165  00925A  C013  F011         	movff	sm_init@psm+1,sm_restart@psm+1
 11166  00925E  ECE5  F04A         	call	_sm_restart	;wreg free
 11167  009262  0012               	return		;funcret
 11168  009264                     __end_of_sm_init:
 11169                           	callstack 0
 11170                           
 11171 ;; *************** function _sm_restart *****************
 11172 ;; Defined at:
 11173 ;;		line 23 in file "sm_common_MC50.c"
 11174 ;; Parameters:    Size  Location     Type
 11175 ;;  psm             2   15[COMRAM] PTR struct .
 11176 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11177 ;; Auto vars:     Size  Location     Type
 11178 ;;		None
 11179 ;; Return value:  Size  Location     Type
 11180 ;;                  1    wreg      void 
 11181 ;; Registers used:
 11182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11183 ;; Tracked objects:
 11184 ;;		On entry : 0/1
 11185 ;;		On exit  : 0/0
 11186 ;;		Unchanged: 0/0
 11187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11188 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11191 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11192 ;;Total ram usage:        2 bytes
 11193 ;; Hardware stack levels used: 1
 11194 ;; Hardware stack levels required when called: 4
 11195 ;; This function calls:
 11196 ;;		Nothing
 11197 ;; This function is called by:
 11198 ;;		_sm_init
 11199 ;; This function uses a non-reentrant model
 11200 ;;
 11201                           
 11202                           	psect	text21
 11203  0095CA                     __ptext21:
 11204                           	callstack 0
 11205  0095CA                     _sm_restart:
 11206                           	callstack 25
 11207                           
 11208                           ;sm_common_MC50.c: 24:  if(psm->history == HIST_NONE){
 11209                           
 11210                           ;incstack = 0
 11211  0095CA  EE20 F006          	lfsr	2,6
 11212  0095CE  5010               	movf	sm_restart@psm^0,w,c
 11213  0095D0  26D9               	addwf	fsr2l,f,c
 11214  0095D2  5011               	movf	(sm_restart@psm+1)^0,w,c
 11215  0095D4  22DA               	addwfc	fsr2h,f,c
 11216  0095D6  50DF               	movf	indf2,w,c
 11217  0095D8  A4D8               	btfss	status,2,c
 11218  0095DA  D00E               	goto	l20792
 11219                           
 11220                           ;sm_common_MC50.c: 25:   psm->current_state = psm->initial_state;
 11221  0095DC  EE20 F002          	lfsr	2,2
 11222  0095E0  5010               	movf	sm_restart@psm^0,w,c
 11223  0095E2  26D9               	addwf	fsr2l,f,c
 11224  0095E4  5011               	movf	(sm_restart@psm+1)^0,w,c
 11225  0095E6  22DA               	addwfc	fsr2h,f,c
 11226  0095E8  C010  FFE1         	movff	sm_restart@psm,fsr1l
 11227  0095EC  C011  FFE2         	movff	sm_restart@psm+1,fsr1h
 11228  0095F0  CFDE FFE6          	movff	postinc2,postinc1
 11229  0095F4  CFDD FFE5          	movff	postdec2,postdec1
 11230  0095F8                     l20792:
 11231                           
 11232                           ;sm_common_MC50.c: 27:  psm->last_event = 0;
 11233  0095F8  EE20 F004          	lfsr	2,4
 11234  0095FC  5010               	movf	sm_restart@psm^0,w,c
 11235  0095FE  26D9               	addwf	fsr2l,f,c
 11236  009600  5011               	movf	(sm_restart@psm+1)^0,w,c
 11237  009602  22DA               	addwfc	fsr2h,f,c
 11238  009604  0E00               	movlw	0
 11239  009606  6EDE               	movwf	postinc2,c
 11240  009608  0E00               	movlw	0
 11241  00960A  6EDD               	movwf	postdec2,c
 11242  00960C  0012               	return		;funcret
 11243  00960E                     __end_of_sm_restart:
 11244                           	callstack 0
 11245                           
 11246 ;; *************** function _clearLearningValue *****************
 11247 ;; Defined at:
 11248 ;;		line 436 in file "sm_ControlLearning_MC50.c"
 11249 ;; Parameters:    Size  Location     Type
 11250 ;;		None
 11251 ;; Auto vars:     Size  Location     Type
 11252 ;;		None
 11253 ;; Return value:  Size  Location     Type
 11254 ;;                  1    wreg      void 
 11255 ;; Registers used:
 11256 ;;		wreg, status,2
 11257 ;; Tracked objects:
 11258 ;;		On entry : 3F/1
 11259 ;;		On exit  : 3F/0
 11260 ;;		Unchanged: 0/0
 11261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11266 ;;Total ram usage:        0 bytes
 11267 ;; Hardware stack levels used: 1
 11268 ;; Hardware stack levels required when called: 4
 11269 ;; This function calls:
 11270 ;;		Nothing
 11271 ;; This function is called by:
 11272 ;;		_sm_execute_ControlLearning
 11273 ;; This function uses a non-reentrant model
 11274 ;;
 11275                           
 11276                           	psect	text22
 11277  00889A                     __ptext22:
 11278                           	callstack 0
 11279  00889A                     _clearLearningValue:
 11280                           	callstack 24
 11281                           
 11282                           ; BSR set to: 1
 11283                           ;sm_ControlLearning_MC50.c: 438:     learn_st.timeOpen=0;
 11284                           
 11285                           ;incstack = 0
 11286  00889A  0E00               	movlw	0
 11287  00889C  0100               	movlb	0	; () banked
 11288  00889E  6F64               	movwf	(_learn_st+4)& (0+255),b	;volatile
 11289  0088A0  0E00               	movlw	0
 11290  0088A2  6F65               	movwf	(_learn_st+5)& (0+255),b	;volatile
 11291  0088A4  0E00               	movlw	0
 11292  0088A6  6F66               	movwf	(_learn_st+6)& (0+255),b	;volatile
 11293  0088A8  0E00               	movlw	0
 11294  0088AA  6F67               	movwf	(_learn_st+7)& (0+255),b	;volatile
 11295                           
 11296                           ;sm_ControlLearning_MC50.c: 439:     learn_st.timeClose=0;
 11297  0088AC  0E00               	movlw	0
 11298  0088AE  6F60               	movwf	_learn_st& (0+255),b	;volatile
 11299  0088B0  0E00               	movlw	0
 11300  0088B2  6F61               	movwf	(_learn_st+1)& (0+255),b	;volatile
 11301  0088B4  0E00               	movlw	0
 11302  0088B6  6F62               	movwf	(_learn_st+2)& (0+255),b	;volatile
 11303  0088B8  0E00               	movlw	0
 11304  0088BA  6F63               	movwf	(_learn_st+3)& (0+255),b	;volatile
 11305                           
 11306                           ;sm_ControlLearning_MC50.c: 440:     learn_st.timeDecelerationOpen=0;
 11307  0088BC  0E00               	movlw	0
 11308  0088BE  6F69               	movwf	(_learn_st+9)& (0+255),b	;volatile
 11309                           
 11310                           ;sm_ControlLearning_MC50.c: 441:     learn_st.timeDecelerationClose=0;
 11311  0088C0  0E00               	movlw	0
 11312  0088C2  6F68               	movwf	(_learn_st+8)& (0+255),b	;volatile
 11313                           
 11314                           ;sm_ControlLearning_MC50.c: 442:     learn_st.openCurrent=0;
 11315  0088C4  0E00               	movlw	0
 11316  0088C6  6F6B               	movwf	(_learn_st+11)& (0+255),b	;volatile
 11317  0088C8  0E00               	movlw	0
 11318  0088CA  6F6A               	movwf	(_learn_st+10)& (0+255),b	;volatile
 11319                           
 11320                           ;sm_ControlLearning_MC50.c: 443:     learn_st.closeCurrent=0;
 11321  0088CC  0E00               	movlw	0
 11322  0088CE  6F6D               	movwf	(_learn_st+13)& (0+255),b	;volatile
 11323  0088D0  0E00               	movlw	0
 11324  0088D2  6F6C               	movwf	(_learn_st+12)& (0+255),b	;volatile
 11325                           
 11326                           ;sm_ControlLearning_MC50.c: 444:     learn_st.openHistCurrent=0;
 11327  0088D4  0E00               	movlw	0
 11328  0088D6  6F6F               	movwf	(_learn_st+15)& (0+255),b	;volatile
 11329  0088D8  0E00               	movlw	0
 11330  0088DA  6F6E               	movwf	(_learn_st+14)& (0+255),b	;volatile
 11331                           
 11332                           ;sm_ControlLearning_MC50.c: 445:     learn_st.closeHistCurrent=0;
 11333  0088DC  0E00               	movlw	0
 11334  0088DE  6F71               	movwf	(_learn_st+17)& (0+255),b	;volatile
 11335  0088E0  0E00               	movlw	0
 11336  0088E2  6F70               	movwf	(_learn_st+16)& (0+255),b	;volatile
 11337                           
 11338                           ;sm_ControlLearning_MC50.c: 446:     var_sys_NVM.learningCurrentNormalClose=0;
 11339  0088E4  0E00               	movlw	0
 11340  0088E6  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 11341  0088E8  0E00               	movlw	0
 11342  0088EA  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 11343                           
 11344                           ;sm_ControlLearning_MC50.c: 447:     var_sys_NVM.learningCurrentNormalOpen=0;
 11345  0088EC  0E00               	movlw	0
 11346  0088EE  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 11347  0088F0  0E00               	movlw	0
 11348  0088F2  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 11349                           
 11350                           ;sm_ControlLearning_MC50.c: 448:     var_sys_NVM.learningCurrentDecelarationClose=0;
 11351  0088F4  0E00               	movlw	0
 11352  0088F6  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 11353  0088F8  0E00               	movlw	0
 11354  0088FA  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 11355  0088FC  0E00               	movlw	0
 11356  0088FE  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 11357  008900  0E00               	movlw	0
 11358  008902  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 11359                           
 11360                           ;sm_ControlLearning_MC50.c: 449:     var_sys_NVM.learningCurrentDecelarationOpen=0;
 11361  008904  0E00               	movlw	0
 11362  008906  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 11363  008908  0E00               	movlw	0
 11364  00890A  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 11365  00890C  0E00               	movlw	0
 11366  00890E  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 11367  008910  0E00               	movlw	0
 11368  008912  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 11369                           
 11370                           ; BSR set to: 0
 11371  008914  0012               	return		;funcret
 11372  008916                     __end_of_clearLearningValue:
 11373                           	callstack 0
 11374                           
 11375 ;; *************** function _calculateMean *****************
 11376 ;; Defined at:
 11377 ;;		line 411 in file "sm_ControlLearning_MC50.c"
 11378 ;; Parameters:    Size  Location     Type
 11379 ;;  meanValue       4   15[COMRAM] unsigned long 
 11380 ;;  newValue        4   19[COMRAM] unsigned long 
 11381 ;; Auto vars:     Size  Location     Type
 11382 ;;		None
 11383 ;; Return value:  Size  Location     Type
 11384 ;;                  4   15[COMRAM] unsigned long 
 11385 ;; Registers used:
 11386 ;;		wreg, status,2, status,0
 11387 ;; Tracked objects:
 11388 ;;		On entry : 3E/1
 11389 ;;		On exit  : 3E/0
 11390 ;;		Unchanged: 3E/0
 11391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11392 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11394 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11395 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11396 ;;Total ram usage:       12 bytes
 11397 ;; Hardware stack levels used: 1
 11398 ;; Hardware stack levels required when called: 4
 11399 ;; This function calls:
 11400 ;;		Nothing
 11401 ;; This function is called by:
 11402 ;;		_sm_execute_ControlLearning
 11403 ;; This function uses a non-reentrant model
 11404 ;;
 11405                           
 11406                           	psect	text23
 11407  008ED0                     __ptext23:
 11408                           	callstack 0
 11409  008ED0                     _calculateMean:
 11410                           	callstack 24
 11411                           
 11412                           ;sm_ControlLearning_MC50.c: 411: unsigned long calculateMean(unsigned long meanValue,uns
      +                          igned long newValue);sm_ControlLearning_MC50.c: 412: {;sm_ControlLearning_MC50.c: 413:  
      +                             if(meanValue==0)
 11413                           
 11414                           ; BSR set to: 0
 11415                           ;incstack = 0
 11416  008ED0  5010               	movf	calculateMean@meanValue^0,w,c
 11417  008ED2  1011               	iorwf	(calculateMean@meanValue+1)^0,w,c
 11418  008ED4  1012               	iorwf	(calculateMean@meanValue+2)^0,w,c
 11419  008ED6  1013               	iorwf	(calculateMean@meanValue+3)^0,w,c
 11420  008ED8  A4D8               	btfss	status,2,c
 11421  008EDA  D009               	goto	l21978
 11422                           
 11423                           ;sm_ControlLearning_MC50.c: 414:     {;sm_ControlLearning_MC50.c: 415:         meanValue
      +                          =newValue;
 11424  008EDC  C014  F010         	movff	calculateMean@newValue,calculateMean@meanValue
 11425  008EE0  C015  F011         	movff	calculateMean@newValue+1,calculateMean@meanValue+1
 11426  008EE4  C016  F012         	movff	calculateMean@newValue+2,calculateMean@meanValue+2
 11427  008EE8  C017  F013         	movff	calculateMean@newValue+3,calculateMean@meanValue+3
 11428                           
 11429                           ;sm_ControlLearning_MC50.c: 416:     }
 11430  008EEC  D019               	goto	l21980
 11431  008EEE                     l21978:
 11432                           
 11433                           ;sm_ControlLearning_MC50.c: 418:     {;sm_ControlLearning_MC50.c: 419:         meanValue
      +                          =(meanValue+newValue)/2;
 11434  008EEE  5014               	movf	calculateMean@newValue^0,w,c
 11435  008EF0  2410               	addwf	calculateMean@meanValue^0,w,c
 11436  008EF2  6E18               	movwf	??_calculateMean^0,c
 11437  008EF4  5015               	movf	(calculateMean@newValue+1)^0,w,c
 11438  008EF6  2011               	addwfc	(calculateMean@meanValue+1)^0,w,c
 11439  008EF8  6E19               	movwf	(??_calculateMean+1)^0,c
 11440  008EFA  5016               	movf	(calculateMean@newValue+2)^0,w,c
 11441  008EFC  2012               	addwfc	(calculateMean@meanValue+2)^0,w,c
 11442  008EFE  6E1A               	movwf	(??_calculateMean+2)^0,c
 11443  008F00  5017               	movf	(calculateMean@newValue+3)^0,w,c
 11444  008F02  2013               	addwfc	(calculateMean@meanValue+3)^0,w,c
 11445  008F04  6E1B               	movwf	(??_calculateMean+3)^0,c
 11446  008F06  90D8               	bcf	status,0,c
 11447  008F08  321B               	rrcf	(??_calculateMean+3)^0,f,c
 11448  008F0A  321A               	rrcf	(??_calculateMean+2)^0,f,c
 11449  008F0C  3219               	rrcf	(??_calculateMean+1)^0,f,c
 11450  008F0E  3218               	rrcf	??_calculateMean^0,f,c
 11451  008F10  C018  F010         	movff	??_calculateMean,calculateMean@meanValue
 11452  008F14  C019  F011         	movff	??_calculateMean+1,calculateMean@meanValue+1
 11453  008F18  C01A  F012         	movff	??_calculateMean+2,calculateMean@meanValue+2
 11454  008F1C  C01B  F013         	movff	??_calculateMean+3,calculateMean@meanValue+3
 11455  008F20                     l21980:
 11456                           
 11457                           ;sm_ControlLearning_MC50.c: 421:     return meanValue;
 11458  008F20  C010  F010         	movff	calculateMean@meanValue,?_calculateMean
 11459  008F24  C011  F011         	movff	calculateMean@meanValue+1,?_calculateMean+1
 11460  008F28  C012  F012         	movff	calculateMean@meanValue+2,?_calculateMean+2
 11461  008F2C  C013  F013         	movff	calculateMean@meanValue+3,?_calculateMean+3
 11462  008F30  0012               	return		;funcret
 11463  008F32                     __end_of_calculateMean:
 11464                           	callstack 0
 11465                           
 11466 ;; *************** function _actionZone_Opening *****************
 11467 ;; Defined at:
 11468 ;;		line 374 in file "sm_ControlGate_MC50.c"
 11469 ;; Parameters:    Size  Location     Type
 11470 ;;		None
 11471 ;; Auto vars:     Size  Location     Type
 11472 ;;  typeOpenOrde    1   14[BANK0 ] enum E10372
 11473 ;;  securityOpen    1   13[BANK0 ] enum E10397
 11474 ;;  securityClos    1   12[BANK0 ] enum E10397
 11475 ;; Return value:  Size  Location     Type
 11476 ;;                  1    wreg      void 
 11477 ;; Registers used:
 11478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11479 ;; Tracked objects:
 11480 ;;		On entry : 3F/0
 11481 ;;		On exit  : 0/0
 11482 ;;		Unchanged: 0/0
 11483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11485 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11487 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11488 ;;Total ram usage:        3 bytes
 11489 ;; Hardware stack levels used: 1
 11490 ;; Hardware stack levels required when called: 8
 11491 ;; This function calls:
 11492 ;;		_CloseOrder
 11493 ;;		_GetOpenOrder
 11494 ;;		_GetSecurityStateInClosing
 11495 ;;		_GetSecurityStateInOpening
 11496 ;;		_InitFullAutoTime
 11497 ;;		_InitWalkAutoTime
 11498 ;;		_SetSegmentValueIntermitent
 11499 ;;		_StopOrder
 11500 ;;		_VerifyFollowMe
 11501 ;;		_controlVelocity
 11502 ;;		_setPositionInvertionInClosing
 11503 ;;		_setPositionInvertionInOpening
 11504 ;;		_sm_send_event
 11505 ;; This function is called by:
 11506 ;;		_sm_execute_ControlGate
 11507 ;; This function uses a non-reentrant model
 11508 ;;
 11509                           
 11510                           	psect	text24
 11511  005292                     __ptext24:
 11512                           	callstack 0
 11513  005292                     _actionZone_Opening:
 11514                           	callstack 21
 11515                           
 11516                           ; BSR set to: 0
 11517                           ;sm_ControlGate_MC50.c: 375:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 11518                           
 11519                           ;incstack = 0
 11520  005292  ECDF  F03F         	call	_GetSecurityStateInClosing	;wreg free
 11521  005296  0100               	movlb	0	; () banked
 11522  005298  6FE4               	movwf	actionZone_Opening@securityClosing& (0+255),b
 11523                           
 11524                           ;sm_ControlGate_MC50.c: 376:     StateEnum securityOpening = GetSecurityStateInOpening()
      +                          ;
 11525  00529A  EC32  F040         	call	_GetSecurityStateInOpening	;wreg free
 11526  00529E  0100               	movlb	0	; () banked
 11527  0052A0  6FE5               	movwf	actionZone_Opening@securityOpening& (0+255),b
 11528                           
 11529                           ; BSR set to: 0
 11530                           ;sm_ControlGate_MC50.c: 377:     TypeCMD typeOpenOrder = GetOpenOrder();
 11531  0052A2  EC98  F02F         	call	_GetOpenOrder	;wreg free
 11532  0052A6  0100               	movlb	0	; () banked
 11533  0052A8  6FE6               	movwf	actionZone_Opening@typeOpenOrder& (0+255),b
 11534                           
 11535                           ; BSR set to: 0
 11536                           ;sm_ControlGate_MC50.c: 380:     controlVelocity();
 11537  0052AA  ECA9  F02C         	call	_controlVelocity	;wreg free
 11538                           
 11539                           ;sm_ControlGate_MC50.c: 381:     InitFullAutoTime();
 11540  0052AE  EC02  F04F         	call	_InitFullAutoTime	;wreg free
 11541                           
 11542                           ; BSR set to: 0
 11543                           ;sm_ControlGate_MC50.c: 383:     var_sys.passoAPassoAutoClose = NO;
 11544  0052B2  0E00               	movlw	0
 11545  0052B4  0101               	movlb	1	; () banked
 11546  0052B6  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11547                           
 11548                           ; BSR set to: 1
 11549                           ;sm_ControlGate_MC50.c: 385:     VerifyFollowMe(securityClosing);
 11550  0052B8  0100               	movlb	0	; () banked
 11551  0052BA  51E4               	movf	actionZone_Opening@securityClosing& (0+255),w,b
 11552  0052BC  EC5A  F04E         	call	_VerifyFollowMe
 11553                           
 11554                           ;sm_ControlGate_MC50.c: 386:     if (var_sys.NumberOffErrors > 3) {
 11555  0052C0  0E03               	movlw	3
 11556  0052C2  0101               	movlb	1	; () banked
 11557  0052C4  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 11558  0052C6  D00D               	goto	l23402
 11559                           
 11560                           ; BSR set to: 1
 11561                           ;sm_ControlGate_MC50.c: 388:         var_sys.StateMotor = Stopped;
 11562  0052C8  0E00               	movlw	0
 11563  0052CA  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11564  0052CC                     l23400:
 11565                           
 11566                           ; BSR set to: 1
 11567                           ;sm_ControlGate_MC50.c: 389:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 11568  0052CC  0EE6               	movlw	low _controlGate_stateMachine
 11569  0052CE  6E12               	movwf	sm_send_event@psm^0,c
 11570  0052D0  0E01               	movlw	high _controlGate_stateMachine
 11571  0052D2  6E13               	movwf	(sm_send_event@psm+1)^0,c
 11572  0052D4  0E00               	movlw	0
 11573  0052D6  6E15               	movwf	(sm_send_event@event+1)^0,c
 11574  0052D8  0E10               	movlw	16
 11575  0052DA  6E14               	movwf	sm_send_event@event^0,c
 11576  0052DC  ECF7  F047         	call	_sm_send_event	;wreg free
 11577                           
 11578                           ;sm_ControlGate_MC50.c: 390:     } else if (var_sys.StateMotor == InOpenWalk && ts_syste
      +                          m.timeOpenWalk <= 0)
 11579  0052E0  0012               	return	
 11580  0052E2                     l23402:
 11581                           
 11582                           ; BSR set to: 1
 11583  0052E2  0E02               	movlw	2
 11584  0052E4  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 11585  0052E6  A4D8               	btfss	status,2,c
 11586  0052E8  D013               	goto	l23416
 11587                           
 11588                           ; BSR set to: 1
 11589  0052EA  BFAF               	btfsc	(_ts_system+17)& (0+255),7,b	;volatile
 11590  0052EC  D005               	goto	u27230
 11591  0052EE  51AF               	movf	(_ts_system+17)& (0+255),w,b	;volatile
 11592  0052F0  E10F               	bnz	l23416
 11593  0052F2  05AE               	decf	(_ts_system+16)& (0+255),w,b	;volatile
 11594  0052F4  B0D8               	btfsc	status,0,c
 11595  0052F6  D00C               	goto	l23416
 11596  0052F8                     u27230:
 11597                           
 11598                           ; BSR set to: 1
 11599                           ;sm_ControlGate_MC50.c: 391:     {;sm_ControlGate_MC50.c: 396:         setPositionInvert
      +                          ionInOpening();
 11600  0052F8  EC3E  F03D         	call	_setPositionInvertionInOpening	;wreg free
 11601                           
 11602                           ; BSR set to: 1
 11603                           ;sm_ControlGate_MC50.c: 397:         StopOrder();
 11604  0052FC  ECB0  F04E         	call	_StopOrder	;wreg free
 11605                           
 11606                           ;sm_ControlGate_MC50.c: 398:         InitWalkAutoTime();
 11607  005300  EC87  F04F         	call	_InitWalkAutoTime	;wreg free
 11608                           
 11609                           ; BSR set to: 0
 11610                           ;sm_ControlGate_MC50.c: 399:         var_sys.passoAPassoAutoClose = YES;
 11611  005304  0E01               	movlw	1
 11612  005306  0101               	movlb	1	; () banked
 11613  005308  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11614                           
 11615                           ; BSR set to: 1
 11616                           ;sm_ControlGate_MC50.c: 400:         Abertura_pedonal = 1;
 11617  00530A  0E01               	movlw	1
 11618  00530C  6F91               	movwf	_Abertura_pedonal& (0+255),b
 11619                           
 11620                           ;sm_ControlGate_MC50.c: 402:     } else if ((var_sys.FimCurso_OpenIsEnabled == YES)||(va
      +                          r_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost
      +                          ==NO) && (var_sys.Statedoorcontrol == st_Opening))
 11621  00530E  0012               	return	
 11622  005310                     l23416:
 11623                           
 11624                           ; BSR set to: 1
 11625  005310  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 11626  005312  B4D8               	btfsc	status,2,c
 11627  005314  D010               	goto	u27280
 11628                           
 11629                           ; BSR set to: 1
 11630  005316  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 11631  005318  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 11632  00531A  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 11633  00531C  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 11634  00531E  A4D8               	btfss	status,2,c
 11635  005320  D02F               	goto	l23436
 11636                           
 11637                           ; BSR set to: 1
 11638  005322  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 11639  005324  A4D8               	btfss	status,2,c
 11640  005326  D02C               	goto	l23436
 11641                           
 11642                           ; BSR set to: 1
 11643  005328  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 11644  00532A  A4D8               	btfss	status,2,c
 11645  00532C  D029               	goto	l23436
 11646                           
 11647                           ; BSR set to: 1
 11648  00532E  0E02               	movlw	2
 11649  005330  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 11650  005332  A4D8               	btfss	status,2,c
 11651  005334  D025               	goto	l23436
 11652  005336                     u27280:
 11653                           
 11654                           ; BSR set to: 1
 11655                           ;sm_ControlGate_MC50.c: 403:     {;sm_ControlGate_MC50.c: 408:         var_sys.Statedoor
      +                          control = st_Opened;
 11656  005336  0E04               	movlw	4
 11657  005338  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 11658                           
 11659                           ; BSR set to: 1
 11660                           ;sm_ControlGate_MC50.c: 409:         var_sys.PositionActual = var_sys_NVM.learningTimeTo
      +                          Close;
 11661  00533A  C0D0  F11E         	movff	_var_sys_NVM+56,_var_sys+30	;volatile
 11662  00533E  C0D1  F11F         	movff	_var_sys_NVM+57,_var_sys+31	;volatile
 11663  005342  C0D2  F120         	movff	_var_sys_NVM+58,_var_sys+32	;volatile
 11664  005346  C0D3  F121         	movff	_var_sys_NVM+59,_var_sys+33	;volatile
 11665                           
 11666                           ;sm_ControlGate_MC50.c: 410:         var_sys.AutoInversionActiveStop = NO;
 11667  00534A  0E00               	movlw	0
 11668  00534C  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 11669                           
 11670                           ;sm_ControlGate_MC50.c: 411:         var_sys.PositionIsLost = NO;
 11671  00534E  0E00               	movlw	0
 11672  005350  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 11673                           
 11674                           ;sm_ControlGate_MC50.c: 412:         var_sys.DigitSinalizedTemp = 1;
 11675  005352  0E01               	movlw	1
 11676  005354  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 11677                           
 11678                           ;sm_ControlGate_MC50.c: 413:         var_sys.NumberOffErrors = 0;
 11679  005356  0E00               	movlw	0
 11680  005358  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 11681                           
 11682                           ;sm_ControlGate_MC50.c: 414:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 11683  00535A  0E00               	movlw	0
 11684  00535C  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 11685  00535E  0E28               	movlw	40
 11686  005360  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 11687                           
 11688                           ; BSR set to: 1
 11689                           ;sm_ControlGate_MC50.c: 415:         SetSegmentValueIntermitent(dF, d0, ( 200/50));
 11690  005362  0E00               	movlw	0
 11691  005364  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 11692  005366  0E00               	movlw	0
 11693  005368  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 11694  00536A  0E04               	movlw	4
 11695  00536C  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 11696  00536E  0E0F               	movlw	15
 11697  005370  ECB5  F04C         	call	_SetSegmentValueIntermitent
 11698                           
 11699                           ; BSR set to: 1
 11700                           ;sm_ControlGate_MC50.c: 416:         StopOrder();
 11701  005374  ECB0  F04E         	call	_StopOrder	;wreg free
 11702                           
 11703                           ;sm_ControlGate_MC50.c: 417:         var_sys.passoAPassoAutoClose = YES;
 11704  005378  0E01               	movlw	1
 11705  00537A  0101               	movlb	1	; () banked
 11706  00537C  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11707                           
 11708                           ;sm_ControlGate_MC50.c: 419:     }
 11709  00537E  0012               	return	
 11710  005380                     l23436:
 11711                           
 11712                           ; BSR set to: 1
 11713  005380  0100               	movlb	0	; () banked
 11714  005382  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11715  005384  B4D8               	btfsc	status,2,c
 11716  005386  D012               	goto	u27320
 11717                           
 11718                           ; BSR set to: 0
 11719  005388  0101               	movlb	1	; () banked
 11720  00538A  BFC9               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11721  00538C  D025               	goto	l23456
 11722  00538E  51C9               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11723  005390  E103               	bnz	u27300
 11724  005392  05C8               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11725  005394  A0D8               	btfss	status,0,c
 11726  005396  D020               	goto	l23456
 11727  005398                     u27300:
 11728                           
 11729                           ; BSR set to: 1
 11730  005398  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 11731  00539A  A4D8               	btfss	status,2,c
 11732  00539C  D01D               	goto	l23456
 11733                           
 11734                           ; BSR set to: 1
 11735  00539E  BFCF               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 11736  0053A0  D005               	goto	u27320
 11737  0053A2  51CF               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 11738  0053A4  E119               	bnz	l23456
 11739  0053A6  05CE               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 11740  0053A8  B0D8               	btfsc	status,0,c
 11741  0053AA  D016               	goto	l23456
 11742  0053AC                     u27320:
 11743  0053AC  0101               	movlb	1	; () banked
 11744  0053AE  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 11745  0053B0  A4D8               	btfss	status,2,c
 11746  0053B2  D012               	goto	l23456
 11747                           
 11748                           ; BSR set to: 1
 11749                           ;sm_ControlGate_MC50.c: 422:         if (securityOpening != YES){
 11750  0053B4  0100               	movlb	0	; () banked
 11751  0053B6  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11752  0053B8  B4D8               	btfsc	status,2,c
 11753  0053BA  D002               	goto	l23450
 11754                           
 11755                           ; BSR set to: 0
 11756                           ;sm_ControlGate_MC50.c: 423:              var_sys.NumberOffErrors++;
 11757  0053BC  0101               	movlb	1	; () banked
 11758  0053BE  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 11759  0053C0                     l23450:
 11760                           
 11761                           ;sm_ControlGate_MC50.c: 426:         var_sys.AutoInversionActive = YES;
 11762  0053C0  0E01               	movlw	1
 11763  0053C2  0101               	movlb	1	; () banked
 11764  0053C4  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11765                           
 11766                           ; BSR set to: 1
 11767                           ;sm_ControlGate_MC50.c: 427:         ts_system.TimeWaitToNextState = ( 500/50);
 11768  0053C6  0E00               	movlw	0
 11769  0053C8  6FC3               	movwf	(_ts_system+37)& (0+255),b	;volatile
 11770  0053CA  0E0A               	movlw	10
 11771  0053CC  6FC2               	movwf	(_ts_system+36)& (0+255),b	;volatile
 11772                           
 11773                           ; BSR set to: 1
 11774                           ;sm_ControlGate_MC50.c: 428:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 11775  0053CE  0E00               	movlw	0
 11776  0053D0  6FDF               	movwf	(_ts_system+65)& (0+255),b	;volatile
 11777  0053D2  0E1E               	movlw	30
 11778  0053D4  6FDE               	movwf	(_ts_system+64)& (0+255),b	;volatile
 11779                           
 11780                           ;sm_ControlGate_MC50.c: 430:     }
 11781  0053D6  0012               	return	
 11782  0053D8                     l23456:
 11783                           
 11784                           ; BSR set to: 1
 11785  0053D8  BFC9               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11786  0053DA  D02D               	goto	l23486
 11787  0053DC  51C9               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11788  0053DE  E103               	bnz	u27350
 11789  0053E0  05C8               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11790  0053E2  A0D8               	btfss	status,0,c
 11791  0053E4  D028               	goto	l23486
 11792  0053E6                     u27350:
 11793                           
 11794                           ; BSR set to: 1
 11795  0053E6  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11796  0053E8  A4D8               	btfss	status,2,c
 11797  0053EA  D025               	goto	l23486
 11798                           
 11799                           ; BSR set to: 1
 11800                           ;sm_ControlGate_MC50.c: 432:         if (var_sys.InvertionCurrentClosing == YES) {
 11801  0053EC  0544               	decf	(_var_sys+68)& (0+255),w,b	;volatile
 11802  0053EE  A4D8               	btfss	status,2,c
 11803  0053F0  D005               	goto	l23468
 11804                           
 11805                           ; BSR set to: 1
 11806                           ;sm_ControlGate_MC50.c: 434:             var_sys.StateMotor = Stopped;
 11807  0053F2  0E00               	movlw	0
 11808  0053F4  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11809                           
 11810                           ; BSR set to: 1
 11811                           ;sm_ControlGate_MC50.c: 435:             setPositionInvertionInClosing();
 11812  0053F6  EC97  F038         	call	_setPositionInvertionInClosing	;wreg free
 11813  0053FA  D768               	goto	l23400
 11814  0053FC                     l23468:
 11815                           
 11816                           ; BSR set to: 1
 11817  0053FC  BFC3               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11818  0053FE  D005               	goto	u27380
 11819  005400  51C3               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11820  005402  E116               	bnz	l23484
 11821  005404  05C2               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11822  005406  B0D8               	btfsc	status,0,c
 11823  005408  D013               	goto	l23484
 11824  00540A                     u27380:
 11825                           
 11826                           ; BSR set to: 1
 11827                           ;sm_ControlGate_MC50.c: 438:             CloseOrder();
 11828  00540A  ECFB  F04D         	call	_CloseOrder	;wreg free
 11829                           
 11830                           ;sm_ControlGate_MC50.c: 440:             setPositionInvertionInOpening();
 11831  00540E  EC3E  F03D         	call	_setPositionInvertionInOpening	;wreg free
 11832                           
 11833                           ; BSR set to: 1
 11834                           ;sm_ControlGate_MC50.c: 441:             var_sys.AutoInversionActive = NO;
 11835  005412  0E00               	movlw	0
 11836  005414  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11837                           
 11838                           ; BSR set to: 1
 11839                           ;sm_ControlGate_MC50.c: 442:             var_sys.InvertionCurrentOpening = YES;
 11840  005416  0E01               	movlw	1
 11841  005418  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 11842                           
 11843                           ; BSR set to: 1
 11844                           ;sm_ControlGate_MC50.c: 443:             ts_system.TimeInversionStart = (1000/50);
 11845  00541A  0E00               	movlw	0
 11846  00541C  6FCF               	movwf	(_ts_system+49)& (0+255),b	;volatile
 11847  00541E  0E14               	movlw	20
 11848  005420  6FCE               	movwf	(_ts_system+48)& (0+255),b	;volatile
 11849                           
 11850                           ; BSR set to: 1
 11851                           ;sm_ControlGate_MC50.c: 444:             ts_system.InvertionTimeClosingFromOpen = (1000/
      +                          50) * 2;
 11852  005422  0E00               	movlw	0
 11853  005424  6FD1               	movwf	(_ts_system+51)& (0+255),b	;volatile
 11854  005426  0E28               	movlw	40
 11855  005428  6FD0               	movwf	(_ts_system+50)& (0+255),b	;volatile
 11856                           
 11857                           ; BSR set to: 1
 11858                           ;sm_ControlGate_MC50.c: 445:             var_sys.InvertionClosingFromOpen = YES;
 11859  00542A  0E01               	movlw	1
 11860  00542C  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 11861                           
 11862                           ;sm_ControlGate_MC50.c: 449:         } else
 11863  00542E  0012               	return	
 11864  005430                     l23484:
 11865                           
 11866                           ; BSR set to: 1
 11867                           ;sm_ControlGate_MC50.c: 450:         {;sm_ControlGate_MC50.c: 451:             var_sys.S
      +                          tateMotor = Stopped;
 11868  005430  0E00               	movlw	0
 11869  005432  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11870  005434  0012               	return	
 11871  005436                     l23486:
 11872                           
 11873                           ; BSR set to: 1
 11874  005436  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11875  005438  A4D8               	btfss	status,2,c
 11876  00543A  D00A               	goto	l23506
 11877                           
 11878                           ; BSR set to: 1
 11879                           ;sm_ControlGate_MC50.c: 457:                 var_sys.StateMotor = Stopped;
 11880  00543C  0E00               	movlw	0
 11881  00543E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11882                           
 11883                           ; BSR set to: 1
 11884                           ;sm_ControlGate_MC50.c: 460:         if (ts_system.TimeWaitToNextState <= 0) {
 11885  005440  BFC3               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11886  005442  D7E3               	goto	u27380
 11887  005444  51C3               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11888  005446  E14E               	bnz	l2723
 11889  005448  05C2               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11890  00544A  B0D8               	btfsc	status,0,c
 11891  00544C  0012               	return	
 11892  00544E  D7DD               	goto	u27380
 11893  005450                     l23506:
 11894                           
 11895                           ; BSR set to: 1
 11896  005450  5100               	movf	_var_sys& (0+255),w,b	;volatile
 11897  005452  A4D8               	btfss	status,2,c
 11898  005454  D018               	goto	l23524
 11899                           
 11900                           ; BSR set to: 1
 11901  005456  BFC3               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11902  005458  D005               	goto	u27420
 11903  00545A  51C3               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11904  00545C  E114               	bnz	l23524
 11905  00545E  05C2               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11906  005460  B0D8               	btfsc	status,0,c
 11907  005462  D011               	goto	l23524
 11908  005464                     u27420:
 11909                           
 11910                           ; BSR set to: 1
 11911                           ;sm_ControlGate_MC50.c: 479:       if(securityOpening != ST){
 11912  005464  0E02               	movlw	2
 11913  005466  0100               	movlb	0	; () banked
 11914  005468  19E5               	xorwf	actionZone_Opening@securityOpening& (0+255),w,b
 11915  00546A  B4D8               	btfsc	status,2,c
 11916  00546C  D007               	goto	l23520
 11917                           
 11918                           ; BSR set to: 0
 11919                           ;sm_ControlGate_MC50.c: 480:         var_sys.NumberOffErrors++;
 11920  00546E  0101               	movlb	1	; () banked
 11921  005470  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 11922                           
 11923                           ; BSR set to: 1
 11924                           ;sm_ControlGate_MC50.c: 482:         var_sys.StateMotor = Stopped;
 11925  005472  0E00               	movlw	0
 11926  005474  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11927                           
 11928                           ; BSR set to: 1
 11929                           ;sm_ControlGate_MC50.c: 483:         setPositionInvertionInOpening();
 11930  005476  EC3E  F03D         	call	_setPositionInvertionInOpening	;wreg free
 11931  00547A  D728               	goto	l23400
 11932  00547C                     l23520:
 11933                           
 11934                           ; BSR set to: 0
 11935                           ;sm_ControlGate_MC50.c: 486:           setPositionInvertionInOpening();
 11936  00547C  EC3E  F03D         	call	_setPositionInvertionInOpening	;wreg free
 11937  005480                     l23522:
 11938                           
 11939                           ;sm_ControlGate_MC50.c: 487:           StopOrder();
 11940  005480  ECB0  F04E         	call	_StopOrder	;wreg free
 11941  005484  0012               	return	
 11942  005486                     l23524:
 11943                           
 11944                           ; BSR set to: 1
 11945  005486  0100               	movlb	0	; () banked
 11946  005488  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 11947  00548A  A4D8               	btfss	status,2,c
 11948  00548C  D005               	goto	l23530
 11949                           
 11950                           ; BSR set to: 0
 11951                           ;sm_ControlGate_MC50.c: 492:         if (typeOpenOrder != TypeFullOpen) {
 11952  00548E  0E03               	movlw	3
 11953  005490  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11954  005492  B4D8               	btfsc	status,2,c
 11955  005494  0012               	return	
 11956  005496  D7F4               	goto	l23522
 11957  005498                     l23530:
 11958                           
 11959                           ; BSR set to: 0
 11960  005498  0E02               	movlw	2
 11961  00549A  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11962  00549C  A4D8               	btfss	status,2,c
 11963  00549E  D011               	goto	l23542
 11964                           
 11965                           ; BSR set to: 0
 11966  0054A0  0E02               	movlw	2
 11967  0054A2  0101               	movlb	1	; () banked
 11968  0054A4  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 11969  0054A6  A4D8               	btfss	status,2,c
 11970  0054A8  D00C               	goto	l23542
 11971                           
 11972                           ; BSR set to: 1
 11973  0054AA  0E02               	movlw	2
 11974  0054AC  0100               	movlb	0	; () banked
 11975  0054AE  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 11976  0054B0  B4D8               	btfsc	status,2,c
 11977  0054B2  D007               	goto	l23542
 11978                           
 11979                           ; BSR set to: 0
 11980                           ;sm_ControlGate_MC50.c: 502:         setPositionInvertionInOpening();
 11981  0054B4  EC3E  F03D         	call	_setPositionInvertionInOpening	;wreg free
 11982                           
 11983                           ; BSR set to: 1
 11984                           ;sm_ControlGate_MC50.c: 503:         StopOrder();
 11985  0054B8  ECB0  F04E         	call	_StopOrder	;wreg free
 11986                           
 11987                           ;sm_ControlGate_MC50.c: 504:         InitWalkAutoTime();
 11988  0054BC  EC87  F04F         	call	_InitWalkAutoTime	;wreg free
 11989                           
 11990                           ;sm_ControlGate_MC50.c: 505:     } else if ((typeOpenOrder == TypeFull || typeOpenOrder 
      +                          == TypeFullOpen || typeOpenOrder == TypeFullClose) && var_sys_NVM.operationMode != ModoC
      +                          ondominio) {
 11991  0054C0  0012               	return	
 11992  0054C2                     l23542:
 11993  0054C2  0100               	movlb	0	; () banked
 11994  0054C4  05E6               	decf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11995  0054C6  B4D8               	btfsc	status,2,c
 11996  0054C8  D008               	goto	u27510
 11997                           
 11998                           ; BSR set to: 0
 11999  0054CA  0E03               	movlw	3
 12000  0054CC  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12001  0054CE  B4D8               	btfsc	status,2,c
 12002  0054D0  D004               	goto	u27510
 12003                           
 12004                           ; BSR set to: 0
 12005  0054D2  0E04               	movlw	4
 12006  0054D4  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12007  0054D6  A4D8               	btfss	status,2,c
 12008  0054D8  0012               	return	
 12009  0054DA                     u27510:
 12010                           
 12011                           ; BSR set to: 0
 12012  0054DA  0E02               	movlw	2
 12013  0054DC  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 12014  0054DE  B4D8               	btfsc	status,2,c
 12015  0054E0  0012               	return	
 12016  0054E2  D7CC               	goto	l23520
 12017  0054E4                     l2723:
 12018  0054E4  0012               	return		;funcret
 12019  0054E6                     __end_of_actionZone_Opening:
 12020                           	callstack 0
 12021                           
 12022 ;; *************** function _setPositionInvertionInOpening *****************
 12023 ;; Defined at:
 12024 ;;		line 894 in file "sm_ControlGate_MC50.c"
 12025 ;; Parameters:    Size  Location     Type
 12026 ;;		None
 12027 ;; Auto vars:     Size  Location     Type
 12028 ;;		None
 12029 ;; Return value:  Size  Location     Type
 12030 ;;                  1    wreg      void 
 12031 ;; Registers used:
 12032 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12033 ;; Tracked objects:
 12034 ;;		On entry : 3E/1
 12035 ;;		On exit  : 3F/1
 12036 ;;		Unchanged: 0/0
 12037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12040 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12041 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12042 ;;Total ram usage:        8 bytes
 12043 ;; Hardware stack levels used: 1
 12044 ;; Hardware stack levels required when called: 6
 12045 ;; This function calls:
 12046 ;;		_getTimeDecelaration
 12047 ;; This function is called by:
 12048 ;;		_actionZone_Opening
 12049 ;; This function uses a non-reentrant model
 12050 ;;
 12051                           
 12052                           	psect	text25
 12053  007A7C                     __ptext25:
 12054                           	callstack 0
 12055  007A7C                     _setPositionInvertionInOpening:
 12056                           	callstack 22
 12057                           
 12058                           ;sm_ControlGate_MC50.c: 896:     if(var_sys_NVM.TypeofMotor != 2){
 12059                           
 12060                           ;incstack = 0
 12061  007A7C  0E02               	movlw	2
 12062  007A7E  0100               	movlb	0	; () banked
 12063  007A80  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 12064  007A82  B4D8               	btfsc	status,2,c
 12065  007A84  D009               	goto	l21930
 12066                           
 12067                           ; BSR set to: 0
 12068                           ;sm_ControlGate_MC50.c: 897:        var_sys.PositionActual -= ( 100/50);
 12069  007A86  0EFE               	movlw	254
 12070  007A88  0101               	movlb	1	; () banked
 12071  007A8A  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12072  007A8C  0EFF               	movlw	255
 12073  007A8E  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12074  007A90  0EFF               	movlw	255
 12075  007A92  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12076  007A94  0EFF               	movlw	255
 12077  007A96  D006               	goto	L69
 12078  007A98                     l21930:
 12079                           
 12080                           ; BSR set to: 0
 12081                           ;sm_ControlGate_MC50.c: 901:          var_sys.PositionActual += ( 50/50);
 12082  007A98  0E01               	movlw	1
 12083  007A9A  0101               	movlb	1	; () banked
 12084  007A9C  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12085  007A9E  0E00               	movlw	0
 12086  007AA0  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12087  007AA2  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12088  007AA4                     L69:
 12089  007AA4  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 12090                           
 12091                           ; BSR set to: 1
 12092                           ;sm_ControlGate_MC50.c: 906:     if (var_sys.PositionActual < getTimeDecelaration(InClos
      +                          e)) {
 12093  007AA6  0E03               	movlw	3
 12094  007AA8  ECCA  F03C         	call	_getTimeDecelaration
 12095  007AAC  5029               	movf	?_getTimeDecelaration^0,w,c
 12096  007AAE  0101               	movlb	1	; () banked
 12097  007AB0  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12098  007AB2  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12099  007AB4  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12100  007AB6  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12101  007AB8  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12102  007ABA  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12103  007ABC  0A80               	xorlw	128
 12104  007ABE  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12105  007AC0  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12106  007AC2  0A80               	xorlw	128
 12107  007AC4  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12108  007AC6  B0D8               	btfsc	status,0,c
 12109  007AC8  D004               	goto	l21936
 12110                           
 12111                           ; BSR set to: 1
 12112                           ;sm_ControlGate_MC50.c: 907:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 12113  007ACA  0E03               	movlw	3
 12114  007ACC  ECCA  F03C         	call	_getTimeDecelaration
 12115  007AD0  D015               	goto	L70
 12116  007AD2                     l21936:
 12117                           
 12118                           ; BSR set to: 1
 12119  007AD2  0E01               	movlw	1
 12120  007AD4  ECCA  F03C         	call	_getTimeDecelaration
 12121  007AD8  0101               	movlb	1	; () banked
 12122  007ADA  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12123  007ADC  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12124  007ADE  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12125  007AE0  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12126  007AE2  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12127  007AE4  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12128  007AE6  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12129  007AE8  0A80               	xorlw	128
 12130  007AEA  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12131  007AEC  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12132  007AEE  0A80               	xorlw	128
 12133  007AF0  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12134  007AF2  B0D8               	btfsc	status,0,c
 12135  007AF4  D00B               	goto	l21940
 12136                           
 12137                           ; BSR set to: 1
 12138                           ;sm_ControlGate_MC50.c: 909:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 12139  007AF6  0E01               	movlw	1
 12140  007AF8  ECCA  F03C         	call	_getTimeDecelaration
 12141  007AFC                     L70:
 12142  007AFC  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 12143  007B00  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 12144  007B04  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 12145  007B08  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 12146  007B0C                     l21940:
 12147                           
 12148                           ;sm_ControlGate_MC50.c: 911:     var_sys.TimeMaxMotorIsON = var_sys.PositionActual + var
      +                          _sys_NVM.decelarationClose*( 500/50) + (1000/50)*10;
 12149  007B0C  0100               	movlb	0	; () banked
 12150  007B0E  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12151  007B10  0D0A               	mullw	10
 12152  007B12  CFF3 F032          	movff	prodl,??_setPositionInvertionInOpening
 12153  007B16  CFF4 F033          	movff	prodh,??_setPositionInvertionInOpening+1
 12154  007B1A  0E00               	movlw	0
 12155  007B1C  BE33               	btfsc	(??_setPositionInvertionInOpening+1)^0,7,c
 12156  007B1E  0EFF               	movlw	255
 12157  007B20  6E34               	movwf	(??_setPositionInvertionInOpening+2)^0,c
 12158  007B22  6E35               	movwf	(??_setPositionInvertionInOpening+3)^0,c
 12159  007B24  0101               	movlb	1	; () banked
 12160  007B26  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12161  007B28  2432               	addwf	??_setPositionInvertionInOpening^0,w,c
 12162  007B2A  6E36               	movwf	(??_setPositionInvertionInOpening+4)^0,c
 12163  007B2C  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12164  007B2E  2033               	addwfc	(??_setPositionInvertionInOpening+1)^0,w,c
 12165  007B30  6E37               	movwf	(??_setPositionInvertionInOpening+5)^0,c
 12166  007B32  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12167  007B34  2034               	addwfc	(??_setPositionInvertionInOpening+2)^0,w,c
 12168  007B36  6E38               	movwf	(??_setPositionInvertionInOpening+6)^0,c
 12169  007B38  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12170  007B3A  2035               	addwfc	(??_setPositionInvertionInOpening+3)^0,w,c
 12171  007B3C  6E39               	movwf	(??_setPositionInvertionInOpening+7)^0,c
 12172  007B3E  0EC8               	movlw	200
 12173  007B40  2436               	addwf	(??_setPositionInvertionInOpening+4)^0,w,c
 12174  007B42  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 12175  007B44  0E00               	movlw	0
 12176  007B46  2037               	addwfc	(??_setPositionInvertionInOpening+5)^0,w,c
 12177  007B48  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 12178  007B4A  0E00               	movlw	0
 12179  007B4C  2038               	addwfc	(??_setPositionInvertionInOpening+6)^0,w,c
 12180  007B4E  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 12181  007B50  0E00               	movlw	0
 12182  007B52  2039               	addwfc	(??_setPositionInvertionInOpening+7)^0,w,c
 12183  007B54  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 12184                           
 12185                           ; BSR set to: 1
 12186  007B56  0012               	return		;funcret
 12187  007B58                     __end_of_setPositionInvertionInOpening:
 12188                           	callstack 0
 12189                           
 12190 ;; *************** function _controlVelocity *****************
 12191 ;; Defined at:
 12192 ;;		line 527 in file "outputs_MC50.c"
 12193 ;; Parameters:    Size  Location     Type
 12194 ;;		None
 12195 ;; Auto vars:     Size  Location     Type
 12196 ;;		None
 12197 ;; Return value:  Size  Location     Type
 12198 ;;                  1    wreg      void 
 12199 ;; Registers used:
 12200 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12201 ;; Tracked objects:
 12202 ;;		On entry : 3E/1
 12203 ;;		On exit  : 3E/0
 12204 ;;		Unchanged: 0/0
 12205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12208 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12209 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12210 ;;Total ram usage:        1 bytes
 12211 ;; Hardware stack levels used: 1
 12212 ;; Hardware stack levels required when called: 7
 12213 ;; This function calls:
 12214 ;;		_ControlDecelarationFactor
 12215 ;;		_InitSoftStop
 12216 ;;		_getStateOpenPosition
 12217 ;;		_getTimeDecelaration
 12218 ;; This function is called by:
 12219 ;;		_main
 12220 ;;		_actionZone_Opening
 12221 ;; This function uses a non-reentrant model
 12222 ;;
 12223                           
 12224                           	psect	text26
 12225  005952                     __ptext26:
 12226                           	callstack 0
 12227  005952                     _controlVelocity:
 12228                           	callstack 21
 12229                           
 12230                           ;outputs_MC50.c: 531:     if(var_sys.LearningIsEnabled==YES && var_sys.LearningDecelarat
      +                          ion==YES)
 12231                           
 12232                           ; BSR set to: 1
 12233                           ;incstack = 0
 12234  005952  0101               	movlb	1	; () banked
 12235  005954  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12236  005956  A4D8               	btfss	status,2,c
 12237  005958  D017               	goto	l21738
 12238                           
 12239                           ; BSR set to: 1
 12240  00595A  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 12241  00595C  A4D8               	btfss	status,2,c
 12242  00595E  D014               	goto	l21738
 12243                           
 12244                           ; BSR set to: 1
 12245                           ;outputs_MC50.c: 532:     {;outputs_MC50.c: 533:         if(powerControl_st.decelaration
      +                          Active==NO)
 12246  005960  517B               	movf	_powerControl_st& (0+255),w,b
 12247  005962  A4D8               	btfss	status,2,c
 12248  005964  D008               	goto	l21732
 12249                           
 12250                           ; BSR set to: 1
 12251                           ;outputs_MC50.c: 534:         {;outputs_MC50.c: 535:             ts_system.TimeStopedBef
      +                          oreDecelaration=( 500/50);
 12252  005966  0E00               	movlw	0
 12253  005968  6FCB               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12254  00596A  0E0A               	movlw	10
 12255  00596C  6FCA               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12256                           
 12257                           ;outputs_MC50.c: 536:             ts_system.TimeCurrentWaitForAlarm=(1000/50);
 12258  00596E  0E00               	movlw	0
 12259  005970  6FCD               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12260  005972  0E14               	movlw	20
 12261  005974  6FCC               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12262  005976                     l21732:
 12263                           
 12264                           ; BSR set to: 1
 12265                           ;outputs_MC50.c: 538:         ControlDecelarationFactor();
 12266  005976  EC29  F04F         	call	_ControlDecelarationFactor	;wreg free
 12267                           
 12268                           ; BSR set to: 1
 12269                           ;outputs_MC50.c: 539:         powerControl_st.decelarationActive=YES;
 12270  00597A  0E01               	movlw	1
 12271  00597C  6F7B               	movwf	_powerControl_st& (0+255),b
 12272                           
 12273                           ; BSR set to: 1
 12274                           ;outputs_MC50.c: 540:         var_sys.velocityFactor=0;
 12275  00597E  0E00               	movlw	0
 12276  005980  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12277  005982  0E00               	movlw	0
 12278  005984  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12279                           
 12280                           ;outputs_MC50.c: 541:     }
 12281  005986  0012               	return	
 12282  005988                     l21738:
 12283                           
 12284                           ; BSR set to: 1
 12285  005988  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12286  00598A  B4D8               	btfsc	status,2,c
 12287  00598C  D003               	goto	u25130
 12288                           
 12289                           ; BSR set to: 1
 12290  00598E  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
 12291  005990  A4D8               	btfss	status,2,c
 12292  005992  D007               	goto	l21744
 12293  005994                     u25130:
 12294                           
 12295                           ; BSR set to: 1
 12296                           ;outputs_MC50.c: 544:     {;outputs_MC50.c: 545:         var_sys.velocityFactor=0;
 12297  005994  0E00               	movlw	0
 12298  005996  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12299  005998  0E00               	movlw	0
 12300  00599A  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12301                           
 12302                           ;outputs_MC50.c: 546:         powerControl_st.decelarationActive=NO;
 12303  00599C  0E00               	movlw	0
 12304  00599E  6F7B               	movwf	_powerControl_st& (0+255),b
 12305                           
 12306                           ;outputs_MC50.c: 547:     }
 12307  0059A0  0012               	return	
 12308  0059A2                     l21744:
 12309                           
 12310                           ; BSR set to: 1
 12311  0059A2  0E03               	movlw	3
 12312  0059A4  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 12313  0059A6  A4D8               	btfss	status,2,c
 12314  0059A8  D068               	goto	l21792
 12315                           
 12316                           ; BSR set to: 1
 12317  0059AA  0E03               	movlw	3
 12318  0059AC  ECCA  F03C         	call	_getTimeDecelaration
 12319  0059B0  5029               	movf	?_getTimeDecelaration^0,w,c
 12320  0059B2  0101               	movlb	1	; () banked
 12321  0059B4  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12322  0059B6  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12323  0059B8  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12324  0059BA  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12325  0059BC  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12326  0059BE  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12327  0059C0  0A80               	xorlw	128
 12328  0059C2  0100               	movlb	0	; () banked
 12329  0059C4  6FDA               	movwf	??_controlVelocity& (0+255),b
 12330  0059C6  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12331  0059C8  0A80               	xorlw	128
 12332  0059CA  59DA               	subwfb	??_controlVelocity& (0+255),w,b
 12333  0059CC  A0D8               	btfss	status,0,c
 12334  0059CE  D004               	goto	u25160
 12335                           
 12336                           ; BSR set to: 0
 12337  0059D0  0101               	movlb	1	; () banked
 12338  0059D2  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12339  0059D4  A4D8               	btfss	status,2,c
 12340  0059D6  D051               	goto	l21792
 12341  0059D8                     u25160:
 12342  0059D8  0100               	movlb	0	; () banked
 12343  0059DA  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12344  0059DC  B4D8               	btfsc	status,2,c
 12345  0059DE  D004               	goto	u25180
 12346                           
 12347                           ; BSR set to: 0
 12348  0059E0  0101               	movlb	1	; () banked
 12349  0059E2  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12350  0059E4  B4D8               	btfsc	status,2,c
 12351  0059E6  D00C               	goto	u25200
 12352  0059E8                     u25180:
 12353  0059E8  0101               	movlb	1	; () banked
 12354  0059EA  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12355  0059EC  D005               	goto	u25190
 12356  0059EE  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12357  0059F0  E144               	bnz	l21792
 12358  0059F2  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12359  0059F4  B0D8               	btfsc	status,0,c
 12360  0059F6  D041               	goto	l21792
 12361  0059F8                     u25190:
 12362                           
 12363                           ; BSR set to: 1
 12364  0059F8  0100               	movlb	0	; () banked
 12365  0059FA  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12366  0059FC  B4D8               	btfsc	status,2,c
 12367  0059FE  D03D               	goto	l21792
 12368  005A00                     u25200:
 12369                           
 12370                           ;outputs_MC50.c: 550:     {;outputs_MC50.c: 552:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12371  005A00  0101               	movlb	1	; () banked
 12372  005A02  517B               	movf	_powerControl_st& (0+255),w,b
 12373  005A04  A4D8               	btfss	status,2,c
 12374  005A06  D022               	goto	l21778
 12375                           
 12376                           ; BSR set to: 1
 12377  005A08  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12378  005A0A  A4D8               	btfss	status,2,c
 12379  005A0C  D01F               	goto	l21778
 12380                           
 12381                           ; BSR set to: 1
 12382                           ;outputs_MC50.c: 553:                 {;outputs_MC50.c: 556:                     ts_syst
      +                          em.TimeCurrentWaitForAlarm=(1000/50);
 12383  005A0E  0E00               	movlw	0
 12384  005A10  6FCD               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12385  005A12  0E14               	movlw	20
 12386  005A14  6FCC               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12387                           
 12388                           ;outputs_MC50.c: 558:                     if (var_sys_NVM.softstop > 0){
 12389  005A16  0100               	movlb	0	; () banked
 12390  005A18  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12391  005A1A  B4D8               	btfsc	status,2,c
 12392  005A1C  D008               	goto	l21768
 12393                           
 12394                           ; BSR set to: 0
 12395                           ;outputs_MC50.c: 559:                         var_sys.AutoInversionActive = NO;
 12396  005A1E  0E00               	movlw	0
 12397  005A20  0101               	movlb	1	; () banked
 12398  005A22  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12399                           
 12400                           ;outputs_MC50.c: 560:                         var_sys.AutoInversionActiveStop = YES;
 12401  005A24  0E01               	movlw	1
 12402  005A26  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12403                           
 12404                           ; BSR set to: 1
 12405                           ;outputs_MC50.c: 561:                         InitSoftStop();
 12406  005A28  EC79  F04A         	call	_InitSoftStop	;wreg free
 12407                           
 12408                           ;outputs_MC50.c: 563:                     }
 12409  005A2C  D00F               	goto	l21778
 12410  005A2E                     l21768:
 12411                           
 12412                           ; BSR set to: 0
 12413                           ;outputs_MC50.c: 565:                     {;outputs_MC50.c: 566:                        
      +                           ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12414  005A2E  0E00               	movlw	0
 12415  005A30  0101               	movlb	1	; () banked
 12416  005A32  6FCB               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12417  005A34  0E0A               	movlw	10
 12418  005A36  6FCA               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12419                           
 12420                           ; BSR set to: 1
 12421                           ;outputs_MC50.c: 567:                         ControlDecelarationFactor();
 12422  005A38  EC29  F04F         	call	_ControlDecelarationFactor	;wreg free
 12423                           
 12424                           ; BSR set to: 1
 12425                           ;outputs_MC50.c: 568:                         powerControl_st.decelarationActive=YES;
 12426  005A3C  0E01               	movlw	1
 12427  005A3E  6F7B               	movwf	_powerControl_st& (0+255),b
 12428                           
 12429                           ; BSR set to: 1
 12430                           ;outputs_MC50.c: 569:                         var_sys.velocityFactor=0;
 12431  005A40  0E00               	movlw	0
 12432  005A42  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12433  005A44  0E00               	movlw	0
 12434  005A46  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12435                           
 12436                           ; BSR set to: 1
 12437                           ;outputs_MC50.c: 570:                          var_sys.AutoInversionActiveStop = NO;
 12438  005A48  0E00               	movlw	0
 12439  005A4A  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12440  005A4C                     l21778:
 12441                           
 12442                           ;outputs_MC50.c: 574:                 if ((var_sys.velocityFactorstop <= 0)&&(var_sys.Au
      +                          toInversionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12443  005A4C  0101               	movlb	1	; () banked
 12444  005A4E  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12445  005A50  D005               	goto	u25240
 12446  005A52  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12447  005A54  E102               	bnz	u25241
 12448  005A56  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12449  005A58  B0D8               	btfsc	status,0,c
 12450  005A5A                     u25241:
 12451  005A5A  0012               	return	
 12452  005A5C                     u25240:
 12453                           
 12454                           ; BSR set to: 1
 12455  005A5C  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12456  005A5E  A4D8               	btfss	status,2,c
 12457  005A60  0012               	return	
 12458                           
 12459                           ; BSR set to: 1
 12460  005A62  0100               	movlb	0	; () banked
 12461  005A64  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12462  005A66  B4D8               	btfsc	status,2,c
 12463  005A68  0012               	return	
 12464                           
 12465                           ; BSR set to: 0
 12466                           ;outputs_MC50.c: 575:                 {;outputs_MC50.c: 576:                 ts_system.T
      +                          imeStopedBeforeDecelaration=( 100/50);
 12467  005A6A  0E00               	movlw	0
 12468  005A6C  0101               	movlb	1	; () banked
 12469  005A6E  6FCB               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12470  005A70  0E02               	movlw	2
 12471  005A72  6FCA               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12472                           
 12473                           ;outputs_MC50.c: 577:                 var_sys.AutoInversionActiveStop = NO;
 12474  005A74  0E00               	movlw	0
 12475  005A76  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12476  005A78  D77E               	goto	l21732
 12477  005A7A                     l21792:
 12478  005A7A  0101               	movlb	1	; () banked
 12479  005A7C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12480  005A7E  ECBD  F039         	call	_getStateOpenPosition
 12481  005A82  06E8               	decf	wreg,f,c
 12482  005A84  A4D8               	btfss	status,2,c
 12483  005A86  D042               	goto	l21834
 12484                           
 12485                           ; BSR set to: 0
 12486  005A88  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12487  005A8A  B4D8               	btfsc	status,2,c
 12488  005A8C  D004               	goto	u25290
 12489                           
 12490                           ; BSR set to: 0
 12491  005A8E  0101               	movlb	1	; () banked
 12492  005A90  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12493  005A92  B4D8               	btfsc	status,2,c
 12494  005A94  D00C               	goto	u25310
 12495  005A96                     u25290:
 12496  005A96  0101               	movlb	1	; () banked
 12497  005A98  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12498  005A9A  D005               	goto	u25300
 12499  005A9C  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12500  005A9E  E136               	bnz	l21834
 12501  005AA0  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12502  005AA2  B0D8               	btfsc	status,0,c
 12503  005AA4  D033               	goto	l21834
 12504  005AA6                     u25300:
 12505                           
 12506                           ; BSR set to: 1
 12507  005AA6  0100               	movlb	0	; () banked
 12508  005AA8  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12509  005AAA  B4D8               	btfsc	status,2,c
 12510  005AAC  D02F               	goto	l21834
 12511  005AAE                     u25310:
 12512                           
 12513                           ;outputs_MC50.c: 586:     {;outputs_MC50.c: 588:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12514  005AAE  0101               	movlb	1	; () banked
 12515  005AB0  517B               	movf	_powerControl_st& (0+255),w,b
 12516  005AB2  A4D8               	btfss	status,2,c
 12517  005AB4  D022               	goto	l21820
 12518                           
 12519                           ; BSR set to: 1
 12520  005AB6  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12521  005AB8  A4D8               	btfss	status,2,c
 12522  005ABA  D01F               	goto	l21820
 12523                           
 12524                           ; BSR set to: 1
 12525                           ;outputs_MC50.c: 589:         {;outputs_MC50.c: 592:             ts_system.TimeCurrentWa
      +                          itForAlarm=(1000/50);
 12526  005ABC  0E00               	movlw	0
 12527  005ABE  6FCD               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12528  005AC0  0E14               	movlw	20
 12529  005AC2  6FCC               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12530                           
 12531                           ;outputs_MC50.c: 594:             if (var_sys_NVM.softstop > 0){
 12532  005AC4  0100               	movlb	0	; () banked
 12533  005AC6  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12534  005AC8  B4D8               	btfsc	status,2,c
 12535  005ACA  D008               	goto	l21812
 12536                           
 12537                           ; BSR set to: 0
 12538                           ;outputs_MC50.c: 595:                 var_sys.AutoInversionActive = NO;
 12539  005ACC  0E00               	movlw	0
 12540  005ACE  0101               	movlb	1	; () banked
 12541  005AD0  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12542                           
 12543                           ;outputs_MC50.c: 596:                 var_sys.AutoInversionActiveStop = YES;
 12544  005AD2  0E01               	movlw	1
 12545  005AD4  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12546                           
 12547                           ; BSR set to: 1
 12548                           ;outputs_MC50.c: 597:                 InitSoftStop();
 12549  005AD6  EC79  F04A         	call	_InitSoftStop	;wreg free
 12550                           
 12551                           ;outputs_MC50.c: 598:             }else{
 12552  005ADA  D00F               	goto	l21820
 12553  005ADC                     l21812:
 12554                           
 12555                           ; BSR set to: 0
 12556                           ;outputs_MC50.c: 599:                 ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12557  005ADC  0E00               	movlw	0
 12558  005ADE  0101               	movlb	1	; () banked
 12559  005AE0  6FCB               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12560  005AE2  0E0A               	movlw	10
 12561  005AE4  6FCA               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12562                           
 12563                           ;outputs_MC50.c: 600:                  var_sys.AutoInversionActiveStop = NO;
 12564  005AE6  0E00               	movlw	0
 12565  005AE8  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12566                           
 12567                           ; BSR set to: 1
 12568                           ;outputs_MC50.c: 601:                 ControlDecelarationFactor();
 12569  005AEA  EC29  F04F         	call	_ControlDecelarationFactor	;wreg free
 12570                           
 12571                           ; BSR set to: 1
 12572                           ;outputs_MC50.c: 602:                 powerControl_st.decelarationActive=YES;
 12573  005AEE  0E01               	movlw	1
 12574  005AF0  6F7B               	movwf	_powerControl_st& (0+255),b
 12575                           
 12576                           ; BSR set to: 1
 12577                           ;outputs_MC50.c: 603:                 var_sys.velocityFactor=0;
 12578  005AF2  0E00               	movlw	0
 12579  005AF4  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12580  005AF6  0E00               	movlw	0
 12581  005AF8  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12582  005AFA                     l21820:
 12583                           
 12584                           ;outputs_MC50.c: 607:         if ((var_sys.velocityFactorstop <= 0)&&(var_sys.AutoInvers
      +                          ionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12585  005AFA  0101               	movlb	1	; () banked
 12586  005AFC  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12587  005AFE  D7AE               	goto	u25240
 12588  005B00  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12589  005B02  E135               	bnz	l2311
 12590  005B04  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12591  005B06  B0D8               	btfsc	status,0,c
 12592  005B08  0012               	return	
 12593  005B0A  D7A8               	goto	u25240
 12594  005B0C                     l21834:
 12595  005B0C  0101               	movlb	1	; () banked
 12596  005B0E  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12597  005B10  D012               	goto	l21842
 12598  005B12  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12599  005B14  E103               	bnz	u25380
 12600  005B16  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12601  005B18  A0D8               	btfss	status,0,c
 12602  005B1A  D00D               	goto	l21842
 12603  005B1C                     u25380:
 12604                           
 12605                           ; BSR set to: 1
 12606  005B1C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12607  005B1E  B4D8               	btfsc	status,2,c
 12608  005B20  D00A               	goto	l21842
 12609                           
 12610                           ; BSR set to: 1
 12611                           ;outputs_MC50.c: 618:     {;outputs_MC50.c: 619:         var_sys.velocityFactorstop=(var
      +                          _sys.velocityFactorstop)- var_sys.SoftStopDecrementControl;
 12612  005B22  5113               	movf	(_var_sys+19)& (0+255),w,b	;volatile
 12613  005B24  5D10               	subwf	(_var_sys+16)& (0+255),w,b	;volatile
 12614  005B26  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12615  005B28  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12616  005B2A  A0D8               	btfss	status,0,c
 12617  005B2C  0511               	decf	(_var_sys+17)& (0+255),w,b	;volatile
 12618  005B2E  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12619  005B30                     l21840:
 12620                           
 12621                           ; BSR set to: 1
 12622                           ;outputs_MC50.c: 620:         powerControl_st.decelarationActive=NO;
 12623  005B30  0E00               	movlw	0
 12624  005B32  6F7B               	movwf	_powerControl_st& (0+255),b
 12625                           
 12626                           ;outputs_MC50.c: 623:     }
 12627  005B34  0012               	return	
 12628  005B36                     l21842:
 12629                           
 12630                           ; BSR set to: 1
 12631  005B36  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 12632  005B38  D010               	goto	l21850
 12633  005B3A  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12634  005B3C  E103               	bnz	u25400
 12635  005B3E  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 12636  005B40  A0D8               	btfss	status,0,c
 12637  005B42  D00B               	goto	l21850
 12638  005B44                     u25400:
 12639                           
 12640                           ; BSR set to: 1
 12641  005B44  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12642  005B46  B4D8               	btfsc	status,2,c
 12643  005B48  D008               	goto	l21850
 12644                           
 12645                           ; BSR set to: 1
 12646                           ;outputs_MC50.c: 626:     {;outputs_MC50.c: 627:         var_sys.velocityFactor=(var_sys
      +                          .velocityFactor)-var_sys.SoftStartDecrementControl;
 12647  005B4A  5114               	movf	(_var_sys+20)& (0+255),w,b	;volatile
 12648  005B4C  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 12649  005B4E  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12650  005B50  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12651  005B52  A0D8               	btfss	status,0,c
 12652  005B54  050F               	decf	(_var_sys+15)& (0+255),w,b	;volatile
 12653  005B56  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12654  005B58  D7EB               	goto	l21840
 12655  005B5A                     l21850:
 12656                           
 12657                           ; BSR set to: 1
 12658                           ;outputs_MC50.c: 634:     {;outputs_MC50.c: 635:          var_sys.velocityFactorstop = 0
      +                          ;
 12659  005B5A  0E00               	movlw	0
 12660  005B5C  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12661  005B5E  0E00               	movlw	0
 12662  005B60  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12663                           
 12664                           ;outputs_MC50.c: 636:          var_sys.velocityFactor=0;
 12665  005B62  0E00               	movlw	0
 12666  005B64  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12667  005B66  0E00               	movlw	0
 12668  005B68  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12669                           
 12670                           ;outputs_MC50.c: 637:          powerControl_st.decelarationActive=NO;
 12671  005B6A  0E00               	movlw	0
 12672  005B6C  6F7B               	movwf	_powerControl_st& (0+255),b
 12673  005B6E                     l2311:
 12674  005B6E  0012               	return		;funcret
 12675  005B70                     __end_of_controlVelocity:
 12676                           	callstack 0
 12677                           
 12678 ;; *************** function _getStateOpenPosition *****************
 12679 ;; Defined at:
 12680 ;;		line 470 in file "outputs_MC50.c"
 12681 ;; Parameters:    Size  Location     Type
 12682 ;;  stateMotor      1    wreg     enum E10381
 12683 ;; Auto vars:     Size  Location     Type
 12684 ;;  stateMotor      1    1[BANK0 ] enum E10381
 12685 ;;  state           1    0[BANK0 ] _Bool 
 12686 ;; Return value:  Size  Location     Type
 12687 ;;                  1    wreg      _Bool 
 12688 ;; Registers used:
 12689 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12690 ;; Tracked objects:
 12691 ;;		On entry : 3F/1
 12692 ;;		On exit  : 3F/0
 12693 ;;		Unchanged: 0/0
 12694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12696 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12697 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12698 ;;      Totals:         9       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12699 ;;Total ram usage:       11 bytes
 12700 ;; Hardware stack levels used: 1
 12701 ;; Hardware stack levels required when called: 6
 12702 ;; This function calls:
 12703 ;;		___lmul
 12704 ;;		_getTimeDecelaration
 12705 ;; This function is called by:
 12706 ;;		_controlVelocity
 12707 ;; This function uses a non-reentrant model
 12708 ;;
 12709                           
 12710                           	psect	text27
 12711  00737A                     __ptext27:
 12712                           	callstack 0
 12713  00737A                     _getStateOpenPosition:
 12714                           	callstack 21
 12715                           
 12716                           ;incstack = 0
 12717                           ;getStateOpenPosition@stateMotor stored from wreg
 12718  00737A  0100               	movlb	0	; () banked
 12719  00737C  6FD9               	movwf	getStateOpenPosition@stateMotor& (0+255),b
 12720                           
 12721                           ;outputs_MC50.c: 470: _Bool getStateOpenPosition(stateMotor_enum stateMotor);outputs_MC5
      +                          0.c: 471: {;outputs_MC50.c: 472:     _Bool state=0;
 12722  00737E  0E00               	movlw	0
 12723  007380  0100               	movlb	0	; () banked
 12724  007382  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12725                           
 12726                           ; BSR set to: 0
 12727                           ;outputs_MC50.c: 473:     if(var_sys.PositionIsLost==YES)
 12728  007384  0101               	movlb	1	; () banked
 12729  007386  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12730  007388  A4D8               	btfss	status,2,c
 12731  00738A  D002               	goto	l21082
 12732  00738C                     u24240:
 12733                           
 12734                           ;outputs_MC50.c: 474:     {;outputs_MC50.c: 475:         state=1;
 12735  00738C  0E01               	movlw	1
 12736  00738E  D046               	goto	L71
 12737  007390                     l21082:
 12738                           
 12739                           ; BSR set to: 1
 12740  007390  0100               	movlb	0	; () banked
 12741  007392  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12742  007394  0D14               	mullw	20
 12743  007396  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12744  00739A  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12745  00739E  0E00               	movlw	0
 12746  0073A0  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12747  0073A2  0EFF               	movlw	255
 12748  0073A4  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12749  0073A6  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12750  0073A8  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12751  0073AA  5C32               	subwf	??_getStateOpenPosition^0,w,c
 12752  0073AC  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12753  0073AE  5833               	subwfb	(??_getStateOpenPosition+1)^0,w,c
 12754  0073B0  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12755  0073B2  5834               	subwfb	(??_getStateOpenPosition+2)^0,w,c
 12756  0073B4  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12757  0073B6  5835               	subwfb	(??_getStateOpenPosition+3)^0,w,c
 12758  0073B8  B0D8               	btfsc	status,0,c
 12759  0073BA  D033               	goto	l21096
 12760                           
 12761                           ; BSR set to: 0
 12762  0073BC  0E02               	movlw	2
 12763  0073BE  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12764  0073C0  A4D8               	btfss	status,2,c
 12765  0073C2  D02F               	goto	l21096
 12766                           
 12767                           ; BSR set to: 0
 12768                           ;outputs_MC50.c: 478:     {;outputs_MC50.c: 479:         if(var_sys_NVM.walkTime<(var_sy
      +                          s_NVM.decelarationOpen/2))
 12769  0073C4  90D8               	bcf	status,0,c
 12770  0073C6  3198               	rrcf	_var_sys_NVM& (0+255),w,b	;volatile
 12771  0073C8  619C               	cpfslt	(_var_sys_NVM+4)& (0+255),b	;volatile
 12772  0073CA  D001               	goto	l21090
 12773  0073CC  D7DF               	goto	u24240
 12774  0073CE                     l21090:
 12775                           
 12776                           ; BSR set to: 0
 12777  0073CE  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12778  0073D0  0D14               	mullw	20
 12779  0073D2  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12780  0073D6  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12781  0073DA  0E00               	movlw	0
 12782  0073DC  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12783  0073DE  0EFF               	movlw	255
 12784  0073E0  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12785  0073E2  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12786  0073E4  0ED8               	movlw	216
 12787  0073E6  2432               	addwf	??_getStateOpenPosition^0,w,c
 12788  0073E8  6E36               	movwf	(??_getStateOpenPosition+4)^0,c
 12789  0073EA  0EFF               	movlw	255
 12790  0073EC  2033               	addwfc	(??_getStateOpenPosition+1)^0,w,c
 12791  0073EE  6E37               	movwf	(??_getStateOpenPosition+5)^0,c
 12792  0073F0  0EFF               	movlw	255
 12793  0073F2  2034               	addwfc	(??_getStateOpenPosition+2)^0,w,c
 12794  0073F4  6E38               	movwf	(??_getStateOpenPosition+6)^0,c
 12795  0073F6  0EFF               	movlw	255
 12796  0073F8  2035               	addwfc	(??_getStateOpenPosition+3)^0,w,c
 12797  0073FA  6E39               	movwf	(??_getStateOpenPosition+7)^0,c
 12798  0073FC  0101               	movlb	1	; () banked
 12799  0073FE  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12800  007400  5C36               	subwf	(??_getStateOpenPosition+4)^0,w,c
 12801  007402  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12802  007404  5837               	subwfb	(??_getStateOpenPosition+5)^0,w,c
 12803  007406  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12804  007408  5838               	subwfb	(??_getStateOpenPosition+6)^0,w,c
 12805  00740A  5039               	movf	(??_getStateOpenPosition+7)^0,w,c
 12806  00740C  0A80               	xorlw	128
 12807  00740E  6E3A               	movwf	(??_getStateOpenPosition+8)^0,c
 12808  007410  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12809  007412  0A80               	xorlw	128
 12810  007414  583A               	subwfb	(??_getStateOpenPosition+8)^0,w,c
 12811  007416  A0D8               	btfss	status,0,c
 12812  007418  D7B9               	goto	u24240
 12813                           
 12814                           ; BSR set to: 1
 12815                           ;outputs_MC50.c: 488:         {;outputs_MC50.c: 489:             state= 0;
 12816  00741A  0E00               	movlw	0
 12817  00741C                     L71:
 12818  00741C  0100               	movlb	0	; () banked
 12819  00741E  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12820  007420  D032               	goto	l2254
 12821  007422                     l21096:
 12822                           
 12823                           ; BSR set to: 0
 12824  007422  0E02               	movlw	2
 12825  007424  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12826  007426  B4D8               	btfsc	status,2,c
 12827  007428  D003               	goto	u24300
 12828                           
 12829                           ; BSR set to: 0
 12830  00742A  05D9               	decf	getStateOpenPosition@stateMotor& (0+255),w,b
 12831  00742C  A4D8               	btfss	status,2,c
 12832  00742E  D02B               	goto	l2254
 12833  007430                     u24300:
 12834                           
 12835                           ; BSR set to: 0
 12836                           ;outputs_MC50.c: 493:     {;outputs_MC50.c: 494:          if((var_sys_NVM.learningTimeTo
      +                          Open)<(((unsigned long)var_sys_NVM.decelarationOpen*( 500/50))))
 12837  007430  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12838  007432  6E1D               	movwf	___lmul@multiplier^0,c
 12839  007434  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 12840  007436  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 12841  007438  6A20               	clrf	(___lmul@multiplier+3)^0,c
 12842  00743A  0E0A               	movlw	10
 12843  00743C  6E21               	movwf	___lmul@multiplicand^0,c
 12844  00743E  0E00               	movlw	0
 12845  007440  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 12846  007442  0E00               	movlw	0
 12847  007444  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 12848  007446  0E00               	movlw	0
 12849  007448  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 12850  00744A  EC32  F049         	call	___lmul	;wreg free
 12851  00744E  501D               	movf	?___lmul^0,w,c
 12852  007450  0100               	movlb	0	; () banked
 12853  007452  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12854  007454  501E               	movf	(?___lmul+1)^0,w,c
 12855  007456  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12856  007458  501F               	movf	(?___lmul+2)^0,w,c
 12857  00745A  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12858  00745C  5020               	movf	(?___lmul+3)^0,w,c
 12859  00745E  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12860  007460  A0D8               	btfss	status,0,c
 12861  007462  D794               	goto	u24240
 12862                           
 12863                           ; BSR set to: 0
 12864  007464  51D9               	movf	getStateOpenPosition@stateMotor& (0+255),w,b
 12865  007466  ECCA  F03C         	call	_getTimeDecelaration
 12866  00746A  0101               	movlb	1	; () banked
 12867  00746C  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12868  00746E  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12869  007470  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12870  007472  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12871  007474  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12872  007476  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12873  007478  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12874  00747A  0A80               	xorlw	128
 12875  00747C  6E32               	movwf	??_getStateOpenPosition^0,c
 12876  00747E  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12877  007480  0A80               	xorlw	128
 12878  007482  5832               	subwfb	??_getStateOpenPosition^0,w,c
 12879  007484  D7C8               	goto	L72
 12880  007486                     l2254:
 12881                           
 12882                           ; BSR set to: 0
 12883                           ;outputs_MC50.c: 507:     return state;
 12884  007486  51D8               	movf	getStateOpenPosition@state& (0+255),w,b
 12885                           
 12886                           ; BSR set to: 0
 12887  007488  0012               	return		;funcret
 12888  00748A                     __end_of_getStateOpenPosition:
 12889                           	callstack 0
 12890                           
 12891 ;; *************** function _InitSoftStop *****************
 12892 ;; Defined at:
 12893 ;;		line 849 in file "sm_ControlGate_MC50.c"
 12894 ;; Parameters:    Size  Location     Type
 12895 ;;		None
 12896 ;; Auto vars:     Size  Location     Type
 12897 ;;		None
 12898 ;; Return value:  Size  Location     Type
 12899 ;;                  1    wreg      void 
 12900 ;; Registers used:
 12901 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12902 ;; Tracked objects:
 12903 ;;		On entry : 3F/1
 12904 ;;		On exit  : 3E/0
 12905 ;;		Unchanged: 0/0
 12906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12909 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12910 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12911 ;;Total ram usage:        1 bytes
 12912 ;; Hardware stack levels used: 1
 12913 ;; Hardware stack levels required when called: 5
 12914 ;; This function calls:
 12915 ;;		_GetMotorPower
 12916 ;; This function is called by:
 12917 ;;		_controlVelocity
 12918 ;; This function uses a non-reentrant model
 12919 ;;
 12920                           
 12921                           	psect	text28
 12922  0094F2                     __ptext28:
 12923                           	callstack 0
 12924  0094F2                     _InitSoftStop:
 12925                           	callstack 22
 12926                           
 12927                           ; BSR set to: 1
 12928                           ;sm_ControlGate_MC50.c: 850:     if (((var_sys.AutoInversionActiveStop == YES)|| (var_sy
      +                          s.AutoInversionActive == YES))&&(var_sys_NVM.softstop >0)) {
 12929                           
 12930                           ; BSR set to: 0
 12931                           ;incstack = 0
 12932  0094F2  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12933  0094F4  B4D8               	btfsc	status,2,c
 12934  0094F6  D003               	goto	u24340
 12935                           
 12936                           ; BSR set to: 1
 12937  0094F8  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 12938  0094FA  A4D8               	btfss	status,2,c
 12939  0094FC  0012               	return	
 12940  0094FE                     u24340:
 12941                           
 12942                           ; BSR set to: 1
 12943  0094FE  0100               	movlb	0	; () banked
 12944  009500  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12945  009502  B4D8               	btfsc	status,2,c
 12946  009504  0012               	return	
 12947                           
 12948                           ; BSR set to: 0
 12949                           ;sm_ControlGate_MC50.c: 853:         var_sys.velocityFactor = 0;
 12950  009506  0E00               	movlw	0
 12951  009508  0101               	movlb	1	; () banked
 12952  00950A  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12953  00950C  0E00               	movlw	0
 12954  00950E  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12955                           
 12956                           ;sm_ControlGate_MC50.c: 854:         var_sys.velocityFactorstop = 0;
 12957  009510  0E00               	movlw	0
 12958  009512  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12959  009514  0E00               	movlw	0
 12960  009516  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12961                           
 12962                           ; BSR set to: 1
 12963                           ;sm_ControlGate_MC50.c: 855:         var_sys.velocityFactorstop = GetMotorPower();
 12964  009518  EC12  F03E         	call	_GetMotorPower	;wreg free
 12965  00951C  6E14               	movwf	??_InitSoftStop^0,c
 12966  00951E  5014               	movf	??_InitSoftStop^0,w,c
 12967  009520  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12968  009522  6B11               	clrf	(_var_sys+17)& (0+255),b	;volatile
 12969                           
 12970                           ; BSR set to: 1
 12971                           ;sm_ControlGate_MC50.c: 859:         ts_system.timeSoftStop = var_sys.velocityFactorstop
      +                           + 1;
 12972  009524  0E01               	movlw	1
 12973  009526  2510               	addwf	(_var_sys+16)& (0+255),w,b	;volatile
 12974  009528  6FB6               	movwf	(_ts_system+24)& (0+255),b	;volatile
 12975  00952A  0E00               	movlw	0
 12976  00952C  2111               	addwfc	(_var_sys+17)& (0+255),w,b	;volatile
 12977  00952E  6FB7               	movwf	(_ts_system+25)& (0+255),b	;volatile
 12978                           
 12979                           ; BSR set to: 1
 12980                           ;sm_ControlGate_MC50.c: 861:         var_sys.SoftStopDecrementControl = 10 - var_sys_NVM
      +                          .softstop;
 12981  009530  0100               	movlb	0	; () banked
 12982  009532  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12983  009534  080A               	sublw	10
 12984  009536  0101               	movlb	1	; () banked
 12985  009538  6F13               	movwf	(_var_sys+19)& (0+255),b	;volatile
 12986  00953A  0012               	return		;funcret
 12987  00953C                     __end_of_InitSoftStop:
 12988                           	callstack 0
 12989                           
 12990 ;; *************** function _ControlDecelarationFactor *****************
 12991 ;; Defined at:
 12992 ;;		line 463 in file "outputs_MC50.c"
 12993 ;; Parameters:    Size  Location     Type
 12994 ;;		None
 12995 ;; Auto vars:     Size  Location     Type
 12996 ;;		None
 12997 ;; Return value:  Size  Location     Type
 12998 ;;                  1    wreg      void 
 12999 ;; Registers used:
 13000 ;;		wreg, status,2, status,0, prodl, prodh
 13001 ;; Tracked objects:
 13002 ;;		On entry : 3E/1
 13003 ;;		On exit  : 3F/1
 13004 ;;		Unchanged: 0/0
 13005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13010 ;;Total ram usage:        0 bytes
 13011 ;; Hardware stack levels used: 1
 13012 ;; Hardware stack levels required when called: 4
 13013 ;; This function calls:
 13014 ;;		Nothing
 13015 ;; This function is called by:
 13016 ;;		_controlVelocity
 13017 ;; This function uses a non-reentrant model
 13018 ;;
 13019                           
 13020                           	psect	text29
 13021  009E52                     __ptext29:
 13022                           	callstack 0
 13023  009E52                     _ControlDecelarationFactor:
 13024                           	callstack 23
 13025                           
 13026                           ;outputs_MC50.c: 465:     powerControl_st.decelarationCyclesOn=1;
 13027                           
 13028                           ;incstack = 0
 13029  009E52  0E01               	movlw	1
 13030  009E54  0101               	movlb	1	; () banked
 13031  009E56  6F7C               	movwf	(_powerControl_st+1)& (0+255),b
 13032                           
 13033                           ;outputs_MC50.c: 466:     powerControl_st.decelarationCyclesOff=2;
 13034  009E58  0E02               	movlw	2
 13035  009E5A  6F7D               	movwf	(_powerControl_st+2)& (0+255),b
 13036                           
 13037                           ; BSR set to: 1
 13038                           ;outputs_MC50.c: 467:     powerControl_st.decelarationPower=var_sys_NVM.velocityDecelara
      +                          tion*var_sys.Torquerelanty;
 13039  009E5C  0100               	movlb	0	; () banked
 13040  009E5E  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 13041  009E60  0101               	movlb	1	; () banked
 13042  009E62  0315               	mulwf	(_var_sys+21)& (0+255),b	;volatile
 13043  009E64  CFF3 F17E          	movff	prodl,_powerControl_st+3
 13044                           
 13045                           ; BSR set to: 1
 13046  009E68  0012               	return		;funcret
 13047  009E6A                     __end_of_ControlDecelarationFactor:
 13048                           	callstack 0
 13049                           
 13050 ;; *************** function _actionZone_Opened *****************
 13051 ;; Defined at:
 13052 ;;		line 514 in file "sm_ControlGate_MC50.c"
 13053 ;; Parameters:    Size  Location     Type
 13054 ;;		None
 13055 ;; Auto vars:     Size  Location     Type
 13056 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 13057 ;;  securityClos    1   31[COMRAM] enum E10397
 13058 ;; Return value:  Size  Location     Type
 13059 ;;                  1    wreg      void 
 13060 ;; Registers used:
 13061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13062 ;; Tracked objects:
 13063 ;;		On entry : 3F/0
 13064 ;;		On exit  : 3E/0
 13065 ;;		Unchanged: 0/0
 13066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13068 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13070 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13071 ;;Total ram usage:        2 bytes
 13072 ;; Hardware stack levels used: 1
 13073 ;; Hardware stack levels required when called: 7
 13074 ;; This function calls:
 13075 ;;		_CloseOrder
 13076 ;;		_GetOpenOrder
 13077 ;;		_GetSecurityStateInClosing
 13078 ;;		_InitFullAutoTime
 13079 ;;		_InitWalkAutoTime
 13080 ;;		_OpenFullOrder
 13081 ;;		_OpenWalkOrder
 13082 ;;		_VerifyFollowMe
 13083 ;; This function is called by:
 13084 ;;		_sm_execute_ControlGate
 13085 ;; This function uses a non-reentrant model
 13086 ;;
 13087                           
 13088                           	psect	text30
 13089  005B70                     __ptext30:
 13090                           	callstack 0
 13091  005B70                     _actionZone_Opened:
 13092                           	callstack 22
 13093                           
 13094                           ; BSR set to: 0
 13095                           ;sm_ControlGate_MC50.c: 515:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13096                           
 13097                           ; BSR set to: 1
 13098                           ;incstack = 0
 13099  005B70  ECDF  F03F         	call	_GetSecurityStateInClosing	;wreg free
 13100  005B74  6E20               	movwf	actionZone_Opened@securityClosing^0,c
 13101                           
 13102                           ;sm_ControlGate_MC50.c: 517:     if ((securityClosing != NO) && (Abertura_pedonal == 0))
      +                           {
 13103  005B76  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13104  005B78  B4D8               	btfsc	status,2,c
 13105  005B7A  D007               	goto	l23562
 13106  005B7C  0101               	movlb	1	; () banked
 13107  005B7E  5191               	movf	_Abertura_pedonal& (0+255),w,b
 13108  005B80  A4D8               	btfss	status,2,c
 13109  005B82  D003               	goto	l23562
 13110                           
 13111                           ; BSR set to: 1
 13112                           ;sm_ControlGate_MC50.c: 518:         InitFullAutoTime();
 13113  005B84  EC02  F04F         	call	_InitFullAutoTime	;wreg free
 13114                           
 13115                           ;sm_ControlGate_MC50.c: 519:     }
 13116  005B88  D008               	goto	l2727
 13117  005B8A                     l23562:
 13118  005B8A  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13119  005B8C  B4D8               	btfsc	status,2,c
 13120  005B8E  D005               	goto	l2727
 13121  005B90  0101               	movlb	1	; () banked
 13122  005B92  0591               	decf	_Abertura_pedonal& (0+255),w,b
 13123  005B94  B4D8               	btfsc	status,2,c
 13124                           
 13125                           ; BSR set to: 1
 13126                           ;sm_ControlGate_MC50.c: 521:          InitWalkAutoTime();
 13127  005B96  EC87  F04F         	call	_InitWalkAutoTime	;wreg free
 13128  005B9A                     l2727:
 13129                           
 13130                           ;sm_ControlGate_MC50.c: 524:     TypeCMD typeOpenOrder = GetOpenOrder();
 13131  005B9A  EC98  F02F         	call	_GetOpenOrder	;wreg free
 13132  005B9E  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13133                           
 13134                           ;sm_ControlGate_MC50.c: 526:     VerifyFollowMe(securityClosing);
 13135  005BA0  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13136  005BA2  EC5A  F04E         	call	_VerifyFollowMe
 13137                           
 13138                           ;sm_ControlGate_MC50.c: 530:     if ((PORTBbits.RB1==0) && (var_sys_NVM.autoTimeFullClos
      +                          e != 0)&&(var_sys.AutoCloseActive != 0) && (button_struct.current != 0x35)&& (var_sys_NV
      +                          M.operationMode == ModoCondominio)){
 13139  005BA6  B28E               	btfsc	142,1,c	;volatile
 13140  005BA8  D013               	goto	l2729
 13141  005BAA  0100               	movlb	0	; () banked
 13142  005BAC  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13143  005BAE  B4D8               	btfsc	status,2,c
 13144  005BB0  D00F               	goto	l2729
 13145                           
 13146                           ; BSR set to: 0
 13147  005BB2  0101               	movlb	1	; () banked
 13148  005BB4  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13149  005BB6  B4D8               	btfsc	status,2,c
 13150  005BB8  D00B               	goto	l2729
 13151                           
 13152                           ; BSR set to: 1
 13153  005BBA  0E35               	movlw	53
 13154  005BBC  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 13155  005BBE  B4D8               	btfsc	status,2,c
 13156  005BC0  D007               	goto	l2729
 13157                           
 13158                           ; BSR set to: 1
 13159  005BC2  0E02               	movlw	2
 13160  005BC4  0100               	movlb	0	; () banked
 13161  005BC6  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13162  005BC8  A4D8               	btfss	status,2,c
 13163  005BCA  D002               	goto	l2729
 13164                           
 13165                           ; BSR set to: 0
 13166                           ;sm_ControlGate_MC50.c: 531:       typeOpenOrder = NoCMD;
 13167  005BCC  0E00               	movlw	0
 13168  005BCE  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13169  005BD0                     l2729:
 13170                           
 13171                           ;sm_ControlGate_MC50.c: 535:      if (typeOpenOrder != NoCMD)
 13172  005BD0  5021               	movf	actionZone_Opened@typeOpenOrder^0,w,c
 13173  005BD2  B4D8               	btfsc	status,2,c
 13174  005BD4  D05D               	goto	l2730
 13175                           
 13176                           ;sm_ControlGate_MC50.c: 536:      {;sm_ControlGate_MC50.c: 539:         ts_system.timeSi
      +                          nalizationDigit = (1000/50) * 3;
 13177  005BD6  0E00               	movlw	0
 13178  005BD8  0101               	movlb	1	; () banked
 13179  005BDA  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13180  005BDC  0E3C               	movlw	60
 13181  005BDE  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13182                           
 13183                           ; BSR set to: 1
 13184                           ;sm_ControlGate_MC50.c: 541:        if ( var_sys_NVM.operationMode == ModoCondominio && 
      +                          var_sys_NVM.autoTimeFullClose == 0 && (typeOpenOrder == TypeFull|| typeOpenOrder == Type
      +                          FullClose ))
 13185  005BE0  0E02               	movlw	2
 13186  005BE2  0100               	movlb	0	; () banked
 13187  005BE4  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13188  005BE6  A4D8               	btfss	status,2,c
 13189  005BE8  D00D               	goto	l23594
 13190                           
 13191                           ; BSR set to: 0
 13192  005BEA  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13193  005BEC  A4D8               	btfss	status,2,c
 13194  005BEE  D00A               	goto	l23594
 13195                           
 13196                           ; BSR set to: 0
 13197  005BF0  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13198  005BF2  B4D8               	btfsc	status,2,c
 13199  005BF4  D004               	goto	u27660
 13200                           
 13201                           ; BSR set to: 0
 13202  005BF6  0E04               	movlw	4
 13203  005BF8  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13204  005BFA  A4D8               	btfss	status,2,c
 13205  005BFC  D003               	goto	l23594
 13206  005BFE                     u27660:
 13207                           
 13208                           ;sm_ControlGate_MC50.c: 542:         {;sm_ControlGate_MC50.c: 544:             CloseOrde
      +                          r();
 13209  005BFE  ECFB  F04D         	call	_CloseOrder	;wreg free
 13210                           
 13211                           ;sm_ControlGate_MC50.c: 546:         }
 13212  005C02  0012               	return	
 13213  005C04                     l23594:
 13214                           
 13215                           ; BSR set to: 0
 13216  005C04  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 13217  005C06  B4D8               	btfsc	status,2,c
 13218  005C08  D014               	goto	l23608
 13219                           
 13220                           ; BSR set to: 0
 13221                           ;sm_ControlGate_MC50.c: 553:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && var_sys.Statedoorcontrol != st_Opened) {
 13222  005C0A  0E03               	movlw	3
 13223  005C0C  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13224  005C0E  A4D8               	btfss	status,2,c
 13225  005C10  D00B               	goto	l23604
 13226                           
 13227                           ; BSR set to: 0
 13228  005C12  0101               	movlb	1	; () banked
 13229  005C14  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 13230  005C16  A4D8               	btfss	status,2,c
 13231  005C18  D007               	goto	l23604
 13232                           
 13233                           ; BSR set to: 1
 13234  005C1A  0E04               	movlw	4
 13235  005C1C  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13236  005C1E  B4D8               	btfsc	status,2,c
 13237  005C20  D003               	goto	l23604
 13238  005C22                     u27700:
 13239                           
 13240                           ; BSR set to: 1
 13241                           ;sm_ControlGate_MC50.c: 555:                 OpenFullOrder();
 13242  005C22  EC0E  F04E         	call	_OpenFullOrder	;wreg free
 13243                           
 13244                           ;sm_ControlGate_MC50.c: 556:             } else if (typeOpenOrder == TypeFullClose) {
 13245  005C26  0012               	return	
 13246  005C28                     l23604:
 13247  005C28  0E04               	movlw	4
 13248  005C2A  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13249  005C2C  A4D8               	btfss	status,2,c
 13250  005C2E  0012               	return	
 13251  005C30  D7E6               	goto	u27660
 13252  005C32                     l23608:
 13253                           
 13254                           ; BSR set to: 0
 13255  005C32  0E03               	movlw	3
 13256  005C34  0101               	movlb	1	; () banked
 13257  005C36  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13258  005C38  A4D8               	btfss	status,2,c
 13259  005C3A  D009               	goto	l23616
 13260                           
 13261                           ; BSR set to: 1
 13262  005C3C  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13263  005C3E  A4D8               	btfss	status,2,c
 13264  005C40  D006               	goto	l23616
 13265  005C42                     u27730:
 13266                           
 13267                           ; BSR set to: 1
 13268                           ;sm_ControlGate_MC50.c: 563:             OpenFullOrder();
 13269  005C42  EC0E  F04E         	call	_OpenFullOrder	;wreg free
 13270  005C46                     l23614:
 13271                           
 13272                           ;sm_ControlGate_MC50.c: 565:             var_sys.AutoInversionActive = NO;
 13273  005C46  0E00               	movlw	0
 13274  005C48  0101               	movlb	1	; () banked
 13275  005C4A  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13276                           
 13277                           ;sm_ControlGate_MC50.c: 567:         } else if (var_sys.LastState == InClose && typeOpen
      +                          Order == TypeWalk) {
 13278  005C4C  0012               	return	
 13279  005C4E                     l23616:
 13280                           
 13281                           ; BSR set to: 1
 13282  005C4E  0E03               	movlw	3
 13283  005C50  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13284  005C52  A4D8               	btfss	status,2,c
 13285  005C54  D007               	goto	l23624
 13286                           
 13287                           ; BSR set to: 1
 13288  005C56  0E02               	movlw	2
 13289  005C58  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13290  005C5A  A4D8               	btfss	status,2,c
 13291  005C5C  D003               	goto	l23624
 13292                           
 13293                           ; BSR set to: 1
 13294                           ;sm_ControlGate_MC50.c: 569:             OpenWalkOrder();
 13295  005C5E  EC5D  F046         	call	_OpenWalkOrder	;wreg free
 13296  005C62  D7F1               	goto	l23614
 13297  005C64                     l23624:
 13298                           
 13299                           ; BSR set to: 1
 13300  005C64  0E03               	movlw	3
 13301  005C66  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13302  005C68  A4D8               	btfss	status,2,c
 13303  005C6A  D005               	goto	l23634
 13304                           
 13305                           ; BSR set to: 1
 13306                           ;sm_ControlGate_MC50.c: 574:             if (var_sys.Statedoorcontrol == st_Opened){
 13307  005C6C  0E04               	movlw	4
 13308  005C6E  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13309  005C70  B4D8               	btfsc	status,2,c
 13310  005C72  0012               	return	
 13311  005C74  D7E6               	goto	u27730
 13312  005C76                     l23634:
 13313                           
 13314                           ; BSR set to: 1
 13315  005C76  0100               	movlb	0	; () banked
 13316  005C78  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13317  005C7A  B4D8               	btfsc	status,2,c
 13318  005C7C  D007               	goto	l23640
 13319                           
 13320                           ; BSR set to: 0
 13321  005C7E  0E02               	movlw	2
 13322  005C80  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13323  005C82  A4D8               	btfss	status,2,c
 13324  005C84  D003               	goto	l23640
 13325                           
 13326                           ; BSR set to: 0
 13327                           ;sm_ControlGate_MC50.c: 582:         {;sm_ControlGate_MC50.c: 584:             InitFullA
      +                          utoTime();
 13328  005C86  EC02  F04F         	call	_InitFullAutoTime	;wreg free
 13329                           
 13330                           ;sm_ControlGate_MC50.c: 586:         }
 13331  005C8A  0012               	return	
 13332  005C8C                     l23640:
 13333                           
 13334                           ; BSR set to: 0
 13335  005C8C  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13336  005C8E  D7CE               	goto	L73
 13337  005C90                     l2730:
 13338  005C90  B28E               	btfsc	142,1,c	;volatile
 13339  005C92  D00B               	goto	l23648
 13340  005C94  0100               	movlb	0	; () banked
 13341  005C96  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13342  005C98  B4D8               	btfsc	status,2,c
 13343  005C9A  D007               	goto	l23648
 13344                           
 13345                           ; BSR set to: 0
 13346                           ;sm_ControlGate_MC50.c: 597:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 13347  005C9C  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13348  005C9E  0D14               	mullw	20
 13349  005CA0  CFF3 F1B0          	movff	prodl,_ts_system+18	;volatile
 13350  005CA4  CFF4 F1B1          	movff	prodh,_ts_system+19	;volatile
 13351                           
 13352                           ;sm_ControlGate_MC50.c: 599:     }
 13353  005CA8  0012               	return	
 13354  005CAA                     l23648:
 13355  005CAA  0101               	movlb	1	; () banked
 13356  005CAC  053A               	decf	(_var_sys+58)& (0+255),w,b	;volatile
 13357  005CAE  A4D8               	btfss	status,2,c
 13358  005CB0  D00F               	goto	l23658
 13359                           
 13360                           ; BSR set to: 1
 13361  005CB2  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13362  005CB4  A4D8               	btfss	status,2,c
 13363  005CB6  D00C               	goto	l23658
 13364                           
 13365                           ; BSR set to: 1
 13366                           ;sm_ControlGate_MC50.c: 603:         var_sys.StateFollowIsOn = NO;
 13367  005CB8  0E00               	movlw	0
 13368  005CBA  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13369                           
 13370                           ; BSR set to: 1
 13371                           ;sm_ControlGate_MC50.c: 610:         var_sys.AutoCloseActive = var_sys_NVM.folow_me;
 13372  005CBC  C0AD  F123         	movff	_var_sys_NVM+21,_var_sys+35	;volatile
 13373                           
 13374                           ; BSR set to: 1
 13375                           ;sm_ControlGate_MC50.c: 611:         ts_system.timeWaitToClose = var_sys_NVM.folow_me * 
      +                          (1000/50);
 13376  005CC0  0100               	movlb	0	; () banked
 13377  005CC2  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13378  005CC4  0D14               	mullw	20
 13379  005CC6  CFF3 F1B0          	movff	prodl,_ts_system+18	;volatile
 13380  005CCA  CFF4 F1B1          	movff	prodh,_ts_system+19	;volatile
 13381                           
 13382                           ;sm_ControlGate_MC50.c: 613:     }else if (ts_system.timeWaitToClose <= 0 && var_sys_NVM
      +                          .operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES && var_sys.AutoC
      +                          loseActive != 0) {
 13383  005CCE  0012               	return	
 13384  005CD0                     l23658:
 13385                           
 13386                           ; BSR set to: 1
 13387  005CD0  BFB1               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13388  005CD2  D005               	goto	u27850
 13389  005CD4  51B1               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13390  005CD6  E113               	bnz	l23670
 13391  005CD8  05B0               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13392  005CDA  B0D8               	btfsc	status,0,c
 13393  005CDC  D010               	goto	l23670
 13394  005CDE                     u27850:
 13395                           
 13396                           ; BSR set to: 1
 13397  005CDE  0100               	movlb	0	; () banked
 13398  005CE0  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13399  005CE2  A4D8               	btfss	status,2,c
 13400  005CE4  D00C               	goto	l23670
 13401                           
 13402                           ; BSR set to: 0
 13403  005CE6  0101               	movlb	1	; () banked
 13404  005CE8  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
 13405  005CEA  A4D8               	btfss	status,2,c
 13406  005CEC  D008               	goto	l23670
 13407                           
 13408                           ; BSR set to: 1
 13409  005CEE  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13410  005CF0  B4D8               	btfsc	status,2,c
 13411  005CF2  D005               	goto	l23670
 13412                           
 13413                           ; BSR set to: 1
 13414                           ;sm_ControlGate_MC50.c: 615:         var_sys.AutoCloseActive = 0;
 13415  005CF4  0E00               	movlw	0
 13416  005CF6  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13417                           
 13418                           ;sm_ControlGate_MC50.c: 617:         var_sys.passoAPassoAutoClose = NO;
 13419  005CF8  0E00               	movlw	0
 13420  005CFA  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13421  005CFC  D780               	goto	u27660
 13422  005CFE                     l23670:
 13423  005CFE  0101               	movlb	1	; () banked
 13424  005D00  BFB1               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13425  005D02  D005               	goto	u27890
 13426  005D04  51B1               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13427  005D06  E119               	bnz	l23688
 13428  005D08  05B0               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13429  005D0A  B0D8               	btfsc	status,0,c
 13430  005D0C  D016               	goto	l23688
 13431  005D0E                     u27890:
 13432                           
 13433                           ; BSR set to: 1
 13434  005D0E  0100               	movlb	0	; () banked
 13435  005D10  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13436  005D12  B4D8               	btfsc	status,2,c
 13437  005D14  D012               	goto	l23688
 13438                           
 13439                           ; BSR set to: 0
 13440  005D16  0101               	movlb	1	; () banked
 13441  005D18  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13442  005D1A  B4D8               	btfsc	status,2,c
 13443  005D1C  D00E               	goto	l23688
 13444                           
 13445                           ; BSR set to: 1
 13446                           ;sm_ControlGate_MC50.c: 621:         var_sys.AutoCloseActive = 0;
 13447  005D1E  0E00               	movlw	0
 13448  005D20  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13449                           
 13450                           ; BSR set to: 1
 13451                           ;sm_ControlGate_MC50.c: 627:         if ( var_sys.AutoInversionActive == YES )
 13452  005D22  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13453  005D24  A4D8               	btfss	status,2,c
 13454  005D26  D003               	goto	l23684
 13455                           
 13456                           ; BSR set to: 1
 13457                           ;sm_ControlGate_MC50.c: 628:         {;sm_ControlGate_MC50.c: 629:             var_sys.A
      +                          utoInversionActive = NO;
 13458  005D28  0E00               	movlw	0
 13459  005D2A  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13460  005D2C  D77A               	goto	u27700
 13461  005D2E                     l23684:
 13462                           
 13463                           ; BSR set to: 1
 13464                           ;sm_ControlGate_MC50.c: 633:         {;sm_ControlGate_MC50.c: 634:             CloseOrde
      +                          r();
 13465  005D2E  ECFB  F04D         	call	_CloseOrder	;wreg free
 13466                           
 13467                           ;sm_ControlGate_MC50.c: 635:             var_sys.PositionIsLost = 0;
 13468  005D32  0E00               	movlw	0
 13469  005D34  0101               	movlb	1	; () banked
 13470  005D36  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13471  005D38  0012               	return	
 13472  005D3A                     l23688:
 13473  005D3A  0101               	movlb	1	; () banked
 13474  005D3C  0522               	decf	(_var_sys+34)& (0+255),w,b	;volatile
 13475  005D3E  A4D8               	btfss	status,2,c
 13476  005D40  0012               	return	
 13477                           
 13478                           ; BSR set to: 1
 13479  005D42  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13480  005D44  A4D8               	btfss	status,2,c
 13481  005D46  0012               	return	
 13482                           
 13483                           ; BSR set to: 1
 13484                           ;sm_ControlGate_MC50.c: 638:     {;sm_ControlGate_MC50.c: 639:         if (ts_system.tim
      +                          eSinalizationDigit <= 1) {
 13485  005D48  BFAB               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
 13486  005D4A  D006               	goto	u27950
 13487  005D4C  51AB               	movf	(_ts_system+13)& (0+255),w,b	;volatile
 13488  005D4E  E103               	bnz	u27951
 13489  005D50  0E02               	movlw	2
 13490  005D52  5DAA               	subwf	(_ts_system+12)& (0+255),w,b	;volatile
 13491  005D54  B0D8               	btfsc	status,0,c
 13492  005D56                     u27951:
 13493  005D56  0012               	return	
 13494  005D58                     u27950:
 13495                           
 13496                           ; BSR set to: 1
 13497                           ;sm_ControlGate_MC50.c: 640:             var_sys.DigitSinalizedTemp = NO;
 13498  005D58  0E00               	movlw	0
 13499  005D5A  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 13500  005D5C  0012               	return		;funcret
 13501  005D5E                     __end_of_actionZone_Opened:
 13502                           	callstack 0
 13503                           
 13504 ;; *************** function _VerifyFollowMe *****************
 13505 ;; Defined at:
 13506 ;;		line 117 in file "sm_ControlGate_MC50.c"
 13507 ;; Parameters:    Size  Location     Type
 13508 ;;  securityClos    1    wreg     enum E10397
 13509 ;; Auto vars:     Size  Location     Type
 13510 ;;  securityClos    1   15[COMRAM] enum E10397
 13511 ;; Return value:  Size  Location     Type
 13512 ;;                  1    wreg      void 
 13513 ;; Registers used:
 13514 ;;		wreg, status,2, status,0
 13515 ;; Tracked objects:
 13516 ;;		On entry : 0/0
 13517 ;;		On exit  : 3E/0
 13518 ;;		Unchanged: 0/0
 13519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13523 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13524 ;;Total ram usage:        1 bytes
 13525 ;; Hardware stack levels used: 1
 13526 ;; Hardware stack levels required when called: 4
 13527 ;; This function calls:
 13528 ;;		Nothing
 13529 ;; This function is called by:
 13530 ;;		_actionZone_Opening
 13531 ;;		_actionZone_Opened
 13532 ;; This function uses a non-reentrant model
 13533 ;;
 13534                           
 13535                           	psect	text31
 13536  009CB4                     __ptext31:
 13537                           	callstack 0
 13538  009CB4                     _VerifyFollowMe:
 13539                           	callstack 24
 13540                           
 13541                           ;incstack = 0
 13542                           ;VerifyFollowMe@securityClose stored from wreg
 13543  009CB4  6E10               	movwf	VerifyFollowMe@securityClose^0,c
 13544                           
 13545                           ;sm_ControlGate_MC50.c: 120:     if (var_sys_NVM.folow_me != 0 && var_sys_NVM.photoCellI
      +                          nOpen == 0)
 13546  009CB6  0100               	movlb	0	; () banked
 13547  009CB8  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13548  009CBA  B4D8               	btfsc	status,2,c
 13549  009CBC  0012               	return	
 13550                           
 13551                           ; BSR set to: 0
 13552  009CBE  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 13553  009CC0  A4D8               	btfss	status,2,c
 13554  009CC2  0012               	return	
 13555                           
 13556                           ; BSR set to: 0
 13557                           ;sm_ControlGate_MC50.c: 121:     {;sm_ControlGate_MC50.c: 122:         if (securityClose
      +                           == YES && var_sys.StateFollowIsOn == NO) {
 13558  009CC4  0410               	decf	VerifyFollowMe@securityClose^0,w,c
 13559  009CC6  A4D8               	btfss	status,2,c
 13560  009CC8  0012               	return	
 13561                           
 13562                           ; BSR set to: 0
 13563  009CCA  0101               	movlb	1	; () banked
 13564  009CCC  513A               	movf	(_var_sys+58)& (0+255),w,b	;volatile
 13565  009CCE  A4D8               	btfss	status,2,c
 13566  009CD0  0012               	return	
 13567                           
 13568                           ; BSR set to: 1
 13569                           ;sm_ControlGate_MC50.c: 123:             var_sys.StateFollowIsOn = YES;
 13570  009CD2  0E01               	movlw	1
 13571  009CD4  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13572  009CD6  0012               	return		;funcret
 13573  009CD8                     __end_of_VerifyFollowMe:
 13574                           	callstack 0
 13575                           
 13576 ;; *************** function _CloseOrder *****************
 13577 ;; Defined at:
 13578 ;;		line 63 in file "sm_ControlGate_MC50.c"
 13579 ;; Parameters:    Size  Location     Type
 13580 ;;		None
 13581 ;; Auto vars:     Size  Location     Type
 13582 ;;		None
 13583 ;; Return value:  Size  Location     Type
 13584 ;;                  1    wreg      void 
 13585 ;; Registers used:
 13586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13587 ;; Tracked objects:
 13588 ;;		On entry : 3E/1
 13589 ;;		On exit  : 3E/0
 13590 ;;		Unchanged: 0/0
 13591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13596 ;;Total ram usage:        0 bytes
 13597 ;; Hardware stack levels used: 1
 13598 ;; Hardware stack levels required when called: 6
 13599 ;; This function calls:
 13600 ;;		_InitSoftStart
 13601 ;;		_sm_send_event
 13602 ;; This function is called by:
 13603 ;;		_actionZone_Opening
 13604 ;;		_actionZone_Opened
 13605 ;; This function uses a non-reentrant model
 13606 ;;
 13607                           
 13608                           	psect	text32
 13609  009BF6                     __ptext32:
 13610                           	callstack 0
 13611  009BF6                     _CloseOrder:
 13612                           	callstack 22
 13613                           
 13614                           ;sm_ControlGate_MC50.c: 65:     var_sys.StateMotor = InClose;
 13615                           
 13616                           ;incstack = 0
 13617  009BF6  0E03               	movlw	3
 13618  009BF8  0101               	movlb	1	; () banked
 13619  009BFA  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13620                           
 13621                           ; BSR set to: 1
 13622                           ;sm_ControlGate_MC50.c: 66:     sm_send_event(&controlGate_stateMachine, ev_CloseGate);
 13623  009BFC  0EE6               	movlw	low _controlGate_stateMachine
 13624  009BFE  6E12               	movwf	sm_send_event@psm^0,c
 13625  009C00  0E01               	movlw	high _controlGate_stateMachine
 13626  009C02  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13627  009C04  0E00               	movlw	0
 13628  009C06  6E15               	movwf	(sm_send_event@event+1)^0,c
 13629  009C08  0E0E               	movlw	14
 13630  009C0A  6E14               	movwf	sm_send_event@event^0,c
 13631  009C0C  ECF7  F047         	call	_sm_send_event	;wreg free
 13632                           
 13633                           ;sm_ControlGate_MC50.c: 67:     var_sys.LastState = InClose;
 13634  009C10  0E03               	movlw	3
 13635  009C12  0101               	movlb	1	; () banked
 13636  009C14  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 13637                           
 13638                           ; BSR set to: 1
 13639                           ;sm_ControlGate_MC50.c: 68:     InitSoftStart();
 13640  009C16  EC25  F048         	call	_InitSoftStart	;wreg free
 13641  009C1A  0012               	return		;funcret
 13642  009C1C                     __end_of_CloseOrder:
 13643                           	callstack 0
 13644                           
 13645 ;; *************** function _actionZone_Closing *****************
 13646 ;; Defined at:
 13647 ;;		line 649 in file "sm_ControlGate_MC50.c"
 13648 ;; Parameters:    Size  Location     Type
 13649 ;;		None
 13650 ;; Auto vars:     Size  Location     Type
 13651 ;;  typeOpenOrde    1   50[COMRAM] enum E10372
 13652 ;;  securityClos    1   49[COMRAM] enum E10397
 13653 ;; Return value:  Size  Location     Type
 13654 ;;                  1    wreg      void 
 13655 ;; Registers used:
 13656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13657 ;; Tracked objects:
 13658 ;;		On entry : 3F/0
 13659 ;;		On exit  : 0/0
 13660 ;;		Unchanged: 0/0
 13661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13663 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13665 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13666 ;;Total ram usage:        2 bytes
 13667 ;; Hardware stack levels used: 1
 13668 ;; Hardware stack levels required when called: 7
 13669 ;; This function calls:
 13670 ;;		_GetOpenOrder
 13671 ;;		_GetSecurityStateInClosing
 13672 ;;		_InitFullAutoTime
 13673 ;;		_InitWalkAutoTime
 13674 ;;		_OpenFullOrder
 13675 ;;		_OpenWalkOrder
 13676 ;;		_SetSegmentValueIntermitent
 13677 ;;		_StopOrder
 13678 ;;		___lmul
 13679 ;;		_setPositionInvertionInClosing
 13680 ;;		_sm_send_event
 13681 ;; This function is called by:
 13682 ;;		_sm_execute_ControlGate
 13683 ;; This function uses a non-reentrant model
 13684 ;;
 13685                           
 13686                           	psect	text33
 13687  004D90                     __ptext33:
 13688                           	callstack 0
 13689  004D90                     _actionZone_Closing:
 13690                           	callstack 22
 13691                           
 13692                           ; BSR set to: 0
 13693                           ;sm_ControlGate_MC50.c: 651:     TypeCMD typeOpenOrder = GetOpenOrder();
 13694                           
 13695                           ;incstack = 0
 13696  004D90  EC98  F02F         	call	_GetOpenOrder	;wreg free
 13697  004D94  6E33               	movwf	actionZone_Closing@typeOpenOrder^0,c
 13698                           
 13699                           ;sm_ControlGate_MC50.c: 653:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13700  004D96  ECDF  F03F         	call	_GetSecurityStateInClosing	;wreg free
 13701  004D9A  6E32               	movwf	actionZone_Closing@securityClosing^0,c
 13702                           
 13703                           ;sm_ControlGate_MC50.c: 654:     Abertura_pedonal = 0;
 13704  004D9C  0E00               	movlw	0
 13705  004D9E  0101               	movlb	1	; () banked
 13706  004DA0  6F91               	movwf	_Abertura_pedonal& (0+255),b
 13707                           
 13708                           ; BSR set to: 1
 13709                           ;sm_ControlGate_MC50.c: 656:     InitFullAutoTime();
 13710  004DA2  EC02  F04F         	call	_InitFullAutoTime	;wreg free
 13711                           
 13712                           ; BSR set to: 0
 13713                           ;sm_ControlGate_MC50.c: 658:     var_sys.passoAPassoAutoClose = NO;
 13714  004DA6  0E00               	movlw	0
 13715  004DA8  0101               	movlb	1	; () banked
 13716  004DAA  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13717                           
 13718                           ; BSR set to: 1
 13719                           ;sm_ControlGate_MC50.c: 660:     if (var_sys.NumberOffErrors > 3) {
 13720  004DAC  0E03               	movlw	3
 13721  004DAE  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 13722  004DB0  D00D               	goto	l23712
 13723                           
 13724                           ; BSR set to: 1
 13725                           ;sm_ControlGate_MC50.c: 662:         var_sys.StateMotor = Stopped;
 13726  004DB2  0E00               	movlw	0
 13727  004DB4  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13728  004DB6                     l23710:
 13729                           
 13730                           ; BSR set to: 1
 13731                           ;sm_ControlGate_MC50.c: 663:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 13732  004DB6  0EE6               	movlw	low _controlGate_stateMachine
 13733  004DB8  6E12               	movwf	sm_send_event@psm^0,c
 13734  004DBA  0E01               	movlw	high _controlGate_stateMachine
 13735  004DBC  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13736  004DBE  0E00               	movlw	0
 13737  004DC0  6E15               	movwf	(sm_send_event@event+1)^0,c
 13738  004DC2  0E10               	movlw	16
 13739  004DC4  6E14               	movwf	sm_send_event@event^0,c
 13740  004DC6  ECF7  F047         	call	_sm_send_event	;wreg free
 13741                           
 13742                           ;sm_ControlGate_MC50.c: 664:     } else if ((var_sys.FimCurso_CloseIsEnabled == YES)||(v
      +                          ar_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLos
      +                          t==NO)) {
 13743  004DCA  0012               	return	
 13744  004DCC                     l23712:
 13745                           
 13746                           ; BSR set to: 1
 13747  004DCC  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 13748  004DCE  B4D8               	btfsc	status,2,c
 13749  004DD0  D00C               	goto	u28000
 13750                           
 13751                           ; BSR set to: 1
 13752  004DD2  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 13753  004DD4  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 13754  004DD6  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 13755  004DD8  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 13756  004DDA  A4D8               	btfss	status,2,c
 13757  004DDC  D05F               	goto	l23744
 13758                           
 13759                           ; BSR set to: 1
 13760  004DDE  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 13761  004DE0  A4D8               	btfss	status,2,c
 13762  004DE2  D05C               	goto	l23744
 13763                           
 13764                           ; BSR set to: 1
 13765  004DE4  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 13766  004DE6  A4D8               	btfss	status,2,c
 13767  004DE8  D059               	goto	l23744
 13768  004DEA                     u28000:
 13769                           
 13770                           ; BSR set to: 1
 13771                           ;sm_ControlGate_MC50.c: 666:         if (var_sys_NVM.flashLightMode == 2) {
 13772  004DEA  0E02               	movlw	2
 13773  004DEC  0100               	movlb	0	; () banked
 13774  004DEE  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 13775  004DF0  A4D8               	btfss	status,2,c
 13776  004DF2  D018               	goto	l23724
 13777                           
 13778                           ; BSR set to: 0
 13779                           ;sm_ControlGate_MC50.c: 667:             ts_system.TimeOnFlashLigth = (long) ((long) var
      +                          _sys_NVM.ligthTime * ((1000/50)*60));
 13780  004DF4  51AC               	movf	(_var_sys_NVM+20)& (0+255),w,b	;volatile
 13781  004DF6  6E1D               	movwf	___lmul@multiplier^0,c
 13782  004DF8  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 13783  004DFA  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 13784  004DFC  6A20               	clrf	(___lmul@multiplier+3)^0,c
 13785  004DFE  0EB0               	movlw	176
 13786  004E00  6E21               	movwf	___lmul@multiplicand^0,c
 13787  004E02  0E04               	movlw	4
 13788  004E04  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 13789  004E06  0E00               	movlw	0
 13790  004E08  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 13791  004E0A  0E00               	movlw	0
 13792  004E0C  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 13793  004E0E  EC32  F049         	call	___lmul	;wreg free
 13794  004E12  C01D  F1BE         	movff	?___lmul,_ts_system+32	;volatile
 13795  004E16  C01E  F1BF         	movff	?___lmul+1,_ts_system+33	;volatile
 13796  004E1A  C01F  F1C0         	movff	?___lmul+2,_ts_system+34	;volatile
 13797  004E1E  C020  F1C1         	movff	?___lmul+3,_ts_system+35	;volatile
 13798                           
 13799                           ;sm_ControlGate_MC50.c: 668:         }
 13800  004E22  D009               	goto	l2773
 13801  004E24                     l23724:
 13802                           
 13803                           ; BSR set to: 0
 13804                           ;sm_ControlGate_MC50.c: 670:             ts_system.TimeOnFlashLigth = 0;
 13805  004E24  0E00               	movlw	0
 13806  004E26  0101               	movlb	1	; () banked
 13807  004E28  6FBE               	movwf	(_ts_system+32)& (0+255),b	;volatile
 13808  004E2A  0E00               	movlw	0
 13809  004E2C  6FBF               	movwf	(_ts_system+33)& (0+255),b	;volatile
 13810  004E2E  0E00               	movlw	0
 13811  004E30  6FC0               	movwf	(_ts_system+34)& (0+255),b	;volatile
 13812  004E32  0E00               	movlw	0
 13813  004E34  6FC1               	movwf	(_ts_system+35)& (0+255),b	;volatile
 13814  004E36                     l2773:
 13815                           
 13816                           ;sm_ControlGate_MC50.c: 672:         var_sys.AutoInversionActiveStop = NO;
 13817  004E36  0E00               	movlw	0
 13818  004E38  0101               	movlb	1	; () banked
 13819  004E3A  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 13820                           
 13821                           ;sm_ControlGate_MC50.c: 674:         var_sys.Statedoorcontrol = st_Closed;
 13822  004E3C  0E01               	movlw	1
 13823  004E3E  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 13824                           
 13825                           ; BSR set to: 1
 13826                           ;sm_ControlGate_MC50.c: 675:         var_sys.actualCounterMoves++;
 13827  004E40  0E01               	movlw	1
 13828  004E42  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
 13829  004E44  0E00               	movlw	0
 13830  004E46  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
 13831  004E48  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
 13832  004E4A  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
 13833                           
 13834                           ; BSR set to: 1
 13835                           ;sm_ControlGate_MC50.c: 676:         var_sys.Timewalkisactived = 0;
 13836  004E4C  0E00               	movlw	0
 13837  004E4E  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 13838                           
 13839                           ; BSR set to: 1
 13840                           ;sm_ControlGate_MC50.c: 677:         var_sys.PositionActual = 0;
 13841  004E50  0E00               	movlw	0
 13842  004E52  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 13843  004E54  0E00               	movlw	0
 13844  004E56  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 13845  004E58  0E00               	movlw	0
 13846  004E5A  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 13847  004E5C  0E00               	movlw	0
 13848  004E5E  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 13849                           
 13850                           ; BSR set to: 1
 13851                           ;sm_ControlGate_MC50.c: 679:         var_sys.PositionIsLost = NO;
 13852  004E60  0E00               	movlw	0
 13853  004E62  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13854                           
 13855                           ; BSR set to: 1
 13856                           ;sm_ControlGate_MC50.c: 680:         var_sys.NumberOffErrors = 0;
 13857  004E64  0E00               	movlw	0
 13858  004E66  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 13859                           
 13860                           ; BSR set to: 1
 13861                           ;sm_ControlGate_MC50.c: 681:         var_sys.StateMotor = Stopped;
 13862  004E68  0E00               	movlw	0
 13863  004E6A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13864                           
 13865                           ; BSR set to: 1
 13866                           ;sm_ControlGate_MC50.c: 683:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 13867  004E6C  0E00               	movlw	0
 13868  004E6E  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13869  004E70  0E28               	movlw	40
 13870  004E72  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13871                           
 13872                           ; BSR set to: 1
 13873                           ;sm_ControlGate_MC50.c: 684:         SetSegmentValueIntermitent(dF, dC, ( 200/50));
 13874  004E74  0E0C               	movlw	12
 13875  004E76  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 13876  004E78  0E00               	movlw	0
 13877  004E7A  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 13878  004E7C  0E04               	movlw	4
 13879  004E7E  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 13880  004E80  0E0F               	movlw	15
 13881  004E82  ECB5  F04C         	call	_SetSegmentValueIntermitent
 13882                           
 13883                           ; BSR set to: 1
 13884                           ;sm_ControlGate_MC50.c: 687:          sm_send_event(&controlGate_stateMachine, ev_Closed
      +                          Gate);
 13885  004E86  0EE6               	movlw	low _controlGate_stateMachine
 13886  004E88  6E12               	movwf	sm_send_event@psm^0,c
 13887  004E8A  0E01               	movlw	high _controlGate_stateMachine
 13888  004E8C  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13889  004E8E  0E00               	movlw	0
 13890  004E90  6E15               	movwf	(sm_send_event@event+1)^0,c
 13891  004E92  0E0F               	movlw	15
 13892  004E94  6E14               	movwf	sm_send_event@event^0,c
 13893  004E96  ECF7  F047         	call	_sm_send_event	;wreg free
 13894                           
 13895                           ;sm_ControlGate_MC50.c: 691:     }
 13896  004E9A  0012               	return	
 13897  004E9C                     l23744:
 13898                           
 13899                           ; BSR set to: 1
 13900  004E9C  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 13901  004E9E  B4D8               	btfsc	status,2,c
 13902  004EA0  D011               	goto	u28050
 13903                           
 13904                           ; BSR set to: 1
 13905  004EA2  BFC9               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 13906  004EA4  D021               	goto	l23764
 13907  004EA6  51C9               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 13908  004EA8  E103               	bnz	u28030
 13909  004EAA  05C8               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 13910  004EAC  A0D8               	btfss	status,0,c
 13911  004EAE  D01C               	goto	l23764
 13912  004EB0                     u28030:
 13913                           
 13914                           ; BSR set to: 1
 13915  004EB0  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 13916  004EB2  A4D8               	btfss	status,2,c
 13917  004EB4  D019               	goto	l23764
 13918                           
 13919                           ; BSR set to: 1
 13920  004EB6  BFCF               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 13921  004EB8  D005               	goto	u28050
 13922  004EBA  51CF               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 13923  004EBC  E115               	bnz	l23764
 13924  004EBE  05CE               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 13925  004EC0  B0D8               	btfsc	status,0,c
 13926  004EC2  D012               	goto	l23764
 13927  004EC4                     u28050:
 13928                           
 13929                           ; BSR set to: 1
 13930  004EC4  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 13931  004EC6  A4D8               	btfss	status,2,c
 13932  004EC8  D00F               	goto	l23764
 13933                           
 13934                           ; BSR set to: 1
 13935                           ;sm_ControlGate_MC50.c: 694:          if (securityClosing != YES){
 13936  004ECA  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 13937  004ECC  A4D8               	btfss	status,2,c
 13938                           
 13939                           ; BSR set to: 1
 13940                           ;sm_ControlGate_MC50.c: 695:             var_sys.NumberOffErrors++;
 13941  004ECE  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 13942                           
 13943                           ; BSR set to: 1
 13944                           ;sm_ControlGate_MC50.c: 697:         var_sys.NumberOffErrors++;
 13945                           
 13946                           ;sm_ControlGate_MC50.c: 696:         }
 13947  004ED0  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 13948                           
 13949                           ; BSR set to: 1
 13950                           ;sm_ControlGate_MC50.c: 698:         var_sys.AutoInversionActive = YES;
 13951  004ED2  0E01               	movlw	1
 13952  004ED4  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13953                           
 13954                           ; BSR set to: 1
 13955                           ;sm_ControlGate_MC50.c: 699:         ts_system.TimeWaitToNextState = ( 500/50);
 13956  004ED6  0E00               	movlw	0
 13957  004ED8  6FC3               	movwf	(_ts_system+37)& (0+255),b	;volatile
 13958  004EDA  0E0A               	movlw	10
 13959  004EDC  6FC2               	movwf	(_ts_system+36)& (0+255),b	;volatile
 13960                           
 13961                           ; BSR set to: 1
 13962                           ;sm_ControlGate_MC50.c: 700:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 13963  004EDE  0E00               	movlw	0
 13964  004EE0  6FDF               	movwf	(_ts_system+65)& (0+255),b	;volatile
 13965  004EE2  0E1E               	movlw	30
 13966  004EE4  6FDE               	movwf	(_ts_system+64)& (0+255),b	;volatile
 13967                           
 13968                           ;sm_ControlGate_MC50.c: 702:     }
 13969  004EE6  0012               	return	
 13970  004EE8                     l23764:
 13971                           
 13972                           ; BSR set to: 1
 13973  004EE8  BFC9               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 13974  004EEA  D02E               	goto	l23794
 13975  004EEC  51C9               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 13976  004EEE  E103               	bnz	u28080
 13977  004EF0  05C8               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 13978  004EF2  A0D8               	btfss	status,0,c
 13979  004EF4  D029               	goto	l23794
 13980  004EF6                     u28080:
 13981                           
 13982                           ; BSR set to: 1
 13983  004EF6  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13984  004EF8  A4D8               	btfss	status,2,c
 13985  004EFA  D026               	goto	l23794
 13986                           
 13987                           ; BSR set to: 1
 13988                           ;sm_ControlGate_MC50.c: 704:         if (var_sys.InvertionCurrentOpening == YES) {
 13989  004EFC  0545               	decf	(_var_sys+69)& (0+255),w,b	;volatile
 13990  004EFE  A4D8               	btfss	status,2,c
 13991  004F00  D005               	goto	l23776
 13992  004F02                     u28100:
 13993                           
 13994                           ; BSR set to: 1
 13995                           ;sm_ControlGate_MC50.c: 706:             var_sys.StateMotor = Stopped;
 13996  004F02  0E00               	movlw	0
 13997  004F04  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13998                           
 13999                           ; BSR set to: 1
 14000                           ;sm_ControlGate_MC50.c: 707:             setPositionInvertionInClosing();
 14001  004F06  EC97  F038         	call	_setPositionInvertionInClosing	;wreg free
 14002  004F0A  D755               	goto	l23710
 14003  004F0C                     l23776:
 14004                           
 14005                           ; BSR set to: 1
 14006  004F0C  BFC3               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 14007  004F0E  D005               	goto	u28110
 14008  004F10  51C3               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 14009  004F12  E117               	bnz	l23792
 14010  004F14  05C2               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 14011  004F16  B0D8               	btfsc	status,0,c
 14012  004F18  D014               	goto	l23792
 14013  004F1A                     u28110:
 14014                           
 14015                           ; BSR set to: 1
 14016                           ;sm_ControlGate_MC50.c: 710:          if(var_sys.Timewalkisactived == YES){
 14017  004F1A  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 14018  004F1C  A4D8               	btfss	status,2,c
 14019  004F1E  D003               	goto	l23782
 14020                           
 14021                           ; BSR set to: 1
 14022                           ;sm_ControlGate_MC50.c: 711:                 OpenWalkOrder();
 14023  004F20  EC5D  F046         	call	_OpenWalkOrder	;wreg free
 14024                           
 14025                           ;sm_ControlGate_MC50.c: 713:             }
 14026  004F24  D004               	goto	l23786
 14027  004F26                     l23782:
 14028                           
 14029                           ; BSR set to: 1
 14030                           ;sm_ControlGate_MC50.c: 716:             OpenFullOrder();
 14031  004F26  EC0E  F04E         	call	_OpenFullOrder	;wreg free
 14032                           
 14033                           ;sm_ControlGate_MC50.c: 718:             setPositionInvertionInClosing();
 14034  004F2A  EC97  F038         	call	_setPositionInvertionInClosing	;wreg free
 14035  004F2E                     l23786:
 14036                           
 14037                           ;sm_ControlGate_MC50.c: 720:             var_sys.AutoInversionActive = NO;
 14038  004F2E  0E00               	movlw	0
 14039  004F30  0101               	movlb	1	; () banked
 14040  004F32  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14041                           
 14042                           ; BSR set to: 1
 14043                           ;sm_ControlGate_MC50.c: 721:             var_sys.InvertionCurrentClosing = YES;
 14044  004F34  0E01               	movlw	1
 14045  004F36  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 14046                           
 14047                           ; BSR set to: 1
 14048                           ;sm_ControlGate_MC50.c: 722:             ts_system.TimeInversionStart = (1000/50);
 14049  004F38  0E00               	movlw	0
 14050  004F3A  6FCF               	movwf	(_ts_system+49)& (0+255),b	;volatile
 14051  004F3C  0E14               	movlw	20
 14052  004F3E  6FCE               	movwf	(_ts_system+48)& (0+255),b	;volatile
 14053                           
 14054                           ;sm_ControlGate_MC50.c: 726:         } else
 14055  004F40  0012               	return	
 14056  004F42                     l23792:
 14057                           
 14058                           ; BSR set to: 1
 14059                           ;sm_ControlGate_MC50.c: 727:         {;sm_ControlGate_MC50.c: 728:             var_sys.S
      +                          tateMotor = Stopped;
 14060  004F42  0E00               	movlw	0
 14061  004F44  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14062  004F46  0012               	return	
 14063  004F48                     l23794:
 14064                           
 14065                           ; BSR set to: 1
 14066  004F48  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 14067  004F4A  A4D8               	btfss	status,2,c
 14068  004F4C  D017               	goto	l23810
 14069                           
 14070                           ; BSR set to: 1
 14071                           ;sm_ControlGate_MC50.c: 732:                 var_sys.StateMotor = Stopped;
 14072  004F4E  0E00               	movlw	0
 14073  004F50  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14074                           
 14075                           ; BSR set to: 1
 14076                           ;sm_ControlGate_MC50.c: 737:         if (ts_system.TimeWaitToNextState <= 0) {
 14077  004F52  BFC3               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 14078  004F54  D005               	goto	u28140
 14079  004F56  51C3               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 14080  004F58  E160               	bnz	l2810
 14081  004F5A  05C2               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 14082  004F5C  B0D8               	btfsc	status,0,c
 14083  004F5E  0012               	return	
 14084  004F60                     u28140:
 14085                           
 14086                           ; BSR set to: 1
 14087                           ;sm_ControlGate_MC50.c: 738:             if(var_sys.Timewalkisactived == YES){
 14088  004F60  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 14089  004F62  A4D8               	btfss	status,2,c
 14090  004F64  D003               	goto	l23804
 14091                           
 14092                           ; BSR set to: 1
 14093                           ;sm_ControlGate_MC50.c: 739:                 OpenWalkOrder();
 14094  004F66  EC5D  F046         	call	_OpenWalkOrder	;wreg free
 14095                           
 14096                           ;sm_ControlGate_MC50.c: 741:             }
 14097  004F6A  D004               	goto	l23808
 14098  004F6C                     l23804:
 14099                           
 14100                           ; BSR set to: 1
 14101                           ;sm_ControlGate_MC50.c: 744:                  OpenFullOrder();
 14102  004F6C  EC0E  F04E         	call	_OpenFullOrder	;wreg free
 14103                           
 14104                           ;sm_ControlGate_MC50.c: 746:             setPositionInvertionInClosing();
 14105  004F70  EC97  F038         	call	_setPositionInvertionInClosing	;wreg free
 14106  004F74                     l23808:
 14107                           
 14108                           ;sm_ControlGate_MC50.c: 748:             var_sys.AutoInversionActive = NO;
 14109  004F74  0E00               	movlw	0
 14110  004F76  0101               	movlb	1	; () banked
 14111  004F78  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14112  004F7A  0012               	return	
 14113  004F7C                     l23810:
 14114                           
 14115                           ; BSR set to: 1
 14116  004F7C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 14117  004F7E  A4D8               	btfss	status,2,c
 14118  004F80  D00B               	goto	l23826
 14119                           
 14120                           ; BSR set to: 1
 14121                           ;sm_ControlGate_MC50.c: 755:         if(securityClosing != ST){
 14122  004F82  0E02               	movlw	2
 14123  004F84  1832               	xorwf	actionZone_Closing@securityClosing^0,w,c
 14124  004F86  B4D8               	btfsc	status,2,c
 14125  004F88  D002               	goto	l23822
 14126                           
 14127                           ; BSR set to: 1
 14128                           ;sm_ControlGate_MC50.c: 756:            var_sys.NumberOffErrors++;
 14129  004F8A  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14130  004F8C  D7BA               	goto	u28100
 14131  004F8E                     l23822:
 14132                           
 14133                           ; BSR set to: 1
 14134                           ;sm_ControlGate_MC50.c: 761:         {;sm_ControlGate_MC50.c: 762:             setPositi
      +                          onInvertionInClosing();
 14135  004F8E  EC97  F038         	call	_setPositionInvertionInClosing	;wreg free
 14136  004F92                     l23824:
 14137                           
 14138                           ;sm_ControlGate_MC50.c: 763:             StopOrder();
 14139  004F92  ECB0  F04E         	call	_StopOrder	;wreg free
 14140  004F96  0012               	return	
 14141  004F98                     l23826:
 14142                           
 14143                           ; BSR set to: 1
 14144  004F98  BFD1               	btfsc	(_ts_system+51)& (0+255),7,b	;volatile
 14145  004F9A  D005               	goto	u28180
 14146  004F9C  51D1               	movf	(_ts_system+51)& (0+255),w,b	;volatile
 14147  004F9E  E10B               	bnz	l23836
 14148  004FA0  05D0               	decf	(_ts_system+50)& (0+255),w,b	;volatile
 14149  004FA2  B0D8               	btfsc	status,0,c
 14150  004FA4  D008               	goto	l23836
 14151  004FA6                     u28180:
 14152                           
 14153                           ; BSR set to: 1
 14154  004FA6  0546               	decf	(_var_sys+70)& (0+255),w,b	;volatile
 14155  004FA8  A4D8               	btfss	status,2,c
 14156  004FAA  D005               	goto	l23836
 14157                           
 14158                           ; BSR set to: 1
 14159                           ;sm_ControlGate_MC50.c: 768:         setPositionInvertionInClosing();
 14160  004FAC  EC97  F038         	call	_setPositionInvertionInClosing	;wreg free
 14161                           
 14162                           ; BSR set to: 1
 14163                           ;sm_ControlGate_MC50.c: 769:         var_sys.InvertionClosingFromOpen = NO;
 14164  004FB0  0E00               	movlw	0
 14165  004FB2  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 14166  004FB4  D7EE               	goto	l23824
 14167  004FB6                     l23836:
 14168                           
 14169                           ; BSR set to: 1
 14170  004FB6  0100               	movlb	0	; () banked
 14171  004FB8  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14172  004FBA  B4D8               	btfsc	status,2,c
 14173  004FBC  D004               	goto	u28210
 14174                           
 14175                           ; BSR set to: 0
 14176  004FBE  0E02               	movlw	2
 14177  004FC0  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14178  004FC2  A4D8               	btfss	status,2,c
 14179  004FC4  D005               	goto	l23844
 14180  004FC6                     u28210:
 14181                           
 14182                           ; BSR set to: 0
 14183                           ;sm_ControlGate_MC50.c: 773:         if (typeOpenOrder != TypeFullClose) {
 14184  004FC6  0E04               	movlw	4
 14185  004FC8  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14186  004FCA  B4D8               	btfsc	status,2,c
 14187  004FCC  0012               	return	
 14188  004FCE  D7E1               	goto	l23824
 14189  004FD0                     l23844:
 14190                           
 14191                           ; BSR set to: 0
 14192  004FD0  5033               	movf	actionZone_Closing@typeOpenOrder^0,w,c
 14193  004FD2  B4D8               	btfsc	status,2,c
 14194  004FD4  0012               	return	
 14195                           
 14196                           ; BSR set to: 0
 14197                           ;sm_ControlGate_MC50.c: 788:         if ( var_sys_NVM.operationMode == ModoPassoPasso )
 14198  004FD6  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14199  004FD8  A4D8               	btfss	status,2,c
 14200  004FDA  D013               	goto	l23860
 14201                           
 14202                           ; BSR set to: 0
 14203                           ;sm_ControlGate_MC50.c: 789:         {;sm_ControlGate_MC50.c: 790:             setPositi
      +                          onInvertionInClosing();
 14204  004FDC  EC97  F038         	call	_setPositionInvertionInClosing	;wreg free
 14205                           
 14206                           ; BSR set to: 1
 14207                           ;sm_ControlGate_MC50.c: 791:             StopOrder();
 14208  004FE0  ECB0  F04E         	call	_StopOrder	;wreg free
 14209                           
 14210                           ;sm_ControlGate_MC50.c: 793:             if (typeOpenOrder == TypeWalk && var_sys_NVM.op
      +                          erationMode != ModoCondominio)
 14211  004FE4  0E02               	movlw	2
 14212  004FE6  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14213  004FE8  A4D8               	btfss	status,2,c
 14214  004FEA  0012               	return	
 14215  004FEC  0E02               	movlw	2
 14216  004FEE  0100               	movlb	0	; () banked
 14217  004FF0  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14218  004FF2  B4D8               	btfsc	status,2,c
 14219  004FF4  0012               	return	
 14220                           
 14221                           ; BSR set to: 0
 14222                           ;sm_ControlGate_MC50.c: 794:             {;sm_ControlGate_MC50.c: 795:                 I
      +                          nitWalkAutoTime();
 14223  004FF6  EC87  F04F         	call	_InitWalkAutoTime	;wreg free
 14224                           
 14225                           ; BSR set to: 0
 14226                           ;sm_ControlGate_MC50.c: 796:                 var_sys.showAP = YES;
 14227  004FFA  0E01               	movlw	1
 14228  004FFC  0101               	movlb	1	; () banked
 14229  004FFE  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
 14230  005000  0012               	return	
 14231  005002                     l23860:
 14232                           
 14233                           ; BSR set to: 0
 14234                           ;sm_ControlGate_MC50.c: 801:         {;sm_ControlGate_MC50.c: 802:             if (typeO
      +                          penOrder != TypeFullClose){
 14235  005002  0E04               	movlw	4
 14236  005004  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14237  005006  B4D8               	btfsc	status,2,c
 14238  005008  D7C4               	goto	l23824
 14239                           
 14240                           ; BSR set to: 0
 14241                           ;sm_ControlGate_MC50.c: 803:                 var_sys.AutoInversionActive = YES;
 14242  00500A  0E01               	movlw	1
 14243  00500C  0101               	movlb	1	; () banked
 14244  00500E  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14245                           
 14246                           ;sm_ControlGate_MC50.c: 804:                 ts_system.TimeWaitToNextState = ( 500/50);
 14247  005010  0E00               	movlw	0
 14248  005012  6FC3               	movwf	(_ts_system+37)& (0+255),b	;volatile
 14249  005014  0E0A               	movlw	10
 14250  005016  6FC2               	movwf	(_ts_system+36)& (0+255),b	;volatile
 14251                           
 14252                           ;sm_ControlGate_MC50.c: 806:             }
 14253  005018  0012               	return	
 14254  00501A                     l2810:
 14255  00501A  0012               	return		;funcret
 14256  00501C                     __end_of_actionZone_Closing:
 14257                           	callstack 0
 14258                           
 14259 ;; *************** function _setPositionInvertionInClosing *****************
 14260 ;; Defined at:
 14261 ;;		line 867 in file "sm_ControlGate_MC50.c"
 14262 ;; Parameters:    Size  Location     Type
 14263 ;;		None
 14264 ;; Auto vars:     Size  Location     Type
 14265 ;;		None
 14266 ;; Return value:  Size  Location     Type
 14267 ;;                  1    wreg      void 
 14268 ;; Registers used:
 14269 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14270 ;; Tracked objects:
 14271 ;;		On entry : 3E/1
 14272 ;;		On exit  : 3F/1
 14273 ;;		Unchanged: 0/0
 14274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14277 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14278 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14279 ;;Total ram usage:       12 bytes
 14280 ;; Hardware stack levels used: 1
 14281 ;; Hardware stack levels required when called: 6
 14282 ;; This function calls:
 14283 ;;		_getTimeDecelaration
 14284 ;; This function is called by:
 14285 ;;		_actionZone_Opening
 14286 ;;		_actionZone_Closing
 14287 ;; This function uses a non-reentrant model
 14288 ;;
 14289                           
 14290                           	psect	text34
 14291  00712E                     __ptext34:
 14292                           	callstack 0
 14293  00712E                     _setPositionInvertionInClosing:
 14294                           	callstack 22
 14295                           
 14296                           ;sm_ControlGate_MC50.c: 872:     if(var_sys_NVM.TypeofMotor != 2){
 14297                           
 14298                           ;incstack = 0
 14299  00712E  0E02               	movlw	2
 14300  007130  0100               	movlb	0	; () banked
 14301  007132  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14302  007134  B4D8               	btfsc	status,2,c
 14303  007136  D007               	goto	l21946
 14304                           
 14305                           ; BSR set to: 0
 14306                           ;sm_ControlGate_MC50.c: 874:        var_sys.PositionActual += ( 100/50);
 14307  007138  0E02               	movlw	2
 14308  00713A  0101               	movlb	1	; () banked
 14309  00713C  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14310  00713E  0E00               	movlw	0
 14311  007140  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14312  007142  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14313  007144  D008               	goto	L74
 14314  007146                     l21946:
 14315                           
 14316                           ; BSR set to: 0
 14317                           ;sm_ControlGate_MC50.c: 878:     {;sm_ControlGate_MC50.c: 879:        var_sys.PositionAc
      +                          tual -= ( 50/50);
 14318  007146  0EFF               	movlw	255
 14319  007148  0101               	movlb	1	; () banked
 14320  00714A  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14321  00714C  0EFF               	movlw	255
 14322  00714E  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14323  007150  0EFF               	movlw	255
 14324  007152  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14325  007154  0EFF               	movlw	255
 14326  007156                     L74:
 14327  007156  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 14328                           
 14329                           ; BSR set to: 1
 14330                           ;sm_ControlGate_MC50.c: 882:     if (var_sys.PositionActual > getTimeDecelaration(InOpen
      +                          Full)&& var_sys_NVM.TypeofMotor != 2) {
 14331  007158  0E01               	movlw	1
 14332  00715A  ECCA  F03C         	call	_getTimeDecelaration
 14333  00715E  0101               	movlb	1	; () banked
 14334  007160  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14335  007162  5C29               	subwf	?_getTimeDecelaration^0,w,c
 14336  007164  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14337  007166  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 14338  007168  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14339  00716A  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 14340  00716C  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14341  00716E  0A80               	xorlw	128
 14342  007170  0100               	movlb	0	; () banked
 14343  007172  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14344  007174  0101               	movlb	1	; () banked
 14345  007176  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14346  007178  0A80               	xorlw	128
 14347  00717A  0100               	movlb	0	; () banked
 14348  00717C  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14349  00717E  B0D8               	btfsc	status,0,c
 14350  007180  D008               	goto	l21954
 14351                           
 14352                           ; BSR set to: 0
 14353  007182  0E02               	movlw	2
 14354  007184  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14355  007186  B4D8               	btfsc	status,2,c
 14356  007188  D004               	goto	l21954
 14357                           
 14358                           ; BSR set to: 0
 14359                           ;sm_ControlGate_MC50.c: 883:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 14360  00718A  0E01               	movlw	1
 14361  00718C  ECCA  F03C         	call	_getTimeDecelaration
 14362  007190  D01A               	goto	L75
 14363  007192                     l21954:
 14364                           
 14365                           ; BSR set to: 0
 14366  007192  0E03               	movlw	3
 14367  007194  ECCA  F03C         	call	_getTimeDecelaration
 14368  007198  5029               	movf	?_getTimeDecelaration^0,w,c
 14369  00719A  0101               	movlb	1	; () banked
 14370  00719C  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 14371  00719E  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 14372  0071A0  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 14373  0071A2  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 14374  0071A4  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 14375  0071A6  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14376  0071A8  0A80               	xorlw	128
 14377  0071AA  0100               	movlb	0	; () banked
 14378  0071AC  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14379  0071AE  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14380  0071B0  0A80               	xorlw	128
 14381  0071B2  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14382  0071B4  B0D8               	btfsc	status,0,c
 14383  0071B6  D00F               	goto	l21960
 14384                           
 14385                           ; BSR set to: 0
 14386  0071B8  0E02               	movlw	2
 14387  0071BA  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14388  0071BC  B4D8               	btfsc	status,2,c
 14389  0071BE  D00B               	goto	l21960
 14390                           
 14391                           ; BSR set to: 0
 14392                           ;sm_ControlGate_MC50.c: 887:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 14393  0071C0  0E03               	movlw	3
 14394  0071C2  ECCA  F03C         	call	_getTimeDecelaration
 14395  0071C6                     L75:
 14396  0071C6  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 14397  0071CA  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 14398  0071CE  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 14399  0071D2  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 14400  0071D6                     l21960:
 14401                           
 14402                           ;sm_ControlGate_MC50.c: 890:     var_sys.TimeMaxMotorIsON = ((signed long)var_sys_NVM.le
      +                          arningTimeToOpen - var_sys.PositionActual) + (var_sys_NVM.decelarationOpen*( 500/50))+ (
      +                          1000/50)*10;
 14403  0071D6  0100               	movlb	0	; () banked
 14404  0071D8  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14405  0071DA  0D0A               	mullw	10
 14406  0071DC  CFF3 F0D8          	movff	prodl,??_setPositionInvertionInClosing
 14407  0071E0  CFF4 F0D9          	movff	prodh,??_setPositionInvertionInClosing+1
 14408  0071E4  0E00               	movlw	0
 14409  0071E6  BFD9               	btfsc	(??_setPositionInvertionInClosing+1)& (0+255),7,b
 14410  0071E8  0EFF               	movlw	255
 14411  0071EA  6FDA               	movwf	(??_setPositionInvertionInClosing+2)& (0+255),b
 14412  0071EC  6FDB               	movwf	(??_setPositionInvertionInClosing+3)& (0+255),b
 14413  0071EE  0101               	movlb	1	; () banked
 14414  0071F0  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14415  0071F2  0100               	movlb	0	; () banked
 14416  0071F4  5DD8               	subwf	??_setPositionInvertionInClosing& (0+255),w,b
 14417  0071F6  6FDC               	movwf	(??_setPositionInvertionInClosing+4)& (0+255),b
 14418  0071F8  0101               	movlb	1	; () banked
 14419  0071FA  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14420  0071FC  0100               	movlb	0	; () banked
 14421  0071FE  59D9               	subwfb	(??_setPositionInvertionInClosing+1)& (0+255),w,b
 14422  007200  6FDD               	movwf	(??_setPositionInvertionInClosing+5)& (0+255),b
 14423  007202  0101               	movlb	1	; () banked
 14424  007204  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14425  007206  0100               	movlb	0	; () banked
 14426  007208  59DA               	subwfb	(??_setPositionInvertionInClosing+2)& (0+255),w,b
 14427  00720A  6FDE               	movwf	(??_setPositionInvertionInClosing+6)& (0+255),b
 14428  00720C  0101               	movlb	1	; () banked
 14429  00720E  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14430  007210  0100               	movlb	0	; () banked
 14431  007212  59DB               	subwfb	(??_setPositionInvertionInClosing+3)& (0+255),w,b
 14432  007214  6FDF               	movwf	(??_setPositionInvertionInClosing+7)& (0+255),b
 14433  007216  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14434  007218  25DC               	addwf	(??_setPositionInvertionInClosing+4)& (0+255),w,b
 14435  00721A  6FE0               	movwf	(??_setPositionInvertionInClosing+8)& (0+255),b
 14436  00721C  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14437  00721E  21DD               	addwfc	(??_setPositionInvertionInClosing+5)& (0+255),w,b
 14438  007220  6FE1               	movwf	(??_setPositionInvertionInClosing+9)& (0+255),b
 14439  007222  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14440  007224  21DE               	addwfc	(??_setPositionInvertionInClosing+6)& (0+255),w,b
 14441  007226  6FE2               	movwf	(??_setPositionInvertionInClosing+10)& (0+255),b
 14442  007228  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14443  00722A  21DF               	addwfc	(??_setPositionInvertionInClosing+7)& (0+255),w,b
 14444  00722C  6FE3               	movwf	(??_setPositionInvertionInClosing+11)& (0+255),b
 14445  00722E  0EC8               	movlw	200
 14446  007230  25E0               	addwf	(??_setPositionInvertionInClosing+8)& (0+255),w,b
 14447  007232  0101               	movlb	1	; () banked
 14448  007234  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 14449  007236  0E00               	movlw	0
 14450  007238  0100               	movlb	0	; () banked
 14451  00723A  21E1               	addwfc	(??_setPositionInvertionInClosing+9)& (0+255),w,b
 14452  00723C  0101               	movlb	1	; () banked
 14453  00723E  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 14454  007240  0E00               	movlw	0
 14455  007242  0100               	movlb	0	; () banked
 14456  007244  21E2               	addwfc	(??_setPositionInvertionInClosing+10)& (0+255),w,b
 14457  007246  0101               	movlb	1	; () banked
 14458  007248  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 14459  00724A  0E00               	movlw	0
 14460  00724C  0100               	movlb	0	; () banked
 14461  00724E  21E3               	addwfc	(??_setPositionInvertionInClosing+11)& (0+255),w,b
 14462  007250  0101               	movlb	1	; () banked
 14463  007252  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 14464                           
 14465                           ; BSR set to: 1
 14466  007254  0012               	return		;funcret
 14467  007256                     __end_of_setPositionInvertionInClosing:
 14468                           	callstack 0
 14469                           
 14470 ;; *************** function _getTimeDecelaration *****************
 14471 ;; Defined at:
 14472 ;;		line 641 in file "outputs_MC50.c"
 14473 ;; Parameters:    Size  Location     Type
 14474 ;;  state           1    wreg     enum E10381
 14475 ;; Auto vars:     Size  Location     Type
 14476 ;;  state           1   48[COMRAM] enum E10381
 14477 ;; Return value:  Size  Location     Type
 14478 ;;                  4   40[COMRAM] long 
 14479 ;; Registers used:
 14480 ;;		wreg, status,2, status,0, cstack
 14481 ;; Tracked objects:
 14482 ;;		On entry : 3E/1
 14483 ;;		On exit  : 0/0
 14484 ;;		Unchanged: 0/0
 14485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14486 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14487 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14488 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14489 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14490 ;;Total ram usage:        9 bytes
 14491 ;; Hardware stack levels used: 1
 14492 ;; Hardware stack levels required when called: 5
 14493 ;; This function calls:
 14494 ;;		___lmul
 14495 ;; This function is called by:
 14496 ;;		_getStateOpenPosition
 14497 ;;		_controlVelocity
 14498 ;;		_setPositionInvertionInClosing
 14499 ;;		_setPositionInvertionInOpening
 14500 ;; This function uses a non-reentrant model
 14501 ;;
 14502                           
 14503                           	psect	text35
 14504  007994                     __ptext35:
 14505                           	callstack 0
 14506  007994                     _getTimeDecelaration:
 14507                           	callstack 22
 14508                           
 14509                           ; BSR set to: 1
 14510                           ;incstack = 0
 14511                           ;getTimeDecelaration@state stored from wreg
 14512  007994  6E31               	movwf	getTimeDecelaration@state^0,c
 14513                           
 14514                           ;outputs_MC50.c: 641: signed long getTimeDecelaration(stateMotor_enum state);outputs_MC5
      +                          0.c: 642: {;outputs_MC50.c: 644:     if(state==InClose)
 14515  007996  0E03               	movlw	3
 14516  007998  1831               	xorwf	getTimeDecelaration@state^0,w,c
 14517  00799A  A4D8               	btfss	status,2,c
 14518  00799C  D033               	goto	l20756
 14519                           
 14520                           ;outputs_MC50.c: 645:     {;outputs_MC50.c: 646:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14521  00799E  0E02               	movlw	2
 14522  0079A0  0100               	movlb	0	; () banked
 14523  0079A2  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14524  0079A4  B4D8               	btfsc	status,2,c
 14525  0079A6  D018               	goto	l20752
 14526                           
 14527                           ; BSR set to: 0
 14528                           ;outputs_MC50.c: 647:         {return (signed long)((signed long)var_sys_NVM.decelaratio
      +                          nClose*( 500/50));}
 14529  0079A8  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 14530  0079AA  6E1D               	movwf	___lmul@multiplier^0,c
 14531  0079AC  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14532  0079AE  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14533  0079B0  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14534  0079B2  0E0A               	movlw	10
 14535  0079B4  6E21               	movwf	___lmul@multiplicand^0,c
 14536  0079B6  0E00               	movlw	0
 14537  0079B8  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14538  0079BA  0E00               	movlw	0
 14539  0079BC  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14540  0079BE  0E00               	movlw	0
 14541  0079C0  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14542  0079C2  EC32  F049         	call	___lmul	;wreg free
 14543  0079C6  C01D  F029         	movff	?___lmul,?_getTimeDecelaration
 14544  0079CA  C01E  F02A         	movff	?___lmul+1,?_getTimeDecelaration+1
 14545  0079CE  C01F  F02B         	movff	?___lmul+2,?_getTimeDecelaration+2
 14546  0079D2  C020  F02C         	movff	?___lmul+3,?_getTimeDecelaration+3
 14547  0079D6  0012               	return	
 14548  0079D8                     l20752:
 14549                           
 14550                           ; BSR set to: 0
 14551  0079D8  C099  F02D         	movff	_var_sys_NVM+1,??_getTimeDecelaration	;volatile
 14552  0079DC  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14553  0079DE  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14554  0079E0  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14555  0079E2  0E02               	movlw	2
 14556  0079E4                     u23815:
 14557  0079E4  90D8               	bcf	status,0,c
 14558  0079E6  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14559  0079E8  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14560  0079EA  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14561  0079EC  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14562  0079EE  2EE8               	decfsz	wreg,f,c
 14563  0079F0  D7F9               	goto	u23815
 14564  0079F2  C02D  F029         	movff	??_getTimeDecelaration,?_getTimeDecelaration
 14565  0079F6  C02E  F02A         	movff	??_getTimeDecelaration+1,?_getTimeDecelaration+1
 14566  0079FA  C02F  F02B         	movff	??_getTimeDecelaration+2,?_getTimeDecelaration+2
 14567  0079FE  C030  F02C         	movff	??_getTimeDecelaration+3,?_getTimeDecelaration+3
 14568  007A02  0012               	return	
 14569  007A04                     l20756:
 14570                           
 14571                           ;outputs_MC50.c: 651:     {;outputs_MC50.c: 652:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14572  007A04  0E02               	movlw	2
 14573  007A06  0100               	movlb	0	; () banked
 14574  007A08  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14575  007A0A  B4D8               	btfsc	status,2,c
 14576  007A0C  D01D               	goto	l20764
 14577                           
 14578                           ; BSR set to: 0
 14579                           ;outputs_MC50.c: 653:         {return (signed long)((signed long)var_sys_NVM.learningTim
      +                          eToOpen-(((signed long)var_sys_NVM.decelarationOpen*( 500/50))));}
 14580  007A0E  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14581  007A10  6E1D               	movwf	___lmul@multiplier^0,c
 14582  007A12  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14583  007A14  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14584  007A16  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14585  007A18  0EF6               	movlw	246
 14586  007A1A  6E21               	movwf	___lmul@multiplicand^0,c
 14587  007A1C  0EFF               	movlw	255
 14588  007A1E  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14589  007A20  0EFF               	movlw	255
 14590  007A22  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14591  007A24  0EFF               	movlw	255
 14592  007A26  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14593  007A28  EC32  F049         	call	___lmul	;wreg free
 14594  007A2C  0100               	movlb	0	; () banked
 14595  007A2E  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14596  007A30  241D               	addwf	?___lmul^0,w,c
 14597  007A32  6E29               	movwf	?_getTimeDecelaration^0,c
 14598  007A34  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14599  007A36  201E               	addwfc	(?___lmul+1)^0,w,c
 14600  007A38  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14601  007A3A  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14602  007A3C  201F               	addwfc	(?___lmul+2)^0,w,c
 14603  007A3E  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14604  007A40  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14605  007A42  2020               	addwfc	(?___lmul+3)^0,w,c
 14606  007A44  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14607  007A46  0012               	return	
 14608  007A48                     l20764:
 14609                           
 14610                           ; BSR set to: 0
 14611  007A48  C098  F02D         	movff	_var_sys_NVM,??_getTimeDecelaration	;volatile
 14612  007A4C  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14613  007A4E  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14614  007A50  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14615  007A52  0E02               	movlw	2
 14616  007A54                     u23835:
 14617  007A54  90D8               	bcf	status,0,c
 14618  007A56  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14619  007A58  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14620  007A5A  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14621  007A5C  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14622  007A5E  2EE8               	decfsz	wreg,f,c
 14623  007A60  D7F9               	goto	u23835
 14624  007A62  502D               	movf	??_getTimeDecelaration^0,w,c
 14625  007A64  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14626  007A66  6E29               	movwf	?_getTimeDecelaration^0,c
 14627  007A68  502E               	movf	(??_getTimeDecelaration+1)^0,w,c
 14628  007A6A  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14629  007A6C  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14630  007A6E  502F               	movf	(??_getTimeDecelaration+2)^0,w,c
 14631  007A70  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14632  007A72  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14633  007A74  5030               	movf	(??_getTimeDecelaration+3)^0,w,c
 14634  007A76  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14635  007A78  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14636  007A7A  0012               	return		;funcret
 14637  007A7C                     __end_of_getTimeDecelaration:
 14638                           	callstack 0
 14639                           
 14640 ;; *************** function ___lmul *****************
 14641 ;; Defined at:
 14642 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
 14643 ;; Parameters:    Size  Location     Type
 14644 ;;  multiplier      4   28[COMRAM] unsigned long 
 14645 ;;  multiplicand    4   32[COMRAM] unsigned long 
 14646 ;; Auto vars:     Size  Location     Type
 14647 ;;  product         4   36[COMRAM] unsigned long 
 14648 ;; Return value:  Size  Location     Type
 14649 ;;                  4   28[COMRAM] unsigned long 
 14650 ;; Registers used:
 14651 ;;		wreg, status,2, status,0
 14652 ;; Tracked objects:
 14653 ;;		On entry : 0/1
 14654 ;;		On exit  : 0/0
 14655 ;;		Unchanged: 0/0
 14656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14657 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14658 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14660 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14661 ;;Total ram usage:       12 bytes
 14662 ;; Hardware stack levels used: 1
 14663 ;; Hardware stack levels required when called: 4
 14664 ;; This function calls:
 14665 ;;		Nothing
 14666 ;; This function is called by:
 14667 ;;		_getStateOpenPosition
 14668 ;;		_getTimeDecelaration
 14669 ;;		_actionZone_Closing
 14670 ;;		_sm_execute_menuConfiguration
 14671 ;; This function uses a non-reentrant model
 14672 ;;
 14673                           
 14674                           	psect	text36
 14675  009264                     __ptext36:
 14676                           	callstack 0
 14677  009264                     ___lmul:
 14678                           	callstack 24
 14679                           
 14680                           ;incstack = 0
 14681  009264  0E00               	movlw	0
 14682  009266  6E25               	movwf	___lmul@product^0,c
 14683  009268  0E00               	movlw	0
 14684  00926A  6E26               	movwf	(___lmul@product+1)^0,c
 14685  00926C  0E00               	movlw	0
 14686  00926E  6E27               	movwf	(___lmul@product+2)^0,c
 14687  009270  0E00               	movlw	0
 14688  009272  6E28               	movwf	(___lmul@product+3)^0,c
 14689  009274                     l20604:
 14690  009274  A01D               	btfss	___lmul@multiplier^0,0,c
 14691  009276  D008               	goto	l20608
 14692  009278  5021               	movf	___lmul@multiplicand^0,w,c
 14693  00927A  2625               	addwf	___lmul@product^0,f,c
 14694  00927C  5022               	movf	(___lmul@multiplicand+1)^0,w,c
 14695  00927E  2226               	addwfc	(___lmul@product+1)^0,f,c
 14696  009280  5023               	movf	(___lmul@multiplicand+2)^0,w,c
 14697  009282  2227               	addwfc	(___lmul@product+2)^0,f,c
 14698  009284  5024               	movf	(___lmul@multiplicand+3)^0,w,c
 14699  009286  2228               	addwfc	(___lmul@product+3)^0,f,c
 14700  009288                     l20608:
 14701  009288  90D8               	bcf	status,0,c
 14702  00928A  3621               	rlcf	___lmul@multiplicand^0,f,c
 14703  00928C  3622               	rlcf	(___lmul@multiplicand+1)^0,f,c
 14704  00928E  3623               	rlcf	(___lmul@multiplicand+2)^0,f,c
 14705  009290  3624               	rlcf	(___lmul@multiplicand+3)^0,f,c
 14706  009292  90D8               	bcf	status,0,c
 14707  009294  3220               	rrcf	(___lmul@multiplier+3)^0,f,c
 14708  009296  321F               	rrcf	(___lmul@multiplier+2)^0,f,c
 14709  009298  321E               	rrcf	(___lmul@multiplier+1)^0,f,c
 14710  00929A  321D               	rrcf	___lmul@multiplier^0,f,c
 14711  00929C  501D               	movf	___lmul@multiplier^0,w,c
 14712  00929E  101E               	iorwf	(___lmul@multiplier+1)^0,w,c
 14713  0092A0  101F               	iorwf	(___lmul@multiplier+2)^0,w,c
 14714  0092A2  1020               	iorwf	(___lmul@multiplier+3)^0,w,c
 14715  0092A4  A4D8               	btfss	status,2,c
 14716  0092A6  D7E6               	goto	l20604
 14717  0092A8  C025  F01D         	movff	___lmul@product,?___lmul
 14718  0092AC  C026  F01E         	movff	___lmul@product+1,?___lmul+1
 14719  0092B0  C027  F01F         	movff	___lmul@product+2,?___lmul+2
 14720  0092B4  C028  F020         	movff	___lmul@product+3,?___lmul+3
 14721  0092B8  0012               	return		;funcret
 14722  0092BA                     __end_of___lmul:
 14723                           	callstack 0
 14724                           
 14725 ;; *************** function _StopOrder *****************
 14726 ;; Defined at:
 14727 ;;		line 96 in file "sm_ControlGate_MC50.c"
 14728 ;; Parameters:    Size  Location     Type
 14729 ;;		None
 14730 ;; Auto vars:     Size  Location     Type
 14731 ;;		None
 14732 ;; Return value:  Size  Location     Type
 14733 ;;                  1    wreg      void 
 14734 ;; Registers used:
 14735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14736 ;; Tracked objects:
 14737 ;;		On entry : 3E/1
 14738 ;;		On exit  : 0/0
 14739 ;;		Unchanged: 0/0
 14740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14745 ;;Total ram usage:        0 bytes
 14746 ;; Hardware stack levels used: 1
 14747 ;; Hardware stack levels required when called: 6
 14748 ;; This function calls:
 14749 ;;		_sm_send_event
 14750 ;; This function is called by:
 14751 ;;		_actionZone_Opening
 14752 ;;		_actionZone_Closing
 14753 ;; This function uses a non-reentrant model
 14754 ;;
 14755                           
 14756                           	psect	text37
 14757  009D60                     __ptext37:
 14758                           	callstack 0
 14759  009D60                     _StopOrder:
 14760                           	callstack 22
 14761                           
 14762                           ;sm_ControlGate_MC50.c: 99:    var_sys.StateMotor = Stopped;
 14763                           
 14764                           ;incstack = 0
 14765  009D60  0E00               	movlw	0
 14766  009D62  0101               	movlb	1	; () banked
 14767  009D64  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14768                           
 14769                           ; BSR set to: 1
 14770                           ;sm_ControlGate_MC50.c: 100:    sm_send_event(&controlGate_stateMachine, ev_StopGate);
 14771  009D66  0EE6               	movlw	low _controlGate_stateMachine
 14772  009D68  6E12               	movwf	sm_send_event@psm^0,c
 14773  009D6A  0E01               	movlw	high _controlGate_stateMachine
 14774  009D6C  6E13               	movwf	(sm_send_event@psm+1)^0,c
 14775  009D6E  0E00               	movlw	0
 14776  009D70  6E15               	movwf	(sm_send_event@event+1)^0,c
 14777  009D72  0E0D               	movlw	13
 14778  009D74  6E14               	movwf	sm_send_event@event^0,c
 14779  009D76  ECF7  F047         	call	_sm_send_event	;wreg free
 14780  009D7A  0012               	return		;funcret
 14781  009D7C                     __end_of_StopOrder:
 14782                           	callstack 0
 14783                           
 14784 ;; *************** function _GetSecurityStateInClosing *****************
 14785 ;; Defined at:
 14786 ;;		line 776 in file "inputs_MC50.c"
 14787 ;; Parameters:    Size  Location     Type
 14788 ;;		None
 14789 ;; Auto vars:     Size  Location     Type
 14790 ;;		None
 14791 ;; Return value:  Size  Location     Type
 14792 ;;                  1    wreg      enum E10564
 14793 ;; Registers used:
 14794 ;;		wreg, status,2, status,0, cstack
 14795 ;; Tracked objects:
 14796 ;;		On entry : 0/0
 14797 ;;		On exit  : 3E/0
 14798 ;;		Unchanged: 0/0
 14799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14804 ;;Total ram usage:        0 bytes
 14805 ;; Hardware stack levels used: 1
 14806 ;; Hardware stack levels required when called: 5
 14807 ;; This function calls:
 14808 ;;		_SetSegmentValueIntermitent
 14809 ;; This function is called by:
 14810 ;;		_actionZone_Opening
 14811 ;;		_actionZone_Opened
 14812 ;;		_actionZone_Closing
 14813 ;; This function uses a non-reentrant model
 14814 ;;
 14815                           
 14816                           	psect	text38
 14817  007FBE                     __ptext38:
 14818                           	callstack 0
 14819  007FBE                     _GetSecurityStateInClosing:
 14820                           	callstack 23
 14821                           
 14822                           ;inputs_MC50.c: 786:      if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBar
      +                          IsObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 0)&& (var_sys_NVM.Stopboton == 
      +                          0))
 14823                           
 14824                           ;incstack = 0
 14825  007FBE  0100               	movlb	0	; () banked
 14826  007FC0  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 14827  007FC2  A4D8               	btfss	status,2,c
 14828  007FC4  D01B               	goto	l21622
 14829                           
 14830                           ; BSR set to: 0
 14831  007FC6  0101               	movlb	1	; () banked
 14832  007FC8  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 14833  007FCA  A4D8               	btfss	status,2,c
 14834  007FCC  D017               	goto	l21622
 14835                           
 14836                           ; BSR set to: 1
 14837  007FCE  0100               	movlb	0	; () banked
 14838  007FD0  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 14839  007FD2  A4D8               	btfss	status,2,c
 14840  007FD4  D013               	goto	l21622
 14841                           
 14842                           ; BSR set to: 0
 14843  007FD6  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 14844  007FD8  A4D8               	btfss	status,2,c
 14845  007FDA  D010               	goto	l21622
 14846                           
 14847                           ; BSR set to: 0
 14848                           ;inputs_MC50.c: 787:     {;inputs_MC50.c: 790:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14849  007FDC  0E00               	movlw	0
 14850  007FDE  0101               	movlb	1	; () banked
 14851  007FE0  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14852  007FE2  0E04               	movlw	4
 14853  007FE4  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14854                           
 14855                           ; BSR set to: 1
 14856                           ;inputs_MC50.c: 791:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 14857  007FE6  0E0A               	movlw	10
 14858  007FE8  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14859  007FEA  0E00               	movlw	0
 14860  007FEC  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14861  007FEE  0E14               	movlw	20
 14862  007FF0  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14863  007FF2  0E12               	movlw	18
 14864  007FF4  ECB5  F04C         	call	_SetSegmentValueIntermitent
 14865  007FF8                     l21616:
 14866                           
 14867                           ; BSR set to: 1
 14868                           ;inputs_MC50.c: 792:         return YES;
 14869  007FF8  0E01               	movlw	1
 14870  007FFA  0012               	return	
 14871  007FFC                     l21622:
 14872  007FFC  0100               	movlb	0	; () banked
 14873  007FFE  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 14874  008000  A4D8               	btfss	status,2,c
 14875  008002  D013               	goto	l21636
 14876                           
 14877                           ; BSR set to: 0
 14878  008004  0101               	movlb	1	; () banked
 14879  008006  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 14880  008008  A4D8               	btfss	status,2,c
 14881  00800A  D00F               	goto	l21636
 14882                           
 14883                           ; BSR set to: 1
 14884                           ;inputs_MC50.c: 795:     {;inputs_MC50.c: 797:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14885  00800C  0E00               	movlw	0
 14886  00800E  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14887  008010  0E04               	movlw	4
 14888  008012  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14889                           
 14890                           ; BSR set to: 1
 14891                           ;inputs_MC50.c: 798:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 14892  008014  0E15               	movlw	21
 14893  008016  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14894  008018  0E00               	movlw	0
 14895  00801A  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14896  00801C  0E14               	movlw	20
 14897  00801E  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14898  008020  0E05               	movlw	5
 14899  008022  ECB5  F04C         	call	_SetSegmentValueIntermitent
 14900                           
 14901                           ; BSR set to: 1
 14902                           ;inputs_MC50.c: 799:         return ST;
 14903  008026  0E02               	movlw	2
 14904  008028  0012               	return	
 14905  00802A                     l21636:
 14906  00802A  0100               	movlb	0	; () banked
 14907  00802C  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 14908  00802E  A4D8               	btfss	status,2,c
 14909  008030  D017               	goto	l21652
 14910                           
 14911                           ; BSR set to: 0
 14912  008032  0101               	movlb	1	; () banked
 14913  008034  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 14914  008036  A4D8               	btfss	status,2,c
 14915  008038  D013               	goto	l21652
 14916                           
 14917                           ; BSR set to: 1
 14918  00803A  0100               	movlb	0	; () banked
 14919  00803C  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 14920  00803E  A4D8               	btfss	status,2,c
 14921  008040  D00F               	goto	l21652
 14922                           
 14923                           ; BSR set to: 0
 14924                           ;inputs_MC50.c: 803:     {;inputs_MC50.c: 805:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14925  008042  0E00               	movlw	0
 14926  008044  0101               	movlb	1	; () banked
 14927  008046  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14928  008048  0E04               	movlw	4
 14929  00804A  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14930                           
 14931                           ; BSR set to: 1
 14932                           ;inputs_MC50.c: 806:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 14933  00804C  0E0E               	movlw	14
 14934  00804E  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14935  008050  0E00               	movlw	0
 14936  008052  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14937  008054  0E14               	movlw	20
 14938  008056  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14939  008058  0E12               	movlw	18
 14940  00805A  ECB5  F04C         	call	_SetSegmentValueIntermitent
 14941  00805E  D7CC               	goto	l21616
 14942  008060                     l21652:
 14943                           
 14944                           ;inputs_MC50.c: 811:     {;inputs_MC50.c: 812:         return NO;
 14945  008060  0E00               	movlw	0
 14946  008062  0012               	return		;funcret
 14947  008064                     __end_of_GetSecurityStateInClosing:
 14948                           	callstack 0
 14949                           
 14950 ;; *************** function _actionZone_Closed *****************
 14951 ;; Defined at:
 14952 ;;		line 327 in file "sm_ControlGate_MC50.c"
 14953 ;; Parameters:    Size  Location     Type
 14954 ;;		None
 14955 ;; Auto vars:     Size  Location     Type
 14956 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 14957 ;;  securityOpen    1   31[COMRAM] enum E10397
 14958 ;; Return value:  Size  Location     Type
 14959 ;;                  1    wreg      void 
 14960 ;; Registers used:
 14961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14962 ;; Tracked objects:
 14963 ;;		On entry : 3F/0
 14964 ;;		On exit  : 0/0
 14965 ;;		Unchanged: 0/0
 14966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14968 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14970 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14971 ;;Total ram usage:        2 bytes
 14972 ;; Hardware stack levels used: 1
 14973 ;; Hardware stack levels required when called: 8
 14974 ;; This function calls:
 14975 ;;		_GetOpenOrder
 14976 ;;		_GetSecurityStateInOpening
 14977 ;;		_InitFullAutoTime
 14978 ;;		_InitWalkAutoTime
 14979 ;;		_OpenFullOrder
 14980 ;;		_OpenWalkOrder
 14981 ;;		_WaitPreFlash
 14982 ;;		_sm_send_event
 14983 ;; This function is called by:
 14984 ;;		_sm_execute_ControlGate
 14985 ;; This function uses a non-reentrant model
 14986 ;;
 14987                           
 14988                           	psect	text39
 14989  007F14                     __ptext39:
 14990                           	callstack 0
 14991  007F14                     _actionZone_Closed:
 14992                           	callstack 21
 14993                           
 14994                           ; BSR set to: 0
 14995                           ;sm_ControlGate_MC50.c: 331:     if (main_stateMachine.current_state != st_MenuConfigura
      +                          tion) {
 14996                           
 14997                           ;incstack = 0
 14998  007F14  0101               	movlb	1	; () banked
 14999  007F16  05F1               	decf	_main_stateMachine& (0+255),w,b
 15000  007F18  11F2               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 15001  007F1A  B4D8               	btfsc	status,2,c
 15002  007F1C  0012               	return	
 15003                           
 15004                           ; BSR set to: 1
 15005                           ;sm_ControlGate_MC50.c: 334:         TypeCMD typeOpenOrder = GetOpenOrder();
 15006  007F1E  EC98  F02F         	call	_GetOpenOrder	;wreg free
 15007  007F22  6E21               	movwf	actionZone_Closed@typeOpenOrder^0,c
 15008                           
 15009                           ;sm_ControlGate_MC50.c: 336:         StateEnum securityOpening = GetSecurityStateInOpeni
      +                          ng();
 15010  007F24  EC32  F040         	call	_GetSecurityStateInOpening	;wreg free
 15011  007F28  6E20               	movwf	actionZone_Closed@securityOpening^0,c
 15012                           
 15013                           ;sm_ControlGate_MC50.c: 338:         if (var_sys_NVM.homemPresente == 1) {
 15014  007F2A  0100               	movlb	0	; () banked
 15015  007F2C  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15016  007F2E  A4D8               	btfss	status,2,c
 15017  007F30  D018               	goto	l23352
 15018                           
 15019                           ; BSR set to: 0
 15020                           ;sm_ControlGate_MC50.c: 344:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && securityOpening == NO) {
 15021  007F32  0E03               	movlw	3
 15022  007F34  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15023  007F36  A4D8               	btfss	status,2,c
 15024  007F38  0012               	return	
 15025                           
 15026                           ; BSR set to: 0
 15027  007F3A  0101               	movlb	1	; () banked
 15028  007F3C  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 15029  007F3E  A4D8               	btfss	status,2,c
 15030  007F40  0012               	return	
 15031                           
 15032                           ; BSR set to: 1
 15033  007F42  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15034  007F44  A4D8               	btfss	status,2,c
 15035  007F46  0012               	return	
 15036                           
 15037                           ; BSR set to: 1
 15038                           ;sm_ControlGate_MC50.c: 346:                 OpenFullOrder();
 15039  007F48  EC0E  F04E         	call	_OpenFullOrder	;wreg free
 15040  007F4C                     l23350:
 15041                           
 15042                           ;sm_ControlGate_MC50.c: 347:                 sm_send_event(&main_stateMachine, ev_MotorI
      +                          sOpen);
 15043  007F4C  0EF1               	movlw	low _main_stateMachine
 15044  007F4E  6E12               	movwf	sm_send_event@psm^0,c
 15045  007F50  0E01               	movlw	high _main_stateMachine
 15046  007F52  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15047  007F54  0E00               	movlw	0
 15048  007F56  6E15               	movwf	(sm_send_event@event+1)^0,c
 15049  007F58  0E11               	movlw	17
 15050  007F5A  6E14               	movwf	sm_send_event@event^0,c
 15051  007F5C  ECF7  F047         	call	_sm_send_event	;wreg free
 15052  007F60  0012               	return	
 15053  007F62                     l23352:
 15054                           
 15055                           ; BSR set to: 0
 15056  007F62  0421               	decf	actionZone_Closed@typeOpenOrder^0,w,c
 15057  007F64  B4D8               	btfsc	status,2,c
 15058  007F66  D004               	goto	u27140
 15059                           
 15060                           ; BSR set to: 0
 15061  007F68  0E03               	movlw	3
 15062  007F6A  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15063  007F6C  A4D8               	btfss	status,2,c
 15064  007F6E  D017               	goto	l23372
 15065  007F70                     u27140:
 15066                           
 15067                           ; BSR set to: 0
 15068  007F70  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15069  007F72  A4D8               	btfss	status,2,c
 15070  007F74  D014               	goto	l23372
 15071                           
 15072                           ; BSR set to: 0
 15073  007F76  0101               	movlb	1	; () banked
 15074  007F78  511D               	movf	(_var_sys+29)& (0+255),w,b	;volatile
 15075  007F7A  A4D8               	btfss	status,2,c
 15076  007F7C  D010               	goto	l23372
 15077                           
 15078                           ; BSR set to: 1
 15079                           ;sm_ControlGate_MC50.c: 353:             if (var_sys_NVM.flashRGBMode == rgb_pre){
 15080  007F7E  0E02               	movlw	2
 15081  007F80  0100               	movlb	0	; () banked
 15082  007F82  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15083  007F84  A4D8               	btfss	status,2,c
 15084  007F86  D006               	goto	l23366
 15085                           
 15086                           ; BSR set to: 0
 15087                           ;sm_ControlGate_MC50.c: 354:                 var_sys.preflashingcontrol = YES;
 15088  007F88  0E01               	movlw	1
 15089  007F8A  0101               	movlb	1	; () banked
 15090  007F8C  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15091                           
 15092                           ; BSR set to: 1
 15093                           ;sm_ControlGate_MC50.c: 355:                 WaitPreFlash();
 15094  007F8E  ECB5  F045         	call	_WaitPreFlash	;wreg free
 15095                           
 15096                           ;sm_ControlGate_MC50.c: 356:             }
 15097  007F92  0012               	return	
 15098  007F94                     l23366:
 15099                           
 15100                           ; BSR set to: 0
 15101                           ;sm_ControlGate_MC50.c: 358:                 OpenFullOrder();
 15102  007F94  EC0E  F04E         	call	_OpenFullOrder	;wreg free
 15103                           
 15104                           ;sm_ControlGate_MC50.c: 359:                InitFullAutoTime();
 15105  007F98  EC02  F04F         	call	_InitFullAutoTime	;wreg free
 15106  007F9C  D7D7               	goto	l23350
 15107  007F9E                     l23372:
 15108  007F9E  0E02               	movlw	2
 15109  007FA0  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15110  007FA2  A4D8               	btfss	status,2,c
 15111  007FA4  0012               	return	
 15112  007FA6  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15113  007FA8  A4D8               	btfss	status,2,c
 15114  007FAA  0012               	return	
 15115  007FAC  0100               	movlb	0	; () banked
 15116  007FAE  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15117  007FB0  B4D8               	btfsc	status,2,c
 15118  007FB2  0012               	return	
 15119                           
 15120                           ; BSR set to: 0
 15121                           ;sm_ControlGate_MC50.c: 367:             OpenWalkOrder();
 15122  007FB4  EC5D  F046         	call	_OpenWalkOrder	;wreg free
 15123                           
 15124                           ;sm_ControlGate_MC50.c: 368:             InitWalkAutoTime();
 15125  007FB8  EC87  F04F         	call	_InitWalkAutoTime	;wreg free
 15126  007FBC  D7C7               	goto	l23350
 15127  007FBE                     __end_of_actionZone_Closed:
 15128                           	callstack 0
 15129                           
 15130 ;; *************** function _WaitPreFlash *****************
 15131 ;; Defined at:
 15132 ;;		line 41 in file "sm_ControlGate_MC50.c"
 15133 ;; Parameters:    Size  Location     Type
 15134 ;;		None
 15135 ;; Auto vars:     Size  Location     Type
 15136 ;;		None
 15137 ;; Return value:  Size  Location     Type
 15138 ;;                  1    wreg      void 
 15139 ;; Registers used:
 15140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15141 ;; Tracked objects:
 15142 ;;		On entry : 3F/1
 15143 ;;		On exit  : 3F/1
 15144 ;;		Unchanged: 0/0
 15145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15150 ;;Total ram usage:        0 bytes
 15151 ;; Hardware stack levels used: 1
 15152 ;; Hardware stack levels required when called: 7
 15153 ;; This function calls:
 15154 ;;		_InitFullAutoTime
 15155 ;;		_OpenFullOrder
 15156 ;;		_sm_send_event
 15157 ;; This function is called by:
 15158 ;;		_sm_execute_ControlGate
 15159 ;;		_actionZone_Closed
 15160 ;; This function uses a non-reentrant model
 15161 ;;
 15162                           
 15163                           	psect	text40
 15164  008B6A                     __ptext40:
 15165                           	callstack 0
 15166  008B6A                     _WaitPreFlash:
 15167                           	callstack 21
 15168                           
 15169                           ; BSR set to: 1
 15170                           ;sm_ControlGate_MC50.c: 44:     if ((var_sys_NVM.flashRGBMode == rgb_pre) && (var_sys.pr
      +                          eflashingcontrol == YES) && (ts_system.timewaitFlashRGB <=0) && (aux_i == 0))
 15171                           
 15172                           ;incstack = 0
 15173  008B6A  0E02               	movlw	2
 15174  008B6C  0100               	movlb	0	; () banked
 15175  008B6E  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15176  008B70  A4D8               	btfss	status,2,c
 15177  008B72  D014               	goto	l21866
 15178                           
 15179                           ; BSR set to: 0
 15180  008B74  0101               	movlb	1	; () banked
 15181  008B76  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 15182  008B78  A4D8               	btfss	status,2,c
 15183  008B7A  D010               	goto	l21866
 15184                           
 15185                           ; BSR set to: 1
 15186  008B7C  BFE5               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15187  008B7E  D005               	goto	u25440
 15188  008B80  51E5               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15189  008B82  E10C               	bnz	l21866
 15190  008B84  05E4               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15191  008B86  B0D8               	btfsc	status,0,c
 15192  008B88  D009               	goto	l21866
 15193  008B8A                     u25440:
 15194                           
 15195                           ; BSR set to: 1
 15196  008B8A  5190               	movf	_aux_i& (0+255),w,b
 15197  008B8C  A4D8               	btfss	status,2,c
 15198  008B8E  D006               	goto	l21866
 15199                           
 15200                           ; BSR set to: 1
 15201                           ;sm_ControlGate_MC50.c: 45:         {;sm_ControlGate_MC50.c: 46:             ts_system.t
      +                          imewaitFlashRGB = (1000/50) *3;
 15202  008B90  0E00               	movlw	0
 15203  008B92  6FE5               	movwf	(_ts_system+71)& (0+255),b	;volatile
 15204  008B94  0E3C               	movlw	60
 15205  008B96  6FE4               	movwf	(_ts_system+70)& (0+255),b	;volatile
 15206                           
 15207                           ;sm_ControlGate_MC50.c: 47:             aux_i=1;
 15208  008B98  0E01               	movlw	1
 15209  008B9A  6F90               	movwf	_aux_i& (0+255),b
 15210  008B9C                     l21866:
 15211                           
 15212                           ;sm_ControlGate_MC50.c: 50:     if ((ts_system.timewaitFlashRGB <= 0) && (aux_i==1 ))
 15213  008B9C  0101               	movlb	1	; () banked
 15214  008B9E  BFE5               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15215  008BA0  D005               	goto	u25460
 15216  008BA2  51E5               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15217  008BA4  E119               	bnz	l2585
 15218  008BA6  05E4               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15219  008BA8  B0D8               	btfsc	status,0,c
 15220  008BAA  0012               	return	
 15221  008BAC                     u25460:
 15222                           
 15223                           ; BSR set to: 1
 15224  008BAC  0590               	decf	_aux_i& (0+255),w,b
 15225  008BAE  A4D8               	btfss	status,2,c
 15226  008BB0  0012               	return	
 15227                           
 15228                           ; BSR set to: 1
 15229                           ;sm_ControlGate_MC50.c: 51:         {;sm_ControlGate_MC50.c: 54:                 var_sys
      +                          .preflashingcontrol = NO;
 15230  008BB2  0E00               	movlw	0
 15231  008BB4  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15232                           
 15233                           ; BSR set to: 1
 15234                           ;sm_ControlGate_MC50.c: 55:                 OpenFullOrder();
 15235  008BB6  EC0E  F04E         	call	_OpenFullOrder	;wreg free
 15236                           
 15237                           ;sm_ControlGate_MC50.c: 56:                 InitFullAutoTime();
 15238  008BBA  EC02  F04F         	call	_InitFullAutoTime	;wreg free
 15239                           
 15240                           ; BSR set to: 0
 15241                           ;sm_ControlGate_MC50.c: 57:                 sm_send_event(&main_stateMachine, ev_MotorIs
      +                          Open);
 15242  008BBE  0EF1               	movlw	low _main_stateMachine
 15243  008BC0  6E12               	movwf	sm_send_event@psm^0,c
 15244  008BC2  0E01               	movlw	high _main_stateMachine
 15245  008BC4  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15246  008BC6  0E00               	movlw	0
 15247  008BC8  6E15               	movwf	(sm_send_event@event+1)^0,c
 15248  008BCA  0E11               	movlw	17
 15249  008BCC  6E14               	movwf	sm_send_event@event^0,c
 15250  008BCE  ECF7  F047         	call	_sm_send_event	;wreg free
 15251                           
 15252                           ;sm_ControlGate_MC50.c: 58:                 aux_i=0;
 15253  008BD2  0E00               	movlw	0
 15254  008BD4  0101               	movlb	1	; () banked
 15255  008BD6  6F90               	movwf	_aux_i& (0+255),b
 15256  008BD8                     l2585:
 15257                           
 15258                           ; BSR set to: 1
 15259  008BD8  0012               	return		;funcret
 15260  008BDA                     __end_of_WaitPreFlash:
 15261                           	callstack 0
 15262                           
 15263 ;; *************** function _OpenFullOrder *****************
 15264 ;; Defined at:
 15265 ;;		line 29 in file "sm_ControlGate_MC50.c"
 15266 ;; Parameters:    Size  Location     Type
 15267 ;;		None
 15268 ;; Auto vars:     Size  Location     Type
 15269 ;;		None
 15270 ;; Return value:  Size  Location     Type
 15271 ;;                  1    wreg      void 
 15272 ;; Registers used:
 15273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15274 ;; Tracked objects:
 15275 ;;		On entry : 3E/1
 15276 ;;		On exit  : 3E/0
 15277 ;;		Unchanged: 0/0
 15278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15283 ;;Total ram usage:        0 bytes
 15284 ;; Hardware stack levels used: 1
 15285 ;; Hardware stack levels required when called: 6
 15286 ;; This function calls:
 15287 ;;		_InitSoftStart
 15288 ;;		_sm_send_event
 15289 ;; This function is called by:
 15290 ;;		_WaitPreFlash
 15291 ;;		_actionZone_Closed
 15292 ;;		_actionZone_Opened
 15293 ;;		_actionZone_Closing
 15294 ;; This function uses a non-reentrant model
 15295 ;;
 15296                           
 15297                           	psect	text41
 15298  009C1C                     __ptext41:
 15299                           	callstack 0
 15300  009C1C                     _OpenFullOrder:
 15301                           	callstack 22
 15302                           
 15303                           ;sm_ControlGate_MC50.c: 32:     var_sys.StateMotor = InOpenFull;
 15304                           
 15305                           ; BSR set to: 1
 15306                           ;incstack = 0
 15307  009C1C  0E01               	movlw	1
 15308  009C1E  0101               	movlb	1	; () banked
 15309  009C20  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15310                           
 15311                           ; BSR set to: 1
 15312                           ;sm_ControlGate_MC50.c: 33:     sm_send_event(&controlGate_stateMachine, ev_OpenGate);
 15313  009C22  0EE6               	movlw	low _controlGate_stateMachine
 15314  009C24  6E12               	movwf	sm_send_event@psm^0,c
 15315  009C26  0E01               	movlw	high _controlGate_stateMachine
 15316  009C28  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15317  009C2A  0E00               	movlw	0
 15318  009C2C  6E15               	movwf	(sm_send_event@event+1)^0,c
 15319  009C2E  0E0C               	movlw	12
 15320  009C30  6E14               	movwf	sm_send_event@event^0,c
 15321  009C32  ECF7  F047         	call	_sm_send_event	;wreg free
 15322                           
 15323                           ;sm_ControlGate_MC50.c: 34:     var_sys.LastState = InOpenFull;
 15324  009C36  0E01               	movlw	1
 15325  009C38  0101               	movlb	1	; () banked
 15326  009C3A  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15327                           
 15328                           ; BSR set to: 1
 15329                           ;sm_ControlGate_MC50.c: 35:     InitSoftStart();
 15330  009C3C  EC25  F048         	call	_InitSoftStart	;wreg free
 15331  009C40  0012               	return		;funcret
 15332  009C42                     __end_of_OpenFullOrder:
 15333                           	callstack 0
 15334                           
 15335 ;; *************** function _InitFullAutoTime *****************
 15336 ;; Defined at:
 15337 ;;		line 109 in file "sm_ControlGate_MC50.c"
 15338 ;; Parameters:    Size  Location     Type
 15339 ;;		None
 15340 ;; Auto vars:     Size  Location     Type
 15341 ;;		None
 15342 ;; Return value:  Size  Location     Type
 15343 ;;                  1    wreg      void 
 15344 ;; Registers used:
 15345 ;;		wreg, status,2, status,0, prodl, prodh
 15346 ;; Tracked objects:
 15347 ;;		On entry : 3E/0
 15348 ;;		On exit  : 3F/0
 15349 ;;		Unchanged: 0/0
 15350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15355 ;;Total ram usage:        0 bytes
 15356 ;; Hardware stack levels used: 1
 15357 ;; Hardware stack levels required when called: 4
 15358 ;; This function calls:
 15359 ;;		Nothing
 15360 ;; This function is called by:
 15361 ;;		_WaitPreFlash
 15362 ;;		_actionZone_Closed
 15363 ;;		_actionZone_Opening
 15364 ;;		_actionZone_Opened
 15365 ;;		_actionZone_Closing
 15366 ;; This function uses a non-reentrant model
 15367 ;;
 15368                           
 15369                           	psect	text42
 15370  009E04                     __ptext42:
 15371                           	callstack 0
 15372  009E04                     _InitFullAutoTime:
 15373                           	callstack 24
 15374                           
 15375                           ;sm_ControlGate_MC50.c: 111:     if (var_sys_NVM.homemPresente == 0) {
 15376                           
 15377                           ;incstack = 0
 15378  009E04  0100               	movlb	0	; () banked
 15379  009E06  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15380  009E08  A4D8               	btfss	status,2,c
 15381  009E0A  0012               	return	
 15382                           
 15383                           ; BSR set to: 0
 15384                           ;sm_ControlGate_MC50.c: 112:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 15385  009E0C  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 15386  009E0E  0D14               	mullw	20
 15387  009E10  CFF3 F1B0          	movff	prodl,_ts_system+18	;volatile
 15388  009E14  CFF4 F1B1          	movff	prodh,_ts_system+19	;volatile
 15389                           
 15390                           ; BSR set to: 0
 15391                           ;sm_ControlGate_MC50.c: 113:         var_sys.AutoCloseActive = var_sys_NVM.autoTimeFullC
      +                          lose;
 15392  009E18  C09D  F123         	movff	_var_sys_NVM+5,_var_sys+35	;volatile
 15393                           
 15394                           ; BSR set to: 0
 15395  009E1C  0012               	return		;funcret
 15396  009E1E                     __end_of_InitFullAutoTime:
 15397                           	callstack 0
 15398                           
 15399 ;; *************** function _OpenWalkOrder *****************
 15400 ;; Defined at:
 15401 ;;		line 71 in file "sm_ControlGate_MC50.c"
 15402 ;; Parameters:    Size  Location     Type
 15403 ;;		None
 15404 ;; Auto vars:     Size  Location     Type
 15405 ;;  diffTime        2   25[COMRAM] int 
 15406 ;; Return value:  Size  Location     Type
 15407 ;;                  1    wreg      void 
 15408 ;; Registers used:
 15409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15410 ;; Tracked objects:
 15411 ;;		On entry : 3E/1
 15412 ;;		On exit  : 3E/0
 15413 ;;		Unchanged: 0/0
 15414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15416 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15417 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15418 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15419 ;;Total ram usage:        4 bytes
 15420 ;; Hardware stack levels used: 1
 15421 ;; Hardware stack levels required when called: 6
 15422 ;; This function calls:
 15423 ;;		_InitSoftStart
 15424 ;;		_sm_send_event
 15425 ;; This function is called by:
 15426 ;;		_actionZone_Closed
 15427 ;;		_actionZone_Opened
 15428 ;;		_actionZone_Closing
 15429 ;; This function uses a non-reentrant model
 15430 ;;
 15431                           
 15432                           	psect	text43
 15433  008CBA                     __ptext43:
 15434                           	callstack 0
 15435  008CBA                     _OpenWalkOrder:
 15436                           	callstack 22
 15437                           
 15438                           ;sm_ControlGate_MC50.c: 72:     int diffTime = ((int) var_sys_NVM.walkTime * (1000/50)) 
      +                          - var_sys.PositionActual ;
 15439                           
 15440                           ; BSR set to: 0
 15441                           ;incstack = 0
 15442  008CBA  0100               	movlb	0	; () banked
 15443  008CBC  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15444  008CBE  0D14               	mullw	20
 15445  008CC0  CFF3 F018          	movff	prodl,??_OpenWalkOrder
 15446  008CC4  CFF4 F019          	movff	prodh,??_OpenWalkOrder+1
 15447  008CC8  0101               	movlb	1	; () banked
 15448  008CCA  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 15449  008CCC  5C18               	subwf	??_OpenWalkOrder^0,w,c
 15450  008CCE  6E1A               	movwf	OpenWalkOrder@diffTime^0,c
 15451  008CD0  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 15452  008CD2  5819               	subwfb	(??_OpenWalkOrder+1)^0,w,c
 15453  008CD4  6E1B               	movwf	(OpenWalkOrder@diffTime+1)^0,c
 15454                           
 15455                           ; BSR set to: 1
 15456                           ;sm_ControlGate_MC50.c: 74:     if (diffTime > 0) {
 15457  008CD6  BE1B               	btfsc	(OpenWalkOrder@diffTime+1)^0,7,c
 15458  008CD8  D022               	goto	l21904
 15459  008CDA  501B               	movf	(OpenWalkOrder@diffTime+1)^0,w,c
 15460  008CDC  E103               	bnz	u25480
 15461  008CDE  041A               	decf	OpenWalkOrder@diffTime^0,w,c
 15462  008CE0  A0D8               	btfss	status,0,c
 15463  008CE2  D01D               	goto	l21904
 15464  008CE4                     u25480:
 15465                           
 15466                           ; BSR set to: 1
 15467                           ;sm_ControlGate_MC50.c: 76:         sm_send_event(&controlGate_stateMachine, ev_OpenGate
      +                          );
 15468  008CE4  0EE6               	movlw	low _controlGate_stateMachine
 15469  008CE6  6E12               	movwf	sm_send_event@psm^0,c
 15470  008CE8  0E01               	movlw	high _controlGate_stateMachine
 15471  008CEA  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15472  008CEC  0E00               	movlw	0
 15473  008CEE  6E15               	movwf	(sm_send_event@event+1)^0,c
 15474  008CF0  0E0C               	movlw	12
 15475  008CF2  6E14               	movwf	sm_send_event@event^0,c
 15476  008CF4  ECF7  F047         	call	_sm_send_event	;wreg free
 15477                           
 15478                           ;sm_ControlGate_MC50.c: 77:         if (var_sys.Statedoorcontrol == st_Closed){
 15479  008CF8  0101               	movlb	1	; () banked
 15480  008CFA  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 15481  008CFC  A4D8               	btfss	status,2,c
 15482  008CFE  D005               	goto	l21898
 15483                           
 15484                           ; BSR set to: 1
 15485                           ;sm_ControlGate_MC50.c: 78:            ts_system.timeOpenWalk = diffTime;
 15486  008D00  C01A  F1AE         	movff	OpenWalkOrder@diffTime,_ts_system+16	;volatile
 15487  008D04  C01B  F1AF         	movff	OpenWalkOrder@diffTime+1,_ts_system+17	;volatile
 15488                           
 15489                           ;sm_ControlGate_MC50.c: 79:         }
 15490  008D08  D006               	goto	l21900
 15491  008D0A                     l21898:
 15492                           
 15493                           ; BSR set to: 1
 15494                           ;sm_ControlGate_MC50.c: 81:             ts_system.timeOpenWalk = diffTime + (1000/50);
 15495  008D0A  0E14               	movlw	20
 15496  008D0C  241A               	addwf	OpenWalkOrder@diffTime^0,w,c
 15497  008D0E  6FAE               	movwf	(_ts_system+16)& (0+255),b	;volatile
 15498  008D10  0E00               	movlw	0
 15499  008D12  201B               	addwfc	(OpenWalkOrder@diffTime+1)^0,w,c
 15500  008D14  6FAF               	movwf	(_ts_system+17)& (0+255),b	;volatile
 15501  008D16                     l21900:
 15502                           
 15503                           ; BSR set to: 1
 15504                           ;sm_ControlGate_MC50.c: 83:         var_sys.StateMotor = InOpenWalk;
 15505  008D16  0E02               	movlw	2
 15506  008D18  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15507                           
 15508                           ; BSR set to: 1
 15509                           ;sm_ControlGate_MC50.c: 84:         var_sys.Timewalkisactived = YES;
 15510  008D1A  0E01               	movlw	1
 15511  008D1C  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 15512  008D1E                     l21904:
 15513                           
 15514                           ; BSR set to: 1
 15515                           ;sm_ControlGate_MC50.c: 92:     var_sys.LastState = InOpenWalk;
 15516  008D1E  0E02               	movlw	2
 15517  008D20  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15518                           
 15519                           ; BSR set to: 1
 15520                           ;sm_ControlGate_MC50.c: 93:     InitSoftStart();
 15521  008D22  EC25  F048         	call	_InitSoftStart	;wreg free
 15522  008D26  0012               	return		;funcret
 15523  008D28                     __end_of_OpenWalkOrder:
 15524                           	callstack 0
 15525                           
 15526 ;; *************** function _sm_send_event *****************
 15527 ;; Defined at:
 15528 ;;		line 34 in file "sm_common_MC50.c"
 15529 ;; Parameters:    Size  Location     Type
 15530 ;;  psm             2   17[COMRAM] PTR struct .
 15531 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 15532 ;;  event           2   19[COMRAM] int 
 15533 ;; Auto vars:     Size  Location     Type
 15534 ;;		None
 15535 ;; Return value:  Size  Location     Type
 15536 ;;                  1    wreg      void 
 15537 ;; Registers used:
 15538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15539 ;; Tracked objects:
 15540 ;;		On entry : 0/0
 15541 ;;		On exit  : 0/0
 15542 ;;		Unchanged: 0/0
 15543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15544 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15546 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15547 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15548 ;;Total ram usage:        6 bytes
 15549 ;; Hardware stack levels used: 1
 15550 ;; Hardware stack levels required when called: 5
 15551 ;; This function calls:
 15552 ;;		_sm_get_current_state
 15553 ;; This function is called by:
 15554 ;;		_OpenFullOrder
 15555 ;;		_WaitPreFlash
 15556 ;;		_CloseOrder
 15557 ;;		_OpenWalkOrder
 15558 ;;		_StopOrder
 15559 ;;		_sm_execute_ControlGate
 15560 ;;		_actionZone_Closed
 15561 ;;		_actionZone_Opening
 15562 ;;		_actionZone_Closing
 15563 ;;		_sm_execute_ControlLearning
 15564 ;;		_sm_execute_main
 15565 ;;		_sm_execute_menuConfiguration
 15566 ;;		_setValueToEdit
 15567 ;;		_controlSelectRemote
 15568 ;;		_controlSaveRemote
 15569 ;; This function uses a non-reentrant model
 15570 ;;
 15571                           
 15572                           	psect	text44
 15573  008FEE                     __ptext44:
 15574                           	callstack 0
 15575  008FEE                     _sm_send_event:
 15576                           	callstack 24
 15577                           
 15578                           ;sm_common_MC50.c: 34: void sm_send_event(sm_t *psm, int event);sm_common_MC50.c: 35: {;
      +                          sm_common_MC50.c: 36:  if(( psm->parent_machine == ((void*)0)) || (sm_get_current_state(
      +                          psm->parent_machine)==psm->parent_state))
 15579                           
 15580                           ;incstack = 0
 15581  008FEE  EE20 F007          	lfsr	2,7
 15582  008FF2  5012               	movf	sm_send_event@psm^0,w,c
 15583  008FF4  26D9               	addwf	fsr2l,f,c
 15584  008FF6  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15585  008FF8  22DA               	addwfc	fsr2h,f,c
 15586  008FFA  50DE               	movf	postinc2,w,c
 15587  008FFC  10DE               	iorwf	postinc2,w,c
 15588  008FFE  B4D8               	btfsc	status,2,c
 15589  009000  D019               	goto	u23850
 15590  009002  EE20 F007          	lfsr	2,7
 15591  009006  5012               	movf	sm_send_event@psm^0,w,c
 15592  009008  26D9               	addwf	fsr2l,f,c
 15593  00900A  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15594  00900C  22DA               	addwfc	fsr2h,f,c
 15595  00900E  CFDE F010          	movff	postinc2,sm_get_current_state@psm
 15596  009012  CFDD F011          	movff	postdec2,sm_get_current_state@psm+1
 15597  009016  ECA5  F04F         	call	_sm_get_current_state	;wreg free
 15598  00901A  EE20 F009          	lfsr	2,9
 15599  00901E  5012               	movf	sm_send_event@psm^0,w,c
 15600  009020  26D9               	addwf	fsr2l,f,c
 15601  009022  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15602  009024  22DA               	addwfc	fsr2h,f,c
 15603  009026  50DE               	movf	postinc2,w,c
 15604  009028  1810               	xorwf	?_sm_get_current_state^0,w,c
 15605  00902A  E10E               	bnz	l3517
 15606  00902C  50DE               	movf	postinc2,w,c
 15607  00902E  1811               	xorwf	(?_sm_get_current_state+1)^0,w,c
 15608  009030  A4D8               	btfss	status,2,c
 15609  009032  0012               	return	
 15610  009034                     u23850:
 15611                           
 15612                           ;sm_common_MC50.c: 38:  {;sm_common_MC50.c: 39:   psm->last_event = event;
 15613  009034  EE20 F004          	lfsr	2,4
 15614  009038  5012               	movf	sm_send_event@psm^0,w,c
 15615  00903A  26D9               	addwf	fsr2l,f,c
 15616  00903C  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15617  00903E  22DA               	addwfc	fsr2h,f,c
 15618  009040  C014  FFDE         	movff	sm_send_event@event,postinc2
 15619  009044  C015  FFDD         	movff	sm_send_event@event+1,postdec2
 15620  009048                     l3517:
 15621  009048  0012               	return		;funcret
 15622  00904A                     __end_of_sm_send_event:
 15623                           	callstack 0
 15624                           
 15625 ;; *************** function _sm_get_current_state *****************
 15626 ;; Defined at:
 15627 ;;		line 30 in file "sm_common_MC50.c"
 15628 ;; Parameters:    Size  Location     Type
 15629 ;;  psm             2   15[COMRAM] PTR struct .
 15630 ;;		 -> NULL(0), 
 15631 ;; Auto vars:     Size  Location     Type
 15632 ;;		None
 15633 ;; Return value:  Size  Location     Type
 15634 ;;                  2   15[COMRAM] int 
 15635 ;; Registers used:
 15636 ;;		fsr2l, fsr2h
 15637 ;; Tracked objects:
 15638 ;;		On entry : 0/0
 15639 ;;		On exit  : 0/0
 15640 ;;		Unchanged: 0/0
 15641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15645 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15646 ;;Total ram usage:        2 bytes
 15647 ;; Hardware stack levels used: 1
 15648 ;; Hardware stack levels required when called: 4
 15649 ;; This function calls:
 15650 ;;		Nothing
 15651 ;; This function is called by:
 15652 ;;		_sm_send_event
 15653 ;; This function uses a non-reentrant model
 15654 ;;
 15655                           
 15656                           	psect	text45
 15657  009F4A                     __ptext45:
 15658                           	callstack 0
 15659  009F4A                     _sm_get_current_state:
 15660                           	callstack 24
 15661                           
 15662                           ;sm_common_MC50.c: 31:  return psm->current_state;
 15663                           
 15664                           ;incstack = 0
 15665  009F4A  C010  FFD9         	movff	sm_get_current_state@psm,fsr2l
 15666  009F4E  C011  FFDA         	movff	sm_get_current_state@psm+1,fsr2h
 15667  009F52  CFDE F010          	movff	postinc2,?_sm_get_current_state
 15668  009F56  CFDD F011          	movff	postdec2,?_sm_get_current_state+1
 15669  009F5A  0012               	return		;funcret
 15670  009F5C                     __end_of_sm_get_current_state:
 15671                           	callstack 0
 15672                           
 15673 ;; *************** function _InitSoftStart *****************
 15674 ;; Defined at:
 15675 ;;		line 816 in file "sm_ControlGate_MC50.c"
 15676 ;; Parameters:    Size  Location     Type
 15677 ;;		None
 15678 ;; Auto vars:     Size  Location     Type
 15679 ;;		None
 15680 ;; Return value:  Size  Location     Type
 15681 ;;                  1    wreg      void 
 15682 ;; Registers used:
 15683 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15684 ;; Tracked objects:
 15685 ;;		On entry : 3F/1
 15686 ;;		On exit  : 3E/0
 15687 ;;		Unchanged: 0/0
 15688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15691 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15692 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15693 ;;Total ram usage:        1 bytes
 15694 ;; Hardware stack levels used: 1
 15695 ;; Hardware stack levels required when called: 5
 15696 ;; This function calls:
 15697 ;;		_GetMotorPower
 15698 ;; This function is called by:
 15699 ;;		_OpenFullOrder
 15700 ;;		_CloseOrder
 15701 ;;		_OpenWalkOrder
 15702 ;; This function uses a non-reentrant model
 15703 ;;
 15704                           
 15705                           	psect	text46
 15706  00904A                     __ptext46:
 15707                           	callstack 0
 15708  00904A                     _InitSoftStart:
 15709                           	callstack 22
 15710                           
 15711                           ; BSR set to: 1
 15712                           ;sm_ControlGate_MC50.c: 817:     if (var_sys_NVM.softStart != 0 && var_sys.AutoInversion
      +                          Active == NO) {
 15713                           
 15714                           ;incstack = 0
 15715  00904A  0100               	movlb	0	; () banked
 15716  00904C  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15717  00904E  B4D8               	btfsc	status,2,c
 15718  009050  0012               	return	
 15719                           
 15720                           ; BSR set to: 0
 15721  009052  0101               	movlb	1	; () banked
 15722  009054  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 15723  009056  A4D8               	btfss	status,2,c
 15724  009058  0012               	return	
 15725                           
 15726                           ; BSR set to: 1
 15727                           ;sm_ControlGate_MC50.c: 824:         var_sys.velocityFactorstop = 0;
 15728  00905A  0E00               	movlw	0
 15729  00905C  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 15730  00905E  0E00               	movlw	0
 15731  009060  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 15732                           
 15733                           ;sm_ControlGate_MC50.c: 825:         var_sys.velocityFactor = 0;
 15734  009062  0E00               	movlw	0
 15735  009064  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15736  009066  0E00               	movlw	0
 15737  009068  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15738                           
 15739                           ; BSR set to: 1
 15740                           ;sm_ControlGate_MC50.c: 826:         var_sys.velocityFactor = GetMotorPower();
 15741  00906A  EC12  F03E         	call	_GetMotorPower	;wreg free
 15742  00906E  6E14               	movwf	??_InitSoftStart^0,c
 15743  009070  5014               	movf	??_InitSoftStart^0,w,c
 15744  009072  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15745  009074  6B0F               	clrf	(_var_sys+15)& (0+255),b	;volatile
 15746                           
 15747                           ; BSR set to: 1
 15748                           ;sm_ControlGate_MC50.c: 827:         if ( var_sys.velocityFactor > (81) )
 15749  009076  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 15750  009078  D00A               	goto	l20786
 15751  00907A  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 15752  00907C  E104               	bnz	u23880
 15753  00907E  0E52               	movlw	82
 15754  009080  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 15755  009082  A0D8               	btfss	status,0,c
 15756  009084  D004               	goto	l20786
 15757  009086                     u23880:
 15758                           
 15759                           ; BSR set to: 1
 15760                           ;sm_ControlGate_MC50.c: 828:         {;sm_ControlGate_MC50.c: 829:             var_sys.v
      +                          elocityFactor = (81);
 15761  009086  0E00               	movlw	0
 15762  009088  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15763  00908A  0E51               	movlw	81
 15764  00908C  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15765  00908E                     l20786:
 15766                           
 15767                           ; BSR set to: 1
 15768                           ;sm_ControlGate_MC50.c: 840:         ts_system.timeSoftStart = var_sys.velocityFactor + 
      +                          1;
 15769  00908E  0E01               	movlw	1
 15770  009090  250E               	addwf	(_var_sys+14)& (0+255),w,b	;volatile
 15771  009092  6FB4               	movwf	(_ts_system+22)& (0+255),b	;volatile
 15772  009094  0E00               	movlw	0
 15773  009096  210F               	addwfc	(_var_sys+15)& (0+255),w,b	;volatile
 15774  009098  6FB5               	movwf	(_ts_system+23)& (0+255),b	;volatile
 15775                           
 15776                           ;sm_ControlGate_MC50.c: 842:         var_sys.SoftStartDecrementControl = 10 - var_sys_NV
      +                          M.softStart;
 15777  00909A  0100               	movlb	0	; () banked
 15778  00909C  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15779  00909E  080A               	sublw	10
 15780  0090A0  0101               	movlb	1	; () banked
 15781  0090A2  6F14               	movwf	(_var_sys+20)& (0+255),b	;volatile
 15782  0090A4  0012               	return		;funcret
 15783  0090A6                     __end_of_InitSoftStart:
 15784                           	callstack 0
 15785                           
 15786 ;; *************** function _InitWalkAutoTime *****************
 15787 ;; Defined at:
 15788 ;;		line 103 in file "sm_ControlGate_MC50.c"
 15789 ;; Parameters:    Size  Location     Type
 15790 ;;		None
 15791 ;; Auto vars:     Size  Location     Type
 15792 ;;		None
 15793 ;; Return value:  Size  Location     Type
 15794 ;;                  1    wreg      void 
 15795 ;; Registers used:
 15796 ;;		wreg, status,2, status,0, prodl, prodh
 15797 ;; Tracked objects:
 15798 ;;		On entry : 0/1
 15799 ;;		On exit  : 3F/0
 15800 ;;		Unchanged: 0/0
 15801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15806 ;;Total ram usage:        0 bytes
 15807 ;; Hardware stack levels used: 1
 15808 ;; Hardware stack levels required when called: 4
 15809 ;; This function calls:
 15810 ;;		Nothing
 15811 ;; This function is called by:
 15812 ;;		_actionZone_Closed
 15813 ;;		_actionZone_Opening
 15814 ;;		_actionZone_Opened
 15815 ;;		_actionZone_Closing
 15816 ;; This function uses a non-reentrant model
 15817 ;;
 15818                           
 15819                           	psect	text47
 15820  009F0E                     __ptext47:
 15821                           	callstack 0
 15822  009F0E                     _InitWalkAutoTime:
 15823                           	callstack 24
 15824                           
 15825                           ;sm_ControlGate_MC50.c: 105:     ts_system.timeWaitToClose = ((int) var_sys_NVM.autoTime
      +                          WalkClose * (1000/50));
 15826                           
 15827                           ;incstack = 0
 15828  009F0E  0100               	movlb	0	; () banked
 15829  009F10  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 15830  009F12  0D14               	mullw	20
 15831  009F14  CFF3 F1B0          	movff	prodl,_ts_system+18	;volatile
 15832  009F18  CFF4 F1B1          	movff	prodh,_ts_system+19	;volatile
 15833                           
 15834                           ; BSR set to: 0
 15835                           ;sm_ControlGate_MC50.c: 106:     var_sys.AutoCloseActive = var_sys_NVM.autoTimeWalkClose
      +                          ;
 15836  009F1C  C09E  F123         	movff	_var_sys_NVM+6,_var_sys+35	;volatile
 15837                           
 15838                           ; BSR set to: 0
 15839  009F20  0012               	return		;funcret
 15840  009F22                     __end_of_InitWalkAutoTime:
 15841                           	callstack 0
 15842                           
 15843 ;; *************** function _GetSecurityStateInOpening *****************
 15844 ;; Defined at:
 15845 ;;		line 738 in file "inputs_MC50.c"
 15846 ;; Parameters:    Size  Location     Type
 15847 ;;		None
 15848 ;; Auto vars:     Size  Location     Type
 15849 ;;		None
 15850 ;; Return value:  Size  Location     Type
 15851 ;;                  1    wreg      enum E10564
 15852 ;; Registers used:
 15853 ;;		wreg, status,2, status,0, cstack
 15854 ;; Tracked objects:
 15855 ;;		On entry : 0/0
 15856 ;;		On exit  : 3E/0
 15857 ;;		Unchanged: 0/0
 15858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15863 ;;Total ram usage:        0 bytes
 15864 ;; Hardware stack levels used: 1
 15865 ;; Hardware stack levels required when called: 5
 15866 ;; This function calls:
 15867 ;;		_SetSegmentValueIntermitent
 15868 ;; This function is called by:
 15869 ;;		_actionZone_Closed
 15870 ;;		_actionZone_Opening
 15871 ;; This function uses a non-reentrant model
 15872 ;;
 15873                           
 15874                           	psect	text48
 15875  008064                     __ptext48:
 15876                           	callstack 0
 15877  008064                     _GetSecurityStateInOpening:
 15878                           	callstack 23
 15879                           
 15880                           ;inputs_MC50.c: 747:     if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBarI
      +                          sObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 1)&& (var_sys_NVM.Stopboton == 0
      +                          ))
 15881                           
 15882                           ; BSR set to: 0
 15883                           ;incstack = 0
 15884  008064  0100               	movlb	0	; () banked
 15885  008066  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 15886  008068  A4D8               	btfss	status,2,c
 15887  00806A  D01B               	goto	l21570
 15888                           
 15889                           ; BSR set to: 0
 15890  00806C  0101               	movlb	1	; () banked
 15891  00806E  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15892  008070  A4D8               	btfss	status,2,c
 15893  008072  D017               	goto	l21570
 15894                           
 15895                           ; BSR set to: 1
 15896  008074  0100               	movlb	0	; () banked
 15897  008076  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 15898  008078  A4D8               	btfss	status,2,c
 15899  00807A  D013               	goto	l21570
 15900                           
 15901                           ; BSR set to: 0
 15902  00807C  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15903  00807E  A4D8               	btfss	status,2,c
 15904  008080  D010               	goto	l21570
 15905                           
 15906                           ; BSR set to: 0
 15907                           ;inputs_MC50.c: 748:     {;inputs_MC50.c: 750:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15908  008082  0E00               	movlw	0
 15909  008084  0101               	movlb	1	; () banked
 15910  008086  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15911  008088  0E04               	movlw	4
 15912  00808A  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15913                           
 15914                           ; BSR set to: 1
 15915                           ;inputs_MC50.c: 751:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 15916  00808C  0E0A               	movlw	10
 15917  00808E  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15918  008090  0E00               	movlw	0
 15919  008092  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15920  008094  0E14               	movlw	20
 15921  008096  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15922  008098  0E12               	movlw	18
 15923  00809A  ECB5  F04C         	call	_SetSegmentValueIntermitent
 15924  00809E                     l21564:
 15925                           
 15926                           ; BSR set to: 1
 15927                           ;inputs_MC50.c: 752:         return YES;
 15928  00809E  0E01               	movlw	1
 15929  0080A0  0012               	return	
 15930  0080A2                     l21570:
 15931  0080A2  0100               	movlb	0	; () banked
 15932  0080A4  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15933  0080A6  A4D8               	btfss	status,2,c
 15934  0080A8  D013               	goto	l21584
 15935                           
 15936                           ; BSR set to: 0
 15937  0080AA  0101               	movlb	1	; () banked
 15938  0080AC  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15939  0080AE  A4D8               	btfss	status,2,c
 15940  0080B0  D00F               	goto	l21584
 15941                           
 15942                           ; BSR set to: 1
 15943                           ;inputs_MC50.c: 756:     {;inputs_MC50.c: 758:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15944  0080B2  0E00               	movlw	0
 15945  0080B4  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15946  0080B6  0E04               	movlw	4
 15947  0080B8  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15948                           
 15949                           ; BSR set to: 1
 15950                           ;inputs_MC50.c: 759:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 15951  0080BA  0E15               	movlw	21
 15952  0080BC  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15953  0080BE  0E00               	movlw	0
 15954  0080C0  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15955  0080C2  0E14               	movlw	20
 15956  0080C4  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15957  0080C6  0E05               	movlw	5
 15958  0080C8  ECB5  F04C         	call	_SetSegmentValueIntermitent
 15959                           
 15960                           ; BSR set to: 1
 15961                           ;inputs_MC50.c: 760:         return ST;
 15962  0080CC  0E02               	movlw	2
 15963  0080CE  0012               	return	
 15964  0080D0                     l21584:
 15965  0080D0  0100               	movlb	0	; () banked
 15966  0080D2  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 15967  0080D4  A4D8               	btfss	status,2,c
 15968  0080D6  D017               	goto	l21600
 15969                           
 15970                           ; BSR set to: 0
 15971  0080D8  0101               	movlb	1	; () banked
 15972  0080DA  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 15973  0080DC  A4D8               	btfss	status,2,c
 15974  0080DE  D013               	goto	l21600
 15975                           
 15976                           ; BSR set to: 1
 15977  0080E0  0100               	movlb	0	; () banked
 15978  0080E2  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 15979  0080E4  A4D8               	btfss	status,2,c
 15980  0080E6  D00F               	goto	l21600
 15981                           
 15982                           ; BSR set to: 0
 15983                           ;inputs_MC50.c: 764:     {;inputs_MC50.c: 766:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15984  0080E8  0E00               	movlw	0
 15985  0080EA  0101               	movlb	1	; () banked
 15986  0080EC  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15987  0080EE  0E04               	movlw	4
 15988  0080F0  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15989                           
 15990                           ; BSR set to: 1
 15991                           ;inputs_MC50.c: 767:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 15992  0080F2  0E0E               	movlw	14
 15993  0080F4  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15994  0080F6  0E00               	movlw	0
 15995  0080F8  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15996  0080FA  0E14               	movlw	20
 15997  0080FC  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15998  0080FE  0E12               	movlw	18
 15999  008100  ECB5  F04C         	call	_SetSegmentValueIntermitent
 16000  008104  D7CC               	goto	l21564
 16001  008106                     l21600:
 16002                           
 16003                           ;inputs_MC50.c: 771:     {;inputs_MC50.c: 772:         return NO;
 16004  008106  0E00               	movlw	0
 16005  008108  0012               	return		;funcret
 16006  00810A                     __end_of_GetSecurityStateInOpening:
 16007                           	callstack 0
 16008                           
 16009 ;; *************** function _SetSegmentValueIntermitent *****************
 16010 ;; Defined at:
 16011 ;;		line 201 in file "outputs_MC50.c"
 16012 ;; Parameters:    Size  Location     Type
 16013 ;;  d1              1    wreg     unsigned char 
 16014 ;;  d2              1   15[COMRAM] unsigned char 
 16015 ;;  time            2   16[COMRAM] int 
 16016 ;; Auto vars:     Size  Location     Type
 16017 ;;  d1              1   18[COMRAM] unsigned char 
 16018 ;; Return value:  Size  Location     Type
 16019 ;;                  1    wreg      void 
 16020 ;; Registers used:
 16021 ;;		wreg, status,2, status,0
 16022 ;; Tracked objects:
 16023 ;;		On entry : 3E/0
 16024 ;;		On exit  : 3F/1
 16025 ;;		Unchanged: 0/0
 16026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16027 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16030 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16031 ;;Total ram usage:        4 bytes
 16032 ;; Hardware stack levels used: 1
 16033 ;; Hardware stack levels required when called: 4
 16034 ;; This function calls:
 16035 ;;		Nothing
 16036 ;; This function is called by:
 16037 ;;		_GetSecurityStateInOpening
 16038 ;;		_GetSecurityStateInClosing
 16039 ;;		_sm_execute_ControlGate
 16040 ;;		_actionZone_Opening
 16041 ;;		_actionZone_Closing
 16042 ;; This function uses a non-reentrant model
 16043 ;;
 16044                           
 16045                           	psect	text49
 16046  00996A                     __ptext49:
 16047                           	callstack 0
 16048  00996A                     _SetSegmentValueIntermitent:
 16049                           	callstack 24
 16050                           
 16051                           ;incstack = 0
 16052                           ;SetSegmentValueIntermitent@d1 stored from wreg
 16053  00996A  6E13               	movwf	SetSegmentValueIntermitent@d1^0,c
 16054                           
 16055                           ;outputs_MC50.c: 201: void SetSegmentValueIntermitent(char d1, char d2,int time);outputs
      +                          _MC50.c: 202: {;outputs_MC50.c: 204:     if ( main_stateMachine.current_state != st_Menu
      +                          Configuration && (ts_system.timeoutMenu == 0 && button_struct.timer < (1000/50)))
 16056  00996C  0101               	movlb	1	; () banked
 16057  00996E  05F1               	decf	_main_stateMachine& (0+255),w,b
 16058  009970  11F2               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 16059  009972  B4D8               	btfsc	status,2,c
 16060  009974  0012               	return	
 16061                           
 16062                           ; BSR set to: 1
 16063  009976  51AC               	movf	(_ts_system+14)& (0+255),w,b	;volatile
 16064  009978  11AD               	iorwf	(_ts_system+15)& (0+255),w,b	;volatile
 16065  00997A  A4D8               	btfss	status,2,c
 16066  00997C  0012               	return	
 16067                           
 16068                           ; BSR set to: 1
 16069  00997E  0E14               	movlw	20
 16070  009980  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16071  009982  0012               	return	
 16072                           
 16073                           ; BSR set to: 1
 16074                           ;outputs_MC50.c: 205:     {;outputs_MC50.c: 206:         dispStruct.display_grp.value_di
      +                          splay1=d1;
 16075  009984  C013  F072         	movff	SetSegmentValueIntermitent@d1,_dispStruct	;volatile
 16076                           
 16077                           ;outputs_MC50.c: 207:         dispStruct.display_grp.value_display2=d2;
 16078  009988  C010  F073         	movff	SetSegmentValueIntermitent@d2,_dispStruct+1	;volatile
 16079                           
 16080                           ;outputs_MC50.c: 208:         dispStruct.intermitentFreq=time;
 16081  00998C  C011  F075         	movff	SetSegmentValueIntermitent@time,_dispStruct+3	;volatile
 16082  009990  C012  F076         	movff	SetSegmentValueIntermitent@time+1,_dispStruct+4	;volatile
 16083                           
 16084                           ; BSR set to: 1
 16085  009994  0012               	return		;funcret
 16086  009996                     __end_of_SetSegmentValueIntermitent:
 16087                           	callstack 0
 16088                           
 16089 ;; *************** function _GetOpenOrder *****************
 16090 ;; Defined at:
 16091 ;;		line 330 in file "inputs_MC50.c"
 16092 ;; Parameters:    Size  Location     Type
 16093 ;;		None
 16094 ;; Auto vars:     Size  Location     Type
 16095 ;;		None
 16096 ;; Return value:  Size  Location     Type
 16097 ;;                  1    wreg      enum E10539
 16098 ;; Registers used:
 16099 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16100 ;; Tracked objects:
 16101 ;;		On entry : 3E/1
 16102 ;;		On exit  : 0/0
 16103 ;;		Unchanged: 0/0
 16104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16109 ;;Total ram usage:        0 bytes
 16110 ;; Hardware stack levels used: 1
 16111 ;; Hardware stack levels required when called: 5
 16112 ;; This function calls:
 16113 ;;		_SetSegmentValueIntermitentMain
 16114 ;;		___lbdiv
 16115 ;; This function is called by:
 16116 ;;		_sm_execute_ControlGate
 16117 ;;		_actionZone_Closed
 16118 ;;		_actionZone_Opening
 16119 ;;		_actionZone_Opened
 16120 ;;		_actionZone_Closing
 16121 ;;		_sm_execute_ControlLearning
 16122 ;; This function uses a non-reentrant model
 16123 ;;
 16124                           
 16125                           	psect	text50
 16126  005F30                     __ptext50:
 16127                           	callstack 0
 16128  005F30                     _GetOpenOrder:
 16129                           	callstack 23
 16130                           
 16131                           ;inputs_MC50.c: 332:    if (var_sys.LearningIsEnabled == NO){
 16132                           
 16133                           ; BSR set to: 1
 16134                           ;incstack = 0
 16135  005F30  0101               	movlb	1	; () banked
 16136  005F32  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 16137  005F34  A4D8               	btfss	status,2,c
 16138  005F36  D0C0               	goto	l21540
 16139                           
 16140                           ; BSR set to: 1
 16141                           ;inputs_MC50.c: 334:        if(ts_system.TimeCurrentAlarm>0)
 16142  005F38  BFC9               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 16143  005F3A  D019               	goto	l21432
 16144  005F3C  51C9               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 16145  005F3E  E103               	bnz	u24690
 16146  005F40  05C8               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 16147  005F42  A0D8               	btfss	status,0,c
 16148  005F44  D014               	goto	l21432
 16149  005F46                     u24690:
 16150                           
 16151                           ; BSR set to: 1
 16152                           ;inputs_MC50.c: 336:         {;inputs_MC50.c: 337:             SetSegmentValueIntermiten
      +                          tMain(dL,d1,(1000/50));
 16153  005F46  0E01               	movlw	1
 16154  005F48  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16155  005F4A  0E00               	movlw	0
 16156  005F4C  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16157  005F4E  0E14               	movlw	20
 16158  005F50  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16159  005F52  0E12               	movlw	18
 16160  005F54  EC91  F04F         	call	_SetSegmentValueIntermitentMain
 16161                           
 16162                           ;inputs_MC50.c: 338:             ts_system.timeSinalizationDigit=( 500/50);
 16163  005F58  0E00               	movlw	0
 16164  005F5A  0101               	movlb	1	; () banked
 16165  005F5C  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16166  005F5E  0E0A               	movlw	10
 16167  005F60  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16168                           
 16169                           ; BSR set to: 1
 16170                           ;inputs_MC50.c: 339:             rfCMD.processed=1;
 16171  005F62  0E01               	movlw	1
 16172  005F64  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16173                           
 16174                           ; BSR set to: 1
 16175                           ;inputs_MC50.c: 340:             button_struct.processed=1;
 16176  005F66  0E01               	movlw	1
 16177  005F68  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16178  005F6A                     l21426:
 16179                           
 16180                           ;inputs_MC50.c: 341:             return NoCMD;
 16181  005F6A  0E00               	movlw	0
 16182  005F6C  0012               	return	
 16183  005F6E                     l21432:
 16184                           
 16185                           ; BSR set to: 1
 16186  005F6E  0100               	movlb	0	; () banked
 16187  005F70  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16188  005F72  B4D8               	btfsc	status,2,c
 16189  005F74  D02F               	goto	l21466
 16190                           
 16191                           ; BSR set to: 0
 16192                           ;inputs_MC50.c: 344:         {;inputs_MC50.c: 345:             if(button_struct.current=
      +                          =0x35)
 16193  005F76  0E35               	movlw	53
 16194  005F78  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16195  005F7A  A4D8               	btfss	status,2,c
 16196  005F7C  D017               	goto	l21450
 16197                           
 16198                           ; BSR set to: 0
 16199                           ;inputs_MC50.c: 346:             {;inputs_MC50.c: 347:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16200  005F7E  0E00               	movlw	0
 16201  005F80  0101               	movlb	1	; () banked
 16202  005F82  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16203  005F84  0E0A               	movlw	10
 16204  005F86  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16205                           
 16206                           ; BSR set to: 1
 16207                           ;inputs_MC50.c: 348:                 SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16208  005F88  0E00               	movlw	0
 16209  005F8A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16210  005F8C  0E00               	movlw	0
 16211  005F8E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16212  005F90  0E04               	movlw	4
 16213  005F92  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16214  005F94  0E12               	movlw	18
 16215  005F96  EC91  F04F         	call	_SetSegmentValueIntermitentMain
 16216                           
 16217                           ;inputs_MC50.c: 349:                 if (var_sys_NVM.homemPresente == 2){
 16218  005F9A  0E02               	movlw	2
 16219  005F9C  0100               	movlb	0	; () banked
 16220  005F9E  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16221  005FA0  A4D8               	btfss	status,2,c
 16222  005FA2  D002               	goto	l21444
 16223  005FA4                     u24720:
 16224                           
 16225                           ; BSR set to: 0
 16226                           ;inputs_MC50.c: 350:                    button_struct.processed=1;
 16227  005FA4  0E01               	movlw	1
 16228  005FA6  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16229  005FA8                     l21444:
 16230                           
 16231                           ; BSR set to: 0
 16232                           ;inputs_MC50.c: 352:                 return TypeFullOpen;
 16233  005FA8  0E03               	movlw	3
 16234  005FAA  0012               	return	
 16235  005FAC                     l21450:
 16236                           
 16237                           ; BSR set to: 0
 16238  005FAC  0E33               	movlw	51
 16239  005FAE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16240  005FB0  A4D8               	btfss	status,2,c
 16241  005FB2  D7DB               	goto	l21426
 16242                           
 16243                           ; BSR set to: 0
 16244                           ;inputs_MC50.c: 355:             {;inputs_MC50.c: 356:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16245  005FB4  0E00               	movlw	0
 16246  005FB6  0101               	movlb	1	; () banked
 16247  005FB8  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16248  005FBA  0E0A               	movlw	10
 16249  005FBC  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16250                           
 16251                           ; BSR set to: 1
 16252                           ;inputs_MC50.c: 357:                 SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16253  005FBE  0E05               	movlw	5
 16254  005FC0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16255  005FC2  0E00               	movlw	0
 16256  005FC4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16257  005FC6  0E04               	movlw	4
 16258  005FC8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16259  005FCA  0E12               	movlw	18
 16260  005FCC  EC91  F04F         	call	_SetSegmentValueIntermitentMain
 16261  005FD0                     l21456:
 16262                           
 16263                           ;inputs_MC50.c: 359:                 return TypeFullClose;
 16264  005FD0  0E04               	movlw	4
 16265  005FD2  0012               	return	
 16266  005FD4                     l21466:
 16267                           
 16268                           ; BSR set to: 0
 16269  005FD4  0E35               	movlw	53
 16270  005FD6  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16271  005FD8  A4D8               	btfss	status,2,c
 16272  005FDA  D016               	goto	l21488
 16273                           
 16274                           ; BSR set to: 0
 16275                           ;inputs_MC50.c: 371:         {;inputs_MC50.c: 372:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16276  005FDC  0E00               	movlw	0
 16277  005FDE  0101               	movlb	1	; () banked
 16278  005FE0  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16279  005FE2  0E28               	movlw	40
 16280  005FE4  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16281                           
 16282                           ; BSR set to: 1
 16283                           ;inputs_MC50.c: 373:             SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16284  005FE6  0E00               	movlw	0
 16285  005FE8  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16286  005FEA  0E00               	movlw	0
 16287  005FEC  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16288  005FEE  0E04               	movlw	4
 16289  005FF0  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16290  005FF2  0E12               	movlw	18
 16291  005FF4  EC91  F04F         	call	_SetSegmentValueIntermitentMain
 16292                           
 16293                           ;inputs_MC50.c: 374:             if(var_sys_NVM.logicDigital==1)
 16294  005FF8  0100               	movlb	0	; () banked
 16295  005FFA  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16296  005FFC  B4D8               	btfsc	status,2,c
 16297  005FFE  D7D2               	goto	u24720
 16298  006000                     l21482:
 16299                           
 16300                           ;inputs_MC50.c: 380:             {;inputs_MC50.c: 381:                 button_struct.pro
      +                          cessed=1;
 16301  006000  0E01               	movlw	1
 16302  006002  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16303                           
 16304                           ;inputs_MC50.c: 382:                 return TypeFull;
 16305  006004  0E01               	movlw	1
 16306  006006  0012               	return	
 16307  006008                     l21488:
 16308                           
 16309                           ; BSR set to: 0
 16310  006008  0E33               	movlw	51
 16311  00600A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16312  00600C  A4D8               	btfss	status,2,c
 16313  00600E  D019               	goto	l21510
 16314                           
 16315                           ; BSR set to: 0
 16316                           ;inputs_MC50.c: 387:         {;inputs_MC50.c: 389:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16317  006010  0E00               	movlw	0
 16318  006012  0101               	movlb	1	; () banked
 16319  006014  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16320  006016  0E28               	movlw	40
 16321  006018  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16322                           
 16323                           ; BSR set to: 1
 16324                           ;inputs_MC50.c: 390:             SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16325  00601A  0E05               	movlw	5
 16326  00601C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16327  00601E  0E00               	movlw	0
 16328  006020  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16329  006022  0E04               	movlw	4
 16330  006024  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16331  006026  0E12               	movlw	18
 16332  006028  EC91  F04F         	call	_SetSegmentValueIntermitentMain
 16333                           
 16334                           ;inputs_MC50.c: 391:             if(var_sys_NVM.logicDigital==1)
 16335  00602C  0100               	movlb	0	; () banked
 16336  00602E  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16337  006030  A4D8               	btfss	status,2,c
 16338  006032  D003               	goto	l21504
 16339                           
 16340                           ; BSR set to: 0
 16341                           ;inputs_MC50.c: 392:             {;inputs_MC50.c: 393:                  button_struct.pr
      +                          ocessed=1;
 16342  006034  0E01               	movlw	1
 16343  006036  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16344  006038  D7CB               	goto	l21456
 16345  00603A                     l21504:
 16346                           
 16347                           ; BSR set to: 0
 16348                           ;inputs_MC50.c: 399:             {;inputs_MC50.c: 400:                  button_struct.pr
      +                          ocessed=1;
 16349  00603A  0E01               	movlw	1
 16350  00603C  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16351                           
 16352                           ; BSR set to: 0
 16353                           ;inputs_MC50.c: 402:                 return TypeWalk;
 16354  00603E  0E02               	movlw	2
 16355  006040  0012               	return	
 16356  006042                     l21510:
 16357                           
 16358                           ; BSR set to: 0
 16359  006042  0E36               	movlw	54
 16360  006044  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16361  006046  A4D8               	btfss	status,2,c
 16362  006048  D00F               	goto	l21524
 16363                           
 16364                           ; BSR set to: 0
 16365                           ;inputs_MC50.c: 408:         {;inputs_MC50.c: 409:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16366  00604A  0E00               	movlw	0
 16367  00604C  0101               	movlb	1	; () banked
 16368  00604E  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16369  006050  0E28               	movlw	40
 16370  006052  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16371                           
 16372                           ; BSR set to: 1
 16373                           ;inputs_MC50.c: 410:             SetSegmentValueIntermitentMain(dP,dU,( 200/50));
 16374  006054  0E13               	movlw	19
 16375  006056  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16376  006058  0E00               	movlw	0
 16377  00605A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16378  00605C  0E04               	movlw	4
 16379  00605E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16380  006060  0E10               	movlw	16
 16381  006062  EC91  F04F         	call	_SetSegmentValueIntermitentMain
 16382  006066  D7CC               	goto	l21482
 16383  006068                     l21524:
 16384                           
 16385                           ; BSR set to: 0
 16386                           ;inputs_MC50.c: 417:         {;inputs_MC50.c: 418:             if(rfCMD.currentType!=NoC
      +                          MD && rfCMD.currentType!=TypeProgrammingModeFull && rfCMD.currentType!=TypeProgrammingMo
      +                          deWalk )
 16387  006068  503B               	movf	_rfCMD^0,w,c	;volatile
 16388  00606A  B4D8               	btfsc	status,2,c
 16389  00606C  D023               	goto	l21536
 16390                           
 16391                           ; BSR set to: 0
 16392  00606E  0E06               	movlw	6
 16393  006070  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16394  006072  B4D8               	btfsc	status,2,c
 16395  006074  D01F               	goto	l21536
 16396                           
 16397                           ; BSR set to: 0
 16398  006076  0E05               	movlw	5
 16399  006078  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16400  00607A  B4D8               	btfsc	status,2,c
 16401  00607C  D01B               	goto	l21536
 16402                           
 16403                           ; BSR set to: 0
 16404                           ;inputs_MC50.c: 419:             {;inputs_MC50.c: 420:                 SetSegmentValueIn
      +                          termitentMain(rfCMD.currentPosMem/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),
      +                          ( 200/50));
 16405  00607E  0E0A               	movlw	10
 16406  006080  6E10               	movwf	___lbdiv@divisor^0,c
 16407  006082  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16408  006084  ECE8  F04B         	call	___lbdiv
 16409  006088  0DF6               	mullw	246
 16410  00608A  50F3               	movf	243,w,c
 16411  00608C  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16412  00608E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16413  006090  0E00               	movlw	0
 16414  006092  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16415  006094  0E04               	movlw	4
 16416  006096  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16417  006098  0E0A               	movlw	10
 16418  00609A  6E10               	movwf	___lbdiv@divisor^0,c
 16419  00609C  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16420  00609E  ECE8  F04B         	call	___lbdiv
 16421  0060A2  EC91  F04F         	call	_SetSegmentValueIntermitentMain
 16422                           
 16423                           ;inputs_MC50.c: 421:                 ts_system.timeSinalizationDigit=(1000/50)*2;
 16424  0060A6  0E00               	movlw	0
 16425  0060A8  0101               	movlb	1	; () banked
 16426  0060AA  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16427  0060AC  0E28               	movlw	40
 16428  0060AE  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16429                           
 16430                           ; BSR set to: 1
 16431                           ;inputs_MC50.c: 422:                 rfCMD.processed=1;
 16432  0060B0  0E01               	movlw	1
 16433  0060B2  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16434  0060B4                     l21536:
 16435                           
 16436                           ;inputs_MC50.c: 425:             return rfCMD.currentType;
 16437  0060B4  503B               	movf	_rfCMD^0,w,c	;volatile
 16438  0060B6  0012               	return	
 16439  0060B8                     l21540:
 16440                           
 16441                           ; BSR set to: 1
 16442                           ;inputs_MC50.c: 428:     {;inputs_MC50.c: 429:        if(rfCMD.currentType!=NoCMD ){
 16443  0060B8  503B               	movf	_rfCMD^0,w,c	;volatile
 16444  0060BA  B4D8               	btfsc	status,2,c
 16445  0060BC  D01B               	goto	l21548
 16446                           
 16447                           ; BSR set to: 1
 16448                           ;inputs_MC50.c: 430:                   SetSegmentValueIntermitentMain(rfCMD.currentPosMe
      +                          m/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),( 200/50));
 16449  0060BE  0E0A               	movlw	10
 16450  0060C0  6E10               	movwf	___lbdiv@divisor^0,c
 16451  0060C2  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16452  0060C4  ECE8  F04B         	call	___lbdiv
 16453  0060C8  0DF6               	mullw	246
 16454  0060CA  50F3               	movf	243,w,c
 16455  0060CC  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16456  0060CE  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16457  0060D0  0E00               	movlw	0
 16458  0060D2  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16459  0060D4  0E04               	movlw	4
 16460  0060D6  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16461  0060D8  0E0A               	movlw	10
 16462  0060DA  6E10               	movwf	___lbdiv@divisor^0,c
 16463  0060DC  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16464  0060DE  ECE8  F04B         	call	___lbdiv
 16465  0060E2  EC91  F04F         	call	_SetSegmentValueIntermitentMain
 16466                           
 16467                           ;inputs_MC50.c: 431:                 ts_system.timeSinalizationDigit=(1000/50)*1;
 16468  0060E6  0E00               	movlw	0
 16469  0060E8  0101               	movlb	1	; () banked
 16470  0060EA  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16471  0060EC  0E14               	movlw	20
 16472  0060EE  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16473                           
 16474                           ; BSR set to: 1
 16475                           ;inputs_MC50.c: 432:                 rfCMD.processed=1;
 16476  0060F0  0E01               	movlw	1
 16477  0060F2  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16478  0060F4                     l21548:
 16479                           
 16480                           ; BSR set to: 1
 16481                           ;inputs_MC50.c: 434:        return rfCMD.currentType;
 16482  0060F4  503B               	movf	_rfCMD^0,w,c	;volatile
 16483  0060F6  0012               	return		;funcret
 16484  0060F8                     __end_of_GetOpenOrder:
 16485                           	callstack 0
 16486                           
 16487 ;; *************** function ___lbdiv *****************
 16488 ;; Defined at:
 16489 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbdiv.c"
 16490 ;; Parameters:    Size  Location     Type
 16491 ;;  dividend        1    wreg     unsigned char 
 16492 ;;  divisor         1   15[COMRAM] unsigned char 
 16493 ;; Auto vars:     Size  Location     Type
 16494 ;;  dividend        1   16[COMRAM] unsigned char 
 16495 ;;  quotient        1   18[COMRAM] unsigned char 
 16496 ;;  counter         1   17[COMRAM] unsigned char 
 16497 ;; Return value:  Size  Location     Type
 16498 ;;                  1    wreg      unsigned char 
 16499 ;; Registers used:
 16500 ;;		wreg, status,2, status,0
 16501 ;; Tracked objects:
 16502 ;;		On entry : 0/0
 16503 ;;		On exit  : 0/0
 16504 ;;		Unchanged: 0/0
 16505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16506 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16507 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16509 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16510 ;;Total ram usage:        4 bytes
 16511 ;; Hardware stack levels used: 1
 16512 ;; Hardware stack levels required when called: 4
 16513 ;; This function calls:
 16514 ;;		Nothing
 16515 ;; This function is called by:
 16516 ;;		_GetOpenOrder
 16517 ;;		_sm_execute_menuConfiguration
 16518 ;; This function uses a non-reentrant model
 16519 ;;
 16520                           
 16521                           	psect	text51
 16522  0097D0                     __ptext51:
 16523                           	callstack 0
 16524  0097D0                     ___lbdiv:
 16525                           	callstack 24
 16526                           
 16527                           ;incstack = 0
 16528                           ;___lbdiv@dividend stored from wreg
 16529  0097D0  6E11               	movwf	___lbdiv@dividend^0,c
 16530  0097D2  0E00               	movlw	0
 16531  0097D4  6E13               	movwf	___lbdiv@quotient^0,c
 16532  0097D6  5010               	movf	___lbdiv@divisor^0,w,c
 16533  0097D8  B4D8               	btfsc	status,2,c
 16534  0097DA  D015               	goto	l21296
 16535  0097DC  0E01               	movlw	1
 16536  0097DE  6E12               	movwf	___lbdiv@counter^0,c
 16537  0097E0  D003               	goto	l21284
 16538  0097E2                     l21280:
 16539  0097E2  90D8               	bcf	status,0,c
 16540  0097E4  3610               	rlcf	___lbdiv@divisor^0,f,c
 16541  0097E6  2A12               	incf	___lbdiv@counter^0,f,c
 16542  0097E8                     l21284:
 16543  0097E8  AE10               	btfss	___lbdiv@divisor^0,7,c
 16544  0097EA  D7FB               	goto	l21280
 16545  0097EC                     u24520:
 16546  0097EC  90D8               	bcf	status,0,c
 16547  0097EE  3613               	rlcf	___lbdiv@quotient^0,f,c
 16548  0097F0  5010               	movf	___lbdiv@divisor^0,w,c
 16549  0097F2  5C11               	subwf	___lbdiv@dividend^0,w,c
 16550  0097F4  A0D8               	btfss	status,0,c
 16551  0097F6  D003               	goto	l21292
 16552  0097F8  5010               	movf	___lbdiv@divisor^0,w,c
 16553  0097FA  5E11               	subwf	___lbdiv@dividend^0,f,c
 16554  0097FC  8013               	bsf	___lbdiv@quotient^0,0,c
 16555  0097FE                     l21292:
 16556  0097FE  90D8               	bcf	status,0,c
 16557  009800  3210               	rrcf	___lbdiv@divisor^0,f,c
 16558  009802  2E12               	decfsz	___lbdiv@counter^0,f,c
 16559  009804  D7F3               	goto	u24520
 16560  009806                     l21296:
 16561  009806  5013               	movf	___lbdiv@quotient^0,w,c
 16562  009808  0012               	return		;funcret
 16563  00980A                     __end_of___lbdiv:
 16564                           	callstack 0
 16565                           
 16566 ;; *************** function _SetSegmentValueIntermitentMain *****************
 16567 ;; Defined at:
 16568 ;;		line 193 in file "outputs_MC50.c"
 16569 ;; Parameters:    Size  Location     Type
 16570 ;;  d1              1    wreg     unsigned char 
 16571 ;;  d2              1   27[COMRAM] unsigned char 
 16572 ;;  time            2   28[COMRAM] int 
 16573 ;; Auto vars:     Size  Location     Type
 16574 ;;  d1              1   30[COMRAM] unsigned char 
 16575 ;; Return value:  Size  Location     Type
 16576 ;;                  1    wreg      void 
 16577 ;; Registers used:
 16578 ;;		wreg
 16579 ;; Tracked objects:
 16580 ;;		On entry : 0/1
 16581 ;;		On exit  : 0/0
 16582 ;;		Unchanged: 0/0
 16583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16584 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16585 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16587 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16588 ;;Total ram usage:        4 bytes
 16589 ;; Hardware stack levels used: 1
 16590 ;; Hardware stack levels required when called: 4
 16591 ;; This function calls:
 16592 ;;		Nothing
 16593 ;; This function is called by:
 16594 ;;		_GetOpenOrder
 16595 ;;		_sm_execute_main
 16596 ;;		_sm_execute_menuConfiguration
 16597 ;;		_load_New_Menu
 16598 ;;		_controlSelectRemote
 16599 ;;		_controlSaveRemote
 16600 ;; This function uses a non-reentrant model
 16601 ;;
 16602                           
 16603                           	psect	text52
 16604  009F22                     __ptext52:
 16605                           	callstack 0
 16606  009F22                     _SetSegmentValueIntermitentMain:
 16607                           	callstack 22
 16608                           
 16609                           ;incstack = 0
 16610                           ;SetSegmentValueIntermitentMain@d1 stored from wreg
 16611  009F22  6E1F               	movwf	SetSegmentValueIntermitentMain@d1^0,c
 16612                           
 16613                           ;outputs_MC50.c: 193: void SetSegmentValueIntermitentMain(char d1, char d2,int time);out
      +                          puts_MC50.c: 194: {;outputs_MC50.c: 195:     dispStruct.display_grp.value_display1=d1;
 16614  009F24  C01F  F072         	movff	SetSegmentValueIntermitentMain@d1,_dispStruct	;volatile
 16615                           
 16616                           ;outputs_MC50.c: 196:     dispStruct.display_grp.value_display2=d2;
 16617  009F28  C01C  F073         	movff	SetSegmentValueIntermitentMain@d2,_dispStruct+1	;volatile
 16618                           
 16619                           ;outputs_MC50.c: 197:     dispStruct.intermitentFreq=time;
 16620  009F2C  C01D  F075         	movff	SetSegmentValueIntermitentMain@time,_dispStruct+3	;volatile
 16621  009F30  C01E  F076         	movff	SetSegmentValueIntermitentMain@time+1,_dispStruct+4	;volatile
 16622  009F34  0012               	return		;funcret
 16623  009F36                     __end_of_SetSegmentValueIntermitentMain:
 16624                           	callstack 0
 16625                           
 16626 ;; *************** function _readbutton *****************
 16627 ;; Defined at:
 16628 ;;		line 471 in file "inputs_MC50.c"
 16629 ;; Parameters:    Size  Location     Type
 16630 ;;		None
 16631 ;; Auto vars:     Size  Location     Type
 16632 ;;		None
 16633 ;; Return value:  Size  Location     Type
 16634 ;;                  1    wreg      void 
 16635 ;; Registers used:
 16636 ;;		wreg, status,2, status,0
 16637 ;; Tracked objects:
 16638 ;;		On entry : 3F/1
 16639 ;;		On exit  : 3F/1
 16640 ;;		Unchanged: 0/0
 16641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16646 ;;Total ram usage:        0 bytes
 16647 ;; Hardware stack levels used: 1
 16648 ;; Hardware stack levels required when called: 4
 16649 ;; This function calls:
 16650 ;;		Nothing
 16651 ;; This function is called by:
 16652 ;;		_main
 16653 ;; This function uses a non-reentrant model
 16654 ;;
 16655                           
 16656                           	psect	text53
 16657  008D96                     __ptext53:
 16658                           	callstack 0
 16659  008D96                     _readbutton:
 16660                           	callstack 26
 16661                           
 16662                           ; BSR set to: 1
 16663                           ;inputs_MC50.c: 474:  static unsigned char key1=0, key2=0;;inputs_MC50.c: 479:  key2 = (
      +                           PORTB & 0x37 );
 16664                           
 16665                           ;incstack = 0
 16666  008D96  508E               	movf	142,w,c	;volatile
 16667  008D98  0B37               	andlw	55
 16668  008D9A  6F9A               	movwf	readbutton@key2& (0+255),b
 16669  008D9C  F000               	nop		;# 
 16670  008D9E  F000               	nop		;# 
 16671  008DA0  F000               	nop		;# 
 16672                           
 16673                           ;inputs_MC50.c: 483:  key1 = ( PORTB & 0x37 );
 16674  008DA2  508E               	movf	142,w,c	;volatile
 16675  008DA4  0B37               	andlw	55
 16676  008DA6  0100               	movlb	0	; () banked
 16677  008DA8  6F86               	movwf	readbutton@key1& (0+255),b
 16678                           
 16679                           ;inputs_MC50.c: 485:  if ( key2 == key1 )
 16680  008DAA  5186               	movf	readbutton@key1& (0+255),w,b
 16681  008DAC  0101               	movlb	1	; () banked
 16682  008DAE  199A               	xorwf	readbutton@key2& (0+255),w,b
 16683  008DB0  A4D8               	btfss	status,2,c
 16684  008DB2  D003               	goto	l24892
 16685                           
 16686                           ; BSR set to: 1
 16687                           ;inputs_MC50.c: 486:  {;inputs_MC50.c: 487:         button_struct.current = key1;
 16688  008DB4  C086  F04D         	movff	readbutton@key1,_button_struct+1	;volatile
 16689                           
 16690                           ;inputs_MC50.c: 488:  }
 16691  008DB8  D002               	goto	l24894
 16692  008DBA                     l24892:
 16693                           
 16694                           ; BSR set to: 1
 16695                           ;inputs_MC50.c: 490:     {;inputs_MC50.c: 491:         button_struct.current = 0x37;
 16696  008DBA  0E37               	movlw	55
 16697  008DBC  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16698  008DBE                     l24894:
 16699                           
 16700                           ; BSR set to: 1
 16701                           ;inputs_MC50.c: 494:     if ( button_struct.current == 0x37 || ( button_struct.current !
      +                          = button_struct.old && button_struct.current == 0x00))
 16702  008DBE  0E37               	movlw	55
 16703  008DC0  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16704  008DC2  B4D8               	btfsc	status,2,c
 16705  008DC4  D007               	goto	u30260
 16706                           
 16707                           ; BSR set to: 1
 16708  008DC6  504C               	movf	_button_struct^0,w,c	;volatile
 16709  008DC8  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16710  008DCA  B4D8               	btfsc	status,2,c
 16711  008DCC  D007               	goto	l24902
 16712                           
 16713                           ; BSR set to: 1
 16714  008DCE  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 16715  008DD0  A4D8               	btfss	status,2,c
 16716  008DD2  D004               	goto	l24902
 16717  008DD4                     u30260:
 16718                           
 16719                           ; BSR set to: 1
 16720                           ;inputs_MC50.c: 495:  {;inputs_MC50.c: 496:   button_struct.processed=0;
 16721  008DD4  0E00               	movlw	0
 16722  008DD6  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16723                           
 16724                           ;inputs_MC50.c: 497:         button_struct.timer=0;
 16725  008DD8  0E00               	movlw	0
 16726  008DDA  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16727  008DDC                     l24902:
 16728                           
 16729                           ; BSR set to: 1
 16730                           ;inputs_MC50.c: 500:  if ( button_struct.current != 0x37 )
 16731  008DDC  0E37               	movlw	55
 16732  008DDE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16733  008DE0  B4D8               	btfsc	status,2,c
 16734  008DE2  D007               	goto	l24910
 16735                           
 16736                           ; BSR set to: 1
 16737                           ;inputs_MC50.c: 501:  {;inputs_MC50.c: 502:   button_struct.old = button_struct.current;
 16738  008DE4  C04D  F04C         	movff	_button_struct+1,_button_struct	;volatile
 16739                           
 16740                           ; BSR set to: 1
 16741                           ;inputs_MC50.c: 504:         if ( button_struct.timer < 250 )
 16742  008DE8  0EFA               	movlw	250
 16743  008DEA  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16744  008DEC  D004               	goto	l24912
 16745                           
 16746                           ; BSR set to: 1
 16747                           ;inputs_MC50.c: 505:         {;inputs_MC50.c: 506:             button_struct.timer++;
 16748  008DEE  2A4E               	incf	(_button_struct+2)^0,f,c	;volatile
 16749  008DF0  D002               	goto	l24912
 16750  008DF2                     l24910:
 16751                           
 16752                           ; BSR set to: 1
 16753                           ;inputs_MC50.c: 515:  {;inputs_MC50.c: 516:   button_struct.timer=0;
 16754  008DF2  0E00               	movlw	0
 16755  008DF4  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16756  008DF6                     l24912:
 16757                           
 16758                           ; BSR set to: 1
 16759                           ;inputs_MC50.c: 520:  if ( button_struct.processed == 1 )
 16760  008DF6  044F               	decf	(_button_struct+3)^0,w,c	;volatile
 16761  008DF8  A4D8               	btfss	status,2,c
 16762  008DFA  0012               	return	
 16763                           
 16764                           ; BSR set to: 1
 16765                           ;inputs_MC50.c: 521:  {;inputs_MC50.c: 522:   button_struct.current = 0x37;
 16766  008DFC  0E37               	movlw	55
 16767  008DFE  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16768                           
 16769                           ; BSR set to: 1
 16770  008E00  0012               	return		;funcret
 16771  008E02                     __end_of_readbutton:
 16772                           	callstack 0
 16773                           
 16774 ;; *************** function _read_package *****************
 16775 ;; Defined at:
 16776 ;;		line 21 in file "eusartpackage.c"
 16777 ;; Parameters:    Size  Location     Type
 16778 ;;		None
 16779 ;; Auto vars:     Size  Location     Type
 16780 ;;  package         7   23[COMRAM] struct package_t
 16781 ;; Return value:  Size  Location     Type
 16782 ;;                  7   16[COMRAM] struct package_t
 16783 ;; Registers used:
 16784 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 16785 ;; Tracked objects:
 16786 ;;		On entry : 3F/0
 16787 ;;		On exit  : 3F/E
 16788 ;;		Unchanged: 0/0
 16789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16790 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16791 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16793 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16794 ;;Total ram usage:       14 bytes
 16795 ;; Hardware stack levels used: 1
 16796 ;; Hardware stack levels required when called: 5
 16797 ;; This function calls:
 16798 ;;		_EUSART1_Read
 16799 ;; This function is called by:
 16800 ;;		_main
 16801 ;; This function uses a non-reentrant model
 16802 ;;
 16803                           
 16804                           	psect	text54
 16805  0093B6                     __ptext54:
 16806                           	callstack 0
 16807  0093B6                     _read_package:
 16808                           	callstack 25
 16809                           
 16810                           ; BSR set to: 0
 16811                           ;eusartpackage.c: 22:         struct package_t package;;eusartpackage.c: 24:         if(
      +                          EUSART1_Read()!=0x0A){
 16812                           
 16813                           ; BSR set to: 1
 16814                           ;incstack = 0
 16815  0093B6  EC9E  F04A         	call	_EUSART1_Read	;wreg free
 16816  0093BA  0A0A               	xorlw	10
 16817  0093BC  B4D8               	btfsc	status,2,c
 16818  0093BE  D00C               	goto	l25070
 16819  0093C0                     u30790:
 16820                           
 16821                           ; BSR set to: 14
 16822                           ;eusartpackage.c: 25:             package.valid=0;
 16823  0093C0  0E00               	movlw	0
 16824  0093C2  6E1E               	movwf	(read_package@package+6)^0,c
 16825                           
 16826                           ; BSR set to: 14
 16827                           ;eusartpackage.c: 26:             return package;
 16828  0093C4  EE20  F018         	lfsr	2,read_package@package
 16829  0093C8  EE00  F011         	lfsr	0,?_read_package
 16830  0093CC  0E06               	movlw	6
 16831  0093CE                     u30801:
 16832  0093CE  CFDB FFEB          	movff	plusw2,plusw0
 16833  0093D2  06E8               	decf	wreg,f,c
 16834  0093D4  E2FC               	bc	u30801
 16835  0093D6  0012               	return	
 16836  0093D8                     l25070:
 16837                           
 16838                           ; BSR set to: 14
 16839                           ;eusartpackage.c: 29:             package.startbyte=0x0A;
 16840  0093D8  0E0A               	movlw	10
 16841  0093DA  6E1C               	movwf	(read_package@package+4)^0,c
 16842                           
 16843                           ; BSR set to: 14
 16844                           ;eusartpackage.c: 32:         package.functioncode=EUSART1_Read();
 16845  0093DC  EC9E  F04A         	call	_EUSART1_Read	;wreg free
 16846  0093E0  6E18               	movwf	read_package@package^0,c
 16847                           
 16848                           ; BSR set to: 14
 16849                           ;eusartpackage.c: 33:         package.address=EUSART1_Read();
 16850  0093E2  EC9E  F04A         	call	_EUSART1_Read	;wreg free
 16851  0093E6  6E19               	movwf	(read_package@package+1)^0,c
 16852                           
 16853                           ; BSR set to: 14
 16854                           ;eusartpackage.c: 34:         package.data.data8[0]=EUSART1_Read();
 16855  0093E8  EC9E  F04A         	call	_EUSART1_Read	;wreg free
 16856  0093EC  6E1A               	movwf	(read_package@package+2)^0,c
 16857                           
 16858                           ; BSR set to: 14
 16859                           ;eusartpackage.c: 35:         package.data.data8[1]=EUSART1_Read();
 16860  0093EE  EC9E  F04A         	call	_EUSART1_Read	;wreg free
 16861  0093F2  6E1B               	movwf	(read_package@package+3)^0,c
 16862                           
 16863                           ; BSR set to: 14
 16864                           ;eusartpackage.c: 38:         if(EUSART1_Read()!=0x0D){
 16865  0093F4  EC9E  F04A         	call	_EUSART1_Read	;wreg free
 16866  0093F8  0A0D               	xorlw	13
 16867  0093FA  A4D8               	btfss	status,2,c
 16868  0093FC  D7E1               	goto	u30790
 16869                           
 16870                           ; BSR set to: 14
 16871                           ;eusartpackage.c: 43:             package.endbyte=0x0D;
 16872  0093FE  0E0D               	movlw	13
 16873  009400  6E1D               	movwf	(read_package@package+5)^0,c
 16874                           
 16875                           ; BSR set to: 14
 16876                           ;eusartpackage.c: 46:         package.valid=1;
 16877  009402  0E01               	movlw	1
 16878  009404  D7DE               	goto	L76
 16879  009406                     __end_of_read_package:
 16880                           	callstack 0
 16881                           
 16882 ;; *************** function _EUSART1_Read *****************
 16883 ;; Defined at:
 16884 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 16885 ;; Parameters:    Size  Location     Type
 16886 ;;		None
 16887 ;; Auto vars:     Size  Location     Type
 16888 ;;  readValue       1   15[COMRAM] unsigned char 
 16889 ;; Return value:  Size  Location     Type
 16890 ;;                  1    wreg      unsigned char 
 16891 ;; Registers used:
 16892 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16893 ;; Tracked objects:
 16894 ;;		On entry : 31/0
 16895 ;;		On exit  : 3F/E
 16896 ;;		Unchanged: 0/0
 16897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16899 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16901 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16902 ;;Total ram usage:        1 bytes
 16903 ;; Hardware stack levels used: 1
 16904 ;; Hardware stack levels required when called: 4
 16905 ;; This function calls:
 16906 ;;		Nothing
 16907 ;; This function is called by:
 16908 ;;		_read_package
 16909 ;; This function uses a non-reentrant model
 16910 ;;
 16911                           
 16912                           	psect	text55
 16913  00953C                     __ptext55:
 16914                           	callstack 0
 16915  00953C                     _EUSART1_Read:
 16916                           	callstack 25
 16917                           
 16918                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 16919                           
 16920                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 16921                           
 16922                           ; BSR set to: 14
 16923                           ;incstack = 0
 16924  00953C  0100               	movlb	0	; () banked
 16925  00953E  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 16926  009540  B4D8               	btfsc	status,2,c
 16927  009542  D7FC               	goto	__ptext55
 16928                           
 16929                           ; BSR set to: 0
 16930                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 16931  009544  0E74               	movlw	low _eusart1RxStatusBuffer
 16932  009546  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 16933  009548  6ED9               	movwf	fsr2l,c
 16934  00954A  6ADA               	clrf	fsr2h,c
 16935  00954C  0E02               	movlw	high _eusart1RxStatusBuffer
 16936  00954E  22DA               	addwfc	fsr2h,f,c
 16937  009550  50DF               	movf	indf2,w,c
 16938  009552  0101               	movlb	1	; () banked
 16939  009554  6F9D               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 16940                           
 16941                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 16942  009556  0E7C               	movlw	low _eusart1RxBuffer
 16943  009558  0100               	movlb	0	; () banked
 16944  00955A  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 16945  00955C  6ED9               	movwf	fsr2l,c
 16946  00955E  6ADA               	clrf	fsr2h,c
 16947  009560  0E02               	movlw	high _eusart1RxBuffer
 16948  009562  22DA               	addwfc	fsr2h,f,c
 16949  009564  50DF               	movf	indf2,w,c
 16950  009566  6E10               	movwf	EUSART1_Read@readValue^0,c
 16951                           
 16952                           ; BSR set to: 0
 16953  009568  2B94               	incf	_eusart1RxTail& (0+255),f,b	;volatile
 16954                           
 16955                           ; BSR set to: 0
 16956                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 16957  00956A  0E07               	movlw	7
 16958  00956C  6594               	cpfsgt	_eusart1RxTail& (0+255),b
 16959  00956E  D002               	goto	l22862
 16960                           
 16961                           ; BSR set to: 0
 16962                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 16963  009570  0E00               	movlw	0
 16964  009572  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 16965  009574                     l22862:
 16966                           
 16967                           ; BSR set to: 0
 16968                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 16969  009574  010E               	movlb	14	; () banked
 16970  009576  9BC5               	bcf	197,5,b	;volatile
 16971                           
 16972                           ; BSR set to: 14
 16973                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 16974  009578  0100               	movlb	0	; () banked
 16975  00957A  0793               	decf	_eusart1RxCount& (0+255),f,b	;volatile
 16976                           
 16977                           ; BSR set to: 0
 16978                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 16979  00957C  010E               	movlb	14	; () banked
 16980  00957E  8BC5               	bsf	197,5,b	;volatile
 16981                           
 16982                           ; BSR set to: 14
 16983                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 16984  009580  5010               	movf	EUSART1_Read@readValue^0,w,c
 16985                           
 16986                           ; BSR set to: 14
 16987  009582  0012               	return		;funcret
 16988  009584                     __end_of_EUSART1_Read:
 16989                           	callstack 0
 16990                           
 16991 ;; *************** function _readRFButtons *****************
 16992 ;; Defined at:
 16993 ;;		line 231 in file "inputs_MC50.c"
 16994 ;; Parameters:    Size  Location     Type
 16995 ;;		None
 16996 ;; Auto vars:     Size  Location     Type
 16997 ;;		None
 16998 ;; Return value:  Size  Location     Type
 16999 ;;                  1    wreg      void 
 17000 ;; Registers used:
 17001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17002 ;; Tracked objects:
 17003 ;;		On entry : 3F/1
 17004 ;;		On exit  : 3E/0
 17005 ;;		Unchanged: 0/0
 17006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17011 ;;Total ram usage:        0 bytes
 17012 ;; Hardware stack levels used: 1
 17013 ;; Hardware stack levels required when called: 15
 17014 ;; This function calls:
 17015 ;;		_DecryptPacket_12BIT
 17016 ;;		_keeloqDecryptPacket
 17017 ;; This function is called by:
 17018 ;;		_main
 17019 ;; This function uses a non-reentrant model
 17020 ;;
 17021                           
 17022                           	psect	text56
 17023  006768                     __ptext56:
 17024                           	callstack 0
 17025  006768                     _readRFButtons:
 17026                           	callstack 15
 17027                           
 17028                           ; BSR set to: 1
 17029                           ;inputs_MC50.c: 232:     static unsigned char key1 = 0;;inputs_MC50.c: 233:     static u
      +                          int32_t serial = 0;;inputs_MC50.c: 234:     static uint16_t rollingCode= 0;;inputs_MC50.
      +                          c: 235:     static TypeCMD keyType = 0;;inputs_MC50.c: 236:     static TypeRemote_st typ
      +                          eRemote;;inputs_MC50.c: 241:     if(RFFull)
 17030                           
 17031                           ; BSR set to: 14
 17032                           ;incstack = 0
 17033  006768  0100               	movlb	0	; () banked
 17034  00676A  518B               	movf	_RFFull& (0+255),w,b	;volatile
 17035  00676C  B4D8               	btfsc	status,2,c
 17036  00676E  D0B9               	goto	l24878
 17037                           
 17038                           ; BSR set to: 0
 17039                           ;inputs_MC50.c: 242:     {;inputs_MC50.c: 244:          if(RFFull_12BIT==0)
 17040  006770  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
 17041  006772  A4D8               	btfss	status,2,c
 17042  006774  D00B               	goto	l24824
 17043                           
 17044                           ; BSR set to: 0
 17045                           ;inputs_MC50.c: 245:          {;inputs_MC50.c: 246:             keyType = keeloqDecryptP
      +                          acket(BufferRF,&classic_data);
 17046  006776  0EC8               	movlw	low _BufferRF
 17047  006778  6FE0               	movwf	keeloqDecryptPacket@data& (0+255),b
 17048  00677A  0E02               	movlw	high _BufferRF
 17049  00677C  6FE1               	movwf	(keeloqDecryptPacket@data+1)& (0+255),b
 17050  00677E  0E92               	movlw	low _classic_data
 17051  006780  6FE2               	movwf	keeloqDecryptPacket@classic_data& (0+255),b
 17052  006782  0E02               	movlw	high _classic_data
 17053  006784  6FE3               	movwf	(keeloqDecryptPacket@classic_data+1)& (0+255),b
 17054  006786  ECAF  F02E         	call	_keeloqDecryptPacket	;wreg free
 17055  00678A  D00A               	goto	L77
 17056  00678C                     l24824:
 17057                           
 17058                           ; BSR set to: 0
 17059                           ;inputs_MC50.c: 249:          {;inputs_MC50.c: 250:             keyType = DecryptPacket_
      +                          12BIT(BufferRF,&classic_data);
 17060  00678C  0EC8               	movlw	low _BufferRF
 17061  00678E  6FE0               	movwf	DecryptPacket_12BIT@data& (0+255),b
 17062  006790  0E02               	movlw	high _BufferRF
 17063  006792  6FE1               	movwf	(DecryptPacket_12BIT@data+1)& (0+255),b
 17064  006794  0E92               	movlw	low _classic_data
 17065  006796  6FE2               	movwf	DecryptPacket_12BIT@classic_data& (0+255),b
 17066  006798  0E02               	movlw	high _classic_data
 17067  00679A  6FE3               	movwf	(DecryptPacket_12BIT@classic_data+1)& (0+255),b
 17068  00679C  ECAF  F041         	call	_DecryptPacket_12BIT	;wreg free
 17069  0067A0                     L77:
 17070  0067A0  6F87               	movwf	readRFButtons@keyType& (0+255),b
 17071                           
 17072                           ; BSR set to: 0
 17073                           ;inputs_MC50.c: 254:         key1 = classic_data.fcode1;
 17074  0067A2  C29E  F088         	movff	_classic_data+12,readRFButtons@key1
 17075                           
 17076                           ; BSR set to: 0
 17077                           ;inputs_MC50.c: 255:         serial = classic_data.serialnumber;
 17078  0067A6  C296  F181         	movff	_classic_data+4,readRFButtons@serial
 17079  0067AA  C297  F182         	movff	_classic_data+5,readRFButtons@serial+1
 17080  0067AE  C298  F183         	movff	_classic_data+6,readRFButtons@serial+2
 17081  0067B2  C299  F184         	movff	_classic_data+7,readRFButtons@serial+3
 17082                           
 17083                           ; BSR set to: 0
 17084                           ;inputs_MC50.c: 256:         rollingCode = classic_data.sync;
 17085  0067B6  C29A  F187         	movff	_classic_data+8,readRFButtons@rollingCode
 17086  0067BA  C29B  F188         	movff	_classic_data+9,readRFButtons@rollingCode+1
 17087                           
 17088                           ; BSR set to: 0
 17089                           ;inputs_MC50.c: 257:         typeRemote = classic_data.type;
 17090  0067BE  C2A0  F19B         	movff	_classic_data+14,readRFButtons@typeRemote
 17091                           
 17092                           ; BSR set to: 0
 17093                           ;inputs_MC50.c: 270:         if (var_sys.LearningIsEnabled == YES){
 17094  0067C2  0101               	movlb	1	; () banked
 17095  0067C4  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 17096  0067C6  A4D8               	btfss	status,2,c
 17097  0067C8  D01E               	goto	l24846
 17098                           
 17099                           ; BSR set to: 1
 17100                           ;inputs_MC50.c: 272:              if (keyType==NoCMD || rfCMD.currentKey!=key1 || rfCMD.
      +                          currentSerial!=serial || keyType!=rfCMD.currentType)
 17101  0067CA  0100               	movlb	0	; () banked
 17102  0067CC  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17103  0067CE  B4D8               	btfsc	status,2,c
 17104  0067D0  D044               	goto	u30130
 17105                           
 17106                           ; BSR set to: 0
 17107  0067D2  5188               	movf	readRFButtons@key1& (0+255),w,b
 17108  0067D4  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17109  0067D6  A4D8               	btfss	status,2,c
 17110  0067D8  D040               	goto	u30130
 17111                           
 17112                           ; BSR set to: 0
 17113  0067DA  0101               	movlb	1	; () banked
 17114  0067DC  5181               	movf	readRFButtons@serial& (0+255),w,b
 17115  0067DE  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17116  0067E0  E13C               	bnz	l24858
 17117  0067E2  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17118  0067E4  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17119  0067E6  E139               	bnz	l24858
 17120  0067E8  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17121  0067EA  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17122  0067EC  E136               	bnz	l24858
 17123  0067EE  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17124  0067F0  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17125  0067F2  A4D8               	btfss	status,2,c
 17126  0067F4  D032               	goto	u30130
 17127                           
 17128                           ; BSR set to: 1
 17129  0067F6  0100               	movlb	0	; () banked
 17130  0067F8  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17131  0067FA  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17132  0067FC  A4D8               	btfss	status,2,c
 17133  0067FE  D02D               	goto	u30130
 17134  006800                     l1654:
 17135                           
 17136                           ;inputs_MC50.c: 274:                 rfCMD.timer=0;
 17137  006800  0E00               	movlw	0
 17138  006802  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17139                           
 17140                           ;inputs_MC50.c: 275:         }
 17141  006804  D038               	goto	l1657
 17142  006806                     l24846:
 17143                           
 17144                           ; BSR set to: 1
 17145  006806  0100               	movlb	0	; () banked
 17146  006808  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17147  00680A  B4D8               	btfsc	status,2,c
 17148  00680C  D026               	goto	u30130
 17149                           
 17150                           ; BSR set to: 0
 17151  00680E  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17152  006810  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17153  006812  B4D8               	btfsc	status,2,c
 17154  006814  D00F               	goto	u30110
 17155                           
 17156                           ; BSR set to: 0
 17157  006816  0101               	movlb	1	; () banked
 17158  006818  BFB3               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17159  00681A  D005               	goto	u30100
 17160  00681C  51B3               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17161  00681E  E10A               	bnz	l24854
 17162  006820  05B2               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17163  006822  B0D8               	btfsc	status,0,c
 17164  006824  D007               	goto	u30110
 17165  006826                     u30100:
 17166                           
 17167                           ; BSR set to: 1
 17168  006826  5187               	movf	readRFButtons@rollingCode& (0+255),w,b
 17169  006828  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17170  00682A  E117               	bnz	l24858
 17171  00682C  5188               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17172  00682E  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17173  006830  A4D8               	btfss	status,2,c
 17174  006832  D013               	goto	u30130
 17175  006834                     u30110:
 17176  006834                     l24854:
 17177  006834  0100               	movlb	0	; () banked
 17178  006836  5188               	movf	readRFButtons@key1& (0+255),w,b
 17179  006838  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17180  00683A  A4D8               	btfss	status,2,c
 17181  00683C  D00E               	goto	u30130
 17182                           
 17183                           ; BSR set to: 0
 17184  00683E  0101               	movlb	1	; () banked
 17185  006840  5181               	movf	readRFButtons@serial& (0+255),w,b
 17186  006842  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17187  006844  E10A               	bnz	u30130
 17188  006846  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17189  006848  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17190  00684A  E107               	bnz	u30130
 17191  00684C  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17192  00684E  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17193  006850  E104               	bnz	u30130
 17194  006852  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17195  006854  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17196  006856  B4D8               	btfsc	status,2,c
 17197  006858  D003               	goto	l24860
 17198  00685A                     u30130:
 17199  00685A                     l24858:
 17200                           
 17201                           ;inputs_MC50.c: 278:         {;inputs_MC50.c: 279:            rfCMD.processed=0;
 17202  00685A  0E00               	movlw	0
 17203  00685C  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 17204  00685E  D7D0               	goto	l1654
 17205  006860                     l24860:
 17206                           
 17207                           ; BSR set to: 1
 17208  006860  BFB3               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17209  006862  D005               	goto	u30140
 17210  006864  51B3               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17211  006866  E107               	bnz	l1657
 17212  006868  05B2               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17213  00686A  B0D8               	btfsc	status,0,c
 17214  00686C  D004               	goto	l1657
 17215  00686E                     u30140:
 17216                           
 17217                           ; BSR set to: 1
 17218  00686E  0E02               	movlw	2
 17219  006870  199B               	xorwf	readRFButtons@typeRemote& (0+255),w,b
 17220  006872  B4D8               	btfsc	status,2,c
 17221  006874  D7F2               	goto	u30130
 17222  006876                     l1657:
 17223                           
 17224                           ;inputs_MC50.c: 289:         ts_system.TimeLastCommand=( 500/50);
 17225  006876  0E00               	movlw	0
 17226  006878  0101               	movlb	1	; () banked
 17227  00687A  6FB3               	movwf	(_ts_system+21)& (0+255),b	;volatile
 17228  00687C  0E0A               	movlw	10
 17229  00687E  6FB2               	movwf	(_ts_system+20)& (0+255),b	;volatile
 17230                           
 17231                           ; BSR set to: 1
 17232                           ;inputs_MC50.c: 291:         rfCMD.currentType=keyType;
 17233  006880  C087  F03B         	movff	readRFButtons@keyType,_rfCMD	;volatile
 17234                           
 17235                           ;inputs_MC50.c: 292:         if
 17236  006884  503B               	movf	_rfCMD^0,w,c	;volatile
 17237  006886  B4D8               	btfsc	status,2,c
 17238  006888  D01A               	goto	u30190
 17239                           
 17240                           ; BSR set to: 1
 17241  00688A  0100               	movlb	0	; () banked
 17242  00688C  5188               	movf	readRFButtons@key1& (0+255),w,b
 17243  00688E  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17244  006890  A4D8               	btfss	status,2,c
 17245  006892  D015               	goto	u30190
 17246                           
 17247                           ; BSR set to: 0
 17248  006894  0101               	movlb	1	; () banked
 17249  006896  5181               	movf	readRFButtons@serial& (0+255),w,b
 17250  006898  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17251  00689A  E111               	bnz	l1667
 17252  00689C  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17253  00689E  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17254  0068A0  E10E               	bnz	l1667
 17255  0068A2  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17256  0068A4  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17257  0068A6  E10B               	bnz	l1667
 17258  0068A8  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17259  0068AA  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17260  0068AC  A4D8               	btfss	status,2,c
 17261  0068AE  D007               	goto	u30190
 17262                           
 17263                           ; BSR set to: 1
 17264  0068B0  5187               	movf	readRFButtons@rollingCode& (0+255),w,b
 17265  0068B2  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17266  0068B4  E104               	bnz	u30190
 17267  0068B6  5188               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17268  0068B8  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17269  0068BA  B4D8               	btfsc	status,2,c
 17270  0068BC  D00E               	goto	l24876
 17271  0068BE                     u30190:
 17272  0068BE                     l1667:
 17273                           
 17274                           ;inputs_MC50.c: 299:         {;inputs_MC50.c: 300:             rfCMD.currentKey=key1;
 17275  0068BE  C088  F03C         	movff	readRFButtons@key1,_rfCMD+1	;volatile
 17276                           
 17277                           ;inputs_MC50.c: 301:             rfCMD.currentSerial=serial;
 17278  0068C2  C181  F03D         	movff	readRFButtons@serial,_rfCMD+2	;volatile
 17279  0068C6  C182  F03E         	movff	readRFButtons@serial+1,_rfCMD+3	;volatile
 17280  0068CA  C183  F03F         	movff	readRFButtons@serial+2,_rfCMD+4	;volatile
 17281  0068CE  C184  F040         	movff	readRFButtons@serial+3,_rfCMD+5	;volatile
 17282                           
 17283                           ;inputs_MC50.c: 302:             rfCMD.currentPosMem=classic_data.positionMem;
 17284  0068D2  C2A1  F043         	movff	_classic_data+15,_rfCMD+8	;volatile
 17285                           
 17286                           ;inputs_MC50.c: 303:             rfCMD.timer=0;
 17287  0068D6  0E00               	movlw	0
 17288  0068D8  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17289  0068DA                     l24876:
 17290                           
 17291                           ;inputs_MC50.c: 305:         rfCMD.currentRolling=rollingCode;
 17292  0068DA  C187  F041         	movff	readRFButtons@rollingCode,_rfCMD+6	;volatile
 17293  0068DE  C188  F042         	movff	readRFButtons@rollingCode+1,_rfCMD+7	;volatile
 17294  0068E2                     l24878:
 17295                           
 17296                           ;inputs_MC50.c: 310:     if(rfCMD.processed == 1)
 17297  0068E2  0445               	decf	(_rfCMD+10)^0,w,c	;volatile
 17298  0068E4  A4D8               	btfss	status,2,c
 17299  0068E6  D003               	goto	l24882
 17300                           
 17301                           ;inputs_MC50.c: 311:     {;inputs_MC50.c: 312:        rfCMD.currentType = NoCMD;
 17302  0068E8  0E00               	movlw	0
 17303  0068EA  6E3B               	movwf	_rfCMD^0,c	;volatile
 17304                           
 17305                           ;inputs_MC50.c: 313:     }
 17306  0068EC  0012               	return	
 17307  0068EE                     l24882:
 17308  0068EE  503B               	movf	_rfCMD^0,w,c	;volatile
 17309  0068F0  B4D8               	btfsc	status,2,c
 17310  0068F2  0012               	return	
 17311                           
 17312                           ;inputs_MC50.c: 315:     {;inputs_MC50.c: 317:         if ( rfCMD.timer < 250 )
 17313  0068F4  0EFA               	movlw	250
 17314  0068F6  6044               	cpfslt	(_rfCMD+9)^0,c	;volatile
 17315  0068F8  0012               	return	
 17316                           
 17317                           ;inputs_MC50.c: 318:         {;inputs_MC50.c: 319:             rfCMD.timer++;
 17318  0068FA  2A44               	incf	(_rfCMD+9)^0,f,c	;volatile
 17319  0068FC  0012               	return		;funcret
 17320  0068FE                     __end_of_readRFButtons:
 17321                           	callstack 0
 17322                           
 17323 ;; *************** function _keeloqDecryptPacket *****************
 17324 ;; Defined at:
 17325 ;;		line 299 in file "keeloqDecrypt_MC50.c"
 17326 ;; Parameters:    Size  Location     Type
 17327 ;;  data            2    8[BANK0 ] PTR unsigned char 
 17328 ;;		 -> BufferRF(9), 
 17329 ;;  classic_data    2   10[BANK0 ] PTR struct .
 17330 ;;		 -> classic_data(16), 
 17331 ;; Auto vars:     Size  Location     Type
 17332 ;;  commandType     1   17[BANK0 ] enum E10539
 17333 ;;  hop_error       1   16[BANK0 ] enum E10730
 17334 ;; Return value:  Size  Location     Type
 17335 ;;                  1    wreg      enum E10539
 17336 ;; Registers used:
 17337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17338 ;; Tracked objects:
 17339 ;;		On entry : 3F/0
 17340 ;;		On exit  : 3F/0
 17341 ;;		Unchanged: 0/0
 17342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17343 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17344 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17345 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17346 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17347 ;;Total ram usage:       10 bytes
 17348 ;; Hardware stack levels used: 1
 17349 ;; Hardware stack levels required when called: 14
 17350 ;; This function calls:
 17351 ;;		_DecCHK
 17352 ;;		_HopCHK
 17353 ;;		_keeloq_classic_decrypt_packet
 17354 ;;		_memcpy
 17355 ;;		_validateRemoteSerialNumber
 17356 ;;		_verifyProgramingMode
 17357 ;; This function is called by:
 17358 ;;		_readRFButtons
 17359 ;; This function uses a non-reentrant model
 17360 ;;
 17361                           
 17362                           	psect	text57
 17363  005D5E                     __ptext57:
 17364                           	callstack 0
 17365  005D5E                     _keeloqDecryptPacket:
 17366                           	callstack 15
 17367                           
 17368                           ; BSR set to: 0
 17369                           ;keeloqDecrypt_MC50.c: 299: TypeCMD keeloqDecryptPacket (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 300: {;keeloqDecrypt_MC50.c: 301:     result_code_t h
      +                          op_error;;keeloqDecrypt_MC50.c: 302:     TypeCMD commandType;;keeloqDecrypt_MC50.c: 303:
      +                               memcpy(classic_data, data, 8);
 17370                           
 17371                           ;incstack = 0
 17372  005D5E  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,memcpy@d1
 17373  005D62  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,memcpy@d1+1
 17374  005D66  C0E0  F012         	movff	keeloqDecryptPacket@data,memcpy@s1
 17375  005D6A  C0E1  F013         	movff	keeloqDecryptPacket@data+1,memcpy@s1+1
 17376  005D6E  0E00               	movlw	0
 17377  005D70  6E15               	movwf	(memcpy@n+1)^0,c
 17378  005D72  0E08               	movlw	8
 17379  005D74  6E14               	movwf	memcpy@n^0,c
 17380  005D76  EC07  F04B         	call	_memcpy	;wreg free
 17381                           
 17382                           ;keeloqDecrypt_MC50.c: 304:     memcpy(&classic_data->sync, &classic_data->raw_data, 4);
 17383  005D7A  0E08               	movlw	8
 17384  005D7C  0100               	movlb	0	; () banked
 17385  005D7E  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17386  005D80  6E10               	movwf	memcpy@d1^0,c
 17387  005D82  0E00               	movlw	0
 17388  005D84  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17389  005D86  6E11               	movwf	(memcpy@d1+1)^0,c
 17390  005D88  C0E2  F012         	movff	keeloqDecryptPacket@classic_data,memcpy@s1
 17391  005D8C  C0E3  F013         	movff	keeloqDecryptPacket@classic_data+1,memcpy@s1+1
 17392  005D90  0E00               	movlw	0
 17393  005D92  6E15               	movwf	(memcpy@n+1)^0,c
 17394  005D94  0E04               	movlw	4
 17395  005D96  6E14               	movwf	memcpy@n^0,c
 17396  005D98  EC07  F04B         	call	_memcpy	;wreg free
 17397                           
 17398                           ;keeloqDecrypt_MC50.c: 305:     classic_data->fcode1 = *((uint8_t *) (&classic_data->ser
      +                          ialnumber) + 3) >> 4;
 17399  005D9C  0100               	movlb	0	; () banked
 17400  005D9E  EE20 F00C          	lfsr	2,12
 17401  005DA2  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17402  005DA4  26D9               	addwf	fsr2l,f,c
 17403  005DA6  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17404  005DA8  22DA               	addwfc	fsr2h,f,c
 17405  005DAA  EE10 F007          	lfsr	1,7
 17406  005DAE  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17407  005DB0  26E1               	addwf	fsr1l,f,c
 17408  005DB2  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17409  005DB4  22E2               	addwfc	fsr1h,f,c
 17410  005DB6  50E7               	movf	indf1,w,c
 17411  005DB8  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17412  005DBA  39E4               	swapf	??_keeloqDecryptPacket& (0+255),w,b
 17413  005DBC  0B0F               	andlw	15
 17414  005DBE  6EDF               	movwf	indf2,c
 17415                           
 17416                           ; BSR set to: 0
 17417                           ;keeloqDecrypt_MC50.c: 306:     commandType=verifyProgramingMode(classic_data);
 17418  005DC0  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,verifyProgramingMode@classic_data
 17419  005DC4  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,verifyProgramingMode@classic_data+1
 17420  005DC8  EC21  F04C         	call	_verifyProgramingMode	;wreg free
 17421  005DCC  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17422                           
 17423                           ; BSR set to: 0
 17424                           ;keeloqDecrypt_MC50.c: 308:     if(commandType==NoCMD)
 17425  005DCE  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17426  005DD0  A4D8               	btfss	status,2,c
 17427  005DD2  D019               	goto	l23186
 17428                           
 17429                           ; BSR set to: 0
 17430                           ;keeloqDecrypt_MC50.c: 309:     {;keeloqDecrypt_MC50.c: 310:         commandType=validat
      +                          eRemoteSerialNumber(classic_data->serialnumber,NO,&classic_data->positionMem);
 17431  005DD4  EE20 F004          	lfsr	2,4
 17432  005DD8  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17433  005DDA  26D9               	addwf	fsr2l,f,c
 17434  005DDC  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17435  005DDE  22DA               	addwfc	fsr2h,f,c
 17436  005DE0  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17437  005DE4  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17438  005DE8  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17439  005DEC  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17440  005DF0  0E00               	movlw	0
 17441  005DF2  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17442  005DF4  0E0F               	movlw	15
 17443  005DF6  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17444  005DF8  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17445  005DFA  0E00               	movlw	0
 17446  005DFC  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17447  005DFE  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17448  005E00  EC4C  F031         	call	_validateRemoteSerialNumber	;wreg free
 17449  005E04  D004               	goto	L78
 17450  005E06                     l23186:
 17451                           
 17452                           ; BSR set to: 0
 17453  005E06  51A6               	movf	(_var_sys_NVM+14)& (0+255),w,b	;volatile
 17454  005E08  A4D8               	btfss	status,2,c
 17455  005E0A  D002               	goto	l23190
 17456                           
 17457                           ; BSR set to: 0
 17458                           ;keeloqDecrypt_MC50.c: 313:     {;keeloqDecrypt_MC50.c: 314:         commandType=NoCMD;
 17459  005E0C  0E00               	movlw	0
 17460  005E0E                     L78:
 17461  005E0E  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17462  005E10                     l23190:
 17463                           
 17464                           ; BSR set to: 0
 17465                           ;keeloqDecrypt_MC50.c: 316:     classic_data->serialnumber = classic_data->serialnumber 
      +                          & 0x0FFFFFFF;
 17466  005E10  EE20 F004          	lfsr	2,4
 17467  005E14  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17468  005E16  26D9               	addwf	fsr2l,f,c
 17469  005E18  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17470  005E1A  22DA               	addwfc	fsr2h,f,c
 17471  005E1C  0EFF               	movlw	255
 17472  005E1E  14DE               	andwf	postinc2,w,c
 17473  005E20  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17474  005E22  0EFF               	movlw	255
 17475  005E24  14DE               	andwf	postinc2,w,c
 17476  005E26  6FE5               	movwf	(??_keeloqDecryptPacket+1)& (0+255),b
 17477  005E28  0EFF               	movlw	255
 17478  005E2A  14DE               	andwf	postinc2,w,c
 17479  005E2C  6FE6               	movwf	(??_keeloqDecryptPacket+2)& (0+255),b
 17480  005E2E  0E0F               	movlw	15
 17481  005E30  14DE               	andwf	postinc2,w,c
 17482  005E32  6FE7               	movwf	(??_keeloqDecryptPacket+3)& (0+255),b
 17483  005E34  EE20 F004          	lfsr	2,4
 17484  005E38  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17485  005E3A  26D9               	addwf	fsr2l,f,c
 17486  005E3C  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17487  005E3E  22DA               	addwfc	fsr2h,f,c
 17488  005E40  C0E4  FFDE         	movff	??_keeloqDecryptPacket,postinc2
 17489  005E44  C0E5  FFDE         	movff	??_keeloqDecryptPacket+1,postinc2
 17490  005E48  C0E6  FFDE         	movff	??_keeloqDecryptPacket+2,postinc2
 17491  005E4C  C0E7  FFDE         	movff	??_keeloqDecryptPacket+3,postinc2
 17492                           
 17493                           ; BSR set to: 0
 17494                           ;keeloqDecrypt_MC50.c: 318:     keeloq_classic_decrypt_packet(classic_data);
 17495  005E50  C0E2  F038         	movff	keeloqDecryptPacket@classic_data,keeloq_classic_decrypt_packet@data
 17496  005E54  C0E3  F039         	movff	keeloqDecryptPacket@classic_data+1,keeloq_classic_decrypt_packet@data+1
 17497  005E58  ECDB  F048         	call	_keeloq_classic_decrypt_packet	;wreg free
 17498                           
 17499                           ; BSR set to: 0
 17500                           ;keeloqDecrypt_MC50.c: 320:     if(commandType==NoCMD )
 17501  005E5C  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17502  005E5E  A4D8               	btfss	status,2,c
 17503  005E60  D01B               	goto	l23208
 17504                           
 17505                           ; BSR set to: 0
 17506                           ;keeloqDecrypt_MC50.c: 321:     {;keeloqDecrypt_MC50.c: 323:         if (DecCHK(classic_
      +                          data) == 0) {
 17507  005E62  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17508  005E66  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17509  005E6A  EC3B  F04C         	call	_DecCHK	;wreg free
 17510  005E6E  0900               	iorlw	0
 17511  005E70  A4D8               	btfss	status,2,c
 17512  005E72  D008               	goto	l23200
 17513                           
 17514                           ; BSR set to: 0
 17515                           ;keeloqDecrypt_MC50.c: 324:             classic_data->type=Keeloq_NoRollingCode;
 17516  005E74  EE20 F00E          	lfsr	2,14
 17517  005E78  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17518  005E7A  26D9               	addwf	fsr2l,f,c
 17519  005E7C  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17520  005E7E  22DA               	addwfc	fsr2h,f,c
 17521  005E80  0E01               	movlw	1
 17522  005E82  D007               	goto	L79
 17523  005E84                     l23200:
 17524                           
 17525                           ; BSR set to: 0
 17526                           ;keeloqDecrypt_MC50.c: 328:         {;keeloqDecrypt_MC50.c: 329:             classic_dat
      +                          a->type=Keeloq_RollingCode;
 17527  005E84  EE20 F00E          	lfsr	2,14
 17528  005E88  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17529  005E8A  26D9               	addwf	fsr2l,f,c
 17530  005E8C  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17531  005E8E  22DA               	addwfc	fsr2h,f,c
 17532  005E90  0E00               	movlw	0
 17533  005E92                     L79:
 17534  005E92  6EDF               	movwf	indf2,c
 17535  005E94                     l23202:
 17536                           
 17537                           ; BSR set to: 0
 17538                           ;keeloqDecrypt_MC50.c: 331:         return NoCMD;
 17539  005E94  0E00               	movlw	0
 17540  005E96  0012               	return	
 17541  005E98                     l23208:
 17542                           
 17543                           ; BSR set to: 0
 17544  005E98  0E06               	movlw	6
 17545  005E9A  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17546  005E9C  B4D8               	btfsc	status,2,c
 17547  005E9E  D004               	goto	u26870
 17548                           
 17549                           ; BSR set to: 0
 17550  005EA0  0E05               	movlw	5
 17551  005EA2  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17552  005EA4  A4D8               	btfss	status,2,c
 17553  005EA6  D01B               	goto	l23218
 17554  005EA8                     u26870:
 17555                           
 17556                           ; BSR set to: 0
 17557                           ;keeloqDecrypt_MC50.c: 334:     {;keeloqDecrypt_MC50.c: 335:         if(validateRemoteSe
      +                          rialNumber(classic_data->serialnumber,YES,&classic_data->positionMem)==NoCMD)
 17558  005EA8  EE20 F004          	lfsr	2,4
 17559  005EAC  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17560  005EAE  26D9               	addwf	fsr2l,f,c
 17561  005EB0  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17562  005EB2  22DA               	addwfc	fsr2h,f,c
 17563  005EB4  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17564  005EB8  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17565  005EBC  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17566  005EC0  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17567  005EC4  0E01               	movlw	1
 17568  005EC6  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17569  005EC8  0E0F               	movlw	15
 17570  005ECA  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17571  005ECC  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17572  005ECE  0E00               	movlw	0
 17573  005ED0  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17574  005ED2  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17575  005ED4  EC4C  F031         	call	_validateRemoteSerialNumber	;wreg free
 17576  005ED8  0900               	iorlw	0
 17577  005EDA  B4D8               	btfsc	status,2,c
 17578  005EDC  D7DB               	goto	l23202
 17579  005EDE                     l23218:
 17580                           
 17581                           ; BSR set to: 0
 17582                           ;keeloqDecrypt_MC50.c: 344:     if (DecCHK(classic_data) == 0)
 17583  005EDE  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17584  005EE2  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17585  005EE6  EC3B  F04C         	call	_DecCHK	;wreg free
 17586  005EEA  0900               	iorlw	0
 17587  005EEC  A4D8               	btfss	status,2,c
 17588  005EEE  D00D               	goto	l23234
 17589                           
 17590                           ; BSR set to: 0
 17591                           ;keeloqDecrypt_MC50.c: 345:     {;keeloqDecrypt_MC50.c: 346:         if(var_sys_NVM.Only
      +                          RollingCode==YES) {
 17592  005EF0  05BE               	decf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
 17593  005EF2  B4D8               	btfsc	status,2,c
 17594  005EF4  D7CF               	goto	l23202
 17595                           
 17596                           ; BSR set to: 0
 17597                           ;keeloqDecrypt_MC50.c: 352:         {;keeloqDecrypt_MC50.c: 353:             classic_dat
      +                          a->type=Keeloq_NoRollingCode;
 17598  005EF6  EE20 F00E          	lfsr	2,14
 17599  005EFA  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17600  005EFC  26D9               	addwf	fsr2l,f,c
 17601  005EFE  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17602  005F00  22DA               	addwfc	fsr2h,f,c
 17603  005F02  0E01               	movlw	1
 17604  005F04  6EDF               	movwf	indf2,c
 17605                           
 17606                           ; BSR set to: 0
 17607                           ;keeloqDecrypt_MC50.c: 354:             return commandType;
 17608  005F06  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17609  005F08  0012               	return	
 17610  005F0A                     l23234:
 17611                           
 17612                           ; BSR set to: 0
 17613                           ;keeloqDecrypt_MC50.c: 359:     hop_error = HopCHK(classic_data);
 17614  005F0A  C0E2  F024         	movff	keeloqDecryptPacket@classic_data,HopCHK@data
 17615  005F0E  C0E3  F025         	movff	keeloqDecryptPacket@classic_data+1,HopCHK@data+1
 17616  005F12  EC81  F042         	call	_HopCHK	;wreg free
 17617  005F16  0100               	movlb	0	; () banked
 17618  005F18  6FE8               	movwf	keeloqDecryptPacket@hop_error& (0+255),b
 17619                           
 17620                           ; BSR set to: 0
 17621                           ;keeloqDecrypt_MC50.c: 360:     if (hop_error != VALID_PACKET) {
 17622  005F1A  05E8               	decf	keeloqDecryptPacket@hop_error& (0+255),w,b
 17623  005F1C  A4D8               	btfss	status,2,c
 17624  005F1E  D7BA               	goto	l23202
 17625                           
 17626                           ; BSR set to: 0
 17627                           ;keeloqDecrypt_MC50.c: 364:     classic_data->type=Keeloq_RollingCode;
 17628  005F20  EE20 F00E          	lfsr	2,14
 17629  005F24  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17630  005F26  26D9               	addwf	fsr2l,f,c
 17631  005F28  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17632  005F2A  22DA               	addwfc	fsr2h,f,c
 17633  005F2C  0E00               	movlw	0
 17634  005F2E  D7EA               	goto	L80
 17635  005F30                     __end_of_keeloqDecryptPacket:
 17636                           	callstack 0
 17637                           
 17638 ;; *************** function _verifyProgramingMode *****************
 17639 ;; Defined at:
 17640 ;;		line 401 in file "keeloqDecrypt_MC50.c"
 17641 ;; Parameters:    Size  Location     Type
 17642 ;;  classic_data    2   15[COMRAM] PTR struct .
 17643 ;;		 -> classic_data(16), 
 17644 ;; Auto vars:     Size  Location     Type
 17645 ;;		None
 17646 ;; Return value:  Size  Location     Type
 17647 ;;                  1    wreg      enum E10539
 17648 ;; Registers used:
 17649 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17650 ;; Tracked objects:
 17651 ;;		On entry : 3F/0
 17652 ;;		On exit  : 3F/0
 17653 ;;		Unchanged: 3F/0
 17654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17655 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17657 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17658 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17659 ;;Total ram usage:        3 bytes
 17660 ;; Hardware stack levels used: 1
 17661 ;; Hardware stack levels required when called: 4
 17662 ;; This function calls:
 17663 ;;		Nothing
 17664 ;; This function is called by:
 17665 ;;		_keeloqDecryptPacket
 17666 ;; This function uses a non-reentrant model
 17667 ;;
 17668                           
 17669                           	psect	text58
 17670  009842                     __ptext58:
 17671                           	callstack 0
 17672  009842                     _verifyProgramingMode:
 17673                           	callstack 24
 17674                           
 17675                           ; BSR set to: 0
 17676                           ;keeloqDecrypt_MC50.c: 401: TypeCMD verifyProgramingMode(classic_encoder_t* classic_data
      +                          );keeloqDecrypt_MC50.c: 402: {;keeloqDecrypt_MC50.c: 403:     if (classic_data->fcode1==
      +                          0x0A)
 17677                           
 17678                           ; BSR set to: 0
 17679                           ;incstack = 0
 17680  009842  EE20 F00C          	lfsr	2,12
 17681  009846  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17682  009848  26D9               	addwf	fsr2l,f,c
 17683  00984A  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17684  00984C  22DA               	addwfc	fsr2h,f,c
 17685  00984E  0E0A               	movlw	10
 17686  009850  18DE               	xorwf	postinc2,w,c
 17687  009852  A4D8               	btfss	status,2,c
 17688  009854  D002               	goto	l21708
 17689                           
 17690                           ; BSR set to: 0
 17691                           ;keeloqDecrypt_MC50.c: 404:     {;keeloqDecrypt_MC50.c: 405:         return TypeProgramm
      +                          ingModeFull;
 17692  009856  0E06               	movlw	6
 17693  009858  0012               	return	
 17694  00985A                     l21708:
 17695                           
 17696                           ; BSR set to: 0
 17697  00985A  EE20 F00C          	lfsr	2,12
 17698  00985E  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17699  009860  26D9               	addwf	fsr2l,f,c
 17700  009862  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17701  009864  22DA               	addwfc	fsr2h,f,c
 17702  009866  0E05               	movlw	5
 17703  009868  18DE               	xorwf	postinc2,w,c
 17704  00986A  A4D8               	btfss	status,2,c
 17705  00986C  D002               	goto	l21716
 17706                           
 17707                           ; BSR set to: 0
 17708                           ;keeloqDecrypt_MC50.c: 408:     {;keeloqDecrypt_MC50.c: 409:         return TypeProgramm
      +                          ingModeWalk;
 17709  00986E  0E05               	movlw	5
 17710  009870  0012               	return	
 17711  009872                     l21716:
 17712                           
 17713                           ; BSR set to: 0
 17714                           ;keeloqDecrypt_MC50.c: 412:     {;keeloqDecrypt_MC50.c: 413:         return NoCMD;
 17715  009872  0E00               	movlw	0
 17716                           
 17717                           ; BSR set to: 0
 17718  009874  0012               	return		;funcret
 17719  009876                     __end_of_verifyProgramingMode:
 17720                           	callstack 0
 17721                           
 17722 ;; *************** function _keeloq_classic_decrypt_packet *****************
 17723 ;; Defined at:
 17724 ;;		line 390 in file "keeloqDecrypt_MC50.c"
 17725 ;; Parameters:    Size  Location     Type
 17726 ;;  data            2   55[COMRAM] PTR struct .
 17727 ;;		 -> classic_data(16), 
 17728 ;; Auto vars:     Size  Location     Type
 17729 ;;		None
 17730 ;; Return value:  Size  Location     Type
 17731 ;;                  1    wreg      void 
 17732 ;; Registers used:
 17733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17734 ;; Tracked objects:
 17735 ;;		On entry : 3F/0
 17736 ;;		On exit  : 3F/0
 17737 ;;		Unchanged: 0/0
 17738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17741 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17742 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17743 ;;Total ram usage:        5 bytes
 17744 ;; Hardware stack levels used: 1
 17745 ;; Hardware stack levels required when called: 7
 17746 ;; This function calls:
 17747 ;;		_Decrypt
 17748 ;;		_NormalKeyGen
 17749 ;; This function is called by:
 17750 ;;		_keeloqDecryptPacket
 17751 ;; This function uses a non-reentrant model
 17752 ;;
 17753                           
 17754                           	psect	text59
 17755  0091B6                     __ptext59:
 17756                           	callstack 0
 17757  0091B6                     _keeloq_classic_decrypt_packet:
 17758                           	callstack 21
 17759                           
 17760                           ; BSR set to: 0
 17761                           ;keeloqDecrypt_MC50.c: 393:     NormalKeyGen(&data->serialnumber);
 17762                           
 17763                           ; BSR set to: 0
 17764                           ;incstack = 0
 17765  0091B6  0E04               	movlw	4
 17766  0091B8  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17767  0091BA  6E26               	movwf	NormalKeyGen@serial^0,c
 17768  0091BC  0E00               	movlw	0
 17769  0091BE  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17770  0091C0  6E27               	movwf	(NormalKeyGen@serial+1)^0,c
 17771  0091C2  EC45  F03A         	call	_NormalKeyGen	;wreg free
 17772                           
 17773                           ;keeloqDecrypt_MC50.c: 395:     Decrypt((uint8_t*) & data->sync);
 17774  0091C6  0E08               	movlw	8
 17775  0091C8  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17776  0091CA  6E1B               	movwf	Decrypt@packet^0,c
 17777  0091CC  0E00               	movlw	0
 17778  0091CE  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17779  0091D0  6E1C               	movwf	(Decrypt@packet+1)^0,c
 17780  0091D2  ECAC  F03D         	call	_Decrypt	;wreg free
 17781                           
 17782                           ;keeloqDecrypt_MC50.c: 398:     data->fcode2 = (data->disc >> 12) & 0x0F;
 17783  0091D6  EE20 F00D          	lfsr	2,13
 17784  0091DA  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17785  0091DC  26D9               	addwf	fsr2l,f,c
 17786  0091DE  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17787  0091E0  22DA               	addwfc	fsr2h,f,c
 17788  0091E2  EE10 F00A          	lfsr	1,10
 17789  0091E6  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17790  0091E8  26E1               	addwf	fsr1l,f,c
 17791  0091EA  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17792  0091EC  22E2               	addwfc	fsr1h,f,c
 17793  0091EE  CFE6 F0D8          	movff	postinc1,??_keeloq_classic_decrypt_packet
 17794  0091F2  CFE5 F0D9          	movff	postdec1,??_keeloq_classic_decrypt_packet+1
 17795  0091F6  0E0C               	movlw	12
 17796  0091F8  0100               	movlb	0	; () banked
 17797  0091FA  6FDA               	movwf	(??_keeloq_classic_decrypt_packet+2)& (0+255),b
 17798  0091FC                     u25085:
 17799  0091FC  90D8               	bcf	status,0,c
 17800  0091FE  33D9               	rrcf	(??_keeloq_classic_decrypt_packet+1)& (0+255),f,b
 17801  009200  33D8               	rrcf	??_keeloq_classic_decrypt_packet& (0+255),f,b
 17802  009202  2FDA               	decfsz	(??_keeloq_classic_decrypt_packet+2)& (0+255),f,b
 17803  009204  D7FB               	goto	u25085
 17804  009206  51D8               	movf	??_keeloq_classic_decrypt_packet& (0+255),w,b
 17805  009208  0B0F               	andlw	15
 17806  00920A  6EDF               	movwf	indf2,c
 17807                           
 17808                           ; BSR set to: 0
 17809  00920C  0012               	return		;funcret
 17810  00920E                     __end_of_keeloq_classic_decrypt_packet:
 17811                           	callstack 0
 17812                           
 17813 ;; *************** function _NormalKeyGen *****************
 17814 ;; Defined at:
 17815 ;;		line 87 in file "keeloqDecrypt_MC50.c"
 17816 ;; Parameters:    Size  Location     Type
 17817 ;;  serial          2   37[COMRAM] PTR unsigned long 
 17818 ;;		 -> classic_data(16), 
 17819 ;; Auto vars:     Size  Location     Type
 17820 ;;  Buffer          8   47[COMRAM] unsigned char [8]
 17821 ;;  SKEYtemp        4   43[COMRAM] unsigned char [4]
 17822 ;;  HOPtemp         4   39[COMRAM] unsigned char [4]
 17823 ;; Return value:  Size  Location     Type
 17824 ;;                  1    wreg      void 
 17825 ;; Registers used:
 17826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17827 ;; Tracked objects:
 17828 ;;		On entry : 3F/0
 17829 ;;		On exit  : 0/0
 17830 ;;		Unchanged: 0/0
 17831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17833 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17835 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17836 ;;Total ram usage:       18 bytes
 17837 ;; Hardware stack levels used: 1
 17838 ;; Hardware stack levels required when called: 6
 17839 ;; This function calls:
 17840 ;;		_Decrypt
 17841 ;;		_LoadManufCode
 17842 ;;		_memcpy
 17843 ;; This function is called by:
 17844 ;;		_keeloq_classic_decrypt_packet
 17845 ;; This function uses a non-reentrant model
 17846 ;;
 17847                           
 17848                           	psect	text60
 17849  00748A                     __ptext60:
 17850                           	callstack 0
 17851  00748A                     _NormalKeyGen:
 17852                           	callstack 21
 17853                           
 17854                           ; BSR set to: 0
 17855                           ;keeloqDecrypt_MC50.c: 88:     static uint8_t SEED[4];;keeloqDecrypt_MC50.c: 89:     uin
      +                          t8_t Buffer[8];;keeloqDecrypt_MC50.c: 90:     uint8_t HOPtemp[4];;keeloqDecrypt_MC50.c: 
      +                          91:     uint8_t SKEYtemp[4];;keeloqDecrypt_MC50.c: 93:     memcpy(&Buffer[4], serial, 4)
      +                          ;
 17856                           
 17857                           ; BSR set to: 0
 17858                           ;incstack = 0
 17859  00748A  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 17860  00748C  6E10               	movwf	memcpy@d1^0,c
 17861  00748E  6A11               	clrf	(memcpy@d1+1)^0,c
 17862  007490  C026  F012         	movff	NormalKeyGen@serial,memcpy@s1
 17863  007494  C027  F013         	movff	NormalKeyGen@serial+1,memcpy@s1+1
 17864  007498  0E00               	movlw	0
 17865  00749A  6E15               	movwf	(memcpy@n+1)^0,c
 17866  00749C  0E04               	movlw	4
 17867  00749E  6E14               	movwf	memcpy@n^0,c
 17868  0074A0  EC07  F04B         	call	_memcpy	;wreg free
 17869                           
 17870                           ;keeloqDecrypt_MC50.c: 95:     memcpy(HOPtemp, Buffer, 4);
 17871  0074A4  0E28               	movlw	low NormalKeyGen@HOPtemp
 17872  0074A6  6E10               	movwf	memcpy@d1^0,c
 17873  0074A8  6A11               	clrf	(memcpy@d1+1)^0,c
 17874  0074AA  0E30               	movlw	low NormalKeyGen@Buffer
 17875  0074AC  6E12               	movwf	memcpy@s1^0,c
 17876  0074AE  6A13               	clrf	(memcpy@s1+1)^0,c
 17877  0074B0  0E00               	movlw	0
 17878  0074B2  6E15               	movwf	(memcpy@n+1)^0,c
 17879  0074B4  0E04               	movlw	4
 17880  0074B6  6E14               	movwf	memcpy@n^0,c
 17881  0074B8  EC07  F04B         	call	_memcpy	;wreg free
 17882                           
 17883                           ;keeloqDecrypt_MC50.c: 97:     memcpy(SEED, &Buffer[4], 4);
 17884  0074BC  0ED9               	movlw	low NormalKeyGen@SEED
 17885  0074BE  6E10               	movwf	memcpy@d1^0,c
 17886  0074C0  0E02               	movlw	high NormalKeyGen@SEED
 17887  0074C2  6E11               	movwf	(memcpy@d1+1)^0,c
 17888  0074C4  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 17889  0074C6  6E12               	movwf	memcpy@s1^0,c
 17890  0074C8  6A13               	clrf	(memcpy@s1+1)^0,c
 17891  0074CA  0E00               	movlw	0
 17892  0074CC  6E15               	movwf	(memcpy@n+1)^0,c
 17893  0074CE  0E04               	movlw	4
 17894  0074D0  6E14               	movwf	memcpy@n^0,c
 17895  0074D2  EC07  F04B         	call	_memcpy	;wreg free
 17896                           
 17897                           ;keeloqDecrypt_MC50.c: 98:     SEED[3] &= 0x0f;
 17898  0074D6  0E0F               	movlw	15
 17899  0074D8  0102               	movlb	2	; () banked
 17900  0074DA  17DC               	andwf	(NormalKeyGen@SEED+3)& (0+255),f,b
 17901                           
 17902                           ; BSR set to: 2
 17903                           ;keeloqDecrypt_MC50.c: 101:     memcpy(Buffer, SEED, 4);
 17904  0074DC  0E30               	movlw	low NormalKeyGen@Buffer
 17905  0074DE  6E10               	movwf	memcpy@d1^0,c
 17906  0074E0  6A11               	clrf	(memcpy@d1+1)^0,c
 17907  0074E2  0ED9               	movlw	low NormalKeyGen@SEED
 17908  0074E4  6E12               	movwf	memcpy@s1^0,c
 17909  0074E6  0E02               	movlw	high NormalKeyGen@SEED
 17910  0074E8  6E13               	movwf	(memcpy@s1+1)^0,c
 17911  0074EA  0E00               	movlw	0
 17912  0074EC  6E15               	movwf	(memcpy@n+1)^0,c
 17913  0074EE  0E04               	movlw	4
 17914  0074F0  6E14               	movwf	memcpy@n^0,c
 17915  0074F2  EC07  F04B         	call	_memcpy	;wreg free
 17916                           
 17917                           ;keeloqDecrypt_MC50.c: 102:     Buffer[3] |= 0x20;
 17918  0074F6  8A33               	bsf	(NormalKeyGen@Buffer+3)^0,5,c
 17919                           
 17920                           ;keeloqDecrypt_MC50.c: 103:     LoadManufCode();
 17921  0074F8  EC6C  F04E         	call	_LoadManufCode	;wreg free
 17922                           
 17923                           ; BSR set to: 2
 17924                           ;keeloqDecrypt_MC50.c: 104:     Decrypt(Buffer);
 17925  0074FC  0E30               	movlw	low NormalKeyGen@Buffer
 17926  0074FE  6E1B               	movwf	Decrypt@packet^0,c
 17927  007500  6A1C               	clrf	(Decrypt@packet+1)^0,c
 17928  007502  ECAC  F03D         	call	_Decrypt	;wreg free
 17929                           
 17930                           ;keeloqDecrypt_MC50.c: 105:     memcpy(SKEYtemp, Buffer, 4);
 17931  007506  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 17932  007508  6E10               	movwf	memcpy@d1^0,c
 17933  00750A  6A11               	clrf	(memcpy@d1+1)^0,c
 17934  00750C  0E30               	movlw	low NormalKeyGen@Buffer
 17935  00750E  6E12               	movwf	memcpy@s1^0,c
 17936  007510  6A13               	clrf	(memcpy@s1+1)^0,c
 17937  007512  0E00               	movlw	0
 17938  007514  6E15               	movwf	(memcpy@n+1)^0,c
 17939  007516  0E04               	movlw	4
 17940  007518  6E14               	movwf	memcpy@n^0,c
 17941  00751A  EC07  F04B         	call	_memcpy	;wreg free
 17942                           
 17943                           ;keeloqDecrypt_MC50.c: 108:     memcpy(Buffer, SEED, 4);
 17944  00751E  0E30               	movlw	low NormalKeyGen@Buffer
 17945  007520  6E10               	movwf	memcpy@d1^0,c
 17946  007522  6A11               	clrf	(memcpy@d1+1)^0,c
 17947  007524  0ED9               	movlw	low NormalKeyGen@SEED
 17948  007526  6E12               	movwf	memcpy@s1^0,c
 17949  007528  0E02               	movlw	high NormalKeyGen@SEED
 17950  00752A  6E13               	movwf	(memcpy@s1+1)^0,c
 17951  00752C  0E00               	movlw	0
 17952  00752E  6E15               	movwf	(memcpy@n+1)^0,c
 17953  007530  0E04               	movlw	4
 17954  007532  6E14               	movwf	memcpy@n^0,c
 17955  007534  EC07  F04B         	call	_memcpy	;wreg free
 17956                           
 17957                           ;keeloqDecrypt_MC50.c: 109:     Buffer[3] |= 0x60;
 17958  007538  0E60               	movlw	96
 17959  00753A  1233               	iorwf	(NormalKeyGen@Buffer+3)^0,f,c
 17960                           
 17961                           ;keeloqDecrypt_MC50.c: 110:     LoadManufCode();
 17962  00753C  EC6C  F04E         	call	_LoadManufCode	;wreg free
 17963                           
 17964                           ; BSR set to: 2
 17965                           ;keeloqDecrypt_MC50.c: 111:     Decrypt(Buffer);
 17966  007540  0E30               	movlw	low NormalKeyGen@Buffer
 17967  007542  6E1B               	movwf	Decrypt@packet^0,c
 17968  007544  6A1C               	clrf	(Decrypt@packet+1)^0,c
 17969  007546  ECAC  F03D         	call	_Decrypt	;wreg free
 17970                           
 17971                           ;keeloqDecrypt_MC50.c: 112:     memcpy(&DKEY[4], Buffer, 4);
 17972  00754A  0ED5               	movlw	low (_DKEY+4)
 17973  00754C  6E10               	movwf	memcpy@d1^0,c
 17974  00754E  0E02               	movlw	high (_DKEY+4)
 17975  007550  6E11               	movwf	(memcpy@d1+1)^0,c
 17976  007552  0E30               	movlw	low NormalKeyGen@Buffer
 17977  007554  6E12               	movwf	memcpy@s1^0,c
 17978  007556  6A13               	clrf	(memcpy@s1+1)^0,c
 17979  007558  0E00               	movlw	0
 17980  00755A  6E15               	movwf	(memcpy@n+1)^0,c
 17981  00755C  0E04               	movlw	4
 17982  00755E  6E14               	movwf	memcpy@n^0,c
 17983  007560  EC07  F04B         	call	_memcpy	;wreg free
 17984                           
 17985                           ;keeloqDecrypt_MC50.c: 113:     memcpy(DKEY, SKEYtemp, 4);
 17986  007564  0ED1               	movlw	low _DKEY
 17987  007566  6E10               	movwf	memcpy@d1^0,c
 17988  007568  0E02               	movlw	high _DKEY
 17989  00756A  6E11               	movwf	(memcpy@d1+1)^0,c
 17990  00756C  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 17991  00756E  6E12               	movwf	memcpy@s1^0,c
 17992  007570  6A13               	clrf	(memcpy@s1+1)^0,c
 17993  007572  0E00               	movlw	0
 17994  007574  6E15               	movwf	(memcpy@n+1)^0,c
 17995  007576  0E04               	movlw	4
 17996  007578  6E14               	movwf	memcpy@n^0,c
 17997  00757A  EC07  F04B         	call	_memcpy	;wreg free
 17998                           
 17999                           ;keeloqDecrypt_MC50.c: 116:     memcpy(Buffer, HOPtemp, 4);
 18000  00757E  0E30               	movlw	low NormalKeyGen@Buffer
 18001  007580  6E10               	movwf	memcpy@d1^0,c
 18002  007582  6A11               	clrf	(memcpy@d1+1)^0,c
 18003  007584  0E28               	movlw	low NormalKeyGen@HOPtemp
 18004  007586  6E12               	movwf	memcpy@s1^0,c
 18005  007588  6A13               	clrf	(memcpy@s1+1)^0,c
 18006  00758A  0E00               	movlw	0
 18007  00758C  6E15               	movwf	(memcpy@n+1)^0,c
 18008  00758E  0E04               	movlw	4
 18009  007590  6E14               	movwf	memcpy@n^0,c
 18010  007592  EC07  F04B         	call	_memcpy	;wreg free
 18011  007596  0012               	return		;funcret
 18012  007598                     __end_of_NormalKeyGen:
 18013                           	callstack 0
 18014                           
 18015 ;; *************** function _LoadManufCode *****************
 18016 ;; Defined at:
 18017 ;;		line 63 in file "keeloqDecrypt_MC50.c"
 18018 ;; Parameters:    Size  Location     Type
 18019 ;;		None
 18020 ;; Auto vars:     Size  Location     Type
 18021 ;;		None
 18022 ;; Return value:  Size  Location     Type
 18023 ;;                  1    wreg      void 
 18024 ;; Registers used:
 18025 ;;		wreg, status,2
 18026 ;; Tracked objects:
 18027 ;;		On entry : 0/2
 18028 ;;		On exit  : 3F/2
 18029 ;;		Unchanged: 0/0
 18030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18035 ;;Total ram usage:        0 bytes
 18036 ;; Hardware stack levels used: 1
 18037 ;; Hardware stack levels required when called: 4
 18038 ;; This function calls:
 18039 ;;		Nothing
 18040 ;; This function is called by:
 18041 ;;		_NormalKeyGen
 18042 ;; This function uses a non-reentrant model
 18043 ;;
 18044                           
 18045                           	psect	text61
 18046  009CD8                     __ptext61:
 18047                           	callstack 0
 18048  009CD8                     _LoadManufCode:
 18049                           	callstack 22
 18050                           
 18051                           ;keeloqDecrypt_MC50.c: 64:     DKEY[0] = 0xFF;
 18052                           
 18053                           ;incstack = 0
 18054  009CD8  0102               	movlb	2	; () banked
 18055  009CDA  69D1               	setf	_DKEY& (0+255),b
 18056                           
 18057                           ; BSR set to: 2
 18058                           ;keeloqDecrypt_MC50.c: 65:     DKEY[1] = 0xCA;
 18059  009CDC  0ECA               	movlw	202
 18060  009CDE  6FD2               	movwf	(_DKEY+1)& (0+255),b
 18061                           
 18062                           ;keeloqDecrypt_MC50.c: 66:     DKEY[2] = 0x76;
 18063  009CE0  0E76               	movlw	118
 18064  009CE2  6FD3               	movwf	(_DKEY+2)& (0+255),b
 18065                           
 18066                           ;keeloqDecrypt_MC50.c: 67:     DKEY[3] = 0x94;
 18067  009CE4  0E94               	movlw	148
 18068  009CE6  6FD4               	movwf	(_DKEY+3)& (0+255),b
 18069                           
 18070                           ;keeloqDecrypt_MC50.c: 68:     DKEY[4] = 0x22;
 18071  009CE8  0E22               	movlw	34
 18072  009CEA  6FD5               	movwf	(_DKEY+4)& (0+255),b
 18073                           
 18074                           ;keeloqDecrypt_MC50.c: 69:     DKEY[5] = 0x68;
 18075  009CEC  0E68               	movlw	104
 18076  009CEE  6FD6               	movwf	(_DKEY+5)& (0+255),b
 18077                           
 18078                           ;keeloqDecrypt_MC50.c: 70:     DKEY[6] = 0x27;
 18079  009CF0  0E27               	movlw	39
 18080  009CF2  6FD7               	movwf	(_DKEY+6)& (0+255),b
 18081                           
 18082                           ;keeloqDecrypt_MC50.c: 71:     DKEY[7] = 0x57;
 18083  009CF4  0E57               	movlw	87
 18084  009CF6  6FD8               	movwf	(_DKEY+7)& (0+255),b
 18085                           
 18086                           ; BSR set to: 2
 18087  009CF8  0012               	return		;funcret
 18088  009CFA                     __end_of_LoadManufCode:
 18089                           	callstack 0
 18090                           
 18091 ;; *************** function _Decrypt *****************
 18092 ;; Defined at:
 18093 ;;		line 142 in file "keeloqDecrypt_MC50.c"
 18094 ;; Parameters:    Size  Location     Type
 18095 ;;  packet          2   26[COMRAM] PTR unsigned char 
 18096 ;;		 -> SecureKeyGen@HOPtemp(4), NormalKeyGen@Buffer(8), classic_data(16), 
 18097 ;; Auto vars:     Size  Location     Type
 18098 ;;  Buffer          4   33[COMRAM] unsigned char [4]
 18099 ;;  aux             1   32[COMRAM] unsigned char 
 18100 ;;  p               1   31[COMRAM] char 
 18101 ;;  j               1   30[COMRAM] unsigned char 
 18102 ;;  i               1   29[COMRAM] unsigned char 
 18103 ;;  key             1   28[COMRAM] unsigned char 
 18104 ;; Return value:  Size  Location     Type
 18105 ;;                  1    wreg      void 
 18106 ;; Registers used:
 18107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18108 ;; Tracked objects:
 18109 ;;		On entry : 0/0
 18110 ;;		On exit  : 0/0
 18111 ;;		Unchanged: 0/0
 18112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18113 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18114 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18116 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18117 ;;Total ram usage:       11 bytes
 18118 ;; Hardware stack levels used: 1
 18119 ;; Hardware stack levels required when called: 5
 18120 ;; This function calls:
 18121 ;;		_memcpy
 18122 ;; This function is called by:
 18123 ;;		_NormalKeyGen
 18124 ;;		_keeloq_classic_decrypt_packet
 18125 ;; This function uses a non-reentrant model
 18126 ;;
 18127                           
 18128                           	psect	text62
 18129  007B58                     __ptext62:
 18130                           	callstack 0
 18131  007B58                     _Decrypt:
 18132                           	callstack 21
 18133                           
 18134                           ;keeloqDecrypt_MC50.c: 143:     uint_fast8_t i, j;;keeloqDecrypt_MC50.c: 144:     uint8_
      +                          t key, aux;;keeloqDecrypt_MC50.c: 146:     int8_t p;;keeloqDecrypt_MC50.c: 147:     uint
      +                          8_t Buffer[4];;keeloqDecrypt_MC50.c: 149:     memcpy(Buffer, packet, 4);
 18135                           
 18136                           ; BSR set to: 2
 18137                           ;incstack = 0
 18138  007B58  0E22               	movlw	low Decrypt@Buffer
 18139  007B5A  6E10               	movwf	memcpy@d1^0,c
 18140  007B5C  6A11               	clrf	(memcpy@d1+1)^0,c
 18141  007B5E  C01B  F012         	movff	Decrypt@packet,memcpy@s1
 18142  007B62  C01C  F013         	movff	Decrypt@packet+1,memcpy@s1+1
 18143  007B66  0E00               	movlw	0
 18144  007B68  6E15               	movwf	(memcpy@n+1)^0,c
 18145  007B6A  0E04               	movlw	4
 18146  007B6C  6E14               	movwf	memcpy@n^0,c
 18147  007B6E  EC07  F04B         	call	_memcpy	;wreg free
 18148                           
 18149                           ;keeloqDecrypt_MC50.c: 151:     p = 1;
 18150  007B72  0E01               	movlw	1
 18151  007B74  6E20               	movwf	Decrypt@p^0,c
 18152                           
 18153                           ;keeloqDecrypt_MC50.c: 153:     for (j = 66; j > 0; j--) {
 18154  007B76  0E42               	movlw	66
 18155  007B78  6E1F               	movwf	Decrypt@j^0,c
 18156  007B7A                     l20682:
 18157                           
 18158                           ;keeloqDecrypt_MC50.c: 154:         key = DKEY[p--];
 18159  007B7A  0ED1               	movlw	low _DKEY
 18160  007B7C  2420               	addwf	Decrypt@p^0,w,c
 18161  007B7E  6ED9               	movwf	fsr2l,c
 18162  007B80  6ADA               	clrf	fsr2h,c
 18163  007B82  0E02               	movlw	high _DKEY
 18164  007B84  22DA               	addwfc	fsr2h,f,c
 18165  007B86  50DF               	movf	indf2,w,c
 18166  007B88  6E1D               	movwf	Decrypt@key^0,c
 18167  007B8A  0620               	decf	Decrypt@p^0,f,c
 18168                           
 18169                           ;keeloqDecrypt_MC50.c: 155:         if (p < 0)
 18170  007B8C  AE20               	btfss	Decrypt@p^0,7,c
 18171  007B8E  D002               	goto	l20690
 18172                           
 18173                           ;keeloqDecrypt_MC50.c: 156:             p += 8;
 18174  007B90  0E08               	movlw	8
 18175  007B92  2620               	addwf	Decrypt@p^0,f,c
 18176  007B94                     l20690:
 18177                           
 18178                           ;keeloqDecrypt_MC50.c: 157:         for (i = 8; i > 0; i--) {
 18179  007B94  0E08               	movlw	8
 18180  007B96  6E1E               	movwf	Decrypt@i^0,c
 18181  007B98                     l1859:
 18182                           
 18183                           ;keeloqDecrypt_MC50.c: 159:             if ((( (Buffer[3]) & (1<<(6))) != 0)) {
 18184  007B98  AC25               	btfss	(Decrypt@Buffer+3)^0,6,c
 18185  007B9A  D006               	goto	l1861
 18186                           
 18187                           ;keeloqDecrypt_MC50.c: 160:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18188  007B9C  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18189  007B9E  D002               	goto	l20700
 18190                           
 18191                           ;keeloqDecrypt_MC50.c: 161:                     aux = 0b00111010;
 18192  007BA0  0E3A               	movlw	58
 18193  007BA2  D007               	goto	L81
 18194  007BA4                     l20700:
 18195                           
 18196                           ;keeloqDecrypt_MC50.c: 163:                     aux = 0b01011100;
 18197  007BA4  0E5C               	movlw	92
 18198  007BA6  D005               	goto	L81
 18199  007BA8                     l1861:
 18200                           
 18201                           ;keeloqDecrypt_MC50.c: 165:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18202  007BA8  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18203  007BAA  D002               	goto	l20704
 18204                           
 18205                           ;keeloqDecrypt_MC50.c: 166:                     aux = 0b01110100;
 18206  007BAC  0E74               	movlw	116
 18207  007BAE  D001               	goto	L81
 18208  007BB0                     l20704:
 18209                           
 18210                           ;keeloqDecrypt_MC50.c: 168:                     aux = 0b00101110;
 18211  007BB0  0E2E               	movlw	46
 18212  007BB2                     L81:
 18213  007BB2  6E21               	movwf	Decrypt@aux^0,c
 18214                           
 18215                           ;keeloqDecrypt_MC50.c: 172:             if ((( (Buffer[2]) & (1<<(3))) != 0))
 18216  007BB4  B624               	btfsc	(Decrypt@Buffer+2)^0,3,c
 18217                           
 18218                           ;keeloqDecrypt_MC50.c: 173:                 aux = (aux << 4) | (aux >> 4);
 18219  007BB6  3A21               	swapf	Decrypt@aux^0,f,c
 18220                           
 18221                           ;keeloqDecrypt_MC50.c: 174:             if ((( (Buffer[1]) & (1<<(0))) != 0))
 18222  007BB8  A023               	btfss	(Decrypt@Buffer+1)^0,0,c
 18223  007BBA  D004               	goto	l20712
 18224                           
 18225                           ;keeloqDecrypt_MC50.c: 175:                 aux <<= 2;
 18226  007BBC  90D8               	bcf	status,0,c
 18227  007BBE  3621               	rlcf	Decrypt@aux^0,f,c
 18228  007BC0  90D8               	bcf	status,0,c
 18229  007BC2  3621               	rlcf	Decrypt@aux^0,f,c
 18230  007BC4                     l20712:
 18231                           
 18232                           ;keeloqDecrypt_MC50.c: 176:             if ((( (Buffer[0]) & (1<<(0))) != 0))
 18233  007BC4  A022               	btfss	Decrypt@Buffer^0,0,c
 18234  007BC6  D002               	goto	l1869
 18235                           
 18236                           ;keeloqDecrypt_MC50.c: 177:                 aux <<= 1;
 18237  007BC8  90D8               	bcf	status,0,c
 18238  007BCA  3621               	rlcf	Decrypt@aux^0,f,c
 18239  007BCC                     l1869:
 18240                           
 18241                           ;keeloqDecrypt_MC50.c: 180:             aux ^= Buffer[1] ^ Buffer[3] ^ key;
 18242  007BCC  5023               	movf	(Decrypt@Buffer+1)^0,w,c
 18243  007BCE  1825               	xorwf	(Decrypt@Buffer+3)^0,w,c
 18244  007BD0  181D               	xorwf	Decrypt@key^0,w,c
 18245  007BD2  1A21               	xorwf	Decrypt@aux^0,f,c
 18246                           
 18247                           ;keeloqDecrypt_MC50.c: 182:             Buffer[3] = (Buffer[3] << 1) | (Buffer[2] >> 7);
 18248  007BD4  90D8               	bcf	status,0,c
 18249  007BD6  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18250  007BD8  3425               	rlcf	(Decrypt@Buffer+3)^0,w,c
 18251  007BDA  6E25               	movwf	(Decrypt@Buffer+3)^0,c
 18252                           
 18253                           ;keeloqDecrypt_MC50.c: 183:             Buffer[2] = (Buffer[2] << 1) | (Buffer[1] >> 7);
 18254  007BDC  90D8               	bcf	status,0,c
 18255  007BDE  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18256  007BE0  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18257  007BE2  6E24               	movwf	(Decrypt@Buffer+2)^0,c
 18258                           
 18259                           ;keeloqDecrypt_MC50.c: 184:             Buffer[1] = (Buffer[1] << 1) | (Buffer[0] >> 7);
 18260  007BE4  90D8               	bcf	status,0,c
 18261  007BE6  3422               	rlcf	Decrypt@Buffer^0,w,c
 18262  007BE8  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18263  007BEA  6E23               	movwf	(Decrypt@Buffer+1)^0,c
 18264                           
 18265                           ;keeloqDecrypt_MC50.c: 185:             Buffer[0] = (Buffer[0] << 1) | (aux >> 7);
 18266  007BEC  90D8               	bcf	status,0,c
 18267  007BEE  3421               	rlcf	Decrypt@aux^0,w,c
 18268  007BF0  3422               	rlcf	Decrypt@Buffer^0,w,c
 18269  007BF2  6E22               	movwf	Decrypt@Buffer^0,c
 18270                           
 18271                           ;keeloqDecrypt_MC50.c: 188:             key <<= 1;
 18272  007BF4  90D8               	bcf	status,0,c
 18273  007BF6  361D               	rlcf	Decrypt@key^0,f,c
 18274                           
 18275                           ;keeloqDecrypt_MC50.c: 189:         }
 18276  007BF8  061E               	decf	Decrypt@i^0,f,c
 18277  007BFA  501E               	movf	Decrypt@i^0,w,c
 18278  007BFC  A4D8               	btfss	status,2,c
 18279  007BFE  D7CC               	goto	l1859
 18280                           
 18281                           ;keeloqDecrypt_MC50.c: 190:     }
 18282  007C00  061F               	decf	Decrypt@j^0,f,c
 18283  007C02  501F               	movf	Decrypt@j^0,w,c
 18284  007C04  A4D8               	btfss	status,2,c
 18285  007C06  D7B9               	goto	l20682
 18286                           
 18287                           ;keeloqDecrypt_MC50.c: 192:     memcpy(packet, Buffer, 4);
 18288  007C08  C01B  F010         	movff	Decrypt@packet,memcpy@d1
 18289  007C0C  C01C  F011         	movff	Decrypt@packet+1,memcpy@d1+1
 18290  007C10  0E22               	movlw	low Decrypt@Buffer
 18291  007C12  6E12               	movwf	memcpy@s1^0,c
 18292  007C14  6A13               	clrf	(memcpy@s1+1)^0,c
 18293  007C16  0E00               	movlw	0
 18294  007C18  6E15               	movwf	(memcpy@n+1)^0,c
 18295  007C1A  0E04               	movlw	4
 18296  007C1C  6E14               	movwf	memcpy@n^0,c
 18297  007C1E  EC07  F04B         	call	_memcpy	;wreg free
 18298  007C22  0012               	return		;funcret
 18299  007C24                     __end_of_Decrypt:
 18300                           	callstack 0
 18301                           
 18302 ;; *************** function _HopCHK *****************
 18303 ;; Defined at:
 18304 ;;		line 236 in file "keeloqDecrypt_MC50.c"
 18305 ;; Parameters:    Size  Location     Type
 18306 ;;  data            2   35[COMRAM] PTR struct .
 18307 ;;		 -> classic_data(16), 
 18308 ;; Auto vars:     Size  Location     Type
 18309 ;;  hopDiff         2   37[COMRAM] short 
 18310 ;; Return value:  Size  Location     Type
 18311 ;;                  1    wreg      enum E10730
 18312 ;; Registers used:
 18313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18314 ;; Tracked objects:
 18315 ;;		On entry : 3F/0
 18316 ;;		On exit  : 3C/0
 18317 ;;		Unchanged: 0/0
 18318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18319 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18320 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18322 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18323 ;;Total ram usage:        4 bytes
 18324 ;; Hardware stack levels used: 1
 18325 ;; Hardware stack levels required when called: 6
 18326 ;; This function calls:
 18327 ;;		_ReqResync
 18328 ;;		_getHopCode
 18329 ;; This function is called by:
 18330 ;;		_keeloqDecryptPacket
 18331 ;; This function uses a non-reentrant model
 18332 ;;
 18333                           
 18334                           	psect	text63
 18335  008502                     __ptext63:
 18336                           	callstack 0
 18337  008502                     _HopCHK:
 18338                           	callstack 22
 18339                           
 18340                           ; BSR set to: 0
 18341                           ;keeloqDecrypt_MC50.c: 237:     int16_t hopDiff;;keeloqDecrypt_MC50.c: 238:     Hop = da
      +                          ta->sync;
 18342                           
 18343                           ;incstack = 0
 18344  008502  EE20 F008          	lfsr	2,8
 18345  008506  5024               	movf	HopCHK@data^0,w,c
 18346  008508  26D9               	addwf	fsr2l,f,c
 18347  00850A  5025               	movf	(HopCHK@data+1)^0,w,c
 18348  00850C  22DA               	addwfc	fsr2h,f,c
 18349  00850E  CFDE F07C          	movff	postinc2,_Hop
 18350  008512  CFDD F07D          	movff	postdec2,_Hop+1
 18351                           
 18352                           ; BSR set to: 0
 18353                           ;keeloqDecrypt_MC50.c: 239:     EHop=getHopCode(data);
 18354  008516  C024  F016         	movff	HopCHK@data,getHopCode@data
 18355  00851A  C025  F017         	movff	HopCHK@data+1,getHopCode@data+1
 18356  00851E  EC69  F037         	call	_getHopCode	;wreg free
 18357  008522  C016  F28C         	movff	?_getHopCode,_EHop
 18358  008526  C017  F28D         	movff	?_getHopCode+1,_EHop+1
 18359                           
 18360                           ;keeloqDecrypt_MC50.c: 241:     if (F2Chance)
 18361  00852A  0101               	movlb	1	; () banked
 18362  00852C  5199               	movf	_F2Chance& (0+255),w,b
 18363  00852E  B4D8               	btfsc	status,2,c
 18364  008530  D010               	goto	l21680
 18365                           
 18366                           ; BSR set to: 1
 18367                           ;keeloqDecrypt_MC50.c: 242:         if (NextHop == Hop) {
 18368  008532  0100               	movlb	0	; () banked
 18369  008534  517C               	movf	_Hop& (0+255),w,b
 18370  008536  0102               	movlb	2	; () banked
 18371  008538  198E               	xorwf	_NextHop& (0+255),w,b
 18372  00853A  E10B               	bnz	l21680
 18373  00853C  0100               	movlb	0	; () banked
 18374  00853E  517D               	movf	(_Hop+1)& (0+255),w,b
 18375  008540  0102               	movlb	2	; () banked
 18376  008542  198F               	xorwf	(_NextHop+1)& (0+255),w,b
 18377  008544  A4D8               	btfss	status,2,c
 18378  008546  D005               	goto	l21680
 18379                           
 18380                           ; BSR set to: 2
 18381                           ;keeloqDecrypt_MC50.c: 243:             F2Chance = 0;
 18382  008548  0E00               	movlw	0
 18383  00854A  0101               	movlb	1	; () banked
 18384  00854C  6F99               	movwf	_F2Chance& (0+255),b
 18385  00854E                     l21676:
 18386                           
 18387                           ;keeloqDecrypt_MC50.c: 245:             return VALID_PACKET;
 18388  00854E  0E01               	movlw	1
 18389  008550  0012               	return	
 18390  008552                     l21680:
 18391                           
 18392                           ;keeloqDecrypt_MC50.c: 249:     hopDiff = Hop - EHop;
 18393  008552  0102               	movlb	2	; () banked
 18394  008554  518C               	movf	_EHop& (0+255),w,b
 18395  008556  0100               	movlb	0	; () banked
 18396  008558  5D7C               	subwf	_Hop& (0+255),w,b
 18397  00855A  6E26               	movwf	HopCHK@hopDiff^0,c
 18398  00855C  0102               	movlb	2	; () banked
 18399  00855E  518D               	movf	(_EHop+1)& (0+255),w,b
 18400  008560  0100               	movlb	0	; () banked
 18401  008562  597D               	subwfb	(_Hop+1)& (0+255),w,b
 18402  008564  6E27               	movwf	(HopCHK@hopDiff+1)^0,c
 18403                           
 18404                           ;keeloqDecrypt_MC50.c: 251:     if (hopDiff < 0) {
 18405  008566  AE27               	btfss	(HopCHK@hopDiff+1)^0,7,c
 18406  008568  D002               	goto	l21688
 18407                           
 18408                           ; BSR set to: 0
 18409                           ;keeloqDecrypt_MC50.c: 254:         return HOP_CHECK_FAIL;
 18410  00856A  0E0A               	movlw	10
 18411  00856C  0012               	return	
 18412  00856E                     l21688:
 18413                           
 18414                           ; BSR set to: 0
 18415  00856E  BE27               	btfsc	(HopCHK@hopDiff+1)^0,7,c
 18416  008570  D7EE               	goto	l21676
 18417  008572  5027               	movf	(HopCHK@hopDiff+1)^0,w,c
 18418  008574  E104               	bnz	u25050
 18419  008576  0E11               	movlw	17
 18420  008578  5C26               	subwf	HopCHK@hopDiff^0,w,c
 18421  00857A  A0D8               	btfss	status,0,c
 18422  00857C  D7E8               	goto	l21676
 18423  00857E                     u25050:
 18424                           
 18425                           ; BSR set to: 0
 18426                           ;keeloqDecrypt_MC50.c: 257:         return ReqResync(Hop);
 18427  00857E  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18428  008582  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18429  008586  EC35  F04F         	call	_ReqResync	;wreg free
 18430  00858A  0012               	return		;funcret
 18431  00858C                     __end_of_HopCHK:
 18432                           	callstack 0
 18433                           
 18434 ;; *************** function _getHopCode *****************
 18435 ;; Defined at:
 18436 ;;		line 266 in file "keeloqDecrypt_MC50.c"
 18437 ;; Parameters:    Size  Location     Type
 18438 ;;  data            2   21[COMRAM] PTR struct .
 18439 ;;		 -> classic_data(16), 
 18440 ;; Auto vars:     Size  Location     Type
 18441 ;;  tempHop         2   31[COMRAM] unsigned short 
 18442 ;;  i               1   34[COMRAM] unsigned char 
 18443 ;;  tempPos         1   33[COMRAM] char 
 18444 ;; Return value:  Size  Location     Type
 18445 ;;                  2   21[COMRAM] unsigned short 
 18446 ;; Registers used:
 18447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18448 ;; Tracked objects:
 18449 ;;		On entry : 3F/0
 18450 ;;		On exit  : 3D/0
 18451 ;;		Unchanged: 0/0
 18452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18454 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18455 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18456 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18457 ;;Total ram usage:       14 bytes
 18458 ;; Hardware stack levels used: 1
 18459 ;; Hardware stack levels required when called: 5
 18460 ;; This function calls:
 18461 ;;		_ReqResync
 18462 ;;		___wmul
 18463 ;; This function is called by:
 18464 ;;		_HopCHK
 18465 ;; This function uses a non-reentrant model
 18466 ;;
 18467                           
 18468                           	psect	text64
 18469  006ED2                     __ptext64:
 18470                           	callstack 0
 18471  006ED2                     _getHopCode:
 18472                           	callstack 22
 18473                           
 18474                           ; BSR set to: 0
 18475                           ;keeloqDecrypt_MC50.c: 268:     uint16_t tempHop=0;
 18476                           
 18477                           ;incstack = 0
 18478  006ED2  0E00               	movlw	0
 18479  006ED4  6E21               	movwf	(getHopCode@tempHop+1)^0,c
 18480  006ED6  0E00               	movlw	0
 18481  006ED8  6E20               	movwf	getHopCode@tempHop^0,c
 18482                           
 18483                           ; BSR set to: 0
 18484                           ;keeloqDecrypt_MC50.c: 269:     int8_t tempPos=-1;
 18485  006EDA  6822               	setf	getHopCode@tempPos^0,c
 18486                           
 18487                           ;keeloqDecrypt_MC50.c: 270:     for(i=0;i<25;i++)
 18488  006EDC  0E00               	movlw	0
 18489  006EDE  6E23               	movwf	getHopCode@i^0,c
 18490  006EE0                     l20962:
 18491                           
 18492                           ; BSR set to: 0
 18493                           ;keeloqDecrypt_MC50.c: 271:     {;keeloqDecrypt_MC50.c: 272:         if(listSyncValues[i
      +                          ].serial==data->serialnumber)
 18494  006EE0  EE20 F004          	lfsr	2,4
 18495  006EE4  5016               	movf	getHopCode@data^0,w,c
 18496  006EE6  26D9               	addwf	fsr2l,f,c
 18497  006EE8  5017               	movf	(getHopCode@data+1)^0,w,c
 18498  006EEA  22DA               	addwfc	fsr2h,f,c
 18499  006EEC  5023               	movf	getHopCode@i^0,w,c
 18500  006EEE  0D06               	mullw	6
 18501  006EF0  0E00               	movlw	low _listSyncValues
 18502  006EF2  24F3               	addwf	243,w,c
 18503  006EF4  6EE1               	movwf	fsr1l,c
 18504  006EF6  0E03               	movlw	high _listSyncValues
 18505  006EF8  20F4               	addwfc	prodh,w,c
 18506  006EFA  6EE2               	movwf	fsr1h,c
 18507  006EFC  50DE               	movf	postinc2,w,c
 18508  006EFE  18E6               	xorwf	postinc1,w,c
 18509  006F00  E118               	bnz	l20968
 18510  006F02  50DE               	movf	postinc2,w,c
 18511  006F04  18E6               	xorwf	postinc1,w,c
 18512  006F06  E115               	bnz	l20968
 18513  006F08  50DE               	movf	postinc2,w,c
 18514  006F0A  18E6               	xorwf	postinc1,w,c
 18515  006F0C  E112               	bnz	l20968
 18516  006F0E  50DE               	movf	postinc2,w,c
 18517  006F10  18E6               	xorwf	postinc1,w,c
 18518  006F12  A4D8               	btfss	status,2,c
 18519  006F14  D00E               	goto	l20968
 18520                           
 18521                           ; BSR set to: 0
 18522                           ;keeloqDecrypt_MC50.c: 273:         {;keeloqDecrypt_MC50.c: 274:             tempHop=lis
      +                          tSyncValues[i].sync;
 18523  006F16  5023               	movf	getHopCode@i^0,w,c
 18524  006F18  0D06               	mullw	6
 18525  006F1A  0E04               	movlw	low (_listSyncValues+4)
 18526  006F1C  24F3               	addwf	243,w,c
 18527  006F1E  6ED9               	movwf	fsr2l,c
 18528  006F20  0E03               	movlw	high (_listSyncValues+4)
 18529  006F22  20F4               	addwfc	prodh,w,c
 18530  006F24  6EDA               	movwf	fsr2h,c
 18531  006F26  CFDE F020          	movff	postinc2,getHopCode@tempHop
 18532  006F2A  CFDD F021          	movff	postdec2,getHopCode@tempHop+1
 18533                           
 18534                           ; BSR set to: 0
 18535                           ;keeloqDecrypt_MC50.c: 275:             tempPos=i;
 18536  006F2E  C023  F022         	movff	getHopCode@i,getHopCode@tempPos
 18537  006F32                     l20968:
 18538                           
 18539                           ; BSR set to: 0
 18540                           ;keeloqDecrypt_MC50.c: 278:     }
 18541  006F32  2A23               	incf	getHopCode@i^0,f,c
 18542                           
 18543                           ; BSR set to: 0
 18544  006F34  0E18               	movlw	24
 18545  006F36  6423               	cpfsgt	getHopCode@i^0,c
 18546  006F38  D7D3               	goto	l20962
 18547                           
 18548                           ; BSR set to: 0
 18549                           ;keeloqDecrypt_MC50.c: 280:     if(tempPos<0)
 18550  006F3A  AE22               	btfss	getHopCode@tempPos^0,7,c
 18551  006F3C  D050               	goto	l20988
 18552                           
 18553                           ; BSR set to: 0
 18554                           ;keeloqDecrypt_MC50.c: 281:     {;keeloqDecrypt_MC50.c: 282:         listSyncValues[poin
      +                          tSync].serial=data->serialnumber;
 18555  006F3E  EE20 F004          	lfsr	2,4
 18556  006F42  5016               	movf	getHopCode@data^0,w,c
 18557  006F44  26D9               	addwf	fsr2l,f,c
 18558  006F46  5017               	movf	(getHopCode@data+1)^0,w,c
 18559  006F48  22DA               	addwfc	fsr2h,f,c
 18560  006F4A  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18561  006F4E  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18562  006F52  0E00               	movlw	0
 18563  006F54  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18564  006F56  0E06               	movlw	6
 18565  006F58  6E12               	movwf	___wmul@multiplicand^0,c
 18566  006F5A  EC21  F04E         	call	___wmul	;wreg free
 18567  006F5E  0E00               	movlw	low _listSyncValues
 18568  006F60  2410               	addwf	?___wmul^0,w,c
 18569  006F62  6EE1               	movwf	fsr1l,c
 18570  006F64  0E03               	movlw	high _listSyncValues
 18571  006F66  2011               	addwfc	(?___wmul+1)^0,w,c
 18572  006F68  6EE2               	movwf	fsr1h,c
 18573  006F6A  CFDE FFE6          	movff	postinc2,postinc1
 18574  006F6E  CFDE FFE6          	movff	postinc2,postinc1
 18575  006F72  CFDE FFE6          	movff	postinc2,postinc1
 18576  006F76  CFDE FFE6          	movff	postinc2,postinc1
 18577                           
 18578                           ;keeloqDecrypt_MC50.c: 283:         listSyncValues[pointSync].sync=data->sync;
 18579  006F7A  EE20 F008          	lfsr	2,8
 18580  006F7E  5016               	movf	getHopCode@data^0,w,c
 18581  006F80  26D9               	addwf	fsr2l,f,c
 18582  006F82  5017               	movf	(getHopCode@data+1)^0,w,c
 18583  006F84  22DA               	addwfc	fsr2h,f,c
 18584  006F86  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18585  006F8A  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18586  006F8E  0E00               	movlw	0
 18587  006F90  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18588  006F92  0E06               	movlw	6
 18589  006F94  6E12               	movwf	___wmul@multiplicand^0,c
 18590  006F96  EC21  F04E         	call	___wmul	;wreg free
 18591  006F9A  0E04               	movlw	low (_listSyncValues+4)
 18592  006F9C  2410               	addwf	?___wmul^0,w,c
 18593  006F9E  6EE1               	movwf	fsr1l,c
 18594  006FA0  0E03               	movlw	high (_listSyncValues+4)
 18595  006FA2  2011               	addwfc	(?___wmul+1)^0,w,c
 18596  006FA4  6EE2               	movwf	fsr1h,c
 18597  006FA6  CFDE FFE6          	movff	postinc2,postinc1
 18598  006FAA  CFDD FFE5          	movff	postdec2,postdec1
 18599                           
 18600                           ;keeloqDecrypt_MC50.c: 284:         pointSync++;
 18601  006FAE  0100               	movlb	0	; () banked
 18602  006FB0  4B7A               	infsnz	_pointSync& (0+255),f,b	;volatile
 18603  006FB2  2B7B               	incf	(_pointSync+1)& (0+255),f,b	;volatile
 18604                           
 18605                           ; BSR set to: 0
 18606                           ;keeloqDecrypt_MC50.c: 285:         if(pointSync>=25)
 18607  006FB4  517B               	movf	(_pointSync+1)& (0+255),w,b	;volatile
 18608  006FB6  E104               	bnz	u24090
 18609  006FB8  0E19               	movlw	25
 18610  006FBA  5D7A               	subwf	_pointSync& (0+255),w,b	;volatile
 18611  006FBC  A0D8               	btfss	status,0,c
 18612  006FBE  D004               	goto	l20982
 18613  006FC0                     u24090:
 18614                           
 18615                           ; BSR set to: 0
 18616                           ;keeloqDecrypt_MC50.c: 286:         {;keeloqDecrypt_MC50.c: 287:             pointSync=0
      +                          ;
 18617  006FC0  0E00               	movlw	0
 18618  006FC2  6F7B               	movwf	(_pointSync+1)& (0+255),b	;volatile
 18619  006FC4  0E00               	movlw	0
 18620  006FC6  6F7A               	movwf	_pointSync& (0+255),b	;volatile
 18621  006FC8                     l20982:
 18622                           
 18623                           ; BSR set to: 0
 18624                           ;keeloqDecrypt_MC50.c: 289:         return ReqResync(Hop);
 18625  006FC8  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18626  006FCC  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18627  006FD0  EC35  F04F         	call	_ReqResync	;wreg free
 18628  006FD4  6E18               	movwf	??_getHopCode^0,c
 18629  006FD6  5018               	movf	??_getHopCode^0,w,c
 18630  006FD8  6E16               	movwf	?_getHopCode^0,c
 18631  006FDA  6A17               	clrf	(?_getHopCode+1)^0,c
 18632  006FDC  0012               	return	
 18633  006FDE                     l20988:
 18634                           
 18635                           ; BSR set to: 0
 18636                           ;keeloqDecrypt_MC50.c: 292:     {;keeloqDecrypt_MC50.c: 293:         listSyncValues[temp
      +                          Pos].sync=Hop;
 18637  006FDE  5022               	movf	getHopCode@tempPos^0,w,c
 18638  006FE0  0D06               	mullw	6
 18639  006FE2  0E04               	movlw	low (_listSyncValues+4)
 18640  006FE4  24F3               	addwf	243,w,c
 18641  006FE6  6ED9               	movwf	fsr2l,c
 18642  006FE8  0E03               	movlw	high (_listSyncValues+4)
 18643  006FEA  20F4               	addwfc	prodh,w,c
 18644  006FEC  6EDA               	movwf	fsr2h,c
 18645  006FEE  C07C  FFDE         	movff	_Hop,postinc2
 18646  006FF2  C07D  FFDD         	movff	_Hop+1,postdec2
 18647                           
 18648                           ; BSR set to: 0
 18649                           ;keeloqDecrypt_MC50.c: 296:     return tempHop;
 18650  006FF6  C020  F016         	movff	getHopCode@tempHop,?_getHopCode
 18651  006FFA  C021  F017         	movff	getHopCode@tempHop+1,?_getHopCode+1
 18652  006FFE  0012               	return		;funcret
 18653  007000                     __end_of_getHopCode:
 18654                           	callstack 0
 18655                           
 18656 ;; *************** function _ReqResync *****************
 18657 ;; Defined at:
 18658 ;;		line 224 in file "keeloqDecrypt_MC50.c"
 18659 ;; Parameters:    Size  Location     Type
 18660 ;;  CurrentHop      2   15[COMRAM] unsigned short 
 18661 ;; Auto vars:     Size  Location     Type
 18662 ;;		None
 18663 ;; Return value:  Size  Location     Type
 18664 ;;                  1    wreg      enum E10730
 18665 ;; Registers used:
 18666 ;;		wreg, status,2, status,0
 18667 ;; Tracked objects:
 18668 ;;		On entry : 3F/0
 18669 ;;		On exit  : 3F/2
 18670 ;;		Unchanged: 0/0
 18671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18675 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18676 ;;Total ram usage:        2 bytes
 18677 ;; Hardware stack levels used: 1
 18678 ;; Hardware stack levels required when called: 4
 18679 ;; This function calls:
 18680 ;;		Nothing
 18681 ;; This function is called by:
 18682 ;;		_HopCHK
 18683 ;;		_getHopCode
 18684 ;; This function uses a non-reentrant model
 18685 ;;
 18686                           
 18687                           	psect	text65
 18688  009E6A                     __ptext65:
 18689                           	callstack 0
 18690  009E6A                     _ReqResync:
 18691                           	callstack 22
 18692                           
 18693                           ; BSR set to: 0
 18694                           ;keeloqDecrypt_MC50.c: 225:     F2Chance = 1;
 18695                           
 18696                           ;incstack = 0
 18697  009E6A  0E01               	movlw	1
 18698  009E6C  0101               	movlb	1	; () banked
 18699  009E6E  6F99               	movwf	_F2Chance& (0+255),b
 18700                           
 18701                           ; BSR set to: 1
 18702                           ;keeloqDecrypt_MC50.c: 226:     NextHop = CurrentHop + 1;
 18703  009E70  0E01               	movlw	1
 18704  009E72  2410               	addwf	ReqResync@CurrentHop^0,w,c
 18705  009E74  0102               	movlb	2	; () banked
 18706  009E76  6F8E               	movwf	_NextHop& (0+255),b
 18707  009E78  0E00               	movlw	0
 18708  009E7A  2011               	addwfc	(ReqResync@CurrentHop+1)^0,w,c
 18709  009E7C  6F8F               	movwf	(_NextHop+1)& (0+255),b
 18710                           
 18711                           ; BSR set to: 2
 18712                           ;keeloqDecrypt_MC50.c: 228:     return RESYNC_REQ;
 18713  009E7E  0E09               	movlw	9
 18714                           
 18715                           ; BSR set to: 2
 18716  009E80  0012               	return		;funcret
 18717  009E82                     __end_of_ReqResync:
 18718                           	callstack 0
 18719                           
 18720 ;; *************** function _DecCHK *****************
 18721 ;; Defined at:
 18722 ;;		line 206 in file "keeloqDecrypt_MC50.c"
 18723 ;; Parameters:    Size  Location     Type
 18724 ;;  data            2   15[COMRAM] PTR struct .
 18725 ;;		 -> classic_data(16), 
 18726 ;; Auto vars:     Size  Location     Type
 18727 ;;		None
 18728 ;; Return value:  Size  Location     Type
 18729 ;;                  1    wreg      _Bool 
 18730 ;; Registers used:
 18731 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18732 ;; Tracked objects:
 18733 ;;		On entry : 3F/0
 18734 ;;		On exit  : 3F/0
 18735 ;;		Unchanged: 3F/0
 18736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18737 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18739 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18740 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18741 ;;Total ram usage:        4 bytes
 18742 ;; Hardware stack levels used: 1
 18743 ;; Hardware stack levels required when called: 4
 18744 ;; This function calls:
 18745 ;;		Nothing
 18746 ;; This function is called by:
 18747 ;;		_keeloqDecryptPacket
 18748 ;; This function uses a non-reentrant model
 18749 ;;
 18750                           
 18751                           	psect	text66
 18752  009876                     __ptext66:
 18753                           	callstack 0
 18754  009876                     _DecCHK:
 18755                           	callstack 24
 18756                           
 18757                           ; BSR set to: 0
 18758                           ;keeloqDecrypt_MC50.c: 208:     if (((data->fcode1 ^ data->fcode2) & 0x0f) != 0)
 18759                           
 18760                           ; BSR set to: 2
 18761                           ;incstack = 0
 18762  009876  EE20 F00D          	lfsr	2,13
 18763  00987A  5010               	movf	DecCHK@data^0,w,c
 18764  00987C  26D9               	addwf	fsr2l,f,c
 18765  00987E  5011               	movf	(DecCHK@data+1)^0,w,c
 18766  009880  22DA               	addwfc	fsr2h,f,c
 18767  009882  50DF               	movf	indf2,w,c
 18768  009884  6E12               	movwf	??_DecCHK^0,c
 18769  009886  EE20 F00C          	lfsr	2,12
 18770  00988A  5010               	movf	DecCHK@data^0,w,c
 18771  00988C  26D9               	addwf	fsr2l,f,c
 18772  00988E  5011               	movf	(DecCHK@data+1)^0,w,c
 18773  009890  22DA               	addwfc	fsr2h,f,c
 18774  009892  50DF               	movf	indf2,w,c
 18775  009894  1812               	xorwf	??_DecCHK^0,w,c
 18776  009896  6E13               	movwf	(??_DecCHK+1)^0,c
 18777  009898  0E0F               	movlw	15
 18778  00989A  1613               	andwf	(??_DecCHK+1)^0,f,c
 18779  00989C  B4D8               	btfsc	status,2,c
 18780  00989E  D002               	goto	l21662
 18781                           
 18782                           ; BSR set to: 0
 18783                           ;keeloqDecrypt_MC50.c: 209:         return 0;
 18784  0098A0  0E00               	movlw	0
 18785  0098A2  0012               	return	
 18786  0098A4                     l21662:
 18787                           
 18788                           ; BSR set to: 0
 18789                           ;keeloqDecrypt_MC50.c: 211:     return 1;
 18790  0098A4  0E01               	movlw	1
 18791                           
 18792                           ; BSR set to: 0
 18793  0098A6  0012               	return		;funcret
 18794  0098A8                     __end_of_DecCHK:
 18795                           	callstack 0
 18796                           
 18797 ;; *************** function _DecryptPacket_12BIT *****************
 18798 ;; Defined at:
 18799 ;;		line 370 in file "keeloqDecrypt_MC50.c"
 18800 ;; Parameters:    Size  Location     Type
 18801 ;;  data            2    8[BANK0 ] PTR unsigned char 
 18802 ;;		 -> BufferRF(9), 
 18803 ;;  classic_data    2   10[BANK0 ] PTR struct .
 18804 ;;		 -> classic_data(16), 
 18805 ;; Auto vars:     Size  Location     Type
 18806 ;;  commandType     1   12[BANK0 ] enum E10539
 18807 ;; Return value:  Size  Location     Type
 18808 ;;                  1    wreg      enum E10539
 18809 ;; Registers used:
 18810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18811 ;; Tracked objects:
 18812 ;;		On entry : 3F/0
 18813 ;;		On exit  : 3F/0
 18814 ;;		Unchanged: 0/0
 18815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18816 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18817 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18819 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18820 ;;Total ram usage:        5 bytes
 18821 ;; Hardware stack levels used: 1
 18822 ;; Hardware stack levels required when called: 14
 18823 ;; This function calls:
 18824 ;;		_memcpy
 18825 ;;		_validateRemoteSerialNumber
 18826 ;; This function is called by:
 18827 ;;		_readRFButtons
 18828 ;; This function uses a non-reentrant model
 18829 ;;
 18830                           
 18831                           	psect	text67
 18832  00835E                     __ptext67:
 18833                           	callstack 0
 18834  00835E                     _DecryptPacket_12BIT:
 18835                           	callstack 15
 18836                           
 18837                           ; BSR set to: 0
 18838                           ;keeloqDecrypt_MC50.c: 370: TypeCMD DecryptPacket_12BIT (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 371: {;keeloqDecrypt_MC50.c: 372:     TypeCMD command
      +                          Type;;keeloqDecrypt_MC50.c: 373:     memcpy(&classic_data->serialnumber, data, 4);
 18839                           
 18840                           ; BSR set to: 0
 18841                           ;incstack = 0
 18842  00835E  0E04               	movlw	4
 18843  008360  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18844  008362  6E10               	movwf	memcpy@d1^0,c
 18845  008364  0E00               	movlw	0
 18846  008366  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18847  008368  6E11               	movwf	(memcpy@d1+1)^0,c
 18848  00836A  C0E0  F012         	movff	DecryptPacket_12BIT@data,memcpy@s1
 18849  00836E  C0E1  F013         	movff	DecryptPacket_12BIT@data+1,memcpy@s1+1
 18850  008372  0E00               	movlw	0
 18851  008374  6E15               	movwf	(memcpy@n+1)^0,c
 18852  008376  0E04               	movlw	4
 18853  008378  6E14               	movwf	memcpy@n^0,c
 18854  00837A  EC07  F04B         	call	_memcpy	;wreg free
 18855                           
 18856                           ;keeloqDecrypt_MC50.c: 374:     commandType=validateRemoteSerialNumber(classic_data->ser
      +                          ialnumber,NO,&classic_data->positionMem);
 18857  00837E  0100               	movlb	0	; () banked
 18858  008380  EE20 F004          	lfsr	2,4
 18859  008384  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18860  008386  26D9               	addwf	fsr2l,f,c
 18861  008388  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18862  00838A  22DA               	addwfc	fsr2h,f,c
 18863  00838C  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 18864  008390  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 18865  008394  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 18866  008398  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 18867  00839C  0E00               	movlw	0
 18868  00839E  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 18869  0083A0  0E0F               	movlw	15
 18870  0083A2  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18871  0083A4  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 18872  0083A6  0E00               	movlw	0
 18873  0083A8  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18874  0083AA  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 18875  0083AC  EC4C  F031         	call	_validateRemoteSerialNumber	;wreg free
 18876  0083B0  6FE4               	movwf	DecryptPacket_12BIT@commandType& (0+255),b
 18877                           
 18878                           ; BSR set to: 0
 18879                           ;keeloqDecrypt_MC50.c: 375:     classic_data->fcode1 = 0;
 18880  0083B2  EE20 F00C          	lfsr	2,12
 18881  0083B6  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18882  0083B8  26D9               	addwf	fsr2l,f,c
 18883  0083BA  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18884  0083BC  22DA               	addwfc	fsr2h,f,c
 18885  0083BE  0E00               	movlw	0
 18886  0083C0  6EDF               	movwf	indf2,c
 18887                           
 18888                           ; BSR set to: 0
 18889                           ;keeloqDecrypt_MC50.c: 376:     classic_data->sync = 0;
 18890  0083C2  EE20 F008          	lfsr	2,8
 18891  0083C6  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18892  0083C8  26D9               	addwf	fsr2l,f,c
 18893  0083CA  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18894  0083CC  22DA               	addwfc	fsr2h,f,c
 18895  0083CE  0E00               	movlw	0
 18896  0083D0  6EDE               	movwf	postinc2,c
 18897  0083D2  0E00               	movlw	0
 18898  0083D4  6EDD               	movwf	postdec2,c
 18899                           
 18900                           ; BSR set to: 0
 18901                           ;keeloqDecrypt_MC50.c: 377:     classic_data->type=DIP_12BIT;
 18902  0083D6  EE20 F00E          	lfsr	2,14
 18903  0083DA  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18904  0083DC  26D9               	addwf	fsr2l,f,c
 18905  0083DE  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18906  0083E0  22DA               	addwfc	fsr2h,f,c
 18907  0083E2  0E02               	movlw	2
 18908  0083E4  6EDF               	movwf	indf2,c
 18909                           
 18910                           ; BSR set to: 0
 18911                           ;keeloqDecrypt_MC50.c: 386:     return commandType;
 18912  0083E6  51E4               	movf	DecryptPacket_12BIT@commandType& (0+255),w,b
 18913                           
 18914                           ; BSR set to: 0
 18915  0083E8  0012               	return		;funcret
 18916  0083EA                     __end_of_DecryptPacket_12BIT:
 18917                           	callstack 0
 18918                           
 18919 ;; *************** function _readInputs *****************
 18920 ;; Defined at:
 18921 ;;		line 528 in file "inputs_MC50.c"
 18922 ;; Parameters:    Size  Location     Type
 18923 ;;		None
 18924 ;; Auto vars:     Size  Location     Type
 18925 ;;		None
 18926 ;; Return value:  Size  Location     Type
 18927 ;;                  1    wreg      void 
 18928 ;; Registers used:
 18929 ;;		wreg, status,2, status,0
 18930 ;; Tracked objects:
 18931 ;;		On entry : 3F/1
 18932 ;;		On exit  : 3E/0
 18933 ;;		Unchanged: 0/0
 18934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18939 ;;Total ram usage:        0 bytes
 18940 ;; Hardware stack levels used: 1
 18941 ;; Hardware stack levels required when called: 4
 18942 ;; This function calls:
 18943 ;;		Nothing
 18944 ;; This function is called by:
 18945 ;;		_main
 18946 ;; This function uses a non-reentrant model
 18947 ;;
 18948                           
 18949                           	psect	text68
 18950  007598                     __ptext68:
 18951                           	callstack 0
 18952  007598                     _readInputs:
 18953                           	callstack 26
 18954                           
 18955                           ; BSR set to: 1
 18956                           ;inputs_MC50.c: 533:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoClose
      +                          AUX=PORTAbits.RA1;}
 18957                           
 18958                           ; BSR set to: 0
 18959                           ;incstack = 0
 18960  007598  0100               	movlb	0	; () banked
 18961  00759A  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 18962  00759C  A4D8               	btfss	status,2,c
 18963  00759E  D006               	goto	l24920
 18964                           
 18965                           ; BSR set to: 0
 18966  0075A0  0E00               	movlw	0
 18967  0075A2  B28D               	btfsc	141,1,c	;volatile
 18968  0075A4  0E01               	movlw	1
 18969  0075A6  0101               	movlb	1	; () banked
 18970  0075A8  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 18971  0075AA  D005               	goto	l24922
 18972  0075AC                     l24920:
 18973                           
 18974                           ; BSR set to: 0
 18975  0075AC  0E00               	movlw	0
 18976  0075AE  B48D               	btfsc	141,2,c	;volatile
 18977  0075B0  0E01               	movlw	1
 18978  0075B2  0101               	movlb	1	; () banked
 18979  0075B4  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 18980  0075B6                     l24922:
 18981                           
 18982                           ; BSR set to: 1
 18983                           ;inputs_MC50.c: 541:     if (fimdecurso.FimdeCursoCloseAUX==fimdecurso.FimdeCursoCloseOL
      +                          D)
 18984  0075B6  5179               	movf	(_fimdecurso+4)& (0+255),w,b	;volatile
 18985  0075B8  1978               	xorwf	(_fimdecurso+3)& (0+255),w,b	;volatile
 18986  0075BA  A4D8               	btfss	status,2,c
 18987  0075BC  D002               	goto	l1731
 18988                           
 18989                           ; BSR set to: 1
 18990                           ;inputs_MC50.c: 542:     {;inputs_MC50.c: 543:            fimdecurso.FimdeCursoCloseTime
      +                          r++;
 18991  0075BE  2B7A               	incf	(_fimdecurso+5)& (0+255),f,b	;volatile
 18992                           
 18993                           ;inputs_MC50.c: 544:     }
 18994  0075C0  D004               	goto	l1732
 18995  0075C2                     l1731:
 18996                           
 18997                           ; BSR set to: 1
 18998                           ;inputs_MC50.c: 547:     {;inputs_MC50.c: 548:             fimdecurso.FimdeCursoCloseOLD
      +                           = fimdecurso.FimdeCursoCloseAUX;
 18999  0075C2  C178  F179         	movff	_fimdecurso+3,_fimdecurso+4	;volatile
 19000                           
 19001                           ; BSR set to: 1
 19002                           ;inputs_MC50.c: 549:             fimdecurso.FimdeCursoCloseTimer=0;
 19003  0075C6  0E00               	movlw	0
 19004  0075C8  6F7A               	movwf	(_fimdecurso+5)& (0+255),b	;volatile
 19005  0075CA                     l1732:
 19006                           
 19007                           ; BSR set to: 1
 19008                           ;inputs_MC50.c: 553:     if (fimdecurso.FimdeCursoCloseTimer>=( 50/50))
 19009  0075CA  517A               	movf	(_fimdecurso+5)& (0+255),w,b	;volatile
 19010  0075CC  A4D8               	btfss	status,2,c
 19011                           
 19012                           ; BSR set to: 1
 19013                           ;inputs_MC50.c: 554:     {;inputs_MC50.c: 555:         var_sys.FimCurso_CloseIsEnabled=f
      +                          imdecurso.FimdeCursoCloseAUX;
 19014  0075CE  C178  F103         	movff	_fimdecurso+3,_var_sys+3	;volatile
 19015                           
 19016                           ; BSR set to: 1
 19017                           ;inputs_MC50.c: 564:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoOpenA
      +                          UX=PORTAbits.RA2;}
 19018  0075D2  0100               	movlb	0	; () banked
 19019  0075D4  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 19020  0075D6  A4D8               	btfss	status,2,c
 19021  0075D8  D006               	goto	l24934
 19022                           
 19023                           ; BSR set to: 0
 19024  0075DA  0E00               	movlw	0
 19025  0075DC  B48D               	btfsc	141,2,c	;volatile
 19026  0075DE  0E01               	movlw	1
 19027  0075E0  0101               	movlb	1	; () banked
 19028  0075E2  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 19029  0075E4  D005               	goto	l24936
 19030  0075E6                     l24934:
 19031                           
 19032                           ; BSR set to: 0
 19033  0075E6  0E00               	movlw	0
 19034  0075E8  B28D               	btfsc	141,1,c	;volatile
 19035  0075EA  0E01               	movlw	1
 19036  0075EC  0101               	movlb	1	; () banked
 19037  0075EE  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 19038  0075F0                     l24936:
 19039                           
 19040                           ; BSR set to: 1
 19041                           ;inputs_MC50.c: 570:     if (fimdecurso.FimdeCursoOpenAUX==fimdecurso.FimdeCursoOpenOLD)
 19042  0075F0  5175               	movf	_fimdecurso& (0+255),w,b	;volatile
 19043  0075F2  1976               	xorwf	(_fimdecurso+1)& (0+255),w,b	;volatile
 19044  0075F4  A4D8               	btfss	status,2,c
 19045  0075F6  D002               	goto	l1736
 19046                           
 19047                           ; BSR set to: 1
 19048                           ;inputs_MC50.c: 571:     {;inputs_MC50.c: 572:            fimdecurso.FimdeCursoOpenTimer
      +                          ++;
 19049  0075F8  2B77               	incf	(_fimdecurso+2)& (0+255),f,b	;volatile
 19050                           
 19051                           ;inputs_MC50.c: 573:     }
 19052  0075FA  D004               	goto	l1737
 19053  0075FC                     l1736:
 19054                           
 19055                           ; BSR set to: 1
 19056                           ;inputs_MC50.c: 576:     {;inputs_MC50.c: 577:             fimdecurso.FimdeCursoOpenOLD 
      +                          = fimdecurso.FimdeCursoOpenAUX;
 19057  0075FC  C175  F176         	movff	_fimdecurso,_fimdecurso+1	;volatile
 19058                           
 19059                           ; BSR set to: 1
 19060                           ;inputs_MC50.c: 578:             fimdecurso.FimdeCursoOpenTimer=0;
 19061  007600  0E00               	movlw	0
 19062  007602  6F77               	movwf	(_fimdecurso+2)& (0+255),b	;volatile
 19063  007604                     l1737:
 19064                           
 19065                           ; BSR set to: 1
 19066                           ;inputs_MC50.c: 582:     if (fimdecurso.FimdeCursoOpenTimer>=( 50/50))
 19067  007604  5177               	movf	(_fimdecurso+2)& (0+255),w,b	;volatile
 19068  007606  A4D8               	btfss	status,2,c
 19069                           
 19070                           ; BSR set to: 1
 19071                           ;inputs_MC50.c: 583:     {;inputs_MC50.c: 584:         var_sys.FimCurso_OpenIsEnabled=fi
      +                          mdecurso.FimdeCursoOpenAUX;
 19072  007608  C175  F104         	movff	_fimdecurso,_var_sys+4	;volatile
 19073                           
 19074                           ; BSR set to: 1
 19075                           ;inputs_MC50.c: 589:     security.PhotoCellAUX=PORTAbits.RA4;
 19076  00760C  0E00               	movlw	0
 19077  00760E  B88D               	btfsc	141,4,c	;volatile
 19078  007610  0E01               	movlw	1
 19079  007612  6F6A               	movwf	_security& (0+255),b	;volatile
 19080                           
 19081                           ; BSR set to: 1
 19082                           ;inputs_MC50.c: 594:     if (security.PhotoCellAUX==security.PhotoCellOLD)
 19083  007614  516A               	movf	_security& (0+255),w,b	;volatile
 19084  007616  196B               	xorwf	(_security+1)& (0+255),w,b	;volatile
 19085  007618  A4D8               	btfss	status,2,c
 19086  00761A  D002               	goto	l1739
 19087                           
 19088                           ; BSR set to: 1
 19089                           ;inputs_MC50.c: 595:     {;inputs_MC50.c: 596:            security.PhotoCellTimer++;
 19090  00761C  2B6C               	incf	(_security+2)& (0+255),f,b	;volatile
 19091                           
 19092                           ;inputs_MC50.c: 597:     }
 19093  00761E  D004               	goto	l1740
 19094  007620                     l1739:
 19095                           
 19096                           ; BSR set to: 1
 19097                           ;inputs_MC50.c: 600:     {;inputs_MC50.c: 601:             security.PhotoCellOLD = secur
      +                          ity.PhotoCellAUX;
 19098  007620  C16A  F16B         	movff	_security,_security+1	;volatile
 19099                           
 19100                           ; BSR set to: 1
 19101                           ;inputs_MC50.c: 602:             security.PhotoCellTimer=0;
 19102  007624  0E00               	movlw	0
 19103  007626  6F6C               	movwf	(_security+2)& (0+255),b	;volatile
 19104  007628                     l1740:
 19105                           
 19106                           ; BSR set to: 1
 19107                           ;inputs_MC50.c: 606:     if (security.PhotoCellTimer>=( 50/50))
 19108  007628  516C               	movf	(_security+2)& (0+255),w,b	;volatile
 19109  00762A  A4D8               	btfss	status,2,c
 19110                           
 19111                           ; BSR set to: 1
 19112                           ;inputs_MC50.c: 607:     {;inputs_MC50.c: 608:         var_sys.photoCellIsObstructed=sec
      +                          urity.PhotoCellAUX;
 19113  00762C  C16A  F101         	movff	_security,_var_sys+1	;volatile
 19114                           
 19115                           ; BSR set to: 1
 19116                           ;inputs_MC50.c: 612:     security.SecurityBarAUX=PORTAbits.RA5;
 19117  007630  0E00               	movlw	0
 19118  007632  BA8D               	btfsc	141,5,c	;volatile
 19119  007634  0E01               	movlw	1
 19120  007636  6F6D               	movwf	(_security+3)& (0+255),b	;volatile
 19121                           
 19122                           ; BSR set to: 1
 19123                           ;inputs_MC50.c: 616:     if (security.SecurityBarAUX==security.SecurityBarOLD)
 19124  007638  516E               	movf	(_security+4)& (0+255),w,b	;volatile
 19125  00763A  196D               	xorwf	(_security+3)& (0+255),w,b	;volatile
 19126  00763C  A4D8               	btfss	status,2,c
 19127  00763E  D002               	goto	l1742
 19128                           
 19129                           ; BSR set to: 1
 19130                           ;inputs_MC50.c: 617:     {;inputs_MC50.c: 618:            security.SecurityBarTimer++;
 19131  007640  2B6F               	incf	(_security+5)& (0+255),f,b	;volatile
 19132                           
 19133                           ;inputs_MC50.c: 619:     }
 19134  007642  D004               	goto	l1743
 19135  007644                     l1742:
 19136                           
 19137                           ; BSR set to: 1
 19138                           ;inputs_MC50.c: 622:     {;inputs_MC50.c: 623:             security.SecurityBarOLD = sec
      +                          urity.SecurityBarAUX;
 19139  007644  C16D  F16E         	movff	_security+3,_security+4	;volatile
 19140                           
 19141                           ; BSR set to: 1
 19142                           ;inputs_MC50.c: 624:             security.SecurityBarTimer=0;
 19143  007648  0E00               	movlw	0
 19144  00764A  6F6F               	movwf	(_security+5)& (0+255),b	;volatile
 19145  00764C                     l1743:
 19146                           
 19147                           ; BSR set to: 1
 19148                           ;inputs_MC50.c: 628:     if (security.SecurityBarTimer>=( 50/50))
 19149  00764C  516F               	movf	(_security+5)& (0+255),w,b	;volatile
 19150  00764E  A4D8               	btfss	status,2,c
 19151                           
 19152                           ; BSR set to: 1
 19153                           ;inputs_MC50.c: 629:     {;inputs_MC50.c: 630:         security.SecurityBarSTATE=securit
      +                          y.SecurityBarAUX;
 19154  007650  C16D  F170         	movff	_security+3,_security+6	;volatile
 19155                           
 19156                           ; BSR set to: 1
 19157                           ;inputs_MC50.c: 633:     security.SecurityBar8K2AUX=PORTAbits.RA6;
 19158  007654  0E00               	movlw	0
 19159  007656  BC8D               	btfsc	141,6,c	;volatile
 19160  007658  0E01               	movlw	1
 19161  00765A  6F71               	movwf	(_security+7)& (0+255),b	;volatile
 19162                           
 19163                           ; BSR set to: 1
 19164                           ;inputs_MC50.c: 637:     if (security.SecurityBar8K2AUX==security.SecurityBar8K2OLD)
 19165  00765C  5172               	movf	(_security+8)& (0+255),w,b	;volatile
 19166  00765E  1971               	xorwf	(_security+7)& (0+255),w,b	;volatile
 19167  007660  A4D8               	btfss	status,2,c
 19168  007662  D002               	goto	l1745
 19169                           
 19170                           ; BSR set to: 1
 19171                           ;inputs_MC50.c: 638:     {;inputs_MC50.c: 639:            security.SecurityBar8K2Timer++
      +                          ;
 19172  007664  2B73               	incf	(_security+9)& (0+255),f,b	;volatile
 19173                           
 19174                           ;inputs_MC50.c: 640:     }
 19175  007666  D004               	goto	l1746
 19176  007668                     l1745:
 19177                           
 19178                           ; BSR set to: 1
 19179                           ;inputs_MC50.c: 643:     {;inputs_MC50.c: 644:             security.SecurityBar8K2OLD = 
      +                          security.SecurityBar8K2AUX;
 19180  007668  C171  F172         	movff	_security+7,_security+8	;volatile
 19181                           
 19182                           ; BSR set to: 1
 19183                           ;inputs_MC50.c: 645:             security.SecurityBar8K2Timer=0;
 19184  00766C  0E00               	movlw	0
 19185  00766E  6F73               	movwf	(_security+9)& (0+255),b	;volatile
 19186  007670                     l1746:
 19187                           
 19188                           ; BSR set to: 1
 19189                           ;inputs_MC50.c: 649:     if (security.SecurityBar8K2Timer>=( 50/50))
 19190  007670  5173               	movf	(_security+9)& (0+255),w,b	;volatile
 19191  007672  A4D8               	btfss	status,2,c
 19192                           
 19193                           ; BSR set to: 1
 19194                           ;inputs_MC50.c: 650:     {;inputs_MC50.c: 651:         security.SecurityBar8K2STATE=secu
      +                          rity.SecurityBar8K2AUX;
 19195  007674  C171  F174         	movff	_security+7,_security+10	;volatile
 19196                           
 19197                           ; BSR set to: 1
 19198                           ;inputs_MC50.c: 655:     if (var_sys_NVM.securityBandType == 0)
 19199  007678  0100               	movlb	0	; () banked
 19200  00767A  51A2               	movf	(_var_sys_NVM+10)& (0+255),w,b	;volatile
 19201  00767C  A4D8               	btfss	status,2,c
 19202  00767E  D00D               	goto	l1748
 19203                           
 19204                           ; BSR set to: 0
 19205                           ;inputs_MC50.c: 656:     {;inputs_MC50.c: 657:         if(security.SecurityBarSTATE==0 &
      +                          & security.SecurityBar8K2STATE==1)
 19206  007680  0101               	movlb	1	; () banked
 19207  007682  5170               	movf	(_security+6)& (0+255),w,b	;volatile
 19208  007684  A4D8               	btfss	status,2,c
 19209  007686  D006               	goto	l24982
 19210                           
 19211                           ; BSR set to: 1
 19212  007688  0574               	decf	(_security+10)& (0+255),w,b	;volatile
 19213  00768A  A4D8               	btfss	status,2,c
 19214  00768C  D003               	goto	l24982
 19215                           
 19216                           ; BSR set to: 1
 19217                           ;inputs_MC50.c: 658:         {;inputs_MC50.c: 659:             var_sys.SecurityBarIsObst
      +                          ructed = NO;
 19218  00768E  0E00               	movlw	0
 19219  007690  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19220                           
 19221                           ;inputs_MC50.c: 660:         }
 19222  007692  0012               	return	
 19223  007694                     l24982:
 19224                           
 19225                           ; BSR set to: 1
 19226                           ;inputs_MC50.c: 662:         {;inputs_MC50.c: 663:             var_sys.SecurityBarIsObst
      +                          ructed = YES;
 19227  007694  0E01               	movlw	1
 19228  007696  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19229  007698  0012               	return	
 19230  00769A                     l1748:
 19231                           
 19232                           ; BSR set to: 0
 19233                           ;inputs_MC50.c: 667:     {;inputs_MC50.c: 668:         var_sys.SecurityBarIsObstructed =
      +                           security.SecurityBarSTATE;
 19234  00769A  C170  F102         	movff	_security+6,_var_sys+2	;volatile
 19235  00769E  0012               	return		;funcret
 19236  0076A0                     __end_of_readInputs:
 19237                           	callstack 0
 19238                           
 19239 ;; *************** function _loadNVM_VarSystem *****************
 19240 ;; Defined at:
 19241 ;;		line 151 in file "controlMemory_MC50.c"
 19242 ;; Parameters:    Size  Location     Type
 19243 ;;		None
 19244 ;; Auto vars:     Size  Location     Type
 19245 ;;		None
 19246 ;; Return value:  Size  Location     Type
 19247 ;;                  1    wreg      void 
 19248 ;; Registers used:
 19249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19250 ;; Tracked objects:
 19251 ;;		On entry : 3F/0
 19252 ;;		On exit  : 0/0
 19253 ;;		Unchanged: 0/0
 19254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19259 ;;Total ram usage:        0 bytes
 19260 ;; Hardware stack levels used: 1
 19261 ;; Hardware stack levels required when called: 15
 19262 ;; This function calls:
 19263 ;;		_I2C1_Read1ByteRegister
 19264 ;;		_ResetDefaultMemory
 19265 ;;		_SaveNVM_VarSystem
 19266 ;;		_checkNVM_VarSystem
 19267 ;;		_i2c_readDataBlock
 19268 ;; This function is called by:
 19269 ;;		_main
 19270 ;; This function uses a non-reentrant model
 19271 ;;
 19272                           
 19273                           	psect	text69
 19274  007000                     __ptext69:
 19275                           	callstack 0
 19276  007000                     _loadNVM_VarSystem:
 19277                           	callstack 15
 19278                           
 19279                           ; BSR set to: 0
 19280                           ;controlMemory_MC50.c: 153:     if((I2C1_Read1ByteRegister(0x50, 0) == 0xFF) && (I2C1_Re
      +                          ad1ByteRegister(0x50, 16) == 0xFF))
 19281                           
 19282                           ;incstack = 0
 19283  007000  0E00               	movlw	0
 19284  007002  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19285  007004  0E50               	movlw	80
 19286  007006  EC53  F048         	call	_I2C1_Read1ByteRegister
 19287  00700A  0AFF               	xorlw	255
 19288  00700C  A4D8               	btfss	status,2,c
 19289  00700E  D04C               	goto	l24786
 19290  007010  0E10               	movlw	16
 19291  007012  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19292  007014  0E50               	movlw	80
 19293  007016  EC53  F048         	call	_I2C1_Read1ByteRegister
 19294  00701A  0AFF               	xorlw	255
 19295  00701C  A4D8               	btfss	status,2,c
 19296  00701E  D044               	goto	l24786
 19297                           
 19298                           ;controlMemory_MC50.c: 154:     {;controlMemory_MC50.c: 155:         ResetDefaultMemory(
      +                          SC);
 19299  007020  0E00               	movlw	0
 19300  007022  EC7F  F034         	call	_ResetDefaultMemory
 19301                           
 19302                           ;controlMemory_MC50.c: 156:         var_sys_NVM.learningTimeToClose = 0;
 19303  007026  0E00               	movlw	0
 19304  007028  0100               	movlb	0	; () banked
 19305  00702A  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 19306  00702C  0E00               	movlw	0
 19307  00702E  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 19308  007030  0E00               	movlw	0
 19309  007032  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 19310  007034  0E00               	movlw	0
 19311  007036  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 19312                           
 19313                           ; BSR set to: 0
 19314                           ;controlMemory_MC50.c: 157:         var_sys_NVM.learningTimeToOpen = 0;
 19315  007038  0E00               	movlw	0
 19316  00703A  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 19317  00703C  0E00               	movlw	0
 19318  00703E  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 19319  007040  0E00               	movlw	0
 19320  007042  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 19321  007044  0E00               	movlw	0
 19322  007046  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 19323                           
 19324                           ; BSR set to: 0
 19325                           ;controlMemory_MC50.c: 158:         var_sys_NVM.learningCurrentNormalClose = 0;
 19326  007048  0E00               	movlw	0
 19327  00704A  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 19328  00704C  0E00               	movlw	0
 19329  00704E  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 19330                           
 19331                           ; BSR set to: 0
 19332                           ;controlMemory_MC50.c: 159:         var_sys_NVM.learningCurrentNormalOpen = 0;
 19333  007050  0E00               	movlw	0
 19334  007052  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 19335  007054  0E00               	movlw	0
 19336  007056  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 19337                           
 19338                           ; BSR set to: 0
 19339                           ;controlMemory_MC50.c: 160:         var_sys_NVM.learningCurrentDecelarationClose = 0;
 19340  007058  0E00               	movlw	0
 19341  00705A  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 19342  00705C  0E00               	movlw	0
 19343  00705E  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 19344  007060  0E00               	movlw	0
 19345  007062  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 19346  007064  0E00               	movlw	0
 19347  007066  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 19348                           
 19349                           ; BSR set to: 0
 19350                           ;controlMemory_MC50.c: 161:         var_sys_NVM.learningCurrentDecelarationOpen = 0;
 19351  007068  0E00               	movlw	0
 19352  00706A  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 19353  00706C  0E00               	movlw	0
 19354  00706E  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 19355  007070  0E00               	movlw	0
 19356  007072  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 19357  007074  0E00               	movlw	0
 19358  007076  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 19359                           
 19360                           ;controlMemory_MC50.c: 162:         SaveNVM_VarSystem(pageMemoryLearningVars);
 19361  007078  0E03               	movlw	3
 19362  00707A  EC05  F04C         	call	_SaveNVM_VarSystem
 19363                           
 19364                           ;controlMemory_MC50.c: 163:         var_sys_NVM.positionRemotesFull = 0;
 19365  00707E  0E00               	movlw	0
 19366  007080  0100               	movlb	0	; () banked
 19367  007082  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
 19368                           
 19369                           ; BSR set to: 0
 19370                           ;controlMemory_MC50.c: 164:         var_sys_NVM.positionRemotesWalk = 0;
 19371  007084  0E00               	movlw	0
 19372  007086  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
 19373                           
 19374                           ; BSR set to: 0
 19375                           ;controlMemory_MC50.c: 165:         var_sys_NVM.OnlyRollingCode = NO;
 19376  007088  0E00               	movlw	0
 19377  00708A  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
 19378                           
 19379                           ; BSR set to: 0
 19380                           ;controlMemory_MC50.c: 166:         var_sys_NVM.counterMoves = 0;
 19381  00708C  0E00               	movlw	0
 19382  00708E  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 19383  007090  0E00               	movlw	0
 19384  007092  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 19385  007094  0E00               	movlw	0
 19386  007096  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 19387  007098  0E00               	movlw	0
 19388  00709A  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 19389                           
 19390                           ;controlMemory_MC50.c: 167:        SaveNVM_VarSystem(pageMemoryCounters);
 19391  00709C  0E02               	movlw	2
 19392  00709E  EC05  F04C         	call	_SaveNVM_VarSystem
 19393                           
 19394                           ;controlMemory_MC50.c: 169:          var_sys_NVM.TypeofMotor = 0;
 19395  0070A2  0E00               	movlw	0
 19396  0070A4  0100               	movlb	0	; () banked
 19397  0070A6  6FB4               	movwf	(_var_sys_NVM+28)& (0+255),b	;volatile
 19398  0070A8                     l24786:
 19399                           
 19400                           ;controlMemory_MC50.c: 172:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryP * 16),(ch
      +                          ar*)&var_sys_NVM,16);
 19401  0070A8  0E00               	movlw	0
 19402  0070AA  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19403  0070AC  0E00               	movlw	0
 19404  0070AE  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19405  0070B0  0E98               	movlw	low _var_sys_NVM
 19406  0070B2  6E24               	movwf	i2c_readDataBlock@data^0,c
 19407  0070B4  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19408  0070B6  0E00               	movlw	0
 19409  0070B8  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19410  0070BA  0E10               	movlw	16
 19411  0070BC  6E26               	movwf	i2c_readDataBlock@len^0,c
 19412  0070BE  0E50               	movlw	80
 19413  0070C0  EC40  F045         	call	_i2c_readDataBlock
 19414                           
 19415                           ;controlMemory_MC50.c: 173:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryE * 16),(ch
      +                          ar*)&var_sys_NVM.homemPresente, 16);
 19416  0070C4  0E00               	movlw	0
 19417  0070C6  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19418  0070C8  0E10               	movlw	16
 19419  0070CA  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19420  0070CC  0EA8               	movlw	low (_var_sys_NVM+16)
 19421  0070CE  6E24               	movwf	i2c_readDataBlock@data^0,c
 19422  0070D0  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19423  0070D2  0E00               	movlw	0
 19424  0070D4  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19425  0070D6  0E10               	movlw	16
 19426  0070D8  6E26               	movwf	i2c_readDataBlock@len^0,c
 19427  0070DA  0E50               	movlw	80
 19428  0070DC  EC40  F045         	call	_i2c_readDataBlock
 19429                           
 19430                           ;controlMemory_MC50.c: 174:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryCounters * 
      +                          16),(char*)&var_sys_NVM.positionRemotesFull,16);
 19431  0070E0  0E00               	movlw	0
 19432  0070E2  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19433  0070E4  0E20               	movlw	32
 19434  0070E6  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19435  0070E8  0EB8               	movlw	low (_var_sys_NVM+32)
 19436  0070EA  6E24               	movwf	i2c_readDataBlock@data^0,c
 19437  0070EC  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19438  0070EE  0E00               	movlw	0
 19439  0070F0  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19440  0070F2  0E10               	movlw	16
 19441  0070F4  6E26               	movwf	i2c_readDataBlock@len^0,c
 19442  0070F6  0E50               	movlw	80
 19443  0070F8  EC40  F045         	call	_i2c_readDataBlock
 19444                           
 19445                           ;controlMemory_MC50.c: 175:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryLearningVar
      +                          s * 16),(char*)&var_sys_NVM.learningCurrentNormalClose, 16);
 19446  0070FC  0E00               	movlw	0
 19447  0070FE  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19448  007100  0E30               	movlw	48
 19449  007102  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19450  007104  0EC8               	movlw	low (_var_sys_NVM+48)
 19451  007106  6E24               	movwf	i2c_readDataBlock@data^0,c
 19452  007108  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19453  00710A  0E00               	movlw	0
 19454  00710C  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19455  00710E  0E10               	movlw	16
 19456  007110  6E26               	movwf	i2c_readDataBlock@len^0,c
 19457  007112  0E50               	movlw	80
 19458  007114  EC40  F045         	call	_i2c_readDataBlock
 19459                           
 19460                           ;controlMemory_MC50.c: 178:     checkNVM_VarSystem();
 19461  007118  EC7C  F030         	call	_checkNVM_VarSystem	;wreg free
 19462                           
 19463                           ;controlMemory_MC50.c: 180:     var_sys.actualCounterMoves=var_sys_NVM.counterMoves;
 19464  00711C  C0BA  F13C         	movff	_var_sys_NVM+34,_var_sys+60	;volatile
 19465  007120  C0BB  F13D         	movff	_var_sys_NVM+35,_var_sys+61	;volatile
 19466  007124  C0BC  F13E         	movff	_var_sys_NVM+36,_var_sys+62	;volatile
 19467  007128  C0BD  F13F         	movff	_var_sys_NVM+37,_var_sys+63	;volatile
 19468  00712C  0012               	return		;funcret
 19469  00712E                     __end_of_loadNVM_VarSystem:
 19470                           	callstack 0
 19471                           
 19472 ;; *************** function _checkNVM_VarSystem *****************
 19473 ;; Defined at:
 19474 ;;		line 326 in file "controlMemory_MC50.c"
 19475 ;; Parameters:    Size  Location     Type
 19476 ;;		None
 19477 ;; Auto vars:     Size  Location     Type
 19478 ;;  saveParam       1   57[COMRAM] unsigned char 
 19479 ;; Return value:  Size  Location     Type
 19480 ;;                  1    wreg      void 
 19481 ;; Registers used:
 19482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19483 ;; Tracked objects:
 19484 ;;		On entry : 0/2
 19485 ;;		On exit  : 0/0
 19486 ;;		Unchanged: 0/0
 19487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19489 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19491 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19492 ;;Total ram usage:        1 bytes
 19493 ;; Hardware stack levels used: 1
 19494 ;; Hardware stack levels required when called: 14
 19495 ;; This function calls:
 19496 ;;		_SaveNVM_VarSystem
 19497 ;; This function is called by:
 19498 ;;		_loadNVM_VarSystem
 19499 ;; This function uses a non-reentrant model
 19500 ;;
 19501                           
 19502                           	psect	text70
 19503  0060F8                     __ptext70:
 19504                           	callstack 0
 19505  0060F8                     _checkNVM_VarSystem:
 19506                           	callstack 15
 19507                           
 19508                           ;controlMemory_MC50.c: 328:     char saveParam;;controlMemory_MC50.c: 331:     saveParam
      +                           = 0;
 19509                           
 19510                           ;incstack = 0
 19511  0060F8  0E00               	movlw	0
 19512  0060FA  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19513                           
 19514                           ;controlMemory_MC50.c: 339:     if ( var_sys_NVM.decelarationOpen>45 )
 19515  0060FC  0E2D               	movlw	45
 19516  0060FE  0100               	movlb	0	; () banked
 19517  006100  6598               	cpfsgt	_var_sys_NVM& (0+255),b	;volatile
 19518  006102  D004               	goto	l23070
 19519                           
 19520                           ; BSR set to: 0
 19521                           ;controlMemory_MC50.c: 340:     {;controlMemory_MC50.c: 342:         var_sys_NVM.decelar
      +                          ationOpen = 3;
 19522  006104  0E03               	movlw	3
 19523  006106  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 19524                           
 19525                           ;controlMemory_MC50.c: 343:         saveParam=1;
 19526  006108  0E01               	movlw	1
 19527  00610A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19528  00610C                     l23070:
 19529                           
 19530                           ; BSR set to: 0
 19531                           ;controlMemory_MC50.c: 346:     if ( var_sys_NVM.decelarationClose>45 )
 19532  00610C  0E2D               	movlw	45
 19533  00610E  6599               	cpfsgt	(_var_sys_NVM+1)& (0+255),b	;volatile
 19534  006110  D004               	goto	l1495
 19535                           
 19536                           ; BSR set to: 0
 19537                           ;controlMemory_MC50.c: 347:     {;controlMemory_MC50.c: 349:         var_sys_NVM.decelar
      +                          ationClose = 3;
 19538  006112  0E03               	movlw	3
 19539  006114  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 19540                           
 19541                           ;controlMemory_MC50.c: 350:         saveParam=1;
 19542  006116  0E01               	movlw	1
 19543  006118  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19544  00611A                     l1495:
 19545                           
 19546                           ; BSR set to: 0
 19547                           ;controlMemory_MC50.c: 353:     if ( (var_sys_NVM.motorPower<1) || (var_sys_NVM.motorPow
      +                          er>9) )
 19548  00611A  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 19549  00611C  B4D8               	btfsc	status,2,c
 19550  00611E  D003               	goto	u26550
 19551                           
 19552                           ; BSR set to: 0
 19553  006120  0E09               	movlw	9
 19554  006122  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 19555  006124  D004               	goto	l23078
 19556  006126                     u26550:
 19557                           
 19558                           ; BSR set to: 0
 19559                           ;controlMemory_MC50.c: 354:     {;controlMemory_MC50.c: 356:         var_sys_NVM.motorPo
      +                          wer = 9;
 19560  006126  0E09               	movlw	9
 19561  006128  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 19562                           
 19563                           ;controlMemory_MC50.c: 357:         saveParam=1;
 19564  00612A  0E01               	movlw	1
 19565  00612C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19566  00612E                     l23078:
 19567                           
 19568                           ; BSR set to: 0
 19569                           ;controlMemory_MC50.c: 360:     if ( var_sys_NVM.motorSensitivity>9 )
 19570  00612E  0E09               	movlw	9
 19571  006130  659B               	cpfsgt	(_var_sys_NVM+3)& (0+255),b	;volatile
 19572  006132  D004               	goto	l23082
 19573                           
 19574                           ; BSR set to: 0
 19575                           ;controlMemory_MC50.c: 361:     {;controlMemory_MC50.c: 363:         var_sys_NVM.motorSe
      +                          nsitivity = 0;
 19576  006134  0E00               	movlw	0
 19577  006136  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 19578                           
 19579                           ;controlMemory_MC50.c: 364:         saveParam=1;
 19580  006138  0E01               	movlw	1
 19581  00613A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19582  00613C                     l23082:
 19583                           
 19584                           ; BSR set to: 0
 19585                           ;controlMemory_MC50.c: 367:     if ( var_sys_NVM.walkTime>99 )
 19586  00613C  0E63               	movlw	99
 19587  00613E  659C               	cpfsgt	(_var_sys_NVM+4)& (0+255),b	;volatile
 19588  006140  D004               	goto	l23086
 19589                           
 19590                           ; BSR set to: 0
 19591                           ;controlMemory_MC50.c: 368:     {;controlMemory_MC50.c: 370:         var_sys_NVM.walkTim
      +                          e = 10;
 19592  006142  0E0A               	movlw	10
 19593  006144  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 19594                           
 19595                           ;controlMemory_MC50.c: 371:         saveParam=1;
 19596  006146  0E01               	movlw	1
 19597  006148  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19598  00614A                     l23086:
 19599                           
 19600                           ; BSR set to: 0
 19601                           ;controlMemory_MC50.c: 374:     if ( var_sys_NVM.autoTimeFullClose>99 )
 19602  00614A  0E63               	movlw	99
 19603  00614C  659D               	cpfsgt	(_var_sys_NVM+5)& (0+255),b	;volatile
 19604  00614E  D004               	goto	l23090
 19605                           
 19606                           ; BSR set to: 0
 19607                           ;controlMemory_MC50.c: 375:     {;controlMemory_MC50.c: 377:         var_sys_NVM.autoTim
      +                          eFullClose = 0;
 19608  006150  0E00               	movlw	0
 19609  006152  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 19610                           
 19611                           ;controlMemory_MC50.c: 378:         saveParam=1;
 19612  006154  0E01               	movlw	1
 19613  006156  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19614  006158                     l23090:
 19615                           
 19616                           ; BSR set to: 0
 19617                           ;controlMemory_MC50.c: 381:     if ( var_sys_NVM.autoTimeWalkClose>99 )
 19618  006158  0E63               	movlw	99
 19619  00615A  659E               	cpfsgt	(_var_sys_NVM+6)& (0+255),b	;volatile
 19620  00615C  D004               	goto	l23094
 19621                           
 19622                           ; BSR set to: 0
 19623                           ;controlMemory_MC50.c: 382:     {;controlMemory_MC50.c: 384:         var_sys_NVM.autoTim
      +                          eWalkClose = 0;
 19624  00615E  0E00               	movlw	0
 19625  006160  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 19626                           
 19627                           ;controlMemory_MC50.c: 385:         saveParam=1;
 19628  006162  0E01               	movlw	1
 19629  006164  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19630  006166                     l23094:
 19631                           
 19632                           ; BSR set to: 0
 19633                           ;controlMemory_MC50.c: 388:     if ( var_sys_NVM.photoCellIsON>1 )
 19634  006166  0E01               	movlw	1
 19635  006168  659F               	cpfsgt	(_var_sys_NVM+7)& (0+255),b	;volatile
 19636  00616A  D004               	goto	l23098
 19637                           
 19638                           ; BSR set to: 0
 19639                           ;controlMemory_MC50.c: 389:     {;controlMemory_MC50.c: 391:         var_sys_NVM.photoCe
      +                          llIsON = 0;
 19640  00616C  0E00               	movlw	0
 19641  00616E  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 19642                           
 19643                           ;controlMemory_MC50.c: 392:         saveParam=1;
 19644  006170  0E01               	movlw	1
 19645  006172  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19646  006174                     l23098:
 19647                           
 19648                           ; BSR set to: 0
 19649                           ;controlMemory_MC50.c: 395:     if ( var_sys_NVM.photoCellInOpen>1 )
 19650  006174  0E01               	movlw	1
 19651  006176  65A0               	cpfsgt	(_var_sys_NVM+8)& (0+255),b	;volatile
 19652  006178  D004               	goto	l23102
 19653                           
 19654                           ; BSR set to: 0
 19655                           ;controlMemory_MC50.c: 396:     {;controlMemory_MC50.c: 398:         var_sys_NVM.photoCe
      +                          llInOpen = 0;
 19656  00617A  0E00               	movlw	0
 19657  00617C  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 19658                           
 19659                           ;controlMemory_MC50.c: 399:         saveParam=1;
 19660  00617E  0E01               	movlw	1
 19661  006180  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19662  006182                     l23102:
 19663                           
 19664                           ; BSR set to: 0
 19665                           ;controlMemory_MC50.c: 402:     if ( var_sys_NVM.securityBandIsON>1 )
 19666  006182  0E01               	movlw	1
 19667  006184  65A1               	cpfsgt	(_var_sys_NVM+9)& (0+255),b	;volatile
 19668  006186  D004               	goto	l23106
 19669                           
 19670                           ; BSR set to: 0
 19671                           ;controlMemory_MC50.c: 403:     {;controlMemory_MC50.c: 405:         var_sys_NVM.securit
      +                          yBandIsON = 0 ;
 19672  006188  0E00               	movlw	0
 19673  00618A  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 19674                           
 19675                           ;controlMemory_MC50.c: 406:         saveParam=1;
 19676  00618C  0E01               	movlw	1
 19677  00618E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19678  006190                     l23106:
 19679                           
 19680                           ; BSR set to: 0
 19681                           ;controlMemory_MC50.c: 409:     if ( var_sys_NVM.securityBandType>1 )
 19682  006190  0E01               	movlw	1
 19683  006192  65A2               	cpfsgt	(_var_sys_NVM+10)& (0+255),b	;volatile
 19684  006194  D004               	goto	l23110
 19685                           
 19686                           ; BSR set to: 0
 19687                           ;controlMemory_MC50.c: 410:     {;controlMemory_MC50.c: 412:         var_sys_NVM.securit
      +                          yBandType = 1;
 19688  006196  0E01               	movlw	1
 19689  006198  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 19690                           
 19691                           ;controlMemory_MC50.c: 413:         saveParam=1;
 19692  00619A  0E01               	movlw	1
 19693  00619C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19694  00619E                     l23110:
 19695                           
 19696                           ; BSR set to: 0
 19697                           ;controlMemory_MC50.c: 416:     if ( var_sys_NVM.securityBandInOpen>1 )
 19698  00619E  0E01               	movlw	1
 19699  0061A0  65A3               	cpfsgt	(_var_sys_NVM+11)& (0+255),b	;volatile
 19700  0061A2  D004               	goto	l23114
 19701                           
 19702                           ; BSR set to: 0
 19703                           ;controlMemory_MC50.c: 417:     {;controlMemory_MC50.c: 419:         var_sys_NVM.securit
      +                          yBandInOpen = 0;
 19704  0061A4  0E00               	movlw	0
 19705  0061A6  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 19706                           
 19707                           ;controlMemory_MC50.c: 420:         saveParam=1;
 19708  0061A8  0E01               	movlw	1
 19709  0061AA  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19710  0061AC                     l23114:
 19711                           
 19712                           ; BSR set to: 0
 19713                           ;controlMemory_MC50.c: 423:     if ( var_sys_NVM.operationMode>2 )
 19714  0061AC  0E02               	movlw	2
 19715  0061AE  65A4               	cpfsgt	(_var_sys_NVM+12)& (0+255),b	;volatile
 19716  0061B0  D004               	goto	l23118
 19717                           
 19718                           ; BSR set to: 0
 19719                           ;controlMemory_MC50.c: 424:     {;controlMemory_MC50.c: 426:         var_sys_NVM.operati
      +                          onMode = 0;
 19720  0061B2  0E00               	movlw	0
 19721  0061B4  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 19722                           
 19723                           ;controlMemory_MC50.c: 427:         saveParam=1;
 19724  0061B6  0E01               	movlw	1
 19725  0061B8  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19726  0061BA                     l23118:
 19727                           
 19728                           ; BSR set to: 0
 19729                           ;controlMemory_MC50.c: 430:     if ( var_sys_NVM.flashLightMode>3 )
 19730  0061BA  0E03               	movlw	3
 19731  0061BC  65A5               	cpfsgt	(_var_sys_NVM+13)& (0+255),b	;volatile
 19732  0061BE  D004               	goto	l23122
 19733                           
 19734                           ; BSR set to: 0
 19735                           ;controlMemory_MC50.c: 431:     {;controlMemory_MC50.c: 433:         var_sys_NVM.flashLi
      +                          ghtMode = 0;
 19736  0061C0  0E00               	movlw	0
 19737  0061C2  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 19738                           
 19739                           ;controlMemory_MC50.c: 434:         saveParam=1;
 19740  0061C4  0E01               	movlw	1
 19741  0061C6  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19742  0061C8                     l23122:
 19743                           
 19744                           ; BSR set to: 0
 19745                           ;controlMemory_MC50.c: 437:     if ( var_sys_NVM.programmingDistance>1 )
 19746  0061C8  0E01               	movlw	1
 19747  0061CA  65A6               	cpfsgt	(_var_sys_NVM+14)& (0+255),b	;volatile
 19748  0061CC  D004               	goto	l23126
 19749                           
 19750                           ; BSR set to: 0
 19751                           ;controlMemory_MC50.c: 438:     {;controlMemory_MC50.c: 440:         var_sys_NVM.program
      +                          mingDistance = 0;
 19752  0061CE  0E00               	movlw	0
 19753  0061D0  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 19754                           
 19755                           ;controlMemory_MC50.c: 441:         saveParam=1;
 19756  0061D2  0E01               	movlw	1
 19757  0061D4  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19758  0061D6                     l23126:
 19759                           
 19760                           ; BSR set to: 0
 19761                           ;controlMemory_MC50.c: 444:     if ( var_sys_NVM.decelarationSensivity>9 )
 19762  0061D6  0E09               	movlw	9
 19763  0061D8  65A7               	cpfsgt	(_var_sys_NVM+15)& (0+255),b	;volatile
 19764  0061DA  D004               	goto	l23130
 19765                           
 19766                           ; BSR set to: 0
 19767                           ;controlMemory_MC50.c: 445:     {;controlMemory_MC50.c: 447:         var_sys_NVM.decelar
      +                          ationSensivity = 0;
 19768  0061DC  0E00               	movlw	0
 19769  0061DE  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 19770                           
 19771                           ;controlMemory_MC50.c: 448:         saveParam=1;
 19772  0061E0  0E01               	movlw	1
 19773  0061E2  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19774  0061E4                     l23130:
 19775                           
 19776                           ; BSR set to: 0
 19777                           ;controlMemory_MC50.c: 453:     if ( var_sys_NVM.homemPresente>2 )
 19778  0061E4  0E02               	movlw	2
 19779  0061E6  65A8               	cpfsgt	(_var_sys_NVM+16)& (0+255),b	;volatile
 19780  0061E8  D004               	goto	l23134
 19781                           
 19782                           ; BSR set to: 0
 19783                           ;controlMemory_MC50.c: 454:     {;controlMemory_MC50.c: 456:         var_sys_NVM.homemPr
      +                          esente = 0;
 19784  0061EA  0E00               	movlw	0
 19785  0061EC  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 19786                           
 19787                           ;controlMemory_MC50.c: 457:         saveParam=1;
 19788  0061EE  0E01               	movlw	1
 19789  0061F0  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19790  0061F2                     l23134:
 19791                           
 19792                           ; BSR set to: 0
 19793                           ;controlMemory_MC50.c: 460:     if ( var_sys_NVM.logicDigital>1 )
 19794  0061F2  0E01               	movlw	1
 19795  0061F4  65A9               	cpfsgt	(_var_sys_NVM+17)& (0+255),b	;volatile
 19796  0061F6  D004               	goto	l23138
 19797                           
 19798                           ; BSR set to: 0
 19799                           ;controlMemory_MC50.c: 461:     {;controlMemory_MC50.c: 463:         var_sys_NVM.logicDi
      +                          gital = 0;
 19800  0061F8  0E00               	movlw	0
 19801  0061FA  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 19802                           
 19803                           ;controlMemory_MC50.c: 464:         saveParam=1;
 19804  0061FC  0E01               	movlw	1
 19805  0061FE  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19806  006200                     l23138:
 19807                           
 19808                           ; BSR set to: 0
 19809                           ;controlMemory_MC50.c: 467:     if ( var_sys_NVM.softStart>9 )
 19810  006200  0E09               	movlw	9
 19811  006202  65AA               	cpfsgt	(_var_sys_NVM+18)& (0+255),b	;volatile
 19812  006204  D004               	goto	l23142
 19813                           
 19814                           ; BSR set to: 0
 19815                           ;controlMemory_MC50.c: 468:     {;controlMemory_MC50.c: 470:         var_sys_NVM.softSta
      +                          rt = 0;
 19816  006206  0E00               	movlw	0
 19817  006208  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 19818                           
 19819                           ;controlMemory_MC50.c: 471:         saveParam=1;
 19820  00620A  0E01               	movlw	1
 19821  00620C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19822  00620E                     l23142:
 19823                           
 19824                           ; BSR set to: 0
 19825                           ;controlMemory_MC50.c: 475:     if ( var_sys_NVM.ligthTime>99 )
 19826  00620E  0E63               	movlw	99
 19827  006210  65AC               	cpfsgt	(_var_sys_NVM+20)& (0+255),b	;volatile
 19828  006212  D004               	goto	l23146
 19829                           
 19830                           ; BSR set to: 0
 19831                           ;controlMemory_MC50.c: 476:     {;controlMemory_MC50.c: 478:         var_sys_NVM.ligthTi
      +                          me = 3;
 19832  006214  0E03               	movlw	3
 19833  006216  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 19834                           
 19835                           ;controlMemory_MC50.c: 479:         saveParam=1;
 19836  006218  0E01               	movlw	1
 19837  00621A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19838  00621C                     l23146:
 19839                           
 19840                           ; BSR set to: 0
 19841                           ;controlMemory_MC50.c: 482:     if ( var_sys_NVM.folow_me>9 )
 19842  00621C  0E09               	movlw	9
 19843  00621E  65AD               	cpfsgt	(_var_sys_NVM+21)& (0+255),b	;volatile
 19844  006220  D004               	goto	l23150
 19845                           
 19846                           ; BSR set to: 0
 19847                           ;controlMemory_MC50.c: 483:     {;controlMemory_MC50.c: 485:         var_sys_NVM.folow_m
      +                          e = 0;
 19848  006222  0E00               	movlw	0
 19849  006224  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 19850                           
 19851                           ;controlMemory_MC50.c: 486:         saveParam=1;
 19852  006226  0E01               	movlw	1
 19853  006228  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19854  00622A                     l23150:
 19855                           
 19856                           ; BSR set to: 0
 19857                           ;controlMemory_MC50.c: 491:     if ( var_sys_NVM.electricBrake>1 )
 19858  00622A  0E01               	movlw	1
 19859  00622C  65AF               	cpfsgt	(_var_sys_NVM+23)& (0+255),b	;volatile
 19860  00622E  D004               	goto	l1517
 19861                           
 19862                           ; BSR set to: 0
 19863                           ;controlMemory_MC50.c: 492:     {;controlMemory_MC50.c: 494:         var_sys_NVM.electri
      +                          cBrake = 0;
 19864  006230  0E00               	movlw	0
 19865  006232  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 19866                           
 19867                           ;controlMemory_MC50.c: 495:         saveParam=1;
 19868  006234  0E01               	movlw	1
 19869  006236  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19870  006238                     l1517:
 19871                           
 19872                           ; BSR set to: 0
 19873                           ;controlMemory_MC50.c: 498:     if ( (var_sys_NVM.velocityDecelaration<1) || (var_sys_NV
      +                          M.velocityDecelaration>9) )
 19874  006238  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 19875  00623A  B4D8               	btfsc	status,2,c
 19876  00623C  D003               	goto	u26760
 19877                           
 19878                           ; BSR set to: 0
 19879  00623E  0E09               	movlw	9
 19880  006240  65B0               	cpfsgt	(_var_sys_NVM+24)& (0+255),b	;volatile
 19881  006242  D004               	goto	l23158
 19882  006244                     u26760:
 19883                           
 19884                           ; BSR set to: 0
 19885                           ;controlMemory_MC50.c: 499:     {;controlMemory_MC50.c: 501:         var_sys_NVM.velocit
      +                          yDecelaration = 5;
 19886  006244  0E05               	movlw	5
 19887  006246  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 19888                           
 19889                           ;controlMemory_MC50.c: 502:         saveParam=1;
 19890  006248  0E01               	movlw	1
 19891  00624A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19892  00624C                     l23158:
 19893                           
 19894                           ; BSR set to: 0
 19895                           ;controlMemory_MC50.c: 505:     if ( var_sys_NVM.flashRGBMode>3 )
 19896  00624C  0E03               	movlw	3
 19897  00624E  65B1               	cpfsgt	(_var_sys_NVM+25)& (0+255),b	;volatile
 19898  006250  D004               	goto	l23162
 19899                           
 19900                           ; BSR set to: 0
 19901                           ;controlMemory_MC50.c: 506:     {;controlMemory_MC50.c: 508:         var_sys_NVM.flashRG
      +                          BMode = 3;
 19902  006252  0E03               	movlw	3
 19903  006254  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 19904                           
 19905                           ;controlMemory_MC50.c: 509:         saveParam=1;
 19906  006256  0E01               	movlw	1
 19907  006258  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19908  00625A                     l23162:
 19909                           
 19910                           ; BSR set to: 0
 19911                           ;controlMemory_MC50.c: 511:         if ( var_sys_NVM.Stopboton > 1 )
 19912  00625A  0E01               	movlw	1
 19913  00625C  65AE               	cpfsgt	(_var_sys_NVM+22)& (0+255),b	;volatile
 19914  00625E  D004               	goto	l23166
 19915                           
 19916                           ; BSR set to: 0
 19917                           ;controlMemory_MC50.c: 512:     {;controlMemory_MC50.c: 514:         var_sys_NVM.Stopbot
      +                          on = 0 ;
 19918  006260  0E00               	movlw	0
 19919  006262  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 19920                           
 19921                           ;controlMemory_MC50.c: 515:         saveParam=1;
 19922  006264  0E01               	movlw	1
 19923  006266  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19924  006268                     l23166:
 19925                           
 19926                           ; BSR set to: 0
 19927                           ;controlMemory_MC50.c: 517:         if ( var_sys_NVM.Direction_motor>1 )
 19928  006268  0E01               	movlw	1
 19929  00626A  65B3               	cpfsgt	(_var_sys_NVM+27)& (0+255),b	;volatile
 19930  00626C  D004               	goto	l23170
 19931                           
 19932                           ; BSR set to: 0
 19933                           ;controlMemory_MC50.c: 518:     {;controlMemory_MC50.c: 520:         var_sys_NVM.Directi
      +                          on_motor = 1;
 19934  00626E  0E01               	movlw	1
 19935  006270  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 19936                           
 19937                           ;controlMemory_MC50.c: 521:         saveParam=1;
 19938  006272  0E01               	movlw	1
 19939  006274  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19940  006276                     l23170:
 19941                           
 19942                           ; BSR set to: 0
 19943                           ;controlMemory_MC50.c: 523:         if ( var_sys_NVM.softstop>9 )
 19944  006276  0E09               	movlw	9
 19945  006278  65AB               	cpfsgt	(_var_sys_NVM+19)& (0+255),b	;volatile
 19946  00627A  D004               	goto	l1524
 19947                           
 19948                           ; BSR set to: 0
 19949                           ;controlMemory_MC50.c: 524:     {;controlMemory_MC50.c: 526:         var_sys_NVM.softsto
      +                          p = 0;
 19950  00627C  0E00               	movlw	0
 19951  00627E  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 19952                           
 19953                           ;controlMemory_MC50.c: 527:         saveParam=1;
 19954  006280  0E01               	movlw	1
 19955  006282  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19956  006284                     l1524:
 19957                           
 19958                           ; BSR set to: 0
 19959                           ;controlMemory_MC50.c: 552:     if ( saveParam != 0 )
 19960  006284  503A               	movf	checkNVM_VarSystem@saveParam^0,w,c
 19961  006286  B4D8               	btfsc	status,2,c
 19962  006288  0012               	return	
 19963                           
 19964                           ; BSR set to: 0
 19965                           ;controlMemory_MC50.c: 553:     {;controlMemory_MC50.c: 554:         SaveNVM_VarSystem(p
      +                          ageMemoryP);
 19966  00628A  0E00               	movlw	0
 19967  00628C  EC05  F04C         	call	_SaveNVM_VarSystem
 19968                           
 19969                           ;controlMemory_MC50.c: 555:         SaveNVM_VarSystem(pageMemoryE);
 19970  006290  0E01               	movlw	1
 19971  006292  EC05  F04C         	call	_SaveNVM_VarSystem
 19972  006296  0012               	return		;funcret
 19973  006298                     __end_of_checkNVM_VarSystem:
 19974                           	callstack 0
 19975                           
 19976 ;; *************** function _ResetDefaultMemory *****************
 19977 ;; Defined at:
 19978 ;;		line 198 in file "controlMemory_MC50.c"
 19979 ;; Parameters:    Size  Location     Type
 19980 ;;  type            1    wreg     unsigned char 
 19981 ;; Auto vars:     Size  Location     Type
 19982 ;;  type            1   57[COMRAM] unsigned char 
 19983 ;; Return value:  Size  Location     Type
 19984 ;;                  1    wreg      void 
 19985 ;; Registers used:
 19986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19987 ;; Tracked objects:
 19988 ;;		On entry : 31/0
 19989 ;;		On exit  : 0/0
 19990 ;;		Unchanged: 0/0
 19991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19993 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19995 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19996 ;;Total ram usage:        1 bytes
 19997 ;; Hardware stack levels used: 1
 19998 ;; Hardware stack levels required when called: 14
 19999 ;; This function calls:
 20000 ;;		_SaveNVM_VarSystem
 20001 ;; This function is called by:
 20002 ;;		_loadNVM_VarSystem
 20003 ;;		_sm_execute_menuConfiguration
 20004 ;; This function uses a non-reentrant model
 20005 ;;
 20006                           
 20007                           	psect	text71
 20008  0068FE                     __ptext71:
 20009                           	callstack 0
 20010  0068FE                     _ResetDefaultMemory:
 20011                           	callstack 14
 20012                           
 20013                           ;incstack = 0
 20014                           ;ResetDefaultMemory@type stored from wreg
 20015  0068FE  6E3A               	movwf	ResetDefaultMemory@type^0,c
 20016                           
 20017                           ;controlMemory_MC50.c: 198: void ResetDefaultMemory(unsigned char type);controlMemory_MC
      +                          50.c: 199: {;controlMemory_MC50.c: 202:     var_sys_NVM.decelarationOpen = 3;
 20018  006900  0E03               	movlw	3
 20019  006902  0100               	movlb	0	; () banked
 20020  006904  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20021                           
 20022                           ;controlMemory_MC50.c: 203:     var_sys_NVM.motorPower = 9;
 20023  006906  0E09               	movlw	9
 20024  006908  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 20025                           
 20026                           ;controlMemory_MC50.c: 204:     var_sys_NVM.decelarationClose = 3;
 20027  00690A  0E03               	movlw	3
 20028  00690C  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20029                           
 20030                           ;controlMemory_MC50.c: 205:     var_sys_NVM.photoCellIsON = 0;
 20031  00690E  0E00               	movlw	0
 20032  006910  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 20033                           
 20034                           ;controlMemory_MC50.c: 206:     var_sys_NVM.photoCellInOpen = 0;
 20035  006912  0E00               	movlw	0
 20036  006914  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 20037                           
 20038                           ;controlMemory_MC50.c: 207:     var_sys_NVM.securityBandIsON = 0 ;
 20039  006916  0E00               	movlw	0
 20040  006918  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 20041                           
 20042                           ;controlMemory_MC50.c: 208:     var_sys_NVM.securityBandType = 1;
 20043  00691A  0E01               	movlw	1
 20044  00691C  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 20045                           
 20046                           ;controlMemory_MC50.c: 209:     var_sys_NVM.securityBandInOpen = 0;
 20047  00691E  0E00               	movlw	0
 20048  006920  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 20049                           
 20050                           ;controlMemory_MC50.c: 210:     var_sys_NVM.flashLightMode = 0;
 20051  006922  0E00               	movlw	0
 20052  006924  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 20053                           
 20054                           ;controlMemory_MC50.c: 211:     var_sys_NVM.programmingDistance = 0;
 20055  006926  0E00               	movlw	0
 20056  006928  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 20057                           
 20058                           ;controlMemory_MC50.c: 212:     var_sys_NVM.decelarationSensivity = 0;
 20059  00692A  0E00               	movlw	0
 20060  00692C  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 20061                           
 20062                           ;controlMemory_MC50.c: 213:     var_sys_NVM.homemPresente = 0;
 20063  00692E  0E00               	movlw	0
 20064  006930  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 20065                           
 20066                           ;controlMemory_MC50.c: 214:     var_sys_NVM.autoTimeWalkClose = 0;
 20067  006932  0E00               	movlw	0
 20068  006934  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20069                           
 20070                           ;controlMemory_MC50.c: 215:     var_sys_NVM.ligthTime = 3;
 20071  006936  0E03               	movlw	3
 20072  006938  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 20073                           
 20074                           ;controlMemory_MC50.c: 216:     var_sys_NVM.folow_me = 0;
 20075  00693A  0E00               	movlw	0
 20076  00693C  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 20077                           
 20078                           ;controlMemory_MC50.c: 217:     var_sys_NVM.electricBrake = 0;
 20079  00693E  0E00               	movlw	0
 20080  006940  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 20081                           
 20082                           ;controlMemory_MC50.c: 218:     var_sys_NVM.autoTimeWalkClose = 0;
 20083  006942  0E00               	movlw	0
 20084  006944  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20085                           
 20086                           ;controlMemory_MC50.c: 219:     var_sys_NVM.Direction_motor = 1 ;
 20087  006946  0E01               	movlw	1
 20088  006948  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20089                           
 20090                           ; BSR set to: 0
 20091                           ;controlMemory_MC50.c: 222:     if (type == SC){
 20092  00694A  503A               	movf	ResetDefaultMemory@type^0,w,c
 20093  00694C  A4D8               	btfss	status,2,c
 20094  00694E  D014               	goto	l21388
 20095                           
 20096                           ; BSR set to: 0
 20097                           ;controlMemory_MC50.c: 224:         var_sys_NVM.motorSensitivity = 0;
 20098  006950  0E00               	movlw	0
 20099  006952  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20100                           
 20101                           ;controlMemory_MC50.c: 225:         var_sys_NVM.logicDigital = 0;
 20102  006954  0E00               	movlw	0
 20103  006956  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20104                           
 20105                           ;controlMemory_MC50.c: 226:         var_sys_NVM.Stopboton = 0;
 20106  006958  0E00               	movlw	0
 20107  00695A  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20108                           
 20109                           ;controlMemory_MC50.c: 227:         var_sys_NVM.autoTimeFullClose = 0;
 20110  00695C  0E00               	movlw	0
 20111  00695E  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20112                           
 20113                           ;controlMemory_MC50.c: 228:         var_sys_NVM.operationMode = 0;
 20114  006960  0E00               	movlw	0
 20115  006962  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20116                           
 20117                           ;controlMemory_MC50.c: 229:         var_sys_NVM.velocityDecelaration = 5;
 20118  006964  0E05               	movlw	5
 20119  006966  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20120                           
 20121                           ;controlMemory_MC50.c: 230:         var_sys_NVM.flashRGBMode = 3;
 20122  006968  0E03               	movlw	3
 20123  00696A  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20124                           
 20125                           ;controlMemory_MC50.c: 231:         var_sys_NVM.softstop = 0;
 20126  00696C  0E00               	movlw	0
 20127  00696E  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20128                           
 20129                           ;controlMemory_MC50.c: 232:         var_sys_NVM.softStart = 0;
 20130  006970  0E00               	movlw	0
 20131  006972  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20132                           
 20133                           ;controlMemory_MC50.c: 233:         var_sys_NVM.walkTime = 10;
 20134  006974  0E0A               	movlw	10
 20135  006976  D039               	goto	L82
 20136  006978                     l21388:
 20137                           
 20138                           ; BSR set to: 0
 20139  006978  043A               	decf	ResetDefaultMemory@type^0,w,c
 20140  00697A  A4D8               	btfss	status,2,c
 20141  00697C  D01B               	goto	l21392
 20142                           
 20143                           ; BSR set to: 0
 20144                           ;controlMemory_MC50.c: 237:         var_sys_NVM.decelarationClose = 4;
 20145  00697E  0E04               	movlw	4
 20146  006980  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20147                           
 20148                           ;controlMemory_MC50.c: 238:         var_sys_NVM.decelarationOpen = 4;
 20149  006982  0E04               	movlw	4
 20150  006984  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20151                           
 20152                           ;controlMemory_MC50.c: 239:         var_sys_NVM.motorSensitivity = 4;
 20153  006986  0E04               	movlw	4
 20154  006988  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20155                           
 20156                           ;controlMemory_MC50.c: 240:         var_sys_NVM.logicDigital = 1;
 20157  00698A  0E01               	movlw	1
 20158  00698C  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20159                           
 20160                           ;controlMemory_MC50.c: 241:         var_sys_NVM.Stopboton = 1;
 20161  00698E  0E01               	movlw	1
 20162  006990  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20163                           
 20164                           ;controlMemory_MC50.c: 242:         var_sys_NVM.autoTimeFullClose = 0;
 20165  006992  0E00               	movlw	0
 20166  006994  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20167                           
 20168                           ;controlMemory_MC50.c: 243:         var_sys_NVM.operationMode = 0;
 20169  006996  0E00               	movlw	0
 20170  006998  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20171                           
 20172                           ;controlMemory_MC50.c: 244:         var_sys_NVM.velocityDecelaration = 5;
 20173  00699A  0E05               	movlw	5
 20174  00699C  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20175                           
 20176                           ;controlMemory_MC50.c: 245:         var_sys_NVM.flashRGBMode = 3;
 20177  00699E  0E03               	movlw	3
 20178  0069A0  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20179                           
 20180                           ;controlMemory_MC50.c: 246:         var_sys_NVM.softstop = 0;
 20181  0069A2  0E00               	movlw	0
 20182  0069A4  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20183                           
 20184                           ;controlMemory_MC50.c: 247:         var_sys_NVM.softStart = 5;
 20185  0069A6  0E05               	movlw	5
 20186  0069A8  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20187                           
 20188                           ;controlMemory_MC50.c: 248:         var_sys_NVM.walkTime = 0;
 20189  0069AA  0E00               	movlw	0
 20190  0069AC  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20191                           
 20192                           ;controlMemory_MC50.c: 249:         var_sys_NVM.Direction_motor = 0 ;
 20193  0069AE  0E00               	movlw	0
 20194  0069B0  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20195                           
 20196                           ;controlMemory_MC50.c: 251:     }
 20197  0069B2  D01C               	goto	l21396
 20198  0069B4                     l21392:
 20199                           
 20200                           ; BSR set to: 0
 20201  0069B4  0E02               	movlw	2
 20202  0069B6  183A               	xorwf	ResetDefaultMemory@type^0,w,c
 20203  0069B8  A4D8               	btfss	status,2,c
 20204  0069BA  D018               	goto	l21396
 20205                           
 20206                           ; BSR set to: 0
 20207                           ;controlMemory_MC50.c: 253:         var_sys_NVM.decelarationClose = 6;
 20208  0069BC  0E06               	movlw	6
 20209  0069BE  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20210                           
 20211                           ;controlMemory_MC50.c: 254:         var_sys_NVM.decelarationOpen = 2;
 20212  0069C0  0E02               	movlw	2
 20213  0069C2  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20214                           
 20215                           ;controlMemory_MC50.c: 255:         var_sys_NVM.motorSensitivity = 0;
 20216  0069C4  0E00               	movlw	0
 20217  0069C6  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20218                           
 20219                           ;controlMemory_MC50.c: 256:         var_sys_NVM.logicDigital = 0;
 20220  0069C8  0E00               	movlw	0
 20221  0069CA  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20222                           
 20223                           ;controlMemory_MC50.c: 257:         var_sys_NVM.Stopboton = 0;
 20224  0069CC  0E00               	movlw	0
 20225  0069CE  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20226                           
 20227                           ;controlMemory_MC50.c: 258:         var_sys_NVM.autoTimeFullClose = 0;
 20228  0069D0  0E00               	movlw	0
 20229  0069D2  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20230                           
 20231                           ;controlMemory_MC50.c: 259:         var_sys_NVM.operationMode = 2;
 20232  0069D4  0E02               	movlw	2
 20233  0069D6  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20234                           
 20235                           ;controlMemory_MC50.c: 260:         var_sys_NVM.velocityDecelaration = 5;
 20236  0069D8  0E05               	movlw	5
 20237  0069DA  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20238                           
 20239                           ;controlMemory_MC50.c: 261:         var_sys_NVM.flashRGBMode = 1;
 20240  0069DC  0E01               	movlw	1
 20241  0069DE  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20242                           
 20243                           ;controlMemory_MC50.c: 262:         var_sys_NVM.softstop = 5;
 20244  0069E0  0E05               	movlw	5
 20245  0069E2  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20246                           
 20247                           ;controlMemory_MC50.c: 263:         var_sys_NVM.softStart = 0;
 20248  0069E4  0E00               	movlw	0
 20249  0069E6  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20250                           
 20251                           ;controlMemory_MC50.c: 264:         var_sys_NVM.walkTime = 0;
 20252  0069E8  0E00               	movlw	0
 20253  0069EA                     L82:
 20254  0069EA  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20255  0069EC                     l21396:
 20256                           
 20257                           ; BSR set to: 0
 20258                           ;controlMemory_MC50.c: 272:     SaveNVM_VarSystem(pageMemoryE);
 20259  0069EC  0E01               	movlw	1
 20260  0069EE  EC05  F04C         	call	_SaveNVM_VarSystem
 20261                           
 20262                           ;controlMemory_MC50.c: 273:     SaveNVM_VarSystem(pageMemoryP);
 20263  0069F2  0E00               	movlw	0
 20264  0069F4  EC05  F04C         	call	_SaveNVM_VarSystem
 20265                           
 20266                           ;controlMemory_MC50.c: 278:     var_sys_NVM.learningTimeToClose = 0;
 20267  0069F8  0E00               	movlw	0
 20268  0069FA  0100               	movlb	0	; () banked
 20269  0069FC  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 20270  0069FE  0E00               	movlw	0
 20271  006A00  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 20272  006A02  0E00               	movlw	0
 20273  006A04  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 20274  006A06  0E00               	movlw	0
 20275  006A08  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 20276                           
 20277                           ;controlMemory_MC50.c: 279:     var_sys_NVM.learningTimeToOpen = 0;
 20278  006A0A  0E00               	movlw	0
 20279  006A0C  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 20280  006A0E  0E00               	movlw	0
 20281  006A10  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 20282  006A12  0E00               	movlw	0
 20283  006A14  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 20284  006A16  0E00               	movlw	0
 20285  006A18  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 20286                           
 20287                           ;controlMemory_MC50.c: 280:     var_sys_NVM.learningCurrentNormalClose = 0;
 20288  006A1A  0E00               	movlw	0
 20289  006A1C  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 20290  006A1E  0E00               	movlw	0
 20291  006A20  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 20292                           
 20293                           ;controlMemory_MC50.c: 281:     var_sys_NVM.learningCurrentNormalOpen = 0;
 20294  006A22  0E00               	movlw	0
 20295  006A24  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 20296  006A26  0E00               	movlw	0
 20297  006A28  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 20298                           
 20299                           ;controlMemory_MC50.c: 282:     var_sys_NVM.learningCurrentDecelarationClose = 0;
 20300  006A2A  0E00               	movlw	0
 20301  006A2C  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 20302  006A2E  0E00               	movlw	0
 20303  006A30  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 20304  006A32  0E00               	movlw	0
 20305  006A34  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 20306  006A36  0E00               	movlw	0
 20307  006A38  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 20308                           
 20309                           ;controlMemory_MC50.c: 283:     var_sys_NVM.learningCurrentDecelarationOpen = 0;
 20310  006A3A  0E00               	movlw	0
 20311  006A3C  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 20312  006A3E  0E00               	movlw	0
 20313  006A40  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 20314  006A42  0E00               	movlw	0
 20315  006A44  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 20316  006A46  0E00               	movlw	0
 20317  006A48  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 20318                           
 20319                           ; BSR set to: 0
 20320                           ;controlMemory_MC50.c: 289:     if ((PORTAbits.RA2 == 0) && (PORTAbits.RA1 == 0) && (POR
      +                          TBbits.RB0 == 0)&&(PORTAbits.RA5==0)){
 20321  006A4A  A48D               	btfss	141,2,c	;volatile
 20322                           
 20323                           ; BSR set to: 0
 20324  006A4C  B28D               	btfsc	141,1,c	;volatile
 20325  006A4E  D015               	goto	l21410
 20326                           
 20327                           ; BSR set to: 0
 20328  006A50  A08E               	btfss	142,0,c	;volatile
 20329                           
 20330                           ; BSR set to: 0
 20331  006A52  BA8D               	btfsc	141,5,c	;volatile
 20332  006A54  D012               	goto	l21410
 20333                           
 20334                           ; BSR set to: 0
 20335                           ;controlMemory_MC50.c: 290:      var_sys.actualCounterMoves = 0;
 20336  006A56  0E00               	movlw	0
 20337  006A58  0101               	movlb	1	; () banked
 20338  006A5A  6F3C               	movwf	(_var_sys+60)& (0+255),b	;volatile
 20339  006A5C  0E00               	movlw	0
 20340  006A5E  6F3D               	movwf	(_var_sys+61)& (0+255),b	;volatile
 20341  006A60  0E00               	movlw	0
 20342  006A62  6F3E               	movwf	(_var_sys+62)& (0+255),b	;volatile
 20343  006A64  0E00               	movlw	0
 20344  006A66  6F3F               	movwf	(_var_sys+63)& (0+255),b	;volatile
 20345                           
 20346                           ;controlMemory_MC50.c: 291:      var_sys_NVM.counterMoves = 0;
 20347  006A68  0E00               	movlw	0
 20348  006A6A  0100               	movlb	0	; () banked
 20349  006A6C  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 20350  006A6E  0E00               	movlw	0
 20351  006A70  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 20352  006A72  0E00               	movlw	0
 20353  006A74  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 20354  006A76  0E00               	movlw	0
 20355  006A78  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 20356  006A7A                     l21410:
 20357                           
 20358                           ; BSR set to: 0
 20359                           ;controlMemory_MC50.c: 296:     SaveNVM_VarSystem(pageMemoryCounters);
 20360  006A7A  0E02               	movlw	2
 20361  006A7C  EC05  F04C         	call	_SaveNVM_VarSystem
 20362                           
 20363                           ;controlMemory_MC50.c: 297:     SaveNVM_VarSystem(pageMemoryLearningVars);
 20364  006A80  0E03               	movlw	3
 20365  006A82  EC05  F04C         	call	_SaveNVM_VarSystem
 20366  006A86  0012               	return		;funcret
 20367  006A88                     __end_of_ResetDefaultMemory:
 20368                           	callstack 0
 20369                           
 20370 ;; *************** function _I2C1_Read1ByteRegister *****************
 20371 ;; Defined at:
 20372 ;;		line 65 in file "mcc_generated_files/examples/i2c1_master_example.c"
 20373 ;; Parameters:    Size  Location     Type
 20374 ;;  address         1    wreg     unsigned char 
 20375 ;;  reg             1   33[COMRAM] unsigned char 
 20376 ;; Auto vars:     Size  Location     Type
 20377 ;;  address         1   34[COMRAM] unsigned char 
 20378 ;;  returnValue     1   35[COMRAM] unsigned char 
 20379 ;; Return value:  Size  Location     Type
 20380 ;;                  1    wreg      unsigned char 
 20381 ;; Registers used:
 20382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20383 ;; Tracked objects:
 20384 ;;		On entry : 31/0
 20385 ;;		On exit  : 33/2
 20386 ;;		Unchanged: 0/0
 20387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20388 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20389 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20391 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20392 ;;Total ram usage:        3 bytes
 20393 ;; Hardware stack levels used: 1
 20394 ;; Hardware stack levels required when called: 12
 20395 ;; This function calls:
 20396 ;;		_I2C1_Close
 20397 ;;		_I2C1_MasterWrite
 20398 ;;		_I2C1_Open
 20399 ;;		_I2C1_SetAddressNackCallback
 20400 ;;		_I2C1_SetBuffer
 20401 ;;		_I2C1_SetDataCompleteCallback
 20402 ;; This function is called by:
 20403 ;;		_loadNVM_VarSystem
 20404 ;; This function uses a non-reentrant model
 20405 ;;
 20406                           
 20407                           	psect	text72
 20408  0090A6                     __ptext72:
 20409                           	callstack 0
 20410  0090A6                     _I2C1_Read1ByteRegister:
 20411                           	callstack 17
 20412                           
 20413                           ;incstack = 0
 20414                           ;I2C1_Read1ByteRegister@address stored from wreg
 20415  0090A6  6E23               	movwf	I2C1_Read1ByteRegister@address^0,c
 20416                           
 20417                           ;mcc_generated_files/examples/i2c1_master_example.c: 65: uint8_t I2C1_Read1ByteRegister(
      +                          i2c1_address_t address, uint8_t reg);mcc_generated_files/examples/i2c1_master_example.c:
      +                           66: {;mcc_generated_files/examples/i2c1_master_example.c: 67:     uint8_t returnValue =
      +                           0x00;
 20418  0090A8  0E00               	movlw	0
 20419  0090AA  6E24               	movwf	I2C1_Read1ByteRegister@returnValue^0,c
 20420  0090AC                     l22874:
 20421  0090AC  5023               	movf	I2C1_Read1ByteRegister@address^0,w,c
 20422  0090AE  EC4B  F043         	call	_I2C1_Open
 20423  0090B2  0900               	iorlw	0
 20424  0090B4  B4D8               	btfsc	status,2,c
 20425  0090B6  D7FA               	goto	l22874
 20426                           
 20427                           ;mcc_generated_files/examples/i2c1_master_example.c: 70:     I2C1_SetDataCompleteCallbac
      +                          k(rd1RegCompleteHandler,&returnValue);
 20428  0090B8  0E72               	movlw	low _rd1RegCompleteHandler@i2c1_master_example$F500
 20429  0090BA  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 20430  0090BC  0E9A               	movlw	high _rd1RegCompleteHandler@i2c1_master_example$F500
 20431  0090BE  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 20432  0090C0  0E24               	movlw	low I2C1_Read1ByteRegister@returnValue
 20433  0090C2  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 20434  0090C4  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 20435  0090C6  EC65  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 20436                           
 20437                           ;mcc_generated_files/examples/i2c1_master_example.c: 71:     I2C1_SetBuffer(&reg,1);
 20438  0090CA  0E22               	movlw	low I2C1_Read1ByteRegister@reg
 20439  0090CC  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 20440  0090CE  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 20441  0090D0  0E00               	movlw	0
 20442  0090D2  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 20443  0090D4  0E01               	movlw	1
 20444  0090D6  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 20445  0090D8  EC1C  F04F         	call	_I2C1_SetBuffer	;wreg free
 20446                           
 20447                           ; BSR set to: 2
 20448                           ;mcc_generated_files/examples/i2c1_master_example.c: 72:     I2C1_SetAddressNackCallback
      +                          (((void*)0),((void*)0));
 20449  0090DC  0E00               	movlw	0
 20450  0090DE  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 20451  0090E0  0E00               	movlw	0
 20452  0090E2  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 20453  0090E4  0E00               	movlw	0
 20454  0090E6  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 20455  0090E8  0E00               	movlw	0
 20456  0090EA  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 20457  0090EC  EC4D  F04F         	call	_I2C1_SetAddressNackCallback	;wreg free
 20458                           
 20459                           ;mcc_generated_files/examples/i2c1_master_example.c: 73:     I2C1_MasterWrite();
 20460  0090F0  EC1B  F050         	call	_I2C1_MasterWrite	;wreg free
 20461  0090F4                     l22884:
 20462  0090F4  EC8E  F04E         	call	_I2C1_Close	;wreg free
 20463  0090F8  06E8               	decf	wreg,f,c
 20464  0090FA  B4D8               	btfsc	status,2,c
 20465  0090FC  D7FB               	goto	l22884
 20466                           
 20467                           ;mcc_generated_files/examples/i2c1_master_example.c: 76:     return returnValue;
 20468  0090FE  5024               	movf	I2C1_Read1ByteRegister@returnValue^0,w,c
 20469  009100  0012               	return		;funcret
 20470  009102                     __end_of_I2C1_Read1ByteRegister:
 20471                           	callstack 0
 20472                           
 20473 ;; *************** function _getKeyPressed *****************
 20474 ;; Defined at:
 20475 ;;		line 217 in file "inputs_MC50.c"
 20476 ;; Parameters:    Size  Location     Type
 20477 ;;		None
 20478 ;; Auto vars:     Size  Location     Type
 20479 ;;  temp            1   15[COMRAM] char 
 20480 ;; Return value:  Size  Location     Type
 20481 ;;                  1    wreg      char 
 20482 ;; Registers used:
 20483 ;;		wreg, status,2, status,0
 20484 ;; Tracked objects:
 20485 ;;		On entry : 3E/1
 20486 ;;		On exit  : 3D/0
 20487 ;;		Unchanged: 0/0
 20488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20490 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20492 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20493 ;;Total ram usage:        1 bytes
 20494 ;; Hardware stack levels used: 1
 20495 ;; Hardware stack levels required when called: 4
 20496 ;; This function calls:
 20497 ;;		Nothing
 20498 ;; This function is called by:
 20499 ;;		_main
 20500 ;; This function uses a non-reentrant model
 20501 ;;
 20502                           
 20503                           	psect	text73
 20504  009E82                     __ptext73:
 20505                           	callstack 0
 20506  009E82                     _getKeyPressed:
 20507                           	callstack 26
 20508                           
 20509                           ;inputs_MC50.c: 218:     signed char temp=-1;
 20510                           
 20511                           ;incstack = 0
 20512  009E82  6810               	setf	getKeyPressed@temp^0,c
 20513                           
 20514                           ;inputs_MC50.c: 219:     if(RFFull)
 20515  009E84  0100               	movlb	0	; () banked
 20516  009E86  518B               	movf	_RFFull& (0+255),w,b	;volatile
 20517  009E88  B4D8               	btfsc	status,2,c
 20518  009E8A  D005               	goto	l24814
 20519                           
 20520                           ; BSR set to: 0
 20521                           ;inputs_MC50.c: 220:     {;inputs_MC50.c: 221:         temp=(BufferRF[7]&0xF0)>>4;
 20522  009E8C  0102               	movlb	2	; () banked
 20523  009E8E  39CF               	swapf	(_BufferRF+7)& (0+255),w,b
 20524  009E90  0B0F               	andlw	15
 20525  009E92  0B0F               	andlw	15
 20526  009E94  6E10               	movwf	getKeyPressed@temp^0,c
 20527  009E96                     l24814:
 20528                           
 20529                           ;inputs_MC50.c: 223:     return temp;
 20530  009E96  5010               	movf	getKeyPressed@temp^0,w,c
 20531  009E98  0012               	return		;funcret
 20532  009E9A                     __end_of_getKeyPressed:
 20533                           	callstack 0
 20534                           
 20535 ;; *************** function _eusartparser *****************
 20536 ;; Defined at:
 20537 ;;		line 404 in file "eusartparser.c"
 20538 ;; Parameters:    Size  Location     Type
 20539 ;;  package         2    8[BANK0 ] PTR struct package_t
 20540 ;;		 -> main@package(7), 
 20541 ;; Auto vars:     Size  Location     Type
 20542 ;;  i               1   28[BANK0 ] unsigned char 
 20543 ;;  i               1   25[BANK0 ] unsigned char 
 20544 ;;  i               1   29[BANK0 ] unsigned char 
 20545 ;;  i               1   26[BANK0 ] unsigned char 
 20546 ;;  i               1   30[BANK0 ] unsigned char 
 20547 ;;  i               1   24[BANK0 ] unsigned char 
 20548 ;;  i               1   23[BANK0 ] unsigned char 
 20549 ;;  i               1   19[BANK0 ] unsigned char 
 20550 ;;  i               1   18[BANK0 ] unsigned char 
 20551 ;;  i               1   27[BANK0 ] unsigned char 
 20552 ;;  i               1   22[BANK0 ] unsigned char 
 20553 ;;  i               1   21[BANK0 ] unsigned char 
 20554 ;;  i               1   17[BANK0 ] unsigned char 
 20555 ;;  i               1   16[BANK0 ] unsigned char 
 20556 ;;  a               7    0        struct package_t
 20557 ;;  serial          4   32[BANK0 ] unsigned long 
 20558 ;;  relcounter      1   31[BANK0 ] unsigned char 
 20559 ;;  pos             1   20[BANK0 ] unsigned char 
 20560 ;; Return value:  Size  Location     Type
 20561 ;;                  1    wreg      void 
 20562 ;; Registers used:
 20563 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 20564 ;; Tracked objects:
 20565 ;;		On entry : 3F/0
 20566 ;;		On exit  : 0/0
 20567 ;;		Unchanged: 0/0
 20568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20569 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20570 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20571 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20572 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20573 ;;Total ram usage:       28 bytes
 20574 ;; Hardware stack levels used: 1
 20575 ;; Hardware stack levels required when called: 14
 20576 ;; This function calls:
 20577 ;;		_ReadSerial
 20578 ;;		_RemoveSerial
 20579 ;;		_SaveNVM_VarSystem
 20580 ;;		_cmdMemoryIsEmpty
 20581 ;;		_confirmpackage
 20582 ;;		_read_eusartparser
 20583 ;;		_saveNewSerial
 20584 ;;		_updateChangesToUart
 20585 ;;		_validateRemoteSerialNumber
 20586 ;;		_write_eusartparser
 20587 ;;		_write_package
 20588 ;; This function is called by:
 20589 ;;		_main
 20590 ;; This function uses a non-reentrant model
 20591 ;;
 20592                           
 20593                           	psect	text74
 20594  000F22                     __ptext74:
 20595                           	callstack 0
 20596  000F22                     _eusartparser:
 20597                           	callstack 16
 20598                           
 20599                           ; BSR set to: 0
 20600                           ;eusartparser.c: 405:     struct package_t a;;eusartparser.c: 406:     uint8_t relcounte
      +                          r;;eusartparser.c: 407:     static _Bool save_f=0;;eusartparser.c: 408:     static uint1
      +                          6_t buffer=0x0000;;eusartparser.c: 409:     uint32_t serial;;eusartparser.c: 410:     ch
      +                          ar pos;;eusartparser.c: 412:     switch(package->functioncode){
 20601                           
 20602                           ;incstack = 0
 20603  000F22  EF37  F00C         	goto	l28094
 20604  000F26                     l27646:
 20605                           
 20606                           ; BSR set to: 0
 20607                           ;eusartparser.c: 414:             read_eusartparser(package);
 20608  000F26  C0E0  F018         	movff	eusartparser@package,read_eusartparser@package
 20609  000F2A  C0E1  F019         	movff	eusartparser@package+1,read_eusartparser@package+1
 20610  000F2E  ECC4  F014         	call	_read_eusartparser	;wreg free
 20611  000F32                     l27648:
 20612                           
 20613                           ;eusartparser.c: 415:             confirmpackage(package, 1);
 20614  000F32  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 20615  000F36  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 20616  000F3A  0E01               	movlw	1
 20617  000F3C  6E14               	movwf	confirmpackage@confirm^0,c
 20618  000F3E  EC81  F048         	call	_confirmpackage	;wreg free
 20619  000F42                     l27650:
 20620                           
 20621                           ;eusartparser.c: 416:             write_package(*package);
 20622  000F42  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20623  000F46  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20624  000F4A  EE00  F011         	lfsr	0,write_package@package
 20625  000F4E  0E06               	movlw	6
 20626  000F50                     u33681:
 20627  000F50  CFDB FFEB          	movff	plusw2,plusw0
 20628  000F54  06E8               	decf	wreg,f,c
 20629  000F56  E2FC               	bc	u33681
 20630  000F58  ECCB  F04C         	call	_write_package	;wreg free
 20631                           
 20632                           ;eusartparser.c: 417:             break;
 20633  000F5C  0012               	return	
 20634  000F5E                     l27652:
 20635                           
 20636                           ; BSR set to: 0
 20637                           ;eusartparser.c: 420:             done_changes=1;
 20638  000F5E  0E01               	movlw	1
 20639  000F60  0101               	movlb	1	; () banked
 20640  000F62  6F8E               	movwf	_done_changes& (0+255),b
 20641                           
 20642                           ;eusartparser.c: 421:             if(programmer_enable){
 20643  000F64  0100               	movlb	0	; () banked
 20644  000F66  5185               	movf	_programmer_enable& (0+255),w,b
 20645  000F68  B4D8               	btfsc	status,2,c
 20646  000F6A  D00E               	goto	l27660
 20647                           
 20648                           ; BSR set to: 0
 20649                           ;eusartparser.c: 422:                 write_eusartparser(*package);
 20650  000F6C  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20651  000F70  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20652  000F74  EE00  F010         	lfsr	0,write_eusartparser@package
 20653  000F78  0E06               	movlw	6
 20654  000F7A                     u33701:
 20655  000F7A  CFDB FFEB          	movff	plusw2,plusw0
 20656  000F7E  06E8               	decf	wreg,f,c
 20657  000F80  E2FC               	bc	u33701
 20658  000F82  EC30  F018         	call	_write_eusartparser	;wreg free
 20659  000F86  D7D5               	goto	l27648
 20660  000F88                     l27660:
 20661                           
 20662                           ;eusartparser.c: 427:                 confirmpackage(package, 0);
 20663  000F88  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 20664  000F8C  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 20665  000F90  0E00               	movlw	0
 20666  000F92  6E14               	movwf	confirmpackage@confirm^0,c
 20667  000F94  EC81  F048         	call	_confirmpackage	;wreg free
 20668  000F98  D7D4               	goto	l27650
 20669  000F9A                     l27664:
 20670                           
 20671                           ; BSR set to: 0
 20672                           ;eusartparser.c: 433:             if(programmer_enable){
 20673  000F9A  5185               	movf	_programmer_enable& (0+255),w,b
 20674  000F9C  B4D8               	btfsc	status,2,c
 20675  000F9E  D008               	goto	l27670
 20676                           
 20677                           ; BSR set to: 0
 20678                           ;eusartparser.c: 434:                 SaveNVM_VarSystem(pageMemoryE);
 20679  000FA0  0E01               	movlw	1
 20680  000FA2  EC05  F04C         	call	_SaveNVM_VarSystem
 20681                           
 20682                           ;eusartparser.c: 435:                 SaveNVM_VarSystem(pageMemoryP);
 20683  000FA6  0E00               	movlw	0
 20684  000FA8  EC05  F04C         	call	_SaveNVM_VarSystem
 20685                           
 20686                           ;eusartparser.c: 436:                 programmer_enable=0;
 20687  000FAC  0E00               	movlw	0
 20688  000FAE  D005               	goto	L83
 20689  000FB0                     l27670:
 20690                           
 20691                           ; BSR set to: 0
 20692                           ;eusartparser.c: 439:                 if((sm_state_Main_t)main_stateMachine.current_stat
      +                          e==st_standBy)
 20693  000FB0  0101               	movlb	1	; () banked
 20694  000FB2  51F1               	movf	_main_stateMachine& (0+255),w,b
 20695  000FB4  A4D8               	btfss	status,2,c
 20696  000FB6  D004               	goto	l27674
 20697                           
 20698                           ; BSR set to: 1
 20699                           ;eusartparser.c: 440:                     programmer_enable=1;
 20700  000FB8  0E01               	movlw	1
 20701  000FBA                     L83:
 20702  000FBA  0100               	movlb	0	; () banked
 20703  000FBC  6F85               	movwf	_programmer_enable& (0+255),b
 20704  000FBE  D019               	goto	l27682
 20705  000FC0                     l27674:
 20706                           
 20707                           ; BSR set to: 1
 20708                           ;eusartparser.c: 442:                     package->data.data16=(uint16_t)2;
 20709  000FC0  0100               	movlb	0	; () banked
 20710  000FC2  EE20 F002          	lfsr	2,2
 20711  000FC6  51E0               	movf	eusartparser@package& (0+255),w,b
 20712  000FC8  26D9               	addwf	fsr2l,f,c
 20713  000FCA  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20714  000FCC  22DA               	addwfc	fsr2h,f,c
 20715  000FCE  0E02               	movlw	2
 20716  000FD0  6EDE               	movwf	postinc2,c
 20717  000FD2  0E00               	movlw	0
 20718  000FD4  6EDD               	movwf	postdec2,c
 20719                           
 20720                           ; BSR set to: 0
 20721                           ;eusartparser.c: 443:                     write_package(*package);
 20722  000FD6  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20723  000FDA  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20724  000FDE  EE00  F011         	lfsr	0,write_package@package
 20725  000FE2  0E06               	movlw	6
 20726  000FE4                     u33731:
 20727  000FE4  CFDB FFEB          	movff	plusw2,plusw0
 20728  000FE8  06E8               	decf	wreg,f,c
 20729  000FEA  E2FC               	bc	u33731
 20730  000FEC  ECCB  F04C         	call	_write_package	;wreg free
 20731  000FF0  D7CB               	goto	l27660
 20732  000FF2                     l27682:
 20733                           
 20734                           ; BSR set to: 0
 20735                           ;eusartparser.c: 450:             package->data.data16=(uint16_t)programmer_enable;
 20736  000FF2  5185               	movf	_programmer_enable& (0+255),w,b
 20737  000FF4  6FE2               	movwf	??_eusartparser& (0+255),b
 20738  000FF6  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 20739  000FF8  EE20 F002          	lfsr	2,2
 20740  000FFC  51E0               	movf	eusartparser@package& (0+255),w,b
 20741  000FFE  26D9               	addwf	fsr2l,f,c
 20742  001000  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20743  001002  22DA               	addwfc	fsr2h,f,c
 20744  001004  C0E2  FFDE         	movff	??_eusartparser,postinc2
 20745  001008  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 20746                           
 20747                           ; BSR set to: 0
 20748                           ;eusartparser.c: 451:             write_package(*package);
 20749  00100C  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20750  001010  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20751  001014  EE00  F011         	lfsr	0,write_package@package
 20752  001018  0E06               	movlw	6
 20753  00101A                     u33741:
 20754  00101A  CFDB FFEB          	movff	plusw2,plusw0
 20755  00101E  06E8               	decf	wreg,f,c
 20756  001020  E2FC               	bc	u33741
 20757  001022  ECCB  F04C         	call	_write_package	;wreg free
 20758                           
 20759                           ;eusartparser.c: 452:             confirmpackage(package, 1);
 20760  001026  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 20761  00102A  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 20762  00102E  0E01               	movlw	1
 20763  001030  6E14               	movwf	confirmpackage@confirm^0,c
 20764  001032  EC81  F048         	call	_confirmpackage	;wreg free
 20765                           
 20766                           ;eusartparser.c: 453:             write_package(*package);
 20767  001036  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20768  00103A  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20769  00103E  EE00  F011         	lfsr	0,write_package@package
 20770  001042  0E06               	movlw	6
 20771  001044                     u33751:
 20772  001044  CFDB FFEB          	movff	plusw2,plusw0
 20773  001048  06E8               	decf	wreg,f,c
 20774  00104A  E2FC               	bc	u33751
 20775  00104C  ECCB  F04C         	call	_write_package	;wreg free
 20776                           
 20777                           ;eusartparser.c: 455:             if(done_changes==1)
 20778  001050  0101               	movlb	1	; () banked
 20779  001052  058E               	decf	_done_changes& (0+255),w,b
 20780  001054  B4D8               	btfsc	status,2,c
 20781                           
 20782                           ; BSR set to: 1
 20783                           ;eusartparser.c: 456:                 updateChangesToUart();
 20784  001056  EC99  F047         	call	_updateChangesToUart	;wreg free
 20785                           
 20786                           ;eusartparser.c: 457:             done_changes=0;
 20787  00105A  0E00               	movlw	0
 20788  00105C  0101               	movlb	1	; () banked
 20789  00105E  6F8E               	movwf	_done_changes& (0+255),b
 20790                           
 20791                           ;eusartparser.c: 458:             break;
 20792  001060  0012               	return	
 20793  001062                     l27700:
 20794                           
 20795                           ; BSR set to: 0
 20796                           ;eusartparser.c: 464:                 package->address=0x00;
 20797  001062  EE20 F001          	lfsr	2,1
 20798  001066  51E0               	movf	eusartparser@package& (0+255),w,b
 20799  001068  26D9               	addwf	fsr2l,f,c
 20800  00106A  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20801  00106C  22DA               	addwfc	fsr2h,f,c
 20802  00106E  0E00               	movlw	0
 20803  001070  6EDF               	movwf	indf2,c
 20804                           
 20805                           ;eusartparser.c: 465:                 package->data.data16=var_sys_NVM.positionRemotesFu
      +                          ll;
 20806  001072  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20807  001074  6FE2               	movwf	??_eusartparser& (0+255),b
 20808  001076  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 20809  001078  EE20 F002          	lfsr	2,2
 20810  00107C  51E0               	movf	eusartparser@package& (0+255),w,b
 20811  00107E  26D9               	addwf	fsr2l,f,c
 20812  001080  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20813  001082  22DA               	addwfc	fsr2h,f,c
 20814  001084  C0E2  FFDE         	movff	??_eusartparser,postinc2
 20815  001088  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 20816                           
 20817                           ; BSR set to: 0
 20818                           ;eusartparser.c: 466:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 20819  00108C  0E00               	movlw	0
 20820  00108E  6FE8               	movwf	eusartparser@i& (0+255),b
 20821  001090  D014               	goto	l27710
 20822  001092                     l27704:
 20823                           
 20824                           ; BSR set to: 0
 20825                           ;eusartparser.c: 467:                 if(cmdMemoryIsEmpty(0,i)==1)
 20826  001092  C0E8  F02E         	movff	eusartparser@i,cmdMemoryIsEmpty@position
 20827  001096  0E00               	movlw	0
 20828  001098  EC1E  F041         	call	_cmdMemoryIsEmpty
 20829  00109C  06E8               	decf	wreg,f,c
 20830  00109E  A4D8               	btfss	status,2,c
 20831  0010A0  D00A               	goto	l27708
 20832                           
 20833                           ;eusartparser.c: 468:                     package->data.data16--;
 20834  0010A2  0100               	movlb	0	; () banked
 20835  0010A4  EE20 F002          	lfsr	2,2
 20836  0010A8  51E0               	movf	eusartparser@package& (0+255),w,b
 20837  0010AA  26D9               	addwf	fsr2l,f,c
 20838  0010AC  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20839  0010AE  22DA               	addwfc	fsr2h,f,c
 20840  0010B0  06DE               	decf	postinc2,f,c
 20841  0010B2  0E00               	movlw	0
 20842  0010B4  5ADD               	subwfb	postdec2,f,c
 20843  0010B6                     l27708:
 20844  0010B6  0100               	movlb	0	; () banked
 20845  0010B8  2BE8               	incf	eusartparser@i& (0+255),f,b
 20846  0010BA                     l27710:
 20847                           
 20848                           ; BSR set to: 0
 20849  0010BA  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20850  0010BC  5DE8               	subwf	eusartparser@i& (0+255),w,b
 20851  0010BE  A0D8               	btfss	status,0,c
 20852  0010C0  D7E8               	goto	l27704
 20853  0010C2                     u33780:
 20854                           
 20855                           ; BSR set to: 0
 20856                           ;eusartparser.c: 469:                 write_package(*package);
 20857  0010C2  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20858  0010C6  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20859  0010CA  EE00  F011         	lfsr	0,write_package@package
 20860  0010CE  0E06               	movlw	6
 20861  0010D0                     u33791:
 20862  0010D0  CFDB FFEB          	movff	plusw2,plusw0
 20863  0010D4  06E8               	decf	wreg,f,c
 20864  0010D6  E2FC               	bc	u33791
 20865  0010D8  ECCB  F04C         	call	_write_package	;wreg free
 20866  0010DC  D72A               	goto	l27648
 20867  0010DE                     l27718:
 20868                           
 20869                           ; BSR set to: 0
 20870                           ;eusartparser.c: 475:             package->address=0x00;
 20871  0010DE  EE20 F001          	lfsr	2,1
 20872  0010E2  51E0               	movf	eusartparser@package& (0+255),w,b
 20873  0010E4  26D9               	addwf	fsr2l,f,c
 20874  0010E6  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20875  0010E8  22DA               	addwfc	fsr2h,f,c
 20876  0010EA  0E00               	movlw	0
 20877  0010EC  6EDF               	movwf	indf2,c
 20878                           
 20879                           ;eusartparser.c: 476:             package->data.data16=0;
 20880  0010EE  EE20 F002          	lfsr	2,2
 20881  0010F2  51E0               	movf	eusartparser@package& (0+255),w,b
 20882  0010F4  26D9               	addwf	fsr2l,f,c
 20883  0010F6  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20884  0010F8  22DA               	addwfc	fsr2h,f,c
 20885  0010FA  0E00               	movlw	0
 20886  0010FC  6EDE               	movwf	postinc2,c
 20887  0010FE  0E00               	movlw	0
 20888  001100  6EDD               	movwf	postdec2,c
 20889                           
 20890                           ; BSR set to: 0
 20891                           ;eusartparser.c: 477:             for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;i++)
 20892  001102  0E00               	movlw	0
 20893  001104  6FE9               	movwf	eusartparser@i_7381& (0+255),b
 20894  001106  D014               	goto	l27728
 20895  001108                     l27722:
 20896                           
 20897                           ; BSR set to: 0
 20898                           ;eusartparser.c: 478:             if(cmdMemoryIsEmpty(0,i)==1)
 20899  001108  C0E9  F02E         	movff	eusartparser@i_7381,cmdMemoryIsEmpty@position
 20900  00110C  0E00               	movlw	0
 20901  00110E  EC1E  F041         	call	_cmdMemoryIsEmpty
 20902  001112  06E8               	decf	wreg,f,c
 20903  001114  A4D8               	btfss	status,2,c
 20904  001116  D00A               	goto	l27726
 20905                           
 20906                           ;eusartparser.c: 479:                 package->data.data16++;
 20907  001118  0100               	movlb	0	; () banked
 20908  00111A  EE20 F002          	lfsr	2,2
 20909  00111E  51E0               	movf	eusartparser@package& (0+255),w,b
 20910  001120  26D9               	addwf	fsr2l,f,c
 20911  001122  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20912  001124  22DA               	addwfc	fsr2h,f,c
 20913  001126  2ADE               	incf	postinc2,f,c
 20914  001128  0E00               	movlw	0
 20915  00112A  22DD               	addwfc	postdec2,f,c
 20916  00112C                     l27726:
 20917  00112C  0100               	movlb	0	; () banked
 20918  00112E  2BE9               	incf	eusartparser@i_7381& (0+255),f,b
 20919  001130                     l27728:
 20920                           
 20921                           ; BSR set to: 0
 20922  001130  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20923  001132  5DE9               	subwf	eusartparser@i_7381& (0+255),w,b
 20924  001134  B0D8               	btfsc	status,0,c
 20925  001136  D7C5               	goto	u33780
 20926  001138  D7E7               	goto	l27722
 20927  00113A                     l27736:
 20928                           
 20929                           ; BSR set to: 0
 20930                           ;eusartparser.c: 485:             relcounter=0;
 20931  00113A  0E00               	movlw	0
 20932  00113C  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 20933                           
 20934                           ;eusartparser.c: 486:             for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;i++)
 20935  00113E  0E00               	movlw	0
 20936  001140  6FED               	movwf	eusartparser@i_7382& (0+255),b
 20937  001142  D02E               	goto	l27748
 20938  001144                     l27738:
 20939                           
 20940                           ; BSR set to: 0
 20941                           ;eusartparser.c: 487:                 if(cmdMemoryIsEmpty(0,i)==0){
 20942  001144  C0ED  F02E         	movff	eusartparser@i_7382,cmdMemoryIsEmpty@position
 20943  001148  0E00               	movlw	0
 20944  00114A  EC1E  F041         	call	_cmdMemoryIsEmpty
 20945  00114E  0900               	iorlw	0
 20946  001150  A4D8               	btfss	status,2,c
 20947  001152  D024               	goto	l27746
 20948                           
 20949                           ;eusartparser.c: 488:                     package->data.data16=(uint16_t)i;
 20950  001154  0100               	movlb	0	; () banked
 20951  001156  51ED               	movf	eusartparser@i_7382& (0+255),w,b
 20952  001158  6FE2               	movwf	??_eusartparser& (0+255),b
 20953  00115A  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 20954  00115C  EE20 F002          	lfsr	2,2
 20955  001160  51E0               	movf	eusartparser@package& (0+255),w,b
 20956  001162  26D9               	addwf	fsr2l,f,c
 20957  001164  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20958  001166  22DA               	addwfc	fsr2h,f,c
 20959  001168  C0E2  FFDE         	movff	??_eusartparser,postinc2
 20960  00116C  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 20961                           
 20962                           ;eusartparser.c: 489:                     package->address=relcounter;
 20963  001170  EE20 F001          	lfsr	2,1
 20964  001174  51E0               	movf	eusartparser@package& (0+255),w,b
 20965  001176  26D9               	addwf	fsr2l,f,c
 20966  001178  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20967  00117A  22DA               	addwfc	fsr2h,f,c
 20968  00117C  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 20969                           
 20970                           ; BSR set to: 0
 20971                           ;eusartparser.c: 490:                     relcounter++;
 20972  001180  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 20973                           
 20974                           ; BSR set to: 0
 20975                           ;eusartparser.c: 491:                     write_package(*package);
 20976  001182  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20977  001186  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20978  00118A  EE00  F011         	lfsr	0,write_package@package
 20979  00118E  0E06               	movlw	6
 20980  001190                     u33831:
 20981  001190  CFDB FFEB          	movff	plusw2,plusw0
 20982  001194  06E8               	decf	wreg,f,c
 20983  001196  E2FC               	bc	u33831
 20984  001198  ECCB  F04C         	call	_write_package	;wreg free
 20985  00119C                     l27746:
 20986  00119C  0100               	movlb	0	; () banked
 20987  00119E  2BED               	incf	eusartparser@i_7382& (0+255),f,b
 20988  0011A0                     l27748:
 20989                           
 20990                           ; BSR set to: 0
 20991  0011A0  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20992  0011A2  5DED               	subwf	eusartparser@i_7382& (0+255),w,b
 20993  0011A4  B0D8               	btfsc	status,0,c
 20994  0011A6  D6C5               	goto	l27648
 20995  0011A8  D7CD               	goto	l27738
 20996  0011AA                     l27754:
 20997                           
 20998                           ; BSR set to: 0
 20999                           ;eusartparser.c: 497:             relcounter=0;
 21000  0011AA  0E00               	movlw	0
 21001  0011AC  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 21002                           
 21003                           ;eusartparser.c: 498:             for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;i++)
 21004  0011AE  0E00               	movlw	0
 21005  0011B0  6FEE               	movwf	eusartparser@i_7383& (0+255),b
 21006  0011B2  D02E               	goto	l27766
 21007  0011B4                     l27756:
 21008                           
 21009                           ; BSR set to: 0
 21010                           ;eusartparser.c: 499:                 if(cmdMemoryIsEmpty(0,i)==1){
 21011  0011B4  C0EE  F02E         	movff	eusartparser@i_7383,cmdMemoryIsEmpty@position
 21012  0011B8  0E00               	movlw	0
 21013  0011BA  EC1E  F041         	call	_cmdMemoryIsEmpty
 21014  0011BE  06E8               	decf	wreg,f,c
 21015  0011C0  A4D8               	btfss	status,2,c
 21016  0011C2  D024               	goto	l27764
 21017                           
 21018                           ;eusartparser.c: 500:                     package->data.data16=(uint16_t)i;
 21019  0011C4  0100               	movlb	0	; () banked
 21020  0011C6  51EE               	movf	eusartparser@i_7383& (0+255),w,b
 21021  0011C8  6FE2               	movwf	??_eusartparser& (0+255),b
 21022  0011CA  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21023  0011CC  EE20 F002          	lfsr	2,2
 21024  0011D0  51E0               	movf	eusartparser@package& (0+255),w,b
 21025  0011D2  26D9               	addwf	fsr2l,f,c
 21026  0011D4  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21027  0011D6  22DA               	addwfc	fsr2h,f,c
 21028  0011D8  C0E2  FFDE         	movff	??_eusartparser,postinc2
 21029  0011DC  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 21030                           
 21031                           ;eusartparser.c: 501:                     package->address=relcounter;
 21032  0011E0  EE20 F001          	lfsr	2,1
 21033  0011E4  51E0               	movf	eusartparser@package& (0+255),w,b
 21034  0011E6  26D9               	addwf	fsr2l,f,c
 21035  0011E8  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21036  0011EA  22DA               	addwfc	fsr2h,f,c
 21037  0011EC  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 21038                           
 21039                           ; BSR set to: 0
 21040                           ;eusartparser.c: 502:                     relcounter++;
 21041  0011F0  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 21042                           
 21043                           ; BSR set to: 0
 21044                           ;eusartparser.c: 503:                     write_package(*package);
 21045  0011F2  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21046  0011F6  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21047  0011FA  EE00  F011         	lfsr	0,write_package@package
 21048  0011FE  0E06               	movlw	6
 21049  001200                     u33861:
 21050  001200  CFDB FFEB          	movff	plusw2,plusw0
 21051  001204  06E8               	decf	wreg,f,c
 21052  001206  E2FC               	bc	u33861
 21053  001208  ECCB  F04C         	call	_write_package	;wreg free
 21054  00120C                     l27764:
 21055  00120C  0100               	movlb	0	; () banked
 21056  00120E  2BEE               	incf	eusartparser@i_7383& (0+255),f,b
 21057  001210                     l27766:
 21058                           
 21059                           ; BSR set to: 0
 21060  001210  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21061  001212  5DEE               	subwf	eusartparser@i_7383& (0+255),w,b
 21062  001214  B0D8               	btfsc	status,0,c
 21063  001216  D68D               	goto	l27648
 21064  001218  D7CD               	goto	l27756
 21065  00121A                     l27772:
 21066                           
 21067                           ; BSR set to: 0
 21068                           ;eusartparser.c: 509:             done_changes=1;
 21069  00121A  0E01               	movlw	1
 21070  00121C  0101               	movlb	1	; () banked
 21071  00121E  6F8E               	movwf	_done_changes& (0+255),b
 21072                           
 21073                           ;eusartparser.c: 510:             if(programmer_enable){
 21074  001220  0100               	movlb	0	; () banked
 21075  001222  5185               	movf	_programmer_enable& (0+255),w,b
 21076  001224  B4D8               	btfsc	status,2,c
 21077  001226  D6B0               	goto	l27660
 21078                           
 21079                           ; BSR set to: 0
 21080                           ;eusartparser.c: 511:                 if(save_f==0){
 21081  001228  0101               	movlb	1	; () banked
 21082  00122A  518D               	movf	eusartparser@save_f& (0+255),w,b
 21083  00122C  A4D8               	btfss	status,2,c
 21084  00122E  D024               	goto	l27784
 21085  001230                     u33890:
 21086                           
 21087                           ; BSR set to: 1
 21088                           ;eusartparser.c: 512:                     buffer=package->data.data16;
 21089  001230  0100               	movlb	0	; () banked
 21090  001232  EE20 F002          	lfsr	2,2
 21091  001236  51E0               	movf	eusartparser@package& (0+255),w,b
 21092  001238  26D9               	addwf	fsr2l,f,c
 21093  00123A  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21094  00123C  22DA               	addwfc	fsr2h,f,c
 21095  00123E  CFDE F185          	movff	postinc2,eusartparser@buffer
 21096  001242  CFDD F186          	movff	postdec2,eusartparser@buffer+1
 21097                           
 21098                           ; BSR set to: 0
 21099                           ;eusartparser.c: 513:                     confirmpackage(package, 1);
 21100  001246  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 21101  00124A  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 21102  00124E  0E01               	movlw	1
 21103  001250  6E14               	movwf	confirmpackage@confirm^0,c
 21104  001252  EC81  F048         	call	_confirmpackage	;wreg free
 21105                           
 21106                           ;eusartparser.c: 514:                     write_package(*package);
 21107  001256  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21108  00125A  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21109  00125E  EE00  F011         	lfsr	0,write_package@package
 21110  001262  0E06               	movlw	6
 21111  001264                     u33901:
 21112  001264  CFDB FFEB          	movff	plusw2,plusw0
 21113  001268  06E8               	decf	wreg,f,c
 21114  00126A  E2FC               	bc	u33901
 21115  00126C  ECCB  F04C         	call	_write_package	;wreg free
 21116                           
 21117                           ;eusartparser.c: 515:                     save_f=1;
 21118  001270  0E01               	movlw	1
 21119  001272  0101               	movlb	1	; () banked
 21120  001274  6F8D               	movwf	eusartparser@save_f& (0+255),b
 21121                           
 21122                           ;eusartparser.c: 516:                 }
 21123  001276  0012               	return	
 21124  001278                     l27784:
 21125                           
 21126                           ; BSR set to: 1
 21127                           ;eusartparser.c: 518:                     serial=((uint32_t)buffer<<16)+(uint32_t)packag
      +                          e->data.data16;
 21128  001278  0100               	movlb	0	; () banked
 21129  00127A  EE20 F002          	lfsr	2,2
 21130  00127E  51E0               	movf	eusartparser@package& (0+255),w,b
 21131  001280  26D9               	addwf	fsr2l,f,c
 21132  001282  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21133  001284  22DA               	addwfc	fsr2h,f,c
 21134  001286  CFDE F0E2          	movff	postinc2,??_eusartparser
 21135  00128A  CFDD F0E3          	movff	postdec2,??_eusartparser+1
 21136  00128E  0101               	movlb	1	; () banked
 21137  001290  5185               	movf	eusartparser@buffer& (0+255),w,b
 21138  001292  0100               	movlb	0	; () banked
 21139  001294  6FE4               	movwf	(??_eusartparser+2)& (0+255),b
 21140  001296  0101               	movlb	1	; () banked
 21141  001298  5186               	movf	(eusartparser@buffer+1)& (0+255),w,b
 21142  00129A  0100               	movlb	0	; () banked
 21143  00129C  6FE5               	movwf	(??_eusartparser+3)& (0+255),b
 21144  00129E  6BE6               	clrf	(??_eusartparser+4)& (0+255),b
 21145  0012A0  6BE7               	clrf	(??_eusartparser+5)& (0+255),b
 21146  0012A2  C0E5  F0E7         	movff	??_eusartparser+3,??_eusartparser+5
 21147  0012A6  C0E4  F0E6         	movff	??_eusartparser+2,??_eusartparser+4
 21148  0012AA  6BE5               	clrf	(??_eusartparser+3)& (0+255),b
 21149  0012AC  6BE4               	clrf	(??_eusartparser+2)& (0+255),b
 21150  0012AE  51E2               	movf	??_eusartparser& (0+255),w,b
 21151  0012B0  25E4               	addwf	(??_eusartparser+2)& (0+255),w,b
 21152  0012B2  6FF8               	movwf	eusartparser@serial& (0+255),b
 21153  0012B4  51E3               	movf	(??_eusartparser+1)& (0+255),w,b
 21154  0012B6  21E5               	addwfc	(??_eusartparser+3)& (0+255),w,b
 21155  0012B8  6FF9               	movwf	(eusartparser@serial+1)& (0+255),b
 21156  0012BA  0E00               	movlw	0
 21157  0012BC  21E6               	addwfc	(??_eusartparser+4)& (0+255),w,b
 21158  0012BE  6FFA               	movwf	(eusartparser@serial+2)& (0+255),b
 21159  0012C0  0E00               	movlw	0
 21160  0012C2  21E7               	addwfc	(??_eusartparser+5)& (0+255),w,b
 21161  0012C4  6FFB               	movwf	(eusartparser@serial+3)& (0+255),b
 21162                           
 21163                           ; BSR set to: 0
 21164                           ;eusartparser.c: 519:                     if(validateRemoteSerialNumber(serial, NO, &pos
      +                          )==NoCMD){
 21165  0012C6  C0F8  F02E         	movff	eusartparser@serial,validateRemoteSerialNumber@serial
 21166  0012CA  C0F9  F02F         	movff	eusartparser@serial+1,validateRemoteSerialNumber@serial+1
 21167  0012CE  C0FA  F030         	movff	eusartparser@serial+2,validateRemoteSerialNumber@serial+2
 21168  0012D2  C0FB  F031         	movff	eusartparser@serial+3,validateRemoteSerialNumber@serial+3
 21169  0012D6  0E00               	movlw	0
 21170  0012D8  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 21171  0012DA  0EEC               	movlw	low eusartparser@pos
 21172  0012DC  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 21173  0012DE  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
 21174  0012E0  EC4C  F031         	call	_validateRemoteSerialNumber	;wreg free
 21175  0012E4  0900               	iorlw	0
 21176  0012E6  A4D8               	btfss	status,2,c
 21177  0012E8  D04D               	goto	u33960
 21178                           
 21179                           ; BSR set to: 0
 21180                           ;eusartparser.c: 520:                         for(uint8_t i=0;;i++)
 21181  0012EA  0E00               	movlw	0
 21182  0012EC  6FF1               	movwf	eusartparser@i_7384& (0+255),b
 21183  0012EE                     l27790:
 21184                           
 21185                           ; BSR set to: 0
 21186                           ;eusartparser.c: 521:                             if(cmdMemoryIsEmpty(0,i)==1&&package->
      +                          address==0){
 21187  0012EE  C0F1  F02E         	movff	eusartparser@i_7384,cmdMemoryIsEmpty@position
 21188  0012F2  0E00               	movlw	0
 21189  0012F4  EC1E  F041         	call	_cmdMemoryIsEmpty
 21190  0012F8  06E8               	decf	wreg,f,c
 21191  0012FA  A4D8               	btfss	status,2,c
 21192  0012FC  D02D               	goto	l27802
 21193  0012FE  0100               	movlb	0	; () banked
 21194  001300  EE20 F001          	lfsr	2,1
 21195  001304  51E0               	movf	eusartparser@package& (0+255),w,b
 21196  001306  26D9               	addwf	fsr2l,f,c
 21197  001308  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21198  00130A  22DA               	addwfc	fsr2h,f,c
 21199  00130C  50DF               	movf	indf2,w,c
 21200  00130E  A4D8               	btfss	status,2,c
 21201  001310  D023               	goto	l27802
 21202                           
 21203                           ; BSR set to: 0
 21204                           ;eusartparser.c: 522:                                 saveNewSerial(0,serial,i);
 21205  001312  C0F8  F0D8         	movff	eusartparser@serial,saveNewSerial@tempSerial
 21206  001316  C0F9  F0D9         	movff	eusartparser@serial+1,saveNewSerial@tempSerial+1
 21207  00131A  C0FA  F0DA         	movff	eusartparser@serial+2,saveNewSerial@tempSerial+2
 21208  00131E  C0FB  F0DB         	movff	eusartparser@serial+3,saveNewSerial@tempSerial+3
 21209  001322  C0F1  F0DC         	movff	eusartparser@i_7384,saveNewSerial@position
 21210  001326  0E00               	movlw	0
 21211  001328  ECED  F045         	call	_saveNewSerial
 21212  00132C                     l27796:
 21213                           
 21214                           ;eusartparser.c: 523:                                 confirmpackage(package, 1);
 21215  00132C  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 21216  001330  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 21217  001334  0E01               	movlw	1
 21218  001336  6E14               	movwf	confirmpackage@confirm^0,c
 21219  001338  EC81  F048         	call	_confirmpackage	;wreg free
 21220  00133C                     l27798:
 21221                           
 21222                           ;eusartparser.c: 524:                                 write_package(*package);
 21223  00133C  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21224  001340  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21225  001344  EE00  F011         	lfsr	0,write_package@package
 21226  001348  0E06               	movlw	6
 21227  00134A                     u33941:
 21228  00134A  CFDB FFEB          	movff	plusw2,plusw0
 21229  00134E  06E8               	decf	wreg,f,c
 21230  001350  E2FC               	bc	u33941
 21231  001352  ECCB  F04C         	call	_write_package	;wreg free
 21232                           
 21233                           ;eusartparser.c: 525:                                 break;
 21234  001356  D021               	goto	l27818
 21235  001358                     l27802:
 21236  001358  C0F1  F02E         	movff	eusartparser@i_7384,cmdMemoryIsEmpty@position
 21237  00135C  0E00               	movlw	0
 21238  00135E  EC1E  F041         	call	_cmdMemoryIsEmpty
 21239  001362  06E8               	decf	wreg,f,c
 21240  001364  A4D8               	btfss	status,2,c
 21241  001366  D009               	goto	l27806
 21242                           
 21243                           ;eusartparser.c: 528:                                 package->address--;
 21244  001368  0100               	movlb	0	; () banked
 21245  00136A  EE20 F001          	lfsr	2,1
 21246  00136E  51E0               	movf	eusartparser@package& (0+255),w,b
 21247  001370  26D9               	addwf	fsr2l,f,c
 21248  001372  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21249  001374  22DA               	addwfc	fsr2h,f,c
 21250  001376  06DF               	decf	indf2,f,c
 21251                           
 21252                           ;eusartparser.c: 529:                             }
 21253  001378  D00E               	goto	l27812
 21254  00137A                     l27806:
 21255  00137A  0100               	movlb	0	; () banked
 21256  00137C  51F1               	movf	eusartparser@i_7384& (0+255),w,b
 21257  00137E  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21258  001380  A4D8               	btfss	status,2,c
 21259  001382  D009               	goto	l27812
 21260  001384                     u33960:
 21261                           
 21262                           ; BSR set to: 0
 21263                           ;eusartparser.c: 531:                                 confirmpackage(package, 0);
 21264  001384  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 21265  001388  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 21266  00138C  0E00               	movlw	0
 21267  00138E  6E14               	movwf	confirmpackage@confirm^0,c
 21268  001390  EC81  F048         	call	_confirmpackage	;wreg free
 21269  001394  D7D3               	goto	l27798
 21270  001396                     l27812:
 21271                           
 21272                           ; BSR set to: 0
 21273  001396  2BF1               	incf	eusartparser@i_7384& (0+255),f,b
 21274  001398  D7AA               	goto	l27790
 21275  00139A                     l27818:
 21276                           
 21277                           ;eusartparser.c: 540:                     save_f=0;
 21278  00139A  0E00               	movlw	0
 21279  00139C  0101               	movlb	1	; () banked
 21280  00139E  6F8D               	movwf	eusartparser@save_f& (0+255),b
 21281  0013A0  0012               	return	
 21282  0013A2                     l27824:
 21283                           
 21284                           ; BSR set to: 0
 21285                           ;eusartparser.c: 549:             done_changes=1;
 21286  0013A2  0E01               	movlw	1
 21287  0013A4  0101               	movlb	1	; () banked
 21288  0013A6  6F8E               	movwf	_done_changes& (0+255),b
 21289                           
 21290                           ;eusartparser.c: 550:             if(programmer_enable){
 21291  0013A8  0100               	movlb	0	; () banked
 21292  0013AA  5185               	movf	_programmer_enable& (0+255),w,b
 21293  0013AC  B4D8               	btfsc	status,2,c
 21294  0013AE  D5EC               	goto	l27660
 21295                           
 21296                           ; BSR set to: 0
 21297                           ;eusartparser.c: 551:                 for(uint8_t i=0;;i++)
 21298  0013B0  0E00               	movlw	0
 21299  0013B2  6FF2               	movwf	eusartparser@i_7385& (0+255),b
 21300  0013B4                     l27828:
 21301                           
 21302                           ; BSR set to: 0
 21303                           ;eusartparser.c: 552:                     if(cmdMemoryIsEmpty(0,i)==0&&package->address=
      +                          =0){
 21304  0013B4  C0F2  F02E         	movff	eusartparser@i_7385,cmdMemoryIsEmpty@position
 21305  0013B8  0E00               	movlw	0
 21306  0013BA  EC1E  F041         	call	_cmdMemoryIsEmpty
 21307  0013BE  0900               	iorlw	0
 21308  0013C0  A4D8               	btfss	status,2,c
 21309  0013C2  D010               	goto	l27842
 21310  0013C4  0100               	movlb	0	; () banked
 21311  0013C6  EE20 F001          	lfsr	2,1
 21312  0013CA  51E0               	movf	eusartparser@package& (0+255),w,b
 21313  0013CC  26D9               	addwf	fsr2l,f,c
 21314  0013CE  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21315  0013D0  22DA               	addwfc	fsr2h,f,c
 21316  0013D2  50DF               	movf	indf2,w,c
 21317  0013D4  A4D8               	btfss	status,2,c
 21318  0013D6  D006               	goto	l27842
 21319                           
 21320                           ; BSR set to: 0
 21321                           ;eusartparser.c: 553:                         RemoveSerial(0, i);
 21322  0013D8  C0F2  F03A         	movff	eusartparser@i_7385,RemoveSerial@position
 21323  0013DC  0E00               	movlw	0
 21324  0013DE  ECCE  F043         	call	_RemoveSerial
 21325  0013E2  D7A4               	goto	l27796
 21326  0013E4                     l27842:
 21327  0013E4  C0F2  F02E         	movff	eusartparser@i_7385,cmdMemoryIsEmpty@position
 21328  0013E8  0E00               	movlw	0
 21329  0013EA  EC1E  F041         	call	_cmdMemoryIsEmpty
 21330  0013EE  0900               	iorlw	0
 21331  0013F0  A4D8               	btfss	status,2,c
 21332  0013F2  D009               	goto	l27846
 21333                           
 21334                           ;eusartparser.c: 560:                         package->address--;
 21335  0013F4  0100               	movlb	0	; () banked
 21336  0013F6  EE20 F001          	lfsr	2,1
 21337  0013FA  51E0               	movf	eusartparser@package& (0+255),w,b
 21338  0013FC  26D9               	addwf	fsr2l,f,c
 21339  0013FE  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21340  001400  22DA               	addwfc	fsr2h,f,c
 21341  001402  06DF               	decf	indf2,f,c
 21342                           
 21343                           ;eusartparser.c: 561:                     }
 21344  001404  D005               	goto	l27854
 21345  001406                     l27846:
 21346  001406  0100               	movlb	0	; () banked
 21347  001408  51F2               	movf	eusartparser@i_7385& (0+255),w,b
 21348  00140A  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21349  00140C  B4D8               	btfsc	status,2,c
 21350  00140E  D7BA               	goto	u33960
 21351  001410                     l27854:
 21352                           
 21353                           ; BSR set to: 0
 21354  001410  2BF2               	incf	eusartparser@i_7385& (0+255),f,b
 21355  001412  D7D0               	goto	l27828
 21356  001414                     l27860:
 21357                           
 21358                           ; BSR set to: 0
 21359                           ;eusartparser.c: 575:             for(uint8_t i=0;;i++)
 21360  001414  0E00               	movlw	0
 21361  001416  6FF3               	movwf	eusartparser@i_7386& (0+255),b
 21362  001418                     l27862:
 21363                           
 21364                           ; BSR set to: 0
 21365                           ;eusartparser.c: 576:                 if(cmdMemoryIsEmpty(0,i)==0&&package->address==0){
 21366  001418  C0F3  F02E         	movff	eusartparser@i_7386,cmdMemoryIsEmpty@position
 21367  00141C  0E00               	movlw	0
 21368  00141E  EC1E  F041         	call	_cmdMemoryIsEmpty
 21369  001422  0900               	iorlw	0
 21370  001424  A4D8               	btfss	status,2,c
 21371  001426  D02A               	goto	l27882
 21372  001428  0100               	movlb	0	; () banked
 21373  00142A  EE20 F001          	lfsr	2,1
 21374  00142E  51E0               	movf	eusartparser@package& (0+255),w,b
 21375  001430  26D9               	addwf	fsr2l,f,c
 21376  001432  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21377  001434  22DA               	addwfc	fsr2h,f,c
 21378  001436  50DF               	movf	indf2,w,c
 21379  001438  A4D8               	btfss	status,2,c
 21380  00143A  D020               	goto	l27882
 21381                           
 21382                           ; BSR set to: 0
 21383                           ;eusartparser.c: 577:                     ReadSerial(0, &serial, i);
 21384  00143C  0EF8               	movlw	low eusartparser@serial
 21385  00143E  6E2E               	movwf	ReadSerial@tempSerial^0,c
 21386  001440  C0F3  F02F         	movff	eusartparser@i_7386,ReadSerial@position
 21387  001444  0E00               	movlw	0
 21388  001446  EC25  F046         	call	_ReadSerial
 21389                           
 21390                           ;eusartparser.c: 578:                     package->data.data16=(uint16_t)serial;
 21391  00144A  0100               	movlb	0	; () banked
 21392  00144C  EE20 F002          	lfsr	2,2
 21393  001450  51E0               	movf	eusartparser@package& (0+255),w,b
 21394  001452  26D9               	addwf	fsr2l,f,c
 21395  001454  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21396  001456  22DA               	addwfc	fsr2h,f,c
 21397  001458  C0F8  FFDE         	movff	eusartparser@serial,postinc2
 21398  00145C  C0F9  FFDD         	movff	eusartparser@serial+1,postdec2
 21399                           
 21400                           ; BSR set to: 0
 21401                           ;eusartparser.c: 579:                     write_package(*package);
 21402  001460  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21403  001464  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21404  001468  EE00  F011         	lfsr	0,write_package@package
 21405  00146C  0E06               	movlw	6
 21406  00146E                     u34041:
 21407  00146E  CFDB FFEB          	movff	plusw2,plusw0
 21408  001472  06E8               	decf	wreg,f,c
 21409  001474  E2FC               	bc	u34041
 21410  001476  ECCB  F04C         	call	_write_package	;wreg free
 21411  00147A  D1D1               	goto	l28066
 21412  00147C                     l27882:
 21413  00147C  C0F3  F02E         	movff	eusartparser@i_7386,cmdMemoryIsEmpty@position
 21414  001480  0E00               	movlw	0
 21415  001482  EC1E  F041         	call	_cmdMemoryIsEmpty
 21416  001486  0900               	iorlw	0
 21417  001488  A4D8               	btfss	status,2,c
 21418  00148A  D009               	goto	l27886
 21419                           
 21420                           ;eusartparser.c: 587:                     package->address--;
 21421  00148C  0100               	movlb	0	; () banked
 21422  00148E  EE20 F001          	lfsr	2,1
 21423  001492  51E0               	movf	eusartparser@package& (0+255),w,b
 21424  001494  26D9               	addwf	fsr2l,f,c
 21425  001496  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21426  001498  22DA               	addwfc	fsr2h,f,c
 21427  00149A  06DF               	decf	indf2,f,c
 21428                           
 21429                           ;eusartparser.c: 588:                 }
 21430  00149C  D005               	goto	l27892
 21431  00149E                     l27886:
 21432  00149E  0100               	movlb	0	; () banked
 21433  0014A0  51F3               	movf	eusartparser@i_7386& (0+255),w,b
 21434  0014A2  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21435  0014A4  B4D8               	btfsc	status,2,c
 21436  0014A6  D570               	goto	l27660
 21437  0014A8                     l27892:
 21438                           
 21439                           ; BSR set to: 0
 21440  0014A8  2BF3               	incf	eusartparser@i_7386& (0+255),f,b
 21441  0014AA  D7B6               	goto	l27862
 21442  0014AC                     l27894:
 21443                           
 21444                           ; BSR set to: 0
 21445                           ;eusartparser.c: 596:                 package->address=0x00;
 21446  0014AC  EE20 F001          	lfsr	2,1
 21447  0014B0  51E0               	movf	eusartparser@package& (0+255),w,b
 21448  0014B2  26D9               	addwf	fsr2l,f,c
 21449  0014B4  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21450  0014B6  22DA               	addwfc	fsr2h,f,c
 21451  0014B8  0E00               	movlw	0
 21452  0014BA  6EDF               	movwf	indf2,c
 21453                           
 21454                           ;eusartparser.c: 597:                 package->data.data16=var_sys_NVM.positionRemotesWa
      +                          lk;
 21455  0014BC  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21456  0014BE  6FE2               	movwf	??_eusartparser& (0+255),b
 21457  0014C0  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21458  0014C2  EE20 F002          	lfsr	2,2
 21459  0014C6  51E0               	movf	eusartparser@package& (0+255),w,b
 21460  0014C8  26D9               	addwf	fsr2l,f,c
 21461  0014CA  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21462  0014CC  22DA               	addwfc	fsr2h,f,c
 21463  0014CE  C0E2  FFDE         	movff	??_eusartparser,postinc2
 21464  0014D2  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 21465                           
 21466                           ; BSR set to: 0
 21467                           ;eusartparser.c: 598:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesWalk;
      +                          i++)
 21468  0014D6  0E00               	movlw	0
 21469  0014D8  6FEA               	movwf	eusartparser@i_7388& (0+255),b
 21470  0014DA  D014               	goto	l27904
 21471  0014DC                     l27898:
 21472                           
 21473                           ; BSR set to: 0
 21474                           ;eusartparser.c: 599:                 if(cmdMemoryIsEmpty(1,i)==1)
 21475  0014DC  C0EA  F02E         	movff	eusartparser@i_7388,cmdMemoryIsEmpty@position
 21476  0014E0  0E01               	movlw	1
 21477  0014E2  EC1E  F041         	call	_cmdMemoryIsEmpty
 21478  0014E6  06E8               	decf	wreg,f,c
 21479  0014E8  A4D8               	btfss	status,2,c
 21480  0014EA  D00A               	goto	l27902
 21481                           
 21482                           ;eusartparser.c: 600:                     package->data.data16--;
 21483  0014EC  0100               	movlb	0	; () banked
 21484  0014EE  EE20 F002          	lfsr	2,2
 21485  0014F2  51E0               	movf	eusartparser@package& (0+255),w,b
 21486  0014F4  26D9               	addwf	fsr2l,f,c
 21487  0014F6  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21488  0014F8  22DA               	addwfc	fsr2h,f,c
 21489  0014FA  06DE               	decf	postinc2,f,c
 21490  0014FC  0E00               	movlw	0
 21491  0014FE  5ADD               	subwfb	postdec2,f,c
 21492  001500                     l27902:
 21493  001500  0100               	movlb	0	; () banked
 21494  001502  2BEA               	incf	eusartparser@i_7388& (0+255),f,b
 21495  001504                     l27904:
 21496                           
 21497                           ; BSR set to: 0
 21498  001504  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21499  001506  5DEA               	subwf	eusartparser@i_7388& (0+255),w,b
 21500  001508  B0D8               	btfsc	status,0,c
 21501  00150A  D5DB               	goto	u33780
 21502  00150C  D7E7               	goto	l27898
 21503  00150E                     l27912:
 21504                           
 21505                           ; BSR set to: 0
 21506                           ;eusartparser.c: 607:             package->address=0x00;
 21507  00150E  EE20 F001          	lfsr	2,1
 21508  001512  51E0               	movf	eusartparser@package& (0+255),w,b
 21509  001514  26D9               	addwf	fsr2l,f,c
 21510  001516  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21511  001518  22DA               	addwfc	fsr2h,f,c
 21512  00151A  0E00               	movlw	0
 21513  00151C  6EDF               	movwf	indf2,c
 21514                           
 21515                           ;eusartparser.c: 608:             package->data.data16=0;
 21516  00151E  EE20 F002          	lfsr	2,2
 21517  001522  51E0               	movf	eusartparser@package& (0+255),w,b
 21518  001524  26D9               	addwf	fsr2l,f,c
 21519  001526  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21520  001528  22DA               	addwfc	fsr2h,f,c
 21521  00152A  0E00               	movlw	0
 21522  00152C  6EDE               	movwf	postinc2,c
 21523  00152E  0E00               	movlw	0
 21524  001530  6EDD               	movwf	postdec2,c
 21525                           
 21526                           ; BSR set to: 0
 21527                           ;eusartparser.c: 609:             for(uint8_t i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 21528  001532  0E00               	movlw	0
 21529  001534  6FEB               	movwf	eusartparser@i_7389& (0+255),b
 21530  001536  D014               	goto	l27922
 21531  001538                     l27916:
 21532                           
 21533                           ; BSR set to: 0
 21534                           ;eusartparser.c: 610:             if(cmdMemoryIsEmpty(1,i)==1)
 21535  001538  C0EB  F02E         	movff	eusartparser@i_7389,cmdMemoryIsEmpty@position
 21536  00153C  0E01               	movlw	1
 21537  00153E  EC1E  F041         	call	_cmdMemoryIsEmpty
 21538  001542  06E8               	decf	wreg,f,c
 21539  001544  A4D8               	btfss	status,2,c
 21540  001546  D00A               	goto	l27920
 21541                           
 21542                           ;eusartparser.c: 611:                 package->data.data16++;
 21543  001548  0100               	movlb	0	; () banked
 21544  00154A  EE20 F002          	lfsr	2,2
 21545  00154E  51E0               	movf	eusartparser@package& (0+255),w,b
 21546  001550  26D9               	addwf	fsr2l,f,c
 21547  001552  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21548  001554  22DA               	addwfc	fsr2h,f,c
 21549  001556  2ADE               	incf	postinc2,f,c
 21550  001558  0E00               	movlw	0
 21551  00155A  22DD               	addwfc	postdec2,f,c
 21552  00155C                     l27920:
 21553  00155C  0100               	movlb	0	; () banked
 21554  00155E  2BEB               	incf	eusartparser@i_7389& (0+255),f,b
 21555  001560                     l27922:
 21556                           
 21557                           ; BSR set to: 0
 21558  001560  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21559  001562  5DEB               	subwf	eusartparser@i_7389& (0+255),w,b
 21560  001564  B0D8               	btfsc	status,0,c
 21561  001566  D5AD               	goto	u33780
 21562  001568  D7E7               	goto	l27916
 21563  00156A                     l27930:
 21564                           
 21565                           ; BSR set to: 0
 21566                           ;eusartparser.c: 617:             relcounter=0;
 21567  00156A  0E00               	movlw	0
 21568  00156C  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 21569                           
 21570                           ;eusartparser.c: 618:             for(uint8_t i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 21571  00156E  0E00               	movlw	0
 21572  001570  6FEF               	movwf	eusartparser@i_7390& (0+255),b
 21573  001572  D02E               	goto	l27942
 21574  001574                     l27932:
 21575                           
 21576                           ; BSR set to: 0
 21577                           ;eusartparser.c: 619:                 if(cmdMemoryIsEmpty(1,i)==0){
 21578  001574  C0EF  F02E         	movff	eusartparser@i_7390,cmdMemoryIsEmpty@position
 21579  001578  0E01               	movlw	1
 21580  00157A  EC1E  F041         	call	_cmdMemoryIsEmpty
 21581  00157E  0900               	iorlw	0
 21582  001580  A4D8               	btfss	status,2,c
 21583  001582  D024               	goto	l27940
 21584                           
 21585                           ;eusartparser.c: 620:                     package->data.data16=(uint16_t)i;
 21586  001584  0100               	movlb	0	; () banked
 21587  001586  51EF               	movf	eusartparser@i_7390& (0+255),w,b
 21588  001588  6FE2               	movwf	??_eusartparser& (0+255),b
 21589  00158A  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21590  00158C  EE20 F002          	lfsr	2,2
 21591  001590  51E0               	movf	eusartparser@package& (0+255),w,b
 21592  001592  26D9               	addwf	fsr2l,f,c
 21593  001594  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21594  001596  22DA               	addwfc	fsr2h,f,c
 21595  001598  C0E2  FFDE         	movff	??_eusartparser,postinc2
 21596  00159C  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 21597                           
 21598                           ;eusartparser.c: 621:                     package->address=relcounter;
 21599  0015A0  EE20 F001          	lfsr	2,1
 21600  0015A4  51E0               	movf	eusartparser@package& (0+255),w,b
 21601  0015A6  26D9               	addwf	fsr2l,f,c
 21602  0015A8  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21603  0015AA  22DA               	addwfc	fsr2h,f,c
 21604  0015AC  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 21605                           
 21606                           ; BSR set to: 0
 21607                           ;eusartparser.c: 622:                     relcounter++;
 21608  0015B0  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 21609                           
 21610                           ; BSR set to: 0
 21611                           ;eusartparser.c: 623:                     write_package(*package);
 21612  0015B2  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21613  0015B6  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21614  0015BA  EE00  F011         	lfsr	0,write_package@package
 21615  0015BE  0E06               	movlw	6
 21616  0015C0                     u34121:
 21617  0015C0  CFDB FFEB          	movff	plusw2,plusw0
 21618  0015C4  06E8               	decf	wreg,f,c
 21619  0015C6  E2FC               	bc	u34121
 21620  0015C8  ECCB  F04C         	call	_write_package	;wreg free
 21621  0015CC                     l27940:
 21622  0015CC  0100               	movlb	0	; () banked
 21623  0015CE  2BEF               	incf	eusartparser@i_7390& (0+255),f,b
 21624  0015D0                     l27942:
 21625                           
 21626                           ; BSR set to: 0
 21627  0015D0  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21628  0015D2  5DEF               	subwf	eusartparser@i_7390& (0+255),w,b
 21629  0015D4  B0D8               	btfsc	status,0,c
 21630  0015D6  D4AD               	goto	l27648
 21631  0015D8  D7CD               	goto	l27932
 21632  0015DA                     l27948:
 21633                           
 21634                           ; BSR set to: 0
 21635                           ;eusartparser.c: 629:             relcounter=0;
 21636  0015DA  0E00               	movlw	0
 21637  0015DC  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 21638                           
 21639                           ;eusartparser.c: 630:             for(uint8_t i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 21640  0015DE  0E00               	movlw	0
 21641  0015E0  6FF0               	movwf	eusartparser@i_7391& (0+255),b
 21642  0015E2  D02E               	goto	l27960
 21643  0015E4                     l27950:
 21644                           
 21645                           ; BSR set to: 0
 21646                           ;eusartparser.c: 631:                 if(cmdMemoryIsEmpty(1,i)==1){
 21647  0015E4  C0F0  F02E         	movff	eusartparser@i_7391,cmdMemoryIsEmpty@position
 21648  0015E8  0E01               	movlw	1
 21649  0015EA  EC1E  F041         	call	_cmdMemoryIsEmpty
 21650  0015EE  06E8               	decf	wreg,f,c
 21651  0015F0  A4D8               	btfss	status,2,c
 21652  0015F2  D024               	goto	l27958
 21653                           
 21654                           ;eusartparser.c: 632:                     package->data.data16=(uint16_t)i;
 21655  0015F4  0100               	movlb	0	; () banked
 21656  0015F6  51F0               	movf	eusartparser@i_7391& (0+255),w,b
 21657  0015F8  6FE2               	movwf	??_eusartparser& (0+255),b
 21658  0015FA  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21659  0015FC  EE20 F002          	lfsr	2,2
 21660  001600  51E0               	movf	eusartparser@package& (0+255),w,b
 21661  001602  26D9               	addwf	fsr2l,f,c
 21662  001604  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21663  001606  22DA               	addwfc	fsr2h,f,c
 21664  001608  C0E2  FFDE         	movff	??_eusartparser,postinc2
 21665  00160C  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 21666                           
 21667                           ;eusartparser.c: 633:                     package->address=relcounter;
 21668  001610  EE20 F001          	lfsr	2,1
 21669  001614  51E0               	movf	eusartparser@package& (0+255),w,b
 21670  001616  26D9               	addwf	fsr2l,f,c
 21671  001618  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21672  00161A  22DA               	addwfc	fsr2h,f,c
 21673  00161C  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 21674                           
 21675                           ; BSR set to: 0
 21676                           ;eusartparser.c: 634:                     relcounter++;
 21677  001620  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 21678                           
 21679                           ; BSR set to: 0
 21680                           ;eusartparser.c: 635:                     write_package(*package);
 21681  001622  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21682  001626  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21683  00162A  EE00  F011         	lfsr	0,write_package@package
 21684  00162E  0E06               	movlw	6
 21685  001630                     u34151:
 21686  001630  CFDB FFEB          	movff	plusw2,plusw0
 21687  001634  06E8               	decf	wreg,f,c
 21688  001636  E2FC               	bc	u34151
 21689  001638  ECCB  F04C         	call	_write_package	;wreg free
 21690  00163C                     l27958:
 21691  00163C  0100               	movlb	0	; () banked
 21692  00163E  2BF0               	incf	eusartparser@i_7391& (0+255),f,b
 21693  001640                     l27960:
 21694                           
 21695                           ; BSR set to: 0
 21696  001640  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21697  001642  5DF0               	subwf	eusartparser@i_7391& (0+255),w,b
 21698  001644  B0D8               	btfsc	status,0,c
 21699  001646  D475               	goto	l27648
 21700  001648  D7CD               	goto	l27950
 21701  00164A                     l27966:
 21702                           
 21703                           ; BSR set to: 0
 21704                           ;eusartparser.c: 641:             done_changes=1;
 21705  00164A  0E01               	movlw	1
 21706  00164C  0101               	movlb	1	; () banked
 21707  00164E  6F8E               	movwf	_done_changes& (0+255),b
 21708                           
 21709                           ;eusartparser.c: 642:             if(programmer_enable){
 21710  001650  0100               	movlb	0	; () banked
 21711  001652  5185               	movf	_programmer_enable& (0+255),w,b
 21712  001654  B4D8               	btfsc	status,2,c
 21713  001656  D498               	goto	l27660
 21714                           
 21715                           ; BSR set to: 0
 21716                           ;eusartparser.c: 643:                 if(save_f==0){
 21717  001658  0101               	movlb	1	; () banked
 21718  00165A  518D               	movf	eusartparser@save_f& (0+255),w,b
 21719  00165C  B4D8               	btfsc	status,2,c
 21720  00165E  D5E8               	goto	u33890
 21721                           
 21722                           ; BSR set to: 1
 21723                           ;eusartparser.c: 650:                     serial=((uint32_t)buffer<<16)+(uint32_t)packag
      +                          e->data.data16;
 21724                           
 21725                           ; BSR set to: 1
 21726                           ;eusartparser.c: 644:                     buffer=package->data.data16;
 21727  001660  0100               	movlb	0	; () banked
 21728  001662  EE20 F002          	lfsr	2,2
 21729  001666  51E0               	movf	eusartparser@package& (0+255),w,b
 21730  001668  26D9               	addwf	fsr2l,f,c
 21731  00166A  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21732  00166C  22DA               	addwfc	fsr2h,f,c
 21733  00166E  CFDE F0E2          	movff	postinc2,??_eusartparser
 21734  001672  CFDD F0E3          	movff	postdec2,??_eusartparser+1
 21735  001676  0101               	movlb	1	; () banked
 21736  001678  5185               	movf	eusartparser@buffer& (0+255),w,b
 21737  00167A  0100               	movlb	0	; () banked
 21738  00167C  6FE4               	movwf	(??_eusartparser+2)& (0+255),b
 21739  00167E  0101               	movlb	1	; () banked
 21740  001680  5186               	movf	(eusartparser@buffer+1)& (0+255),w,b
 21741  001682  0100               	movlb	0	; () banked
 21742  001684  6FE5               	movwf	(??_eusartparser+3)& (0+255),b
 21743  001686  6BE6               	clrf	(??_eusartparser+4)& (0+255),b
 21744  001688  6BE7               	clrf	(??_eusartparser+5)& (0+255),b
 21745  00168A  C0E5  F0E7         	movff	??_eusartparser+3,??_eusartparser+5
 21746  00168E  C0E4  F0E6         	movff	??_eusartparser+2,??_eusartparser+4
 21747  001692  6BE5               	clrf	(??_eusartparser+3)& (0+255),b
 21748  001694  6BE4               	clrf	(??_eusartparser+2)& (0+255),b
 21749  001696  51E2               	movf	??_eusartparser& (0+255),w,b
 21750  001698  25E4               	addwf	(??_eusartparser+2)& (0+255),w,b
 21751  00169A  6FF8               	movwf	eusartparser@serial& (0+255),b
 21752  00169C  51E3               	movf	(??_eusartparser+1)& (0+255),w,b
 21753  00169E  21E5               	addwfc	(??_eusartparser+3)& (0+255),w,b
 21754  0016A0  6FF9               	movwf	(eusartparser@serial+1)& (0+255),b
 21755  0016A2  0E00               	movlw	0
 21756  0016A4  21E6               	addwfc	(??_eusartparser+4)& (0+255),w,b
 21757  0016A6  6FFA               	movwf	(eusartparser@serial+2)& (0+255),b
 21758  0016A8  0E00               	movlw	0
 21759  0016AA  21E7               	addwfc	(??_eusartparser+5)& (0+255),w,b
 21760  0016AC  6FFB               	movwf	(eusartparser@serial+3)& (0+255),b
 21761                           
 21762                           ; BSR set to: 0
 21763                           ;eusartparser.c: 651:                     if(validateRemoteSerialNumber(serial, NO, &pos
      +                          )==NoCMD){
 21764  0016AE  C0F8  F02E         	movff	eusartparser@serial,validateRemoteSerialNumber@serial
 21765  0016B2  C0F9  F02F         	movff	eusartparser@serial+1,validateRemoteSerialNumber@serial+1
 21766  0016B6  C0FA  F030         	movff	eusartparser@serial+2,validateRemoteSerialNumber@serial+2
 21767  0016BA  C0FB  F031         	movff	eusartparser@serial+3,validateRemoteSerialNumber@serial+3
 21768  0016BE  0E00               	movlw	0
 21769  0016C0  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 21770  0016C2  0EEC               	movlw	low eusartparser@pos
 21771  0016C4  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 21772  0016C6  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
 21773  0016C8  EC4C  F031         	call	_validateRemoteSerialNumber	;wreg free
 21774  0016CC  0900               	iorlw	0
 21775  0016CE  A4D8               	btfss	status,2,c
 21776  0016D0  D659               	goto	u33960
 21777                           
 21778                           ; BSR set to: 0
 21779                           ;eusartparser.c: 652:                         for(uint8_t i=0;;i++)
 21780  0016D2  0E00               	movlw	0
 21781  0016D4  6FF4               	movwf	eusartparser@i_7392& (0+255),b
 21782  0016D6                     l27984:
 21783                           
 21784                           ; BSR set to: 0
 21785                           ;eusartparser.c: 653:                             if(cmdMemoryIsEmpty(1,i)==1&&package->
      +                          address==0){
 21786  0016D6  C0F4  F02E         	movff	eusartparser@i_7392,cmdMemoryIsEmpty@position
 21787  0016DA  0E01               	movlw	1
 21788  0016DC  EC1E  F041         	call	_cmdMemoryIsEmpty
 21789  0016E0  06E8               	decf	wreg,f,c
 21790  0016E2  A4D8               	btfss	status,2,c
 21791  0016E4  D018               	goto	l27996
 21792  0016E6  0100               	movlb	0	; () banked
 21793  0016E8  EE20 F001          	lfsr	2,1
 21794  0016EC  51E0               	movf	eusartparser@package& (0+255),w,b
 21795  0016EE  26D9               	addwf	fsr2l,f,c
 21796  0016F0  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21797  0016F2  22DA               	addwfc	fsr2h,f,c
 21798  0016F4  50DF               	movf	indf2,w,c
 21799  0016F6  A4D8               	btfss	status,2,c
 21800  0016F8  D00E               	goto	l27996
 21801                           
 21802                           ; BSR set to: 0
 21803                           ;eusartparser.c: 654:                                 saveNewSerial(1,serial,i);
 21804  0016FA  C0F8  F0D8         	movff	eusartparser@serial,saveNewSerial@tempSerial
 21805  0016FE  C0F9  F0D9         	movff	eusartparser@serial+1,saveNewSerial@tempSerial+1
 21806  001702  C0FA  F0DA         	movff	eusartparser@serial+2,saveNewSerial@tempSerial+2
 21807  001706  C0FB  F0DB         	movff	eusartparser@serial+3,saveNewSerial@tempSerial+3
 21808  00170A  C0F4  F0DC         	movff	eusartparser@i_7392,saveNewSerial@position
 21809  00170E  0E01               	movlw	1
 21810  001710  ECED  F045         	call	_saveNewSerial
 21811  001714  D60B               	goto	l27796
 21812  001716                     l27996:
 21813  001716  C0F4  F02E         	movff	eusartparser@i_7392,cmdMemoryIsEmpty@position
 21814  00171A  0E01               	movlw	1
 21815  00171C  EC1E  F041         	call	_cmdMemoryIsEmpty
 21816  001720  06E8               	decf	wreg,f,c
 21817  001722  A4D8               	btfss	status,2,c
 21818  001724  D009               	goto	l28000
 21819                           
 21820                           ;eusartparser.c: 660:                                 package->address--;
 21821  001726  0100               	movlb	0	; () banked
 21822  001728  EE20 F001          	lfsr	2,1
 21823  00172C  51E0               	movf	eusartparser@package& (0+255),w,b
 21824  00172E  26D9               	addwf	fsr2l,f,c
 21825  001730  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21826  001732  22DA               	addwfc	fsr2h,f,c
 21827  001734  06DF               	decf	indf2,f,c
 21828                           
 21829                           ;eusartparser.c: 661:                             }
 21830  001736  D005               	goto	l28006
 21831  001738                     l28000:
 21832  001738  0100               	movlb	0	; () banked
 21833  00173A  51F4               	movf	eusartparser@i_7392& (0+255),w,b
 21834  00173C  19B9               	xorwf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21835  00173E  B4D8               	btfsc	status,2,c
 21836  001740  D621               	goto	u33960
 21837  001742                     l28006:
 21838                           
 21839                           ; BSR set to: 0
 21840  001742  2BF4               	incf	eusartparser@i_7392& (0+255),f,b
 21841  001744  D7C8               	goto	l27984
 21842  001746                     l28018:
 21843                           
 21844                           ; BSR set to: 0
 21845                           ;eusartparser.c: 681:             done_changes=1;
 21846  001746  0E01               	movlw	1
 21847  001748  0101               	movlb	1	; () banked
 21848  00174A  6F8E               	movwf	_done_changes& (0+255),b
 21849                           
 21850                           ;eusartparser.c: 682:             if(programmer_enable){
 21851  00174C  0100               	movlb	0	; () banked
 21852  00174E  5185               	movf	_programmer_enable& (0+255),w,b
 21853  001750  B4D8               	btfsc	status,2,c
 21854  001752  D41A               	goto	l27660
 21855                           
 21856                           ; BSR set to: 0
 21857                           ;eusartparser.c: 683:                 for(uint8_t i=0;;i++)
 21858  001754  0E00               	movlw	0
 21859  001756  6FF5               	movwf	eusartparser@i_7393& (0+255),b
 21860  001758                     l28022:
 21861                           
 21862                           ; BSR set to: 0
 21863                           ;eusartparser.c: 684:                     if(cmdMemoryIsEmpty(1,i)==0&&package->address=
      +                          =0){
 21864  001758  C0F5  F02E         	movff	eusartparser@i_7393,cmdMemoryIsEmpty@position
 21865  00175C  0E01               	movlw	1
 21866  00175E  EC1E  F041         	call	_cmdMemoryIsEmpty
 21867  001762  0900               	iorlw	0
 21868  001764  A4D8               	btfss	status,2,c
 21869  001766  D010               	goto	l28036
 21870  001768  0100               	movlb	0	; () banked
 21871  00176A  EE20 F001          	lfsr	2,1
 21872  00176E  51E0               	movf	eusartparser@package& (0+255),w,b
 21873  001770  26D9               	addwf	fsr2l,f,c
 21874  001772  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21875  001774  22DA               	addwfc	fsr2h,f,c
 21876  001776  50DF               	movf	indf2,w,c
 21877  001778  A4D8               	btfss	status,2,c
 21878  00177A  D006               	goto	l28036
 21879                           
 21880                           ; BSR set to: 0
 21881                           ;eusartparser.c: 685:                         RemoveSerial(1, i);
 21882  00177C  C0F5  F03A         	movff	eusartparser@i_7393,RemoveSerial@position
 21883  001780  0E01               	movlw	1
 21884  001782  ECCE  F043         	call	_RemoveSerial
 21885  001786  D5D2               	goto	l27796
 21886  001788                     l28036:
 21887  001788  C0F5  F02E         	movff	eusartparser@i_7393,cmdMemoryIsEmpty@position
 21888  00178C  0E01               	movlw	1
 21889  00178E  EC1E  F041         	call	_cmdMemoryIsEmpty
 21890  001792  0900               	iorlw	0
 21891  001794  A4D8               	btfss	status,2,c
 21892  001796  D009               	goto	l28040
 21893                           
 21894                           ;eusartparser.c: 692:                         package->address--;
 21895  001798  0100               	movlb	0	; () banked
 21896  00179A  EE20 F001          	lfsr	2,1
 21897  00179E  51E0               	movf	eusartparser@package& (0+255),w,b
 21898  0017A0  26D9               	addwf	fsr2l,f,c
 21899  0017A2  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21900  0017A4  22DA               	addwfc	fsr2h,f,c
 21901  0017A6  06DF               	decf	indf2,f,c
 21902                           
 21903                           ;eusartparser.c: 693:                     }
 21904  0017A8  D005               	goto	l28048
 21905  0017AA                     l28040:
 21906  0017AA  0100               	movlb	0	; () banked
 21907  0017AC  51F5               	movf	eusartparser@i_7393& (0+255),w,b
 21908  0017AE  19B9               	xorwf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21909  0017B0  B4D8               	btfsc	status,2,c
 21910  0017B2  D5E8               	goto	u33960
 21911  0017B4                     l28048:
 21912                           
 21913                           ; BSR set to: 0
 21914  0017B4  2BF5               	incf	eusartparser@i_7393& (0+255),f,b
 21915  0017B6  D7D0               	goto	l28022
 21916  0017B8                     l28054:
 21917                           
 21918                           ; BSR set to: 0
 21919                           ;eusartparser.c: 707:             for(uint8_t i=0;;i++)
 21920  0017B8  0E00               	movlw	0
 21921  0017BA  6FF6               	movwf	eusartparser@i_7394& (0+255),b
 21922  0017BC                     l28056:
 21923                           
 21924                           ; BSR set to: 0
 21925                           ;eusartparser.c: 708:                 if(cmdMemoryIsEmpty(1,i)==0&&package->address==0){
 21926  0017BC  C0F6  F02E         	movff	eusartparser@i_7394,cmdMemoryIsEmpty@position
 21927  0017C0  0E01               	movlw	1
 21928  0017C2  EC1E  F041         	call	_cmdMemoryIsEmpty
 21929  0017C6  0900               	iorlw	0
 21930  0017C8  A4D8               	btfss	status,2,c
 21931  0017CA  D035               	goto	l28076
 21932  0017CC  0100               	movlb	0	; () banked
 21933  0017CE  EE20 F001          	lfsr	2,1
 21934  0017D2  51E0               	movf	eusartparser@package& (0+255),w,b
 21935  0017D4  26D9               	addwf	fsr2l,f,c
 21936  0017D6  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21937  0017D8  22DA               	addwfc	fsr2h,f,c
 21938  0017DA  50DF               	movf	indf2,w,c
 21939  0017DC  A4D8               	btfss	status,2,c
 21940  0017DE  D02B               	goto	l28076
 21941                           
 21942                           ; BSR set to: 0
 21943                           ;eusartparser.c: 709:                     ReadSerial(1, &serial, i);
 21944  0017E0  0EF8               	movlw	low eusartparser@serial
 21945  0017E2  6E2E               	movwf	ReadSerial@tempSerial^0,c
 21946  0017E4  C0F6  F02F         	movff	eusartparser@i_7394,ReadSerial@position
 21947  0017E8  0E01               	movlw	1
 21948  0017EA  EC25  F046         	call	_ReadSerial
 21949                           
 21950                           ;eusartparser.c: 710:                     package->data.data16=(uint16_t)serial;
 21951  0017EE  0100               	movlb	0	; () banked
 21952  0017F0  EE20 F002          	lfsr	2,2
 21953  0017F4  51E0               	movf	eusartparser@package& (0+255),w,b
 21954  0017F6  26D9               	addwf	fsr2l,f,c
 21955  0017F8  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21956  0017FA  22DA               	addwfc	fsr2h,f,c
 21957  0017FC  C0F8  FFDE         	movff	eusartparser@serial,postinc2
 21958  001800  C0F9  FFDD         	movff	eusartparser@serial+1,postdec2
 21959                           
 21960                           ; BSR set to: 0
 21961                           ;eusartparser.c: 711:                     write_package(*package);
 21962  001804  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21963  001808  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21964  00180C  EE00  F011         	lfsr	0,write_package@package
 21965  001810  0E06               	movlw	6
 21966  001812                     u34311:
 21967  001812  CFDB FFEB          	movff	plusw2,plusw0
 21968  001816  06E8               	decf	wreg,f,c
 21969  001818  E2FC               	bc	u34311
 21970  00181A  ECCB  F04C         	call	_write_package	;wreg free
 21971  00181E                     l28066:
 21972                           
 21973                           ;eusartparser.c: 712:                     package->data.data16=(uint16_t)(serial>>16);
 21974  00181E  0100               	movlb	0	; () banked
 21975  001820  EE20 F002          	lfsr	2,2
 21976  001824  51E0               	movf	eusartparser@package& (0+255),w,b
 21977  001826  26D9               	addwf	fsr2l,f,c
 21978  001828  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21979  00182A  22DA               	addwfc	fsr2h,f,c
 21980  00182C  C0FA  FFDE         	movff	eusartparser@serial+2,postinc2
 21981  001830  C0FB  FFDD         	movff	eusartparser@serial+3,postdec2
 21982  001834  D446               	goto	u33780
 21983  001836                     l28076:
 21984  001836  C0F6  F02E         	movff	eusartparser@i_7394,cmdMemoryIsEmpty@position
 21985  00183A  0E01               	movlw	1
 21986  00183C  EC1E  F041         	call	_cmdMemoryIsEmpty
 21987  001840  0900               	iorlw	0
 21988  001842  A4D8               	btfss	status,2,c
 21989  001844  D009               	goto	l28080
 21990                           
 21991                           ;eusartparser.c: 719:                     package->address--;
 21992  001846  0100               	movlb	0	; () banked
 21993  001848  EE20 F001          	lfsr	2,1
 21994  00184C  51E0               	movf	eusartparser@package& (0+255),w,b
 21995  00184E  26D9               	addwf	fsr2l,f,c
 21996  001850  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21997  001852  22DA               	addwfc	fsr2h,f,c
 21998  001854  06DF               	decf	indf2,f,c
 21999                           
 22000                           ;eusartparser.c: 720:                 }
 22001  001856  D006               	goto	l28086
 22002  001858                     l28080:
 22003  001858  0100               	movlb	0	; () banked
 22004  00185A  51F6               	movf	eusartparser@i_7394& (0+255),w,b
 22005  00185C  19B9               	xorwf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 22006  00185E  B4D8               	btfsc	status,2,c
 22007  001860  EFC4  F007         	goto	l27660
 22008  001864                     l28086:
 22009                           
 22010                           ; BSR set to: 0
 22011  001864  2BF6               	incf	eusartparser@i_7394& (0+255),f,b
 22012  001866  D7AA               	goto	l28056
 22013  001868                     l28088:
 22014                           
 22015                           ; BSR set to: 0
 22016                           ;eusartparser.c: 728:             updateChangesToUart();
 22017  001868  EC99  F047         	call	_updateChangesToUart	;wreg free
 22018                           
 22019                           ;eusartparser.c: 729:             break;
 22020  00186C  0012               	return	
 22021  00186E                     l28094:
 22022                           
 22023                           ; BSR set to: 0
 22024  00186E  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 22025  001872  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 22026  001876  50DF               	movf	indf2,w,c
 22027  001878  6FE2               	movwf	??_eusartparser& (0+255),b
 22028  00187A  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 22029                           
 22030                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22031                           ; Switch size 1, requested type "simple"
 22032                           ; Number of cases is 1, Range of values is 0 to 0
 22033                           ; switch strategies available:
 22034                           ; Name         Instructions Cycles
 22035                           ; simple_byte            4     3 (average)
 22036                           ;	Chosen strategy is simple_byte
 22037  00187C  51E3               	movf	(??_eusartparser+1)& (0+255),w,b
 22038  00187E  0A00               	xorlw	0	; case 0
 22039  001880  A4D8               	btfss	status,2,c
 22040  001882  EFC4  F007         	goto	l27660
 22041                           
 22042                           ; BSR set to: 0
 22043                           ; Switch size 1, requested type "simple"
 22044                           ; Number of cases is 19, Range of values is 0 to 18
 22045                           ; switch strategies available:
 22046                           ; Name         Instructions Cycles
 22047                           ; simple_byte           58    30 (average)
 22048                           ;	Chosen strategy is simple_byte
 22049  001886  51E2               	movf	??_eusartparser& (0+255),w,b
 22050  001888  0A00               	xorlw	0	; case 0
 22051  00188A  B4D8               	btfsc	status,2,c
 22052  00188C  EF93  F007         	goto	l27646
 22053  001890  0A01               	xorlw	1	; case 1
 22054  001892  B4D8               	btfsc	status,2,c
 22055  001894  EFAF  F007         	goto	l27652
 22056  001898  0A03               	xorlw	3	; case 2
 22057  00189A  B4D8               	btfsc	status,2,c
 22058  00189C  EFCD  F007         	goto	l27664
 22059  0018A0  0A01               	xorlw	1	; case 3
 22060  0018A2  B4D8               	btfsc	status,2,c
 22061  0018A4  EF99  F007         	goto	l27648
 22062  0018A8  0A07               	xorlw	7	; case 4
 22063  0018AA  B4D8               	btfsc	status,2,c
 22064  0018AC  EF31  F008         	goto	l27700
 22065  0018B0  0A01               	xorlw	1	; case 5
 22066  0018B2  B4D8               	btfsc	status,2,c
 22067  0018B4  D414               	goto	l27718
 22068  0018B6  0A03               	xorlw	3	; case 6
 22069  0018B8  B4D8               	btfsc	status,2,c
 22070  0018BA  D43F               	goto	l27736
 22071  0018BC  0A01               	xorlw	1	; case 7
 22072  0018BE  B4D8               	btfsc	status,2,c
 22073  0018C0  D474               	goto	l27754
 22074  0018C2  0A0F               	xorlw	15	; case 8
 22075  0018C4  B4D8               	btfsc	status,2,c
 22076  0018C6  D4A9               	goto	l27772
 22077  0018C8  0A01               	xorlw	1	; case 9
 22078  0018CA  B4D8               	btfsc	status,2,c
 22079  0018CC  D56A               	goto	l27824
 22080  0018CE  0A03               	xorlw	3	; case 10
 22081  0018D0  B4D8               	btfsc	status,2,c
 22082  0018D2  D5A0               	goto	l27860
 22083  0018D4  0A01               	xorlw	1	; case 11
 22084  0018D6  B4D8               	btfsc	status,2,c
 22085  0018D8  D5E9               	goto	l27894
 22086  0018DA  0A07               	xorlw	7	; case 12
 22087  0018DC  B4D8               	btfsc	status,2,c
 22088  0018DE  D617               	goto	l27912
 22089  0018E0  0A01               	xorlw	1	; case 13
 22090  0018E2  B4D8               	btfsc	status,2,c
 22091  0018E4  D642               	goto	l27930
 22092  0018E6  0A03               	xorlw	3	; case 14
 22093  0018E8  B4D8               	btfsc	status,2,c
 22094  0018EA  D677               	goto	l27948
 22095  0018EC  0A01               	xorlw	1	; case 15
 22096  0018EE  B4D8               	btfsc	status,2,c
 22097  0018F0  D6AC               	goto	l27966
 22098  0018F2  0A1F               	xorlw	31	; case 16
 22099  0018F4  B4D8               	btfsc	status,2,c
 22100  0018F6  D727               	goto	l28018
 22101  0018F8  0A01               	xorlw	1	; case 17
 22102  0018FA  B4D8               	btfsc	status,2,c
 22103  0018FC  D75D               	goto	l28054
 22104  0018FE  0A03               	xorlw	3	; case 18
 22105  001900  B4D8               	btfsc	status,2,c
 22106  001902  D7B2               	goto	l28088
 22107  001904  EFC4  F007         	goto	l27660
 22108  001908                     __end_of_eusartparser:
 22109                           	callstack 0
 22110                           
 22111 ;; *************** function _write_eusartparser *****************
 22112 ;; Defined at:
 22113 ;;		line 242 in file "eusartparser.c"
 22114 ;; Parameters:    Size  Location     Type
 22115 ;;  package         7   15[COMRAM] struct package_t
 22116 ;; Auto vars:     Size  Location     Type
 22117 ;;  debug2          2   32[COMRAM] volatile int 
 22118 ;;  debug           2   30[COMRAM] volatile int 
 22119 ;; Return value:  Size  Location     Type
 22120 ;;                  1    wreg      void 
 22121 ;; Registers used:
 22122 ;;		wreg, status,2, status,0
 22123 ;; Tracked objects:
 22124 ;;		On entry : 3F/0
 22125 ;;		On exit  : 3F/0
 22126 ;;		Unchanged: 0/0
 22127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22128 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22129 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22130 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22131 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22132 ;;Total ram usage:       19 bytes
 22133 ;; Hardware stack levels used: 1
 22134 ;; Hardware stack levels required when called: 4
 22135 ;; This function calls:
 22136 ;;		Nothing
 22137 ;; This function is called by:
 22138 ;;		_eusartparser
 22139 ;; This function uses a non-reentrant model
 22140 ;;
 22141                           
 22142                           	psect	text75
 22143  003060                     __ptext75:
 22144                           	callstack 0
 22145  003060                     _write_eusartparser:
 22146                           	callstack 25
 22147                           
 22148                           ; BSR set to: 0
 22149                           ;eusartparser.c: 243:     volatile int debug=(uint8_t)package.address;
 22150                           
 22151                           ;incstack = 0
 22152  003060  C011  F01F         	movff	write_eusartparser@package+1,write_eusartparser@debug	;volatile
 22153  003064  6A20               	clrf	(write_eusartparser@debug+1)^0,c	;volatile
 22154                           
 22155                           ; BSR set to: 0
 22156                           ;eusartparser.c: 244:     volatile int debug2=0x10;
 22157  003066  0E00               	movlw	0
 22158  003068  6E22               	movwf	(write_eusartparser@debug2+1)^0,c	;volatile
 22159  00306A  0E10               	movlw	16
 22160  00306C  6E21               	movwf	write_eusartparser@debug2^0,c	;volatile
 22161                           
 22162                           ;eusartparser.c: 245:     switch((uint8_t)package.address){
 22163  00306E  D240               	goto	l24628
 22164  003070                     l3632:
 22165                           
 22166                           ; BSR set to: 0
 22167                           ;eusartparser.c: 248:             var_sys_NVM.decelarationOpen=package.data.data8[0];
 22168  003070  C012  F098         	movff	write_eusartparser@package+2,_var_sys_NVM	;volatile
 22169                           
 22170                           ;eusartparser.c: 249:             var_sys_NVM.decelarationClose=package.data.data8[1];
 22171  003074  C013  F099         	movff	write_eusartparser@package+3,_var_sys_NVM+1	;volatile
 22172                           
 22173                           ;eusartparser.c: 250:             break;
 22174  003078  0012               	return	
 22175  00307A                     l3634:
 22176                           
 22177                           ; BSR set to: 0
 22178                           ;eusartparser.c: 252:             var_sys_NVM.motorPower=package.data.data8[0];
 22179  00307A  C012  F09A         	movff	write_eusartparser@package+2,_var_sys_NVM+2	;volatile
 22180                           
 22181                           ;eusartparser.c: 253:             var_sys_NVM.motorSensitivity=package.data.data8[1];
 22182  00307E  C013  F09B         	movff	write_eusartparser@package+3,_var_sys_NVM+3	;volatile
 22183                           
 22184                           ;eusartparser.c: 254:             break;
 22185  003082  0012               	return	
 22186  003084                     l3635:
 22187                           
 22188                           ; BSR set to: 0
 22189                           ;eusartparser.c: 256:             var_sys_NVM.walkTime=package.data.data8[1];
 22190  003084  C013  F09C         	movff	write_eusartparser@package+3,_var_sys_NVM+4	;volatile
 22191                           
 22192                           ;eusartparser.c: 257:             break;
 22193  003088  0012               	return	
 22194  00308A                     l3637:
 22195                           
 22196                           ; BSR set to: 0
 22197                           ;eusartparser.c: 260:             var_sys_NVM.autoTimeFullClose=package.data.data8[0];
 22198  00308A  C012  F09D         	movff	write_eusartparser@package+2,_var_sys_NVM+5	;volatile
 22199                           
 22200                           ;eusartparser.c: 261:             var_sys_NVM.autoTimeWalkClose=package.data.data8[1];
 22201  00308E  C013  F09E         	movff	write_eusartparser@package+3,_var_sys_NVM+6	;volatile
 22202                           
 22203                           ;eusartparser.c: 262:             break;
 22204  003092  0012               	return	
 22205  003094                     l3639:
 22206                           
 22207                           ; BSR set to: 0
 22208                           ;eusartparser.c: 265:             var_sys_NVM.photoCellIsON=package.data.data8[0];
 22209  003094  C012  F09F         	movff	write_eusartparser@package+2,_var_sys_NVM+7	;volatile
 22210                           
 22211                           ;eusartparser.c: 266:             var_sys_NVM.photoCellInOpen=package.data.data8[1];
 22212  003098  C013  F0A0         	movff	write_eusartparser@package+3,_var_sys_NVM+8	;volatile
 22213                           
 22214                           ;eusartparser.c: 267:             break;
 22215  00309C  0012               	return	
 22216  00309E                     l3640:
 22217                           
 22218                           ; BSR set to: 0
 22219                           ;eusartparser.c: 269:             var_sys_NVM.securityBandIsON=package.data.data8[0];
 22220  00309E  C012  F0A1         	movff	write_eusartparser@package+2,_var_sys_NVM+9	;volatile
 22221                           
 22222                           ;eusartparser.c: 270:             var_sys_NVM.securityBandType=package.data.data8[1];
 22223  0030A2  C013  F0A2         	movff	write_eusartparser@package+3,_var_sys_NVM+10	;volatile
 22224                           
 22225                           ;eusartparser.c: 271:             break;
 22226  0030A6  0012               	return	
 22227  0030A8                     l3641:
 22228                           
 22229                           ; BSR set to: 0
 22230                           ;eusartparser.c: 273:             var_sys_NVM.securityBandInOpen=package.data.data8[1];
 22231  0030A8  C013  F0A3         	movff	write_eusartparser@package+3,_var_sys_NVM+11	;volatile
 22232                           
 22233                           ;eusartparser.c: 274:             break;
 22234  0030AC  0012               	return	
 22235  0030AE                     l3642:
 22236                           
 22237                           ; BSR set to: 0
 22238                           ;eusartparser.c: 276:             var_sys_NVM.operationMode=package.data.data8[1];
 22239  0030AE  C013  F0A4         	movff	write_eusartparser@package+3,_var_sys_NVM+12	;volatile
 22240                           
 22241                           ;eusartparser.c: 277:             break;
 22242  0030B2  0012               	return	
 22243  0030B4                     l3643:
 22244                           
 22245                           ; BSR set to: 0
 22246                           ;eusartparser.c: 279:             var_sys_NVM.flashLightMode=package.data.data8[1];
 22247  0030B4  C013  F0A5         	movff	write_eusartparser@package+3,_var_sys_NVM+13	;volatile
 22248                           
 22249                           ;eusartparser.c: 280:             break;
 22250  0030B8  0012               	return	
 22251  0030BA                     l3644:
 22252                           
 22253                           ; BSR set to: 0
 22254                           ;eusartparser.c: 282:             var_sys_NVM.programmingDistance=package.data.data8[1];
 22255  0030BA  C013  F0A6         	movff	write_eusartparser@package+3,_var_sys_NVM+14	;volatile
 22256                           
 22257                           ;eusartparser.c: 283:             break;
 22258  0030BE  0012               	return	
 22259  0030C0                     l3645:
 22260                           
 22261                           ; BSR set to: 0
 22262                           ;eusartparser.c: 285:             var_sys_NVM.decelarationSensivity=package.data.data8[1
      +                          ];
 22263  0030C0  C013  F0A7         	movff	write_eusartparser@package+3,_var_sys_NVM+15	;volatile
 22264                           
 22265                           ;eusartparser.c: 286:             break;
 22266  0030C4  0012               	return	
 22267  0030C6                     l3646:
 22268                           
 22269                           ; BSR set to: 0
 22270                           ;eusartparser.c: 289:             var_sys_NVM.homemPresente=package.data.data8[1];
 22271  0030C6  C013  F0A8         	movff	write_eusartparser@package+3,_var_sys_NVM+16	;volatile
 22272                           
 22273                           ;eusartparser.c: 290:             break;
 22274  0030CA  0012               	return	
 22275  0030CC                     l3648:
 22276                           
 22277                           ; BSR set to: 0
 22278                           ;eusartparser.c: 293:             var_sys_NVM.logicDigital=package.data.data8[1];
 22279  0030CC  C013  F0A9         	movff	write_eusartparser@package+3,_var_sys_NVM+17	;volatile
 22280                           
 22281                           ;eusartparser.c: 294:             break;
 22282  0030D0  0012               	return	
 22283  0030D2                     l3649:
 22284                           
 22285                           ; BSR set to: 0
 22286                           ;eusartparser.c: 296:             var_sys_NVM.softStart=package.data.data8[0];
 22287  0030D2  C012  F0AA         	movff	write_eusartparser@package+2,_var_sys_NVM+18	;volatile
 22288                           
 22289                           ;eusartparser.c: 297:             var_sys_NVM.softstop=package.data.data8[1];
 22290  0030D6  C013  F0AB         	movff	write_eusartparser@package+3,_var_sys_NVM+19	;volatile
 22291                           
 22292                           ;eusartparser.c: 298:             break;
 22293  0030DA  0012               	return	
 22294  0030DC                     l3651:
 22295                           
 22296                           ; BSR set to: 0
 22297                           ;eusartparser.c: 301:             var_sys_NVM.ligthTime=package.data.data8[1];
 22298  0030DC  C013  F0AC         	movff	write_eusartparser@package+3,_var_sys_NVM+20	;volatile
 22299                           
 22300                           ;eusartparser.c: 302:             break;
 22301  0030E0  0012               	return	
 22302  0030E2                     l3653:
 22303                           
 22304                           ; BSR set to: 0
 22305                           ;eusartparser.c: 305:             var_sys_NVM.folow_me=package.data.data8[1];
 22306  0030E2  C013  F0AD         	movff	write_eusartparser@package+3,_var_sys_NVM+21	;volatile
 22307                           
 22308                           ;eusartparser.c: 306:             break;
 22309  0030E6  0012               	return	
 22310  0030E8                     l3654:
 22311                           
 22312                           ; BSR set to: 0
 22313                           ;eusartparser.c: 308:             var_sys_NVM.Stopboton=package.data.data8[1];
 22314  0030E8  C013  F0AE         	movff	write_eusartparser@package+3,_var_sys_NVM+22	;volatile
 22315                           
 22316                           ;eusartparser.c: 309:             break;
 22317  0030EC  0012               	return	
 22318  0030EE                     l3655:
 22319                           
 22320                           ; BSR set to: 0
 22321                           ;eusartparser.c: 311:             var_sys_NVM.electricBrake=package.data.data8[1];
 22322  0030EE  C013  F0AF         	movff	write_eusartparser@package+3,_var_sys_NVM+23	;volatile
 22323                           
 22324                           ;eusartparser.c: 312:             break;
 22325  0030F2  0012               	return	
 22326  0030F4                     l3656:
 22327                           
 22328                           ; BSR set to: 0
 22329                           ;eusartparser.c: 314:             var_sys_NVM.velocityDecelaration=package.data.data8[1]
      +                          ;
 22330  0030F4  C013  F0B0         	movff	write_eusartparser@package+3,_var_sys_NVM+24	;volatile
 22331                           
 22332                           ;eusartparser.c: 315:             break;
 22333  0030F8  0012               	return	
 22334  0030FA                     l3658:
 22335                           
 22336                           ; BSR set to: 0
 22337                           ;eusartparser.c: 318:             var_sys_NVM.flashRGBMode=package.data.data8[1];
 22338  0030FA  C013  F0B1         	movff	write_eusartparser@package+3,_var_sys_NVM+25	;volatile
 22339                           
 22340                           ;eusartparser.c: 319:             break;
 22341  0030FE  0012               	return	
 22342  003100                     l3659:
 22343                           
 22344                           ; BSR set to: 0
 22345                           ;eusartparser.c: 321:             var_sys_NVM.Direction_motor=package.data.data8[1];
 22346  003100  C013  F0B3         	movff	write_eusartparser@package+3,_var_sys_NVM+27	;volatile
 22347                           
 22348                           ;eusartparser.c: 322:             break;
 22349  003104  0012               	return	
 22350  003106                     l3660:
 22351                           
 22352                           ; BSR set to: 0
 22353                           ;eusartparser.c: 324:             var_sys_NVM.TypeofMotor=package.data.data8[1];
 22354  003106  C013  F0B4         	movff	write_eusartparser@package+3,_var_sys_NVM+28	;volatile
 22355                           
 22356                           ;eusartparser.c: 325:             break;
 22357  00310A  0012               	return	
 22358  00310C                     l3661:
 22359                           
 22360                           ; BSR set to: 0
 22361                           ;eusartparser.c: 327:             var_sys_NVM.positionRemotesFull=package.data.data8[0];
 22362  00310C  C012  F0B8         	movff	write_eusartparser@package+2,_var_sys_NVM+32	;volatile
 22363                           
 22364                           ;eusartparser.c: 328:             var_sys_NVM.positionRemotesWalk=package.data.data8[1];
 22365  003110  C013  F0B9         	movff	write_eusartparser@package+3,_var_sys_NVM+33	;volatile
 22366                           
 22367                           ;eusartparser.c: 329:             break;
 22368  003114  0012               	return	
 22369  003116                     l24606:
 22370                           
 22371                           ; BSR set to: 0
 22372                           ;eusartparser.c: 332:             var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|((ui
      +                          nt32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22373  003116  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22374  003118  6E17               	movwf	??_write_eusartparser^0,c
 22375  00311A  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22376  00311C  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22377  00311E  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22378  003120  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22379  003122  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22380  003126  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22381  00312A  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22382  00312C  6A17               	clrf	??_write_eusartparser^0,c
 22383  00312E  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 22384  003130  1017               	iorwf	??_write_eusartparser^0,w,c
 22385  003132  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 22386  003134  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 22387  003136  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22388  003138  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 22389  00313A  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 22390  00313C  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22391  00313E  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 22392  003140  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 22393  003142  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22394  003144  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 22395                           
 22396                           ;eusartparser.c: 333:             var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&~((u
      +                          int32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22397  003146  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22398  003148  6E17               	movwf	??_write_eusartparser^0,c
 22399  00314A  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22400  00314C  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22401  00314E  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22402  003150  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22403  003152  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22404  003156  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22405  00315A  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22406  00315C  6A17               	clrf	??_write_eusartparser^0,c
 22407  00315E  1C17               	comf	??_write_eusartparser^0,w,c
 22408  003160  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22409  003162  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22410  003164  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22411  003166  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22412  003168  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22413  00316A  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22414  00316C  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22415  00316E  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 22416  003170  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22417  003172  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 22418  003174  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 22419  003176  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22420  003178  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 22421  00317A  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 22422  00317C  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22423  00317E  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 22424  003180  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 22425  003182  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22426  003184  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 22427                           
 22428                           ;eusartparser.c: 334:             break;
 22429  003186  0012               	return	
 22430  003188                     l24608:
 22431                           
 22432                           ; BSR set to: 0
 22433                           ;eusartparser.c: 336:             var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|((ui
      +                          nt32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22434  003188  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22435  00318A  11BA               	iorwf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 22436  00318C  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 22437  00318E  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22438  003190  11BB               	iorwf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 22439  003192  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 22440  003194  0E00               	movlw	0
 22441  003196  11BC               	iorwf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 22442  003198  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 22443  00319A  0E00               	movlw	0
 22444  00319C  11BD               	iorwf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 22445  00319E  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 22446                           
 22447                           ;eusartparser.c: 337:             var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&~((u
      +                          int32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22448  0031A0  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22449  0031A2  6E17               	movwf	??_write_eusartparser^0,c
 22450  0031A4  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22451  0031A6  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22452  0031A8  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22453  0031AA  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22454  0031AC  1C17               	comf	??_write_eusartparser^0,w,c
 22455  0031AE  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22456  0031B0  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22457  0031B2  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22458  0031B4  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22459  0031B6  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22460  0031B8  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22461  0031BA  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22462  0031BC  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 22463  0031BE  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22464  0031C0  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 22465  0031C2  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 22466  0031C4  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22467  0031C6  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 22468  0031C8  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 22469  0031CA  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22470  0031CC  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 22471  0031CE  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 22472  0031D0  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22473  0031D2  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 22474                           
 22475                           ;eusartparser.c: 338:             break;
 22476  0031D4  0012               	return	
 22477  0031D6                     l3664:
 22478                           
 22479                           ; BSR set to: 0
 22480                           ;eusartparser.c: 341:             var_sys_NVM.OnlyRollingCode=package.data.data8[1];
 22481  0031D6  C013  F0BE         	movff	write_eusartparser@package+3,_var_sys_NVM+38	;volatile
 22482                           
 22483                           ;eusartparser.c: 342:             break;
 22484  0031DA  0012               	return	
 22485  0031DC                     l24610:
 22486                           
 22487                           ; BSR set to: 0
 22488                           ;eusartparser.c: 345:             var_sys_NVM.learningCurrentDecelarationClose=var_sys_N
      +                          VM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1
      +                          *16));
 22489  0031DC  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22490  0031DE  6E17               	movwf	??_write_eusartparser^0,c
 22491  0031E0  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22492  0031E2  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22493  0031E4  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22494  0031E6  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22495  0031E8  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22496  0031EC  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22497  0031F0  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22498  0031F2  6A17               	clrf	??_write_eusartparser^0,c
 22499  0031F4  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 22500  0031F6  1017               	iorwf	??_write_eusartparser^0,w,c
 22501  0031F8  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 22502  0031FA  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 22503  0031FC  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22504  0031FE  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 22505  003200  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 22506  003202  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22507  003204  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 22508  003206  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 22509  003208  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22510  00320A  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 22511                           
 22512                           ;eusartparser.c: 346:             var_sys_NVM.learningCurrentDecelarationClose=var_sys_N
      +                          VM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)
      +                          (1*16));
 22513  00320C  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22514  00320E  6E17               	movwf	??_write_eusartparser^0,c
 22515  003210  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22516  003212  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22517  003214  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22518  003216  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22519  003218  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22520  00321C  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22521  003220  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22522  003222  6A17               	clrf	??_write_eusartparser^0,c
 22523  003224  1C17               	comf	??_write_eusartparser^0,w,c
 22524  003226  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22525  003228  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22526  00322A  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22527  00322C  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22528  00322E  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22529  003230  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22530  003232  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22531  003234  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 22532  003236  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22533  003238  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 22534  00323A  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 22535  00323C  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22536  00323E  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 22537  003240  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 22538  003242  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22539  003244  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 22540  003246  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 22541  003248  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22542  00324A  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 22543                           
 22544                           ;eusartparser.c: 347:             break;
 22545  00324C  0012               	return	
 22546  00324E                     l24612:
 22547                           
 22548                           ; BSR set to: 0
 22549                           ;eusartparser.c: 349:             var_sys_NVM.learningCurrentDecelarationClose=var_sys_N
      +                          VM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0
      +                          *16));
 22550  00324E  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22551  003250  11C0               	iorwf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 22552  003252  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 22553  003254  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22554  003256  11C1               	iorwf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 22555  003258  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 22556  00325A  0E00               	movlw	0
 22557  00325C  11C2               	iorwf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 22558  00325E  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 22559  003260  0E00               	movlw	0
 22560  003262  11C3               	iorwf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 22561  003264  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 22562                           
 22563                           ;eusartparser.c: 350:             var_sys_NVM.learningCurrentDecelarationClose=var_sys_N
      +                          VM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)
      +                          (0*16));
 22564  003266  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22565  003268  6E17               	movwf	??_write_eusartparser^0,c
 22566  00326A  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22567  00326C  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22568  00326E  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22569  003270  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22570  003272  1C17               	comf	??_write_eusartparser^0,w,c
 22571  003274  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22572  003276  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22573  003278  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22574  00327A  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22575  00327C  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22576  00327E  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22577  003280  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22578  003282  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 22579  003284  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22580  003286  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 22581  003288  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 22582  00328A  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22583  00328C  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 22584  00328E  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 22585  003290  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22586  003292  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 22587  003294  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 22588  003296  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22589  003298  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 22590                           
 22591                           ;eusartparser.c: 351:             break;
 22592  00329A  0012               	return	
 22593  00329C                     l24614:
 22594                           
 22595                           ; BSR set to: 0
 22596                           ;eusartparser.c: 354:             var_sys_NVM.learningCurrentDecelarationOpen=var_sys_NV
      +                          M.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*1
      +                          6));
 22597  00329C  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22598  00329E  6E17               	movwf	??_write_eusartparser^0,c
 22599  0032A0  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22600  0032A2  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22601  0032A4  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22602  0032A6  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22603  0032A8  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22604  0032AC  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22605  0032B0  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22606  0032B2  6A17               	clrf	??_write_eusartparser^0,c
 22607  0032B4  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22608  0032B6  1017               	iorwf	??_write_eusartparser^0,w,c
 22609  0032B8  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22610  0032BA  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22611  0032BC  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22612  0032BE  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22613  0032C0  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22614  0032C2  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22615  0032C4  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22616  0032C6  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22617  0032C8  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22618  0032CA  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22619                           
 22620                           ;eusartparser.c: 355:             var_sys_NVM.learningCurrentDecelarationOpen=var_sys_NV
      +                          M.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1
      +                          *16));
 22621  0032CC  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22622  0032CE  6E17               	movwf	??_write_eusartparser^0,c
 22623  0032D0  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22624  0032D2  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22625  0032D4  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22626  0032D6  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22627  0032D8  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22628  0032DC  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22629  0032E0  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22630  0032E2  6A17               	clrf	??_write_eusartparser^0,c
 22631  0032E4  1C17               	comf	??_write_eusartparser^0,w,c
 22632  0032E6  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22633  0032E8  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22634  0032EA  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22635  0032EC  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22636  0032EE  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22637  0032F0  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22638  0032F2  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22639  0032F4  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22640  0032F6  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22641  0032F8  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22642  0032FA  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22643  0032FC  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22644  0032FE  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22645  003300  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22646  003302  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22647  003304  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22648  003306  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22649  003308  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22650  00330A  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22651                           
 22652                           ;eusartparser.c: 356:             break;
 22653  00330C  0012               	return	
 22654  00330E                     l24616:
 22655                           
 22656                           ; BSR set to: 0
 22657                           ;eusartparser.c: 358:             var_sys_NVM.learningCurrentDecelarationOpen=var_sys_NV
      +                          M.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*1
      +                          6));
 22658  00330E  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22659  003310  11C4               	iorwf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22660  003312  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22661  003314  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22662  003316  11C5               	iorwf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22663  003318  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22664  00331A  0E00               	movlw	0
 22665  00331C  11C6               	iorwf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22666  00331E  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22667  003320  0E00               	movlw	0
 22668  003322  11C7               	iorwf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22669  003324  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22670                           
 22671                           ;eusartparser.c: 359:             var_sys_NVM.learningCurrentDecelarationOpen=var_sys_NV
      +                          M.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0
      +                          *16));
 22672  003326  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22673  003328  6E17               	movwf	??_write_eusartparser^0,c
 22674  00332A  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22675  00332C  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22676  00332E  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22677  003330  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22678  003332  1C17               	comf	??_write_eusartparser^0,w,c
 22679  003334  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22680  003336  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22681  003338  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22682  00333A  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22683  00333C  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22684  00333E  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22685  003340  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22686  003342  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22687  003344  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22688  003346  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22689  003348  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22690  00334A  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22691  00334C  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22692  00334E  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22693  003350  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22694  003352  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22695  003354  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22696  003356  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22697  003358  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22698                           
 22699                           ;eusartparser.c: 360:             break;
 22700  00335A  0012               	return	
 22701  00335C                     l3669:
 22702                           
 22703                           ; BSR set to: 0
 22704                           ;eusartparser.c: 363:             var_sys_NVM.learningCurrentNormalClose=package.data.da
      +                          ta16;
 22705  00335C  C012  F0C8         	movff	write_eusartparser@package+2,_var_sys_NVM+48	;volatile
 22706  003360  C013  F0C9         	movff	write_eusartparser@package+3,_var_sys_NVM+49	;volatile
 22707                           
 22708                           ;eusartparser.c: 364:             break;
 22709  003364  0012               	return	
 22710  003366                     l3670:
 22711                           
 22712                           ; BSR set to: 0
 22713                           ;eusartparser.c: 367:             var_sys_NVM.learningCurrentNormalOpen=package.data.dat
      +                          a16;
 22714  003366  C012  F0CA         	movff	write_eusartparser@package+2,_var_sys_NVM+50	;volatile
 22715  00336A  C013  F0CB         	movff	write_eusartparser@package+3,_var_sys_NVM+51	;volatile
 22716                           
 22717                           ;eusartparser.c: 368:             break;
 22718  00336E  0012               	return	
 22719  003370                     l24618:
 22720                           
 22721                           ; BSR set to: 0
 22722                           ;eusartparser.c: 371:             var_sys_NVM.learningTimeToOpen=var_sys_NVM.learningTim
      +                          eToOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22723  003370  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22724  003372  6E17               	movwf	??_write_eusartparser^0,c
 22725  003374  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22726  003376  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22727  003378  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22728  00337A  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22729  00337C  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22730  003380  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22731  003384  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22732  003386  6A17               	clrf	??_write_eusartparser^0,c
 22733  003388  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 22734  00338A  1017               	iorwf	??_write_eusartparser^0,w,c
 22735  00338C  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 22736  00338E  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 22737  003390  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22738  003392  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 22739  003394  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 22740  003396  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22741  003398  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 22742  00339A  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 22743  00339C  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22744  00339E  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 22745                           
 22746                           ;eusartparser.c: 372:             var_sys_NVM.learningTimeToOpen=var_sys_NVM.learningTim
      +                          eToOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22747  0033A0  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22748  0033A2  6E17               	movwf	??_write_eusartparser^0,c
 22749  0033A4  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22750  0033A6  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22751  0033A8  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22752  0033AA  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22753  0033AC  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22754  0033B0  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22755  0033B4  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22756  0033B6  6A17               	clrf	??_write_eusartparser^0,c
 22757  0033B8  1C17               	comf	??_write_eusartparser^0,w,c
 22758  0033BA  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22759  0033BC  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22760  0033BE  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22761  0033C0  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22762  0033C2  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22763  0033C4  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22764  0033C6  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22765  0033C8  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 22766  0033CA  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22767  0033CC  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 22768  0033CE  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 22769  0033D0  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22770  0033D2  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 22771  0033D4  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 22772  0033D6  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22773  0033D8  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 22774  0033DA  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 22775  0033DC  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22776  0033DE  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 22777                           
 22778                           ;eusartparser.c: 373:             break;
 22779  0033E0  0012               	return	
 22780  0033E2                     l24620:
 22781                           
 22782                           ; BSR set to: 0
 22783                           ;eusartparser.c: 375:             var_sys_NVM.learningTimeToOpen=var_sys_NVM.learningTim
      +                          eToOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22784  0033E2  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22785  0033E4  11CC               	iorwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 22786  0033E6  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 22787  0033E8  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22788  0033EA  11CD               	iorwf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 22789  0033EC  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 22790  0033EE  0E00               	movlw	0
 22791  0033F0  11CE               	iorwf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 22792  0033F2  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 22793  0033F4  0E00               	movlw	0
 22794  0033F6  11CF               	iorwf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 22795  0033F8  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 22796                           
 22797                           ;eusartparser.c: 376:             var_sys_NVM.learningTimeToOpen=var_sys_NVM.learningTim
      +                          eToOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22798  0033FA  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22799  0033FC  6E17               	movwf	??_write_eusartparser^0,c
 22800  0033FE  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22801  003400  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22802  003402  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22803  003404  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22804  003406  1C17               	comf	??_write_eusartparser^0,w,c
 22805  003408  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22806  00340A  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22807  00340C  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22808  00340E  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22809  003410  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22810  003412  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22811  003414  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22812  003416  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 22813  003418  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22814  00341A  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 22815  00341C  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 22816  00341E  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22817  003420  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 22818  003422  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 22819  003424  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22820  003426  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 22821  003428  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 22822  00342A  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22823  00342C  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 22824                           
 22825                           ;eusartparser.c: 377:             break;
 22826  00342E  0012               	return	
 22827  003430                     l24622:
 22828                           
 22829                           ; BSR set to: 0
 22830                           ;eusartparser.c: 380:             var_sys_NVM.learningTimeToClose=var_sys_NVM.learningTi
      +                          meToClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22831  003430  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22832  003432  6E17               	movwf	??_write_eusartparser^0,c
 22833  003434  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22834  003436  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22835  003438  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22836  00343A  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22837  00343C  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22838  003440  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22839  003444  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22840  003446  6A17               	clrf	??_write_eusartparser^0,c
 22841  003448  51D0               	movf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 22842  00344A  1017               	iorwf	??_write_eusartparser^0,w,c
 22843  00344C  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 22844  00344E  51D1               	movf	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 22845  003450  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22846  003452  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 22847  003454  51D2               	movf	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 22848  003456  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22849  003458  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 22850  00345A  51D3               	movf	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 22851  00345C  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22852  00345E  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 22853                           
 22854                           ;eusartparser.c: 381:             var_sys_NVM.learningTimeToClose=var_sys_NVM.learningTi
      +                          meToClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22855  003460  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22856  003462  6E17               	movwf	??_write_eusartparser^0,c
 22857  003464  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22858  003466  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22859  003468  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22860  00346A  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22861  00346C  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22862  003470  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22863  003474  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22864  003476  6A17               	clrf	??_write_eusartparser^0,c
 22865  003478  1C17               	comf	??_write_eusartparser^0,w,c
 22866  00347A  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22867  00347C  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22868  00347E  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22869  003480  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22870  003482  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22871  003484  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22872  003486  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22873  003488  51D0               	movf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 22874  00348A  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22875  00348C  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 22876  00348E  51D1               	movf	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 22877  003490  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22878  003492  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 22879  003494  51D2               	movf	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 22880  003496  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22881  003498  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 22882  00349A  51D3               	movf	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 22883  00349C  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22884  00349E  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 22885                           
 22886                           ;eusartparser.c: 382:             break;
 22887  0034A0  0012               	return	
 22888  0034A2                     l24624:
 22889                           
 22890                           ; BSR set to: 0
 22891                           ;eusartparser.c: 384:             var_sys_NVM.learningTimeToClose=var_sys_NVM.learningTi
      +                          meToClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22892  0034A2  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22893  0034A4  11D0               	iorwf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 22894  0034A6  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 22895  0034A8  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22896  0034AA  11D1               	iorwf	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 22897  0034AC  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 22898  0034AE  0E00               	movlw	0
 22899  0034B0  11D2               	iorwf	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 22900  0034B2  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 22901  0034B4  0E00               	movlw	0
 22902  0034B6  11D3               	iorwf	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 22903  0034B8  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 22904                           
 22905                           ;eusartparser.c: 385:             var_sys_NVM.learningTimeToClose=var_sys_NVM.learningTi
      +                          meToClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22906  0034BA  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22907  0034BC  6E17               	movwf	??_write_eusartparser^0,c
 22908  0034BE  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22909  0034C0  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22910  0034C2  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22911  0034C4  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22912  0034C6  1C17               	comf	??_write_eusartparser^0,w,c
 22913  0034C8  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22914  0034CA  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22915  0034CC  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22916  0034CE  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22917  0034D0  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22918  0034D2  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22919  0034D4  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22920  0034D6  51D0               	movf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 22921  0034D8  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22922  0034DA  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 22923  0034DC  51D1               	movf	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 22924  0034DE  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22925  0034E0  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 22926  0034E2  51D2               	movf	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 22927  0034E4  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22928  0034E6  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 22929  0034E8  51D3               	movf	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 22930  0034EA  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22931  0034EC  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 22932                           
 22933                           ;eusartparser.c: 386:             break;
 22934  0034EE  0012               	return	
 22935  0034F0                     l24628:
 22936                           
 22937                           ; BSR set to: 0
 22938  0034F0  5011               	movf	(write_eusartparser@package+1)^0,w,c
 22939  0034F2  6E17               	movwf	??_write_eusartparser^0,c
 22940  0034F4  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22941                           
 22942                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22943                           ; Switch size 1, requested type "simple"
 22944                           ; Number of cases is 1, Range of values is 0 to 0
 22945                           ; switch strategies available:
 22946                           ; Name         Instructions Cycles
 22947                           ; simple_byte            4     3 (average)
 22948                           ;	Chosen strategy is simple_byte
 22949  0034F6  5018               	movf	(??_write_eusartparser+1)^0,w,c
 22950  0034F8  0A00               	xorlw	0	; case 0
 22951  0034FA  A4D8               	btfss	status,2,c
 22952  0034FC  0012               	return	
 22953                           
 22954                           ; BSR set to: 0
 22955                           ; Switch size 1, requested type "simple"
 22956                           ; Number of cases is 43, Range of values is 0 to 51
 22957                           ; switch strategies available:
 22958                           ; Name         Instructions Cycles
 22959                           ; simple_byte          130    66 (average)
 22960                           ;	Chosen strategy is simple_byte
 22961  0034FE  5017               	movf	??_write_eusartparser^0,w,c
 22962  003500  0A00               	xorlw	0	; case 0
 22963  003502  B4D8               	btfsc	status,2,c
 22964  003504  D5B5               	goto	l3632
 22965  003506  0A02               	xorlw	2	; case 2
 22966  003508  B4D8               	btfsc	status,2,c
 22967  00350A  D5BF               	goto	l3637
 22968  00350C  0A01               	xorlw	1	; case 3
 22969  00350E  B4D8               	btfsc	status,2,c
 22970  003510  D5E5               	goto	l3651
 22971  003512  0A06               	xorlw	6	; case 5
 22972  003514  B4D8               	btfsc	status,2,c
 22973  003516  D5BE               	goto	l3639
 22974  003518  0A02               	xorlw	2	; case 7
 22975  00351A  B4D8               	btfsc	status,2,c
 22976  00351C  D5D7               	goto	l3648
 22977  00351E  0A0F               	xorlw	15	; case 8
 22978  003520  B4D8               	btfsc	status,2,c
 22979  003522  D5EB               	goto	l3658
 22980  003524  0A02               	xorlw	2	; case 10
 22981  003526  B4D8               	btfsc	status,2,c
 22982  003528  D5DC               	goto	l3653
 22983  00352A  0A1A               	xorlw	26	; case 16
 22984  00352C  B4D8               	btfsc	status,2,c
 22985  00352E  D5A0               	goto	l3632
 22986  003530  0A01               	xorlw	1	; case 17
 22987  003532  B4D8               	btfsc	status,2,c
 22988  003534  D5A2               	goto	l3634
 22989  003536  0A03               	xorlw	3	; case 18
 22990  003538  B4D8               	btfsc	status,2,c
 22991  00353A  D5A4               	goto	l3635
 22992  00353C  0A01               	xorlw	1	; case 19
 22993  00353E  B4D8               	btfsc	status,2,c
 22994  003540  D5A4               	goto	l3637
 22995  003542  0A07               	xorlw	7	; case 20
 22996  003544  B4D8               	btfsc	status,2,c
 22997  003546  D5A6               	goto	l3639
 22998  003548  0A01               	xorlw	1	; case 21
 22999  00354A  B4D8               	btfsc	status,2,c
 23000  00354C  D5A8               	goto	l3640
 23001  00354E  0A03               	xorlw	3	; case 22
 23002  003550  B4D8               	btfsc	status,2,c
 23003  003552  D5AA               	goto	l3641
 23004  003554  0A01               	xorlw	1	; case 23
 23005  003556  B4D8               	btfsc	status,2,c
 23006  003558  D5AA               	goto	l3642
 23007  00355A  0A0F               	xorlw	15	; case 24
 23008  00355C  B4D8               	btfsc	status,2,c
 23009  00355E  D5AA               	goto	l3643
 23010  003560  0A01               	xorlw	1	; case 25
 23011  003562  B4D8               	btfsc	status,2,c
 23012  003564  D5AA               	goto	l3644
 23013  003566  0A03               	xorlw	3	; case 26
 23014  003568  B4D8               	btfsc	status,2,c
 23015  00356A  D5AA               	goto	l3645
 23016  00356C  0A01               	xorlw	1	; case 27
 23017  00356E  B4D8               	btfsc	status,2,c
 23018  003570  D5AA               	goto	l3646
 23019  003572  0A07               	xorlw	7	; case 28
 23020  003574  B4D8               	btfsc	status,2,c
 23021  003576  D5AA               	goto	l3648
 23022  003578  0A01               	xorlw	1	; case 29
 23023  00357A  B4D8               	btfsc	status,2,c
 23024  00357C  D5AA               	goto	l3649
 23025  00357E  0A03               	xorlw	3	; case 30
 23026  003580  B4D8               	btfsc	status,2,c
 23027  003582  D5AC               	goto	l3651
 23028  003584  0A01               	xorlw	1	; case 31
 23029  003586  B4D8               	btfsc	status,2,c
 23030  003588  D5AC               	goto	l3653
 23031  00358A  0A3F               	xorlw	63	; case 32
 23032  00358C  B4D8               	btfsc	status,2,c
 23033  00358E  D5AC               	goto	l3654
 23034  003590  0A01               	xorlw	1	; case 33
 23035  003592  B4D8               	btfsc	status,2,c
 23036  003594  D5AC               	goto	l3655
 23037  003596  0A03               	xorlw	3	; case 34
 23038  003598  B4D8               	btfsc	status,2,c
 23039  00359A  D5AC               	goto	l3656
 23040  00359C  0A01               	xorlw	1	; case 35
 23041  00359E  B4D8               	btfsc	status,2,c
 23042  0035A0  D5AC               	goto	l3658
 23043  0035A2  0A07               	xorlw	7	; case 36
 23044  0035A4  B4D8               	btfsc	status,2,c
 23045  0035A6  D5AC               	goto	l3659
 23046  0035A8  0A01               	xorlw	1	; case 37
 23047  0035AA  B4D8               	btfsc	status,2,c
 23048  0035AC  D5AC               	goto	l3660
 23049  0035AE  0A03               	xorlw	3	; case 38
 23050  0035B0  B4D8               	btfsc	status,2,c
 23051  0035B2  D5AC               	goto	l3661
 23052  0035B4  0A01               	xorlw	1	; case 39
 23053  0035B6  B4D8               	btfsc	status,2,c
 23054  0035B8  D5AE               	goto	l24606
 23055  0035BA  0A0F               	xorlw	15	; case 40
 23056  0035BC  B4D8               	btfsc	status,2,c
 23057  0035BE  D5E4               	goto	l24608
 23058  0035C0  0A01               	xorlw	1	; case 41
 23059  0035C2  B4D8               	btfsc	status,2,c
 23060  0035C4  D608               	goto	l3664
 23061  0035C6  0A03               	xorlw	3	; case 42
 23062  0035C8  B4D8               	btfsc	status,2,c
 23063  0035CA  D608               	goto	l24610
 23064  0035CC  0A01               	xorlw	1	; case 43
 23065  0035CE  B4D8               	btfsc	status,2,c
 23066  0035D0  D63E               	goto	l24612
 23067  0035D2  0A07               	xorlw	7	; case 44
 23068  0035D4  B4D8               	btfsc	status,2,c
 23069  0035D6  D662               	goto	l24614
 23070  0035D8  0A01               	xorlw	1	; case 45
 23071  0035DA  B4D8               	btfsc	status,2,c
 23072  0035DC  D698               	goto	l24616
 23073  0035DE  0A03               	xorlw	3	; case 46
 23074  0035E0  B4D8               	btfsc	status,2,c
 23075  0035E2  D6BC               	goto	l3669
 23076  0035E4  0A01               	xorlw	1	; case 47
 23077  0035E6  B4D8               	btfsc	status,2,c
 23078  0035E8  D6BE               	goto	l3670
 23079  0035EA  0A1F               	xorlw	31	; case 48
 23080  0035EC  B4D8               	btfsc	status,2,c
 23081  0035EE  D6C0               	goto	l24618
 23082  0035F0  0A01               	xorlw	1	; case 49
 23083  0035F2  B4D8               	btfsc	status,2,c
 23084  0035F4  D6F6               	goto	l24620
 23085  0035F6  0A03               	xorlw	3	; case 50
 23086  0035F8  B4D8               	btfsc	status,2,c
 23087  0035FA  D71A               	goto	l24622
 23088  0035FC  0A01               	xorlw	1	; case 51
 23089  0035FE  A4D8               	btfss	status,2,c
 23090  003600  0012               	return	
 23091  003602  D74F               	goto	l24624
 23092  003604                     __end_of_write_eusartparser:
 23093                           	callstack 0
 23094                           
 23095 ;; *************** function _validateRemoteSerialNumber *****************
 23096 ;; Defined at:
 23097 ;;		line 27 in file "controlMemory_MC50.c"
 23098 ;; Parameters:    Size  Location     Type
 23099 ;;  serial          4   45[COMRAM] unsigned long 
 23100 ;;  VerifyOnlySe    1   49[COMRAM] enum E10564
 23101 ;;  position        2   50[COMRAM] PTR unsigned char 
 23102 ;;		 -> eusartparser@pos(1), controlSelectRemote@pos(1), classic_data(16), 
 23103 ;; Auto vars:     Size  Location     Type
 23104 ;;  mask            4   52[COMRAM] unsigned long 
 23105 ;;  i               1   57[COMRAM] unsigned char 
 23106 ;;  j               1   56[COMRAM] unsigned char 
 23107 ;; Return value:  Size  Location     Type
 23108 ;;                  1    wreg      enum E10539
 23109 ;; Registers used:
 23110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23111 ;; Tracked objects:
 23112 ;;		On entry : 3F/0
 23113 ;;		On exit  : 3F/0
 23114 ;;		Unchanged: 0/0
 23115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23116 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23117 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23118 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23119 ;;      Totals:        13       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23120 ;;Total ram usage:       21 bytes
 23121 ;; Hardware stack levels used: 1
 23122 ;; Hardware stack levels required when called: 13
 23123 ;; This function calls:
 23124 ;;		_i2c_readDataBlock
 23125 ;; This function is called by:
 23126 ;;		_keeloqDecryptPacket
 23127 ;;		_DecryptPacket_12BIT
 23128 ;;		_controlSelectRemote
 23129 ;;		_eusartparser
 23130 ;; This function uses a non-reentrant model
 23131 ;;
 23132                           
 23133                           	psect	text76
 23134  006298                     __ptext76:
 23135                           	callstack 0
 23136  006298                     _validateRemoteSerialNumber:
 23137                           	callstack 14
 23138                           
 23139                           ; BSR set to: 0
 23140                           ;controlMemory_MC50.c: 29:     char j=0;
 23141                           
 23142                           ; BSR set to: 0
 23143                           ;incstack = 0
 23144  006298  0E00               	movlw	0
 23145  00629A  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 23146                           
 23147                           ; BSR set to: 0
 23148                           ;controlMemory_MC50.c: 30:     unsigned long mask;;controlMemory_MC50.c: 33:     if(Veri
      +                          fyOnlySerial==YES)
 23149  00629C  0432               	decf	validateRemoteSerialNumber@VerifyOnlySerial^0,w,c
 23150  00629E  A4D8               	btfss	status,2,c
 23151  0062A0  D009               	goto	l1436
 23152                           
 23153                           ; BSR set to: 0
 23154                           ;controlMemory_MC50.c: 34:     {;controlMemory_MC50.c: 35:         mask=0x0FFFFFFF;
 23155  0062A2  0EFF               	movlw	255
 23156  0062A4  6E35               	movwf	validateRemoteSerialNumber@mask^0,c
 23157  0062A6  0EFF               	movlw	255
 23158  0062A8  6E36               	movwf	(validateRemoteSerialNumber@mask+1)^0,c
 23159  0062AA  0EFF               	movlw	255
 23160  0062AC  6E37               	movwf	(validateRemoteSerialNumber@mask+2)^0,c
 23161  0062AE  0E0F               	movlw	15
 23162  0062B0  6E38               	movwf	(validateRemoteSerialNumber@mask+3)^0,c
 23163                           
 23164                           ;controlMemory_MC50.c: 36:     }
 23165  0062B2  D004               	goto	l20806
 23166  0062B4                     l1436:
 23167                           
 23168                           ; BSR set to: 0
 23169                           ;controlMemory_MC50.c: 38:     {;controlMemory_MC50.c: 39:         mask=0xFFFFFFFF;
 23170  0062B4  6835               	setf	validateRemoteSerialNumber@mask^0,c
 23171  0062B6  6836               	setf	(validateRemoteSerialNumber@mask+1)^0,c
 23172  0062B8  6837               	setf	(validateRemoteSerialNumber@mask+2)^0,c
 23173  0062BA  6838               	setf	(validateRemoteSerialNumber@mask+3)^0,c
 23174  0062BC                     l20806:
 23175                           
 23176                           ; BSR set to: 0
 23177                           ;controlMemory_MC50.c: 42:     for (i=0;i<var_sys_NVM.positionRemotesFull;i++)
 23178  0062BC  0E00               	movlw	0
 23179  0062BE  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 23180  0062C0  D056               	goto	l20824
 23181  0062C2                     l20808:
 23182                           
 23183                           ; BSR set to: 0
 23184                           ;controlMemory_MC50.c: 43:     {;controlMemory_MC50.c: 44:         if(i%4==0)
 23185  0062C2  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 23186  0062C6  0E03               	movlw	3
 23187  0062C8  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 23188  0062CA  A4D8               	btfss	status,2,c
 23189  0062CC  D01C               	goto	l20814
 23190                           
 23191                           ; BSR set to: 0
 23192                           ;controlMemory_MC50.c: 45:         {;controlMemory_MC50.c: 46:             j=0;
 23193  0062CE  0E00               	movlw	0
 23194  0062D0  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 23195                           
 23196                           ; BSR set to: 0
 23197                           ;controlMemory_MC50.c: 48:             i2c_readDataBlock(0x50, (uint16_t)(0x0200 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 23198  0062D2  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 23199  0062D4  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 23200  0062D6  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 23201  0062D8  90D8               	bcf	status,0,c
 23202  0062DA  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 23203  0062DC  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 23204  0062DE  90D8               	bcf	status,0,c
 23205  0062E0  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 23206  0062E2  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 23207  0062E4  0E00               	movlw	0
 23208  0062E6  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 23209  0062E8  6E22               	movwf	i2c_readDataBlock@reg^0,c
 23210  0062EA  0E02               	movlw	2
 23211  0062EC  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 23212  0062EE  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 23213  0062F0  0EA2               	movlw	low _memoryTEMP
 23214  0062F2  6E24               	movwf	i2c_readDataBlock@data^0,c
 23215  0062F4  0E02               	movlw	high _memoryTEMP
 23216  0062F6  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 23217  0062F8  0E00               	movlw	0
 23218  0062FA  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 23219  0062FC  0E10               	movlw	16
 23220  0062FE  6E26               	movwf	i2c_readDataBlock@len^0,c
 23221  006300  0E50               	movlw	80
 23222  006302  EC40  F045         	call	_i2c_readDataBlock
 23223  006306                     l20814:
 23224                           
 23225                           ;controlMemory_MC50.c: 50:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 23226  006306  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 23227  006308  0D04               	mullw	4
 23228  00630A  0EA2               	movlw	low _memoryTEMP
 23229  00630C  24F3               	addwf	243,w,c
 23230  00630E  6ED9               	movwf	fsr2l,c
 23231  006310  0E02               	movlw	high _memoryTEMP
 23232  006312  20F4               	addwfc	prodh,w,c
 23233  006314  6EDA               	movwf	fsr2h,c
 23234  006316  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 23235  00631A  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 23236  00631E  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 23237  006322  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 23238  006326  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 23239  006328  0100               	movlb	0	; () banked
 23240  00632A  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 23241  00632C  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 23242  00632E  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 23243  006330  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 23244  006332  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 23245  006334  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 23246  006336  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 23247  006338  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 23248  00633A  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 23249  00633C  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 23250  00633E  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 23251  006340  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 23252  006342  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 23253  006344  E112               	bnz	l20822
 23254  006346  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 23255  006348  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 23256  00634A  E10F               	bnz	l20822
 23257  00634C  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 23258  00634E  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 23259  006350  E10C               	bnz	l20822
 23260  006352  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 23261  006354  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 23262  006356  A4D8               	btfss	status,2,c
 23263  006358  D008               	goto	l20822
 23264                           
 23265                           ; BSR set to: 0
 23266                           ;controlMemory_MC50.c: 51:         {;controlMemory_MC50.c: 53:             position[0]=i
      +                          ;
 23267  00635A  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 23268  00635E  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 23269  006362  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 23270                           
 23271                           ; BSR set to: 0
 23272                           ;controlMemory_MC50.c: 54:             return TypeFull;
 23273  006366  0E01               	movlw	1
 23274  006368  0012               	return	
 23275  00636A                     l20822:
 23276                           
 23277                           ; BSR set to: 0
 23278                           ;controlMemory_MC50.c: 57:         j++;
 23279  00636A  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 23280                           
 23281                           ;controlMemory_MC50.c: 59:     }
 23282  00636C  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 23283  00636E                     l20824:
 23284                           
 23285                           ; BSR set to: 0
 23286  00636E  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 23287  006370  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 23288  006372  A0D8               	btfss	status,0,c
 23289  006374  D7A6               	goto	l20808
 23290                           
 23291                           ; BSR set to: 0
 23292                           ;controlMemory_MC50.c: 61:     for (i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 23293  006376  0E00               	movlw	0
 23294  006378  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 23295  00637A  D056               	goto	l20844
 23296  00637C                     l20828:
 23297                           
 23298                           ; BSR set to: 0
 23299                           ;controlMemory_MC50.c: 62:     {;controlMemory_MC50.c: 63:         if(i%4==0)
 23300  00637C  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 23301  006380  0E03               	movlw	3
 23302  006382  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 23303  006384  A4D8               	btfss	status,2,c
 23304  006386  D01C               	goto	l20834
 23305                           
 23306                           ; BSR set to: 0
 23307                           ;controlMemory_MC50.c: 64:         {;controlMemory_MC50.c: 65:             j=0;
 23308  006388  0E00               	movlw	0
 23309  00638A  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 23310                           
 23311                           ; BSR set to: 0
 23312                           ;controlMemory_MC50.c: 66:             i2c_readDataBlock(0x50, (uint16_t)(0x0500 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 23313  00638C  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 23314  00638E  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 23315  006390  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 23316  006392  90D8               	bcf	status,0,c
 23317  006394  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 23318  006396  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 23319  006398  90D8               	bcf	status,0,c
 23320  00639A  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 23321  00639C  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 23322  00639E  0E00               	movlw	0
 23323  0063A0  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 23324  0063A2  6E22               	movwf	i2c_readDataBlock@reg^0,c
 23325  0063A4  0E05               	movlw	5
 23326  0063A6  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 23327  0063A8  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 23328  0063AA  0EA2               	movlw	low _memoryTEMP
 23329  0063AC  6E24               	movwf	i2c_readDataBlock@data^0,c
 23330  0063AE  0E02               	movlw	high _memoryTEMP
 23331  0063B0  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 23332  0063B2  0E00               	movlw	0
 23333  0063B4  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 23334  0063B6  0E10               	movlw	16
 23335  0063B8  6E26               	movwf	i2c_readDataBlock@len^0,c
 23336  0063BA  0E50               	movlw	80
 23337  0063BC  EC40  F045         	call	_i2c_readDataBlock
 23338  0063C0                     l20834:
 23339                           
 23340                           ;controlMemory_MC50.c: 69:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 23341  0063C0  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 23342  0063C2  0D04               	mullw	4
 23343  0063C4  0EA2               	movlw	low _memoryTEMP
 23344  0063C6  24F3               	addwf	243,w,c
 23345  0063C8  6ED9               	movwf	fsr2l,c
 23346  0063CA  0E02               	movlw	high _memoryTEMP
 23347  0063CC  20F4               	addwfc	prodh,w,c
 23348  0063CE  6EDA               	movwf	fsr2h,c
 23349  0063D0  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 23350  0063D4  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 23351  0063D8  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 23352  0063DC  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 23353  0063E0  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 23354  0063E2  0100               	movlb	0	; () banked
 23355  0063E4  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 23356  0063E6  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 23357  0063E8  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 23358  0063EA  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 23359  0063EC  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 23360  0063EE  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 23361  0063F0  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 23362  0063F2  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 23363  0063F4  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 23364  0063F6  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 23365  0063F8  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 23366  0063FA  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 23367  0063FC  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 23368  0063FE  E112               	bnz	l20842
 23369  006400  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 23370  006402  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 23371  006404  E10F               	bnz	l20842
 23372  006406  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 23373  006408  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 23374  00640A  E10C               	bnz	l20842
 23375  00640C  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 23376  00640E  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 23377  006410  A4D8               	btfss	status,2,c
 23378  006412  D008               	goto	l20842
 23379                           
 23380                           ; BSR set to: 0
 23381                           ;controlMemory_MC50.c: 70:         {;controlMemory_MC50.c: 72:             position[0]=i
      +                          ;
 23382  006414  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 23383  006418  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 23384  00641C  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 23385                           
 23386                           ; BSR set to: 0
 23387                           ;controlMemory_MC50.c: 73:             return TypeWalk;
 23388  006420  0E02               	movlw	2
 23389  006422  0012               	return	
 23390  006424                     l20842:
 23391                           
 23392                           ; BSR set to: 0
 23393                           ;controlMemory_MC50.c: 75:         j++;
 23394  006424  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 23395                           
 23396                           ;controlMemory_MC50.c: 76:     }
 23397  006426  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 23398  006428                     l20844:
 23399                           
 23400                           ; BSR set to: 0
 23401  006428  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 23402  00642A  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 23403  00642C  A0D8               	btfss	status,0,c
 23404  00642E  D7A6               	goto	l20828
 23405                           
 23406                           ; BSR set to: 0
 23407                           ;controlMemory_MC50.c: 78:     return NoCMD;
 23408  006430  0E00               	movlw	0
 23409                           
 23410                           ; BSR set to: 0
 23411  006432  0012               	return		;funcret
 23412  006434                     __end_of_validateRemoteSerialNumber:
 23413                           	callstack 0
 23414                           
 23415 ;; *************** function _updateChangesToUart *****************
 23416 ;; Defined at:
 23417 ;;		line 736 in file "eusartparser.c"
 23418 ;; Parameters:    Size  Location     Type
 23419 ;;		None
 23420 ;; Auto vars:     Size  Location     Type
 23421 ;;  i               1   27[COMRAM] unsigned char 
 23422 ;;  package         7   28[COMRAM] struct package_t
 23423 ;; Return value:  Size  Location     Type
 23424 ;;                  1    wreg      void 
 23425 ;; Registers used:
 23426 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23427 ;; Tracked objects:
 23428 ;;		On entry : 3E/1
 23429 ;;		On exit  : 0/0
 23430 ;;		Unchanged: 0/0
 23431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23433 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23435 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23436 ;;Total ram usage:        8 bytes
 23437 ;; Hardware stack levels used: 1
 23438 ;; Hardware stack levels required when called: 7
 23439 ;; This function calls:
 23440 ;;		_confirmpackage
 23441 ;;		_init_package
 23442 ;;		_read_eusartparser
 23443 ;;		_write_package
 23444 ;; This function is called by:
 23445 ;;		_eusartparser
 23446 ;; This function uses a non-reentrant model
 23447 ;;
 23448                           
 23449                           	psect	text77
 23450  008F32                     __ptext77:
 23451                           	callstack 0
 23452  008F32                     _updateChangesToUart:
 23453                           	callstack 22
 23454                           
 23455                           ;eusartparser.c: 737:     struct package_t package;;eusartparser.c: 738:     init_packag
      +                          e(&package);
 23456                           
 23457                           ; BSR set to: 0
 23458                           ;incstack = 0
 23459  008F32  0E1D               	movlw	low updateChangesToUart@package
 23460  008F34  6E10               	movwf	init_package@package^0,c
 23461  008F36  6A11               	clrf	(init_package@package+1)^0,c
 23462  008F38  EC54  F04C         	call	_init_package	;wreg free
 23463                           
 23464                           ;eusartparser.c: 739:     package.functioncode=0x12;
 23465  008F3C  0E12               	movlw	18
 23466  008F3E  6E1D               	movwf	updateChangesToUart@package^0,c
 23467                           
 23468                           ;eusartparser.c: 740:     package.address=0x00;
 23469  008F40  0E00               	movlw	0
 23470  008F42  6E1E               	movwf	(updateChangesToUart@package+1)^0,c
 23471                           
 23472                           ;eusartparser.c: 741:     package.data.data16=0x0000;
 23473  008F44  0E00               	movlw	0
 23474  008F46  6E20               	movwf	(updateChangesToUart@package+3)^0,c
 23475  008F48  0E00               	movlw	0
 23476  008F4A  6E1F               	movwf	(updateChangesToUart@package+2)^0,c
 23477                           
 23478                           ;eusartparser.c: 742:     package.functioncode=0x00;
 23479  008F4C  0E00               	movlw	0
 23480  008F4E  6E1D               	movwf	updateChangesToUart@package^0,c
 23481                           
 23482                           ;eusartparser.c: 743:     for (uint8_t i=0x00;i<=0x3A;i++){
 23483  008F50  0E00               	movlw	0
 23484  008F52  6E1C               	movwf	updateChangesToUart@i^0,c
 23485  008F54                     l3810:
 23486                           
 23487                           ;eusartparser.c: 744:         package.address=i;
 23488  008F54  C01C  F01E         	movff	updateChangesToUart@i,updateChangesToUart@package+1
 23489                           
 23490                           ;eusartparser.c: 745:         read_eusartparser(&package);
 23491  008F58  0E1D               	movlw	low updateChangesToUart@package
 23492  008F5A  6E18               	movwf	read_eusartparser@package^0,c
 23493  008F5C  6A19               	clrf	(read_eusartparser@package+1)^0,c
 23494  008F5E  ECC4  F014         	call	_read_eusartparser	;wreg free
 23495                           
 23496                           ;eusartparser.c: 746:     }
 23497  008F62  2A1C               	incf	updateChangesToUart@i^0,f,c
 23498  008F64  0E3A               	movlw	58
 23499  008F66  641C               	cpfsgt	updateChangesToUart@i^0,c
 23500  008F68  D7F5               	goto	l3810
 23501                           
 23502                           ;eusartparser.c: 747:     confirmpackage(&package, 1);
 23503  008F6A  0E1D               	movlw	low updateChangesToUart@package
 23504  008F6C  6E12               	movwf	confirmpackage@package^0,c
 23505  008F6E  6A13               	clrf	(confirmpackage@package+1)^0,c
 23506  008F70  0E01               	movlw	1
 23507  008F72  6E14               	movwf	confirmpackage@confirm^0,c
 23508  008F74  EC81  F048         	call	_confirmpackage	;wreg free
 23509                           
 23510                           ;eusartparser.c: 748:     write_package(package);
 23511  008F78  EE20  F01D         	lfsr	2,updateChangesToUart@package
 23512  008F7C  EE00  F011         	lfsr	0,write_package@package
 23513  008F80  0E06               	movlw	6
 23514  008F82                     u33671:
 23515  008F82  CFDB FFEB          	movff	plusw2,plusw0
 23516  008F86  06E8               	decf	wreg,f,c
 23517  008F88  E2FC               	bc	u33671
 23518  008F8A  ECCB  F04C         	call	_write_package	;wreg free
 23519  008F8E  0012               	return		;funcret
 23520  008F90                     __end_of_updateChangesToUart:
 23521                           	callstack 0
 23522                           
 23523 ;; *************** function _read_eusartparser *****************
 23524 ;; Defined at:
 23525 ;;		line 14 in file "eusartparser.c"
 23526 ;; Parameters:    Size  Location     Type
 23527 ;;  package         2   23[COMRAM] PTR struct package_t
 23528 ;;		 -> updateChangesToUart@package(7), main@package(7), 
 23529 ;; Auto vars:     Size  Location     Type
 23530 ;;		None
 23531 ;; Return value:  Size  Location     Type
 23532 ;;                  1    wreg      _Bool 
 23533 ;; Registers used:
 23534 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23535 ;; Tracked objects:
 23536 ;;		On entry : 0/0
 23537 ;;		On exit  : 0/0
 23538 ;;		Unchanged: 0/0
 23539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23540 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23542 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23543 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23544 ;;Total ram usage:        4 bytes
 23545 ;; Hardware stack levels used: 1
 23546 ;; Hardware stack levels required when called: 6
 23547 ;; This function calls:
 23548 ;;		_write_package
 23549 ;; This function is called by:
 23550 ;;		_eusartparser
 23551 ;;		_updateChangesToUart
 23552 ;; This function uses a non-reentrant model
 23553 ;;
 23554                           
 23555                           	psect	text78
 23556  002988                     __ptext78:
 23557                           	callstack 0
 23558  002988                     _read_eusartparser:
 23559                           	callstack 22
 23560                           
 23561                           ;eusartparser.c: 15:     switch(package->address){
 23562                           
 23563                           ;incstack = 0
 23564  002988  D2BD               	goto	l27600
 23565  00298A                     l27432:
 23566                           
 23567                           ;eusartparser.c: 18:             package->data.data8[1]=var_sys_NVM.decelarationClose;
 23568  00298A  EE20 F003          	lfsr	2,3
 23569  00298E  5018               	movf	read_eusartparser@package^0,w,c
 23570  002990  26D9               	addwf	fsr2l,f,c
 23571  002992  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23572  002994  22DA               	addwfc	fsr2h,f,c
 23573  002996  C099  FFDF         	movff	_var_sys_NVM+1,indf2	;volatile
 23574                           
 23575                           ;eusartparser.c: 19:             package->data.data8[0]=var_sys_NVM.decelarationOpen;
 23576  00299A  EE20 F002          	lfsr	2,2
 23577  00299E  5018               	movf	read_eusartparser@package^0,w,c
 23578  0029A0  26D9               	addwf	fsr2l,f,c
 23579  0029A2  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23580  0029A4  22DA               	addwfc	fsr2h,f,c
 23581  0029A6  C098  FFDF         	movff	_var_sys_NVM,indf2	;volatile
 23582  0029AA                     l27434:
 23583                           
 23584                           ;eusartparser.c: 20:             write_package(*package);
 23585  0029AA  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23586  0029AE  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23587  0029B2  EE00  F011         	lfsr	0,write_package@package
 23588  0029B6  0E06               	movlw	6
 23589  0029B8                     u33521:
 23590  0029B8  CFDB FFEB          	movff	plusw2,plusw0
 23591  0029BC  06E8               	decf	wreg,f,c
 23592  0029BE  E2FC               	bc	u33521
 23593  0029C0  ECCB  F04C         	call	_write_package	;wreg free
 23594                           
 23595                           ;eusartparser.c: 21:             break;
 23596  0029C4  0012               	return	
 23597  0029C6                     l27436:
 23598                           
 23599                           ;eusartparser.c: 23:             package->data.data8[1]=var_sys_NVM.motorSensitivity;
 23600  0029C6  EE20 F003          	lfsr	2,3
 23601  0029CA  5018               	movf	read_eusartparser@package^0,w,c
 23602  0029CC  26D9               	addwf	fsr2l,f,c
 23603  0029CE  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23604  0029D0  22DA               	addwfc	fsr2h,f,c
 23605  0029D2  C09B  FFDF         	movff	_var_sys_NVM+3,indf2	;volatile
 23606                           
 23607                           ;eusartparser.c: 24:             package->data.data8[0]=var_sys_NVM.motorPower;
 23608  0029D6  EE20 F002          	lfsr	2,2
 23609  0029DA  5018               	movf	read_eusartparser@package^0,w,c
 23610  0029DC  26D9               	addwf	fsr2l,f,c
 23611  0029DE  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23612  0029E0  22DA               	addwfc	fsr2h,f,c
 23613  0029E2  C09A  FFDF         	movff	_var_sys_NVM+2,indf2	;volatile
 23614  0029E6  D7E1               	goto	l27434
 23615  0029E8                     l27440:
 23616                           
 23617                           ;eusartparser.c: 28:             package->data.data8[1]=var_sys_NVM.walkTime;
 23618  0029E8  EE20 F003          	lfsr	2,3
 23619  0029EC  5018               	movf	read_eusartparser@package^0,w,c
 23620  0029EE  26D9               	addwf	fsr2l,f,c
 23621  0029F0  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23622  0029F2  22DA               	addwfc	fsr2h,f,c
 23623  0029F4  C09C  FFDF         	movff	_var_sys_NVM+4,indf2	;volatile
 23624  0029F8  D22D               	goto	L101
 23625  0029FA                     l27444:
 23626                           
 23627                           ;eusartparser.c: 34:             package->data.data8[1]=var_sys_NVM.autoTimeWalkClose;
 23628  0029FA  EE20 F003          	lfsr	2,3
 23629  0029FE  5018               	movf	read_eusartparser@package^0,w,c
 23630  002A00  26D9               	addwf	fsr2l,f,c
 23631  002A02  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23632  002A04  22DA               	addwfc	fsr2h,f,c
 23633  002A06  C09E  FFDF         	movff	_var_sys_NVM+6,indf2	;volatile
 23634                           
 23635                           ;eusartparser.c: 35:             package->data.data8[0]=var_sys_NVM.autoTimeFullClose;
 23636  002A0A  EE20 F002          	lfsr	2,2
 23637  002A0E  5018               	movf	read_eusartparser@package^0,w,c
 23638  002A10  26D9               	addwf	fsr2l,f,c
 23639  002A12  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23640  002A14  22DA               	addwfc	fsr2h,f,c
 23641  002A16  C09D  FFDF         	movff	_var_sys_NVM+5,indf2	;volatile
 23642  002A1A  D7C7               	goto	l27434
 23643  002A1C                     l27448:
 23644                           
 23645                           ;eusartparser.c: 40:             package->data.data8[1]=var_sys_NVM.photoCellInOpen;
 23646  002A1C  EE20 F003          	lfsr	2,3
 23647  002A20  5018               	movf	read_eusartparser@package^0,w,c
 23648  002A22  26D9               	addwf	fsr2l,f,c
 23649  002A24  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23650  002A26  22DA               	addwfc	fsr2h,f,c
 23651  002A28  C0A0  FFDF         	movff	_var_sys_NVM+8,indf2	;volatile
 23652                           
 23653                           ;eusartparser.c: 41:             package->data.data8[0]=var_sys_NVM.photoCellIsON;
 23654  002A2C  EE20 F002          	lfsr	2,2
 23655  002A30  5018               	movf	read_eusartparser@package^0,w,c
 23656  002A32  26D9               	addwf	fsr2l,f,c
 23657  002A34  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23658  002A36  22DA               	addwfc	fsr2h,f,c
 23659  002A38  C09F  FFDF         	movff	_var_sys_NVM+7,indf2	;volatile
 23660  002A3C  D7B6               	goto	l27434
 23661  002A3E                     l27452:
 23662                           
 23663                           ;eusartparser.c: 45:             package->data.data8[1]=var_sys_NVM.securityBandType;
 23664  002A3E  EE20 F003          	lfsr	2,3
 23665  002A42  5018               	movf	read_eusartparser@package^0,w,c
 23666  002A44  26D9               	addwf	fsr2l,f,c
 23667  002A46  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23668  002A48  22DA               	addwfc	fsr2h,f,c
 23669  002A4A  C0A2  FFDF         	movff	_var_sys_NVM+10,indf2	;volatile
 23670                           
 23671                           ;eusartparser.c: 46:             package->data.data8[0]=var_sys_NVM.securityBandIsON;
 23672  002A4E  EE20 F002          	lfsr	2,2
 23673  002A52  5018               	movf	read_eusartparser@package^0,w,c
 23674  002A54  26D9               	addwf	fsr2l,f,c
 23675  002A56  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23676  002A58  22DA               	addwfc	fsr2h,f,c
 23677  002A5A  C0A1  FFDF         	movff	_var_sys_NVM+9,indf2	;volatile
 23678  002A5E  D7A5               	goto	l27434
 23679  002A60                     l27456:
 23680                           
 23681                           ;eusartparser.c: 50:             package->data.data8[1]=var_sys_NVM.securityBandInOpen;
 23682  002A60  EE20 F003          	lfsr	2,3
 23683  002A64  5018               	movf	read_eusartparser@package^0,w,c
 23684  002A66  26D9               	addwf	fsr2l,f,c
 23685  002A68  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23686  002A6A  22DA               	addwfc	fsr2h,f,c
 23687  002A6C  C0A3  FFDF         	movff	_var_sys_NVM+11,indf2	;volatile
 23688  002A70  D1F1               	goto	L101
 23689  002A72                     l27460:
 23690                           
 23691                           ;eusartparser.c: 55:             package->data.data8[1]=var_sys_NVM.operationMode;
 23692  002A72  EE20 F003          	lfsr	2,3
 23693  002A76  5018               	movf	read_eusartparser@package^0,w,c
 23694  002A78  26D9               	addwf	fsr2l,f,c
 23695  002A7A  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23696  002A7C  22DA               	addwfc	fsr2h,f,c
 23697  002A7E  C0A4  FFDF         	movff	_var_sys_NVM+12,indf2	;volatile
 23698  002A82  D1E8               	goto	L101
 23699  002A84                     l27464:
 23700                           
 23701                           ;eusartparser.c: 60:             package->data.data8[1]=var_sys_NVM.flashLightMode;
 23702  002A84  EE20 F003          	lfsr	2,3
 23703  002A88  5018               	movf	read_eusartparser@package^0,w,c
 23704  002A8A  26D9               	addwf	fsr2l,f,c
 23705  002A8C  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23706  002A8E  22DA               	addwfc	fsr2h,f,c
 23707  002A90  C0A5  FFDF         	movff	_var_sys_NVM+13,indf2	;volatile
 23708  002A94  D1DF               	goto	L101
 23709  002A96                     l27468:
 23710                           
 23711                           ;eusartparser.c: 65:             package->data.data8[1]=var_sys_NVM.programmingDistance;
 23712  002A96  EE20 F003          	lfsr	2,3
 23713  002A9A  5018               	movf	read_eusartparser@package^0,w,c
 23714  002A9C  26D9               	addwf	fsr2l,f,c
 23715  002A9E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23716  002AA0  22DA               	addwfc	fsr2h,f,c
 23717  002AA2  C0A6  FFDF         	movff	_var_sys_NVM+14,indf2	;volatile
 23718  002AA6  D1D6               	goto	L101
 23719  002AA8                     l27472:
 23720                           
 23721                           ;eusartparser.c: 70:             package->data.data8[1]=var_sys_NVM.decelarationSensivit
      +                          y;
 23722  002AA8  EE20 F003          	lfsr	2,3
 23723  002AAC  5018               	movf	read_eusartparser@package^0,w,c
 23724  002AAE  26D9               	addwf	fsr2l,f,c
 23725  002AB0  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23726  002AB2  22DA               	addwfc	fsr2h,f,c
 23727  002AB4  C0A7  FFDF         	movff	_var_sys_NVM+15,indf2	;volatile
 23728  002AB8  D1CD               	goto	L101
 23729  002ABA                     l27476:
 23730                           
 23731                           ;eusartparser.c: 76:             package->data.data8[1]=var_sys_NVM.homemPresente;
 23732  002ABA  EE20 F003          	lfsr	2,3
 23733  002ABE  5018               	movf	read_eusartparser@package^0,w,c
 23734  002AC0  26D9               	addwf	fsr2l,f,c
 23735  002AC2  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23736  002AC4  22DA               	addwfc	fsr2h,f,c
 23737  002AC6  C0A8  FFDF         	movff	_var_sys_NVM+16,indf2	;volatile
 23738  002ACA  D1C4               	goto	L101
 23739  002ACC                     l27480:
 23740                           
 23741                           ;eusartparser.c: 82:             package->data.data8[1]=var_sys_NVM.logicDigital;
 23742  002ACC  EE20 F003          	lfsr	2,3
 23743  002AD0  5018               	movf	read_eusartparser@package^0,w,c
 23744  002AD2  26D9               	addwf	fsr2l,f,c
 23745  002AD4  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23746  002AD6  22DA               	addwfc	fsr2h,f,c
 23747  002AD8  C0A9  FFDF         	movff	_var_sys_NVM+17,indf2	;volatile
 23748  002ADC  D1BB               	goto	L101
 23749  002ADE                     l27484:
 23750                           
 23751                           ;eusartparser.c: 87:             package->data.data8[1]=var_sys_NVM.softstop;
 23752  002ADE  EE20 F003          	lfsr	2,3
 23753  002AE2  5018               	movf	read_eusartparser@package^0,w,c
 23754  002AE4  26D9               	addwf	fsr2l,f,c
 23755  002AE6  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23756  002AE8  22DA               	addwfc	fsr2h,f,c
 23757  002AEA  C0AB  FFDF         	movff	_var_sys_NVM+19,indf2	;volatile
 23758                           
 23759                           ;eusartparser.c: 88:             package->data.data8[0]=var_sys_NVM.softStart;
 23760  002AEE  EE20 F002          	lfsr	2,2
 23761  002AF2  5018               	movf	read_eusartparser@package^0,w,c
 23762  002AF4  26D9               	addwf	fsr2l,f,c
 23763  002AF6  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23764  002AF8  22DA               	addwfc	fsr2h,f,c
 23765  002AFA  C0AA  FFDF         	movff	_var_sys_NVM+18,indf2	;volatile
 23766  002AFE  D755               	goto	l27434
 23767  002B00                     l27488:
 23768                           
 23769                           ;eusartparser.c: 93:             package->data.data8[1]=var_sys_NVM.ligthTime;
 23770  002B00  EE20 F003          	lfsr	2,3
 23771  002B04  5018               	movf	read_eusartparser@package^0,w,c
 23772  002B06  26D9               	addwf	fsr2l,f,c
 23773  002B08  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23774  002B0A  22DA               	addwfc	fsr2h,f,c
 23775  002B0C  C0AC  FFDF         	movff	_var_sys_NVM+20,indf2	;volatile
 23776  002B10  D1A1               	goto	L101
 23777  002B12                     l27492:
 23778                           
 23779                           ;eusartparser.c: 99:             package->data.data8[1]=var_sys_NVM.folow_me;
 23780  002B12  EE20 F003          	lfsr	2,3
 23781  002B16  5018               	movf	read_eusartparser@package^0,w,c
 23782  002B18  26D9               	addwf	fsr2l,f,c
 23783  002B1A  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23784  002B1C  22DA               	addwfc	fsr2h,f,c
 23785  002B1E  C0AD  FFDF         	movff	_var_sys_NVM+21,indf2	;volatile
 23786  002B22  D198               	goto	L101
 23787  002B24                     l27496:
 23788                           
 23789                           ;eusartparser.c: 104:             package->data.data8[1]=var_sys_NVM.Stopboton;
 23790  002B24  EE20 F003          	lfsr	2,3
 23791  002B28  5018               	movf	read_eusartparser@package^0,w,c
 23792  002B2A  26D9               	addwf	fsr2l,f,c
 23793  002B2C  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23794  002B2E  22DA               	addwfc	fsr2h,f,c
 23795  002B30  C0AE  FFDF         	movff	_var_sys_NVM+22,indf2	;volatile
 23796  002B34  D18F               	goto	L101
 23797  002B36                     l27500:
 23798                           
 23799                           ;eusartparser.c: 109:             package->data.data8[1]=var_sys_NVM.electricBrake;
 23800  002B36  EE20 F003          	lfsr	2,3
 23801  002B3A  5018               	movf	read_eusartparser@package^0,w,c
 23802  002B3C  26D9               	addwf	fsr2l,f,c
 23803  002B3E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23804  002B40  22DA               	addwfc	fsr2h,f,c
 23805  002B42  C0AF  FFDF         	movff	_var_sys_NVM+23,indf2	;volatile
 23806  002B46  D186               	goto	L101
 23807  002B48                     l27504:
 23808                           
 23809                           ;eusartparser.c: 114:             package->data.data8[1]=var_sys_NVM.velocityDecelaratio
      +                          n;
 23810  002B48  EE20 F003          	lfsr	2,3
 23811  002B4C  5018               	movf	read_eusartparser@package^0,w,c
 23812  002B4E  26D9               	addwf	fsr2l,f,c
 23813  002B50  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23814  002B52  22DA               	addwfc	fsr2h,f,c
 23815  002B54  C0B0  FFDF         	movff	_var_sys_NVM+24,indf2	;volatile
 23816  002B58  D17D               	goto	L101
 23817  002B5A                     l27508:
 23818                           
 23819                           ;eusartparser.c: 120:             package->data.data8[1]=var_sys_NVM.flashRGBMode;
 23820  002B5A  EE20 F003          	lfsr	2,3
 23821  002B5E  5018               	movf	read_eusartparser@package^0,w,c
 23822  002B60  26D9               	addwf	fsr2l,f,c
 23823  002B62  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23824  002B64  22DA               	addwfc	fsr2h,f,c
 23825  002B66  C0B1  FFDF         	movff	_var_sys_NVM+25,indf2	;volatile
 23826  002B6A  D174               	goto	L101
 23827  002B6C                     l27512:
 23828                           
 23829                           ;eusartparser.c: 125:             package->data.data8[1]=var_sys_NVM.Direction_motor;
 23830  002B6C  EE20 F003          	lfsr	2,3
 23831  002B70  5018               	movf	read_eusartparser@package^0,w,c
 23832  002B72  26D9               	addwf	fsr2l,f,c
 23833  002B74  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23834  002B76  22DA               	addwfc	fsr2h,f,c
 23835  002B78  C0B3  FFDF         	movff	_var_sys_NVM+27,indf2	;volatile
 23836  002B7C  D16B               	goto	L101
 23837  002B7E                     l27516:
 23838                           
 23839                           ;eusartparser.c: 130:             package->data.data8[1]=var_sys_NVM.TypeofMotor;
 23840  002B7E  EE20 F003          	lfsr	2,3
 23841  002B82  5018               	movf	read_eusartparser@package^0,w,c
 23842  002B84  26D9               	addwf	fsr2l,f,c
 23843  002B86  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23844  002B88  22DA               	addwfc	fsr2h,f,c
 23845  002B8A  C0B4  FFDF         	movff	_var_sys_NVM+28,indf2	;volatile
 23846  002B8E  D162               	goto	L101
 23847  002B90                     l27520:
 23848                           
 23849                           ;eusartparser.c: 135:             package->data.data8[1]=var_sys_NVM.positionRemotesWalk
      +                          ;
 23850  002B90  EE20 F003          	lfsr	2,3
 23851  002B94  5018               	movf	read_eusartparser@package^0,w,c
 23852  002B96  26D9               	addwf	fsr2l,f,c
 23853  002B98  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23854  002B9A  22DA               	addwfc	fsr2h,f,c
 23855  002B9C  C0B9  FFDF         	movff	_var_sys_NVM+33,indf2	;volatile
 23856                           
 23857                           ;eusartparser.c: 136:             package->data.data8[0]=var_sys_NVM.positionRemotesFull
      +                          ;
 23858  002BA0  EE20 F002          	lfsr	2,2
 23859  002BA4  5018               	movf	read_eusartparser@package^0,w,c
 23860  002BA6  26D9               	addwf	fsr2l,f,c
 23861  002BA8  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23862  002BAA  22DA               	addwfc	fsr2h,f,c
 23863  002BAC  C0B8  FFDF         	movff	_var_sys_NVM+32,indf2	;volatile
 23864  002BB0  D6FC               	goto	l27434
 23865  002BB2                     l27524:
 23866                           
 23867                           ;eusartparser.c: 140:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.count
      +                          erMoves))+1);
 23868  002BB2  EE20  F0BC         	lfsr	2,_var_sys_NVM+36
 23869  002BB6  EE10 F002          	lfsr	1,2
 23870  002BBA  5018               	movf	read_eusartparser@package^0,w,c
 23871  002BBC  26E1               	addwf	fsr1l,f,c
 23872  002BBE  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23873  002BC0  22E2               	addwfc	fsr1h,f,c
 23874  002BC2  CFDE FFE6          	movff	postinc2,postinc1
 23875  002BC6  CFDD FFE5          	movff	postdec2,postdec1
 23876                           
 23877                           ;eusartparser.c: 141:             write_package(*package);
 23878  002BCA  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23879  002BCE  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23880  002BD2  EE00  F011         	lfsr	0,write_package@package
 23881  002BD6  0E06               	movlw	6
 23882  002BD8                     u33531:
 23883  002BD8  CFDB FFEB          	movff	plusw2,plusw0
 23884  002BDC  06E8               	decf	wreg,f,c
 23885  002BDE  E2FC               	bc	u33531
 23886  002BE0  ECCB  F04C         	call	_write_package	;wreg free
 23887                           
 23888                           ;eusartparser.c: 142:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.count
      +                          erMoves))+0);
 23889  002BE4  EE20  F0BA         	lfsr	2,_var_sys_NVM+34
 23890  002BE8  EE10 F002          	lfsr	1,2
 23891  002BEC  5018               	movf	read_eusartparser@package^0,w,c
 23892  002BEE  26E1               	addwf	fsr1l,f,c
 23893  002BF0  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23894  002BF2  22E2               	addwfc	fsr1h,f,c
 23895  002BF4  CFDE FFE6          	movff	postinc2,postinc1
 23896  002BF8  CFDD FFE5          	movff	postdec2,postdec1
 23897                           
 23898                           ;eusartparser.c: 143:             write_package(*package);
 23899  002BFC  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23900  002C00  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23901  002C04  EE00  F011         	lfsr	0,write_package@package
 23902  002C08  0E06               	movlw	6
 23903  002C0A                     u33541:
 23904  002C0A  CFDB FFEB          	movff	plusw2,plusw0
 23905  002C0E  06E8               	decf	wreg,f,c
 23906  002C10  E2FC               	bc	u33541
 23907  002C12  ECCB  F04C         	call	_write_package	;wreg free
 23908                           
 23909                           ;eusartparser.c: 144:             break;
 23910  002C16  0012               	return	
 23911  002C18                     l27530:
 23912                           
 23913                           ;eusartparser.c: 146:             package->data.data8[1]=var_sys_NVM.OnlyRollingCode;
 23914  002C18  EE20 F003          	lfsr	2,3
 23915  002C1C  5018               	movf	read_eusartparser@package^0,w,c
 23916  002C1E  26D9               	addwf	fsr2l,f,c
 23917  002C20  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23918  002C22  22DA               	addwfc	fsr2h,f,c
 23919  002C24  C0BE  FFDF         	movff	_var_sys_NVM+38,indf2	;volatile
 23920  002C28  D115               	goto	L101
 23921  002C2A                     l27534:
 23922                           
 23923                           ;eusartparser.c: 151:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.learn
      +                          ingCurrentDecelarationClose))+1);
 23924  002C2A  EE20  F0C2         	lfsr	2,_var_sys_NVM+42
 23925  002C2E  EE10 F002          	lfsr	1,2
 23926  002C32  5018               	movf	read_eusartparser@package^0,w,c
 23927  002C34  26E1               	addwf	fsr1l,f,c
 23928  002C36  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23929  002C38  22E2               	addwfc	fsr1h,f,c
 23930  002C3A  CFDE FFE6          	movff	postinc2,postinc1
 23931  002C3E  CFDD FFE5          	movff	postdec2,postdec1
 23932                           
 23933                           ;eusartparser.c: 152:             write_package(*package);
 23934  002C42  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23935  002C46  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23936  002C4A  EE00  F011         	lfsr	0,write_package@package
 23937  002C4E  0E06               	movlw	6
 23938  002C50                     u33551:
 23939  002C50  CFDB FFEB          	movff	plusw2,plusw0
 23940  002C54  06E8               	decf	wreg,f,c
 23941  002C56  E2FC               	bc	u33551
 23942  002C58  ECCB  F04C         	call	_write_package	;wreg free
 23943                           
 23944                           ;eusartparser.c: 153:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.learn
      +                          ingCurrentDecelarationClose))+0);
 23945  002C5C  EE20  F0C0         	lfsr	2,_var_sys_NVM+40
 23946  002C60  EE10 F002          	lfsr	1,2
 23947  002C64  5018               	movf	read_eusartparser@package^0,w,c
 23948  002C66  26E1               	addwf	fsr1l,f,c
 23949  002C68  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23950  002C6A  22E2               	addwfc	fsr1h,f,c
 23951  002C6C  CFDE FFE6          	movff	postinc2,postinc1
 23952  002C70  CFDD FFE5          	movff	postdec2,postdec1
 23953                           
 23954                           ;eusartparser.c: 154:             write_package(*package);
 23955  002C74  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23956  002C78  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23957  002C7C  EE00  F011         	lfsr	0,write_package@package
 23958  002C80  0E06               	movlw	6
 23959  002C82                     u33561:
 23960  002C82  CFDB FFEB          	movff	plusw2,plusw0
 23961  002C86  06E8               	decf	wreg,f,c
 23962  002C88  E2FC               	bc	u33561
 23963  002C8A  ECCB  F04C         	call	_write_package	;wreg free
 23964                           
 23965                           ;eusartparser.c: 155:             break;
 23966  002C8E  0012               	return	
 23967  002C90                     l27540:
 23968                           
 23969                           ;eusartparser.c: 157:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.learn
      +                          ingCurrentDecelarationOpen))+1);
 23970  002C90  EE20  F0C6         	lfsr	2,_var_sys_NVM+46
 23971  002C94  EE10 F002          	lfsr	1,2
 23972  002C98  5018               	movf	read_eusartparser@package^0,w,c
 23973  002C9A  26E1               	addwf	fsr1l,f,c
 23974  002C9C  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23975  002C9E  22E2               	addwfc	fsr1h,f,c
 23976  002CA0  CFDE FFE6          	movff	postinc2,postinc1
 23977  002CA4  CFDD FFE5          	movff	postdec2,postdec1
 23978                           
 23979                           ;eusartparser.c: 158:             write_package(*package);
 23980  002CA8  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23981  002CAC  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23982  002CB0  EE00  F011         	lfsr	0,write_package@package
 23983  002CB4  0E06               	movlw	6
 23984  002CB6                     u33571:
 23985  002CB6  CFDB FFEB          	movff	plusw2,plusw0
 23986  002CBA  06E8               	decf	wreg,f,c
 23987  002CBC  E2FC               	bc	u33571
 23988  002CBE  ECCB  F04C         	call	_write_package	;wreg free
 23989                           
 23990                           ;eusartparser.c: 159:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.learn
      +                          ingCurrentDecelarationOpen))+0);
 23991  002CC2  EE20  F0C4         	lfsr	2,_var_sys_NVM+44
 23992  002CC6  EE10 F002          	lfsr	1,2
 23993  002CCA  5018               	movf	read_eusartparser@package^0,w,c
 23994  002CCC  26E1               	addwf	fsr1l,f,c
 23995  002CCE  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23996  002CD0  22E2               	addwfc	fsr1h,f,c
 23997  002CD2  CFDE FFE6          	movff	postinc2,postinc1
 23998  002CD6  CFDD FFE5          	movff	postdec2,postdec1
 23999                           
 24000                           ;eusartparser.c: 160:             write_package(*package);
 24001  002CDA  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 24002  002CDE  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 24003  002CE2  EE00  F011         	lfsr	0,write_package@package
 24004  002CE6  0E06               	movlw	6
 24005  002CE8                     u33581:
 24006  002CE8  CFDB FFEB          	movff	plusw2,plusw0
 24007  002CEC  06E8               	decf	wreg,f,c
 24008  002CEE  E2FC               	bc	u33581
 24009  002CF0  ECCB  F04C         	call	_write_package	;wreg free
 24010                           
 24011                           ;eusartparser.c: 161:             break;
 24012  002CF4  0012               	return	
 24013  002CF6                     l27546:
 24014                           
 24015                           ;eusartparser.c: 163:             package->data.data16=var_sys_NVM.learningCurrentNormal
      +                          Close;
 24016  002CF6  EE20 F002          	lfsr	2,2
 24017  002CFA  5018               	movf	read_eusartparser@package^0,w,c
 24018  002CFC  26D9               	addwf	fsr2l,f,c
 24019  002CFE  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24020  002D00  22DA               	addwfc	fsr2h,f,c
 24021  002D02  C0C8  FFDE         	movff	_var_sys_NVM+48,postinc2	;volatile
 24022  002D06  C0C9  FFDD         	movff	_var_sys_NVM+49,postdec2	;volatile
 24023  002D0A  D64F               	goto	l27434
 24024  002D0C                     l27550:
 24025                           
 24026                           ;eusartparser.c: 167:             package->data.data16=var_sys_NVM.learningCurrentNormal
      +                          Open;
 24027  002D0C  EE20 F002          	lfsr	2,2
 24028  002D10  5018               	movf	read_eusartparser@package^0,w,c
 24029  002D12  26D9               	addwf	fsr2l,f,c
 24030  002D14  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24031  002D16  22DA               	addwfc	fsr2h,f,c
 24032  002D18  C0CA  FFDE         	movff	_var_sys_NVM+50,postinc2	;volatile
 24033  002D1C  C0CB  FFDD         	movff	_var_sys_NVM+51,postdec2	;volatile
 24034  002D20  D644               	goto	l27434
 24035  002D22                     l27554:
 24036                           
 24037                           ;eusartparser.c: 171:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.learn
      +                          ingTimeToOpen))+1);
 24038  002D22  EE20  F0CE         	lfsr	2,_var_sys_NVM+54
 24039  002D26  EE10 F002          	lfsr	1,2
 24040  002D2A  5018               	movf	read_eusartparser@package^0,w,c
 24041  002D2C  26E1               	addwf	fsr1l,f,c
 24042  002D2E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24043  002D30  22E2               	addwfc	fsr1h,f,c
 24044  002D32  CFDE FFE6          	movff	postinc2,postinc1
 24045  002D36  CFDD FFE5          	movff	postdec2,postdec1
 24046                           
 24047                           ;eusartparser.c: 172:             write_package(*package);
 24048  002D3A  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 24049  002D3E  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 24050  002D42  EE00  F011         	lfsr	0,write_package@package
 24051  002D46  0E06               	movlw	6
 24052  002D48                     u33591:
 24053  002D48  CFDB FFEB          	movff	plusw2,plusw0
 24054  002D4C  06E8               	decf	wreg,f,c
 24055  002D4E  E2FC               	bc	u33591
 24056  002D50  ECCB  F04C         	call	_write_package	;wreg free
 24057                           
 24058                           ;eusartparser.c: 173:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.learn
      +                          ingTimeToOpen))+0);
 24059  002D54  EE20  F0CC         	lfsr	2,_var_sys_NVM+52
 24060  002D58  EE10 F002          	lfsr	1,2
 24061  002D5C  5018               	movf	read_eusartparser@package^0,w,c
 24062  002D5E  26E1               	addwf	fsr1l,f,c
 24063  002D60  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24064  002D62  22E2               	addwfc	fsr1h,f,c
 24065  002D64  CFDE FFE6          	movff	postinc2,postinc1
 24066  002D68  CFDD FFE5          	movff	postdec2,postdec1
 24067                           
 24068                           ;eusartparser.c: 174:             write_package(*package);
 24069  002D6C  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 24070  002D70  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 24071  002D74  EE00  F011         	lfsr	0,write_package@package
 24072  002D78  0E06               	movlw	6
 24073  002D7A                     u33601:
 24074  002D7A  CFDB FFEB          	movff	plusw2,plusw0
 24075  002D7E  06E8               	decf	wreg,f,c
 24076  002D80  E2FC               	bc	u33601
 24077  002D82  ECCB  F04C         	call	_write_package	;wreg free
 24078                           
 24079                           ;eusartparser.c: 175:             break;
 24080  002D86  0012               	return	
 24081  002D88                     l27560:
 24082                           
 24083                           ;eusartparser.c: 177:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.learn
      +                          ingTimeToClose))+1);
 24084  002D88  EE20  F0D2         	lfsr	2,_var_sys_NVM+58
 24085  002D8C  EE10 F002          	lfsr	1,2
 24086  002D90  5018               	movf	read_eusartparser@package^0,w,c
 24087  002D92  26E1               	addwf	fsr1l,f,c
 24088  002D94  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24089  002D96  22E2               	addwfc	fsr1h,f,c
 24090  002D98  CFDE FFE6          	movff	postinc2,postinc1
 24091  002D9C  CFDD FFE5          	movff	postdec2,postdec1
 24092                           
 24093                           ;eusartparser.c: 178:             write_package(*package);
 24094  002DA0  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 24095  002DA4  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 24096  002DA8  EE00  F011         	lfsr	0,write_package@package
 24097  002DAC  0E06               	movlw	6
 24098  002DAE                     u33611:
 24099  002DAE  CFDB FFEB          	movff	plusw2,plusw0
 24100  002DB2  06E8               	decf	wreg,f,c
 24101  002DB4  E2FC               	bc	u33611
 24102  002DB6  ECCB  F04C         	call	_write_package	;wreg free
 24103                           
 24104                           ;eusartparser.c: 179:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.learn
      +                          ingTimeToClose))+0);
 24105  002DBA  EE20  F0D0         	lfsr	2,_var_sys_NVM+56
 24106  002DBE  EE10 F002          	lfsr	1,2
 24107  002DC2  5018               	movf	read_eusartparser@package^0,w,c
 24108  002DC4  26E1               	addwf	fsr1l,f,c
 24109  002DC6  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24110  002DC8  22E2               	addwfc	fsr1h,f,c
 24111  002DCA  CFDE FFE6          	movff	postinc2,postinc1
 24112  002DCE  CFDD FFE5          	movff	postdec2,postdec1
 24113                           
 24114                           ;eusartparser.c: 180:             write_package(*package);
 24115  002DD2  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 24116  002DD6  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 24117  002DDA  EE00  F011         	lfsr	0,write_package@package
 24118  002DDE  0E06               	movlw	6
 24119  002DE0                     u33621:
 24120  002DE0  CFDB FFEB          	movff	plusw2,plusw0
 24121  002DE4  06E8               	decf	wreg,f,c
 24122  002DE6  E2FC               	bc	u33621
 24123  002DE8  ECCB  F04C         	call	_write_package	;wreg free
 24124                           
 24125                           ;eusartparser.c: 181:             break;
 24126  002DEC  0012               	return	
 24127  002DEE                     l27566:
 24128                           
 24129                           ;eusartparser.c: 186:             package->data.data8[1]=RFFull;
 24130  002DEE  EE20 F003          	lfsr	2,3
 24131  002DF2  5018               	movf	read_eusartparser@package^0,w,c
 24132  002DF4  26D9               	addwf	fsr2l,f,c
 24133  002DF6  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24134  002DF8  22DA               	addwfc	fsr2h,f,c
 24135  002DFA  C08B  FFDF         	movff	_RFFull,indf2	;volatile
 24136  002DFE  D02A               	goto	L101
 24137  002E00                     l27570:
 24138                           
 24139                           ;eusartparser.c: 192:             package->data.data8[1]=var_sys.photoCellIsObstructed;
 24140  002E00  EE20 F003          	lfsr	2,3
 24141  002E04  5018               	movf	read_eusartparser@package^0,w,c
 24142  002E06  26D9               	addwf	fsr2l,f,c
 24143  002E08  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24144  002E0A  22DA               	addwfc	fsr2h,f,c
 24145  002E0C  C101  FFDF         	movff	_var_sys+1,indf2	;volatile
 24146                           
 24147                           ;eusartparser.c: 193:             package->data.data8[0]=var_sys.SecurityBarIsObstructed
      +                          ;
 24148  002E10  EE20 F002          	lfsr	2,2
 24149  002E14  5018               	movf	read_eusartparser@package^0,w,c
 24150  002E16  26D9               	addwf	fsr2l,f,c
 24151  002E18  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24152  002E1A  22DA               	addwfc	fsr2h,f,c
 24153  002E1C  C102  FFDF         	movff	_var_sys+2,indf2	;volatile
 24154  002E20  D5C4               	goto	l27434
 24155  002E22                     l27574:
 24156                           
 24157                           ;eusartparser.c: 198:             package->data.data8[1]=var_sys.FimCurso_CloseIsEnabled
      +                          ;
 24158  002E22  EE20 F003          	lfsr	2,3
 24159  002E26  5018               	movf	read_eusartparser@package^0,w,c
 24160  002E28  26D9               	addwf	fsr2l,f,c
 24161  002E2A  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24162  002E2C  22DA               	addwfc	fsr2h,f,c
 24163  002E2E  C103  FFDF         	movff	_var_sys+3,indf2	;volatile
 24164                           
 24165                           ;eusartparser.c: 199:             package->data.data8[0]=var_sys.FimCurso_OpenIsEnabled;
 24166  002E32  EE20 F002          	lfsr	2,2
 24167  002E36  5018               	movf	read_eusartparser@package^0,w,c
 24168  002E38  26D9               	addwf	fsr2l,f,c
 24169  002E3A  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24170  002E3C  22DA               	addwfc	fsr2h,f,c
 24171  002E3E  C104  FFDF         	movff	_var_sys+4,indf2	;volatile
 24172  002E42  D5B3               	goto	l27434
 24173  002E44                     l27578:
 24174                           
 24175                           ;eusartparser.c: 204:             package->data.data8[1]=var_sys.Statedoorcontrol;
 24176  002E44  EE20 F003          	lfsr	2,3
 24177  002E48  5018               	movf	read_eusartparser@package^0,w,c
 24178  002E4A  26D9               	addwf	fsr2l,f,c
 24179  002E4C  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24180  002E4E  22DA               	addwfc	fsr2h,f,c
 24181  002E50  C11C  FFDF         	movff	_var_sys+28,indf2	;volatile
 24182  002E54                     L101:
 24183                           
 24184                           ;eusartparser.c: 205:             package->data.data8[0]=0x00;
 24185  002E54  EE20 F002          	lfsr	2,2
 24186  002E58  5018               	movf	read_eusartparser@package^0,w,c
 24187  002E5A  26D9               	addwf	fsr2l,f,c
 24188  002E5C  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24189  002E5E  22DA               	addwfc	fsr2h,f,c
 24190  002E60  0E00               	movlw	0
 24191  002E62  6EDF               	movwf	indf2,c
 24192  002E64  D5A2               	goto	l27434
 24193  002E66                     l27582:
 24194                           
 24195                           ;eusartparser.c: 210:             package->data.data16=*(((uint16_t*)&(var_sys.PositionA
      +                          ctual))+1);
 24196  002E66  EE21  F020         	lfsr	2,_var_sys+32
 24197  002E6A  EE10 F002          	lfsr	1,2
 24198  002E6E  5018               	movf	read_eusartparser@package^0,w,c
 24199  002E70  26E1               	addwf	fsr1l,f,c
 24200  002E72  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24201  002E74  22E2               	addwfc	fsr1h,f,c
 24202  002E76  CFDE FFE6          	movff	postinc2,postinc1
 24203  002E7A  CFDD FFE5          	movff	postdec2,postdec1
 24204                           
 24205                           ;eusartparser.c: 211:             write_package(*package);
 24206  002E7E  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 24207  002E82  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 24208  002E86  EE00  F011         	lfsr	0,write_package@package
 24209  002E8A  0E06               	movlw	6
 24210  002E8C                     u33631:
 24211  002E8C  CFDB FFEB          	movff	plusw2,plusw0
 24212  002E90  06E8               	decf	wreg,f,c
 24213  002E92  E2FC               	bc	u33631
 24214  002E94  ECCB  F04C         	call	_write_package	;wreg free
 24215                           
 24216                           ;eusartparser.c: 212:             package->data.data16=*(((uint16_t*)&(var_sys.PositionA
      +                          ctual))+0);
 24217  002E98  EE21  F01E         	lfsr	2,_var_sys+30
 24218  002E9C  EE10 F002          	lfsr	1,2
 24219  002EA0  5018               	movf	read_eusartparser@package^0,w,c
 24220  002EA2  26E1               	addwf	fsr1l,f,c
 24221  002EA4  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24222  002EA6  22E2               	addwfc	fsr1h,f,c
 24223  002EA8  CFDE FFE6          	movff	postinc2,postinc1
 24224  002EAC  CFDD FFE5          	movff	postdec2,postdec1
 24225                           
 24226                           ;eusartparser.c: 213:             write_package(*package);
 24227  002EB0  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 24228  002EB4  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 24229  002EB8  EE00  F011         	lfsr	0,write_package@package
 24230  002EBC  0E06               	movlw	6
 24231  002EBE                     u33641:
 24232  002EBE  CFDB FFEB          	movff	plusw2,plusw0
 24233  002EC2  06E8               	decf	wreg,f,c
 24234  002EC4  E2FC               	bc	u33641
 24235  002EC6  ECCB  F04C         	call	_write_package	;wreg free
 24236                           
 24237                           ;eusartparser.c: 214:             break;
 24238  002ECA  0012               	return	
 24239  002ECC                     l27588:
 24240                           
 24241                           ;eusartparser.c: 217:             package->data.data8[1]=var_sys.PositionIsLost;
 24242  002ECC  EE20 F003          	lfsr	2,3
 24243  002ED0  5018               	movf	read_eusartparser@package^0,w,c
 24244  002ED2  26D9               	addwf	fsr2l,f,c
 24245  002ED4  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24246  002ED6  22DA               	addwfc	fsr2h,f,c
 24247  002ED8  C148  FFDF         	movff	_var_sys+72,indf2	;volatile
 24248                           
 24249                           ;eusartparser.c: 218:             package->data.data8[0]=var_sys.StateVersion;
 24250  002EDC  EE20 F002          	lfsr	2,2
 24251  002EE0  5018               	movf	read_eusartparser@package^0,w,c
 24252  002EE2  26D9               	addwf	fsr2l,f,c
 24253  002EE4  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24254  002EE6  22DA               	addwfc	fsr2h,f,c
 24255  002EE8  C149  FFDF         	movff	_var_sys+73,indf2	;volatile
 24256  002EEC  D55E               	goto	l27434
 24257  002EEE                     l3620:
 24258                           
 24259                           ;eusartparser.c: 231:             package->data.data16=0x00;
 24260  002EEE  EE20 F002          	lfsr	2,2
 24261  002EF2  5018               	movf	read_eusartparser@package^0,w,c
 24262  002EF4  26D9               	addwf	fsr2l,f,c
 24263  002EF6  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24264  002EF8  22DA               	addwfc	fsr2h,f,c
 24265  002EFA  0E00               	movlw	0
 24266  002EFC  6EDE               	movwf	postinc2,c
 24267  002EFE  0E00               	movlw	0
 24268  002F00  6EDD               	movwf	postdec2,c
 24269  002F02  D553               	goto	l27434
 24270  002F04                     l27600:
 24271  002F04  EE20 F001          	lfsr	2,1
 24272  002F08  5018               	movf	read_eusartparser@package^0,w,c
 24273  002F0A  26D9               	addwf	fsr2l,f,c
 24274  002F0C  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24275  002F0E  22DA               	addwfc	fsr2h,f,c
 24276  002F10  50DF               	movf	indf2,w,c
 24277  002F12  6E1A               	movwf	??_read_eusartparser^0,c
 24278  002F14  6A1B               	clrf	(??_read_eusartparser+1)^0,c
 24279                           
 24280                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24281                           ; Switch size 1, requested type "simple"
 24282                           ; Number of cases is 1, Range of values is 0 to 0
 24283                           ; switch strategies available:
 24284                           ; Name         Instructions Cycles
 24285                           ; simple_byte            4     3 (average)
 24286                           ;	Chosen strategy is simple_byte
 24287  002F16  501B               	movf	(??_read_eusartparser+1)^0,w,c
 24288  002F18  0A00               	xorlw	0	; case 0
 24289  002F1A  A4D8               	btfss	status,2,c
 24290  002F1C  0012               	return	
 24291                           
 24292                           ; Switch size 1, requested type "simple"
 24293                           ; Number of cases is 53, Range of values is 0 to 58
 24294                           ; switch strategies available:
 24295                           ; Name         Instructions Cycles
 24296                           ; simple_byte          160    81 (average)
 24297                           ;	Chosen strategy is simple_byte
 24298  002F1E  501A               	movf	??_read_eusartparser^0,w,c
 24299  002F20  0A00               	xorlw	0	; case 0
 24300  002F22  B4D8               	btfsc	status,2,c
 24301  002F24  D532               	goto	l27432
 24302  002F26  0A01               	xorlw	1	; case 1
 24303  002F28  B4D8               	btfsc	status,2,c
 24304  002F2A  D7E1               	goto	l3620
 24305  002F2C  0A03               	xorlw	3	; case 2
 24306  002F2E  B4D8               	btfsc	status,2,c
 24307  002F30  D564               	goto	l27444
 24308  002F32  0A01               	xorlw	1	; case 3
 24309  002F34  B4D8               	btfsc	status,2,c
 24310  002F36  D5E4               	goto	l27488
 24311  002F38  0A07               	xorlw	7	; case 4
 24312  002F3A  B4D8               	btfsc	status,2,c
 24313  002F3C  D7D8               	goto	l3620
 24314  002F3E  0A01               	xorlw	1	; case 5
 24315  002F40  B4D8               	btfsc	status,2,c
 24316  002F42  D56C               	goto	l27448
 24317  002F44  0A03               	xorlw	3	; case 6
 24318  002F46  B4D8               	btfsc	status,2,c
 24319  002F48  D7D2               	goto	l3620
 24320  002F4A  0A01               	xorlw	1	; case 7
 24321  002F4C  B4D8               	btfsc	status,2,c
 24322  002F4E  D5BE               	goto	l27480
 24323  002F50  0A0F               	xorlw	15	; case 8
 24324  002F52  B4D8               	btfsc	status,2,c
 24325  002F54  D602               	goto	l27508
 24326  002F56  0A01               	xorlw	1	; case 9
 24327  002F58  B4D8               	btfsc	status,2,c
 24328  002F5A  D7C9               	goto	l3620
 24329  002F5C  0A03               	xorlw	3	; case 10
 24330  002F5E  B4D8               	btfsc	status,2,c
 24331  002F60  D5D8               	goto	l27492
 24332  002F62  0A01               	xorlw	1	; case 11
 24333  002F64  B4D8               	btfsc	status,2,c
 24334  002F66  D7C3               	goto	l3620
 24335  002F68  0A07               	xorlw	7	; case 12
 24336  002F6A  B4D8               	btfsc	status,2,c
 24337  002F6C  D7C0               	goto	l3620
 24338  002F6E  0A01               	xorlw	1	; case 13
 24339  002F70  B4D8               	btfsc	status,2,c
 24340  002F72  D7BD               	goto	l3620
 24341  002F74  0A03               	xorlw	3	; case 14
 24342  002F76  B4D8               	btfsc	status,2,c
 24343  002F78  D7BA               	goto	l3620
 24344  002F7A  0A01               	xorlw	1	; case 15
 24345  002F7C  B4D8               	btfsc	status,2,c
 24346  002F7E  D7B7               	goto	l3620
 24347  002F80  0A1F               	xorlw	31	; case 16
 24348  002F82  B4D8               	btfsc	status,2,c
 24349  002F84  D502               	goto	l27432
 24350  002F86  0A01               	xorlw	1	; case 17
 24351  002F88  B4D8               	btfsc	status,2,c
 24352  002F8A  D51D               	goto	l27436
 24353  002F8C  0A03               	xorlw	3	; case 18
 24354  002F8E  B4D8               	btfsc	status,2,c
 24355  002F90  D52B               	goto	l27440
 24356  002F92  0A01               	xorlw	1	; case 19
 24357  002F94  B4D8               	btfsc	status,2,c
 24358  002F96  D531               	goto	l27444
 24359  002F98  0A07               	xorlw	7	; case 20
 24360  002F9A  B4D8               	btfsc	status,2,c
 24361  002F9C  D53F               	goto	l27448
 24362  002F9E  0A01               	xorlw	1	; case 21
 24363  002FA0  B4D8               	btfsc	status,2,c
 24364  002FA2  D54D               	goto	l27452
 24365  002FA4  0A03               	xorlw	3	; case 22
 24366  002FA6  B4D8               	btfsc	status,2,c
 24367  002FA8  D55B               	goto	l27456
 24368  002FAA  0A01               	xorlw	1	; case 23
 24369  002FAC  B4D8               	btfsc	status,2,c
 24370  002FAE  D561               	goto	l27460
 24371  002FB0  0A0F               	xorlw	15	; case 24
 24372  002FB2  B4D8               	btfsc	status,2,c
 24373  002FB4  D567               	goto	l27464
 24374  002FB6  0A01               	xorlw	1	; case 25
 24375  002FB8  B4D8               	btfsc	status,2,c
 24376  002FBA  D56D               	goto	l27468
 24377  002FBC  0A03               	xorlw	3	; case 26
 24378  002FBE  B4D8               	btfsc	status,2,c
 24379  002FC0  D573               	goto	l27472
 24380  002FC2  0A01               	xorlw	1	; case 27
 24381  002FC4  B4D8               	btfsc	status,2,c
 24382  002FC6  D579               	goto	l27476
 24383  002FC8  0A07               	xorlw	7	; case 28
 24384  002FCA  B4D8               	btfsc	status,2,c
 24385  002FCC  D57F               	goto	l27480
 24386  002FCE  0A01               	xorlw	1	; case 29
 24387  002FD0  B4D8               	btfsc	status,2,c
 24388  002FD2  D585               	goto	l27484
 24389  002FD4  0A03               	xorlw	3	; case 30
 24390  002FD6  B4D8               	btfsc	status,2,c
 24391  002FD8  D593               	goto	l27488
 24392  002FDA  0A01               	xorlw	1	; case 31
 24393  002FDC  B4D8               	btfsc	status,2,c
 24394  002FDE  D599               	goto	l27492
 24395  002FE0  0A3F               	xorlw	63	; case 32
 24396  002FE2  B4D8               	btfsc	status,2,c
 24397  002FE4  D59F               	goto	l27496
 24398  002FE6  0A01               	xorlw	1	; case 33
 24399  002FE8  B4D8               	btfsc	status,2,c
 24400  002FEA  D5A5               	goto	l27500
 24401  002FEC  0A03               	xorlw	3	; case 34
 24402  002FEE  B4D8               	btfsc	status,2,c
 24403  002FF0  D5AB               	goto	l27504
 24404  002FF2  0A01               	xorlw	1	; case 35
 24405  002FF4  B4D8               	btfsc	status,2,c
 24406  002FF6  D5B1               	goto	l27508
 24407  002FF8  0A07               	xorlw	7	; case 36
 24408  002FFA  B4D8               	btfsc	status,2,c
 24409  002FFC  D5B7               	goto	l27512
 24410  002FFE  0A01               	xorlw	1	; case 37
 24411  003000  B4D8               	btfsc	status,2,c
 24412  003002  D5BD               	goto	l27516
 24413  003004  0A03               	xorlw	3	; case 38
 24414  003006  B4D8               	btfsc	status,2,c
 24415  003008  D5C3               	goto	l27520
 24416  00300A  0A01               	xorlw	1	; case 39
 24417  00300C  B4D8               	btfsc	status,2,c
 24418  00300E  D5D1               	goto	l27524
 24419  003010  0A0E               	xorlw	14	; case 41
 24420  003012  B4D8               	btfsc	status,2,c
 24421  003014  D601               	goto	l27530
 24422  003016  0A03               	xorlw	3	; case 42
 24423  003018  B4D8               	btfsc	status,2,c
 24424  00301A  D607               	goto	l27534
 24425  00301C  0A06               	xorlw	6	; case 44
 24426  00301E  B4D8               	btfsc	status,2,c
 24427  003020  D637               	goto	l27540
 24428  003022  0A02               	xorlw	2	; case 46
 24429  003024  B4D8               	btfsc	status,2,c
 24430  003026  D667               	goto	l27546
 24431  003028  0A01               	xorlw	1	; case 47
 24432  00302A  B4D8               	btfsc	status,2,c
 24433  00302C  D66F               	goto	l27550
 24434  00302E  0A1F               	xorlw	31	; case 48
 24435  003030  B4D8               	btfsc	status,2,c
 24436  003032  D677               	goto	l27554
 24437  003034  0A02               	xorlw	2	; case 50
 24438  003036  B4D8               	btfsc	status,2,c
 24439  003038  D6A7               	goto	l27560
 24440  00303A  0A06               	xorlw	6	; case 52
 24441  00303C  B4D8               	btfsc	status,2,c
 24442  00303E  D6D7               	goto	l27566
 24443  003040  0A01               	xorlw	1	; case 53
 24444  003042  B4D8               	btfsc	status,2,c
 24445  003044  D6DD               	goto	l27570
 24446  003046  0A03               	xorlw	3	; case 54
 24447  003048  B4D8               	btfsc	status,2,c
 24448  00304A  D6EB               	goto	l27574
 24449  00304C  0A01               	xorlw	1	; case 55
 24450  00304E  B4D8               	btfsc	status,2,c
 24451  003050  D6F9               	goto	l27578
 24452  003052  0A0F               	xorlw	15	; case 56
 24453  003054  B4D8               	btfsc	status,2,c
 24454  003056  D707               	goto	l27582
 24455  003058  0A02               	xorlw	2	; case 58
 24456  00305A  A4D8               	btfss	status,2,c
 24457  00305C  0012               	return	
 24458  00305E  D736               	goto	l27588
 24459  003060                     __end_of_read_eusartparser:
 24460                           	callstack 0
 24461                           
 24462 ;; *************** function _write_package *****************
 24463 ;; Defined at:
 24464 ;;		line 50 in file "eusartpackage.c"
 24465 ;; Parameters:    Size  Location     Type
 24466 ;;  package         7   16[COMRAM] const struct package_t
 24467 ;; Auto vars:     Size  Location     Type
 24468 ;;		None
 24469 ;; Return value:  Size  Location     Type
 24470 ;;                  1    wreg      void 
 24471 ;; Registers used:
 24472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24473 ;; Tracked objects:
 24474 ;;		On entry : 0/0
 24475 ;;		On exit  : 0/0
 24476 ;;		Unchanged: 0/0
 24477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24478 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24481 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24482 ;;Total ram usage:        7 bytes
 24483 ;; Hardware stack levels used: 1
 24484 ;; Hardware stack levels required when called: 5
 24485 ;; This function calls:
 24486 ;;		_EUSART1_Write
 24487 ;; This function is called by:
 24488 ;;		_read_eusartparser
 24489 ;;		_eusartparser
 24490 ;;		_updateChangesToUart
 24491 ;; This function uses a non-reentrant model
 24492 ;;
 24493                           
 24494                           	psect	text79
 24495  009996                     __ptext79:
 24496                           	callstack 0
 24497  009996                     _write_package:
 24498                           	callstack 24
 24499                           
 24500                           ;eusartpackage.c: 52:         if(package.valid==0)
 24501                           
 24502                           ;incstack = 0
 24503  009996  5017               	movf	(write_package@package+6)^0,w,c
 24504  009998  B4D8               	btfsc	status,2,c
 24505  00999A  0012               	return	
 24506                           
 24507                           ;eusartpackage.c: 56:         EUSART1_Write(package.startbyte);
 24508  00999C  5015               	movf	(write_package@package+4)^0,w,c
 24509  00999E  EC4A  F04B         	call	_EUSART1_Write
 24510                           
 24511                           ;eusartpackage.c: 57:         EUSART1_Write(package.functioncode);
 24512  0099A2  5011               	movf	write_package@package^0,w,c
 24513  0099A4  EC4A  F04B         	call	_EUSART1_Write
 24514                           
 24515                           ;eusartpackage.c: 58:         EUSART1_Write(package.address);
 24516  0099A8  5012               	movf	(write_package@package+1)^0,w,c
 24517  0099AA  EC4A  F04B         	call	_EUSART1_Write
 24518                           
 24519                           ;eusartpackage.c: 59:         EUSART1_Write(package.data.data8[0]);
 24520  0099AE  5013               	movf	(write_package@package+2)^0,w,c
 24521  0099B0  EC4A  F04B         	call	_EUSART1_Write
 24522                           
 24523                           ;eusartpackage.c: 60:         EUSART1_Write(package.data.data8[1]);
 24524  0099B4  5014               	movf	(write_package@package+3)^0,w,c
 24525  0099B6  EC4A  F04B         	call	_EUSART1_Write
 24526                           
 24527                           ;eusartpackage.c: 61:         EUSART1_Write(package.endbyte);
 24528  0099BA  5016               	movf	(write_package@package+5)^0,w,c
 24529  0099BC  EC4A  F04B         	call	_EUSART1_Write
 24530  0099C0  0012               	return		;funcret
 24531  0099C2                     __end_of_write_package:
 24532                           	callstack 0
 24533                           
 24534 ;; *************** function _EUSART1_Write *****************
 24535 ;; Defined at:
 24536 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 24537 ;; Parameters:    Size  Location     Type
 24538 ;;  txData          1    wreg     unsigned char 
 24539 ;; Auto vars:     Size  Location     Type
 24540 ;;  txData          1   15[COMRAM] unsigned char 
 24541 ;; Return value:  Size  Location     Type
 24542 ;;                  1    wreg      void 
 24543 ;; Registers used:
 24544 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24545 ;; Tracked objects:
 24546 ;;		On entry : 0/0
 24547 ;;		On exit  : 3F/E
 24548 ;;		Unchanged: 0/0
 24549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24551 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24553 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24554 ;;Total ram usage:        1 bytes
 24555 ;; Hardware stack levels used: 1
 24556 ;; Hardware stack levels required when called: 4
 24557 ;; This function calls:
 24558 ;;		Nothing
 24559 ;; This function is called by:
 24560 ;;		_write_package
 24561 ;; This function uses a non-reentrant model
 24562 ;;
 24563                           
 24564                           	psect	text80
 24565  009694                     __ptext80:
 24566                           	callstack 0
 24567  009694                     _EUSART1_Write:
 24568                           	callstack 24
 24569                           
 24570                           ;incstack = 0
 24571                           ;EUSART1_Write@txData stored from wreg
 24572  009694  6E10               	movwf	EUSART1_Write@txData^0,c
 24573  009696                     
 24574                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 24575                           
 24576                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 24577  009696  0101               	movlb	1	; () banked
 24578  009698  51FD               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 24579  00969A  B4D8               	btfsc	status,2,c
 24580  00969C  D7FC               	goto	l20612
 24581                           
 24582                           ; BSR set to: 1
 24583                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 24584  00969E  010E               	movlb	14	; () banked
 24585  0096A0  B9C5               	btfsc	197,4,b	;volatile
 24586  0096A2  D003               	goto	l100
 24587                           
 24588                           ; BSR set to: 14
 24589                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 24590  0096A4  C010  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
 24591                           
 24592                           ;mcc_generated_files/eusart1.c: 182:     }
 24593  0096A8  D012               	goto	l20628
 24594  0096AA                     l100:
 24595                           
 24596                           ; BSR set to: 14
 24597                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 24598  0096AA  99C5               	bcf	197,4,b	;volatile
 24599                           
 24600                           ; BSR set to: 14
 24601                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 24602  0096AC  0E84               	movlw	low _eusart1TxBuffer
 24603  0096AE  0100               	movlb	0	; () banked
 24604  0096B0  2597               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 24605  0096B2  6ED9               	movwf	fsr2l,c
 24606  0096B4  6ADA               	clrf	fsr2h,c
 24607  0096B6  0E02               	movlw	high _eusart1TxBuffer
 24608  0096B8  22DA               	addwfc	fsr2h,f,c
 24609  0096BA  C010  FFDF         	movff	EUSART1_Write@txData,indf2
 24610                           
 24611                           ; BSR set to: 0
 24612  0096BE  2B97               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 24613                           
 24614                           ; BSR set to: 0
 24615                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 24616  0096C0  0E07               	movlw	7
 24617  0096C2  6597               	cpfsgt	_eusart1TxHead& (0+255),b
 24618  0096C4  D002               	goto	l20626
 24619                           
 24620                           ; BSR set to: 0
 24621                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 24622  0096C6  0E00               	movlw	0
 24623  0096C8  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 24624  0096CA                     l20626:
 24625                           
 24626                           ; BSR set to: 0
 24627                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 24628  0096CA  0101               	movlb	1	; () banked
 24629  0096CC  07FD               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 24630  0096CE                     l20628:
 24631                           
 24632                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 24633  0096CE  010E               	movlb	14	; () banked
 24634  0096D0  89C5               	bsf	197,4,b	;volatile
 24635                           
 24636                           ; BSR set to: 14
 24637  0096D2  0012               	return		;funcret
 24638  0096D4                     __end_of_EUSART1_Write:
 24639                           	callstack 0
 24640                           
 24641 ;; *************** function _confirmpackage *****************
 24642 ;; Defined at:
 24643 ;;		line 394 in file "eusartparser.c"
 24644 ;; Parameters:    Size  Location     Type
 24645 ;;  package         2   17[COMRAM] PTR struct package_t
 24646 ;;		 -> updateChangesToUart@package(7), main@package(7), 
 24647 ;;  confirm         1   19[COMRAM] _Bool 
 24648 ;; Auto vars:     Size  Location     Type
 24649 ;;		None
 24650 ;; Return value:  Size  Location     Type
 24651 ;;                  1    wreg      void 
 24652 ;; Registers used:
 24653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24654 ;; Tracked objects:
 24655 ;;		On entry : 0/0
 24656 ;;		On exit  : 0/0
 24657 ;;		Unchanged: 0/0
 24658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24659 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24662 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24663 ;;Total ram usage:        3 bytes
 24664 ;; Hardware stack levels used: 1
 24665 ;; Hardware stack levels required when called: 5
 24666 ;; This function calls:
 24667 ;;		_init_package
 24668 ;; This function is called by:
 24669 ;;		_eusartparser
 24670 ;;		_updateChangesToUart
 24671 ;; This function uses a non-reentrant model
 24672 ;;
 24673                           
 24674                           	psect	text81
 24675  009102                     __ptext81:
 24676                           	callstack 0
 24677  009102                     _confirmpackage:
 24678                           	callstack 23
 24679                           
 24680                           ;eusartparser.c: 395:     init_package(package);
 24681                           
 24682                           ; BSR set to: 14
 24683                           ;incstack = 0
 24684  009102  C012  F010         	movff	confirmpackage@package,init_package@package
 24685  009106  C013  F011         	movff	confirmpackage@package+1,init_package@package+1
 24686  00910A  EC54  F04C         	call	_init_package	;wreg free
 24687                           
 24688                           ;eusartparser.c: 396:     package->functioncode=0x03;
 24689  00910E  C012  FFD9         	movff	confirmpackage@package,fsr2l
 24690  009112  C013  FFDA         	movff	confirmpackage@package+1,fsr2h
 24691  009116  0E03               	movlw	3
 24692  009118  6EDF               	movwf	indf2,c
 24693                           
 24694                           ;eusartparser.c: 397:     package->address=0x00;
 24695  00911A  EE20 F001          	lfsr	2,1
 24696  00911E  5012               	movf	confirmpackage@package^0,w,c
 24697  009120  26D9               	addwf	fsr2l,f,c
 24698  009122  5013               	movf	(confirmpackage@package+1)^0,w,c
 24699  009124  22DA               	addwfc	fsr2h,f,c
 24700  009126  0E00               	movlw	0
 24701  009128  6EDF               	movwf	indf2,c
 24702                           
 24703                           ;eusartparser.c: 398:     if(confirm==1)
 24704  00912A  0414               	decf	confirmpackage@confirm^0,w,c
 24705  00912C  A4D8               	btfss	status,2,c
 24706  00912E  D00B               	goto	l27616
 24707                           
 24708                           ;eusartparser.c: 399:         package->data.data16=0x0001;
 24709  009130  EE20 F002          	lfsr	2,2
 24710  009134  5012               	movf	confirmpackage@package^0,w,c
 24711  009136  26D9               	addwf	fsr2l,f,c
 24712  009138  5013               	movf	(confirmpackage@package+1)^0,w,c
 24713  00913A  22DA               	addwfc	fsr2h,f,c
 24714  00913C  0E01               	movlw	1
 24715  00913E  6EDE               	movwf	postinc2,c
 24716  009140  0E00               	movlw	0
 24717  009142  6EDD               	movwf	postdec2,c
 24718  009144  0012               	return	
 24719  009146                     l27616:
 24720                           
 24721                           ;eusartparser.c: 401:         package->data.data16=0x0000;
 24722  009146  EE20 F002          	lfsr	2,2
 24723  00914A  5012               	movf	confirmpackage@package^0,w,c
 24724  00914C  26D9               	addwf	fsr2l,f,c
 24725  00914E  5013               	movf	(confirmpackage@package+1)^0,w,c
 24726  009150  22DA               	addwfc	fsr2h,f,c
 24727  009152  0E00               	movlw	0
 24728  009154  6EDE               	movwf	postinc2,c
 24729  009156  0E00               	movlw	0
 24730  009158  6EDD               	movwf	postdec2,c
 24731  00915A  0012               	return		;funcret
 24732  00915C                     __end_of_confirmpackage:
 24733                           	callstack 0
 24734                           
 24735 ;; *************** function _init_package *****************
 24736 ;; Defined at:
 24737 ;;		line 11 in file "eusartpackage.c"
 24738 ;; Parameters:    Size  Location     Type
 24739 ;;  package         2   15[COMRAM] PTR struct package_t
 24740 ;;		 -> updateChangesToUart@package(7), main@package(7), 
 24741 ;; Auto vars:     Size  Location     Type
 24742 ;;		None
 24743 ;; Return value:  Size  Location     Type
 24744 ;;                  1    wreg      void 
 24745 ;; Registers used:
 24746 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24747 ;; Tracked objects:
 24748 ;;		On entry : 0/1
 24749 ;;		On exit  : 0/0
 24750 ;;		Unchanged: 0/0
 24751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24752 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24755 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24756 ;;Total ram usage:        2 bytes
 24757 ;; Hardware stack levels used: 1
 24758 ;; Hardware stack levels required when called: 4
 24759 ;; This function calls:
 24760 ;;		Nothing
 24761 ;; This function is called by:
 24762 ;;		_confirmpackage
 24763 ;;		_updateChangesToUart
 24764 ;; This function uses a non-reentrant model
 24765 ;;
 24766                           
 24767                           	psect	text82
 24768  0098A8                     __ptext82:
 24769                           	callstack 0
 24770  0098A8                     _init_package:
 24771                           	callstack 24
 24772                           
 24773                           ;eusartpackage.c: 12:         package->startbyte=0x0A;
 24774                           
 24775                           ;incstack = 0
 24776  0098A8  EE20 F004          	lfsr	2,4
 24777  0098AC  5010               	movf	init_package@package^0,w,c
 24778  0098AE  26D9               	addwf	fsr2l,f,c
 24779  0098B0  5011               	movf	(init_package@package+1)^0,w,c
 24780  0098B2  22DA               	addwfc	fsr2h,f,c
 24781  0098B4  0E0A               	movlw	10
 24782  0098B6  6EDF               	movwf	indf2,c
 24783                           
 24784                           ;eusartpackage.c: 13:         package->endbyte=0x0D;
 24785  0098B8  EE20 F005          	lfsr	2,5
 24786  0098BC  5010               	movf	init_package@package^0,w,c
 24787  0098BE  26D9               	addwf	fsr2l,f,c
 24788  0098C0  5011               	movf	(init_package@package+1)^0,w,c
 24789  0098C2  22DA               	addwfc	fsr2h,f,c
 24790  0098C4  0E0D               	movlw	13
 24791  0098C6  6EDF               	movwf	indf2,c
 24792                           
 24793                           ;eusartpackage.c: 14:         package->valid=1;
 24794  0098C8  EE20 F006          	lfsr	2,6
 24795  0098CC  5010               	movf	init_package@package^0,w,c
 24796  0098CE  26D9               	addwf	fsr2l,f,c
 24797  0098D0  5011               	movf	(init_package@package+1)^0,w,c
 24798  0098D2  22DA               	addwfc	fsr2h,f,c
 24799  0098D4  0E01               	movlw	1
 24800  0098D6  6EDF               	movwf	indf2,c
 24801  0098D8  0012               	return		;funcret
 24802  0098DA                     __end_of_init_package:
 24803                           	callstack 0
 24804                           
 24805 ;; *************** function _saveNewSerial *****************
 24806 ;; Defined at:
 24807 ;;		line 81 in file "controlMemory_MC50.c"
 24808 ;; Parameters:    Size  Location     Type
 24809 ;;  cmdType         1    wreg     unsigned char 
 24810 ;;  tempSerial      4    0[BANK0 ] unsigned long 
 24811 ;;  position        1    4[BANK0 ] unsigned char 
 24812 ;; Auto vars:     Size  Location     Type
 24813 ;;  cmdType         1   57[COMRAM] unsigned char 
 24814 ;; Return value:  Size  Location     Type
 24815 ;;                  1    wreg      void 
 24816 ;; Registers used:
 24817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24818 ;; Tracked objects:
 24819 ;;		On entry : 3E/1
 24820 ;;		On exit  : 0/0
 24821 ;;		Unchanged: 0/0
 24822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24823 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24824 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24825 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24826 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24827 ;;Total ram usage:        8 bytes
 24828 ;; Hardware stack levels used: 1
 24829 ;; Hardware stack levels required when called: 13
 24830 ;; This function calls:
 24831 ;;		_i2c_writeNBytes
 24832 ;; This function is called by:
 24833 ;;		_controlSelectRemote
 24834 ;;		_eusartparser
 24835 ;; This function uses a non-reentrant model
 24836 ;;
 24837                           
 24838                           	psect	text83
 24839  008BDA                     __ptext83:
 24840                           	callstack 0
 24841  008BDA                     _saveNewSerial:
 24842                           	callstack 14
 24843                           
 24844                           ;incstack = 0
 24845                           ;saveNewSerial@cmdType stored from wreg
 24846  008BDA  6E3A               	movwf	saveNewSerial@cmdType^0,c
 24847                           
 24848                           ;controlMemory_MC50.c: 81: void saveNewSerial(char cmdType,unsigned long tempSerial, cha
      +                          r position);controlMemory_MC50.c: 82: {;controlMemory_MC50.c: 83:     if(cmdType==0)
 24849  008BDC  503A               	movf	saveNewSerial@cmdType^0,w,c
 24850  008BDE  A4D8               	btfss	status,2,c
 24851  008BE0  D01A               	goto	l20854
 24852                           
 24853                           ;controlMemory_MC50.c: 84:     {;controlMemory_MC50.c: 86:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
 24854  008BE2  0100               	movlb	0	; () banked
 24855  008BE4  51DC               	movf	saveNewSerial@position& (0+255),w,b
 24856  008BE6  6FDD               	movwf	??_saveNewSerial& (0+255),b
 24857  008BE8  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
 24858  008BEA  90D8               	bcf	status,0,c
 24859  008BEC  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 24860  008BEE  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 24861  008BF0  90D8               	bcf	status,0,c
 24862  008BF2  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 24863  008BF4  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 24864  008BF6  0E00               	movlw	0
 24865  008BF8  25DD               	addwf	??_saveNewSerial& (0+255),w,b
 24866  008BFA  6E22               	movwf	i2c_writeNBytes@reg^0,c
 24867  008BFC  0E02               	movlw	2
 24868  008BFE  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
 24869  008C00  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 24870  008C02  0ED8               	movlw	low saveNewSerial@tempSerial
 24871  008C04  6E24               	movwf	i2c_writeNBytes@data^0,c
 24872  008C06  0E00               	movlw	0
 24873  008C08  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 24874  008C0A  0E04               	movlw	4
 24875  008C0C  6E25               	movwf	i2c_writeNBytes@len^0,c
 24876  008C0E  0E50               	movlw	80
 24877  008C10  EC7B  F045         	call	_i2c_writeNBytes
 24878                           
 24879                           ;controlMemory_MC50.c: 87:     }
 24880  008C14  0012               	return	
 24881  008C16                     l20854:
 24882                           
 24883                           ;controlMemory_MC50.c: 89:     {;controlMemory_MC50.c: 91:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
 24884  008C16  0100               	movlb	0	; () banked
 24885  008C18  51DC               	movf	saveNewSerial@position& (0+255),w,b
 24886  008C1A  6FDD               	movwf	??_saveNewSerial& (0+255),b
 24887  008C1C  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
 24888  008C1E  90D8               	bcf	status,0,c
 24889  008C20  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 24890  008C22  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 24891  008C24  90D8               	bcf	status,0,c
 24892  008C26  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 24893  008C28  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 24894  008C2A  0E00               	movlw	0
 24895  008C2C  25DD               	addwf	??_saveNewSerial& (0+255),w,b
 24896  008C2E  6E22               	movwf	i2c_writeNBytes@reg^0,c
 24897  008C30  0E05               	movlw	5
 24898  008C32  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
 24899  008C34  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 24900  008C36  0ED8               	movlw	low saveNewSerial@tempSerial
 24901  008C38  6E24               	movwf	i2c_writeNBytes@data^0,c
 24902  008C3A  0E00               	movlw	0
 24903  008C3C  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 24904  008C3E  0E04               	movlw	4
 24905  008C40  6E25               	movwf	i2c_writeNBytes@len^0,c
 24906  008C42  0E50               	movlw	80
 24907  008C44  EC7B  F045         	call	_i2c_writeNBytes
 24908  008C48  0012               	return		;funcret
 24909  008C4A                     __end_of_saveNewSerial:
 24910                           	callstack 0
 24911                           
 24912 ;; *************** function _cmdMemoryIsEmpty *****************
 24913 ;; Defined at:
 24914 ;;		line 122 in file "controlMemory_MC50.c"
 24915 ;; Parameters:    Size  Location     Type
 24916 ;;  cmdType         1    wreg     unsigned char 
 24917 ;;  position        1   45[COMRAM] unsigned char 
 24918 ;; Auto vars:     Size  Location     Type
 24919 ;;  cmdType         1   48[COMRAM] unsigned char 
 24920 ;;  tempSerial      4   49[COMRAM] unsigned long 
 24921 ;; Return value:  Size  Location     Type
 24922 ;;                  1    wreg      unsigned char 
 24923 ;; Registers used:
 24924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24925 ;; Tracked objects:
 24926 ;;		On entry : 0/1
 24927 ;;		On exit  : 0/0
 24928 ;;		Unchanged: 0/0
 24929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24930 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24931 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24932 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24933 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24934 ;;Total ram usage:        8 bytes
 24935 ;; Hardware stack levels used: 1
 24936 ;; Hardware stack levels required when called: 13
 24937 ;; This function calls:
 24938 ;;		_i2c_readDataBlock
 24939 ;; This function is called by:
 24940 ;;		_setValueToEdit
 24941 ;;		_controlSelectRemote
 24942 ;;		_eusartparser
 24943 ;; This function uses a non-reentrant model
 24944 ;;
 24945                           
 24946                           	psect	text84
 24947  00823C                     __ptext84:
 24948                           	callstack 0
 24949  00823C                     _cmdMemoryIsEmpty:
 24950                           	callstack 14
 24951                           
 24952                           ;incstack = 0
 24953                           ;cmdMemoryIsEmpty@cmdType stored from wreg
 24954  00823C  6E31               	movwf	cmdMemoryIsEmpty@cmdType^0,c
 24955                           
 24956                           ;controlMemory_MC50.c: 122: char cmdMemoryIsEmpty(char cmdType, char position);controlMe
      +                          mory_MC50.c: 123: {;controlMemory_MC50.c: 124:     unsigned long tempSerial=0;
 24957  00823E  0E00               	movlw	0
 24958  008240  6E32               	movwf	cmdMemoryIsEmpty@tempSerial^0,c
 24959  008242  0E00               	movlw	0
 24960  008244  6E33               	movwf	(cmdMemoryIsEmpty@tempSerial+1)^0,c
 24961  008246  0E00               	movlw	0
 24962  008248  6E34               	movwf	(cmdMemoryIsEmpty@tempSerial+2)^0,c
 24963  00824A  0E00               	movlw	0
 24964  00824C  6E35               	movwf	(cmdMemoryIsEmpty@tempSerial+3)^0,c
 24965                           
 24966                           ;controlMemory_MC50.c: 127:      if(cmdType==0)
 24967  00824E  5031               	movf	cmdMemoryIsEmpty@cmdType^0,w,c
 24968  008250  A4D8               	btfss	status,2,c
 24969  008252  D01A               	goto	l20870
 24970                           
 24971                           ;controlMemory_MC50.c: 128:     {;controlMemory_MC50.c: 129:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0200 + (position * 4)),(char*)&tempSerial, 4);
 24972  008254  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
 24973  008256  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
 24974  008258  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
 24975  00825A  90D8               	bcf	status,0,c
 24976  00825C  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24977  00825E  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24978  008260  90D8               	bcf	status,0,c
 24979  008262  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24980  008264  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24981  008266  0E00               	movlw	0
 24982  008268  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
 24983  00826A  6E22               	movwf	i2c_readDataBlock@reg^0,c
 24984  00826C  0E02               	movlw	2
 24985  00826E  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
 24986  008270  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 24987  008272  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
 24988  008274  6E24               	movwf	i2c_readDataBlock@data^0,c
 24989  008276  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 24990  008278  0E00               	movlw	0
 24991  00827A  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 24992  00827C  0E04               	movlw	4
 24993  00827E  6E26               	movwf	i2c_readDataBlock@len^0,c
 24994  008280  0E50               	movlw	80
 24995  008282  EC40  F045         	call	_i2c_readDataBlock
 24996                           
 24997                           ;controlMemory_MC50.c: 130:     }
 24998  008286  D019               	goto	l20872
 24999  008288                     l20870:
 25000                           
 25001                           ;controlMemory_MC50.c: 132:     {;controlMemory_MC50.c: 133:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0500 + (position * 4)),(char*)&tempSerial, 4);
 25002  008288  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
 25003  00828A  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
 25004  00828C  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
 25005  00828E  90D8               	bcf	status,0,c
 25006  008290  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 25007  008292  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 25008  008294  90D8               	bcf	status,0,c
 25009  008296  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 25010  008298  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 25011  00829A  0E00               	movlw	0
 25012  00829C  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
 25013  00829E  6E22               	movwf	i2c_readDataBlock@reg^0,c
 25014  0082A0  0E05               	movlw	5
 25015  0082A2  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
 25016  0082A4  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 25017  0082A6  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
 25018  0082A8  6E24               	movwf	i2c_readDataBlock@data^0,c
 25019  0082AA  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 25020  0082AC  0E00               	movlw	0
 25021  0082AE  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 25022  0082B0  0E04               	movlw	4
 25023  0082B2  6E26               	movwf	i2c_readDataBlock@len^0,c
 25024  0082B4  0E50               	movlw	80
 25025  0082B6  EC40  F045         	call	_i2c_readDataBlock
 25026  0082BA                     l20872:
 25027                           
 25028                           ;controlMemory_MC50.c: 136:      if( tempSerial==0)
 25029  0082BA  5032               	movf	cmdMemoryIsEmpty@tempSerial^0,w,c
 25030  0082BC  1033               	iorwf	(cmdMemoryIsEmpty@tempSerial+1)^0,w,c
 25031  0082BE  1034               	iorwf	(cmdMemoryIsEmpty@tempSerial+2)^0,w,c
 25032  0082C0  1035               	iorwf	(cmdMemoryIsEmpty@tempSerial+3)^0,w,c
 25033  0082C2  A4D8               	btfss	status,2,c
 25034  0082C4  D002               	goto	l20880
 25035                           
 25036                           ;controlMemory_MC50.c: 137:      {;controlMemory_MC50.c: 138:          return 1;
 25037  0082C6  0E01               	movlw	1
 25038  0082C8  0012               	return	
 25039  0082CA                     l20880:
 25040                           
 25041                           ;controlMemory_MC50.c: 141:      {;controlMemory_MC50.c: 142:          return 0;
 25042  0082CA  0E00               	movlw	0
 25043  0082CC  0012               	return		;funcret
 25044  0082CE                     __end_of_cmdMemoryIsEmpty:
 25045                           	callstack 0
 25046                           
 25047 ;; *************** function _RemoveSerial *****************
 25048 ;; Defined at:
 25049 ;;		line 95 in file "controlMemory_MC50.c"
 25050 ;; Parameters:    Size  Location     Type
 25051 ;;  cmdType         1    wreg     unsigned char 
 25052 ;;  position        1   57[COMRAM] unsigned char 
 25053 ;; Auto vars:     Size  Location     Type
 25054 ;;  cmdType         1    2[BANK0 ] unsigned char 
 25055 ;;  tempSerial      4    3[BANK0 ] unsigned long 
 25056 ;; Return value:  Size  Location     Type
 25057 ;;                  1    wreg      void 
 25058 ;; Registers used:
 25059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25060 ;; Tracked objects:
 25061 ;;		On entry : 3E/1
 25062 ;;		On exit  : 0/0
 25063 ;;		Unchanged: 0/0
 25064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25065 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25066 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25067 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25068 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25069 ;;Total ram usage:        8 bytes
 25070 ;; Hardware stack levels used: 1
 25071 ;; Hardware stack levels required when called: 13
 25072 ;; This function calls:
 25073 ;;		_i2c_writeNBytes
 25074 ;; This function is called by:
 25075 ;;		_controlSelectRemote
 25076 ;;		_eusartparser
 25077 ;; This function uses a non-reentrant model
 25078 ;;
 25079                           
 25080                           	psect	text85
 25081  00879C                     __ptext85:
 25082                           	callstack 0
 25083  00879C                     _RemoveSerial:
 25084                           	callstack 14
 25085                           
 25086                           ;incstack = 0
 25087                           ;RemoveSerial@cmdType stored from wreg
 25088  00879C  0100               	movlb	0	; () banked
 25089  00879E  6FDA               	movwf	RemoveSerial@cmdType& (0+255),b
 25090                           
 25091                           ;controlMemory_MC50.c: 95: void RemoveSerial(char cmdType, char position);controlMemory_
      +                          MC50.c: 96: {;controlMemory_MC50.c: 97:     unsigned long tempSerial=0;
 25092  0087A0  0E00               	movlw	0
 25093  0087A2  0100               	movlb	0	; () banked
 25094  0087A4  6FDB               	movwf	RemoveSerial@tempSerial& (0+255),b
 25095  0087A6  0E00               	movlw	0
 25096  0087A8  6FDC               	movwf	(RemoveSerial@tempSerial+1)& (0+255),b
 25097  0087AA  0E00               	movlw	0
 25098  0087AC  6FDD               	movwf	(RemoveSerial@tempSerial+2)& (0+255),b
 25099  0087AE  0E00               	movlw	0
 25100  0087B0  6FDE               	movwf	(RemoveSerial@tempSerial+3)& (0+255),b
 25101                           
 25102                           ; BSR set to: 0
 25103                           ;controlMemory_MC50.c: 100:     if(cmdType==0)
 25104  0087B2  51DA               	movf	RemoveSerial@cmdType& (0+255),w,b
 25105  0087B4  A4D8               	btfss	status,2,c
 25106  0087B6  D019               	goto	l20862
 25107                           
 25108                           ; BSR set to: 0
 25109                           ;controlMemory_MC50.c: 101:     {;controlMemory_MC50.c: 102:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
 25110  0087B8  503A               	movf	RemoveSerial@position^0,w,c
 25111  0087BA  6FD8               	movwf	??_RemoveSerial& (0+255),b
 25112  0087BC  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
 25113  0087BE  90D8               	bcf	status,0,c
 25114  0087C0  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 25115  0087C2  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 25116  0087C4  90D8               	bcf	status,0,c
 25117  0087C6  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 25118  0087C8  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 25119  0087CA  0E00               	movlw	0
 25120  0087CC  25D8               	addwf	??_RemoveSerial& (0+255),w,b
 25121  0087CE  6E22               	movwf	i2c_writeNBytes@reg^0,c
 25122  0087D0  0E02               	movlw	2
 25123  0087D2  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
 25124  0087D4  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 25125  0087D6  0EDB               	movlw	low RemoveSerial@tempSerial
 25126  0087D8  6E24               	movwf	i2c_writeNBytes@data^0,c
 25127  0087DA  0E00               	movlw	0
 25128  0087DC  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 25129  0087DE  0E04               	movlw	4
 25130  0087E0  6E25               	movwf	i2c_writeNBytes@len^0,c
 25131  0087E2  0E50               	movlw	80
 25132  0087E4  EC7B  F045         	call	_i2c_writeNBytes
 25133                           
 25134                           ;controlMemory_MC50.c: 103:     }
 25135  0087E8  0012               	return	
 25136  0087EA                     l20862:
 25137                           
 25138                           ; BSR set to: 0
 25139                           ;controlMemory_MC50.c: 105:     {;controlMemory_MC50.c: 106:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
 25140  0087EA  503A               	movf	RemoveSerial@position^0,w,c
 25141  0087EC  6FD8               	movwf	??_RemoveSerial& (0+255),b
 25142  0087EE  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
 25143  0087F0  90D8               	bcf	status,0,c
 25144  0087F2  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 25145  0087F4  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 25146  0087F6  90D8               	bcf	status,0,c
 25147  0087F8  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 25148  0087FA  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 25149  0087FC  0E00               	movlw	0
 25150  0087FE  25D8               	addwf	??_RemoveSerial& (0+255),w,b
 25151  008800  6E22               	movwf	i2c_writeNBytes@reg^0,c
 25152  008802  0E05               	movlw	5
 25153  008804  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
 25154  008806  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 25155  008808  0EDB               	movlw	low RemoveSerial@tempSerial
 25156  00880A  6E24               	movwf	i2c_writeNBytes@data^0,c
 25157  00880C  0E00               	movlw	0
 25158  00880E  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 25159  008810  0E04               	movlw	4
 25160  008812  6E25               	movwf	i2c_writeNBytes@len^0,c
 25161  008814  0E50               	movlw	80
 25162  008816  EC7B  F045         	call	_i2c_writeNBytes
 25163  00881A  0012               	return		;funcret
 25164  00881C                     __end_of_RemoveSerial:
 25165                           	callstack 0
 25166                           
 25167 ;; *************** function _ReadSerial *****************
 25168 ;; Defined at:
 25169 ;;		line 110 in file "controlMemory_MC50.c"
 25170 ;; Parameters:    Size  Location     Type
 25171 ;;  cmdType         1    wreg     unsigned char 
 25172 ;;  tempSerial      1   45[COMRAM] PTR unsigned long 
 25173 ;;		 -> eusartparser@serial(4), 
 25174 ;;  position        1   46[COMRAM] unsigned char 
 25175 ;; Auto vars:     Size  Location     Type
 25176 ;;  cmdType         1   49[COMRAM] unsigned char 
 25177 ;; Return value:  Size  Location     Type
 25178 ;;                  1    wreg      void 
 25179 ;; Registers used:
 25180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25181 ;; Tracked objects:
 25182 ;;		On entry : 3F/0
 25183 ;;		On exit  : 0/0
 25184 ;;		Unchanged: 0/0
 25185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25186 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25187 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25188 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25189 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25190 ;;Total ram usage:        5 bytes
 25191 ;; Hardware stack levels used: 1
 25192 ;; Hardware stack levels required when called: 13
 25193 ;; This function calls:
 25194 ;;		_i2c_readDataBlock
 25195 ;; This function is called by:
 25196 ;;		_eusartparser
 25197 ;; This function uses a non-reentrant model
 25198 ;;
 25199                           
 25200                           	psect	text86
 25201  008C4A                     __ptext86:
 25202                           	callstack 0
 25203  008C4A                     _ReadSerial:
 25204                           	callstack 16
 25205                           
 25206                           ;incstack = 0
 25207                           ;ReadSerial@cmdType stored from wreg
 25208  008C4A  6E32               	movwf	ReadSerial@cmdType^0,c
 25209                           
 25210                           ;controlMemory_MC50.c: 110: void ReadSerial(char cmdType, unsigned long* tempSerial, cha
      +                          r position);controlMemory_MC50.c: 111: {;controlMemory_MC50.c: 112:     if(cmdType==0)
 25211  008C4C  5032               	movf	ReadSerial@cmdType^0,w,c
 25212  008C4E  A4D8               	btfss	status,2,c
 25213  008C50  D01A               	goto	l23062
 25214                           
 25215                           ;controlMemory_MC50.c: 113:     {;controlMemory_MC50.c: 114:        i2c_readDataBlock(0x
      +                          50, (uint16_t)(0x0200 + (position * 4)), (char*)tempSerial, 4);
 25216  008C52  502F               	movf	ReadSerial@position^0,w,c
 25217  008C54  6E30               	movwf	??_ReadSerial^0,c
 25218  008C56  6A31               	clrf	(??_ReadSerial+1)^0,c
 25219  008C58  90D8               	bcf	status,0,c
 25220  008C5A  3630               	rlcf	??_ReadSerial^0,f,c
 25221  008C5C  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 25222  008C5E  90D8               	bcf	status,0,c
 25223  008C60  3630               	rlcf	??_ReadSerial^0,f,c
 25224  008C62  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 25225  008C64  0E00               	movlw	0
 25226  008C66  2430               	addwf	??_ReadSerial^0,w,c
 25227  008C68  6E22               	movwf	i2c_readDataBlock@reg^0,c
 25228  008C6A  0E02               	movlw	2
 25229  008C6C  2031               	addwfc	(??_ReadSerial+1)^0,w,c
 25230  008C6E  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 25231  008C70  C02E  F024         	movff	ReadSerial@tempSerial,i2c_readDataBlock@data
 25232  008C74  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 25233  008C76  0E00               	movlw	0
 25234  008C78  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 25235  008C7A  0E04               	movlw	4
 25236  008C7C  6E26               	movwf	i2c_readDataBlock@len^0,c
 25237  008C7E  0E50               	movlw	80
 25238  008C80  EC40  F045         	call	_i2c_readDataBlock
 25239                           
 25240                           ;controlMemory_MC50.c: 115:     }
 25241  008C84  0012               	return	
 25242  008C86                     l23062:
 25243                           
 25244                           ;controlMemory_MC50.c: 117:     {;controlMemory_MC50.c: 118:        i2c_readDataBlock(0x
      +                          50, (uint16_t)(0x0500 + (position * 4)), (char*)tempSerial, 4);
 25245  008C86  502F               	movf	ReadSerial@position^0,w,c
 25246  008C88  6E30               	movwf	??_ReadSerial^0,c
 25247  008C8A  6A31               	clrf	(??_ReadSerial+1)^0,c
 25248  008C8C  90D8               	bcf	status,0,c
 25249  008C8E  3630               	rlcf	??_ReadSerial^0,f,c
 25250  008C90  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 25251  008C92  90D8               	bcf	status,0,c
 25252  008C94  3630               	rlcf	??_ReadSerial^0,f,c
 25253  008C96  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 25254  008C98  0E00               	movlw	0
 25255  008C9A  2430               	addwf	??_ReadSerial^0,w,c
 25256  008C9C  6E22               	movwf	i2c_readDataBlock@reg^0,c
 25257  008C9E  0E05               	movlw	5
 25258  008CA0  2031               	addwfc	(??_ReadSerial+1)^0,w,c
 25259  008CA2  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 25260  008CA4  C02E  F024         	movff	ReadSerial@tempSerial,i2c_readDataBlock@data
 25261  008CA8  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 25262  008CAA  0E00               	movlw	0
 25263  008CAC  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 25264  008CAE  0E04               	movlw	4
 25265  008CB0  6E26               	movwf	i2c_readDataBlock@len^0,c
 25266  008CB2  0E50               	movlw	80
 25267  008CB4  EC40  F045         	call	_i2c_readDataBlock
 25268  008CB8  0012               	return		;funcret
 25269  008CBA                     __end_of_ReadSerial:
 25270                           	callstack 0
 25271                           
 25272 ;; *************** function _i2c_readDataBlock *****************
 25273 ;; Defined at:
 25274 ;;		line 147 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 25275 ;; Parameters:    Size  Location     Type
 25276 ;;  address         1    wreg     unsigned char 
 25277 ;;  reg             2   33[COMRAM] unsigned short 
 25278 ;;  data            2   35[COMRAM] PTR void 
 25279 ;;		 -> eusartparser@serial(4), var_sys_NVM.homemPresente(1), cmdMemoryIsEmpty@tempSerial(4), var_sys_NVM.positionRemote
      +sFull(1), 
 25280 ;;		 -> memoryTEMP(16), var_sys_NVM.learningCurrentNormalClose(2), var_sys_NVM(64), 
 25281 ;;  len             2   37[COMRAM] unsigned int 
 25282 ;; Auto vars:     Size  Location     Type
 25283 ;;  address         1   40[COMRAM] unsigned char 
 25284 ;;  d               4   41[COMRAM] struct .
 25285 ;; Return value:  Size  Location     Type
 25286 ;;                  1    wreg      void 
 25287 ;; Registers used:
 25288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25289 ;; Tracked objects:
 25290 ;;		On entry : 0/2
 25291 ;;		On exit  : 0/0
 25292 ;;		Unchanged: 0/0
 25293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25294 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25295 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25296 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25297 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25298 ;;Total ram usage:       12 bytes
 25299 ;; Hardware stack levels used: 1
 25300 ;; Hardware stack levels required when called: 12
 25301 ;; This function calls:
 25302 ;;		_I2C1_Close
 25303 ;;		_I2C1_MasterWrite
 25304 ;;		_I2C1_Open
 25305 ;;		_I2C1_SetAddressNackCallback
 25306 ;;		_I2C1_SetBuffer
 25307 ;;		_I2C1_SetDataCompleteCallback
 25308 ;; This function is called by:
 25309 ;;		_validateRemoteSerialNumber
 25310 ;;		_ReadSerial
 25311 ;;		_cmdMemoryIsEmpty
 25312 ;;		_loadNVM_VarSystem
 25313 ;; This function uses a non-reentrant model
 25314 ;;
 25315                           
 25316                           	psect	text87
 25317  008A80                     __ptext87:
 25318                           	callstack 0
 25319  008A80                     _i2c_readDataBlock:
 25320                           	callstack 14
 25321                           
 25322                           ;incstack = 0
 25323                           ;i2c_readDataBlock@address stored from wreg
 25324  008A80  6E29               	movwf	i2c_readDataBlock@address^0,c
 25325                           
 25326                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147: void i2c_readDataBlock(i2c1_addre
      +                          ss_t address, uint16_t reg, void *data, size_t len);mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 148: {;mcc_generated_files/drivers/i2c_simple_master.c: 149:     buf_t d;;m
      +                          cc_generated_files/drivers/i2c_simple_master.c: 150:     d.data = data;
 25327  008A82  C024  F02C         	movff	i2c_readDataBlock@data,i2c_readDataBlock@d+2
 25328  008A86  C025  F02D         	movff	i2c_readDataBlock@data+1,i2c_readDataBlock@d+3
 25329                           
 25330                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151:     d.len = len;
 25331  008A8A  C026  F02A         	movff	i2c_readDataBlock@len,i2c_readDataBlock@d
 25332  008A8E  C027  F02B         	movff	i2c_readDataBlock@len+1,i2c_readDataBlock@d+1
 25333  008A92                     l20648:
 25334  008A92  5023               	movf	(i2c_readDataBlock@reg+1)^0,w,c
 25335  008A94  1029               	iorwf	i2c_readDataBlock@address^0,w,c
 25336  008A96  EC4B  F043         	call	_I2C1_Open
 25337  008A9A  0900               	iorlw	0
 25338  008A9C  B4D8               	btfsc	status,2,c
 25339  008A9E  D7F9               	goto	l20648
 25340                           
 25341                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          rdBlkRegCompleteHandler,&d);
 25342  008AA0  0E14               	movlw	low _rdBlkRegCompleteHandler
 25343  008AA2  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 25344  008AA4  0E97               	movlw	high _rdBlkRegCompleteHandler
 25345  008AA6  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 25346  008AA8  0E2A               	movlw	low i2c_readDataBlock@d
 25347  008AAA  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 25348  008AAC  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 25349  008AAE  EC65  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 25350                           
 25351                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     I2C1_SetBuffer(&reg,1);
 25352  008AB2  0E22               	movlw	low i2c_readDataBlock@reg
 25353  008AB4  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 25354  008AB6  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 25355  008AB8  0E00               	movlw	0
 25356  008ABA  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 25357  008ABC  0E01               	movlw	1
 25358  008ABE  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 25359  008AC0  EC1C  F04F         	call	_I2C1_SetBuffer	;wreg free
 25360                           
 25361                           ; BSR set to: 2
 25362                           ;mcc_generated_files/drivers/i2c_simple_master.c: 156:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 25363  008AC4  0E00               	movlw	0
 25364  008AC6  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 25365  008AC8  0E00               	movlw	0
 25366  008ACA  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 25367  008ACC  0E00               	movlw	0
 25368  008ACE  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 25369  008AD0  0E00               	movlw	0
 25370  008AD2  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 25371  008AD4  EC4D  F04F         	call	_I2C1_SetAddressNackCallback	;wreg free
 25372                           
 25373                           ;mcc_generated_files/drivers/i2c_simple_master.c: 157:     I2C1_MasterWrite();
 25374  008AD8  EC1B  F050         	call	_I2C1_MasterWrite	;wreg free
 25375  008ADC                     l20658:
 25376  008ADC  EC8E  F04E         	call	_I2C1_Close	;wreg free
 25377  008AE0  06E8               	decf	wreg,f,c
 25378  008AE2  B4D8               	btfsc	status,2,c
 25379  008AE4  D7FB               	goto	l20658
 25380                           
 25381                           ;mcc_generated_files/drivers/i2c_simple_master.c: 159:     _delay((unsigned long)((10)*(
      +                          64000000/4000.0)));
 25382  008AE6  0ED0               	movlw	208
 25383  008AE8  6E28               	movwf	??_i2c_readDataBlock^0,c
 25384  008AEA  0ECA               	movlw	202
 25385  008AEC                     u34417:
 25386  008AEC  2EE8               	decfsz	wreg,f,c
 25387  008AEE  D7FE               	bra	u34417
 25388  008AF0  2E28               	decfsz	??_i2c_readDataBlock^0,f,c
 25389  008AF2  D7FC               	bra	u34417
 25390  008AF4  0012               	return		;funcret
 25391  008AF6                     __end_of_i2c_readDataBlock:
 25392                           	callstack 0
 25393                           
 25394 ;; *************** function _WWDT_TimerClear *****************
 25395 ;; Defined at:
 25396 ;;		line 128 in file "mcc_generated_files/mcc.c"
 25397 ;; Parameters:    Size  Location     Type
 25398 ;;		None
 25399 ;; Auto vars:     Size  Location     Type
 25400 ;;  state           1   15[COMRAM] _Bool 
 25401 ;;  readBack        1    0        unsigned char 
 25402 ;; Return value:  Size  Location     Type
 25403 ;;                  1    wreg      void 
 25404 ;; Registers used:
 25405 ;;		wreg, status,2
 25406 ;; Tracked objects:
 25407 ;;		On entry : 0/0
 25408 ;;		On exit  : 0/0
 25409 ;;		Unchanged: 0/0
 25410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25412 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25414 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25415 ;;Total ram usage:        1 bytes
 25416 ;; Hardware stack levels used: 1
 25417 ;; Hardware stack levels required when called: 4
 25418 ;; This function calls:
 25419 ;;		Nothing
 25420 ;; This function is called by:
 25421 ;;		_main
 25422 ;; This function uses a non-reentrant model
 25423 ;;
 25424                           
 25425                           	psect	text88
 25426  009D7C                     __ptext88:
 25427                           	callstack 0
 25428  009D7C                     _WWDT_TimerClear:
 25429                           	callstack 26
 25430                           
 25431                           ;mcc_generated_files/mcc.c: 134:     _Bool state = GIE;
 25432                           
 25433                           ;incstack = 0
 25434  009D7C  0E00               	movlw	0
 25435  009D7E  BEF2               	btfsc	4082,7,c	;volatile
 25436  009D80  0E01               	movlw	1
 25437  009D82  6E10               	movwf	WWDT_TimerClear@state^0,c
 25438                           
 25439                           ;mcc_generated_files/mcc.c: 135:     GIE = 0;
 25440  009D84  9EF2               	bcf	4082,7,c	;volatile
 25441  009D86  010E               	movlb	14	; () banked
 25442  009D88  51D2               	movf	210,w,b	;volatile
 25443  009D8A  0004               	clrwdt		;# 
 25444                           
 25445                           ;mcc_generated_files/mcc.c: 138:     GIE = state;
 25446  009D8C  B010               	btfsc	WWDT_TimerClear@state^0,0,c
 25447  009D8E  D002               	bra	u29795
 25448  009D90  9EF2               	bcf	4082,7,c	;volatile
 25449  009D92  D001               	bra	u29796
 25450  009D94                     u29795:
 25451  009D94  8EF2               	bsf	4082,7,c	;volatile
 25452  009D96                     u29796:
 25453  009D96  0012               	return		;funcret
 25454  009D98                     __end_of_WWDT_TimerClear:
 25455                           	callstack 0
 25456                           
 25457 ;; *************** function _WWDT_SoftEnable *****************
 25458 ;; Defined at:
 25459 ;;		line 104 in file "mcc_generated_files/mcc.c"
 25460 ;; Parameters:    Size  Location     Type
 25461 ;;		None
 25462 ;; Auto vars:     Size  Location     Type
 25463 ;;		None
 25464 ;; Return value:  Size  Location     Type
 25465 ;;                  1    wreg      void 
 25466 ;; Registers used:
 25467 ;;		None
 25468 ;; Tracked objects:
 25469 ;;		On entry : 3F/E
 25470 ;;		On exit  : 3F/E
 25471 ;;		Unchanged: 0/0
 25472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25477 ;;Total ram usage:        0 bytes
 25478 ;; Hardware stack levels used: 1
 25479 ;; Hardware stack levels required when called: 4
 25480 ;; This function calls:
 25481 ;;		Nothing
 25482 ;; This function is called by:
 25483 ;;		_main
 25484 ;; This function uses a non-reentrant model
 25485 ;;
 25486                           
 25487                           	psect	text89
 25488  00A0BC                     __ptext89:
 25489                           	callstack 0
 25490  00A0BC                     _WWDT_SoftEnable:
 25491                           	callstack 26
 25492                           
 25493                           ; BSR set to: 14
 25494                           ;mcc_generated_files/mcc.c: 107:     WDTCON0bits.SEN=1;
 25495                           
 25496                           ;incstack = 0
 25497  00A0BC  81D2               	bsf	210,0,b	;volatile
 25498                           
 25499                           ; BSR set to: 14
 25500  00A0BE  0012               	return		;funcret
 25501  00A0C0                     __end_of_WWDT_SoftEnable:
 25502                           	callstack 0
 25503                           
 25504 ;; *************** function _ShowVersion *****************
 25505 ;; Defined at:
 25506 ;;		line 254 in file "main_MC50.c"
 25507 ;; Parameters:    Size  Location     Type
 25508 ;;		None
 25509 ;; Auto vars:     Size  Location     Type
 25510 ;;		None
 25511 ;; Return value:  Size  Location     Type
 25512 ;;                  1    wreg      void 
 25513 ;; Registers used:
 25514 ;;		wreg, status,2, status,0, cstack
 25515 ;; Tracked objects:
 25516 ;;		On entry : 3F/1
 25517 ;;		On exit  : 3F/1
 25518 ;;		Unchanged: 0/0
 25519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25524 ;;Total ram usage:        0 bytes
 25525 ;; Hardware stack levels used: 1
 25526 ;; Hardware stack levels required when called: 5
 25527 ;; This function calls:
 25528 ;;		_SetSegmentValue
 25529 ;; This function is called by:
 25530 ;;		_main
 25531 ;; This function uses a non-reentrant model
 25532 ;;
 25533                           
 25534                           	psect	text90
 25535  008E6A                     __ptext90:
 25536                           	callstack 0
 25537  008E6A                     _ShowVersion:
 25538                           	callstack 25
 25539                           
 25540                           ; BSR set to: 1
 25541                           ;main_MC50.c: 256:     if(ts_system.TimeShowVersion<=0)
 25542                           
 25543                           ; BSR set to: 14
 25544                           ;incstack = 0
 25545  008E6A  BFDB               	btfsc	(_ts_system+61)& (0+255),7,b	;volatile
 25546  008E6C  D005               	goto	u31480
 25547  008E6E  51DB               	movf	(_ts_system+61)& (0+255),w,b	;volatile
 25548  008E70  E12E               	bnz	l2044
 25549  008E72  05DA               	decf	(_ts_system+60)& (0+255),w,b	;volatile
 25550  008E74  B0D8               	btfsc	status,0,c
 25551  008E76  0012               	return	
 25552  008E78                     u31480:
 25553                           
 25554                           ; BSR set to: 1
 25555                           ;main_MC50.c: 257:     {;main_MC50.c: 259:             if(var_sys.StateVersion==0)
 25556  008E78  5149               	movf	(_var_sys+73)& (0+255),w,b	;volatile
 25557  008E7A  A4D8               	btfss	status,2,c
 25558  008E7C  D006               	goto	l25560
 25559                           
 25560                           ; BSR set to: 1
 25561                           ;main_MC50.c: 260:             {;main_MC50.c: 261:                 SetSegmentValue((1/10
      +                          )%10,(1/1)%10);
 25562  008E7E  0E01               	movlw	1
 25563  008E80  6E1C               	movwf	SetSegmentValue@d2^0,c
 25564  008E82  0E00               	movlw	0
 25565  008E84  EC0F  F04F         	call	_SetSegmentValue
 25566                           
 25567                           ;main_MC50.c: 262:             }
 25568  008E88  D01C               	goto	l2039
 25569  008E8A                     l25560:
 25570                           
 25571                           ; BSR set to: 1
 25572  008E8A  0549               	decf	(_var_sys+73)& (0+255),w,b	;volatile
 25573  008E8C  A4D8               	btfss	status,2,c
 25574  008E8E  D006               	goto	l25564
 25575                           
 25576                           ; BSR set to: 1
 25577                           ;main_MC50.c: 264:             {;main_MC50.c: 265:                 SetSegmentValue(dr, (
      +                          180/100)%10);
 25578  008E90  0E01               	movlw	1
 25579  008E92  6E1C               	movwf	SetSegmentValue@d2^0,c
 25580  008E94  0E14               	movlw	20
 25581  008E96  EC0F  F04F         	call	_SetSegmentValue
 25582                           
 25583                           ;main_MC50.c: 266:             }
 25584  008E9A  D013               	goto	l2039
 25585  008E9C                     l25564:
 25586                           
 25587                           ; BSR set to: 1
 25588  008E9C  0E02               	movlw	2
 25589  008E9E  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 25590  008EA0  A4D8               	btfss	status,2,c
 25591  008EA2  D006               	goto	l25568
 25592                           
 25593                           ; BSR set to: 1
 25594                           ;main_MC50.c: 268:             {;main_MC50.c: 269:                 SetSegmentValue((180/
      +                          10)%10,(180/1)%10);
 25595  008EA4  0E00               	movlw	0
 25596  008EA6  6E1C               	movwf	SetSegmentValue@d2^0,c
 25597  008EA8  0E08               	movlw	8
 25598  008EAA  EC0F  F04F         	call	_SetSegmentValue
 25599                           
 25600                           ;main_MC50.c: 270:             }
 25601  008EAE  D009               	goto	l2039
 25602  008EB0                     l25568:
 25603                           
 25604                           ; BSR set to: 1
 25605  008EB0  0E03               	movlw	3
 25606  008EB2  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 25607  008EB4  A4D8               	btfss	status,2,c
 25608  008EB6  D005               	goto	l2039
 25609                           
 25610                           ; BSR set to: 1
 25611                           ;main_MC50.c: 272:             {;main_MC50.c: 273:                SetSegmentValue(dr, d2
      +                          );
 25612  008EB8  0E02               	movlw	2
 25613  008EBA  6E1C               	movwf	SetSegmentValue@d2^0,c
 25614  008EBC  0E14               	movlw	20
 25615  008EBE  EC0F  F04F         	call	_SetSegmentValue
 25616  008EC2                     l2039:
 25617                           
 25618                           ;main_MC50.c: 282:         var_sys.StateVersion++;
 25619                           
 25620                           ; BSR set to: 1
 25621  008EC2  0101               	movlb	1	; () banked
 25622  008EC4  2B49               	incf	(_var_sys+73)& (0+255),f,b	;volatile
 25623                           
 25624                           ; BSR set to: 1
 25625                           ;main_MC50.c: 283:         ts_system.TimeShowVersion=(1000/50);
 25626  008EC6  0E00               	movlw	0
 25627  008EC8  6FDB               	movwf	(_ts_system+61)& (0+255),b	;volatile
 25628  008ECA  0E14               	movlw	20
 25629  008ECC  6FDA               	movwf	(_ts_system+60)& (0+255),b	;volatile
 25630  008ECE                     l2044:
 25631                           
 25632                           ; BSR set to: 1
 25633  008ECE  0012               	return		;funcret
 25634  008ED0                     __end_of_ShowVersion:
 25635                           	callstack 0
 25636                           
 25637 ;; *************** function _SetSegmentValue *****************
 25638 ;; Defined at:
 25639 ;;		line 112 in file "outputs_MC50.c"
 25640 ;; Parameters:    Size  Location     Type
 25641 ;;  d1              1    wreg     unsigned char 
 25642 ;;  d2              1   27[COMRAM] unsigned char 
 25643 ;; Auto vars:     Size  Location     Type
 25644 ;;  d1              1   28[COMRAM] unsigned char 
 25645 ;; Return value:  Size  Location     Type
 25646 ;;                  1    wreg      void 
 25647 ;; Registers used:
 25648 ;;		wreg, status,2
 25649 ;; Tracked objects:
 25650 ;;		On entry : 0/0
 25651 ;;		On exit  : 3F/0
 25652 ;;		Unchanged: 0/0
 25653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25654 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25657 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25658 ;;Total ram usage:        2 bytes
 25659 ;; Hardware stack levels used: 1
 25660 ;; Hardware stack levels required when called: 4
 25661 ;; This function calls:
 25662 ;;		Nothing
 25663 ;; This function is called by:
 25664 ;;		_main
 25665 ;;		_ShowVersion
 25666 ;;		_controlSelectRemote
 25667 ;; This function uses a non-reentrant model
 25668 ;;
 25669                           
 25670                           	psect	text91
 25671  009E1E                     __ptext91:
 25672                           	callstack 0
 25673  009E1E                     _SetSegmentValue:
 25674                           	callstack 23
 25675                           
 25676                           ; BSR set to: 1
 25677                           ;incstack = 0
 25678                           ;SetSegmentValue@d1 stored from wreg
 25679  009E1E  6E1D               	movwf	SetSegmentValue@d1^0,c
 25680                           
 25681                           ;outputs_MC50.c: 112: void SetSegmentValue(char d1, char d2);outputs_MC50.c: 113: {;outp
      +                          uts_MC50.c: 117:         dispStruct.display_grp.value_display1=d1;
 25682  009E20  C01D  F072         	movff	SetSegmentValue@d1,_dispStruct	;volatile
 25683                           
 25684                           ;outputs_MC50.c: 118:         dispStruct.display_grp.value_display2=d2;
 25685  009E24  C01C  F073         	movff	SetSegmentValue@d2,_dispStruct+1	;volatile
 25686                           
 25687                           ;outputs_MC50.c: 119:         dispStruct.intermitentFreq=0;
 25688  009E28  0E00               	movlw	0
 25689  009E2A  0100               	movlb	0	; () banked
 25690  009E2C  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
 25691  009E2E  0E00               	movlw	0
 25692  009E30  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
 25693                           
 25694                           ; BSR set to: 0
 25695                           ;outputs_MC50.c: 120:         dispStruct.upFase=0;
 25696  009E32  0E00               	movlw	0
 25697  009E34  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 25698                           
 25699                           ; BSR set to: 0
 25700  009E36  0012               	return		;funcret
 25701  009E38                     __end_of_SetSegmentValue:
 25702                           	callstack 0
 25703                           
 25704 ;; *************** function _SYSTEM_Initialize *****************
 25705 ;; Defined at:
 25706 ;;		line 50 in file "mcc_generated_files/mcc.c"
 25707 ;; Parameters:    Size  Location     Type
 25708 ;;		None
 25709 ;; Auto vars:     Size  Location     Type
 25710 ;;		None
 25711 ;; Return value:  Size  Location     Type
 25712 ;;                  1    wreg      void 
 25713 ;; Registers used:
 25714 ;;		wreg, status,2, status,0, cstack
 25715 ;; Tracked objects:
 25716 ;;		On entry : 3F/0
 25717 ;;		On exit  : 3F/E
 25718 ;;		Unchanged: 0/0
 25719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25724 ;;Total ram usage:        0 bytes
 25725 ;; Hardware stack levels used: 1
 25726 ;; Hardware stack levels required when called: 6
 25727 ;; This function calls:
 25728 ;;		_ADCC_Initialize
 25729 ;;		_EUSART1_Initialize
 25730 ;;		_I2C1_Initialize
 25731 ;;		_INTERRUPT_Initialize
 25732 ;;		_OSCILLATOR_Initialize
 25733 ;;		_PIN_MANAGER_Initialize
 25734 ;;		_PMD_Initialize
 25735 ;;		_TMR0_Initialize
 25736 ;;		_TMR1_Initialize
 25737 ;;		_TMR2_Initialize
 25738 ;;		_WWDT_Initialize
 25739 ;; This function is called by:
 25740 ;;		_main
 25741 ;; This function uses a non-reentrant model
 25742 ;;
 25743                           
 25744                           	psect	text92
 25745  00993C                     __ptext92:
 25746                           	callstack 0
 25747  00993C                     _SYSTEM_Initialize:
 25748                           	callstack 24
 25749                           
 25750                           ; BSR set to: 0
 25751                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 25752                           
 25753                           ; BSR set to: 0
 25754                           ;incstack = 0
 25755  00993C  EC60  F050         	call	_INTERRUPT_Initialize	;wreg free
 25756                           
 25757                           ; BSR set to: 0
 25758                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 25759  009940  ECCC  F04E         	call	_PMD_Initialize	;wreg free
 25760                           
 25761                           ; BSR set to: 14
 25762                           ;mcc_generated_files/mcc.c: 54:     I2C1_Initialize();
 25763  009944  EC9B  F04F         	call	_I2C1_Initialize	;wreg free
 25764                           
 25765                           ; BSR set to: 14
 25766                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 25767  009948  ECD2  F040         	call	_PIN_MANAGER_Initialize	;wreg free
 25768                           
 25769                           ; BSR set to: 14
 25770                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 25771  00994C  EC71  F04F         	call	_OSCILLATOR_Initialize	;wreg free
 25772                           
 25773                           ; BSR set to: 14
 25774                           ;mcc_generated_files/mcc.c: 57:     WWDT_Initialize();
 25775  009950  ECDF  F04F         	call	_WWDT_Initialize	;wreg free
 25776                           
 25777                           ; BSR set to: 14
 25778                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 25779  009954  EC03  F04A         	call	_ADCC_Initialize	;wreg free
 25780                           
 25781                           ; BSR set to: 15
 25782                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 25783  009958  ECE1  F04C         	call	_TMR2_Initialize	;wreg free
 25784                           
 25785                           ; BSR set to: 14
 25786                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
 25787  00995C  EC29  F04B         	call	_TMR1_Initialize	;wreg free
 25788                           
 25789                           ; BSR set to: 14
 25790                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
 25791  009960  EC7D  F04E         	call	_TMR0_Initialize	;wreg free
 25792                           
 25793                           ; BSR set to: 14
 25794                           ;mcc_generated_files/mcc.c: 62:     EUSART1_Initialize();
 25795  009964  EC0E  F044         	call	_EUSART1_Initialize	;wreg free
 25796                           
 25797                           ; BSR set to: 14
 25798  009968  0012               	return		;funcret
 25799  00996A                     __end_of_SYSTEM_Initialize:
 25800                           	callstack 0
 25801                           
 25802 ;; *************** function _WWDT_Initialize *****************
 25803 ;; Defined at:
 25804 ;;		line 96 in file "mcc_generated_files/mcc.c"
 25805 ;; Parameters:    Size  Location     Type
 25806 ;;		None
 25807 ;; Auto vars:     Size  Location     Type
 25808 ;;		None
 25809 ;; Return value:  Size  Location     Type
 25810 ;;                  1    wreg      void 
 25811 ;; Registers used:
 25812 ;;		wreg, status,2
 25813 ;; Tracked objects:
 25814 ;;		On entry : 3F/E
 25815 ;;		On exit  : 3F/E
 25816 ;;		Unchanged: 0/0
 25817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25822 ;;Total ram usage:        0 bytes
 25823 ;; Hardware stack levels used: 1
 25824 ;; Hardware stack levels required when called: 4
 25825 ;; This function calls:
 25826 ;;		Nothing
 25827 ;; This function is called by:
 25828 ;;		_SYSTEM_Initialize
 25829 ;; This function uses a non-reentrant model
 25830 ;;
 25831                           
 25832                           	psect	text93
 25833  009FBE                     __ptext93:
 25834                           	callstack 0
 25835  009FBE                     _WWDT_Initialize:
 25836                           	callstack 25
 25837                           
 25838                           ; BSR set to: 14
 25839                           ;mcc_generated_files/mcc.c: 99:     WDTCON0 = 22;
 25840                           
 25841                           ; BSR set to: 14
 25842                           ;incstack = 0
 25843  009FBE  0E16               	movlw	22
 25844  009FC0  6FD2               	movwf	210,b	;volatile
 25845                           
 25846                           ;mcc_generated_files/mcc.c: 100:     WDTCON1 = 7|32;
 25847  009FC2  0E27               	movlw	39
 25848  009FC4  6FD3               	movwf	211,b	;volatile
 25849                           
 25850                           ; BSR set to: 14
 25851  009FC6  0012               	return		;funcret
 25852  009FC8                     __end_of_WWDT_Initialize:
 25853                           	callstack 0
 25854                           
 25855 ;; *************** function _TMR2_Initialize *****************
 25856 ;; Defined at:
 25857 ;;		line 79 in file "mcc_generated_files/tmr2.c"
 25858 ;; Parameters:    Size  Location     Type
 25859 ;;		None
 25860 ;; Auto vars:     Size  Location     Type
 25861 ;;		None
 25862 ;; Return value:  Size  Location     Type
 25863 ;;                  1    wreg      void 
 25864 ;; Registers used:
 25865 ;;		wreg, status,2, status,0, cstack
 25866 ;; Tracked objects:
 25867 ;;		On entry : 3F/F
 25868 ;;		On exit  : 3F/E
 25869 ;;		Unchanged: 0/0
 25870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25875 ;;Total ram usage:        0 bytes
 25876 ;; Hardware stack levels used: 1
 25877 ;; Hardware stack levels required when called: 5
 25878 ;; This function calls:
 25879 ;;		_TMR2_SetInterruptHandler
 25880 ;; This function is called by:
 25881 ;;		_SYSTEM_Initialize
 25882 ;; This function uses a non-reentrant model
 25883 ;;
 25884                           
 25885                           	psect	text94
 25886  0099C2                     __ptext94:
 25887                           	callstack 0
 25888  0099C2                     _TMR2_Initialize:
 25889                           	callstack 24
 25890                           
 25891                           ; BSR set to: 15
 25892                           ;mcc_generated_files/tmr2.c: 84:     T2CLKCON = 0x02;
 25893                           
 25894                           ; BSR set to: 14
 25895                           ;incstack = 0
 25896  0099C2  0E02               	movlw	2
 25897  0099C4  6EBF               	movwf	191,c	;volatile
 25898                           
 25899                           ;mcc_generated_files/tmr2.c: 87:     T2HLT = 0x40;
 25900  0099C6  0E40               	movlw	64
 25901  0099C8  6EBE               	movwf	190,c	;volatile
 25902                           
 25903                           ;mcc_generated_files/tmr2.c: 90:     T2RST = 0x00;
 25904  0099CA  0E00               	movlw	0
 25905  0099CC  6EC0               	movwf	192,c	;volatile
 25906                           
 25907                           ;mcc_generated_files/tmr2.c: 93:     T2PR = 0xC7;
 25908  0099CE  0EC7               	movlw	199
 25909  0099D0  6EBC               	movwf	188,c	;volatile
 25910                           
 25911                           ;mcc_generated_files/tmr2.c: 96:     T2TMR = 0x00;
 25912  0099D2  0E00               	movlw	0
 25913  0099D4  6EBB               	movwf	187,c	;volatile
 25914                           
 25915                           ; BSR set to: 15
 25916                           ;mcc_generated_files/tmr2.c: 99:     PIR4bits.TMR2IF = 0;
 25917  0099D6  010E               	movlb	14	; () banked
 25918  0099D8  93CE               	bcf	206,1,b	;volatile
 25919                           
 25920                           ; BSR set to: 14
 25921                           ;mcc_generated_files/tmr2.c: 102:     PIE4bits.TMR2IE = 1;
 25922  0099DA  83C6               	bsf	198,1,b	;volatile
 25923                           
 25924                           ; BSR set to: 14
 25925                           ;mcc_generated_files/tmr2.c: 105:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHand
      +                          ler);
 25926  0099DC  0EEA               	movlw	low _TMR2_DefaultInterruptHandler
 25927  0099DE  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
 25928  0099E0  0EA0               	movlw	high _TMR2_DefaultInterruptHandler
 25929  0099E2  6E11               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
 25930  0099E4  ECE4  F04F         	call	_TMR2_SetInterruptHandler	;wreg free
 25931                           
 25932                           ; BSR set to: 14
 25933                           ;mcc_generated_files/tmr2.c: 108:     T2CON = 0xD9;
 25934  0099E8  0ED9               	movlw	217
 25935  0099EA  6EBD               	movwf	189,c	;volatile
 25936                           
 25937                           ; BSR set to: 14
 25938  0099EC  0012               	return		;funcret
 25939  0099EE                     __end_of_TMR2_Initialize:
 25940                           	callstack 0
 25941                           
 25942 ;; *************** function _TMR2_SetInterruptHandler *****************
 25943 ;; Defined at:
 25944 ;;		line 342 in file "mcc_generated_files/tmr2.c"
 25945 ;; Parameters:    Size  Location     Type
 25946 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 25947 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 25948 ;; Auto vars:     Size  Location     Type
 25949 ;;		None
 25950 ;; Return value:  Size  Location     Type
 25951 ;;                  1    wreg      void 
 25952 ;; Registers used:
 25953 ;;		wreg, status,2, status,0
 25954 ;; Tracked objects:
 25955 ;;		On entry : 3F/E
 25956 ;;		On exit  : 3F/E
 25957 ;;		Unchanged: 3F/0
 25958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25959 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25962 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25963 ;;Total ram usage:        2 bytes
 25964 ;; Hardware stack levels used: 1
 25965 ;; Hardware stack levels required when called: 4
 25966 ;; This function calls:
 25967 ;;		Nothing
 25968 ;; This function is called by:
 25969 ;;		_TMR2_Initialize
 25970 ;; This function uses a non-reentrant model
 25971 ;;
 25972                           
 25973                           	psect	text95
 25974  009FC8                     __ptext95:
 25975                           	callstack 0
 25976  009FC8                     _TMR2_SetInterruptHandler:
 25977                           	callstack 24
 25978                           
 25979                           ; BSR set to: 14
 25980                           ;mcc_generated_files/tmr2.c: 343:     TMR2_InterruptHandler = InterruptHandler;
 25981                           
 25982                           ; BSR set to: 14
 25983                           ;incstack = 0
 25984  009FC8  C010  F2DD         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 25985  009FCC  C011  F2DE         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 25986                           
 25987                           ; BSR set to: 14
 25988  009FD0  0012               	return		;funcret
 25989  009FD2                     __end_of_TMR2_SetInterruptHandler:
 25990                           	callstack 0
 25991                           
 25992 ;; *************** function _TMR1_Initialize *****************
 25993 ;; Defined at:
 25994 ;;		line 66 in file "mcc_generated_files/tmr1.c"
 25995 ;; Parameters:    Size  Location     Type
 25996 ;;		None
 25997 ;; Auto vars:     Size  Location     Type
 25998 ;;		None
 25999 ;; Return value:  Size  Location     Type
 26000 ;;                  1    wreg      void 
 26001 ;; Registers used:
 26002 ;;		wreg, status,2, status,0, cstack
 26003 ;; Tracked objects:
 26004 ;;		On entry : 3F/E
 26005 ;;		On exit  : 3F/E
 26006 ;;		Unchanged: 0/0
 26007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26010 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26011 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26012 ;;Total ram usage:        2 bytes
 26013 ;; Hardware stack levels used: 1
 26014 ;; Hardware stack levels required when called: 5
 26015 ;; This function calls:
 26016 ;;		_TMR1_SetInterruptHandler
 26017 ;; This function is called by:
 26018 ;;		_SYSTEM_Initialize
 26019 ;; This function uses a non-reentrant model
 26020 ;;
 26021                           
 26022                           	psect	text96
 26023  009652                     __ptext96:
 26024                           	callstack 0
 26025  009652                     _TMR1_Initialize:
 26026                           	callstack 24
 26027                           
 26028                           ; BSR set to: 14
 26029                           ;mcc_generated_files/tmr1.c: 71:     T1GCON = 0x00;
 26030                           
 26031                           ; BSR set to: 14
 26032                           ;incstack = 0
 26033  009652  0E00               	movlw	0
 26034  009654  6ED0               	movwf	208,c	;volatile
 26035                           
 26036                           ;mcc_generated_files/tmr1.c: 74:     T1GATE = 0x00;
 26037  009656  0E00               	movlw	0
 26038  009658  6ED1               	movwf	209,c	;volatile
 26039                           
 26040                           ;mcc_generated_files/tmr1.c: 77:     T1CLK = 0x01;
 26041  00965A  0E01               	movlw	1
 26042  00965C  6ED2               	movwf	210,c	;volatile
 26043                           
 26044                           ; BSR set to: 14
 26045                           ;mcc_generated_files/tmr1.c: 80:     TMR1H = 0xFF;
 26046  00965E  68CE               	setf	206,c	;volatile
 26047                           
 26048                           ;mcc_generated_files/tmr1.c: 83:     TMR1L = 0x38;
 26049  009660  0E38               	movlw	56
 26050  009662  6ECD               	movwf	205,c	;volatile
 26051                           
 26052                           ; BSR set to: 14
 26053                           ;mcc_generated_files/tmr1.c: 86:     PIR4bits.TMR1IF = 0;
 26054  009664  91CE               	bcf	206,0,b	;volatile
 26055                           
 26056                           ; BSR set to: 14
 26057                           ;mcc_generated_files/tmr1.c: 89:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 26058  009666  50CD               	movf	205,w,c	;volatile
 26059  009668  CFCE F012          	movff	4046,??_TMR1_Initialize	;volatile
 26060  00966C  6A13               	clrf	(??_TMR1_Initialize+1)^0,c
 26061  00966E  C012  F013         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 26062  009672  6A12               	clrf	??_TMR1_Initialize^0,c
 26063  009674  1012               	iorwf	??_TMR1_Initialize^0,w,c
 26064  009676  0102               	movlb	2	; () banked
 26065  009678  6FE1               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 26066  00967A  5013               	movf	(??_TMR1_Initialize+1)^0,w,c
 26067  00967C  6FE2               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 26068                           
 26069                           ; BSR set to: 2
 26070                           ;mcc_generated_files/tmr1.c: 92:     PIE4bits.TMR1IE = 1;
 26071  00967E  010E               	movlb	14	; () banked
 26072  009680  81C6               	bsf	198,0,b	;volatile
 26073                           
 26074                           ; BSR set to: 14
 26075                           ;mcc_generated_files/tmr1.c: 95:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 26076  009682  0EEC               	movlw	low _TMR1_DefaultInterruptHandler
 26077  009684  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
 26078  009686  0EA0               	movlw	high _TMR1_DefaultInterruptHandler
 26079  009688  6E11               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
 26080  00968A  ECE9  F04F         	call	_TMR1_SetInterruptHandler	;wreg free
 26081                           
 26082                           ; BSR set to: 14
 26083                           ;mcc_generated_files/tmr1.c: 98:     T1CON = 0x31;
 26084  00968E  0E31               	movlw	49
 26085  009690  6ECF               	movwf	207,c	;volatile
 26086                           
 26087                           ; BSR set to: 14
 26088  009692  0012               	return		;funcret
 26089  009694                     __end_of_TMR1_Initialize:
 26090                           	callstack 0
 26091                           
 26092 ;; *************** function _TMR1_SetInterruptHandler *****************
 26093 ;; Defined at:
 26094 ;;		line 192 in file "mcc_generated_files/tmr1.c"
 26095 ;; Parameters:    Size  Location     Type
 26096 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 26097 ;;		 -> TMR1_DefaultInterruptHandler(1), 
 26098 ;; Auto vars:     Size  Location     Type
 26099 ;;		None
 26100 ;; Return value:  Size  Location     Type
 26101 ;;                  1    wreg      void 
 26102 ;; Registers used:
 26103 ;;		wreg, status,2, status,0
 26104 ;; Tracked objects:
 26105 ;;		On entry : 3F/E
 26106 ;;		On exit  : 3F/E
 26107 ;;		Unchanged: 3F/0
 26108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26109 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26112 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26113 ;;Total ram usage:        2 bytes
 26114 ;; Hardware stack levels used: 1
 26115 ;; Hardware stack levels required when called: 4
 26116 ;; This function calls:
 26117 ;;		Nothing
 26118 ;; This function is called by:
 26119 ;;		_TMR1_Initialize
 26120 ;; This function uses a non-reentrant model
 26121 ;;
 26122                           
 26123                           	psect	text97
 26124  009FD2                     __ptext97:
 26125                           	callstack 0
 26126  009FD2                     _TMR1_SetInterruptHandler:
 26127                           	callstack 24
 26128                           
 26129                           ; BSR set to: 14
 26130                           ;mcc_generated_files/tmr1.c: 193:     TMR1_InterruptHandler = InterruptHandler;
 26131                           
 26132                           ; BSR set to: 14
 26133                           ;incstack = 0
 26134  009FD2  C010  F2DF         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 26135  009FD6  C011  F2E0         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 26136                           
 26137                           ; BSR set to: 14
 26138  009FDA  0012               	return		;funcret
 26139  009FDC                     __end_of_TMR1_SetInterruptHandler:
 26140                           	callstack 0
 26141                           
 26142 ;; *************** function _TMR0_Initialize *****************
 26143 ;; Defined at:
 26144 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 26145 ;; Parameters:    Size  Location     Type
 26146 ;;		None
 26147 ;; Auto vars:     Size  Location     Type
 26148 ;;		None
 26149 ;; Return value:  Size  Location     Type
 26150 ;;                  1    wreg      void 
 26151 ;; Registers used:
 26152 ;;		wreg, status,2, status,0, cstack
 26153 ;; Tracked objects:
 26154 ;;		On entry : 3F/E
 26155 ;;		On exit  : 3F/E
 26156 ;;		Unchanged: 0/0
 26157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26162 ;;Total ram usage:        0 bytes
 26163 ;; Hardware stack levels used: 1
 26164 ;; Hardware stack levels required when called: 5
 26165 ;; This function calls:
 26166 ;;		_TMR0_SetInterruptHandler
 26167 ;; This function is called by:
 26168 ;;		_SYSTEM_Initialize
 26169 ;; This function uses a non-reentrant model
 26170 ;;
 26171                           
 26172                           	psect	text98
 26173  009CFA                     __ptext98:
 26174                           	callstack 0
 26175  009CFA                     _TMR0_Initialize:
 26176                           	callstack 24
 26177                           
 26178                           ; BSR set to: 14
 26179                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x41;
 26180                           
 26181                           ; BSR set to: 14
 26182                           ;incstack = 0
 26183  009CFA  0E41               	movlw	65
 26184  009CFC  6ED6               	movwf	214,c	;volatile
 26185                           
 26186                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x84;
 26187  009CFE  0E84               	movlw	132
 26188  009D00  6ED4               	movwf	212,c	;volatile
 26189                           
 26190                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
 26191  009D02  0E00               	movlw	0
 26192  009D04  6ED3               	movwf	211,c	;volatile
 26193                           
 26194                           ; BSR set to: 14
 26195                           ;mcc_generated_files/tmr0.c: 81:     PIR0bits.TMR0IF = 0;
 26196  009D06  9BCA               	bcf	202,5,b	;volatile
 26197                           
 26198                           ; BSR set to: 14
 26199                           ;mcc_generated_files/tmr0.c: 84:     PIE0bits.TMR0IE = 1;
 26200  009D08  8BC2               	bsf	194,5,b	;volatile
 26201                           
 26202                           ; BSR set to: 14
 26203                           ;mcc_generated_files/tmr0.c: 87:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 26204  009D0A  0EEE               	movlw	low _TMR0_DefaultInterruptHandler
 26205  009D0C  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 26206  009D0E  0EA0               	movlw	high _TMR0_DefaultInterruptHandler
 26207  009D10  6E11               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 26208  009D12  ECEE  F04F         	call	_TMR0_SetInterruptHandler	;wreg free
 26209                           
 26210                           ; BSR set to: 14
 26211                           ;mcc_generated_files/tmr0.c: 90:     T0CON0 = 0x87;
 26212  009D16  0E87               	movlw	135
 26213  009D18  6ED5               	movwf	213,c	;volatile
 26214                           
 26215                           ; BSR set to: 14
 26216  009D1A  0012               	return		;funcret
 26217  009D1C                     __end_of_TMR0_Initialize:
 26218                           	callstack 0
 26219                           
 26220 ;; *************** function _TMR0_SetInterruptHandler *****************
 26221 ;; Defined at:
 26222 ;;		line 143 in file "mcc_generated_files/tmr0.c"
 26223 ;; Parameters:    Size  Location     Type
 26224 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 26225 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 26226 ;; Auto vars:     Size  Location     Type
 26227 ;;		None
 26228 ;; Return value:  Size  Location     Type
 26229 ;;                  1    wreg      void 
 26230 ;; Registers used:
 26231 ;;		wreg, status,2, status,0
 26232 ;; Tracked objects:
 26233 ;;		On entry : 3F/E
 26234 ;;		On exit  : 3F/E
 26235 ;;		Unchanged: 3F/0
 26236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26237 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26240 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26241 ;;Total ram usage:        2 bytes
 26242 ;; Hardware stack levels used: 1
 26243 ;; Hardware stack levels required when called: 4
 26244 ;; This function calls:
 26245 ;;		Nothing
 26246 ;; This function is called by:
 26247 ;;		_TMR0_Initialize
 26248 ;; This function uses a non-reentrant model
 26249 ;;
 26250                           
 26251                           	psect	text99
 26252  009FDC                     __ptext99:
 26253                           	callstack 0
 26254  009FDC                     _TMR0_SetInterruptHandler:
 26255                           	callstack 24
 26256                           
 26257                           ; BSR set to: 14
 26258                           ;mcc_generated_files/tmr0.c: 144:     TMR0_InterruptHandler = InterruptHandler;
 26259                           
 26260                           ; BSR set to: 14
 26261                           ;incstack = 0
 26262  009FDC  C010  F2E3         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 26263  009FE0  C011  F2E4         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 26264                           
 26265                           ; BSR set to: 14
 26266  009FE4  0012               	return		;funcret
 26267  009FE6                     __end_of_TMR0_SetInterruptHandler:
 26268                           	callstack 0
 26269                           
 26270 ;; *************** function _PMD_Initialize *****************
 26271 ;; Defined at:
 26272 ;;		line 79 in file "mcc_generated_files/mcc.c"
 26273 ;; Parameters:    Size  Location     Type
 26274 ;;		None
 26275 ;; Auto vars:     Size  Location     Type
 26276 ;;		None
 26277 ;; Return value:  Size  Location     Type
 26278 ;;                  1    wreg      void 
 26279 ;; Registers used:
 26280 ;;		wreg, status,2
 26281 ;; Tracked objects:
 26282 ;;		On entry : 3F/0
 26283 ;;		On exit  : 3F/E
 26284 ;;		Unchanged: 0/0
 26285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26290 ;;Total ram usage:        0 bytes
 26291 ;; Hardware stack levels used: 1
 26292 ;; Hardware stack levels required when called: 4
 26293 ;; This function calls:
 26294 ;;		Nothing
 26295 ;; This function is called by:
 26296 ;;		_SYSTEM_Initialize
 26297 ;; This function uses a non-reentrant model
 26298 ;;
 26299                           
 26300                           	psect	text100
 26301  009D98                     __ptext100:
 26302                           	callstack 0
 26303  009D98                     _PMD_Initialize:
 26304                           	callstack 25
 26305                           
 26306                           ; BSR set to: 0
 26307                           ;mcc_generated_files/mcc.c: 82:     PMD0 = 0x00;
 26308                           
 26309                           ; BSR set to: 14
 26310                           ;incstack = 0
 26311  009D98  0E00               	movlw	0
 26312  009D9A  010E               	movlb	14	; () banked
 26313  009D9C  6FE1               	movwf	225,b	;volatile
 26314                           
 26315                           ;mcc_generated_files/mcc.c: 84:     PMD1 = 0x00;
 26316  009D9E  0E00               	movlw	0
 26317  009DA0  6FE2               	movwf	226,b	;volatile
 26318                           
 26319                           ;mcc_generated_files/mcc.c: 86:     PMD2 = 0x00;
 26320  009DA2  0E00               	movlw	0
 26321  009DA4  6FE3               	movwf	227,b	;volatile
 26322                           
 26323                           ;mcc_generated_files/mcc.c: 88:     PMD3 = 0x00;
 26324  009DA6  0E00               	movlw	0
 26325  009DA8  6FE4               	movwf	228,b	;volatile
 26326                           
 26327                           ;mcc_generated_files/mcc.c: 90:     PMD4 = 0x00;
 26328  009DAA  0E00               	movlw	0
 26329  009DAC  6FE5               	movwf	229,b	;volatile
 26330                           
 26331                           ;mcc_generated_files/mcc.c: 92:     PMD5 = 0x00;
 26332  009DAE  0E00               	movlw	0
 26333  009DB0  6FE6               	movwf	230,b	;volatile
 26334                           
 26335                           ; BSR set to: 14
 26336  009DB2  0012               	return		;funcret
 26337  009DB4                     __end_of_PMD_Initialize:
 26338                           	callstack 0
 26339                           
 26340 ;; *************** function _PIN_MANAGER_Initialize *****************
 26341 ;; Defined at:
 26342 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 26343 ;; Parameters:    Size  Location     Type
 26344 ;;		None
 26345 ;; Auto vars:     Size  Location     Type
 26346 ;;		None
 26347 ;; Return value:  Size  Location     Type
 26348 ;;                  1    wreg      void 
 26349 ;; Registers used:
 26350 ;;		wreg, status,2
 26351 ;; Tracked objects:
 26352 ;;		On entry : 3F/E
 26353 ;;		On exit  : 3F/E
 26354 ;;		Unchanged: 0/0
 26355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26360 ;;Total ram usage:        0 bytes
 26361 ;; Hardware stack levels used: 1
 26362 ;; Hardware stack levels required when called: 4
 26363 ;; This function calls:
 26364 ;;		Nothing
 26365 ;; This function is called by:
 26366 ;;		_SYSTEM_Initialize
 26367 ;; This function uses a non-reentrant model
 26368 ;;
 26369                           
 26370                           	psect	text101
 26371  0081A4                     __ptext101:
 26372                           	callstack 0
 26373  0081A4                     _PIN_MANAGER_Initialize:
 26374                           	callstack 25
 26375                           
 26376                           ; BSR set to: 14
 26377                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 26378                           
 26379                           ; BSR set to: 14
 26380                           ;incstack = 0
 26381  0081A4  0E00               	movlw	0
 26382  0081A6  6E87               	movwf	135,c	;volatile
 26383                           
 26384                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 26385  0081A8  0E00               	movlw	0
 26386  0081AA  6E86               	movwf	134,c	;volatile
 26387                           
 26388                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 26389  0081AC  0E00               	movlw	0
 26390  0081AE  6E83               	movwf	131,c	;volatile
 26391                           
 26392                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 26393  0081B0  0E00               	movlw	0
 26394  0081B2  6E84               	movwf	132,c	;volatile
 26395                           
 26396                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 26397  0081B4  0E00               	movlw	0
 26398  0081B6  6E85               	movwf	133,c	;volatile
 26399                           
 26400                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x00;
 26401  0081B8  0E00               	movlw	0
 26402  0081BA  6E8C               	movwf	140,c	;volatile
 26403                           
 26404                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x7F;
 26405  0081BC  0E7F               	movlw	127
 26406  0081BE  6E88               	movwf	136,c	;volatile
 26407                           
 26408                           ; BSR set to: 14
 26409                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 26410  0081C0  6889               	setf	137,c	;volatile
 26411                           
 26412                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x58;
 26413  0081C2  0E58               	movlw	88
 26414  0081C4  6E8A               	movwf	138,c	;volatile
 26415                           
 26416                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
 26417  0081C6  0E00               	movlw	0
 26418  0081C8  6E8B               	movwf	139,c	;volatile
 26419                           
 26420                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
 26421  0081CA  0E00               	movlw	0
 26422  0081CC  010F               	movlb	15	; () banked
 26423  0081CE  6F26               	movwf	38,b	;volatile
 26424                           
 26425                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
 26426  0081D0  0E00               	movlw	0
 26427  0081D2  6F21               	movwf	33,b	;volatile
 26428                           
 26429                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x00;
 26430  0081D4  0E00               	movlw	0
 26431  0081D6  6F19               	movwf	25,b	;volatile
 26432                           
 26433                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x00;
 26434  0081D8  0E00               	movlw	0
 26435  0081DA  6F2E               	movwf	46,b	;volatile
 26436                           
 26437                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x01;
 26438  0081DC  0E01               	movlw	1
 26439  0081DE  6F11               	movwf	17,b	;volatile
 26440                           
 26441                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 26442  0081E0  0E00               	movlw	0
 26443  0081E2  6F25               	movwf	37,b	;volatile
 26444                           
 26445                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 26446  0081E4  0E00               	movlw	0
 26447  0081E6  6F2D               	movwf	45,b	;volatile
 26448                           
 26449                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0xF7;
 26450  0081E8  0EF7               	movlw	247
 26451  0081EA  6F18               	movwf	24,b	;volatile
 26452                           
 26453                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 26454  0081EC  0E00               	movlw	0
 26455  0081EE  6F10               	movwf	16,b	;volatile
 26456                           
 26457                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 26458  0081F0  0E00               	movlw	0
 26459  0081F2  6F20               	movwf	32,b	;volatile
 26460                           
 26461                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 26462  0081F4  0E00               	movlw	0
 26463  0081F6  6F2C               	movwf	44,b	;volatile
 26464                           
 26465                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 26466  0081F8  0E00               	movlw	0
 26467  0081FA  6F0F               	movwf	15,b	;volatile
 26468                           
 26469                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 26470  0081FC  0E00               	movlw	0
 26471  0081FE  6F17               	movwf	23,b	;volatile
 26472                           
 26473                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 26474  008200  0E00               	movlw	0
 26475  008202  6F1F               	movwf	31,b	;volatile
 26476                           
 26477                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 26478  008204  0E00               	movlw	0
 26479  008206  6F24               	movwf	36,b	;volatile
 26480                           
 26481                           ; BSR set to: 15
 26482                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 26483  008208  690E               	setf	14,b	;volatile
 26484                           
 26485                           ; BSR set to: 15
 26486                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 26487  00820A  6916               	setf	22,b	;volatile
 26488                           
 26489                           ; BSR set to: 15
 26490                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 26491  00820C  691E               	setf	30,b	;volatile
 26492                           
 26493                           ; BSR set to: 15
 26494                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 26495  00820E  6923               	setf	35,b	;volatile
 26496                           
 26497                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 26498  008210  0E07               	movlw	7
 26499  008212  6F2B               	movwf	43,b	;volatile
 26500                           
 26501                           ; BSR set to: 15
 26502                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 26503  008214  690D               	setf	13,b	;volatile
 26504                           
 26505                           ; BSR set to: 15
 26506                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 26507  008216  6915               	setf	21,b	;volatile
 26508                           
 26509                           ; BSR set to: 15
 26510                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 26511  008218  691D               	setf	29,b	;volatile
 26512                           
 26513                           ; BSR set to: 15
 26514                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 26515  00821A  6922               	setf	34,b	;volatile
 26516                           
 26517                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
 26518  00821C  0E0F               	movlw	15
 26519  00821E  6F2A               	movwf	42,b	;volatile
 26520                           
 26521                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
 26522  008220  0E13               	movlw	19
 26523  008222  010E               	movlb	14	; () banked
 26524  008224  6FB7               	movwf	183,b	;volatile
 26525                           
 26526                           ;mcc_generated_files/pin_manager.c: 128:     RX1PPS = 0x16;
 26527  008226  0E16               	movlw	22
 26528  008228  6FB5               	movwf	181,b	;volatile
 26529                           
 26530                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x0F;
 26531  00822A  0E0F               	movlw	15
 26532  00822C  6FFA               	movwf	250,b	;volatile
 26533                           
 26534                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x10;
 26535  00822E  0E10               	movlw	16
 26536  008230  6FFB               	movwf	251,b	;volatile
 26537                           
 26538                           ;mcc_generated_files/pin_manager.c: 131:     RC7PPS = 0x09;
 26539  008232  0E09               	movlw	9
 26540  008234  6FFE               	movwf	254,b	;volatile
 26541                           
 26542                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 26543  008236  0E14               	movlw	20
 26544  008238  6FB8               	movwf	184,b	;volatile
 26545                           
 26546                           ; BSR set to: 14
 26547  00823A  0012               	return		;funcret
 26548  00823C                     __end_of_PIN_MANAGER_Initialize:
 26549                           	callstack 0
 26550                           
 26551 ;; *************** function _OSCILLATOR_Initialize *****************
 26552 ;; Defined at:
 26553 ;;		line 65 in file "mcc_generated_files/mcc.c"
 26554 ;; Parameters:    Size  Location     Type
 26555 ;;		None
 26556 ;; Auto vars:     Size  Location     Type
 26557 ;;		None
 26558 ;; Return value:  Size  Location     Type
 26559 ;;                  1    wreg      void 
 26560 ;; Registers used:
 26561 ;;		wreg, status,2
 26562 ;; Tracked objects:
 26563 ;;		On entry : 3F/E
 26564 ;;		On exit  : 3F/E
 26565 ;;		Unchanged: 0/0
 26566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26571 ;;Total ram usage:        0 bytes
 26572 ;; Hardware stack levels used: 1
 26573 ;; Hardware stack levels required when called: 4
 26574 ;; This function calls:
 26575 ;;		Nothing
 26576 ;; This function is called by:
 26577 ;;		_SYSTEM_Initialize
 26578 ;; This function uses a non-reentrant model
 26579 ;;
 26580                           
 26581                           	psect	text102
 26582  009EE2                     __ptext102:
 26583                           	callstack 0
 26584  009EE2                     _OSCILLATOR_Initialize:
 26585                           	callstack 25
 26586                           
 26587                           ; BSR set to: 14
 26588                           ;mcc_generated_files/mcc.c: 68:     OSCCON1 = 0x60;
 26589                           
 26590                           ; BSR set to: 14
 26591                           ;incstack = 0
 26592  009EE2  0E60               	movlw	96
 26593  009EE4  6FD8               	movwf	216,b	;volatile
 26594                           
 26595                           ;mcc_generated_files/mcc.c: 70:     OSCCON3 = 0x00;
 26596  009EE6  0E00               	movlw	0
 26597  009EE8  6FDA               	movwf	218,b	;volatile
 26598                           
 26599                           ;mcc_generated_files/mcc.c: 72:     OSCEN = 0x00;
 26600  009EEA  0E00               	movlw	0
 26601  009EEC  6FDC               	movwf	220,b	;volatile
 26602                           
 26603                           ;mcc_generated_files/mcc.c: 74:     OSCFRQ = 0x08;
 26604  009EEE  0E08               	movlw	8
 26605  009EF0  6FDE               	movwf	222,b	;volatile
 26606                           
 26607                           ;mcc_generated_files/mcc.c: 76:     OSCTUNE = 0x00;
 26608  009EF2  0E00               	movlw	0
 26609  009EF4  6FDD               	movwf	221,b	;volatile
 26610                           
 26611                           ; BSR set to: 14
 26612  009EF6  0012               	return		;funcret
 26613  009EF8                     __end_of_OSCILLATOR_Initialize:
 26614                           	callstack 0
 26615                           
 26616 ;; *************** function _INTERRUPT_Initialize *****************
 26617 ;; Defined at:
 26618 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 26619 ;; Parameters:    Size  Location     Type
 26620 ;;		None
 26621 ;; Auto vars:     Size  Location     Type
 26622 ;;		None
 26623 ;; Return value:  Size  Location     Type
 26624 ;;                  1    wreg      void 
 26625 ;; Registers used:
 26626 ;;		None
 26627 ;; Tracked objects:
 26628 ;;		On entry : 3F/0
 26629 ;;		On exit  : 3F/0
 26630 ;;		Unchanged: 3F/0
 26631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26636 ;;Total ram usage:        0 bytes
 26637 ;; Hardware stack levels used: 1
 26638 ;; Hardware stack levels required when called: 4
 26639 ;; This function calls:
 26640 ;;		Nothing
 26641 ;; This function is called by:
 26642 ;;		_SYSTEM_Initialize
 26643 ;; This function uses a non-reentrant model
 26644 ;;
 26645                           
 26646                           	psect	text103
 26647  00A0C0                     __ptext103:
 26648                           	callstack 0
 26649  00A0C0                     _INTERRUPT_Initialize:
 26650                           	callstack 25
 26651                           
 26652                           ; BSR set to: 0
 26653                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
 26654                           
 26655                           ; BSR set to: 14
 26656                           ;incstack = 0
 26657  00A0C0  9AF2               	bcf	242,5,c	;volatile
 26658                           
 26659                           ; BSR set to: 0
 26660  00A0C2  0012               	return		;funcret
 26661  00A0C4                     __end_of_INTERRUPT_Initialize:
 26662                           	callstack 0
 26663                           
 26664 ;; *************** function _I2C1_Initialize *****************
 26665 ;; Defined at:
 26666 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 26667 ;; Parameters:    Size  Location     Type
 26668 ;;		None
 26669 ;; Auto vars:     Size  Location     Type
 26670 ;;		None
 26671 ;; Return value:  Size  Location     Type
 26672 ;;                  1    wreg      void 
 26673 ;; Registers used:
 26674 ;;		wreg, status,2
 26675 ;; Tracked objects:
 26676 ;;		On entry : 3F/E
 26677 ;;		On exit  : 3F/E
 26678 ;;		Unchanged: 3F/0
 26679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26684 ;;Total ram usage:        0 bytes
 26685 ;; Hardware stack levels used: 1
 26686 ;; Hardware stack levels required when called: 4
 26687 ;; This function calls:
 26688 ;;		Nothing
 26689 ;; This function is called by:
 26690 ;;		_SYSTEM_Initialize
 26691 ;; This function uses a non-reentrant model
 26692 ;;
 26693                           
 26694                           	psect	text104
 26695  009F36                     __ptext104:
 26696                           	callstack 0
 26697  009F36                     _I2C1_Initialize:
 26698                           	callstack 25
 26699                           
 26700                           ; BSR set to: 14
 26701                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 26702                           
 26703                           ; BSR set to: 0
 26704                           ;incstack = 0
 26705  009F36  0E80               	movlw	128
 26706  009F38  6E95               	movwf	149,c	;volatile
 26707                           
 26708                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 26709  009F3A  0E08               	movlw	8
 26710  009F3C  6E96               	movwf	150,c	;volatile
 26711                           
 26712                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 26713  009F3E  0E00               	movlw	0
 26714  009F40  6E97               	movwf	151,c	;volatile
 26715                           
 26716                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x9F;
 26717  009F42  0E9F               	movlw	159
 26718  009F44  6E93               	movwf	147,c	;volatile
 26719                           
 26720                           ; BSR set to: 14
 26721                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 26722  009F46  9A96               	bcf	150,5,c	;volatile
 26723                           
 26724                           ; BSR set to: 14
 26725  009F48  0012               	return		;funcret
 26726  009F4A                     __end_of_I2C1_Initialize:
 26727                           	callstack 0
 26728                           
 26729 ;; *************** function _EUSART1_Initialize *****************
 26730 ;; Defined at:
 26731 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 26732 ;; Parameters:    Size  Location     Type
 26733 ;;		None
 26734 ;; Auto vars:     Size  Location     Type
 26735 ;;		None
 26736 ;; Return value:  Size  Location     Type
 26737 ;;                  1    wreg      void 
 26738 ;; Registers used:
 26739 ;;		wreg, status,2, status,0, cstack
 26740 ;; Tracked objects:
 26741 ;;		On entry : 3F/E
 26742 ;;		On exit  : 3F/E
 26743 ;;		Unchanged: 0/0
 26744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26749 ;;Total ram usage:        0 bytes
 26750 ;; Hardware stack levels used: 1
 26751 ;; Hardware stack levels required when called: 5
 26752 ;; This function calls:
 26753 ;;		_EUSART1_SetErrorHandler
 26754 ;;		_EUSART1_SetFramingErrorHandler
 26755 ;;		_EUSART1_SetOverrunErrorHandler
 26756 ;;		_EUSART1_SetRxInterruptHandler
 26757 ;;		_EUSART1_SetTxInterruptHandler
 26758 ;; This function is called by:
 26759 ;;		_SYSTEM_Initialize
 26760 ;; This function uses a non-reentrant model
 26761 ;;
 26762                           
 26763                           	psect	text105
 26764  00881C                     __ptext105:
 26765                           	callstack 0
 26766  00881C                     _EUSART1_Initialize:
 26767                           	callstack 24
 26768                           
 26769                           ; BSR set to: 14
 26770                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 26771                           
 26772                           ; BSR set to: 14
 26773                           ;incstack = 0
 26774  00881C  9BC5               	bcf	197,5,b	;volatile
 26775                           
 26776                           ; BSR set to: 14
 26777                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 26778  00881E  0E0A               	movlw	low _EUSART1_Receive_ISR
 26779  008820  6E10               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
 26780  008822  0E81               	movlw	high _EUSART1_Receive_ISR
 26781  008824  6E11               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
 26782  008826  ECF8  F04F         	call	_EUSART1_SetRxInterruptHandler	;wreg free
 26783                           
 26784                           ; BSR set to: 14
 26785                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 26786  00882A  99C5               	bcf	197,4,b	;volatile
 26787                           
 26788                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 26789  00882C  0EDA               	movlw	low _EUSART1_Transmit_ISR
 26790  00882E  6E10               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
 26791  008830  0E98               	movlw	high _EUSART1_Transmit_ISR
 26792  008832  6E11               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
 26793  008834  ECF3  F04F         	call	_EUSART1_SetTxInterruptHandler	;wreg free
 26794                           
 26795                           ; BSR set to: 14
 26796                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 26797  008838  0E08               	movlw	8
 26798  00883A  6E9F               	movwf	159,c	;volatile
 26799                           
 26800                           ; BSR set to: 14
 26801                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 26802  00883C  0E90               	movlw	144
 26803  00883E  6E9D               	movwf	157,c	;volatile
 26804                           
 26805                           ; BSR set to: 14
 26806                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 26807  008840  0E24               	movlw	36
 26808  008842  6E9E               	movwf	158,c	;volatile
 26809                           
 26810                           ; BSR set to: 14
 26811                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x82;
 26812  008844  0E82               	movlw	130
 26813  008846  6E9B               	movwf	155,c	;volatile
 26814                           
 26815                           ; BSR set to: 14
 26816                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x06;
 26817  008848  0E06               	movlw	6
 26818  00884A  6E9C               	movwf	156,c	;volatile
 26819                           
 26820                           ; BSR set to: 14
 26821                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 26822  00884C  0EF0               	movlw	low _EUSART1_DefaultFramingErrorHandler
 26823  00884E  6E10               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
 26824  008850  0EA0               	movlw	high _EUSART1_DefaultFramingErrorHandler
 26825  008852  6E11               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 26826  008854  EC02  F050         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 26827                           
 26828                           ; BSR set to: 14
 26829                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 26830  008858  0EB0               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 26831  00885A  6E10               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
 26832  00885C  0EA0               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 26833  00885E  6E11               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 26834  008860  ECFD  F04F         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 26835                           
 26836                           ; BSR set to: 14
 26837                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 26838  008864  0EB6               	movlw	low _EUSART1_DefaultErrorHandler
 26839  008866  6E10               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
 26840  008868  0EA0               	movlw	high _EUSART1_DefaultErrorHandler
 26841  00886A  6E11               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
 26842  00886C  EC07  F050         	call	_EUSART1_SetErrorHandler	;wreg free
 26843                           
 26844                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 26845  008870  0E00               	movlw	0
 26846  008872  0101               	movlb	1	; () banked
 26847  008874  6F9D               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 26848                           
 26849                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 26850  008876  0E00               	movlw	0
 26851  008878  0100               	movlb	0	; () banked
 26852  00887A  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 26853                           
 26854                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 26855  00887C  0E00               	movlw	0
 26856  00887E  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 26857                           
 26858                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 26859  008880  0E08               	movlw	8
 26860  008882  0101               	movlb	1	; () banked
 26861  008884  6FFD               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
 26862                           
 26863                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 26864  008886  0E00               	movlw	0
 26865  008888  0100               	movlb	0	; () banked
 26866  00888A  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 26867                           
 26868                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 26869  00888C  0E00               	movlw	0
 26870  00888E  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 26871                           
 26872                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 26873  008890  0E00               	movlw	0
 26874  008892  6F93               	movwf	_eusart1RxCount& (0+255),b	;volatile
 26875                           
 26876                           ; BSR set to: 0
 26877                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 26878  008894  010E               	movlb	14	; () banked
 26879  008896  8BC5               	bsf	197,5,b	;volatile
 26880                           
 26881                           ; BSR set to: 14
 26882  008898  0012               	return		;funcret
 26883  00889A                     __end_of_EUSART1_Initialize:
 26884                           	callstack 0
 26885                           
 26886 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 26887 ;; Defined at:
 26888 ;;		line 276 in file "mcc_generated_files/eusart1.c"
 26889 ;; Parameters:    Size  Location     Type
 26890 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26891 ;;		 -> EUSART1_Transmit_ISR(1), 
 26892 ;; Auto vars:     Size  Location     Type
 26893 ;;		None
 26894 ;; Return value:  Size  Location     Type
 26895 ;;                  1    wreg      void 
 26896 ;; Registers used:
 26897 ;;		wreg, status,2, status,0
 26898 ;; Tracked objects:
 26899 ;;		On entry : 3F/E
 26900 ;;		On exit  : 3F/E
 26901 ;;		Unchanged: 3F/0
 26902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26903 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26906 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26907 ;;Total ram usage:        2 bytes
 26908 ;; Hardware stack levels used: 1
 26909 ;; Hardware stack levels required when called: 4
 26910 ;; This function calls:
 26911 ;;		Nothing
 26912 ;; This function is called by:
 26913 ;;		_EUSART1_Initialize
 26914 ;; This function uses a non-reentrant model
 26915 ;;
 26916                           
 26917                           	psect	text106
 26918  009FE6                     __ptext106:
 26919                           	callstack 0
 26920  009FE6                     _EUSART1_SetTxInterruptHandler:
 26921                           	callstack 24
 26922                           
 26923                           ; BSR set to: 14
 26924                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 26925                           
 26926                           ; BSR set to: 14
 26927                           ;incstack = 0
 26928  009FE6  C010  F2ED         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
 26929  009FEA  C011  F2EE         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
 26930                           
 26931                           ; BSR set to: 14
 26932  009FEE  0012               	return		;funcret
 26933  009FF0                     __end_of_EUSART1_SetTxInterruptHandler:
 26934                           	callstack 0
 26935                           
 26936 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 26937 ;; Defined at:
 26938 ;;		line 280 in file "mcc_generated_files/eusart1.c"
 26939 ;; Parameters:    Size  Location     Type
 26940 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26941 ;;		 -> EUSART1_Receive_ISR(1), 
 26942 ;; Auto vars:     Size  Location     Type
 26943 ;;		None
 26944 ;; Return value:  Size  Location     Type
 26945 ;;                  1    wreg      void 
 26946 ;; Registers used:
 26947 ;;		wreg, status,2, status,0
 26948 ;; Tracked objects:
 26949 ;;		On entry : 3F/E
 26950 ;;		On exit  : 3F/E
 26951 ;;		Unchanged: 3F/0
 26952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26953 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26956 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26957 ;;Total ram usage:        2 bytes
 26958 ;; Hardware stack levels used: 1
 26959 ;; Hardware stack levels required when called: 4
 26960 ;; This function calls:
 26961 ;;		Nothing
 26962 ;; This function is called by:
 26963 ;;		_EUSART1_Initialize
 26964 ;; This function uses a non-reentrant model
 26965 ;;
 26966                           
 26967                           	psect	text107
 26968  009FF0                     __ptext107:
 26969                           	callstack 0
 26970  009FF0                     _EUSART1_SetRxInterruptHandler:
 26971                           	callstack 24
 26972                           
 26973                           ; BSR set to: 14
 26974                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 26975                           
 26976                           ; BSR set to: 14
 26977                           ;incstack = 0
 26978  009FF0  C010  F2EB         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
 26979  009FF4  C011  F2EC         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
 26980                           
 26981                           ; BSR set to: 14
 26982  009FF8  0012               	return		;funcret
 26983  009FFA                     __end_of_EUSART1_SetRxInterruptHandler:
 26984                           	callstack 0
 26985                           
 26986 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 26987 ;; Defined at:
 26988 ;;		line 268 in file "mcc_generated_files/eusart1.c"
 26989 ;; Parameters:    Size  Location     Type
 26990 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26991 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 26992 ;; Auto vars:     Size  Location     Type
 26993 ;;		None
 26994 ;; Return value:  Size  Location     Type
 26995 ;;                  1    wreg      void 
 26996 ;; Registers used:
 26997 ;;		wreg, status,2, status,0
 26998 ;; Tracked objects:
 26999 ;;		On entry : 3F/E
 27000 ;;		On exit  : 3F/E
 27001 ;;		Unchanged: 3F/0
 27002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27003 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27006 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27007 ;;Total ram usage:        2 bytes
 27008 ;; Hardware stack levels used: 1
 27009 ;; Hardware stack levels required when called: 4
 27010 ;; This function calls:
 27011 ;;		Nothing
 27012 ;; This function is called by:
 27013 ;;		_EUSART1_Initialize
 27014 ;; This function uses a non-reentrant model
 27015 ;;
 27016                           
 27017                           	psect	text108
 27018  009FFA                     __ptext108:
 27019                           	callstack 0
 27020  009FFA                     _EUSART1_SetOverrunErrorHandler:
 27021                           	callstack 24
 27022                           
 27023                           ; BSR set to: 14
 27024                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
 27025                           
 27026                           ; BSR set to: 14
 27027                           ;incstack = 0
 27028  009FFA  C010  F2E7         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 27029  009FFE  C011  F2E8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 27030                           
 27031                           ; BSR set to: 14
 27032  00A002  0012               	return		;funcret
 27033  00A004                     __end_of_EUSART1_SetOverrunErrorHandler:
 27034                           	callstack 0
 27035                           
 27036 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 27037 ;; Defined at:
 27038 ;;		line 264 in file "mcc_generated_files/eusart1.c"
 27039 ;; Parameters:    Size  Location     Type
 27040 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 27041 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 27042 ;; Auto vars:     Size  Location     Type
 27043 ;;		None
 27044 ;; Return value:  Size  Location     Type
 27045 ;;                  1    wreg      void 
 27046 ;; Registers used:
 27047 ;;		wreg, status,2, status,0
 27048 ;; Tracked objects:
 27049 ;;		On entry : 3F/E
 27050 ;;		On exit  : 3F/E
 27051 ;;		Unchanged: 3F/0
 27052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27056 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27057 ;;Total ram usage:        2 bytes
 27058 ;; Hardware stack levels used: 1
 27059 ;; Hardware stack levels required when called: 4
 27060 ;; This function calls:
 27061 ;;		Nothing
 27062 ;; This function is called by:
 27063 ;;		_EUSART1_Initialize
 27064 ;; This function uses a non-reentrant model
 27065 ;;
 27066                           
 27067                           	psect	text109
 27068  00A004                     __ptext109:
 27069                           	callstack 0
 27070  00A004                     _EUSART1_SetFramingErrorHandler:
 27071                           	callstack 24
 27072                           
 27073                           ; BSR set to: 14
 27074                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
 27075                           
 27076                           ; BSR set to: 14
 27077                           ;incstack = 0
 27078  00A004  C010  F2E9         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 27079  00A008  C011  F2EA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 27080                           
 27081                           ; BSR set to: 14
 27082  00A00C  0012               	return		;funcret
 27083  00A00E                     __end_of_EUSART1_SetFramingErrorHandler:
 27084                           	callstack 0
 27085                           
 27086 ;; *************** function _EUSART1_SetErrorHandler *****************
 27087 ;; Defined at:
 27088 ;;		line 272 in file "mcc_generated_files/eusart1.c"
 27089 ;; Parameters:    Size  Location     Type
 27090 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 27091 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 27092 ;; Auto vars:     Size  Location     Type
 27093 ;;		None
 27094 ;; Return value:  Size  Location     Type
 27095 ;;                  1    wreg      void 
 27096 ;; Registers used:
 27097 ;;		wreg, status,2, status,0
 27098 ;; Tracked objects:
 27099 ;;		On entry : 3F/E
 27100 ;;		On exit  : 3F/E
 27101 ;;		Unchanged: 3F/0
 27102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27103 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27106 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27107 ;;Total ram usage:        2 bytes
 27108 ;; Hardware stack levels used: 1
 27109 ;; Hardware stack levels required when called: 4
 27110 ;; This function calls:
 27111 ;;		Nothing
 27112 ;; This function is called by:
 27113 ;;		_EUSART1_Initialize
 27114 ;; This function uses a non-reentrant model
 27115 ;;
 27116                           
 27117                           	psect	text110
 27118  00A00E                     __ptext110:
 27119                           	callstack 0
 27120  00A00E                     _EUSART1_SetErrorHandler:
 27121                           	callstack 24
 27122                           
 27123                           ; BSR set to: 14
 27124                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
 27125                           
 27126                           ; BSR set to: 14
 27127                           ;incstack = 0
 27128  00A00E  C010  F2E5         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 27129  00A012  C011  F2E6         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 27130                           
 27131                           ; BSR set to: 14
 27132  00A016  0012               	return		;funcret
 27133  00A018                     __end_of_EUSART1_SetErrorHandler:
 27134                           	callstack 0
 27135                           
 27136 ;; *************** function _ADCC_Initialize *****************
 27137 ;; Defined at:
 27138 ;;		line 62 in file "mcc_generated_files/adcc.c"
 27139 ;; Parameters:    Size  Location     Type
 27140 ;;		None
 27141 ;; Auto vars:     Size  Location     Type
 27142 ;;		None
 27143 ;; Return value:  Size  Location     Type
 27144 ;;                  1    wreg      void 
 27145 ;; Registers used:
 27146 ;;		wreg, status,2
 27147 ;; Tracked objects:
 27148 ;;		On entry : 3F/E
 27149 ;;		On exit  : 3F/F
 27150 ;;		Unchanged: 0/0
 27151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27156 ;;Total ram usage:        0 bytes
 27157 ;; Hardware stack levels used: 1
 27158 ;; Hardware stack levels required when called: 4
 27159 ;; This function calls:
 27160 ;;		Nothing
 27161 ;; This function is called by:
 27162 ;;		_SYSTEM_Initialize
 27163 ;; This function uses a non-reentrant model
 27164 ;;
 27165                           
 27166                           	psect	text111
 27167  009406                     __ptext111:
 27168                           	callstack 0
 27169  009406                     _ADCC_Initialize:
 27170                           	callstack 25
 27171                           
 27172                           ; BSR set to: 14
 27173                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 27174                           
 27175                           ; BSR set to: 14
 27176                           ;incstack = 0
 27177  009406  0E00               	movlw	0
 27178  009408  6E6A               	movwf	106,c	;volatile
 27179                           
 27180                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 27181  00940A  0E00               	movlw	0
 27182  00940C  6E6B               	movwf	107,c	;volatile
 27183                           
 27184                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 27185  00940E  0E00               	movlw	0
 27186  009410  6E6C               	movwf	108,c	;volatile
 27187                           
 27188                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 27189  009412  0E00               	movlw	0
 27190  009414  6E6D               	movwf	109,c	;volatile
 27191                           
 27192                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 27193  009416  0E00               	movlw	0
 27194  009418  6E68               	movwf	104,c	;volatile
 27195                           
 27196                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 27197  00941A  0E00               	movlw	0
 27198  00941C  6E69               	movwf	105,c	;volatile
 27199                           
 27200                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
 27201  00941E  0E00               	movlw	0
 27202  009420  6E66               	movwf	102,c	;volatile
 27203                           
 27204                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
 27205  009422  0E00               	movlw	0
 27206  009424  010F               	movlb	15	; () banked
 27207  009426  6F5F               	movwf	95,b	;volatile
 27208                           
 27209                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
 27210  009428  0E00               	movlw	0
 27211  00942A  6F5D               	movwf	93,b	;volatile
 27212                           
 27213                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
 27214  00942C  0E00               	movlw	0
 27215  00942E  6F5E               	movwf	94,b	;volatile
 27216                           
 27217                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
 27218  009430  0E00               	movlw	0
 27219  009432  6F59               	movwf	89,b	;volatile
 27220                           
 27221                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
 27222  009434  0E00               	movlw	0
 27223  009436  6F5A               	movwf	90,b	;volatile
 27224                           
 27225                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
 27226  009438  0E00               	movlw	0
 27227  00943A  6F5B               	movwf	91,b	;volatile
 27228                           
 27229                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
 27230  00943C  0E00               	movlw	0
 27231  00943E  6E65               	movwf	101,c	;volatile
 27232                           
 27233                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
 27234  009440  0E00               	movlw	0
 27235  009442  6F58               	movwf	88,b	;volatile
 27236                           
 27237                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
 27238  009444  0E00               	movlw	0
 27239  009446  6F56               	movwf	86,b	;volatile
 27240                           
 27241                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x3F;
 27242  009448  0E3F               	movlw	63
 27243  00944A  6F57               	movwf	87,b	;volatile
 27244                           
 27245                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x80;
 27246  00944C  0E80               	movlw	128
 27247  00944E  6E60               	movwf	96,c	;volatile
 27248                           
 27249                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x00;
 27250  009450  0E00               	movlw	0
 27251  009452  6F5C               	movwf	92,b	;volatile
 27252                           
 27253                           ; BSR set to: 15
 27254  009454  0012               	return		;funcret
 27255  009456                     __end_of_ADCC_Initialize:
 27256                           	callstack 0
 27257                           
 27258 ;; *************** function _EUSART1_is_rx_ready *****************
 27259 ;; Defined at:
 27260 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 27261 ;; Parameters:    Size  Location     Type
 27262 ;;		None
 27263 ;; Auto vars:     Size  Location     Type
 27264 ;;		None
 27265 ;; Return value:  Size  Location     Type
 27266 ;;                  1    wreg      _Bool 
 27267 ;; Registers used:
 27268 ;;		wreg, status,2
 27269 ;; Tracked objects:
 27270 ;;		On entry : 0/1
 27271 ;;		On exit  : 3F/0
 27272 ;;		Unchanged: 0/0
 27273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27278 ;;Total ram usage:        0 bytes
 27279 ;; Hardware stack levels used: 1
 27280 ;; Hardware stack levels required when called: 4
 27281 ;; This function calls:
 27282 ;;		Nothing
 27283 ;; This function is called by:
 27284 ;;		_main
 27285 ;; This function uses a non-reentrant model
 27286 ;;
 27287                           
 27288                           	psect	text112
 27289  009F5C                     __ptext112:
 27290                           	callstack 0
 27291  009F5C                     _EUSART1_is_rx_ready:
 27292                           	callstack 26
 27293                           
 27294                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 27295                           
 27296                           ; BSR set to: 15
 27297                           ;incstack = 0
 27298  009F5C  0100               	movlb	0	; () banked
 27299  009F5E  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 27300  009F60  B4D8               	btfsc	status,2,c
 27301  009F62  D002               	goto	u29770
 27302  009F64  0E01               	movlw	1
 27303  009F66  0012               	return	
 27304  009F68                     u29770:
 27305  009F68  0E00               	movlw	0
 27306                           
 27307                           ; BSR set to: 0
 27308  009F6A  0012               	return		;funcret
 27309  009F6C                     __end_of_EUSART1_is_rx_ready:
 27310                           	callstack 0
 27311                           
 27312 ;; *************** function _ControlMotor *****************
 27313 ;; Defined at:
 27314 ;;		line 703 in file "outputs_MC50.c"
 27315 ;; Parameters:    Size  Location     Type
 27316 ;;		None
 27317 ;; Auto vars:     Size  Location     Type
 27318 ;;  stateMotor      1   23[COMRAM] enum E10381
 27319 ;; Return value:  Size  Location     Type
 27320 ;;                  1    wreg      void 
 27321 ;; Registers used:
 27322 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 27323 ;; Tracked objects:
 27324 ;;		On entry : 3E/1
 27325 ;;		On exit  : 3E/0
 27326 ;;		Unchanged: 0/0
 27327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27329 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27330 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27331 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27332 ;;Total ram usage:        7 bytes
 27333 ;; Hardware stack levels used: 1
 27334 ;; Hardware stack levels required when called: 5
 27335 ;; This function calls:
 27336 ;;		_VerifyElectricalBrake
 27337 ;; This function is called by:
 27338 ;;		_main
 27339 ;; This function uses a non-reentrant model
 27340 ;;
 27341                           
 27342                           	psect	text113
 27343  0054E6                     __ptext113:
 27344                           	callstack 0
 27345  0054E6                     _ControlMotor:
 27346                           	callstack 25
 27347                           
 27348                           ;outputs_MC50.c: 707:     if((var_sys.TimeMaxMotorIsON<=0) && (var_sys.WorkTimeMaxAlarmS
      +                          tate!=Clear) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost==NO)){
 27349                           
 27350                           ; BSR set to: 0
 27351                           ;incstack = 0
 27352  0054E6  0101               	movlb	1	; () banked
 27353  0054E8  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 27354  0054EA  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 27355  0054EC  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 27356  0054EE  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 27357  0054F0  A4D8               	btfss	status,2,c
 27358  0054F2  D00D               	goto	l25586
 27359                           
 27360                           ; BSR set to: 1
 27361  0054F4  5142               	movf	(_var_sys+66)& (0+255),w,b	;volatile
 27362  0054F6  B4D8               	btfsc	status,2,c
 27363  0054F8  D00A               	goto	l25586
 27364                           
 27365                           ; BSR set to: 1
 27366  0054FA  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 27367  0054FC  A4D8               	btfss	status,2,c
 27368  0054FE  D007               	goto	l25586
 27369                           
 27370                           ; BSR set to: 1
 27371  005500  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 27372  005502  A4D8               	btfss	status,2,c
 27373  005504  D004               	goto	l25586
 27374                           
 27375                           ; BSR set to: 1
 27376                           ;outputs_MC50.c: 708:         var_sys.StateMotor = Stopped;
 27377  005506  0E00               	movlw	0
 27378  005508  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27379                           
 27380                           ;outputs_MC50.c: 709:         var_sys.WorkTimeMaxAlarmState=EmAlarme;
 27381  00550A  0E02               	movlw	2
 27382  00550C  D007               	goto	L102
 27383  00550E                     l25586:
 27384                           
 27385                           ; BSR set to: 1
 27386  00550E  0542               	decf	(_var_sys+66)& (0+255),w,b	;volatile
 27387  005510  A4D8               	btfss	status,2,c
 27388  005512  D005               	goto	l25592
 27389                           
 27390                           ; BSR set to: 1
 27391  005514  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27392  005516  A4D8               	btfss	status,2,c
 27393  005518  D002               	goto	l25592
 27394                           
 27395                           ; BSR set to: 1
 27396                           ;outputs_MC50.c: 716:     {;outputs_MC50.c: 717:          var_sys.WorkTimeMaxAlarmState=
      +                          Clear;
 27397  00551A  0E00               	movlw	0
 27398  00551C                     L102:
 27399  00551C  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
 27400  00551E                     l25592:
 27401                           
 27402                           ; BSR set to: 1
 27403                           ;outputs_MC50.c: 721:     stateMotor_enum stateMotor=VerifyElectricalBrake(var_sys.State
      +                          Motor);
 27404  00551E  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27405  005520  ECC8  F044         	call	_VerifyElectricalBrake
 27406  005524  6E18               	movwf	ControlMotor@stateMotor^0,c
 27407                           
 27408                           ;outputs_MC50.c: 722:     if(stateMotor == Stopped )
 27409  005526  5018               	movf	ControlMotor@stateMotor^0,w,c
 27410  005528  A4D8               	btfss	status,2,c
 27411  00552A  D00A               	goto	l25602
 27412                           
 27413                           ;outputs_MC50.c: 723:     {;outputs_MC50.c: 724:         var_sys.InStoping = YES;
 27414  00552C  0E01               	movlw	1
 27415  00552E  0101               	movlb	1	; () banked
 27416  005530  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 27417                           
 27418                           ; BSR set to: 1
 27419                           ;outputs_MC50.c: 725:         if(ts_system.ts_TRIACWait>=0)
 27420  005532  BFA5               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 27421  005534  0012               	return	
 27422                           
 27423                           ; BSR set to: 1
 27424                           
 27425                           ;outputs_MC50.c: 726:         {;outputs_MC50.c: 727:             do { LATEbits.LATE1 = 0
      +                          ; } while(0);
 27426  005536  9287               	bcf	135,1,c	;volatile
 27427                           
 27428                           ; BSR set to: 1
 27429                           
 27430                           ;outputs_MC50.c: 728:             do { LATEbits.LATE0 = 0; } while(0);
 27431  005538  9087               	bcf	135,0,c	;volatile
 27432  00553A                     l25600:
 27433                           
 27434                           ; BSR set to: 1
 27435                           ;outputs_MC50.c: 729:             var_sys.Activatecounter = stoped ;
 27436  00553A  0E00               	movlw	0
 27437  00553C  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 27438  00553E  0012               	return	
 27439  005540                     l25602:
 27440  005540  0100               	movlb	0	; () banked
 27441  005542  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 27442  005544  A4D8               	btfss	status,2,c
 27443  005546  D022               	goto	l25618
 27444                           
 27445                           ; BSR set to: 0
 27446  005548  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 27447  00554A  A4D8               	btfss	status,2,c
 27448  00554C  D01F               	goto	l25618
 27449                           
 27450                           ; BSR set to: 0
 27451  00554E  0101               	movlb	1	; () banked
 27452  005550  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27453  005552  A4D8               	btfss	status,2,c
 27454  005554  D01B               	goto	l25618
 27455                           
 27456                           ; BSR set to: 1
 27457  005556  5018               	movf	ControlMotor@stateMotor^0,w,c
 27458  005558  A4D8               	btfss	status,2,c
 27459                           
 27460                           ; BSR set to: 1
 27461  00555A  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 27462  00555C  D017               	goto	l25618
 27463  00555E  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 27464  005560  E103               	bnz	u31650
 27465  005562  05C6               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 27466  005564  A0D8               	btfss	status,0,c
 27467  005566  D012               	goto	l25618
 27468  005568                     u31650:
 27469                           
 27470                           ; BSR set to: 1
 27471  005568  BFDF               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 27472  00556A  D005               	goto	u31660
 27473  00556C  51DF               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 27474  00556E  E10E               	bnz	l25618
 27475  005570  05DE               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 27476  005572  B0D8               	btfsc	status,0,c
 27477  005574  D00B               	goto	l25618
 27478  005576                     u31660:
 27479                           
 27480                           ; BSR set to: 1
 27481                           ;outputs_MC50.c: 739:     {;outputs_MC50.c: 742:         if ( ts_system.TimeElectricBrak
      +                          e<(((5+6)*( 100/50))-(2*( 100/50))) )
 27482  005576  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 27483  005578  D006               	goto	u31670
 27484  00557A  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 27485  00557C  E103               	bnz	u31671
 27486  00557E  0E12               	movlw	18
 27487  005580  5DC6               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 27488  005582  B0D8               	btfsc	status,0,c
 27489  005584                     u31671:
 27490  005584  0012               	return	
 27491  005586                     u31670:
 27492                           
 27493                           ; BSR set to: 1
 27494                           
 27495                           ;outputs_MC50.c: 743:         {;outputs_MC50.c: 748:             do { LATEbits.LATE1 = 1
      +                          ; } while(0);
 27496  005586  8287               	bsf	135,1,c	;volatile
 27497                           
 27498                           ; BSR set to: 1
 27499                           
 27500                           ;outputs_MC50.c: 749:             do { LATEbits.LATE0 = 1; } while(0);
 27501  005588  8087               	bsf	135,0,c	;volatile
 27502  00558A  D7D7               	goto	l25600
 27503  00558C                     l25618:
 27504  00558C  0418               	decf	ControlMotor@stateMotor^0,w,c
 27505  00558E  B4D8               	btfsc	status,2,c
 27506  005590  D004               	goto	u31690
 27507  005592  0E02               	movlw	2
 27508  005594  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 27509  005596  A4D8               	btfss	status,2,c
 27510  005598  D063               	goto	l25648
 27511  00559A                     u31690:
 27512  00559A  0101               	movlb	1	; () banked
 27513  00559C  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 27514  00559E  A4D8               	btfss	status,2,c
 27515  0055A0  D05F               	goto	l25648
 27516                           
 27517                           ; BSR set to: 1
 27518                           ;outputs_MC50.c: 761:     {;outputs_MC50.c: 762:         if((PORTEbits.RE1==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 1))
 27519  0055A2  B291               	btfsc	145,1,c	;volatile
 27520  0055A4  D004               	goto	u31720
 27521                           
 27522                           ; BSR set to: 1
 27523  0055A6  0100               	movlb	0	; () banked
 27524  0055A8  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27525  0055AA  B4D8               	btfsc	status,2,c
 27526  0055AC  D006               	goto	u31740
 27527  0055AE                     u31720:
 27528  0055AE  B091               	btfsc	145,0,c	;volatile
 27529  0055B0  D04F               	goto	l2353
 27530  0055B2  0100               	movlb	0	; () banked
 27531  0055B4  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27532  0055B6  A4D8               	btfss	status,2,c
 27533  0055B8  D04B               	goto	l2353
 27534  0055BA                     u31740:
 27535                           
 27536                           ; BSR set to: 0
 27537                           ;outputs_MC50.c: 763:         {;outputs_MC50.c: 764:             if((PORTEbits.RE0==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 27538  0055BA  B091               	btfsc	145,0,c	;volatile
 27539  0055BC  D003               	goto	u31760
 27540                           
 27541                           ; BSR set to: 0
 27542  0055BE  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27543  0055C0  B4D8               	btfsc	status,2,c
 27544  0055C2  D005               	goto	u31780
 27545  0055C4                     u31760:
 27546                           
 27547                           ; BSR set to: 0
 27548  0055C4  B291               	btfsc	145,1,c	;volatile
 27549  0055C6  D03A               	goto	l25644
 27550                           
 27551                           ; BSR set to: 0
 27552  0055C8  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27553  0055CA  A4D8               	btfss	status,2,c
 27554  0055CC  D037               	goto	l25644
 27555  0055CE                     u31780:
 27556                           
 27557                           ; BSR set to: 0
 27558                           ;outputs_MC50.c: 765:             {;outputs_MC50.c: 766:                 var_sys.InStopi
      +                          ng = NO;
 27559  0055CE  0E00               	movlw	0
 27560  0055D0  0101               	movlb	1	; () banked
 27561  0055D2  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 27562                           
 27563                           ;outputs_MC50.c: 767:                 ts_system.ts_TRIACWait=200;
 27564  0055D4  0E00               	movlw	0
 27565  0055D6  6FA5               	movwf	(_ts_system+7)& (0+255),b	;volatile
 27566  0055D8  0EC8               	movlw	200
 27567  0055DA  6FA4               	movwf	(_ts_system+6)& (0+255),b	;volatile
 27568                           
 27569                           ;outputs_MC50.c: 768:                 ts_system.TimeChargeCondesador=(1000/50);
 27570  0055DC  0E00               	movlw	0
 27571  0055DE  6FB9               	movwf	(_ts_system+27)& (0+255),b	;volatile
 27572  0055E0  0E14               	movlw	20
 27573  0055E2  6FB8               	movwf	(_ts_system+26)& (0+255),b	;volatile
 27574                           
 27575                           ; BSR set to: 1
 27576                           ;outputs_MC50.c: 769:                 if (var_sys.FimCurso_CloseIsEnabled == YES|| var_s
      +                          ys.Statedoorcontrol == st_Closed ){
 27577  0055E4  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 27578  0055E6  B4D8               	btfsc	status,2,c
 27579  0055E8  D003               	goto	u31800
 27580                           
 27581                           ; BSR set to: 1
 27582  0055EA  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 27583  0055EC  A4D8               	btfss	status,2,c
 27584  0055EE  D024               	goto	l25642
 27585  0055F0                     u31800:
 27586                           
 27587                           ; BSR set to: 1
 27588                           ;outputs_MC50.c: 770:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+((unsigned int)var_sys_NVM.decelarationOpen)*( 500/50))+var_sys_N
      +                          VM.learningTimeToOpen + (1000/50)*4;
 27589  0055F0  0100               	movlb	0	; () banked
 27590  0055F2  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 27591  0055F4  0D0A               	mullw	10
 27592  0055F6  CFF3 F012          	movff	prodl,??_ControlMotor
 27593  0055FA  CFF4 F013          	movff	prodh,??_ControlMotor+1
 27594  0055FE  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 27595  005600  2612               	addwf	??_ControlMotor^0,f,c
 27596  005602  0E00               	movlw	0
 27597  005604  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 27598  005606  5012               	movf	??_ControlMotor^0,w,c
 27599  005608  25CC               	addwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 27600  00560A  6E14               	movwf	(??_ControlMotor+2)^0,c
 27601  00560C  5013               	movf	(??_ControlMotor+1)^0,w,c
 27602  00560E  21CD               	addwfc	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 27603  005610  6E15               	movwf	(??_ControlMotor+3)^0,c
 27604  005612  0E00               	movlw	0
 27605  005614  21CE               	addwfc	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 27606  005616  6E16               	movwf	(??_ControlMotor+4)^0,c
 27607  005618  0E00               	movlw	0
 27608  00561A  21CF               	addwfc	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 27609  00561C  6E17               	movwf	(??_ControlMotor+5)^0,c
 27610  00561E  0E50               	movlw	80
 27611  005620  2414               	addwf	(??_ControlMotor+2)^0,w,c
 27612  005622  0101               	movlb	1	; () banked
 27613  005624  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 27614  005626  0E00               	movlw	0
 27615  005628  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 27616  00562A  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 27617  00562C  0E00               	movlw	0
 27618  00562E  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 27619  005630  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 27620  005632  0E00               	movlw	0
 27621  005634  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 27622  005636  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 27623  005638                     l25642:
 27624                           
 27625                           ; BSR set to: 1
 27626                           ;outputs_MC50.c: 775:                 var_sys.Statedoorcontrol = st_Opening;
 27627  005638  0E02               	movlw	2
 27628  00563A  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 27629  00563C                     l25644:
 27630                           
 27631                           ;outputs_MC50.c: 779:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE0 = 1; } while(0);}
 27632  00563C  0100               	movlb	0	; () banked
 27633  00563E  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27634  005640  A4D8               	btfss	status,2,c
 27635  005642  D002               	goto	l2370
 27636                           
 27637                           ; BSR set to: 0
 27638  005644  8087               	bsf	135,0,c	;volatile
 27639  005646  D001               	goto	l25646
 27640  005648                     l2370:
 27641                           
 27642                           ; BSR set to: 0
 27643  005648  8287               	bsf	135,1,c	;volatile
 27644  00564A                     l25646:
 27645                           
 27646                           ; BSR set to: 0
 27647                           ;outputs_MC50.c: 781:             var_sys.Activatecounter = open ;
 27648  00564A  0E01               	movlw	1
 27649  00564C  0101               	movlb	1	; () banked
 27650  00564E  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 27651  005650                     l2353:
 27652                           
 27653                           ;outputs_MC50.c: 785:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E1 = 0; } while(0);}
 27654  005650  0100               	movlb	0	; () banked
 27655  005652  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27656  005654  A4D8               	btfss	status,2,c
 27657  005656  D002               	goto	l2376
 27658                           
 27659                           ; BSR set to: 0
 27660  005658  9287               	bcf	135,1,c	;volatile
 27661  00565A  0012               	return	
 27662  00565C                     l2376:
 27663                           
 27664                           ; BSR set to: 0
 27665  00565C  9087               	bcf	135,0,c	;volatile
 27666  00565E  0012               	return	
 27667  005660                     l25648:
 27668  005660  0E03               	movlw	3
 27669  005662  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 27670  005664  A4D8               	btfss	status,2,c
 27671  005666  0012               	return	
 27672  005668  0101               	movlb	1	; () banked
 27673  00566A  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
 27674  00566C  A4D8               	btfss	status,2,c
 27675  00566E  0012               	return	
 27676                           
 27677                           ; BSR set to: 1
 27678                           ;outputs_MC50.c: 791:     {;outputs_MC50.c: 792:         if((PORTEbits.RE0==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 1))
 27679  005670  B091               	btfsc	145,0,c	;volatile
 27680  005672  D004               	goto	u31860
 27681                           
 27682                           ; BSR set to: 1
 27683  005674  0100               	movlb	0	; () banked
 27684  005676  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27685  005678  B4D8               	btfsc	status,2,c
 27686  00567A  D006               	goto	u31880
 27687  00567C                     u31860:
 27688  00567C  B291               	btfsc	145,1,c	;volatile
 27689  00567E  D050               	goto	l2380
 27690  005680  0100               	movlb	0	; () banked
 27691  005682  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27692  005684  A4D8               	btfss	status,2,c
 27693  005686  D04C               	goto	l2380
 27694  005688                     u31880:
 27695                           
 27696                           ; BSR set to: 0
 27697                           ;outputs_MC50.c: 793:         {;outputs_MC50.c: 794:             if((PORTEbits.RE1==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 27698  005688  B291               	btfsc	145,1,c	;volatile
 27699  00568A  D003               	goto	u31900
 27700                           
 27701                           ; BSR set to: 0
 27702  00568C  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27703  00568E  B4D8               	btfsc	status,2,c
 27704  005690  D005               	goto	u31920
 27705  005692                     u31900:
 27706                           
 27707                           ; BSR set to: 0
 27708  005692  B091               	btfsc	145,0,c	;volatile
 27709  005694  D03B               	goto	l25672
 27710                           
 27711                           ; BSR set to: 0
 27712  005696  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27713  005698  A4D8               	btfss	status,2,c
 27714  00569A  D038               	goto	l25672
 27715  00569C                     u31920:
 27716                           
 27717                           ; BSR set to: 0
 27718                           ;outputs_MC50.c: 795:             {;outputs_MC50.c: 796:                 var_sys.InStopi
      +                          ng = NO;
 27719  00569C  0E00               	movlw	0
 27720  00569E  0101               	movlb	1	; () banked
 27721  0056A0  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 27722                           
 27723                           ;outputs_MC50.c: 797:                 ts_system.ts_TRIACWait=200;
 27724  0056A2  0E00               	movlw	0
 27725  0056A4  6FA5               	movwf	(_ts_system+7)& (0+255),b	;volatile
 27726  0056A6  0EC8               	movlw	200
 27727  0056A8  6FA4               	movwf	(_ts_system+6)& (0+255),b	;volatile
 27728                           
 27729                           ;outputs_MC50.c: 798:                 ts_system.TimeChargeCondesador=(1000/50);
 27730  0056AA  0E00               	movlw	0
 27731  0056AC  6FB9               	movwf	(_ts_system+27)& (0+255),b	;volatile
 27732  0056AE  0E14               	movlw	20
 27733  0056B0  6FB8               	movwf	(_ts_system+26)& (0+255),b	;volatile
 27734                           
 27735                           ; BSR set to: 1
 27736                           ;outputs_MC50.c: 799:                 if (var_sys.FimCurso_OpenIsEnabled == YES|| var_sy
      +                          s.Statedoorcontrol == st_Opened){
 27737  0056B2  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 27738  0056B4  B4D8               	btfsc	status,2,c
 27739  0056B6  D004               	goto	u31940
 27740                           
 27741                           ; BSR set to: 1
 27742  0056B8  0E04               	movlw	4
 27743  0056BA  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 27744  0056BC  A4D8               	btfss	status,2,c
 27745  0056BE  D024               	goto	l25670
 27746  0056C0                     u31940:
 27747                           
 27748                           ; BSR set to: 1
 27749                           ;outputs_MC50.c: 800:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+(unsigned int)var_sys_NVM.decelarationClose*( 500/50))+var_sys_NV
      +                          M.learningTimeToClose + (1000/50)*4;
 27750  0056C0  0100               	movlb	0	; () banked
 27751  0056C2  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 27752  0056C4  0D0A               	mullw	10
 27753  0056C6  CFF3 F012          	movff	prodl,??_ControlMotor
 27754  0056CA  CFF4 F013          	movff	prodh,??_ControlMotor+1
 27755  0056CE  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 27756  0056D0  2612               	addwf	??_ControlMotor^0,f,c
 27757  0056D2  0E00               	movlw	0
 27758  0056D4  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 27759  0056D6  5012               	movf	??_ControlMotor^0,w,c
 27760  0056D8  25D0               	addwf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 27761  0056DA  6E14               	movwf	(??_ControlMotor+2)^0,c
 27762  0056DC  5013               	movf	(??_ControlMotor+1)^0,w,c
 27763  0056DE  21D1               	addwfc	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 27764  0056E0  6E15               	movwf	(??_ControlMotor+3)^0,c
 27765  0056E2  0E00               	movlw	0
 27766  0056E4  21D2               	addwfc	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 27767  0056E6  6E16               	movwf	(??_ControlMotor+4)^0,c
 27768  0056E8  0E00               	movlw	0
 27769  0056EA  21D3               	addwfc	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 27770  0056EC  6E17               	movwf	(??_ControlMotor+5)^0,c
 27771  0056EE  0E50               	movlw	80
 27772  0056F0  2414               	addwf	(??_ControlMotor+2)^0,w,c
 27773  0056F2  0101               	movlb	1	; () banked
 27774  0056F4  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 27775  0056F6  0E00               	movlw	0
 27776  0056F8  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 27777  0056FA  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 27778  0056FC  0E00               	movlw	0
 27779  0056FE  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 27780  005700  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 27781  005702  0E00               	movlw	0
 27782  005704  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 27783  005706  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 27784  005708                     l25670:
 27785                           
 27786                           ; BSR set to: 1
 27787                           ;outputs_MC50.c: 803:                 var_sys.Statedoorcontrol = st_Closing;
 27788  005708  0E03               	movlw	3
 27789  00570A  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 27790  00570C                     l25672:
 27791                           
 27792                           ;outputs_MC50.c: 806:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE1 = 1; } while(0);}
 27793  00570C  0100               	movlb	0	; () banked
 27794  00570E  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27795  005710  A4D8               	btfss	status,2,c
 27796  005712  D002               	goto	l2397
 27797                           
 27798                           ; BSR set to: 0
 27799  005714  8287               	bsf	135,1,c	;volatile
 27800  005716  D001               	goto	l25674
 27801  005718                     l2397:
 27802                           
 27803                           ; BSR set to: 0
 27804  005718  8087               	bsf	135,0,c	;volatile
 27805  00571A                     l25674:
 27806                           
 27807                           ; BSR set to: 0
 27808                           ;outputs_MC50.c: 808:             var_sys.Activatecounter = close ;
 27809  00571A  0E02               	movlw	2
 27810  00571C  0101               	movlb	1	; () banked
 27811  00571E  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 27812  005720                     l2380:
 27813                           
 27814                           ;outputs_MC50.c: 811:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E0 = 0; } while(0);}
 27815  005720  0100               	movlb	0	; () banked
 27816  005722  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27817  005724  A4D8               	btfss	status,2,c
 27818  005726  D002               	goto	l2403
 27819                           
 27820                           ; BSR set to: 0
 27821  005728  9087               	bcf	135,0,c	;volatile
 27822  00572A  0012               	return	
 27823  00572C                     l2403:
 27824                           
 27825                           ; BSR set to: 0
 27826  00572C  9287               	bcf	135,1,c	;volatile
 27827  00572E  0012               	return		;funcret
 27828  005730                     __end_of_ControlMotor:
 27829                           	callstack 0
 27830                           
 27831 ;; *************** function _VerifyElectricalBrake *****************
 27832 ;; Defined at:
 27833 ;;		line 658 in file "outputs_MC50.c"
 27834 ;; Parameters:    Size  Location     Type
 27835 ;;  actualState     1    wreg     enum E10381
 27836 ;; Auto vars:     Size  Location     Type
 27837 ;;  actualState     1   16[COMRAM] enum E10381
 27838 ;;  tempState       1   15[COMRAM] enum E10381
 27839 ;; Return value:  Size  Location     Type
 27840 ;;                  1    wreg      enum E10381
 27841 ;; Registers used:
 27842 ;;		wreg, status,2, status,0
 27843 ;; Tracked objects:
 27844 ;;		On entry : 3F/1
 27845 ;;		On exit  : 3E/0
 27846 ;;		Unchanged: 0/0
 27847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27849 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27851 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27852 ;;Total ram usage:        2 bytes
 27853 ;; Hardware stack levels used: 1
 27854 ;; Hardware stack levels required when called: 4
 27855 ;; This function calls:
 27856 ;;		Nothing
 27857 ;; This function is called by:
 27858 ;;		_ControlMotor
 27859 ;; This function uses a non-reentrant model
 27860 ;;
 27861                           
 27862                           	psect	text114
 27863  008990                     __ptext114:
 27864                           	callstack 0
 27865  008990                     _VerifyElectricalBrake:
 27866                           	callstack 25
 27867                           
 27868                           ;incstack = 0
 27869                           ;VerifyElectricalBrake@actualState stored from wreg
 27870  008990  6E11               	movwf	VerifyElectricalBrake@actualState^0,c
 27871                           
 27872                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 27873  008992  C011  F010         	movff	VerifyElectricalBrake@actualState,VerifyElectricalBrake@tempState
 27874                           
 27875                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 27876  008996  0100               	movlb	0	; () banked
 27877  008998  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 27878  00899A  A4D8               	btfss	status,2,c
 27879  00899C  D02E               	goto	l2323
 27880                           
 27881                           ; BSR set to: 0
 27882  00899E  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 27883  0089A0  A4D8               	btfss	status,2,c
 27884  0089A2  D02B               	goto	l2323
 27885                           
 27886                           ; BSR set to: 0
 27887  0089A4  0101               	movlb	1	; () banked
 27888  0089A6  BFDF               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 27889  0089A8  D005               	goto	u26940
 27890  0089AA  51DF               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 27891  0089AC  E126               	bnz	l2323
 27892  0089AE  05DE               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 27893  0089B0  B0D8               	btfsc	status,0,c
 27894  0089B2  D023               	goto	l2323
 27895  0089B4                     u26940:
 27896                           
 27897                           ; BSR set to: 1
 27898                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 27899  0089B4  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 27900  0089B6  0100               	movlb	0	; () banked
 27901  0089B8  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 27902  0089BA  B4D8               	btfsc	status,2,c
 27903  0089BC  D00B               	goto	l23276
 27904                           
 27905                           ; BSR set to: 0
 27906  0089BE  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 27907  0089C0  A4D8               	btfss	status,2,c
 27908  0089C2  D008               	goto	l23276
 27909                           
 27910                           ; BSR set to: 0
 27911                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 27912  0089C4  0E01               	movlw	1
 27913  0089C6  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 27914                           
 27915                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 27916  0089C8  0E00               	movlw	0
 27917  0089CA  0101               	movlb	1	; () banked
 27918  0089CC  6FC7               	movwf	(_ts_system+41)& (0+255),b	;volatile
 27919  0089CE  0E16               	movlw	22
 27920  0089D0  6FC6               	movwf	(_ts_system+40)& (0+255),b	;volatile
 27921                           
 27922                           ;outputs_MC50.c: 670:         }
 27923  0089D2  D018               	goto	l2328
 27924  0089D4                     l23276:
 27925                           
 27926                           ; BSR set to: 0
 27927  0089D4  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 27928  0089D6  A4D8               	btfss	status,2,c
 27929  0089D8  D00B               	goto	l23282
 27930                           
 27931                           ; BSR set to: 0
 27932  0089DA  0101               	movlb	1	; () banked
 27933  0089DC  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 27934  0089DE  D008               	goto	l23282
 27935  0089E0  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 27936  0089E2  E103               	bnz	u26980
 27937  0089E4  05C6               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 27938  0089E6  A0D8               	btfss	status,0,c
 27939  0089E8  D003               	goto	l23282
 27940  0089EA                     u26980:
 27941                           
 27942                           ; BSR set to: 1
 27943                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 27944  0089EA  0E01               	movlw	1
 27945  0089EC  6E10               	movwf	VerifyElectricalBrake@tempState^0,c
 27946                           
 27947                           ;outputs_MC50.c: 686:         }
 27948  0089EE  D00A               	goto	l2328
 27949  0089F0                     l23282:
 27950                           
 27951                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 27952  0089F0  0E00               	movlw	0
 27953  0089F2  0100               	movlb	0	; () banked
 27954  0089F4  6F78               	movwf	_brakeElectric_st& (0+255),b
 27955                           
 27956                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 27957  0089F6  0E00               	movlw	0
 27958  0089F8  D004               	goto	L103
 27959  0089FA                     l2323:
 27960                           
 27961                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 27962  0089FA  C011  F078         	movff	VerifyElectricalBrake@actualState,_brakeElectric_st
 27963                           
 27964                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 27965  0089FE  0E00               	movlw	0
 27966  008A00  0100               	movlb	0	; () banked
 27967  008A02                     L103:
 27968  008A02  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 27969  008A04                     l2328:
 27970                           
 27971                           ;outputs_MC50.c: 700:     return tempState;
 27972  008A04  5010               	movf	VerifyElectricalBrake@tempState^0,w,c
 27973  008A06  0012               	return		;funcret
 27974  008A08                     __end_of_VerifyElectricalBrake:
 27975                           	callstack 0
 27976                           
 27977 ;; *************** function _ControlLights *****************
 27978 ;; Defined at:
 27979 ;;		line 816 in file "outputs_MC50.c"
 27980 ;; Parameters:    Size  Location     Type
 27981 ;;		None
 27982 ;; Auto vars:     Size  Location     Type
 27983 ;;		None
 27984 ;; Return value:  Size  Location     Type
 27985 ;;                  1    wreg      void 
 27986 ;; Registers used:
 27987 ;;		wreg, status,2, status,0, cstack
 27988 ;; Tracked objects:
 27989 ;;		On entry : 3E/1
 27990 ;;		On exit  : 3E/0
 27991 ;;		Unchanged: 0/0
 27992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27997 ;;Total ram usage:        0 bytes
 27998 ;; Hardware stack levels used: 1
 27999 ;; Hardware stack levels required when called: 6
 28000 ;; This function calls:
 28001 ;;		_setFlashLigth_ON
 28002 ;;		_setRGB_ON
 28003 ;; This function is called by:
 28004 ;;		_main
 28005 ;; This function uses a non-reentrant model
 28006 ;;
 28007                           
 28008                           	psect	text115
 28009  004776                     __ptext115:
 28010                           	callstack 0
 28011  004776                     _ControlLights:
 28012                           	callstack 24
 28013                           
 28014                           ;outputs_MC50.c: 818:     if(var_sys.DistanceProgrammingActive==YES)
 28015                           
 28016                           ;incstack = 0
 28017  004776  0101               	movlb	1	; () banked
 28018  004778  0540               	decf	(_var_sys+64)& (0+255),w,b	;volatile
 28019  00477A  A4D8               	btfss	status,2,c
 28020  00477C  D007               	goto	l25680
 28021                           
 28022                           ; BSR set to: 1
 28023                           ;outputs_MC50.c: 819:     {;outputs_MC50.c: 820:         setFlashLigth_ON((1000/50));
 28024  00477E  0E00               	movlw	0
 28025  004780  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 28026  004782  0E14               	movlw	20
 28027  004784  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 28028  004786  ECCA  F04B         	call	_setFlashLigth_ON	;wreg free
 28029                           
 28030                           ;outputs_MC50.c: 821:     }
 28031  00478A  D010               	goto	l25686
 28032  00478C                     l25680:
 28033                           
 28034                           ; BSR set to: 1
 28035  00478C  51E6               	movf	_controlGate_stateMachine& (0+255),w,b
 28036  00478E  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 28037  004790  A4D8               	btfss	status,2,c
 28038  004792  D00C               	goto	l25686
 28039                           
 28040                           ; BSR set to: 1
 28041                           ;outputs_MC50.c: 823:     {;outputs_MC50.c: 824:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 28042  004794  0E00               	movlw	0
 28043  004796  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 28044                           
 28045                           ;outputs_MC50.c: 825:         var_sys.ControlReleCapacitorClose = 0;
 28046  004798  0E00               	movlw	0
 28047  00479A  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 28048                           
 28049                           ; BSR set to: 1
 28050                           ;outputs_MC50.c: 826:         if (var_sys_NVM.flashLightMode !=3){
 28051  00479C  0E03               	movlw	3
 28052  00479E  0100               	movlb	0	; () banked
 28053  0047A0  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28054  0047A2  B4D8               	btfsc	status,2,c
 28055  0047A4  D002               	goto	l2415
 28056                           
 28057                           ; BSR set to: 0
 28058                           
 28059                           ;outputs_MC50.c: 827:            do { LATEbits.LATE2 = 0; } while(0);
 28060  0047A6  9487               	bcf	135,2,c	;volatile
 28061  0047A8  D001               	goto	l25686
 28062  0047AA                     l2415:
 28063                           
 28064                           ; BSR set to: 0
 28065  0047AA  8487               	bsf	135,2,c	;volatile
 28066  0047AC                     l25686:
 28067                           
 28068                           ;outputs_MC50.c: 835:     if (((var_sys.preflashingcontrol == YES || controlGate_stateMa
      +                          chine.current_state==st_Opened) && (ts_system.timeWaitToClose >0) && (ts_system.timeWait
      +                          ToClose <= 3 * (1000/50))) && var_sys_NVM.flashRGBMode == rgb_pre){
 28069  0047AC  0101               	movlb	1	; () banked
 28070  0047AE  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 28071  0047B0  B4D8               	btfsc	status,2,c
 28072  0047B2  D005               	goto	u32010
 28073                           
 28074                           ; BSR set to: 1
 28075  0047B4  0E04               	movlw	4
 28076  0047B6  19E6               	xorwf	_controlGate_stateMachine& (0+255),w,b
 28077  0047B8  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 28078  0047BA  A4D8               	btfss	status,2,c
 28079  0047BC  D01C               	goto	l25698
 28080  0047BE                     u32010:
 28081                           
 28082                           ; BSR set to: 1
 28083  0047BE  BFB1               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 28084  0047C0  D01A               	goto	l25698
 28085  0047C2  51B1               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 28086  0047C4  E103               	bnz	u32020
 28087  0047C6  05B0               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 28088  0047C8  A0D8               	btfss	status,0,c
 28089  0047CA  D015               	goto	l25698
 28090  0047CC                     u32020:
 28091                           
 28092                           ; BSR set to: 1
 28093  0047CC  BFB1               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 28094  0047CE  D006               	goto	u32030
 28095  0047D0  51B1               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 28096  0047D2  E111               	bnz	l25698
 28097  0047D4  0E3D               	movlw	61
 28098  0047D6  5DB0               	subwf	(_ts_system+18)& (0+255),w,b	;volatile
 28099  0047D8  B0D8               	btfsc	status,0,c
 28100  0047DA  D00D               	goto	l25698
 28101  0047DC                     u32030:
 28102                           
 28103                           ; BSR set to: 1
 28104  0047DC  0E02               	movlw	2
 28105  0047DE  0100               	movlb	0	; () banked
 28106  0047E0  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28107  0047E2  A4D8               	btfss	status,2,c
 28108  0047E4  D008               	goto	l25698
 28109                           
 28110                           ; BSR set to: 0
 28111                           ;outputs_MC50.c: 836:         setRGB_ON(BLUE,( 200/50));
 28112  0047E6  0E00               	movlw	0
 28113  0047E8  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28114  0047EA  0E04               	movlw	4
 28115  0047EC  6E11               	movwf	setRGB_ON@Freq^0,c
 28116  0047EE  0E01               	movlw	1
 28117  0047F0  EC67  F041         	call	_setRGB_ON
 28118                           
 28119                           ;outputs_MC50.c: 838:     }
 28120  0047F4  0012               	return	
 28121  0047F6                     l25698:
 28122  0047F6  0E03               	movlw	3
 28123  0047F8  0101               	movlb	1	; () banked
 28124  0047FA  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28125  0047FC  A4D8               	btfss	status,2,c
 28126  0047FE  D04F               	goto	l25728
 28127                           
 28128                           ; BSR set to: 1
 28129                           ;outputs_MC50.c: 842:     {;outputs_MC50.c: 843:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 28130  004800  0E00               	movlw	0
 28131  004802  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 28132                           
 28133                           ;outputs_MC50.c: 846:         if (var_sys.ControlReleCapacitorClose==0 && var_sys_NVM.fl
      +                          ashRGBMode==rgb_capacitor)
 28134  004804  5129               	movf	(_var_sys+41)& (0+255),w,b	;volatile
 28135  004806  A4D8               	btfss	status,2,c
 28136  004808  D013               	goto	l25710
 28137                           
 28138                           ; BSR set to: 1
 28139  00480A  0E03               	movlw	3
 28140  00480C  0100               	movlb	0	; () banked
 28141  00480E  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28142  004810  A4D8               	btfss	status,2,c
 28143  004812  D00E               	goto	l25710
 28144                           
 28145                           ; BSR set to: 0
 28146                           ;outputs_MC50.c: 847:         {;outputs_MC50.c: 848:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 28147  004814  0E00               	movlw	0
 28148  004816  0101               	movlb	1	; () banked
 28149  004818  6FE1               	movwf	(_ts_system+67)& (0+255),b	;volatile
 28150  00481A  0E28               	movlw	40
 28151  00481C  6FE0               	movwf	(_ts_system+66)& (0+255),b	;volatile
 28152                           
 28153                           ; BSR set to: 1
 28154                           ;outputs_MC50.c: 849:             setRGB_ON(YELLOW,0);
 28155  00481E  0E00               	movlw	0
 28156  004820  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28157  004822  0E00               	movlw	0
 28158  004824  6E11               	movwf	setRGB_ON@Freq^0,c
 28159  004826  0E04               	movlw	4
 28160  004828  EC67  F041         	call	_setRGB_ON
 28161                           
 28162                           ; BSR set to: 1
 28163                           ;outputs_MC50.c: 850:          var_sys.ControlReleCapacitorClose = 1;
 28164  00482C  0E01               	movlw	1
 28165  00482E  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 28166  004830                     l25710:
 28167                           
 28168                           ;outputs_MC50.c: 852:         if(ts_system.TimeReleCapacitor<=0 && var_sys_NVM.flashRGBM
      +                          ode==rgb_capacitor)
 28169  004830  0101               	movlb	1	; () banked
 28170  004832  BFE1               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 28171  004834  D005               	goto	u32080
 28172  004836  51E1               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 28173  004838  E105               	bnz	l25714
 28174  00483A  05E0               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 28175  00483C  B0D8               	btfsc	status,0,c
 28176  00483E  D002               	goto	l25714
 28177  004840                     u32080:
 28178                           
 28179                           ; BSR set to: 1
 28180  004840  0100               	movlb	0	; () banked
 28181  004842  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28182  004844                     l25714:
 28183                           
 28184                           ;outputs_MC50.c: 858:         if(var_sys_NVM.flashRGBMode==rgb_pisca && ts_system.TimeRe
      +                          leCapacitor<=0)
 28185  004844  0100               	movlb	0	; () banked
 28186  004846  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28187  004848  A4D8               	btfss	status,2,c
 28188  00484A  D010               	goto	l25720
 28189                           
 28190                           ; BSR set to: 0
 28191  00484C  0101               	movlb	1	; () banked
 28192  00484E  BFE1               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 28193  004850  D005               	goto	u32100
 28194  004852  51E1               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 28195  004854  E10B               	bnz	l25720
 28196  004856  05E0               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 28197  004858  B0D8               	btfsc	status,0,c
 28198  00485A  D008               	goto	l25720
 28199  00485C                     u32100:
 28200                           
 28201                           ; BSR set to: 1
 28202                           ;outputs_MC50.c: 860:         {;outputs_MC50.c: 861:             setRGB_ON(RED,( 200/50)
      +                           +( 50/50));
 28203  00485C  0E00               	movlw	0
 28204  00485E  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28205  004860  0E05               	movlw	5
 28206  004862  6E11               	movwf	setRGB_ON@Freq^0,c
 28207  004864  0E03               	movlw	3
 28208  004866  EC67  F041         	call	_setRGB_ON
 28209                           
 28210                           ;outputs_MC50.c: 862:         }
 28211  00486A  D007               	goto	l25722
 28212  00486C                     l25720:
 28213                           
 28214                           ;outputs_MC50.c: 864:         {;outputs_MC50.c: 865:             setRGB_ON(RED,0);
 28215  00486C  0E00               	movlw	0
 28216  00486E  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28217  004870  0E00               	movlw	0
 28218  004872  6E11               	movwf	setRGB_ON@Freq^0,c
 28219  004874  0E03               	movlw	3
 28220  004876  EC67  F041         	call	_setRGB_ON
 28221  00487A                     l25722:
 28222                           
 28223                           ; BSR set to: 1
 28224                           ;outputs_MC50.c: 868:         if(var_sys_NVM.flashLightMode==fixo)
 28225  00487A  0100               	movlb	0	; () banked
 28226  00487C  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28227  00487E  A4D8               	btfss	status,2,c
 28228  004880  D007               	goto	l25726
 28229                           
 28230                           ; BSR set to: 0
 28231                           ;outputs_MC50.c: 869:         {;outputs_MC50.c: 871:             setFlashLigth_ON(( 500/
      +                          50));
 28232  004882  0E00               	movlw	0
 28233  004884  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 28234  004886  0E0A               	movlw	10
 28235  004888  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 28236  00488A  ECCA  F04B         	call	_setFlashLigth_ON	;wreg free
 28237                           
 28238                           ;outputs_MC50.c: 873:         }
 28239  00488E  0012               	return	
 28240  004890                     l25726:
 28241                           
 28242                           ;outputs_MC50.c: 875:             setFlashLigth_ON(0);
 28243  004890  0E00               	movlw	0
 28244  004892  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 28245  004894  0E00               	movlw	0
 28246  004896  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 28247  004898  ECCA  F04B         	call	_setFlashLigth_ON	;wreg free
 28248  00489C  0012               	return	
 28249  00489E                     l25728:
 28250                           
 28251                           ; BSR set to: 1
 28252  00489E  5100               	movf	_var_sys& (0+255),w,b	;volatile
 28253  0048A0  A4D8               	btfss	status,2,c
 28254  0048A2  D042               	goto	l25756
 28255                           
 28256                           ; BSR set to: 1
 28257  0048A4  05E6               	decf	_controlGate_stateMachine& (0+255),w,b
 28258  0048A6  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 28259  0048A8  A4D8               	btfss	status,2,c
 28260  0048AA  D03E               	goto	l25756
 28261                           
 28262                           ; BSR set to: 1
 28263                           ;outputs_MC50.c: 881:     {;outputs_MC50.c: 882:         if(var_sys.preflashingcontrol !
      +                          = YES){
 28264  0048AC  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 28265  0048AE  A4D8               	btfss	status,2,c
 28266                           
 28267                           ; BSR set to: 1
 28268                           
 28269                           ;outputs_MC50.c: 883:             do { LATAbits.LATA7 = 1; } while(0);
 28270  0048B0  8E83               	bsf	131,7,c	;volatile
 28271                           
 28272                           ; BSR set to: 1
 28273                           ;outputs_MC50.c: 888:         if(var_sys_NVM.flashRGBMode==rgb_pisca)
 28274  0048B2  0100               	movlb	0	; () banked
 28275  0048B4  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28276  0048B6  A4D8               	btfss	status,2,c
 28277  0048B8  D017               	goto	l25744
 28278                           
 28279                           ; BSR set to: 0
 28280                           ;outputs_MC50.c: 889:         {;outputs_MC50.c: 890:             if (var_sys_NVM.TypeofM
      +                          otor == br || var_sys_NVM.TypeofMotor == SE)setRGB_ON(YELLOW,0);
 28281  0048BA  0E02               	movlw	2
 28282  0048BC  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 28283  0048BE  B4D8               	btfsc	status,2,c
 28284  0048C0  D003               	goto	u32170
 28285                           
 28286                           ; BSR set to: 0
 28287  0048C2  05B4               	decf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 28288  0048C4  A4D8               	btfss	status,2,c
 28289  0048C6  D008               	goto	l25742
 28290  0048C8                     u32170:
 28291                           
 28292                           ; BSR set to: 0
 28293  0048C8  0E00               	movlw	0
 28294  0048CA  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28295  0048CC  0E00               	movlw	0
 28296  0048CE  6E11               	movwf	setRGB_ON@Freq^0,c
 28297  0048D0  0E04               	movlw	4
 28298  0048D2  EC67  F041         	call	_setRGB_ON
 28299  0048D6  D013               	goto	l25748
 28300  0048D8                     l25742:
 28301                           
 28302                           ; BSR set to: 0
 28303  0048D8  0E00               	movlw	0
 28304  0048DA  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28305  0048DC  0E28               	movlw	40
 28306  0048DE  6E11               	movwf	setRGB_ON@Freq^0,c
 28307  0048E0  0E04               	movlw	4
 28308  0048E2  EC67  F041         	call	_setRGB_ON
 28309  0048E6  D00B               	goto	l25748
 28310  0048E8                     l25744:
 28311                           
 28312                           ; BSR set to: 0
 28313  0048E8  0E03               	movlw	3
 28314  0048EA  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28315  0048EC  B4D8               	btfsc	status,2,c
 28316  0048EE  D007               	goto	l25748
 28317                           
 28318                           ; BSR set to: 0
 28319  0048F0  0E00               	movlw	0
 28320  0048F2  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28321  0048F4  0E00               	movlw	0
 28322  0048F6  6E11               	movwf	setRGB_ON@Freq^0,c
 28323  0048F8  0E04               	movlw	4
 28324  0048FA  EC67  F041         	call	_setRGB_ON
 28325  0048FE                     l25748:
 28326                           
 28327                           ;outputs_MC50.c: 895:         if (var_sys_NVM.flashLightMode != electroiman)
 28328  0048FE  0E03               	movlw	3
 28329  004900  0100               	movlb	0	; () banked
 28330  004902  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28331  004904  B4D8               	btfsc	status,2,c
 28332  004906  0012               	return	
 28333                           
 28334                           ; BSR set to: 0
 28335                           ;outputs_MC50.c: 896:         {;outputs_MC50.c: 897:         if (ts_system.TimeOnFlashLi
      +                          gth>0)
 28336  004908  0101               	movlb	1	; () banked
 28337  00490A  BFC1               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 28338  00490C  D007               	goto	l2443
 28339  00490E  51C1               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 28340  004910  11C0               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 28341  004912  11BF               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 28342  004914  E1BD               	bnz	l25726
 28343  004916  05BE               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 28344  004918  B0D8               	btfsc	status,0,c
 28345  00491A  D7BA               	goto	l25726
 28346  00491C                     l2443:
 28347                           
 28348                           ; BSR set to: 1
 28349  00491C  9487               	bcf	135,2,c	;volatile
 28350                           
 28351                           ; BSR set to: 1
 28352                           ;outputs_MC50.c: 904:             ts_system.timeFreqFlashligth=0;
 28353  00491E  0E00               	movlw	0
 28354  004920  6FBD               	movwf	(_ts_system+31)& (0+255),b	;volatile
 28355  004922  0E00               	movlw	0
 28356  004924  6FBC               	movwf	(_ts_system+30)& (0+255),b	;volatile
 28357                           
 28358                           ; BSR set to: 0
 28359                           ;outputs_MC50.c: 907:     }
 28360                           
 28361                           ;outputs_MC50.c: 906:         }
 28362  004926  0012               	return	
 28363  004928                     l25756:
 28364                           
 28365                           ; BSR set to: 1
 28366  004928  5100               	movf	_var_sys& (0+255),w,b	;volatile
 28367  00492A  A4D8               	btfss	status,2,c
 28368  00492C  D048               	goto	l25790
 28369                           
 28370                           ; BSR set to: 1
 28371                           ;outputs_MC50.c: 911:     {;outputs_MC50.c: 912:         if (( var_sys_NVM.autoTimeFullC
      +                          lose==0 && var_sys.StateMotor == InOpenFull)||((var_sys_NVM.autoTimeWalkClose==0) && var
      +                          _sys_NVM.walkTime >0 && var_sys.StateMotor == InOpenWalk))
 28372  00492E  0100               	movlb	0	; () banked
 28373  004930  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 28374  004932  A4D8               	btfss	status,2,c
 28375  004934  D004               	goto	u32230
 28376                           
 28377                           ; BSR set to: 0
 28378  004936  0101               	movlb	1	; () banked
 28379  004938  0500               	decf	_var_sys& (0+255),w,b	;volatile
 28380  00493A  B4D8               	btfsc	status,2,c
 28381  00493C  D00C               	goto	u32260
 28382  00493E                     u32230:
 28383  00493E  0100               	movlb	0	; () banked
 28384  004940  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 28385  004942  A4D8               	btfss	status,2,c
 28386  004944  D017               	goto	l25774
 28387                           
 28388                           ; BSR set to: 0
 28389  004946  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 28390  004948  B4D8               	btfsc	status,2,c
 28391  00494A  D014               	goto	l25774
 28392                           
 28393                           ; BSR set to: 0
 28394  00494C  0E02               	movlw	2
 28395  00494E  0101               	movlb	1	; () banked
 28396  004950  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28397  004952  A4D8               	btfss	status,2,c
 28398  004954  D00F               	goto	l25774
 28399  004956                     u32260:
 28400                           
 28401                           ; BSR set to: 1
 28402                           ;outputs_MC50.c: 913:         {;outputs_MC50.c: 916:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 28403  004956  0E00               	movlw	0
 28404  004958  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 28405                           
 28406                           ;outputs_MC50.c: 917:             var_sys.ControlReleCapacitorClose = 0;
 28407  00495A  0E00               	movlw	0
 28408  00495C  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 28409                           
 28410                           ; BSR set to: 1
 28411                           ;outputs_MC50.c: 921:             if (var_sys_NVM.flashLightMode != electroiman && var_s
      +                          ys_NVM.flashLightMode != condominio ){
 28412  00495E  0E03               	movlw	3
 28413  004960  0100               	movlb	0	; () banked
 28414  004962  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28415  004964  B4D8               	btfsc	status,2,c
 28416  004966  0012               	return	
 28417                           
 28418                           ; BSR set to: 0
 28419  004968  0E02               	movlw	2
 28420  00496A  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28421  00496C  B4D8               	btfsc	status,2,c
 28422  00496E  0012               	return	
 28423                           
 28424                           ; BSR set to: 0
 28425                           
 28426                           ;outputs_MC50.c: 922:               do { LATEbits.LATE2 = 0; } while(0);
 28427  004970  9487               	bcf	135,2,c	;volatile
 28428  004972  0012               	return	
 28429  004974                     l25774:
 28430                           
 28431                           ;outputs_MC50.c: 927:         {;outputs_MC50.c: 928:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 28432  004974  0100               	movlb	0	; () banked
 28433  004976  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28434  004978  A4D8               	btfss	status,2,c
 28435  00497A  D008               	goto	l25778
 28436                           
 28437                           ; BSR set to: 0
 28438                           ;outputs_MC50.c: 929:             {;outputs_MC50.c: 930:                 setRGB_ON(BLUE,
      +                          (1000/50));
 28439  00497C  0E00               	movlw	0
 28440  00497E  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28441  004980  0E14               	movlw	20
 28442  004982  6E11               	movwf	setRGB_ON@Freq^0,c
 28443  004984  0E01               	movlw	1
 28444  004986  EC67  F041         	call	_setRGB_ON
 28445                           
 28446                           ;outputs_MC50.c: 932:             }
 28447  00498A  D007               	goto	l25780
 28448  00498C                     l25778:
 28449                           
 28450                           ; BSR set to: 0
 28451                           ;outputs_MC50.c: 934:             {;outputs_MC50.c: 935:                 setRGB_ON(BLUE,
      +                          0);
 28452  00498C  0E00               	movlw	0
 28453  00498E  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28454  004990  0E00               	movlw	0
 28455  004992  6E11               	movwf	setRGB_ON@Freq^0,c
 28456  004994  0E01               	movlw	1
 28457  004996  EC67  F041         	call	_setRGB_ON
 28458  00499A                     l25780:
 28459                           
 28460                           ; BSR set to: 1
 28461                           ;outputs_MC50.c: 939:             if(var_sys_NVM.flashLightMode==pisca ||var_sys_NVM.fla
      +                          shLightMode==electroiman)
 28462  00499A  0100               	movlb	0	; () banked
 28463  00499C  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28464  00499E  B4D8               	btfsc	status,2,c
 28465  0049A0  D004               	goto	u32310
 28466                           
 28467                           ; BSR set to: 0
 28468  0049A2  0E03               	movlw	3
 28469  0049A4  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28470  0049A6  A4D8               	btfss	status,2,c
 28471  0049A8  D002               	goto	l25784
 28472  0049AA                     u32310:
 28473                           
 28474                           ; BSR set to: 0
 28475                           
 28476                           ;outputs_MC50.c: 940:             {;outputs_MC50.c: 941:                  do { LATEbits.
      +                          LATE2 = 0; } while(0);
 28477  0049AA  9487               	bcf	135,2,c	;volatile
 28478  0049AC  0012               	return	
 28479  0049AE                     l25784:
 28480                           
 28481                           ; BSR set to: 0
 28482  0049AE  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28483  0049B0  B4D8               	btfsc	status,2,c
 28484  0049B2  D76E               	goto	l25726
 28485                           
 28486                           ; BSR set to: 0
 28487  0049B4  0E02               	movlw	2
 28488  0049B6  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28489  0049B8  A4D8               	btfss	status,2,c
 28490  0049BA  0012               	return	
 28491  0049BC  D769               	goto	l25726
 28492  0049BE                     l25790:
 28493                           
 28494                           ; BSR set to: 1
 28495                           ;outputs_MC50.c: 955:     {;outputs_MC50.c: 957:         var_sys.ControlReleCapacitorClo
      +                          se=0;
 28496  0049BE  0E00               	movlw	0
 28497  0049C0  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 28498                           
 28499                           ;outputs_MC50.c: 958:         if (var_sys.ControlReleCapacitorOpen==0 && var_sys_NVM.fla
      +                          shRGBMode==rgb_capacitor)
 28500  0049C2  5128               	movf	(_var_sys+40)& (0+255),w,b	;volatile
 28501  0049C4  A4D8               	btfss	status,2,c
 28502  0049C6  D00C               	goto	l25796
 28503                           
 28504                           ; BSR set to: 1
 28505  0049C8  0E03               	movlw	3
 28506  0049CA  0100               	movlb	0	; () banked
 28507  0049CC  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28508  0049CE  A4D8               	btfss	status,2,c
 28509  0049D0  D007               	goto	l25796
 28510                           
 28511                           ; BSR set to: 0
 28512                           ;outputs_MC50.c: 959:         {;outputs_MC50.c: 960:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 28513  0049D2  0E00               	movlw	0
 28514  0049D4  0101               	movlb	1	; () banked
 28515  0049D6  6FE1               	movwf	(_ts_system+67)& (0+255),b	;volatile
 28516  0049D8  0E28               	movlw	40
 28517  0049DA  6FE0               	movwf	(_ts_system+66)& (0+255),b	;volatile
 28518                           
 28519                           ;outputs_MC50.c: 962:          var_sys.ControlReleCapacitorOpen = 1;
 28520  0049DC  0E01               	movlw	1
 28521  0049DE  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 28522  0049E0                     l25796:
 28523                           
 28524                           ;outputs_MC50.c: 964:         if(ts_system.TimeReleCapacitor <=0 && var_sys_NVM.flashRGB
      +                          Mode==rgb_capacitor)
 28525  0049E0  0101               	movlb	1	; () banked
 28526  0049E2  BFE1               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 28527  0049E4  D005               	goto	u32360
 28528  0049E6  51E1               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 28529  0049E8  E105               	bnz	l25800
 28530  0049EA  05E0               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 28531  0049EC  B0D8               	btfsc	status,0,c
 28532  0049EE  D002               	goto	l25800
 28533  0049F0                     u32360:
 28534                           
 28535                           ; BSR set to: 1
 28536  0049F0  0100               	movlb	0	; () banked
 28537  0049F2  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28538  0049F4                     l25800:
 28539                           
 28540                           ;outputs_MC50.c: 969:         if (controlGate_stateMachine.current_state==st_Opened)
 28541  0049F4  0E04               	movlw	4
 28542  0049F6  0101               	movlb	1	; () banked
 28543  0049F8  19E6               	xorwf	_controlGate_stateMachine& (0+255),w,b
 28544  0049FA  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 28545  0049FC  A4D8               	btfss	status,2,c
 28546  0049FE  D01B               	goto	l25812
 28547                           
 28548                           ; BSR set to: 1
 28549                           ;outputs_MC50.c: 970:         {;outputs_MC50.c: 973:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 28550  004A00  0E00               	movlw	0
 28551  004A02  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 28552                           
 28553                           ;outputs_MC50.c: 974:             var_sys.ControlReleCapacitorClose = 0;
 28554  004A04  0E00               	movlw	0
 28555  004A06  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 28556                           
 28557                           ;outputs_MC50.c: 977:             if (var_sys_NVM.autoTimeFullClose != 0 || ((var_sys_NV
      +                          M.autoTimeWalkClose!=0) && var_sys_NVM.walkTime >0)|| var_sys_NVM.operationMode==2)
 28558  004A08  0100               	movlb	0	; () banked
 28559  004A0A  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 28560  004A0C  A4D8               	btfss	status,2,c
 28561  004A0E  D00A               	goto	u32410
 28562                           
 28563                           ; BSR set to: 0
 28564  004A10  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 28565  004A12  B4D8               	btfsc	status,2,c
 28566  004A14  D003               	goto	u32400
 28567                           
 28568                           ; BSR set to: 0
 28569  004A16  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 28570  004A18  A4D8               	btfss	status,2,c
 28571  004A1A  D004               	goto	u32410
 28572  004A1C                     u32400:
 28573                           
 28574                           ; BSR set to: 0
 28575  004A1C  0E02               	movlw	2
 28576  004A1E  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 28577  004A20  A4D8               	btfss	status,2,c
 28578  004A22  D007               	goto	l2477
 28579  004A24                     u32410:
 28580                           
 28581                           ; BSR set to: 0
 28582                           ;outputs_MC50.c: 978:             {;outputs_MC50.c: 979:                    setRGB_ON(BL
      +                          UE,0);
 28583  004A24  0E00               	movlw	0
 28584  004A26  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28585  004A28  0E00               	movlw	0
 28586  004A2A  6E11               	movwf	setRGB_ON@Freq^0,c
 28587  004A2C  0E01               	movlw	1
 28588  004A2E  EC67  F041         	call	_setRGB_ON
 28589  004A32                     l2477:
 28590  004A32  9487               	bcf	135,2,c	;volatile
 28591  004A34  0012               	return	
 28592  004A36                     l25812:
 28593                           
 28594                           ; BSR set to: 1
 28595                           ;outputs_MC50.c: 993:         {;outputs_MC50.c: 996:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 28596  004A36  0100               	movlb	0	; () banked
 28597  004A38  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28598  004A3A  A4D8               	btfss	status,2,c
 28599  004A3C  D008               	goto	l25816
 28600                           
 28601                           ; BSR set to: 0
 28602                           ;outputs_MC50.c: 997:             {;outputs_MC50.c: 998:                 setRGB_ON(GREEN
      +                          ,( 500/50));
 28603  004A3E  0E00               	movlw	0
 28604  004A40  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28605  004A42  0E0A               	movlw	10
 28606  004A44  6E11               	movwf	setRGB_ON@Freq^0,c
 28607  004A46  0E02               	movlw	2
 28608  004A48  EC67  F041         	call	_setRGB_ON
 28609                           
 28610                           ;outputs_MC50.c: 999:             }
 28611  004A4C  D007               	goto	l25818
 28612  004A4E                     l25816:
 28613                           
 28614                           ; BSR set to: 0
 28615                           ;outputs_MC50.c: 1001:             {;outputs_MC50.c: 1002:                 setRGB_ON(GRE
      +                          EN,0);
 28616  004A4E  0E00               	movlw	0
 28617  004A50  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28618  004A52  0E00               	movlw	0
 28619  004A54  6E11               	movwf	setRGB_ON@Freq^0,c
 28620  004A56  0E02               	movlw	2
 28621  004A58  EC67  F041         	call	_setRGB_ON
 28622  004A5C                     l25818:
 28623                           
 28624                           ; BSR set to: 1
 28625                           ;outputs_MC50.c: 1006:             if(var_sys_NVM.flashLightMode==fixo)
 28626  004A5C  0100               	movlb	0	; () banked
 28627  004A5E  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28628  004A60  A4D8               	btfss	status,2,c
 28629  004A62  D007               	goto	l25822
 28630                           
 28631                           ; BSR set to: 0
 28632                           ;outputs_MC50.c: 1007:             {;outputs_MC50.c: 1010:                 setFlashLigth
      +                          _ON((1000/50));
 28633  004A64  0E00               	movlw	0
 28634  004A66  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 28635  004A68  0E14               	movlw	20
 28636  004A6A  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 28637  004A6C  ECCA  F04B         	call	_setFlashLigth_ON	;wreg free
 28638                           
 28639                           ;outputs_MC50.c: 1011:             }
 28640  004A70  D00D               	goto	l25828
 28641  004A72                     l25822:
 28642                           
 28643                           ; BSR set to: 0
 28644  004A72  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28645  004A74  B4D8               	btfsc	status,2,c
 28646  004A76  D004               	goto	u32450
 28647                           
 28648                           ; BSR set to: 0
 28649  004A78  0E02               	movlw	2
 28650  004A7A  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28651  004A7C  A4D8               	btfss	status,2,c
 28652  004A7E  D006               	goto	l25828
 28653  004A80                     u32450:
 28654                           
 28655                           ; BSR set to: 0
 28656                           ;outputs_MC50.c: 1013:             {;outputs_MC50.c: 1014:                 setFlashLigth
      +                          _ON(0);
 28657  004A80  0E00               	movlw	0
 28658  004A82  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 28659  004A84  0E00               	movlw	0
 28660  004A86  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 28661  004A88  ECCA  F04B         	call	_setFlashLigth_ON	;wreg free
 28662  004A8C                     l25828:
 28663                           
 28664                           ;outputs_MC50.c: 1017:             if (var_sys_NVM.flashLightMode == electroiman)
 28665  004A8C  0E03               	movlw	3
 28666  004A8E  0100               	movlb	0	; () banked
 28667  004A90  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28668  004A92  A4D8               	btfss	status,2,c
 28669  004A94  0012               	return	
 28670                           
 28671                           ; BSR set to: 0
 28672                           
 28673                           ;outputs_MC50.c: 1018:             {;outputs_MC50.c: 1019:             do { LATEbits.LAT
      +                          E2 = 0; } while(0);
 28674  004A96  9487               	bcf	135,2,c	;volatile
 28675  004A98  0012               	return		;funcret
 28676  004A9A                     __end_of_ControlLights:
 28677                           	callstack 0
 28678                           
 28679 ;; *************** function _setRGB_ON *****************
 28680 ;; Defined at:
 28681 ;;		line 1028 in file "outputs_MC50.c"
 28682 ;; Parameters:    Size  Location     Type
 28683 ;;  RGBLigth        1    wreg     enum E10611
 28684 ;;  Freq            2   16[COMRAM] int 
 28685 ;; Auto vars:     Size  Location     Type
 28686 ;;  RGBLigth        1   20[COMRAM] enum E10611
 28687 ;; Return value:  Size  Location     Type
 28688 ;;                  1    wreg      void 
 28689 ;; Registers used:
 28690 ;;		wreg, status,2, status,0, cstack
 28691 ;; Tracked objects:
 28692 ;;		On entry : 3E/0
 28693 ;;		On exit  : 3F/1
 28694 ;;		Unchanged: 0/0
 28695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28696 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28697 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28698 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28699 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28700 ;;Total ram usage:        5 bytes
 28701 ;; Hardware stack levels used: 1
 28702 ;; Hardware stack levels required when called: 5
 28703 ;; This function calls:
 28704 ;;		_RGB_Set
 28705 ;; This function is called by:
 28706 ;;		_ControlLights
 28707 ;; This function uses a non-reentrant model
 28708 ;;
 28709                           
 28710                           	psect	text116
 28711  0082CE                     __ptext116:
 28712                           	callstack 0
 28713  0082CE                     _setRGB_ON:
 28714                           	callstack 24
 28715                           
 28716                           ;incstack = 0
 28717                           ;setRGB_ON@RGBLigth stored from wreg
 28718  0082CE  6E15               	movwf	setRGB_ON@RGBLigth^0,c
 28719                           
 28720                           ;outputs_MC50.c: 1028: void setRGB_ON(RGBY_enum RGBLigth,int Freq);outputs_MC50.c: 1029:
      +                           {;outputs_MC50.c: 1031:     do { LATAbits.LATA7 = 1; } while(0);
 28721  0082D0  8E83               	bsf	131,7,c	;volatile
 28722                           
 28723                           ;outputs_MC50.c: 1037:     if(Freq==0 || var_sys.upFaseRGB==1)
 28724  0082D2  5011               	movf	setRGB_ON@Freq^0,w,c
 28725  0082D4  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 28726  0082D6  B4D8               	btfsc	status,2,c
 28727  0082D8  D015               	goto	l23314
 28728  0082DA  0101               	movlb	1	; () banked
 28729  0082DC  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 28730  0082DE  B4D8               	btfsc	status,2,c
 28731  0082E0  D011               	goto	l23314
 28732  0082E2  D024               	goto	l23316
 28733  0082E4                     l23304:
 28734                           
 28735                           ;outputs_MC50.c: 1043:                 RGB_Set(0x20);
 28736  0082E4  0E20               	movlw	32
 28737  0082E6  ECBE  F04F         	call	_RGB_Set
 28738                           
 28739                           ;outputs_MC50.c: 1044:             break;
 28740  0082EA  D020               	goto	l23316
 28741  0082EC                     l23306:
 28742                           
 28743                           ;outputs_MC50.c: 1047:                 RGB_Set(0x04);
 28744  0082EC  0E04               	movlw	4
 28745  0082EE  ECBE  F04F         	call	_RGB_Set
 28746                           
 28747                           ;outputs_MC50.c: 1048:             break;
 28748  0082F2  D01C               	goto	l23316
 28749  0082F4                     l23308:
 28750                           
 28751                           ;outputs_MC50.c: 1051:                 RGB_Set(0x00);
 28752  0082F4  0E00               	movlw	0
 28753  0082F6  ECBE  F04F         	call	_RGB_Set
 28754                           
 28755                           ;outputs_MC50.c: 1052:             break;
 28756  0082FA  D018               	goto	l23316
 28757  0082FC                     l23310:
 28758                           
 28759                           ;outputs_MC50.c: 1055:                 RGB_Set(0x24);
 28760  0082FC  0E24               	movlw	36
 28761  0082FE  ECBE  F04F         	call	_RGB_Set
 28762                           
 28763                           ;outputs_MC50.c: 1056:             break;
 28764  008302  D014               	goto	l23316
 28765  008304                     l23314:
 28766  008304  5015               	movf	setRGB_ON@RGBLigth^0,w,c
 28767  008306  6E13               	movwf	??_setRGB_ON^0,c
 28768  008308  6A14               	clrf	(??_setRGB_ON+1)^0,c
 28769                           
 28770                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28771                           ; Switch size 1, requested type "simple"
 28772                           ; Number of cases is 1, Range of values is 0 to 0
 28773                           ; switch strategies available:
 28774                           ; Name         Instructions Cycles
 28775                           ; simple_byte            4     3 (average)
 28776                           ;	Chosen strategy is simple_byte
 28777  00830A  5014               	movf	(??_setRGB_ON+1)^0,w,c
 28778  00830C  0A00               	xorlw	0	; case 0
 28779  00830E  A4D8               	btfss	status,2,c
 28780  008310  D00D               	goto	l23316
 28781                           
 28782                           ; Switch size 1, requested type "simple"
 28783                           ; Number of cases is 4, Range of values is 1 to 4
 28784                           ; switch strategies available:
 28785                           ; Name         Instructions Cycles
 28786                           ; simple_byte           13     7 (average)
 28787                           ;	Chosen strategy is simple_byte
 28788  008312  5013               	movf	??_setRGB_ON^0,w,c
 28789  008314  0A01               	xorlw	1	; case 1
 28790  008316  B4D8               	btfsc	status,2,c
 28791  008318  D7ED               	goto	l23308
 28792  00831A  0A03               	xorlw	3	; case 2
 28793  00831C  B4D8               	btfsc	status,2,c
 28794  00831E  D7E6               	goto	l23306
 28795  008320  0A01               	xorlw	1	; case 3
 28796  008322  B4D8               	btfsc	status,2,c
 28797  008324  D7DF               	goto	l23304
 28798  008326  0A07               	xorlw	7	; case 4
 28799  008328  B4D8               	btfsc	status,2,c
 28800  00832A  D7E8               	goto	l23310
 28801  00832C                     l23316:
 28802                           
 28803                           ;outputs_MC50.c: 1061:     if(ts_system.timeFreqRGB<=0 && Freq!=0)
 28804  00832C  0101               	movlb	1	; () banked
 28805  00832E  BFBB               	btfsc	(_ts_system+29)& (0+255),7,b	;volatile
 28806  008330  D005               	goto	u27050
 28807  008332  51BB               	movf	(_ts_system+29)& (0+255),w,b	;volatile
 28808  008334  E113               	bnz	l2507
 28809  008336  05BA               	decf	(_ts_system+28)& (0+255),w,b	;volatile
 28810  008338  B0D8               	btfsc	status,0,c
 28811  00833A  0012               	return	
 28812  00833C                     u27050:
 28813                           
 28814                           ; BSR set to: 1
 28815  00833C  5011               	movf	setRGB_ON@Freq^0,w,c
 28816  00833E  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 28817  008340  B4D8               	btfsc	status,2,c
 28818  008342  0012               	return	
 28819                           
 28820                           ; BSR set to: 1
 28821                           ;outputs_MC50.c: 1062:     {;outputs_MC50.c: 1063:         ts_system.timeFreqRGB=Freq;
 28822  008344  C011  F1BA         	movff	setRGB_ON@Freq,_ts_system+28	;volatile
 28823  008348  C012  F1BB         	movff	setRGB_ON@Freq+1,_ts_system+29	;volatile
 28824                           
 28825                           ; BSR set to: 1
 28826                           ;outputs_MC50.c: 1064:         if(var_sys.upFaseRGB==1)
 28827  00834C  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 28828  00834E  A4D8               	btfss	status,2,c
 28829  008350  D003               	goto	l23326
 28830                           
 28831                           ; BSR set to: 1
 28832                           ;outputs_MC50.c: 1065:         {;outputs_MC50.c: 1066:             var_sys.upFaseRGB=0;
 28833  008352  0E00               	movlw	0
 28834  008354  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 28835                           
 28836                           ;outputs_MC50.c: 1067:         }
 28837  008356  0012               	return	
 28838  008358                     l23326:
 28839                           
 28840                           ; BSR set to: 1
 28841                           ;outputs_MC50.c: 1069:         {;outputs_MC50.c: 1070:             var_sys.upFaseRGB=1;
 28842  008358  0E01               	movlw	1
 28843  00835A  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 28844  00835C                     l2507:
 28845                           
 28846                           ; BSR set to: 1
 28847  00835C  0012               	return		;funcret
 28848  00835E                     __end_of_setRGB_ON:
 28849                           	callstack 0
 28850                           
 28851 ;; *************** function _RGB_Set *****************
 28852 ;; Defined at:
 28853 ;;		line 98 in file "outputs_MC50.c"
 28854 ;; Parameters:    Size  Location     Type
 28855 ;;  value           1    wreg     unsigned char 
 28856 ;; Auto vars:     Size  Location     Type
 28857 ;;  value           1   15[COMRAM] unsigned char 
 28858 ;; Return value:  Size  Location     Type
 28859 ;;                  1    wreg      void 
 28860 ;; Registers used:
 28861 ;;		wreg, status,2, status,0
 28862 ;; Tracked objects:
 28863 ;;		On entry : 0/0
 28864 ;;		On exit  : 0/0
 28865 ;;		Unchanged: 0/0
 28866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28868 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28870 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28871 ;;Total ram usage:        1 bytes
 28872 ;; Hardware stack levels used: 1
 28873 ;; Hardware stack levels required when called: 4
 28874 ;; This function calls:
 28875 ;;		Nothing
 28876 ;; This function is called by:
 28877 ;;		_setRGB_ON
 28878 ;; This function uses a non-reentrant model
 28879 ;;
 28880                           
 28881                           	psect	text117
 28882  009F7C                     __ptext117:
 28883                           	callstack 0
 28884  009F7C                     _RGB_Set:
 28885                           	callstack 24
 28886                           
 28887                           ; BSR set to: 1
 28888                           ;incstack = 0
 28889                           ;RGB_Set@value stored from wreg
 28890  009F7C  6E10               	movwf	RGB_Set@value^0,c
 28891                           
 28892                           ;outputs_MC50.c: 98: void RGB_Set(char value);outputs_MC50.c: 99: {;outputs_MC50.c: 100:
      +                              LATC &= 0xdb ;
 28893  009F7E  0EDB               	movlw	219
 28894  009F80  1685               	andwf	133,f,c	;volatile
 28895                           
 28896                           ;outputs_MC50.c: 101:    LATC |= value;
 28897  009F82  5010               	movf	RGB_Set@value^0,w,c	;volatile
 28898  009F84  1285               	iorwf	133,f,c	;volatile
 28899  009F86  9E83               	bcf	131,7,c	;volatile
 28900  009F88  0012               	return		;funcret
 28901  009F8A                     __end_of_RGB_Set:
 28902                           	callstack 0
 28903                           
 28904 ;; *************** function _setFlashLigth_ON *****************
 28905 ;; Defined at:
 28906 ;;		line 1077 in file "outputs_MC50.c"
 28907 ;; Parameters:    Size  Location     Type
 28908 ;;  Freq            2   15[COMRAM] int 
 28909 ;; Auto vars:     Size  Location     Type
 28910 ;;		None
 28911 ;; Return value:  Size  Location     Type
 28912 ;;                  1    wreg      void 
 28913 ;; Registers used:
 28914 ;;		wreg, status,2, status,0
 28915 ;; Tracked objects:
 28916 ;;		On entry : 3E/1
 28917 ;;		On exit  : 3F/1
 28918 ;;		Unchanged: 0/0
 28919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28920 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28923 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28924 ;;Total ram usage:        2 bytes
 28925 ;; Hardware stack levels used: 1
 28926 ;; Hardware stack levels required when called: 4
 28927 ;; This function calls:
 28928 ;;		Nothing
 28929 ;; This function is called by:
 28930 ;;		_ControlLights
 28931 ;; This function uses a non-reentrant model
 28932 ;;
 28933                           
 28934                           	psect	text118
 28935  009794                     __ptext118:
 28936                           	callstack 0
 28937  009794                     _setFlashLigth_ON:
 28938                           	callstack 25
 28939                           
 28940                           ;outputs_MC50.c: 1077: void setFlashLigth_ON(int Freq);outputs_MC50.c: 1078: {;outputs_M
      +                          C50.c: 1079:     if(Freq==0 || var_sys.upFaseFlashligth==1)
 28941                           
 28942                           ;incstack = 0
 28943  009794  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 28944  009796  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 28945  009798  B4D8               	btfsc	status,2,c
 28946  00979A  D004               	goto	u27000
 28947  00979C  0101               	movlb	1	; () banked
 28948  00979E  0525               	decf	(_var_sys+37)& (0+255),w,b	;volatile
 28949  0097A0  A4D8               	btfss	status,2,c
 28950  0097A2  D002               	goto	l2516
 28951  0097A4                     u27000:
 28952                           
 28953                           ;outputs_MC50.c: 1080:     {;outputs_MC50.c: 1081:         do { LATEbits.LATE2 = 1; } wh
      +                          ile(0);
 28954  0097A4  8487               	bsf	135,2,c	;volatile
 28955  0097A6  D001               	goto	l23292
 28956  0097A8                     l2516:
 28957                           
 28958                           ; BSR set to: 1
 28959  0097A8  9487               	bcf	135,2,c	;volatile
 28960  0097AA                     l23292:
 28961                           
 28962                           ;outputs_MC50.c: 1088:     if(ts_system.timeFreqFlashligth<=0 && Freq!=0)
 28963  0097AA  0101               	movlb	1	; () banked
 28964  0097AC  BFBD               	btfsc	(_ts_system+31)& (0+255),7,b	;volatile
 28965  0097AE  D005               	goto	u27010
 28966  0097B0  51BD               	movf	(_ts_system+31)& (0+255),w,b	;volatile
 28967  0097B2  E10D               	bnz	l2519
 28968  0097B4  05BC               	decf	(_ts_system+30)& (0+255),w,b	;volatile
 28969  0097B6  B0D8               	btfsc	status,0,c
 28970  0097B8  0012               	return	
 28971  0097BA                     u27010:
 28972                           
 28973                           ; BSR set to: 1
 28974  0097BA  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 28975  0097BC  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 28976  0097BE  B4D8               	btfsc	status,2,c
 28977  0097C0  0012               	return	
 28978                           
 28979                           ; BSR set to: 1
 28980                           ;outputs_MC50.c: 1089:     {;outputs_MC50.c: 1090:         ts_system.timeFreqFlashligth=
      +                          Freq;
 28981  0097C2  C010  F1BC         	movff	setFlashLigth_ON@Freq,_ts_system+30	;volatile
 28982  0097C6  C011  F1BD         	movff	setFlashLigth_ON@Freq+1,_ts_system+31	;volatile
 28983                           
 28984                           ; BSR set to: 1
 28985                           ;outputs_MC50.c: 1091:         var_sys.upFaseFlashligth ^= (1 << 0);
 28986  0097CA  0E01               	movlw	1
 28987  0097CC  1B25               	xorwf	(_var_sys+37)& (0+255),f,b	;volatile
 28988  0097CE                     l2519:
 28989                           
 28990                           ; BSR set to: 1
 28991  0097CE  0012               	return		;funcret
 28992  0097D0                     __end_of_setFlashLigth_ON:
 28993                           	callstack 0
 28994                           
 28995 ;; *************** function _ControlInputs *****************
 28996 ;; Defined at:
 28997 ;;		line 674 in file "inputs_MC50.c"
 28998 ;; Parameters:    Size  Location     Type
 28999 ;;		None
 29000 ;; Auto vars:     Size  Location     Type
 29001 ;;		None
 29002 ;; Return value:  Size  Location     Type
 29003 ;;                  1    wreg      void 
 29004 ;; Registers used:
 29005 ;;		wreg, status,2, status,0
 29006 ;; Tracked objects:
 29007 ;;		On entry : 3E/1
 29008 ;;		On exit  : 3E/0
 29009 ;;		Unchanged: 0/0
 29010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29015 ;;Total ram usage:        0 bytes
 29016 ;; Hardware stack levels used: 1
 29017 ;; Hardware stack levels required when called: 4
 29018 ;; This function calls:
 29019 ;;		Nothing
 29020 ;; This function is called by:
 29021 ;;		_main
 29022 ;; This function uses a non-reentrant model
 29023 ;;
 29024                           
 29025                           	psect	text119
 29026  007256                     __ptext119:
 29027                           	callstack 0
 29028  007256                     _ControlInputs:
 29029                           	callstack 26
 29030                           
 29031                           ;inputs_MC50.c: 678:     if (( var_sys.StateMotor==InClose || (((PORTEbits.RE1 == 1)&& v
      +                          ar_sys_NVM.Direction_motor == 0)||((PORTEbits.RE0 == 1)&&var_sys_NVM.Direction_motor == 
      +                          1))) && (var_sys.FimCurso_CloseIsEnabled == YES))
 29032                           
 29033                           ; BSR set to: 1
 29034                           ;incstack = 0
 29035  007256  0E03               	movlw	3
 29036  007258  0101               	movlb	1	; () banked
 29037  00725A  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 29038  00725C  B4D8               	btfsc	status,2,c
 29039  00725E  D00C               	goto	u30490
 29040                           
 29041                           ; BSR set to: 1
 29042  007260  A291               	btfss	145,1,c	;volatile
 29043  007262  D004               	goto	u30470
 29044                           
 29045                           ; BSR set to: 1
 29046  007264  0100               	movlb	0	; () banked
 29047  007266  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 29048  007268  B4D8               	btfsc	status,2,c
 29049  00726A  D006               	goto	u30490
 29050  00726C                     u30470:
 29051  00726C  A091               	btfss	145,0,c	;volatile
 29052  00726E  D00A               	goto	l24996
 29053  007270  0100               	movlb	0	; () banked
 29054  007272  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 29055  007274  A4D8               	btfss	status,2,c
 29056  007276  D006               	goto	l24996
 29057  007278                     u30490:
 29058  007278  0101               	movlb	1	; () banked
 29059  00727A  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 29060  00727C  A4D8               	btfss	status,2,c
 29061  00727E  D002               	goto	l24996
 29062                           
 29063                           ; BSR set to: 1
 29064                           ;inputs_MC50.c: 679:     {;inputs_MC50.c: 680:         var_sys.StateMotor = Stopped;
 29065  007280  0E00               	movlw	0
 29066  007282  6F00               	movwf	_var_sys& (0+255),b	;volatile
 29067  007284                     l24996:
 29068                           
 29069                           ;inputs_MC50.c: 683:     if((var_sys.StateMotor==InOpenFull || var_sys.StateMotor==InOpe
      +                          nWalk || (((PORTEbits.RE0 == 1) &&var_sys_NVM.Direction_motor == 0)||((PORTEbits.RE1 == 
      +                          1) && var_sys_NVM.Direction_motor == 1))) && (var_sys.FimCurso_OpenIsEnabled == YES))
 29070  007284  0101               	movlb	1	; () banked
 29071  007286  0500               	decf	_var_sys& (0+255),w,b	;volatile
 29072  007288  B4D8               	btfsc	status,2,c
 29073  00728A  D010               	goto	u30560
 29074                           
 29075                           ; BSR set to: 1
 29076  00728C  0E02               	movlw	2
 29077  00728E  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 29078  007290  B4D8               	btfsc	status,2,c
 29079  007292  D00C               	goto	u30560
 29080                           
 29081                           ; BSR set to: 1
 29082  007294  A091               	btfss	145,0,c	;volatile
 29083  007296  D004               	goto	u30540
 29084                           
 29085                           ; BSR set to: 1
 29086  007298  0100               	movlb	0	; () banked
 29087  00729A  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 29088  00729C  B4D8               	btfsc	status,2,c
 29089  00729E  D006               	goto	u30560
 29090  0072A0                     u30540:
 29091  0072A0  A291               	btfss	145,1,c	;volatile
 29092  0072A2  D00A               	goto	l25010
 29093  0072A4  0100               	movlb	0	; () banked
 29094  0072A6  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 29095  0072A8  A4D8               	btfss	status,2,c
 29096  0072AA  D006               	goto	l25010
 29097  0072AC                     u30560:
 29098  0072AC  0101               	movlb	1	; () banked
 29099  0072AE  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 29100  0072B0  A4D8               	btfss	status,2,c
 29101  0072B2  D002               	goto	l25010
 29102                           
 29103                           ; BSR set to: 1
 29104                           ;inputs_MC50.c: 684:     {;inputs_MC50.c: 685:         var_sys.StateMotor = Stopped;
 29105  0072B4  0E00               	movlw	0
 29106  0072B6  6F00               	movwf	_var_sys& (0+255),b	;volatile
 29107  0072B8                     l25010:
 29108                           
 29109                           ;inputs_MC50.c: 688:     if (var_sys.LearningIsEnabled != YES){
 29110  0072B8  0101               	movlb	1	; () banked
 29111  0072BA  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 29112  0072BC  B4D8               	btfsc	status,2,c
 29113  0072BE  0012               	return	
 29114                           
 29115                           ; BSR set to: 1
 29116                           ;inputs_MC50.c: 690:         if((var_sys_NVM.photoCellIsON == 1) && (var_sys.photoCellIs
      +                          Obstructed == YES) && var_sys.AutoInversionActive==NO)
 29117  0072C0  0100               	movlb	0	; () banked
 29118  0072C2  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 29119  0072C4  A4D8               	btfss	status,2,c
 29120  0072C6  D02B               	goto	l25036
 29121                           
 29122                           ; BSR set to: 0
 29123  0072C8  0101               	movlb	1	; () banked
 29124  0072CA  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 29125  0072CC  A4D8               	btfss	status,2,c
 29126  0072CE  D027               	goto	l25036
 29127                           
 29128                           ; BSR set to: 1
 29129  0072D0  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 29130  0072D2  A4D8               	btfss	status,2,c
 29131  0072D4  D024               	goto	l25036
 29132                           
 29133                           ; BSR set to: 1
 29134                           ;inputs_MC50.c: 691:         {;inputs_MC50.c: 699:             if((var_sys.StateMotor==I
      +                          nOpenFull || var_sys.StateMotor==InOpenWalk) && (var_sys_NVM.photoCellInOpen==1))
 29135  0072D6  0500               	decf	_var_sys& (0+255),w,b	;volatile
 29136  0072D8  B4D8               	btfsc	status,2,c
 29137  0072DA  D004               	goto	u30630
 29138                           
 29139                           ; BSR set to: 1
 29140  0072DC  0E02               	movlw	2
 29141  0072DE  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 29142  0072E0  A4D8               	btfss	status,2,c
 29143  0072E2  D007               	goto	l25026
 29144  0072E4                     u30630:
 29145                           
 29146                           ; BSR set to: 1
 29147  0072E4  0100               	movlb	0	; () banked
 29148  0072E6  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 29149  0072E8  A4D8               	btfss	status,2,c
 29150  0072EA  D003               	goto	l25026
 29151                           
 29152                           ; BSR set to: 0
 29153                           ;inputs_MC50.c: 700:             {;inputs_MC50.c: 701:                 var_sys.StateMoto
      +                          r = Stopped;
 29154  0072EC  0E00               	movlw	0
 29155  0072EE  0101               	movlb	1	; () banked
 29156  0072F0  D015               	goto	L104
 29157  0072F2                     l25026:
 29158  0072F2  0E03               	movlw	3
 29159  0072F4  0101               	movlb	1	; () banked
 29160  0072F6  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 29161  0072F8  A4D8               	btfss	status,2,c
 29162  0072FA  D011               	goto	l25036
 29163                           
 29164                           ; BSR set to: 1
 29165  0072FC  0100               	movlb	0	; () banked
 29166  0072FE  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 29167  007300  A4D8               	btfss	status,2,c
 29168  007302  D00D               	goto	l25036
 29169                           
 29170                           ; BSR set to: 0
 29171  007304  0101               	movlb	1	; () banked
 29172  007306  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 29173  007308  D005               	goto	u30670
 29174  00730A  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 29175  00730C  E108               	bnz	l25036
 29176  00730E  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 29177  007310  B0D8               	btfsc	status,0,c
 29178  007312  D005               	goto	l25036
 29179  007314                     u30670:
 29180                           
 29181                           ; BSR set to: 1
 29182  007314  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 29183  007316  A4D8               	btfss	status,2,c
 29184  007318  D002               	goto	l25036
 29185                           
 29186                           ; BSR set to: 1
 29187                           ;inputs_MC50.c: 706:             {;inputs_MC50.c: 707:                 var_sys.StateMoto
      +                          r = Stopped;
 29188  00731A  0E00               	movlw	0
 29189  00731C                     L104:
 29190  00731C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 29191  00731E                     l25036:
 29192                           
 29193                           ;inputs_MC50.c: 713:         if((var_sys_NVM.securityBandIsON == 1 || var_sys_NVM.Stopbo
      +                          ton == 1) && (var_sys.SecurityBarIsObstructed == YES && var_sys.AutoInversionActive == N
      +                          O))
 29194  00731E  0100               	movlb	0	; () banked
 29195  007320  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 29196  007322  B4D8               	btfsc	status,2,c
 29197  007324  D003               	goto	u30700
 29198                           
 29199                           ; BSR set to: 0
 29200  007326  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 29201  007328  A4D8               	btfss	status,2,c
 29202  00732A  0012               	return	
 29203  00732C                     u30700:
 29204                           
 29205                           ; BSR set to: 0
 29206  00732C  0101               	movlb	1	; () banked
 29207  00732E  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 29208  007330  A4D8               	btfss	status,2,c
 29209  007332  0012               	return	
 29210                           
 29211                           ; BSR set to: 1
 29212  007334  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 29213  007336  A4D8               	btfss	status,2,c
 29214  007338  0012               	return	
 29215                           
 29216                           ; BSR set to: 1
 29217                           ;inputs_MC50.c: 714:         {;inputs_MC50.c: 723:             if(var_sys.StateMotor == 
      +                          InClose && (var_sys_NVM.securityBandInOpen == 0))
 29218  00733A  0E03               	movlw	3
 29219  00733C  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 29220  00733E  A4D8               	btfss	status,2,c
 29221  007340  D008               	goto	l25050
 29222                           
 29223                           ; BSR set to: 1
 29224  007342  0100               	movlb	0	; () banked
 29225  007344  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 29226  007346  A4D8               	btfss	status,2,c
 29227  007348  D004               	goto	l25050
 29228                           
 29229                           ; BSR set to: 0
 29230                           ;inputs_MC50.c: 724:             {;inputs_MC50.c: 725:                 var_sys.StateMoto
      +                          r = Stopped;
 29231  00734A  0E00               	movlw	0
 29232  00734C  0101               	movlb	1	; () banked
 29233  00734E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 29234                           
 29235                           ;inputs_MC50.c: 727:             }
 29236  007350  0012               	return	
 29237  007352                     l25050:
 29238  007352  0101               	movlb	1	; () banked
 29239  007354  0500               	decf	_var_sys& (0+255),w,b	;volatile
 29240  007356  B4D8               	btfsc	status,2,c
 29241  007358  D004               	goto	u30760
 29242                           
 29243                           ; BSR set to: 1
 29244  00735A  0E02               	movlw	2
 29245  00735C  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 29246  00735E  A4D8               	btfss	status,2,c
 29247  007360  D004               	goto	u30770
 29248  007362                     u30760:
 29249                           
 29250                           ; BSR set to: 1
 29251  007362  0100               	movlb	0	; () banked
 29252  007364  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 29253  007366  B4D8               	btfsc	status,2,c
 29254  007368  D004               	goto	u30780
 29255  00736A                     u30770:
 29256  00736A  0100               	movlb	0	; () banked
 29257  00736C  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 29258  00736E  A4D8               	btfss	status,2,c
 29259  007370  0012               	return	
 29260  007372                     u30780:
 29261                           
 29262                           ; BSR set to: 0
 29263                           ;inputs_MC50.c: 730:             {;inputs_MC50.c: 731:                 var_sys.StateMoto
      +                          r = Stopped;
 29264  007372  0E00               	movlw	0
 29265  007374  0101               	movlb	1	; () banked
 29266  007376  6F00               	movwf	_var_sys& (0+255),b	;volatile
 29267  007378  0012               	return	
 29268  00737A                     __end_of_ControlInputs:
 29269                           	callstack 0
 29270                           
 29271 ;; *************** function _ControlCurrent *****************
 29272 ;; Defined at:
 29273 ;;		line 342 in file "controlCurrent_MC50.c"
 29274 ;; Parameters:    Size  Location     Type
 29275 ;;		None
 29276 ;; Auto vars:     Size  Location     Type
 29277 ;;		None
 29278 ;; Return value:  Size  Location     Type
 29279 ;;                  1    wreg      void 
 29280 ;; Registers used:
 29281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29282 ;; Tracked objects:
 29283 ;;		On entry : 3E/1
 29284 ;;		On exit  : 3E/0
 29285 ;;		Unchanged: 0/0
 29286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29289 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29290 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29291 ;;Total ram usage:        4 bytes
 29292 ;; Hardware stack levels used: 1
 29293 ;; Hardware stack levels required when called: 6
 29294 ;; This function calls:
 29295 ;;		_GetMotorPower
 29296 ;;		_getCurrentComparator
 29297 ;;		_refreshADCZeroOffset
 29298 ;;		_refreshCurrent
 29299 ;; This function is called by:
 29300 ;;		_main
 29301 ;; This function uses a non-reentrant model
 29302 ;;
 29303                           
 29304                           	psect	text120
 29305  006C10                     __ptext120:
 29306                           	callstack 0
 29307  006C10                     _ControlCurrent:
 29308                           	callstack 24
 29309                           
 29310                           ;controlCurrent_MC50.c: 345:     refreshCurrent();
 29311                           
 29312                           ;incstack = 0
 29313  006C10  ECC2  F04A         	call	_refreshCurrent	;wreg free
 29314                           
 29315                           ;controlCurrent_MC50.c: 351:     refreshADCZeroOffset();
 29316  006C14  EC50  F03B         	call	_refreshADCZeroOffset	;wreg free
 29317                           
 29318                           ;controlCurrent_MC50.c: 354:     var_sys.velocityActual = GetMotorPower();
 29319  006C18  EC12  F03E         	call	_GetMotorPower	;wreg free
 29320  006C1C  6E23               	movwf	??_ControlCurrent^0,c
 29321  006C1E  5023               	movf	??_ControlCurrent^0,w,c
 29322  006C20  6F38               	movwf	(_var_sys+56)& (0+255),b	;volatile
 29323  006C22  6B39               	clrf	(_var_sys+57)& (0+255),b	;volatile
 29324                           
 29325                           ; BSR set to: 1
 29326                           ;controlCurrent_MC50.c: 355:     var_sys.ActualComparatorCurrent = getCurrentComparator(
      +                          );
 29327  006C24  EC1A  F032         	call	_getCurrentComparator	;wreg free
 29328  006C28  C016  F134         	movff	?_getCurrentComparator,_var_sys+52	;volatile
 29329  006C2C  C017  F135         	movff	?_getCurrentComparator+1,_var_sys+53	;volatile
 29330  006C30  C018  F136         	movff	?_getCurrentComparator+2,_var_sys+54	;volatile
 29331  006C34  C019  F137         	movff	?_getCurrentComparator+3,_var_sys+55	;volatile
 29332                           
 29333                           ; BSR set to: 1
 29334                           ;controlCurrent_MC50.c: 357:     if(var_sys.StateMotor == Stopped)
 29335  006C38  5100               	movf	_var_sys& (0+255),w,b	;volatile
 29336  006C3A  A4D8               	btfss	status,2,c
 29337  006C3C  D00F               	goto	l24706
 29338                           
 29339                           ; BSR set to: 1
 29340                           ;controlCurrent_MC50.c: 358:     {;controlCurrent_MC50.c: 360:         numberOfErrorCurr
      +                          ent=0;
 29341  006C3E  0E00               	movlw	0
 29342  006C40  0100               	movlb	0	; () banked
 29343  006C42  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 29344                           
 29345                           ;controlCurrent_MC50.c: 361:         var_sys.CurrentAlarmIsOn=NO;
 29346  006C44  0E00               	movlw	0
 29347  006C46  0101               	movlb	1	; () banked
 29348  006C48  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 29349                           
 29350                           ;controlCurrent_MC50.c: 362:         var_sys.InvertionCurrentOpening=NO;
 29351  006C4A  0E00               	movlw	0
 29352  006C4C  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 29353                           
 29354                           ;controlCurrent_MC50.c: 363:         var_sys.InvertionCurrentClosing=NO;
 29355  006C4E  0E00               	movlw	0
 29356  006C50  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 29357                           
 29358                           ;controlCurrent_MC50.c: 364:         ts_system.TimeTransitionDecelaration=(1000/50);
 29359  006C52  0E00               	movlw	0
 29360  006C54  6FD7               	movwf	(_ts_system+57)& (0+255),b	;volatile
 29361  006C56  0E14               	movlw	20
 29362  006C58  6FD6               	movwf	(_ts_system+56)& (0+255),b	;volatile
 29363                           
 29364                           ;controlCurrent_MC50.c: 365:     }
 29365  006C5A  0012               	return	
 29366  006C5C                     l24706:
 29367                           
 29368                           ; BSR set to: 1
 29369  006C5C  517B               	movf	_powerControl_st& (0+255),w,b
 29370  006C5E  A4D8               	btfss	status,2,c
 29371  006C60  D05D               	goto	l24740
 29372                           
 29373                           ; BSR set to: 1
 29374                           ;controlCurrent_MC50.c: 368:     {;controlCurrent_MC50.c: 376:         ts_system.TimeTra
      +                          nsitionDecelaration=(1000/50);
 29375  006C62  0E00               	movlw	0
 29376  006C64  6FD7               	movwf	(_ts_system+57)& (0+255),b	;volatile
 29377  006C66  0E14               	movlw	20
 29378  006C68  6FD6               	movwf	(_ts_system+56)& (0+255),b	;volatile
 29379                           
 29380                           ; BSR set to: 1
 29381                           ;controlCurrent_MC50.c: 377:         if (( var_sys.ActualCurrent>var_sys.ActualComparato
      +                          rCurrent ) && (ts_system.TimeChargeCondesador<=0)&&var_sys_NVM.motorSensitivity!=0 && ts
      +                          _system.TimeReleCapacitor<=0)
 29382  006C6A  512E               	movf	(_var_sys+46)& (0+255),w,b	;volatile
 29383  006C6C  6E23               	movwf	??_ControlCurrent^0,c
 29384  006C6E  512F               	movf	(_var_sys+47)& (0+255),w,b	;volatile
 29385  006C70  6E24               	movwf	(??_ControlCurrent+1)^0,c
 29386  006C72  6A25               	clrf	(??_ControlCurrent+2)^0,c
 29387  006C74  6A26               	clrf	(??_ControlCurrent+3)^0,c
 29388  006C76  5023               	movf	??_ControlCurrent^0,w,c
 29389  006C78  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 29390  006C7A  5024               	movf	(??_ControlCurrent+1)^0,w,c
 29391  006C7C  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 29392  006C7E  5025               	movf	(??_ControlCurrent+2)^0,w,c
 29393  006C80  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 29394  006C82  5026               	movf	(??_ControlCurrent+3)^0,w,c
 29395  006C84  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 29396  006C86  B0D8               	btfsc	status,0,c
 29397  006C88  D03E               	goto	l24738
 29398                           
 29399                           ; BSR set to: 1
 29400  006C8A  BFB9               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 29401  006C8C  D005               	goto	u29830
 29402  006C8E  51B9               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 29403  006C90  E13A               	bnz	l24738
 29404  006C92  05B8               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 29405  006C94  B0D8               	btfsc	status,0,c
 29406  006C96  D037               	goto	l24738
 29407  006C98                     u29830:
 29408                           
 29409                           ; BSR set to: 1
 29410  006C98  0100               	movlb	0	; () banked
 29411  006C9A  519B               	movf	(_var_sys_NVM+3)& (0+255),w,b	;volatile
 29412  006C9C  B4D8               	btfsc	status,2,c
 29413  006C9E  D033               	goto	l24738
 29414                           
 29415                           ; BSR set to: 0
 29416  006CA0  0101               	movlb	1	; () banked
 29417  006CA2  BFE1               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 29418  006CA4  D005               	goto	u29850
 29419  006CA6  51E1               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 29420  006CA8  E12E               	bnz	l24738
 29421  006CAA  05E0               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 29422  006CAC  B0D8               	btfsc	status,0,c
 29423  006CAE  D02B               	goto	l24738
 29424  006CB0                     u29850:
 29425                           
 29426                           ; BSR set to: 1
 29427                           ;controlCurrent_MC50.c: 378:         {;controlCurrent_MC50.c: 379:              if (numb
      +                          erOfErrorCurrent >=1)
 29428  006CB0  0100               	movlb	0	; () banked
 29429  006CB2  518E               	movf	_numberOfErrorCurrent& (0+255),w,b	;volatile
 29430  006CB4  B4D8               	btfsc	status,2,c
 29431  006CB6  D00B               	goto	l24724
 29432                           
 29433                           ; BSR set to: 0
 29434                           ;controlCurrent_MC50.c: 380:              {;controlCurrent_MC50.c: 381:                 
      +                           if(erroranterior > var_sys.ActualCurrent )
 29435  006CB8  0101               	movlb	1	; () banked
 29436  006CBA  518B               	movf	_erroranterior& (0+255),w,b	;volatile
 29437  006CBC  5D2E               	subwf	(_var_sys+46)& (0+255),w,b	;volatile
 29438  006CBE  518C               	movf	(_erroranterior+1)& (0+255),w,b	;volatile
 29439  006CC0  592F               	subwfb	(_var_sys+47)& (0+255),w,b	;volatile
 29440  006CC2  B0D8               	btfsc	status,0,c
 29441  006CC4  D004               	goto	l24724
 29442                           
 29443                           ; BSR set to: 1
 29444                           ;controlCurrent_MC50.c: 382:                  {;controlCurrent_MC50.c: 383:             
      +                                 numberOfErrorCurrent = 0;
 29445  006CC6  0E00               	movlw	0
 29446  006CC8  0100               	movlb	0	; () banked
 29447  006CCA  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 29448                           
 29449                           ;controlCurrent_MC50.c: 384:                  }
 29450  006CCC  D002               	goto	l24726
 29451  006CCE                     l24724:
 29452                           
 29453                           ;controlCurrent_MC50.c: 386:                  {;controlCurrent_MC50.c: 387:             
      +                                 numberOfErrorCurrent++;
 29454  006CCE  0100               	movlb	0	; () banked
 29455  006CD0  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 29456  006CD2                     l24726:
 29457                           
 29458                           ; BSR set to: 0
 29459                           ;controlCurrent_MC50.c: 389:                  erroranterior = var_sys.ActualCurrent;
 29460  006CD2  C12E  F18B         	movff	_var_sys+46,_erroranterior	;volatile
 29461  006CD6  C12F  F18C         	movff	_var_sys+47,_erroranterior+1	;volatile
 29462                           
 29463                           ; BSR set to: 0
 29464                           ;controlCurrent_MC50.c: 398:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>1)
 29465                           
 29466                           ;controlCurrent_MC50.c: 390:              }
 29467  006CDA  0101               	movlb	1	; () banked
 29468  006CDC  BFCD               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 29469  006CDE  D005               	goto	u29880
 29470  006CE0  51CD               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 29471  006CE2  E14F               	bnz	l1405
 29472  006CE4  05CC               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 29473  006CE6  B0D8               	btfsc	status,0,c
 29474  006CE8  0012               	return	
 29475  006CEA                     u29880:
 29476                           
 29477                           ; BSR set to: 1
 29478  006CEA  0E01               	movlw	1
 29479  006CEC  0100               	movlb	0	; () banked
 29480  006CEE  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 29481  006CF0  0012               	return	
 29482                           
 29483                           ; BSR set to: 0
 29484                           ;controlCurrent_MC50.c: 399:             {;controlCurrent_MC50.c: 400:                 v
      +                          ar_sys.StateMotor = Stopped;
 29485  006CF2  0E00               	movlw	0
 29486  006CF4  0101               	movlb	1	; () banked
 29487  006CF6  6F00               	movwf	_var_sys& (0+255),b	;volatile
 29488                           
 29489                           ;controlCurrent_MC50.c: 401:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 29490  006CF8  0E00               	movlw	0
 29491  006CFA  6FC9               	movwf	(_ts_system+43)& (0+255),b	;volatile
 29492  006CFC  0EC8               	movlw	200
 29493  006CFE  6FC8               	movwf	(_ts_system+42)& (0+255),b	;volatile
 29494                           
 29495                           ;controlCurrent_MC50.c: 402:                 var_sys.CurrentAlarmIsOn=YES;
 29496  006D00  0E01               	movlw	1
 29497  006D02  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 29498  006D04  0012               	return	
 29499  006D06                     l24738:
 29500                           
 29501                           ;controlCurrent_MC50.c: 409:         {;controlCurrent_MC50.c: 410:             numberOfE
      +                          rrorCurrent=0;
 29502  006D06  0E00               	movlw	0
 29503  006D08  0100               	movlb	0	; () banked
 29504  006D0A  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 29505                           
 29506                           ;controlCurrent_MC50.c: 411:             var_sys.CurrentAlarmIsOn=NO;
 29507  006D0C  0E00               	movlw	0
 29508  006D0E  0101               	movlb	1	; () banked
 29509  006D10  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 29510                           
 29511                           ;controlCurrent_MC50.c: 412:             var_sys.InvertionCurrentOpening=NO;
 29512  006D12  0E00               	movlw	0
 29513  006D14  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 29514                           
 29515                           ;controlCurrent_MC50.c: 413:             var_sys.InvertionCurrentClosing=NO;
 29516  006D16  0E00               	movlw	0
 29517  006D18  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 29518  006D1A  0012               	return	
 29519  006D1C                     l24740:
 29520                           
 29521                           ; BSR set to: 1
 29522                           ;controlCurrent_MC50.c: 419:     {;controlCurrent_MC50.c: 420:         if( ( var_sys.Act
      +                          ualHistCurrent<var_sys.ActualComparatorCurrent ) && (ts_system.TimeChargeCondesador<=0)&
      +                          &ts_system.TimeTransitionDecelaration<=0&&var_sys_NVM.decelarationSensivity!=0)
 29523  006D1C  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 29524  006D1E  5D30               	subwf	(_var_sys+48)& (0+255),w,b	;volatile
 29525  006D20  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 29526  006D22  5931               	subwfb	(_var_sys+49)& (0+255),w,b	;volatile
 29527  006D24  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 29528  006D26  5932               	subwfb	(_var_sys+50)& (0+255),w,b	;volatile
 29529  006D28  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 29530  006D2A  5933               	subwfb	(_var_sys+51)& (0+255),w,b	;volatile
 29531  006D2C  B0D8               	btfsc	status,0,c
 29532  006D2E  D7EB               	goto	l24738
 29533                           
 29534                           ; BSR set to: 1
 29535  006D30  BFB9               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 29536  006D32  D005               	goto	u29910
 29537  006D34  51B9               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 29538  006D36  E1E7               	bnz	l24738
 29539  006D38  05B8               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 29540  006D3A  B0D8               	btfsc	status,0,c
 29541  006D3C  D7E4               	goto	l24738
 29542  006D3E                     u29910:
 29543                           
 29544                           ; BSR set to: 1
 29545  006D3E  BFD7               	btfsc	(_ts_system+57)& (0+255),7,b	;volatile
 29546  006D40  D005               	goto	u29920
 29547  006D42  51D7               	movf	(_ts_system+57)& (0+255),w,b	;volatile
 29548  006D44  E1E0               	bnz	l24738
 29549  006D46  05D6               	decf	(_ts_system+56)& (0+255),w,b	;volatile
 29550  006D48  B0D8               	btfsc	status,0,c
 29551  006D4A  D7DD               	goto	l24738
 29552  006D4C                     u29920:
 29553                           
 29554                           ; BSR set to: 1
 29555  006D4C  0100               	movlb	0	; () banked
 29556  006D4E  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 29557  006D50  B4D8               	btfsc	status,2,c
 29558  006D52  D7D9               	goto	l24738
 29559                           
 29560                           ; BSR set to: 0
 29561                           ;controlCurrent_MC50.c: 421:         {;controlCurrent_MC50.c: 423:             numberOfE
      +                          rrorCurrent++;
 29562  006D54  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 29563                           
 29564                           ; BSR set to: 0
 29565                           ;controlCurrent_MC50.c: 424:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>2)
 29566  006D56  0101               	movlb	1	; () banked
 29567  006D58  BFCD               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 29568  006D5A  D005               	goto	u29940
 29569  006D5C  51CD               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 29570  006D5E  E111               	bnz	l1405
 29571  006D60  05CC               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 29572  006D62  B0D8               	btfsc	status,0,c
 29573  006D64  0012               	return	
 29574  006D66                     u29940:
 29575                           
 29576                           ; BSR set to: 1
 29577  006D66  0E02               	movlw	2
 29578  006D68  0100               	movlb	0	; () banked
 29579  006D6A  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 29580  006D6C  0012               	return	
 29581                           
 29582                           ; BSR set to: 0
 29583                           ;controlCurrent_MC50.c: 425:             {;controlCurrent_MC50.c: 426:                 v
      +                          ar_sys.StateMotor = Stopped;
 29584  006D6E  0E00               	movlw	0
 29585  006D70  0101               	movlb	1	; () banked
 29586  006D72  6F00               	movwf	_var_sys& (0+255),b	;volatile
 29587                           
 29588                           ;controlCurrent_MC50.c: 427:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 29589  006D74  0E00               	movlw	0
 29590  006D76  6FC9               	movwf	(_ts_system+43)& (0+255),b	;volatile
 29591  006D78  0EC8               	movlw	200
 29592  006D7A  6FC8               	movwf	(_ts_system+42)& (0+255),b	;volatile
 29593                           
 29594                           ;controlCurrent_MC50.c: 428:                 var_sys.CurrentAlarmIsOn=YES;
 29595  006D7C  0E01               	movlw	1
 29596  006D7E  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 29597  006D80  0012               	return	
 29598  006D82                     l1405:
 29599  006D82  0012               	return		;funcret
 29600  006D84                     __end_of_ControlCurrent:
 29601                           	callstack 0
 29602                           
 29603 ;; *************** function _refreshCurrent *****************
 29604 ;; Defined at:
 29605 ;;		line 233 in file "controlCurrent_MC50.c"
 29606 ;; Parameters:    Size  Location     Type
 29607 ;;		None
 29608 ;; Auto vars:     Size  Location     Type
 29609 ;;		None
 29610 ;; Return value:  Size  Location     Type
 29611 ;;                  1    wreg      void 
 29612 ;; Registers used:
 29613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29614 ;; Tracked objects:
 29615 ;;		On entry : 3E/1
 29616 ;;		On exit  : 3F/0
 29617 ;;		Unchanged: 0/0
 29618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29623 ;;Total ram usage:        0 bytes
 29624 ;; Hardware stack levels used: 1
 29625 ;; Hardware stack levels required when called: 5
 29626 ;; This function calls:
 29627 ;;		_saveEnergyADCHist
 29628 ;;		_sumEnergyADC
 29629 ;;		_sumHIST
 29630 ;; This function is called by:
 29631 ;;		_ControlCurrent
 29632 ;; This function uses a non-reentrant model
 29633 ;;
 29634                           
 29635                           	psect	text121
 29636  009584                     __ptext121:
 29637                           	callstack 0
 29638  009584                     _refreshCurrent:
 29639                           	callstack 24
 29640                           
 29641                           ;controlCurrent_MC50.c: 238:     if ( (var_sys_NVM.electricBrake==1) && (ts_system.TimeE
      +                          lectricBrake>0) )
 29642                           
 29643                           ;incstack = 0
 29644  009584  0100               	movlb	0	; () banked
 29645  009586  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 29646  009588  A4D8               	btfss	status,2,c
 29647  00958A  D008               	goto	l23016
 29648                           
 29649                           ; BSR set to: 0
 29650  00958C  0101               	movlb	1	; () banked
 29651  00958E  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 29652  009590  D005               	goto	l23016
 29653  009592  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 29654  009594  E109               	bnz	l1372
 29655  009596  05C6               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 29656  009598  B0D8               	btfsc	status,0,c
 29657  00959A  D006               	goto	l1372
 29658  00959C                     l23016:
 29659                           
 29660                           ;controlCurrent_MC50.c: 243:     {;controlCurrent_MC50.c: 245:         var_sys.ActualCur
      +                          rent=sumEnergyADC();
 29661  00959C  ECF5  F041         	call	_sumEnergyADC	;wreg free
 29662  0095A0  C010  F12E         	movff	?_sumEnergyADC,_var_sys+46	;volatile
 29663  0095A4  C011  F12F         	movff	?_sumEnergyADC+1,_var_sys+47	;volatile
 29664  0095A8                     l1372:
 29665                           
 29666                           ; BSR set to: 1
 29667                           ;controlCurrent_MC50.c: 248:     saveEnergyADCHist(var_sys.ActualCurrent);
 29668  0095A8  C12E  F010         	movff	_var_sys+46,saveEnergyADCHist@valueToSave	;volatile
 29669  0095AC  C12F  F011         	movff	_var_sys+47,saveEnergyADCHist@valueToSave+1	;volatile
 29670  0095B0  ECE7  F04D         	call	_saveEnergyADCHist	;wreg free
 29671                           
 29672                           ;controlCurrent_MC50.c: 250:     var_sys.ActualHistCurrent=sumHIST();
 29673  0095B4  EC4D  F03C         	call	_sumHIST	;wreg free
 29674  0095B8  C010  F130         	movff	?_sumHIST,_var_sys+48	;volatile
 29675  0095BC  C011  F131         	movff	?_sumHIST+1,_var_sys+49	;volatile
 29676  0095C0  C012  F132         	movff	?_sumHIST+2,_var_sys+50	;volatile
 29677  0095C4  C013  F133         	movff	?_sumHIST+3,_var_sys+51	;volatile
 29678                           
 29679                           ; BSR set to: 0
 29680  0095C8  0012               	return		;funcret
 29681  0095CA                     __end_of_refreshCurrent:
 29682                           	callstack 0
 29683                           
 29684 ;; *************** function _sumHIST *****************
 29685 ;; Defined at:
 29686 ;;		line 199 in file "controlCurrent_MC50.c"
 29687 ;; Parameters:    Size  Location     Type
 29688 ;;		None
 29689 ;; Auto vars:     Size  Location     Type
 29690 ;;  sumH            4   27[COMRAM] unsigned long 
 29691 ;;  min             2   25[COMRAM] unsigned int 
 29692 ;;  max             2   23[COMRAM] unsigned int 
 29693 ;;  i               1   31[COMRAM] unsigned char 
 29694 ;; Return value:  Size  Location     Type
 29695 ;;                  4   15[COMRAM] unsigned long 
 29696 ;; Registers used:
 29697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29698 ;; Tracked objects:
 29699 ;;		On entry : 3F/0
 29700 ;;		On exit  : 3F/0
 29701 ;;		Unchanged: 3F/0
 29702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29703 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29704 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29705 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29706 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29707 ;;Total ram usage:       17 bytes
 29708 ;; Hardware stack levels used: 1
 29709 ;; Hardware stack levels required when called: 4
 29710 ;; This function calls:
 29711 ;;		Nothing
 29712 ;; This function is called by:
 29713 ;;		_refreshCurrent
 29714 ;; This function uses a non-reentrant model
 29715 ;;
 29716                           
 29717                           	psect	text122
 29718  00789A                     __ptext122:
 29719                           	callstack 0
 29720  00789A                     _sumHIST:
 29721                           	callstack 24
 29722                           
 29723                           ; BSR set to: 0
 29724                           ;controlCurrent_MC50.c: 201:     unsigned char i;;controlCurrent_MC50.c: 202:     unsign
      +                          ed long sumH = 0;
 29725                           
 29726                           ; BSR set to: 0
 29727                           ;incstack = 0
 29728  00789A  0E00               	movlw	0
 29729  00789C  6E1C               	movwf	sumHIST@sumH^0,c
 29730  00789E  0E00               	movlw	0
 29731  0078A0  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 29732  0078A2  0E00               	movlw	0
 29733  0078A4  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 29734  0078A6  0E00               	movlw	0
 29735  0078A8  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 29736                           
 29737                           ;controlCurrent_MC50.c: 203:     unsigned int max=0;
 29738  0078AA  0E00               	movlw	0
 29739  0078AC  6E19               	movwf	(sumHIST@max+1)^0,c
 29740  0078AE  0E00               	movlw	0
 29741  0078B0  6E18               	movwf	sumHIST@max^0,c
 29742                           
 29743                           ; BSR set to: 0
 29744                           ;controlCurrent_MC50.c: 204:     unsigned int min=0xFFFF;
 29745  0078B2  681A               	setf	sumHIST@min^0,c
 29746  0078B4  681B               	setf	(sumHIST@min+1)^0,c
 29747                           
 29748                           ;controlCurrent_MC50.c: 207:     for( i = 0; i<(10); i++)
 29749  0078B6  0E00               	movlw	0
 29750  0078B8  6E20               	movwf	sumHIST@i^0,c
 29751  0078BA                     l21366:
 29752                           
 29753                           ; BSR set to: 0
 29754                           ;controlCurrent_MC50.c: 208:     {;controlCurrent_MC50.c: 209:         sumH=sumH+SumEner
      +                          gyADCHist_array[i];
 29755  0078BA  5020               	movf	sumHIST@i^0,w,c
 29756  0078BC  0D02               	mullw	2
 29757  0078BE  0E60               	movlw	low _SumEnergyADCHist_array
 29758  0078C0  24F3               	addwf	243,w,c
 29759  0078C2  6ED9               	movwf	fsr2l,c
 29760  0078C4  0E02               	movlw	high _SumEnergyADCHist_array
 29761  0078C6  20F4               	addwfc	prodh,w,c
 29762  0078C8  6EDA               	movwf	fsr2h,c
 29763  0078CA  CFDE F014          	movff	postinc2,??_sumHIST
 29764  0078CE  CFDD F015          	movff	postdec2,??_sumHIST+1
 29765  0078D2  5014               	movf	??_sumHIST^0,w,c
 29766  0078D4  241C               	addwf	sumHIST@sumH^0,w,c
 29767  0078D6  6E1C               	movwf	sumHIST@sumH^0,c
 29768  0078D8  5015               	movf	(??_sumHIST+1)^0,w,c
 29769  0078DA  201D               	addwfc	(sumHIST@sumH+1)^0,w,c
 29770  0078DC  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 29771  0078DE  0E00               	movlw	0
 29772  0078E0  201E               	addwfc	(sumHIST@sumH+2)^0,w,c
 29773  0078E2  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 29774  0078E4  0E00               	movlw	0
 29775  0078E6  201F               	addwfc	(sumHIST@sumH+3)^0,w,c
 29776  0078E8  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 29777                           
 29778                           ;controlCurrent_MC50.c: 212:         if(SumEnergyADCHist_array[i]>max)
 29779  0078EA  5020               	movf	sumHIST@i^0,w,c
 29780  0078EC  0D02               	mullw	2
 29781  0078EE  0E60               	movlw	low _SumEnergyADCHist_array
 29782  0078F0  24F3               	addwf	243,w,c
 29783  0078F2  6ED9               	movwf	fsr2l,c
 29784  0078F4  0E02               	movlw	high _SumEnergyADCHist_array
 29785  0078F6  20F4               	addwfc	prodh,w,c
 29786  0078F8  6EDA               	movwf	fsr2h,c
 29787  0078FA  50DE               	movf	postinc2,w,c
 29788  0078FC  5C18               	subwf	sumHIST@max^0,w,c
 29789  0078FE  50DE               	movf	postinc2,w,c
 29790  007900  5819               	subwfb	(sumHIST@max+1)^0,w,c
 29791  007902  B0D8               	btfsc	status,0,c
 29792  007904  D00C               	goto	l1366
 29793                           
 29794                           ; BSR set to: 0
 29795                           ;controlCurrent_MC50.c: 213:         {;controlCurrent_MC50.c: 214:             max=SumEn
      +                          ergyADCHist_array[i];
 29796  007906  5020               	movf	sumHIST@i^0,w,c
 29797  007908  0D02               	mullw	2
 29798  00790A  0E60               	movlw	low _SumEnergyADCHist_array
 29799  00790C  24F3               	addwf	243,w,c
 29800  00790E  6ED9               	movwf	fsr2l,c
 29801  007910  0E02               	movlw	high _SumEnergyADCHist_array
 29802  007912  20F4               	addwfc	prodh,w,c
 29803  007914  6EDA               	movwf	fsr2h,c
 29804  007916  CFDE F018          	movff	postinc2,sumHIST@max
 29805  00791A  CFDD F019          	movff	postdec2,sumHIST@max+1
 29806  00791E                     l1366:
 29807                           
 29808                           ; BSR set to: 0
 29809                           ;controlCurrent_MC50.c: 218:         if(SumEnergyADCHist_array[i]<min)
 29810  00791E  5020               	movf	sumHIST@i^0,w,c
 29811  007920  0D02               	mullw	2
 29812  007922  0E60               	movlw	low _SumEnergyADCHist_array
 29813  007924  24F3               	addwf	243,w,c
 29814  007926  6ED9               	movwf	fsr2l,c
 29815  007928  0E02               	movlw	high _SumEnergyADCHist_array
 29816  00792A  20F4               	addwfc	prodh,w,c
 29817  00792C  6EDA               	movwf	fsr2h,c
 29818  00792E  501A               	movf	sumHIST@min^0,w,c
 29819  007930  5CDE               	subwf	postinc2,w,c
 29820  007932  501B               	movf	(sumHIST@min+1)^0,w,c
 29821  007934  58DE               	subwfb	postinc2,w,c
 29822  007936  B0D8               	btfsc	status,0,c
 29823  007938  D00C               	goto	l21372
 29824                           
 29825                           ; BSR set to: 0
 29826                           ;controlCurrent_MC50.c: 219:         {;controlCurrent_MC50.c: 220:             min=SumEn
      +                          ergyADCHist_array[i];
 29827  00793A  5020               	movf	sumHIST@i^0,w,c
 29828  00793C  0D02               	mullw	2
 29829  00793E  0E60               	movlw	low _SumEnergyADCHist_array
 29830  007940  24F3               	addwf	243,w,c
 29831  007942  6ED9               	movwf	fsr2l,c
 29832  007944  0E02               	movlw	high _SumEnergyADCHist_array
 29833  007946  20F4               	addwfc	prodh,w,c
 29834  007948  6EDA               	movwf	fsr2h,c
 29835  00794A  CFDE F01A          	movff	postinc2,sumHIST@min
 29836  00794E  CFDD F01B          	movff	postdec2,sumHIST@min+1
 29837  007952                     l21372:
 29838                           
 29839                           ; BSR set to: 0
 29840                           ;controlCurrent_MC50.c: 222:     }
 29841  007952  2A20               	incf	sumHIST@i^0,f,c
 29842                           
 29843                           ; BSR set to: 0
 29844  007954  0E09               	movlw	9
 29845  007956  6420               	cpfsgt	sumHIST@i^0,c
 29846  007958  D7B0               	goto	l21366
 29847                           
 29848                           ; BSR set to: 0
 29849                           ;controlCurrent_MC50.c: 224:     sumH = sumH - ( max+min );
 29850  00795A  501A               	movf	sumHIST@min^0,w,c
 29851  00795C  2418               	addwf	sumHIST@max^0,w,c
 29852  00795E  6E14               	movwf	??_sumHIST^0,c
 29853  007960  501B               	movf	(sumHIST@min+1)^0,w,c
 29854  007962  2019               	addwfc	(sumHIST@max+1)^0,w,c
 29855  007964  6E15               	movwf	(??_sumHIST+1)^0,c
 29856  007966  6A16               	clrf	(??_sumHIST+2)^0,c
 29857  007968  6A17               	clrf	(??_sumHIST+3)^0,c
 29858  00796A  5014               	movf	??_sumHIST^0,w,c
 29859  00796C  5C1C               	subwf	sumHIST@sumH^0,w,c
 29860  00796E  6E1C               	movwf	sumHIST@sumH^0,c
 29861  007970  5015               	movf	(??_sumHIST+1)^0,w,c
 29862  007972  581D               	subwfb	(sumHIST@sumH+1)^0,w,c
 29863  007974  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 29864  007976  5016               	movf	(??_sumHIST+2)^0,w,c
 29865  007978  581E               	subwfb	(sumHIST@sumH+2)^0,w,c
 29866  00797A  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 29867  00797C  5017               	movf	(??_sumHIST+3)^0,w,c
 29868  00797E  581F               	subwfb	(sumHIST@sumH+3)^0,w,c
 29869  007980  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 29870                           
 29871                           ; BSR set to: 0
 29872                           ;controlCurrent_MC50.c: 226:     return sumH;
 29873  007982  C01C  F010         	movff	sumHIST@sumH,?_sumHIST
 29874  007986  C01D  F011         	movff	sumHIST@sumH+1,?_sumHIST+1
 29875  00798A  C01E  F012         	movff	sumHIST@sumH+2,?_sumHIST+2
 29876  00798E  C01F  F013         	movff	sumHIST@sumH+3,?_sumHIST+3
 29877                           
 29878                           ; BSR set to: 0
 29879  007992  0012               	return		;funcret
 29880  007994                     __end_of_sumHIST:
 29881                           	callstack 0
 29882                           
 29883 ;; *************** function _sumEnergyADC *****************
 29884 ;; Defined at:
 29885 ;;		line 59 in file "controlCurrent_MC50.c"
 29886 ;; Parameters:    Size  Location     Type
 29887 ;;		None
 29888 ;; Auto vars:     Size  Location     Type
 29889 ;;  auxValue        2   21[COMRAM] unsigned int 
 29890 ;;  sumE            2   19[COMRAM] unsigned int 
 29891 ;;  i               1   23[COMRAM] unsigned char 
 29892 ;; Return value:  Size  Location     Type
 29893 ;;                  2   15[COMRAM] unsigned int 
 29894 ;; Registers used:
 29895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29896 ;; Tracked objects:
 29897 ;;		On entry : 3E/0
 29898 ;;		On exit  : 3F/1
 29899 ;;		Unchanged: 0/0
 29900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29901 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29902 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29903 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29904 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29905 ;;Total ram usage:        9 bytes
 29906 ;; Hardware stack levels used: 1
 29907 ;; Hardware stack levels required when called: 4
 29908 ;; This function calls:
 29909 ;;		Nothing
 29910 ;; This function is called by:
 29911 ;;		_refreshCurrent
 29912 ;; This function uses a non-reentrant model
 29913 ;;
 29914                           
 29915                           	psect	text123
 29916  0083EA                     __ptext123:
 29917                           	callstack 0
 29918  0083EA                     _sumEnergyADC:
 29919                           	callstack 24
 29920                           
 29921                           ;controlCurrent_MC50.c: 61:     unsigned char i;;controlCurrent_MC50.c: 63:     unsigned
      +                           int sumE = 0;
 29922                           
 29923                           ; BSR set to: 0
 29924                           ;incstack = 0
 29925  0083EA  0E00               	movlw	0
 29926  0083EC  6E15               	movwf	(sumEnergyADC@sumE+1)^0,c
 29927  0083EE  0E00               	movlw	0
 29928  0083F0  6E14               	movwf	sumEnergyADC@sumE^0,c
 29929                           
 29930                           ;controlCurrent_MC50.c: 72:     for ( i=0 ; i<(30) ; i++ )
 29931  0083F2  0E00               	movlw	0
 29932  0083F4  6E18               	movwf	sumEnergyADC@i^0,c
 29933  0083F6                     l21338:
 29934                           
 29935                           ;controlCurrent_MC50.c: 73:     {;controlCurrent_MC50.c: 83:         if ( ADC_array[i] >
      +                           var_sys.ADCZeroOffset )
 29936  0083F6  5018               	movf	sumEnergyADC@i^0,w,c
 29937  0083F8  0D02               	mullw	2
 29938  0083FA  0E00               	movlw	low _ADC_array
 29939  0083FC  24F3               	addwf	243,w,c
 29940  0083FE  6ED9               	movwf	fsr2l,c
 29941  008400  0E02               	movlw	high _ADC_array
 29942  008402  20F4               	addwfc	prodh,w,c
 29943  008404  6EDA               	movwf	fsr2h,c
 29944  008406  50DE               	movf	postinc2,w,c
 29945  008408  0101               	movlb	1	; () banked
 29946  00840A  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 29947  00840C  50DE               	movf	postinc2,w,c
 29948  00840E  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 29949  008410  B0D8               	btfsc	status,0,c
 29950  008412  D012               	goto	l21342
 29951                           
 29952                           ; BSR set to: 1
 29953                           ;controlCurrent_MC50.c: 84:         {;controlCurrent_MC50.c: 85:             auxValue = 
      +                          ( ADC_array[i] - var_sys.ADCZeroOffset );
 29954  008414  5018               	movf	sumEnergyADC@i^0,w,c
 29955  008416  0D02               	mullw	2
 29956  008418  0E00               	movlw	low _ADC_array
 29957  00841A  24F3               	addwf	243,w,c
 29958  00841C  6ED9               	movwf	fsr2l,c
 29959  00841E  0E02               	movlw	high _ADC_array
 29960  008420  20F4               	addwfc	prodh,w,c
 29961  008422  6EDA               	movwf	fsr2h,c
 29962  008424  CFDE F012          	movff	postinc2,??_sumEnergyADC
 29963  008428  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 29964  00842C  514B               	movf	(_var_sys+75)& (0+255),w,b	;volatile
 29965  00842E  5C12               	subwf	??_sumEnergyADC^0,w,c
 29966  008430  6E16               	movwf	sumEnergyADC@auxValue^0,c
 29967  008432  514C               	movf	(_var_sys+76)& (0+255),w,b	;volatile
 29968  008434  5813               	subwfb	(??_sumEnergyADC+1)^0,w,c
 29969  008436  D011               	goto	L105
 29970  008438                     l21342:
 29971                           
 29972                           ; BSR set to: 1
 29973                           ;controlCurrent_MC50.c: 88:         {;controlCurrent_MC50.c: 89:            auxValue = (
      +                           var_sys.ADCZeroOffset - ADC_array[i] );
 29974  008438  5018               	movf	sumEnergyADC@i^0,w,c
 29975  00843A  0D02               	mullw	2
 29976  00843C  0E00               	movlw	low _ADC_array
 29977  00843E  24F3               	addwf	243,w,c
 29978  008440  6ED9               	movwf	fsr2l,c
 29979  008442  0E02               	movlw	high _ADC_array
 29980  008444  20F4               	addwfc	prodh,w,c
 29981  008446  6EDA               	movwf	fsr2h,c
 29982  008448  CFDE F012          	movff	postinc2,??_sumEnergyADC
 29983  00844C  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 29984  008450  5012               	movf	??_sumEnergyADC^0,w,c
 29985  008452  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 29986  008454  6E16               	movwf	sumEnergyADC@auxValue^0,c
 29987  008456  5013               	movf	(??_sumEnergyADC+1)^0,w,c
 29988  008458  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 29989  00845A                     L105:
 29990  00845A  6E17               	movwf	(sumEnergyADC@auxValue+1)^0,c
 29991                           
 29992                           ; BSR set to: 1
 29993                           ;controlCurrent_MC50.c: 91:         sumE += auxValue;
 29994  00845C  5016               	movf	sumEnergyADC@auxValue^0,w,c
 29995  00845E  2614               	addwf	sumEnergyADC@sumE^0,f,c
 29996  008460  5017               	movf	(sumEnergyADC@auxValue+1)^0,w,c
 29997  008462  2215               	addwfc	(sumEnergyADC@sumE+1)^0,f,c
 29998                           
 29999                           ; BSR set to: 1
 30000                           ;controlCurrent_MC50.c: 94:     }
 30001  008464  2A18               	incf	sumEnergyADC@i^0,f,c
 30002                           
 30003                           ; BSR set to: 1
 30004  008466  0E1D               	movlw	29
 30005  008468  6418               	cpfsgt	sumEnergyADC@i^0,c
 30006  00846A  D7C5               	goto	l21338
 30007                           
 30008                           ; BSR set to: 1
 30009                           ;controlCurrent_MC50.c: 96:     return sumE;
 30010  00846C  C014  F010         	movff	sumEnergyADC@sumE,?_sumEnergyADC
 30011  008470  C015  F011         	movff	sumEnergyADC@sumE+1,?_sumEnergyADC+1
 30012                           
 30013                           ; BSR set to: 1
 30014  008474  0012               	return		;funcret
 30015  008476                     __end_of_sumEnergyADC:
 30016                           	callstack 0
 30017                           
 30018 ;; *************** function _saveEnergyADCHist *****************
 30019 ;; Defined at:
 30020 ;;		line 182 in file "controlCurrent_MC50.c"
 30021 ;; Parameters:    Size  Location     Type
 30022 ;;  valueToSave     2   15[COMRAM] unsigned int 
 30023 ;; Auto vars:     Size  Location     Type
 30024 ;;		None
 30025 ;; Return value:  Size  Location     Type
 30026 ;;                  1    wreg      void 
 30027 ;; Registers used:
 30028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30029 ;; Tracked objects:
 30030 ;;		On entry : 3F/1
 30031 ;;		On exit  : 3F/0
 30032 ;;		Unchanged: 0/0
 30033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30037 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30038 ;;Total ram usage:        2 bytes
 30039 ;; Hardware stack levels used: 1
 30040 ;; Hardware stack levels required when called: 4
 30041 ;; This function calls:
 30042 ;;		Nothing
 30043 ;; This function is called by:
 30044 ;;		_refreshCurrent
 30045 ;; This function uses a non-reentrant model
 30046 ;;
 30047                           
 30048                           	psect	text124
 30049  009BCE                     __ptext124:
 30050                           	callstack 0
 30051  009BCE                     _saveEnergyADCHist:
 30052                           	callstack 24
 30053                           
 30054                           ; BSR set to: 1
 30055                           ;controlCurrent_MC50.c: 182: void saveEnergyADCHist(unsigned int valueToSave);controlCur
      +                          rent_MC50.c: 183: {;controlCurrent_MC50.c: 184:     if(idxSaveEnergyADCHist>=10)
 30056                           
 30057                           ; BSR set to: 1
 30058                           ;incstack = 0
 30059  009BCE  0E09               	movlw	9
 30060  009BD0  0100               	movlb	0	; () banked
 30061  009BD2  6590               	cpfsgt	_idxSaveEnergyADCHist& (0+255),b	;volatile
 30062  009BD4  D002               	goto	l21354
 30063                           
 30064                           ; BSR set to: 0
 30065                           ;controlCurrent_MC50.c: 185:     {;controlCurrent_MC50.c: 186:         idxSaveEnergyADCH
      +                          ist=0;
 30066  009BD6  0E00               	movlw	0
 30067  009BD8  6F90               	movwf	_idxSaveEnergyADCHist& (0+255),b	;volatile
 30068  009BDA                     l21354:
 30069                           
 30070                           ; BSR set to: 0
 30071                           ;controlCurrent_MC50.c: 189:     SumEnergyADCHist_array[idxSaveEnergyADCHist]=valueToSav
      +                          e;
 30072  009BDA  5190               	movf	_idxSaveEnergyADCHist& (0+255),w,b	;volatile
 30073  009BDC  0D02               	mullw	2
 30074  009BDE  0E60               	movlw	low _SumEnergyADCHist_array
 30075  009BE0  24F3               	addwf	243,w,c
 30076  009BE2  6ED9               	movwf	fsr2l,c
 30077  009BE4  0E02               	movlw	high _SumEnergyADCHist_array
 30078  009BE6  20F4               	addwfc	prodh,w,c
 30079  009BE8  6EDA               	movwf	fsr2h,c
 30080  009BEA  C010  FFDE         	movff	saveEnergyADCHist@valueToSave,postinc2
 30081  009BEE  C011  FFDD         	movff	saveEnergyADCHist@valueToSave+1,postdec2
 30082                           
 30083                           ; BSR set to: 0
 30084                           ;controlCurrent_MC50.c: 190:     idxSaveEnergyADCHist++;
 30085  009BF2  2B90               	incf	_idxSaveEnergyADCHist& (0+255),f,b	;volatile
 30086                           
 30087                           ; BSR set to: 0
 30088  009BF4  0012               	return		;funcret
 30089  009BF6                     __end_of_saveEnergyADCHist:
 30090                           	callstack 0
 30091                           
 30092 ;; *************** function _refreshADCZeroOffset *****************
 30093 ;; Defined at:
 30094 ;;		line 103 in file "controlCurrent_MC50.c"
 30095 ;; Parameters:    Size  Location     Type
 30096 ;;		None
 30097 ;; Auto vars:     Size  Location     Type
 30098 ;;  media           2   23[COMRAM] unsigned int 
 30099 ;;  i               1   22[COMRAM] unsigned char 
 30100 ;; Return value:  Size  Location     Type
 30101 ;;                  1    wreg      void 
 30102 ;; Registers used:
 30103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30104 ;; Tracked objects:
 30105 ;;		On entry : 3F/0
 30106 ;;		On exit  : 3C/0
 30107 ;;		Unchanged: 0/0
 30108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30110 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30112 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30113 ;;Total ram usage:        3 bytes
 30114 ;; Hardware stack levels used: 1
 30115 ;; Hardware stack levels required when called: 5
 30116 ;; This function calls:
 30117 ;;		___lwdiv
 30118 ;; This function is called by:
 30119 ;;		_ControlCurrent
 30120 ;; This function uses a non-reentrant model
 30121 ;;
 30122                           
 30123                           	psect	text125
 30124  0076A0                     __ptext125:
 30125                           	callstack 0
 30126  0076A0                     _refreshADCZeroOffset:
 30127                           	callstack 24
 30128                           
 30129                           ; BSR set to: 0
 30130                           ;controlCurrent_MC50.c: 105:     unsigned char i;;controlCurrent_MC50.c: 106:     unsign
      +                          ed int media = 0;
 30131                           
 30132                           ; BSR set to: 0
 30133                           ;incstack = 0
 30134  0076A0  0E00               	movlw	0
 30135  0076A2  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 30136  0076A4  0E00               	movlw	0
 30137  0076A6  6E18               	movwf	refreshADCZeroOffset@media^0,c
 30138                           
 30139                           ;controlCurrent_MC50.c: 109:     if ( var_sys.StateMotor == Stopped )
 30140  0076A8  0101               	movlb	1	; () banked
 30141  0076AA  5100               	movf	_var_sys& (0+255),w,b	;volatile
 30142  0076AC  A4D8               	btfss	status,2,c
 30143  0076AE  0012               	return	
 30144                           
 30145                           ; BSR set to: 1
 30146                           ;controlCurrent_MC50.c: 110:     {;controlCurrent_MC50.c: 111:         if ( ts_system.Ti
      +                          meStopADCZeroOffsetCalc <= 0 )
 30147  0076B0  BFDD               	btfsc	(_ts_system+63)& (0+255),7,b	;volatile
 30148  0076B2  D005               	goto	u26350
 30149  0076B4  51DD               	movf	(_ts_system+63)& (0+255),w,b	;volatile
 30150  0076B6  E172               	bnz	l1357
 30151  0076B8  05DC               	decf	(_ts_system+62)& (0+255),w,b	;volatile
 30152  0076BA  B0D8               	btfsc	status,0,c
 30153  0076BC  0012               	return	
 30154  0076BE                     u26350:
 30155                           
 30156                           ; BSR set to: 1
 30157                           ;controlCurrent_MC50.c: 112:         {;controlCurrent_MC50.c: 113:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (1000/50);
 30158  0076BE  0E00               	movlw	0
 30159  0076C0  6FDD               	movwf	(_ts_system+63)& (0+255),b	;volatile
 30160  0076C2  0E14               	movlw	20
 30161  0076C4  6FDC               	movwf	(_ts_system+62)& (0+255),b	;volatile
 30162                           
 30163                           ;controlCurrent_MC50.c: 121:             for ( i=0 ; i<(30) ; i++ )
 30164  0076C6  0E00               	movlw	0
 30165  0076C8  6E17               	movwf	refreshADCZeroOffset@i^0,c
 30166  0076CA                     l22968:
 30167                           
 30168                           ;controlCurrent_MC50.c: 122:             {;controlCurrent_MC50.c: 126:                 m
      +                          edia += ADC_array[i];
 30169  0076CA  5017               	movf	refreshADCZeroOffset@i^0,w,c
 30170  0076CC  0D02               	mullw	2
 30171  0076CE  0E00               	movlw	low _ADC_array
 30172  0076D0  24F3               	addwf	243,w,c
 30173  0076D2  6ED9               	movwf	fsr2l,c
 30174  0076D4  0E02               	movlw	high _ADC_array
 30175  0076D6  20F4               	addwfc	prodh,w,c
 30176  0076D8  6EDA               	movwf	fsr2h,c
 30177  0076DA  50DE               	movf	postinc2,w,c
 30178  0076DC  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 30179  0076DE  50DD               	movf	postdec2,w,c
 30180  0076E0  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 30181                           
 30182                           ;controlCurrent_MC50.c: 128:             }
 30183  0076E2  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 30184  0076E4  0E1D               	movlw	29
 30185  0076E6  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 30186  0076E8  D7F0               	goto	l22968
 30187                           
 30188                           ;controlCurrent_MC50.c: 130:             media = media/30;
 30189  0076EA  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 30190  0076EE  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 30191  0076F2  0E00               	movlw	0
 30192  0076F4  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 30193  0076F6  0E1E               	movlw	30
 30194  0076F8  6E12               	movwf	___lwdiv@divisor^0,c
 30195  0076FA  ECB2  F049         	call	___lwdiv	;wreg free
 30196  0076FE  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 30197  007702  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 30198                           
 30199                           ;controlCurrent_MC50.c: 131:             if ( (media>(510 -20)) && (media<(510 +20)) )
 30200  007706  0EEB               	movlw	235
 30201  007708  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 30202  00770A  0E01               	movlw	1
 30203  00770C  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 30204  00770E  A0D8               	btfss	status,0,c
 30205  007710  D006               	goto	l22982
 30206  007712  0E12               	movlw	18
 30207  007714  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 30208  007716  0E02               	movlw	2
 30209  007718  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 30210  00771A  A0D8               	btfss	status,0,c
 30211  00771C  D004               	goto	l22984
 30212  00771E                     l22982:
 30213                           
 30214                           ;controlCurrent_MC50.c: 136:             {;controlCurrent_MC50.c: 138:                 m
      +                          edia = 510;
 30215  00771E  0E01               	movlw	1
 30216  007720  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 30217  007722  0EFE               	movlw	254
 30218  007724  6E18               	movwf	refreshADCZeroOffset@media^0,c
 30219  007726                     l22984:
 30220                           
 30221                           ;controlCurrent_MC50.c: 142:             if ( idxAdcZeroAquisition >= 30 )
 30222  007726  0E1D               	movlw	29
 30223  007728  0100               	movlb	0	; () banked
 30224  00772A  658F               	cpfsgt	_idxAdcZeroAquisition& (0+255),b	;volatile
 30225  00772C  D002               	goto	l22988
 30226                           
 30227                           ; BSR set to: 0
 30228                           ;controlCurrent_MC50.c: 143:             {;controlCurrent_MC50.c: 144:                 i
      +                          dxAdcZeroAquisition = 0;
 30229  00772E  0E00               	movlw	0
 30230  007730  6F8F               	movwf	_idxAdcZeroAquisition& (0+255),b	;volatile
 30231  007732                     l22988:
 30232                           
 30233                           ; BSR set to: 0
 30234                           ;controlCurrent_MC50.c: 146:             ADC_zero_array[idxAdcZeroAquisition] = media;
 30235  007732  518F               	movf	_idxAdcZeroAquisition& (0+255),w,b	;volatile
 30236  007734  0D02               	mullw	2
 30237  007736  0E96               	movlw	low _ADC_zero_array
 30238  007738  24F3               	addwf	243,w,c
 30239  00773A  6ED9               	movwf	fsr2l,c
 30240  00773C  0E03               	movlw	high _ADC_zero_array
 30241  00773E  20F4               	addwfc	prodh,w,c
 30242  007740  6EDA               	movwf	fsr2h,c
 30243  007742  C018  FFDE         	movff	refreshADCZeroOffset@media,postinc2
 30244  007746  C019  FFDD         	movff	refreshADCZeroOffset@media+1,postdec2
 30245                           
 30246                           ; BSR set to: 0
 30247                           ;controlCurrent_MC50.c: 147:             idxAdcZeroAquisition++;
 30248  00774A  2B8F               	incf	_idxAdcZeroAquisition& (0+255),f,b	;volatile
 30249                           
 30250                           ; BSR set to: 0
 30251                           ;controlCurrent_MC50.c: 150:             media = 0;
 30252  00774C  0E00               	movlw	0
 30253  00774E  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 30254  007750  0E00               	movlw	0
 30255  007752  6E18               	movwf	refreshADCZeroOffset@media^0,c
 30256                           
 30257                           ; BSR set to: 0
 30258                           ;controlCurrent_MC50.c: 151:             for ( i=0 ; i<(30) ; i++ )
 30259  007754  0E00               	movlw	0
 30260  007756  6E17               	movwf	refreshADCZeroOffset@i^0,c
 30261  007758                     l23000:
 30262                           
 30263                           ; BSR set to: 0
 30264                           ;controlCurrent_MC50.c: 152:             {;controlCurrent_MC50.c: 158:                 m
      +                          edia += ADC_zero_array[i];
 30265  007758  5017               	movf	refreshADCZeroOffset@i^0,w,c
 30266  00775A  0D02               	mullw	2
 30267  00775C  0E96               	movlw	low _ADC_zero_array
 30268  00775E  24F3               	addwf	243,w,c
 30269  007760  6ED9               	movwf	fsr2l,c
 30270  007762  0E03               	movlw	high _ADC_zero_array
 30271  007764  20F4               	addwfc	prodh,w,c
 30272  007766  6EDA               	movwf	fsr2h,c
 30273  007768  50DE               	movf	postinc2,w,c
 30274  00776A  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 30275  00776C  50DD               	movf	postdec2,w,c
 30276  00776E  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 30277                           
 30278                           ; BSR set to: 0
 30279                           ;controlCurrent_MC50.c: 159:             }
 30280  007770  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 30281                           
 30282                           ; BSR set to: 0
 30283  007772  0E1D               	movlw	29
 30284  007774  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 30285  007776  D7F0               	goto	l23000
 30286                           
 30287                           ; BSR set to: 0
 30288                           ;controlCurrent_MC50.c: 160:             media = media/30;
 30289  007778  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 30290  00777C  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 30291  007780  0E00               	movlw	0
 30292  007782  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 30293  007784  0E1E               	movlw	30
 30294  007786  6E12               	movwf	___lwdiv@divisor^0,c
 30295  007788  ECB2  F049         	call	___lwdiv	;wreg free
 30296  00778C  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 30297  007790  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 30298                           
 30299                           ;controlCurrent_MC50.c: 162:             var_sys.ADCZeroOffset = media;
 30300  007794  C018  F14B         	movff	refreshADCZeroOffset@media,_var_sys+75	;volatile
 30301  007798  C019  F14C         	movff	refreshADCZeroOffset@media+1,_var_sys+76	;volatile
 30302  00779C                     l1357:
 30303  00779C  0012               	return		;funcret
 30304  00779E                     __end_of_refreshADCZeroOffset:
 30305                           	callstack 0
 30306                           
 30307 ;; *************** function ___lwdiv *****************
 30308 ;; Defined at:
 30309 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
 30310 ;; Parameters:    Size  Location     Type
 30311 ;;  dividend        2   15[COMRAM] unsigned int 
 30312 ;;  divisor         2   17[COMRAM] unsigned int 
 30313 ;; Auto vars:     Size  Location     Type
 30314 ;;  quotient        2   20[COMRAM] unsigned int 
 30315 ;;  counter         1   19[COMRAM] unsigned char 
 30316 ;; Return value:  Size  Location     Type
 30317 ;;                  2   15[COMRAM] unsigned int 
 30318 ;; Registers used:
 30319 ;;		wreg, status,2, status,0
 30320 ;; Tracked objects:
 30321 ;;		On entry : 3C/2
 30322 ;;		On exit  : 3C/0
 30323 ;;		Unchanged: 3C/0
 30324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30325 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30326 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30328 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30329 ;;Total ram usage:        7 bytes
 30330 ;; Hardware stack levels used: 1
 30331 ;; Hardware stack levels required when called: 4
 30332 ;; This function calls:
 30333 ;;		Nothing
 30334 ;; This function is called by:
 30335 ;;		_refreshADCZeroOffset
 30336 ;;		_sm_execute_menuConfiguration
 30337 ;; This function uses a non-reentrant model
 30338 ;;
 30339                           
 30340                           	psect	text126
 30341  009364                     __ptext126:
 30342                           	callstack 0
 30343  009364                     ___lwdiv:
 30344                           	callstack 24
 30345                           
 30346                           ;incstack = 0
 30347  009364  0E00               	movlw	0
 30348  009366  6E16               	movwf	(___lwdiv@quotient+1)^0,c
 30349  009368  0E00               	movlw	0
 30350  00936A  6E15               	movwf	___lwdiv@quotient^0,c
 30351  00936C  5012               	movf	___lwdiv@divisor^0,w,c
 30352  00936E  1013               	iorwf	(___lwdiv@divisor+1)^0,w,c
 30353  009370  B4D8               	btfsc	status,2,c
 30354  009372  D01C               	goto	l4306
 30355  009374  0E01               	movlw	1
 30356  009376  6E14               	movwf	___lwdiv@counter^0,c
 30357  009378  D004               	goto	l22812
 30358  00937A                     l22810:
 30359  00937A  90D8               	bcf	status,0,c
 30360  00937C  3612               	rlcf	___lwdiv@divisor^0,f,c
 30361  00937E  3613               	rlcf	(___lwdiv@divisor+1)^0,f,c
 30362  009380  2A14               	incf	___lwdiv@counter^0,f,c
 30363  009382                     l22812:
 30364  009382  AE13               	btfss	(___lwdiv@divisor+1)^0,7,c
 30365  009384  D7FA               	goto	l22810
 30366  009386                     u26280:
 30367  009386  90D8               	bcf	status,0,c
 30368  009388  3615               	rlcf	___lwdiv@quotient^0,f,c
 30369  00938A  3616               	rlcf	(___lwdiv@quotient+1)^0,f,c
 30370  00938C  5012               	movf	___lwdiv@divisor^0,w,c
 30371  00938E  5C10               	subwf	___lwdiv@dividend^0,w,c
 30372  009390  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 30373  009392  5811               	subwfb	(___lwdiv@dividend+1)^0,w,c
 30374  009394  A0D8               	btfss	status,0,c
 30375  009396  D005               	goto	l22822
 30376  009398  5012               	movf	___lwdiv@divisor^0,w,c
 30377  00939A  5E10               	subwf	___lwdiv@dividend^0,f,c
 30378  00939C  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 30379  00939E  5A11               	subwfb	(___lwdiv@dividend+1)^0,f,c
 30380  0093A0  8015               	bsf	___lwdiv@quotient^0,0,c
 30381  0093A2                     l22822:
 30382  0093A2  90D8               	bcf	status,0,c
 30383  0093A4  3213               	rrcf	(___lwdiv@divisor+1)^0,f,c
 30384  0093A6  3212               	rrcf	___lwdiv@divisor^0,f,c
 30385  0093A8  2E14               	decfsz	___lwdiv@counter^0,f,c
 30386  0093AA  D7ED               	goto	u26280
 30387  0093AC                     l4306:
 30388  0093AC  C015  F010         	movff	___lwdiv@quotient,?___lwdiv
 30389  0093B0  C016  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
 30390  0093B4  0012               	return		;funcret
 30391  0093B6                     __end_of___lwdiv:
 30392                           	callstack 0
 30393                           
 30394 ;; *************** function _getCurrentComparator *****************
 30395 ;; Defined at:
 30396 ;;		line 264 in file "controlCurrent_MC50.c"
 30397 ;; Parameters:    Size  Location     Type
 30398 ;;		None
 30399 ;; Auto vars:     Size  Location     Type
 30400 ;;  x               1   33[COMRAM] unsigned char 
 30401 ;;  tempOffset      2   31[COMRAM] unsigned int 
 30402 ;; Return value:  Size  Location     Type
 30403 ;;                  4   21[COMRAM] unsigned long 
 30404 ;; Registers used:
 30405 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 30406 ;; Tracked objects:
 30407 ;;		On entry : 3F/1
 30408 ;;		On exit  : 3F/1
 30409 ;;		Unchanged: 0/0
 30410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30411 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30412 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30413 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30414 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30415 ;;Total ram usage:       13 bytes
 30416 ;; Hardware stack levels used: 1
 30417 ;; Hardware stack levels required when called: 5
 30418 ;; This function calls:
 30419 ;;		___wmul
 30420 ;; This function is called by:
 30421 ;;		_ControlCurrent
 30422 ;; This function uses a non-reentrant model
 30423 ;;
 30424                           
 30425                           	psect	text127
 30426  006434                     __ptext127:
 30427                           	callstack 0
 30428  006434                     _getCurrentComparator:
 30429                           	callstack 24
 30430                           
 30431                           ; BSR set to: 1
 30432                           ;controlCurrent_MC50.c: 269:     if(ts_system.timeSoftStart>0)
 30433                           
 30434                           ; BSR set to: 1
 30435                           
 30436                           ;incstack = 0
 30437  006434  BFB5               	btfsc	(_ts_system+23)& (0+255),7,b	;volatile
 30438  006436  D00A               	goto	l23024
 30439  006438  51B5               	movf	(_ts_system+23)& (0+255),w,b	;volatile
 30440  00643A  E103               	bnz	u26430
 30441  00643C  05B4               	decf	(_ts_system+22)& (0+255),w,b	;volatile
 30442  00643E  A0D8               	btfss	status,0,c
 30443  006440  D005               	goto	l23024
 30444  006442                     u26430:
 30445                           
 30446                           ; BSR set to: 1
 30447                           ;controlCurrent_MC50.c: 270:     {;controlCurrent_MC50.c: 271:         ts_system.timewai
      +                          tBeforeSoftStart=(1000/50);
 30448  006442  0E00               	movlw	0
 30449  006444  6FD9               	movwf	(_ts_system+59)& (0+255),b	;volatile
 30450  006446  0E14               	movlw	20
 30451  006448  6FD8               	movwf	(_ts_system+58)& (0+255),b	;volatile
 30452  00644A  D007               	goto	u26440
 30453  00644C                     l23024:
 30454                           
 30455                           ; BSR set to: 1
 30456  00644C  BFD9               	btfsc	(_ts_system+59)& (0+255),7,b	;volatile
 30457  00644E  D009               	goto	l23028
 30458  006450  51D9               	movf	(_ts_system+59)& (0+255),w,b	;volatile
 30459  006452  E103               	bnz	u26440
 30460  006454  05D8               	decf	(_ts_system+58)& (0+255),w,b	;volatile
 30461  006456  A0D8               	btfss	status,0,c
 30462  006458  D004               	goto	l23028
 30463  00645A                     u26440:
 30464                           
 30465                           ; BSR set to: 1
 30466                           ;controlCurrent_MC50.c: 276:     {;controlCurrent_MC50.c: 277:         tempOffset=1200;
 30467  00645A  0E04               	movlw	4
 30468  00645C  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 30469  00645E  0EB0               	movlw	176
 30470  006460  D003               	goto	L106
 30471  006462                     l23028:
 30472                           
 30473                           ; BSR set to: 1
 30474                           ;controlCurrent_MC50.c: 280:     {;controlCurrent_MC50.c: 281:         tempOffset=0;
 30475  006462  0E00               	movlw	0
 30476  006464  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 30477  006466  0E00               	movlw	0
 30478  006468                     L106:
 30479  006468  6E20               	movwf	getCurrentComparator@tempOffset^0,c
 30480                           
 30481                           ; BSR set to: 1
 30482                           ;controlCurrent_MC50.c: 284:     if(powerControl_st.decelarationActive==NO)
 30483  00646A  517B               	movf	_powerControl_st& (0+255),w,b
 30484  00646C  A4D8               	btfss	status,2,c
 30485  00646E  D05B               	goto	l23044
 30486                           
 30487                           ; BSR set to: 1
 30488                           ;controlCurrent_MC50.c: 285:     {;controlCurrent_MC50.c: 286:         if(var_sys.StateM
      +                          otor==InClose)
 30489  006470  0E03               	movlw	3
 30490  006472  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 30491  006474  A4D8               	btfss	status,2,c
 30492  006476  D005               	goto	l23034
 30493                           
 30494                           ; BSR set to: 1
 30495                           ;controlCurrent_MC50.c: 287:         {;controlCurrent_MC50.c: 288:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalClose;
 30496  006478  C0C8  F134         	movff	_var_sys_NVM+48,_var_sys+52	;volatile
 30497  00647C  C0C9  F135         	movff	_var_sys_NVM+49,_var_sys+53	;volatile
 30498  006480  D004               	goto	L107
 30499  006482                     l23034:
 30500                           
 30501                           ; BSR set to: 1
 30502                           ;controlCurrent_MC50.c: 291:         {;controlCurrent_MC50.c: 292:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalOpen;
 30503  006482  C0CA  F134         	movff	_var_sys_NVM+50,_var_sys+52	;volatile
 30504  006486  C0CB  F135         	movff	_var_sys_NVM+51,_var_sys+53	;volatile
 30505  00648A                     L107:
 30506  00648A  6B36               	clrf	(_var_sys+54)& (0+255),b	;volatile
 30507  00648C  6B37               	clrf	(_var_sys+55)& (0+255),b	;volatile
 30508                           
 30509                           ; BSR set to: 1
 30510                           ;controlCurrent_MC50.c: 295:         if(var_sys.ActualComparatorCurrent<=100||(var_sys.A
      +                          ctualComparatorCurrent>(510*30)))
 30511  00648E  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 30512  006490  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 30513  006492  1135               	iorwf	(_var_sys+53)& (0+255),w,b	;volatile
 30514  006494  E104               	bnz	u26470
 30515  006496  0E65               	movlw	101
 30516  006498  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 30517  00649A  A0D8               	btfss	status,0,c
 30518  00649C  D009               	goto	u26480
 30519  00649E                     u26470:
 30520                           
 30521                           ; BSR set to: 1
 30522  00649E  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 30523  0064A0  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 30524  0064A2  E106               	bnz	u26480
 30525  0064A4  0EC5               	movlw	197
 30526  0064A6  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 30527  0064A8  0E3B               	movlw	59
 30528  0064AA  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 30529  0064AC  A0D8               	btfss	status,0,c
 30530  0064AE  D004               	goto	l1383
 30531  0064B0                     u26480:
 30532                           
 30533                           ; BSR set to: 1
 30534                           ;controlCurrent_MC50.c: 296:         {;controlCurrent_MC50.c: 297:              var_sys.
      +                          ActualComparatorCurrent=(510*30);
 30535  0064B0  0EC4               	movlw	196
 30536  0064B2  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 30537  0064B4  0E3B               	movlw	59
 30538  0064B6  D058               	goto	L109
 30539  0064B8                     l1383:
 30540                           
 30541                           ; BSR set to: 1
 30542                           ;controlCurrent_MC50.c: 300:         {;controlCurrent_MC50.c: 301:             unsigned 
      +                          char x=var_sys_NVM.motorSensitivity;
 30543  0064B8  C09B  F022         	movff	_var_sys_NVM+3,getCurrentComparator@x	;volatile
 30544                           
 30545                           ; BSR set to: 1
 30546                           ;controlCurrent_MC50.c: 307:            var_sys.ActualComparatorCurrent=var_sys.ActualCo
      +                          mparatorCurrent+((10*(x*x))+(-200*x)+1300);
 30547  0064BC  5022               	movf	getCurrentComparator@x^0,w,c
 30548  0064BE  0222               	mulwf	getCurrentComparator@x^0,c
 30549  0064C0  CFF3 F010          	movff	prodl,___wmul@multiplier
 30550  0064C4  CFF4 F011          	movff	prodh,___wmul@multiplier+1
 30551  0064C8  0E00               	movlw	0
 30552  0064CA  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 30553  0064CC  0E0A               	movlw	10
 30554  0064CE  6E12               	movwf	___wmul@multiplicand^0,c
 30555  0064D0  EC21  F04E         	call	___wmul	;wreg free
 30556  0064D4  C010  F01A         	movff	?___wmul,??_getCurrentComparator
 30557  0064D8  C011  F01B         	movff	?___wmul+1,??_getCurrentComparator+1
 30558  0064DC  C022  F010         	movff	getCurrentComparator@x,___wmul@multiplier
 30559  0064E0  6A11               	clrf	(___wmul@multiplier+1)^0,c
 30560  0064E2  0EFF               	movlw	255
 30561  0064E4  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 30562  0064E6  0E38               	movlw	56
 30563  0064E8  6E12               	movwf	___wmul@multiplicand^0,c
 30564  0064EA  EC21  F04E         	call	___wmul	;wreg free
 30565  0064EE  5010               	movf	?___wmul^0,w,c
 30566  0064F0  261A               	addwf	??_getCurrentComparator^0,f,c
 30567  0064F2  5011               	movf	(?___wmul+1)^0,w,c
 30568  0064F4  221B               	addwfc	(??_getCurrentComparator+1)^0,f,c
 30569  0064F6  0E14               	movlw	20
 30570  0064F8  241A               	addwf	??_getCurrentComparator^0,w,c
 30571  0064FA  6E1C               	movwf	(??_getCurrentComparator+2)^0,c
 30572  0064FC  0E05               	movlw	5
 30573  0064FE  201B               	addwfc	(??_getCurrentComparator+1)^0,w,c
 30574  006500  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 30575  006502  6A1E               	clrf	(??_getCurrentComparator+4)^0,c
 30576  006504  BE1D               	btfsc	(??_getCurrentComparator+3)^0,7,c
 30577  006506  061E               	decf	(??_getCurrentComparator+4)^0,f,c
 30578  006508  501E               	movf	(??_getCurrentComparator+4)^0,w,c
 30579  00650A  6E1F               	movwf	(??_getCurrentComparator+5)^0,c
 30580  00650C  0101               	movlb	1	; () banked
 30581  00650E  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 30582  006510  241C               	addwf	(??_getCurrentComparator+2)^0,w,c
 30583  006512  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 30584  006514  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 30585  006516  201D               	addwfc	(??_getCurrentComparator+3)^0,w,c
 30586  006518  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 30587  00651A  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 30588  00651C  201E               	addwfc	(??_getCurrentComparator+4)^0,w,c
 30589  00651E  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 30590  006520  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 30591  006522  201F               	addwfc	(??_getCurrentComparator+5)^0,w,c
 30592  006524  D046               	goto	L108
 30593  006526                     l23044:
 30594                           
 30595                           ; BSR set to: 1
 30596                           ;controlCurrent_MC50.c: 311:     {;controlCurrent_MC50.c: 312:         if(var_sys.StateM
      +                          otor==InClose)
 30597  006526  0E03               	movlw	3
 30598  006528  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 30599  00652A  A4D8               	btfss	status,2,c
 30600  00652C  D009               	goto	l1388
 30601                           
 30602                           ; BSR set to: 1
 30603                           ;controlCurrent_MC50.c: 313:         {;controlCurrent_MC50.c: 314:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationClose;
 30604  00652E  C0C0  F134         	movff	_var_sys_NVM+40,_var_sys+52	;volatile
 30605  006532  C0C1  F135         	movff	_var_sys_NVM+41,_var_sys+53	;volatile
 30606  006536  C0C2  F136         	movff	_var_sys_NVM+42,_var_sys+54	;volatile
 30607  00653A  C0C3  F137         	movff	_var_sys_NVM+43,_var_sys+55	;volatile
 30608                           
 30609                           ;controlCurrent_MC50.c: 315:         }
 30610  00653E  D008               	goto	l23048
 30611  006540                     l1388:
 30612                           
 30613                           ; BSR set to: 1
 30614                           ;controlCurrent_MC50.c: 317:         {;controlCurrent_MC50.c: 318:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationOpen ;
 30615  006540  C0C4  F134         	movff	_var_sys_NVM+44,_var_sys+52	;volatile
 30616  006544  C0C5  F135         	movff	_var_sys_NVM+45,_var_sys+53	;volatile
 30617  006548  C0C6  F136         	movff	_var_sys_NVM+46,_var_sys+54	;volatile
 30618  00654C  C0C7  F137         	movff	_var_sys_NVM+47,_var_sys+55	;volatile
 30619  006550                     l23048:
 30620                           
 30621                           ; BSR set to: 1
 30622                           ;controlCurrent_MC50.c: 321:         if(var_sys.ActualComparatorCurrent<=5000)
 30623  006550  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 30624  006552  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 30625  006554  E10E               	bnz	l23052
 30626  006556  0E89               	movlw	137
 30627  006558  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 30628  00655A  0E13               	movlw	19
 30629  00655C  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 30630  00655E  B0D8               	btfsc	status,0,c
 30631  006560  D008               	goto	l23052
 30632                           
 30633                           ; BSR set to: 1
 30634                           ;controlCurrent_MC50.c: 322:         {;controlCurrent_MC50.c: 323:             var_sys.A
      +                          ctualComparatorCurrent=5000;
 30635  006562  0E88               	movlw	136
 30636  006564  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 30637  006566  0E13               	movlw	19
 30638  006568                     L109:
 30639  006568  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 30640  00656A  0E00               	movlw	0
 30641  00656C  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 30642  00656E  0E00               	movlw	0
 30643  006570  D020               	goto	L108
 30644  006572                     l23052:
 30645                           
 30646                           ; BSR set to: 1
 30647                           ;controlCurrent_MC50.c: 326:         {;controlCurrent_MC50.c: 327:             var_sys.A
      +                          ctualComparatorCurrent=var_sys.ActualComparatorCurrent-(1200 +(500*(10-var_sys_NVM.decel
      +                          arationSensivity)));
 30648  006572  C0A7  F010         	movff	_var_sys_NVM+15,___wmul@multiplier	;volatile
 30649  006576  6A11               	clrf	(___wmul@multiplier+1)^0,c
 30650  006578  0EFE               	movlw	254
 30651  00657A  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 30652  00657C  0E0C               	movlw	12
 30653  00657E  6E12               	movwf	___wmul@multiplicand^0,c
 30654  006580  EC21  F04E         	call	___wmul	;wreg free
 30655  006584  0E38               	movlw	56
 30656  006586  2410               	addwf	?___wmul^0,w,c
 30657  006588  6E1A               	movwf	??_getCurrentComparator^0,c
 30658  00658A  0E18               	movlw	24
 30659  00658C  2011               	addwfc	(?___wmul+1)^0,w,c
 30660  00658E  6E1B               	movwf	(??_getCurrentComparator+1)^0,c
 30661  006590  6A1C               	clrf	(??_getCurrentComparator+2)^0,c
 30662  006592  BE1B               	btfsc	(??_getCurrentComparator+1)^0,7,c
 30663  006594  061C               	decf	(??_getCurrentComparator+2)^0,f,c
 30664  006596  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 30665  006598  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 30666  00659A  501A               	movf	??_getCurrentComparator^0,w,c
 30667  00659C  0101               	movlb	1	; () banked
 30668  00659E  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 30669  0065A0  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 30670  0065A2  501B               	movf	(??_getCurrentComparator+1)^0,w,c
 30671  0065A4  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 30672  0065A6  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 30673  0065A8  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 30674  0065AA  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 30675  0065AC  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 30676  0065AE  501D               	movf	(??_getCurrentComparator+3)^0,w,c
 30677  0065B0  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 30678  0065B2                     L108:
 30679  0065B2  6F37               	movwf	(_var_sys+55)& (0+255),b	;volatile
 30680                           
 30681                           ; BSR set to: 1
 30682                           ;controlCurrent_MC50.c: 332:     return var_sys.ActualComparatorCurrent+tempOffset;
 30683  0065B4  5020               	movf	getCurrentComparator@tempOffset^0,w,c
 30684  0065B6  2534               	addwf	(_var_sys+52)& (0+255),w,b	;volatile
 30685  0065B8  6E16               	movwf	?_getCurrentComparator^0,c
 30686  0065BA  5021               	movf	(getCurrentComparator@tempOffset+1)^0,w,c
 30687  0065BC  2135               	addwfc	(_var_sys+53)& (0+255),w,b	;volatile
 30688  0065BE  6E17               	movwf	(?_getCurrentComparator+1)^0,c
 30689  0065C0  0E00               	movlw	0
 30690  0065C2  2136               	addwfc	(_var_sys+54)& (0+255),w,b	;volatile
 30691  0065C4  6E18               	movwf	(?_getCurrentComparator+2)^0,c
 30692  0065C6  0E00               	movlw	0
 30693  0065C8  2137               	addwfc	(_var_sys+55)& (0+255),w,b	;volatile
 30694  0065CA  6E19               	movwf	(?_getCurrentComparator+3)^0,c
 30695                           
 30696                           ; BSR set to: 1
 30697  0065CC  0012               	return		;funcret
 30698  0065CE                     __end_of_getCurrentComparator:
 30699                           	callstack 0
 30700                           
 30701 ;; *************** function ___wmul *****************
 30702 ;; Defined at:
 30703 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
 30704 ;; Parameters:    Size  Location     Type
 30705 ;;  multiplier      2   15[COMRAM] unsigned int 
 30706 ;;  multiplicand    2   17[COMRAM] unsigned int 
 30707 ;; Auto vars:     Size  Location     Type
 30708 ;;  product         2   19[COMRAM] unsigned int 
 30709 ;; Return value:  Size  Location     Type
 30710 ;;                  2   15[COMRAM] unsigned int 
 30711 ;; Registers used:
 30712 ;;		wreg, status,2, status,0, prodl, prodh
 30713 ;; Tracked objects:
 30714 ;;		On entry : 0/0
 30715 ;;		On exit  : 0/0
 30716 ;;		Unchanged: 0/0
 30717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30718 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30719 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30721 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30722 ;;Total ram usage:        6 bytes
 30723 ;; Hardware stack levels used: 1
 30724 ;; Hardware stack levels required when called: 4
 30725 ;; This function calls:
 30726 ;;		Nothing
 30727 ;; This function is called by:
 30728 ;;		_getCurrentComparator
 30729 ;;		_getHopCode
 30730 ;; This function uses a non-reentrant model
 30731 ;;
 30732                           
 30733                           	psect	text128
 30734  009C42                     __ptext128:
 30735                           	callstack 0
 30736  009C42                     ___wmul:
 30737                           	callstack 22
 30738                           
 30739                           ; BSR set to: 1
 30740                           ;incstack = 0
 30741  009C42  5010               	movf	___wmul@multiplier^0,w,c
 30742  009C44  0212               	mulwf	___wmul@multiplicand^0,c
 30743  009C46  CFF3 F014          	movff	prodl,___wmul@product
 30744  009C4A  CFF4 F015          	movff	prodh,___wmul@product+1
 30745  009C4E  5010               	movf	___wmul@multiplier^0,w,c
 30746  009C50  0213               	mulwf	(___wmul@multiplicand+1)^0,c
 30747  009C52  50F3               	movf	243,w,c
 30748  009C54  2615               	addwf	(___wmul@product+1)^0,f,c
 30749  009C56  5011               	movf	(___wmul@multiplier+1)^0,w,c
 30750  009C58  0212               	mulwf	___wmul@multiplicand^0,c
 30751  009C5A  50F3               	movf	243,w,c
 30752  009C5C  2615               	addwf	(___wmul@product+1)^0,f,c
 30753  009C5E  C014  F010         	movff	___wmul@product,?___wmul
 30754  009C62  C015  F011         	movff	___wmul@product+1,?___wmul+1
 30755  009C66  0012               	return		;funcret
 30756  009C68                     __end_of___wmul:
 30757                           	callstack 0
 30758                           
 30759 ;; *************** function _GetMotorPower *****************
 30760 ;; Defined at:
 30761 ;;		line 405 in file "outputs_MC50.c"
 30762 ;; Parameters:    Size  Location     Type
 30763 ;;		None
 30764 ;; Auto vars:     Size  Location     Type
 30765 ;;  defineatraso    1   18[COMRAM] unsigned char 
 30766 ;; Return value:  Size  Location     Type
 30767 ;;                  1    wreg      unsigned char 
 30768 ;; Registers used:
 30769 ;;		wreg, status,2, status,0, prodl, prodh
 30770 ;; Tracked objects:
 30771 ;;		On entry : 3C/1
 30772 ;;		On exit  : 3F/1
 30773 ;;		Unchanged: 0/0
 30774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30776 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30777 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30778 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30779 ;;Total ram usage:        4 bytes
 30780 ;; Hardware stack levels used: 1
 30781 ;; Hardware stack levels required when called: 4
 30782 ;; This function calls:
 30783 ;;		Nothing
 30784 ;; This function is called by:
 30785 ;;		_ControlCurrent
 30786 ;;		_InitSoftStart
 30787 ;;		_InitSoftStop
 30788 ;; This function uses a non-reentrant model
 30789 ;;
 30790                           
 30791                           	psect	text129
 30792  007C24                     __ptext129:
 30793                           	callstack 0
 30794  007C24                     _GetMotorPower:
 30795                           	callstack 22
 30796                           
 30797                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 30798                           
 30799                           ;incstack = 0
 30800  007C24  0101               	movlb	1	; () banked
 30801  007C26  057B               	decf	_powerControl_st& (0+255),w,b
 30802  007C28  A4D8               	btfss	status,2,c
 30803  007C2A  D006               	goto	l20562
 30804                           
 30805                           ; BSR set to: 1
 30806                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 30807  007C2C  0100               	movlb	0	; () banked
 30808  007C2E  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 30809  007C30  0D06               	mullw	6
 30810  007C32  CFF3 F192          	movff	prodl,_temppower
 30811                           
 30812                           ;outputs_MC50.c: 416:     }
 30813  007C36  D043               	goto	l2240
 30814  007C38                     l20562:
 30815                           
 30816                           ; BSR set to: 1
 30817                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 30818  007C38  0100               	movlb	0	; () banked
 30819  007C3A  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 30820  007C3C  0D06               	mullw	6
 30821  007C3E  CFF3 F082          	movff	prodl,_fullmotorPower
 30822                           
 30823                           ; BSR set to: 0
 30824                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 30825  007C42  0101               	movlb	1	; () banked
 30826  007C44  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 30827  007C46  D01C               	goto	l20572
 30828  007C48  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30829  007C4A  E103               	bnz	u23530
 30830  007C4C  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 30831  007C4E  A0D8               	btfss	status,0,c
 30832  007C50  D017               	goto	l20572
 30833  007C52                     u23530:
 30834                           
 30835                           ; BSR set to: 1
 30836                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 30837  007C52  0100               	movlb	0	; () banked
 30838  007C54  5182               	movf	_fullmotorPower& (0+255),w,b
 30839  007C56  6E10               	movwf	??_GetMotorPower^0,c
 30840  007C58  6A11               	clrf	(??_GetMotorPower+1)^0,c
 30841  007C5A  0101               	movlb	1	; () banked
 30842  007C5C  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 30843  007C5E  5C10               	subwf	??_GetMotorPower^0,w,c
 30844  007C60  5011               	movf	(??_GetMotorPower+1)^0,w,c
 30845  007C62  0A80               	xorlw	128
 30846  007C64  6E12               	movwf	(??_GetMotorPower+2)^0,c
 30847  007C66  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30848  007C68  0A80               	xorlw	128
 30849  007C6A  5812               	subwfb	(??_GetMotorPower+2)^0,w,c
 30850  007C6C  B0D8               	btfsc	status,0,c
 30851  007C6E  D002               	goto	l20570
 30852                           
 30853                           ; BSR set to: 1
 30854                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 30855  007C70  0E01               	movlw	1
 30856  007C72  D004               	goto	L111
 30857  007C74                     l20570:
 30858                           
 30859                           ; BSR set to: 1
 30860                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 30861  007C74  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 30862  007C76  0100               	movlb	0	; () banked
 30863  007C78  5D82               	subwf	_fullmotorPower& (0+255),w,b
 30864  007C7A  D017               	goto	L112
 30865  007C7C                     L111:
 30866  007C7C  6F92               	movwf	_temppower& (0+255),b
 30867  007C7E  D01F               	goto	l2240
 30868  007C80                     l20572:
 30869                           
 30870                           ; BSR set to: 1
 30871  007C80  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 30872  007C82  D005               	goto	u23550
 30873  007C84  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30874  007C86  E113               	bnz	l20582
 30875  007C88  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 30876  007C8A  B0D8               	btfsc	status,0,c
 30877  007C8C  D010               	goto	l20582
 30878  007C8E                     u23550:
 30879                           
 30880                           ; BSR set to: 1
 30881  007C8E  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 30882  007C90  D005               	goto	u23560
 30883  007C92  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 30884  007C94  E10C               	bnz	l20582
 30885  007C96  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 30886  007C98  B0D8               	btfsc	status,0,c
 30887  007C9A  D009               	goto	l20582
 30888  007C9C                     u23560:
 30889                           
 30890                           ; BSR set to: 1
 30891                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 30892  007C9C  C082  F192         	movff	_fullmotorPower,_temppower
 30893                           
 30894                           ; BSR set to: 1
 30895                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 30896  007CA0  0E08               	movlw	8
 30897  007CA2  0100               	movlb	0	; () banked
 30898  007CA4  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 30899  007CA6  D00B               	goto	l2240
 30900                           
 30901                           ; BSR set to: 0
 30902                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 30903  007CA8  0E3A               	movlw	58
 30904  007CAA                     L112:
 30905  007CAA  0101               	movlb	1	; () banked
 30906  007CAC  D7E7               	goto	L111
 30907  007CAE                     l20582:
 30908                           
 30909                           ; BSR set to: 1
 30910  007CAE  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 30911  007CB0  D006               	goto	l2240
 30912  007CB2  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 30913  007CB4  E102               	bnz	u23580
 30914  007CB6  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 30915  007CB8  B0D8               	btfsc	status,0,c
 30916  007CBA                     u23580:
 30917                           
 30918                           ; BSR set to: 1
 30919                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 30920  007CBA  C110  F192         	movff	_var_sys+16,_temppower	;volatile
 30921  007CBE                     l2240:
 30922                           
 30923                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 30924  007CBE  0101               	movlb	1	; () banked
 30925  007CC0  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 30926  007CC2  D00E               	goto	l20592
 30927  007CC4  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 30928  007CC6  E103               	bnz	u23590
 30929  007CC8  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 30930  007CCA  A0D8               	btfss	status,0,c
 30931  007CCC  D009               	goto	l20592
 30932  007CCE                     u23590:
 30933                           
 30934                           ; BSR set to: 1
 30935  007CCE  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 30936  007CD0  D005               	goto	u23600
 30937  007CD2  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30938  007CD4  E105               	bnz	l20592
 30939  007CD6  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 30940  007CD8  B0D8               	btfsc	status,0,c
 30941  007CDA  D002               	goto	l20592
 30942  007CDC                     u23600:
 30943                           
 30944                           ; BSR set to: 1
 30945                           ;outputs_MC50.c: 452:     defineatraso = 5;
 30946  007CDC  0E05               	movlw	5
 30947  007CDE  D001               	goto	L110
 30948  007CE0                     l20592:
 30949                           
 30950                           ; BSR set to: 1
 30951                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 30952  007CE0  0E17               	movlw	23
 30953  007CE2                     L110:
 30954  007CE2  6E13               	movwf	GetMotorPower@defineatraso^0,c
 30955                           
 30956                           ; BSR set to: 1
 30957                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 30958  007CE4  5192               	movf	_temppower& (0+255),w,b
 30959  007CE6  2413               	addwf	GetMotorPower@defineatraso^0,w,c
 30960                           
 30961                           ; BSR set to: 1
 30962  007CE8  0012               	return		;funcret
 30963  007CEA                     __end_of_GetMotorPower:
 30964                           	callstack 0
 30965                           
 30966 ;; *************** function _ControlCounterMoves *****************
 30967 ;; Defined at:
 30968 ;;		line 305 in file "controlMemory_MC50.c"
 30969 ;; Parameters:    Size  Location     Type
 30970 ;;		None
 30971 ;; Auto vars:     Size  Location     Type
 30972 ;;		None
 30973 ;; Return value:  Size  Location     Type
 30974 ;;                  1    wreg      void 
 30975 ;; Registers used:
 30976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30977 ;; Tracked objects:
 30978 ;;		On entry : 3E/1
 30979 ;;		On exit  : 0/0
 30980 ;;		Unchanged: 0/0
 30981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30986 ;;Total ram usage:        0 bytes
 30987 ;; Hardware stack levels used: 1
 30988 ;; Hardware stack levels required when called: 14
 30989 ;; This function calls:
 30990 ;;		_SaveNVM_VarSystem
 30991 ;; This function is called by:
 30992 ;;		_main
 30993 ;; This function uses a non-reentrant model
 30994 ;;
 30995                           
 30996                           	psect	text130
 30997  00915C                     __ptext130:
 30998                           	callstack 0
 30999  00915C                     _ControlCounterMoves:
 31000                           	callstack 16
 31001                           
 31002                           ;controlMemory_MC50.c: 308:     if(ts_system.timeBetweenSaveCounters<=0)
 31003                           
 31004                           ; BSR set to: 1
 31005                           ;incstack = 0
 31006  00915C  0101               	movlb	1	; () banked
 31007  00915E  BFC5               	btfsc	(_ts_system+39)& (0+255),7,b	;volatile
 31008  009160  D005               	goto	u29980
 31009  009162  51C5               	movf	(_ts_system+39)& (0+255),w,b	;volatile
 31010  009164  E127               	bnz	l1491
 31011  009166  05C4               	decf	(_ts_system+38)& (0+255),w,b	;volatile
 31012  009168  B0D8               	btfsc	status,0,c
 31013  00916A  0012               	return	
 31014  00916C                     u29980:
 31015                           
 31016                           ; BSR set to: 1
 31017                           ;controlMemory_MC50.c: 309:     {;controlMemory_MC50.c: 310:        ts_system.timeBetwee
      +                          nSaveCounters=((1000/50)*60)*5;
 31018  00916C  0E17               	movlw	23
 31019  00916E  6FC5               	movwf	(_ts_system+39)& (0+255),b	;volatile
 31020  009170  0E70               	movlw	112
 31021  009172  6FC4               	movwf	(_ts_system+38)& (0+255),b	;volatile
 31022                           
 31023                           ; BSR set to: 1
 31024                           ;controlMemory_MC50.c: 312:        if(var_sys.actualCounterMoves!=var_sys_NVM.counterMov
      +                          es)
 31025  009174  0100               	movlb	0	; () banked
 31026  009176  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 31027  009178  0101               	movlb	1	; () banked
 31028  00917A  193C               	xorwf	(_var_sys+60)& (0+255),w,b	;volatile
 31029  00917C  E110               	bnz	u29990
 31030  00917E  0100               	movlb	0	; () banked
 31031  009180  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 31032  009182  0101               	movlb	1	; () banked
 31033  009184  193D               	xorwf	(_var_sys+61)& (0+255),w,b	;volatile
 31034  009186  E10B               	bnz	u29990
 31035  009188  0100               	movlb	0	; () banked
 31036  00918A  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 31037  00918C  0101               	movlb	1	; () banked
 31038  00918E  193E               	xorwf	(_var_sys+62)& (0+255),w,b	;volatile
 31039  009190  E106               	bnz	u29990
 31040  009192  0100               	movlb	0	; () banked
 31041  009194  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 31042  009196  0101               	movlb	1	; () banked
 31043  009198  193F               	xorwf	(_var_sys+63)& (0+255),w,b	;volatile
 31044  00919A  B4D8               	btfsc	status,2,c
 31045  00919C  0012               	return	
 31046  00919E                     u29990:
 31047                           
 31048                           ; BSR set to: 1
 31049                           ;controlMemory_MC50.c: 313:        {;controlMemory_MC50.c: 314:            var_sys_NVM.c
      +                          ounterMoves=var_sys.actualCounterMoves;
 31050  00919E  C13C  F0BA         	movff	_var_sys+60,_var_sys_NVM+34	;volatile
 31051  0091A2  C13D  F0BB         	movff	_var_sys+61,_var_sys_NVM+35	;volatile
 31052  0091A6  C13E  F0BC         	movff	_var_sys+62,_var_sys_NVM+36	;volatile
 31053  0091AA  C13F  F0BD         	movff	_var_sys+63,_var_sys_NVM+37	;volatile
 31054                           
 31055                           ; BSR set to: 1
 31056                           ;controlMemory_MC50.c: 315:            SaveNVM_VarSystem(pageMemoryCounters);
 31057  0091AE  0E02               	movlw	2
 31058  0091B0  EC05  F04C         	call	_SaveNVM_VarSystem
 31059  0091B4                     l1491:
 31060  0091B4  0012               	return		;funcret
 31061  0091B6                     __end_of_ControlCounterMoves:
 31062                           	callstack 0
 31063                           
 31064 ;; *************** function _SaveNVM_VarSystem *****************
 31065 ;; Defined at:
 31066 ;;		line 187 in file "controlMemory_MC50.c"
 31067 ;; Parameters:    Size  Location     Type
 31068 ;;  page            1    wreg     unsigned char 
 31069 ;; Auto vars:     Size  Location     Type
 31070 ;;  page            1    0[BANK0 ] unsigned char 
 31071 ;;  tempAdd         2    1[BANK0 ] unsigned int 
 31072 ;;  point           1    3[BANK0 ] PTR unsigned char 
 31073 ;;		 -> var_sys_NVM(64), 
 31074 ;; Return value:  Size  Location     Type
 31075 ;;                  1    wreg      void 
 31076 ;; Registers used:
 31077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31078 ;; Tracked objects:
 31079 ;;		On entry : 0/0
 31080 ;;		On exit  : 0/0
 31081 ;;		Unchanged: 0/0
 31082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31084 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31086 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31087 ;;Total ram usage:        4 bytes
 31088 ;; Hardware stack levels used: 1
 31089 ;; Hardware stack levels required when called: 13
 31090 ;; This function calls:
 31091 ;;		_i2c_writeNBytes
 31092 ;; This function is called by:
 31093 ;;		_loadNVM_VarSystem
 31094 ;;		_ResetDefaultMemory
 31095 ;;		_ControlCounterMoves
 31096 ;;		_checkNVM_VarSystem
 31097 ;;		_sm_execute_ControlLearning
 31098 ;;		_sm_execute_menuConfiguration
 31099 ;;		_setValueToEdit
 31100 ;;		_controlSelectRemote
 31101 ;;		_eusartparser
 31102 ;; This function uses a non-reentrant model
 31103 ;;
 31104                           
 31105                           	psect	text131
 31106  00980A                     __ptext131:
 31107                           	callstack 0
 31108  00980A                     _SaveNVM_VarSystem:
 31109                           	callstack 14
 31110                           
 31111                           ;incstack = 0
 31112                           ;SaveNVM_VarSystem@page stored from wreg
 31113  00980A  0100               	movlb	0	; () banked
 31114  00980C  6FD8               	movwf	SaveNVM_VarSystem@page& (0+255),b
 31115                           
 31116                           ;controlMemory_MC50.c: 187: void SaveNVM_VarSystem(unsigned char page);controlMemory_MC5
      +                          0.c: 188: {;controlMemory_MC50.c: 189:     unsigned int tempAdd=page*16;
 31117  00980E  0100               	movlb	0	; () banked
 31118  009810  51D8               	movf	SaveNVM_VarSystem@page& (0+255),w,b
 31119  009812  0D10               	mullw	16
 31120  009814  CFF3 F0D9          	movff	prodl,SaveNVM_VarSystem@tempAdd
 31121  009818  CFF4 F0DA          	movff	prodh,SaveNVM_VarSystem@tempAdd+1
 31122                           
 31123                           ; BSR set to: 0
 31124                           ;controlMemory_MC50.c: 190:     char* point=(char*)&var_sys_NVM;
 31125  00981C  0E98               	movlw	low _var_sys_NVM
 31126  00981E  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 31127                           
 31128                           ; BSR set to: 0
 31129                           ;controlMemory_MC50.c: 191:     point=point+tempAdd;
 31130  009820  51DB               	movf	SaveNVM_VarSystem@point& (0+255),w,b
 31131  009822  25D9               	addwf	SaveNVM_VarSystem@tempAdd& (0+255),w,b
 31132  009824  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 31133                           
 31134                           ; BSR set to: 0
 31135                           ;controlMemory_MC50.c: 192:    i2c_writeNBytes(0x50, tempAdd, point, 16);
 31136  009826  C0D9  F022         	movff	SaveNVM_VarSystem@tempAdd,i2c_writeNBytes@reg
 31137  00982A  C0DA  F023         	movff	SaveNVM_VarSystem@tempAdd+1,i2c_writeNBytes@reg+1
 31138  00982E  C0DB  F024         	movff	SaveNVM_VarSystem@point,i2c_writeNBytes@data
 31139  009832  0E00               	movlw	0
 31140  009834  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 31141  009836  0E10               	movlw	16
 31142  009838  6E25               	movwf	i2c_writeNBytes@len^0,c
 31143  00983A  0E50               	movlw	80
 31144  00983C  EC7B  F045         	call	_i2c_writeNBytes
 31145  009840  0012               	return		;funcret
 31146  009842                     __end_of_SaveNVM_VarSystem:
 31147                           	callstack 0
 31148                           
 31149 ;; *************** function _i2c_writeNBytes *****************
 31150 ;; Defined at:
 31151 ;;		line 50 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31152 ;; Parameters:    Size  Location     Type
 31153 ;;  address         1    wreg     unsigned char 
 31154 ;;  reg             2   33[COMRAM] unsigned short 
 31155 ;;  data            1   35[COMRAM] PTR void 
 31156 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 31157 ;;  len             2   36[COMRAM] unsigned int 
 31158 ;; Auto vars:     Size  Location     Type
 31159 ;;  address         1   56[COMRAM] unsigned char 
 31160 ;;  dat            17   39[COMRAM] unsigned char [17]
 31161 ;; Return value:  Size  Location     Type
 31162 ;;                  1    wreg      void 
 31163 ;; Registers used:
 31164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31165 ;; Tracked objects:
 31166 ;;		On entry : 3F/0
 31167 ;;		On exit  : 0/0
 31168 ;;		Unchanged: 0/0
 31169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31170 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31171 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31172 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31173 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31174 ;;Total ram usage:       24 bytes
 31175 ;; Hardware stack levels used: 1
 31176 ;; Hardware stack levels required when called: 12
 31177 ;; This function calls:
 31178 ;;		_I2C1_Close
 31179 ;;		_I2C1_MasterWrite
 31180 ;;		_I2C1_Open
 31181 ;;		_I2C1_SetAddressNackCallback
 31182 ;;		_I2C1_SetBuffer
 31183 ;;		_memcpy
 31184 ;; This function is called by:
 31185 ;;		_saveNewSerial
 31186 ;;		_RemoveSerial
 31187 ;;		_SaveNVM_VarSystem
 31188 ;; This function uses a non-reentrant model
 31189 ;;
 31190                           
 31191                           	psect	text132
 31192  008AF6                     __ptext132:
 31193                           	callstack 0
 31194  008AF6                     _i2c_writeNBytes:
 31195                           	callstack 14
 31196                           
 31197                           ;incstack = 0
 31198                           ;i2c_writeNBytes@address stored from wreg
 31199  008AF6  6E39               	movwf	i2c_writeNBytes@address^0,c
 31200                           
 31201                           ;mcc_generated_files/drivers/i2c_simple_master.c: 50: void i2c_writeNBytes(i2c1_address_
      +                          t address, uint16_t reg, void* data, size_t len);mcc_generated_files/drivers/i2c_simple_
      +                          master.c: 51: {;mcc_generated_files/drivers/i2c_simple_master.c: 52:     uint8_t dat[17]
      +                          ;;mcc_generated_files/drivers/i2c_simple_master.c: 53:     dat[0] = reg;
 31202  008AF8  C022  F028         	movff	i2c_writeNBytes@reg,i2c_writeNBytes@dat
 31203                           
 31204                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     memcpy(dat + 1, data, len);
 31205  008AFC  0E29               	movlw	low (i2c_writeNBytes@dat+1)
 31206  008AFE  6E10               	movwf	memcpy@d1^0,c
 31207  008B00  6A11               	clrf	(memcpy@d1+1)^0,c
 31208  008B02  C024  F012         	movff	i2c_writeNBytes@data,memcpy@s1
 31209  008B06  6A13               	clrf	(memcpy@s1+1)^0,c
 31210  008B08  C025  F014         	movff	i2c_writeNBytes@len,memcpy@n
 31211  008B0C  C026  F015         	movff	i2c_writeNBytes@len+1,memcpy@n+1
 31212  008B10  EC07  F04B         	call	_memcpy	;wreg free
 31213  008B14                     l20634:
 31214  008B14  5023               	movf	(i2c_writeNBytes@reg+1)^0,w,c
 31215  008B16  1039               	iorwf	i2c_writeNBytes@address^0,w,c
 31216  008B18  EC4B  F043         	call	_I2C1_Open
 31217  008B1C  0900               	iorlw	0
 31218  008B1E  B4D8               	btfsc	status,2,c
 31219  008B20  D7F9               	goto	l20634
 31220                           
 31221                           ;mcc_generated_files/drivers/i2c_simple_master.c: 56:     I2C1_SetBuffer(dat,len + 1);
 31222  008B22  0E28               	movlw	low i2c_writeNBytes@dat
 31223  008B24  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 31224  008B26  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 31225  008B28  0E01               	movlw	1
 31226  008B2A  2425               	addwf	i2c_writeNBytes@len^0,w,c
 31227  008B2C  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31228  008B2E  0E00               	movlw	0
 31229  008B30  2026               	addwfc	(i2c_writeNBytes@len+1)^0,w,c
 31230  008B32  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31231  008B34  EC1C  F04F         	call	_I2C1_SetBuffer	;wreg free
 31232                           
 31233                           ; BSR set to: 2
 31234                           ;mcc_generated_files/drivers/i2c_simple_master.c: 57:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 31235  008B38  0E00               	movlw	0
 31236  008B3A  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 31237  008B3C  0E00               	movlw	0
 31238  008B3E  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 31239  008B40  0E00               	movlw	0
 31240  008B42  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 31241  008B44  0E00               	movlw	0
 31242  008B46  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 31243  008B48  EC4D  F04F         	call	_I2C1_SetAddressNackCallback	;wreg free
 31244                           
 31245                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58:     I2C1_MasterWrite();
 31246  008B4C  EC1B  F050         	call	_I2C1_MasterWrite	;wreg free
 31247  008B50                     l20642:
 31248  008B50  EC8E  F04E         	call	_I2C1_Close	;wreg free
 31249  008B54  06E8               	decf	wreg,f,c
 31250  008B56  B4D8               	btfsc	status,2,c
 31251  008B58  D7FB               	goto	l20642
 31252                           
 31253                           ;mcc_generated_files/drivers/i2c_simple_master.c: 60:     _delay((unsigned long)((10)*(6
      +                          4000000/4000.0)));
 31254  008B5A  0ED0               	movlw	208
 31255  008B5C  6E27               	movwf	??_i2c_writeNBytes^0,c
 31256  008B5E  0ECA               	movlw	202
 31257  008B60                     u34427:
 31258  008B60  2EE8               	decfsz	wreg,f,c
 31259  008B62  D7FE               	bra	u34427
 31260  008B64  2E27               	decfsz	??_i2c_writeNBytes^0,f,c
 31261  008B66  D7FC               	bra	u34427
 31262  008B68  0012               	return		;funcret
 31263  008B6A                     __end_of_i2c_writeNBytes:
 31264                           	callstack 0
 31265                           
 31266 ;; *************** function _memcpy *****************
 31267 ;; Defined at:
 31268 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memcpy.c"
 31269 ;; Parameters:    Size  Location     Type
 31270 ;;  d1              2   15[COMRAM] PTR void 
 31271 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 31272 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 31273 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 31274 ;;		 -> i2c_writeNBytes@dat(17), 
 31275 ;;  s1              2   17[COMRAM] PTR const void 
 31276 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 31277 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 31278 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 31279 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 31280 ;;  n               2   19[COMRAM] unsigned int 
 31281 ;; Auto vars:     Size  Location     Type
 31282 ;;  s               2   24[COMRAM] PTR const unsigned char 
 31283 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 31284 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 31285 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 31286 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 31287 ;;  d               2   22[COMRAM] PTR unsigned char 
 31288 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 31289 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 31290 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 31291 ;;		 -> i2c_writeNBytes@dat(17), 
 31292 ;;  tmp             1   21[COMRAM] unsigned char 
 31293 ;; Return value:  Size  Location     Type
 31294 ;;                  2   15[COMRAM] PTR void 
 31295 ;; Registers used:
 31296 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31297 ;; Tracked objects:
 31298 ;;		On entry : 0/0
 31299 ;;		On exit  : 0/0
 31300 ;;		Unchanged: 0/0
 31301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31302 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31303 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31305 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31306 ;;Total ram usage:       11 bytes
 31307 ;; Hardware stack levels used: 1
 31308 ;; Hardware stack levels required when called: 4
 31309 ;; This function calls:
 31310 ;;		Nothing
 31311 ;; This function is called by:
 31312 ;;		_i2c_writeNBytes
 31313 ;;		_getSerialCmd
 31314 ;;		_NormalKeyGen
 31315 ;;		_Decrypt
 31316 ;;		_keeloqDecryptPacket
 31317 ;;		_DecryptPacket_12BIT
 31318 ;; This function uses a non-reentrant model
 31319 ;;
 31320                           
 31321                           	psect	text133
 31322  00960E                     __ptext133:
 31323                           	callstack 0
 31324  00960E                     _memcpy:
 31325                           	callstack 21
 31326                           
 31327                           ;incstack = 0
 31328  00960E  C012  F019         	movff	memcpy@s1,memcpy@s
 31329  009612  C013  F01A         	movff	memcpy@s1+1,memcpy@s+1
 31330  009616  C010  F017         	movff	memcpy@d1,memcpy@d
 31331  00961A  C011  F018         	movff	memcpy@d1+1,memcpy@d+1
 31332  00961E  D010               	goto	l20556
 31333  009620                     l20548:
 31334  009620  C019  FFD9         	movff	memcpy@s,fsr2l
 31335  009624  C01A  FFDA         	movff	memcpy@s+1,fsr2h
 31336  009628  50DF               	movf	indf2,w,c
 31337  00962A  6E16               	movwf	memcpy@tmp^0,c
 31338  00962C  4A19               	infsnz	memcpy@s^0,f,c
 31339  00962E  2A1A               	incf	(memcpy@s+1)^0,f,c
 31340  009630  C017  FFD9         	movff	memcpy@d,fsr2l
 31341  009634  C018  FFDA         	movff	memcpy@d+1,fsr2h
 31342  009638  C016  FFDF         	movff	memcpy@tmp,indf2
 31343  00963C  4A17               	infsnz	memcpy@d^0,f,c
 31344  00963E  2A18               	incf	(memcpy@d+1)^0,f,c
 31345  009640                     l20556:
 31346  009640  0614               	decf	memcpy@n^0,f,c
 31347  009642  A0D8               	btfss	status,0,c
 31348  009644  0615               	decf	(memcpy@n+1)^0,f,c
 31349  009646  2814               	incf	memcpy@n^0,w,c
 31350  009648  E1EB               	bnz	l20548
 31351  00964A  2815               	incf	(memcpy@n+1)^0,w,c
 31352  00964C  B4D8               	btfsc	status,2,c
 31353  00964E  0012               	return	
 31354  009650  D7E7               	goto	l20548
 31355  009652                     __end_of_memcpy:
 31356                           	callstack 0
 31357                           
 31358 ;; *************** function _I2C1_SetAddressNackCallback *****************
 31359 ;; Defined at:
 31360 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 31361 ;; Parameters:    Size  Location     Type
 31362 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 31363 ;;		 -> Absolute function(1), 
 31364 ;;  ptr             2   22[COMRAM] PTR void 
 31365 ;;		 -> NULL(0), 
 31366 ;; Auto vars:     Size  Location     Type
 31367 ;;		None
 31368 ;; Return value:  Size  Location     Type
 31369 ;;                  1    wreg      void 
 31370 ;; Registers used:
 31371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31372 ;; Tracked objects:
 31373 ;;		On entry : 3F/2
 31374 ;;		On exit  : 0/0
 31375 ;;		Unchanged: 0/0
 31376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31377 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31380 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31381 ;;Total ram usage:        4 bytes
 31382 ;; Hardware stack levels used: 1
 31383 ;; Hardware stack levels required when called: 5
 31384 ;; This function calls:
 31385 ;;		_I2C1_SetCallback
 31386 ;; This function is called by:
 31387 ;;		_i2c_writeNBytes
 31388 ;;		_i2c_readDataBlock
 31389 ;;		_I2C1_Read1ByteRegister
 31390 ;; This function uses a non-reentrant model
 31391 ;;
 31392                           
 31393                           	psect	text134
 31394  009E9A                     __ptext134:
 31395                           	callstack 0
 31396  009E9A                     _I2C1_SetAddressNackCallback:
 31397                           	callstack 20
 31398                           
 31399                           ; BSR set to: 2
 31400                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 31401                           
 31402                           ;incstack = 0
 31403  009E9A  C015  F010         	movff	I2C1_SetAddressNackCallback@cb,I2C1_SetCallback@cb
 31404  009E9E  C016  F011         	movff	I2C1_SetAddressNackCallback@cb+1,I2C1_SetCallback@cb+1
 31405  009EA2  C017  F012         	movff	I2C1_SetAddressNackCallback@ptr,I2C1_SetCallback@ptr
 31406  009EA6  C018  F013         	movff	I2C1_SetAddressNackCallback@ptr+1,I2C1_SetCallback@ptr+1
 31407  009EAA  0E02               	movlw	2
 31408  009EAC  EC94  F046         	call	_I2C1_SetCallback
 31409  009EB0  0012               	return		;funcret
 31410  009EB2                     __end_of_I2C1_SetAddressNackCallback:
 31411                           	callstack 0
 31412                           
 31413 ;; *************** function _I2C1_Open *****************
 31414 ;; Defined at:
 31415 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 31416 ;; Parameters:    Size  Location     Type
 31417 ;;  address         1    wreg     unsigned char 
 31418 ;; Auto vars:     Size  Location     Type
 31419 ;;  address         1   15[COMRAM] unsigned char 
 31420 ;;  returnValue     1   16[COMRAM] enum E355
 31421 ;; Return value:  Size  Location     Type
 31422 ;;                  1    wreg      enum E355
 31423 ;; Registers used:
 31424 ;;		wreg, status,2, status,0, cstack
 31425 ;; Tracked objects:
 31426 ;;		On entry : 0/0
 31427 ;;		On exit  : 33/2
 31428 ;;		Unchanged: 0/0
 31429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31431 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31433 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31434 ;;Total ram usage:        2 bytes
 31435 ;; Hardware stack levels used: 1
 31436 ;; Hardware stack levels required when called: 5
 31437 ;; This function calls:
 31438 ;;		_I2C1_MasterClearIrq
 31439 ;;		_I2C1_MasterOpen
 31440 ;; This function is called by:
 31441 ;;		_i2c_writeNBytes
 31442 ;;		_i2c_readDataBlock
 31443 ;;		_I2C1_Read1ByteRegister
 31444 ;; This function uses a non-reentrant model
 31445 ;;
 31446                           
 31447                           	psect	text135
 31448  008696                     __ptext135:
 31449                           	callstack 0
 31450  008696                     _I2C1_Open:
 31451                           	callstack 20
 31452                           
 31453                           ;incstack = 0
 31454                           ;I2C1_Open@address stored from wreg
 31455  008696  6E10               	movwf	I2C1_Open@address^0,c
 31456                           
 31457                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 31458  008698  0E01               	movlw	1
 31459  00869A  6E11               	movwf	I2C1_Open@returnValue^0,c
 31460                           
 31461                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 31462  00869C  0102               	movlb	2	; () banked
 31463  00869E  B55F               	btfsc	(_I2C1_Status+35)& (0+255),2,b
 31464  0086A0  D03A               	goto	l20522
 31465                           
 31466                           ; BSR set to: 2
 31467                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 31468  0086A2  C010  F258         	movff	I2C1_Open@address,_I2C1_Status+28
 31469                           
 31470                           ; BSR set to: 2
 31471                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 31472  0086A6  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 31473                           
 31474                           ; BSR set to: 2
 31475                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 31476  0086A8  855F               	bsf	(_I2C1_Status+35)& (0+255),2,b
 31477                           
 31478                           ; BSR set to: 2
 31479                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 31480  0086AA  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 31481                           
 31482                           ; BSR set to: 2
 31483                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 31484  0086AC  0E0E               	movlw	14
 31485  0086AE  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31486                           
 31487                           ; BSR set to: 2
 31488                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 31489  0086B0  0E01               	movlw	1
 31490  0086B2  6F57               	movwf	(_I2C1_Status+27)& (0+255),b
 31491  0086B4  0EF4               	movlw	244
 31492  0086B6  6F56               	movwf	(_I2C1_Status+26)& (0+255),b
 31493                           
 31494                           ; BSR set to: 2
 31495                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 31496  0086B8  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 31497                           
 31498                           ; BSR set to: 2
 31499                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 31500  0086BA  0ED0               	movlw	low _I2C1_CallbackReturnStop
 31501  0086BC  6F3C               	movwf	_I2C1_Status& (0+255),b
 31502  0086BE  0EA0               	movlw	high _I2C1_CallbackReturnStop
 31503  0086C0  6F3D               	movwf	(_I2C1_Status+1)& (0+255),b
 31504                           
 31505                           ; BSR set to: 2
 31506                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 31507  0086C2  0E00               	movlw	0
 31508  0086C4  6F48               	movwf	(_I2C1_Status+12)& (0+255),b
 31509  0086C6  0E00               	movlw	0
 31510  0086C8  6F49               	movwf	(_I2C1_Status+13)& (0+255),b
 31511                           
 31512                           ; BSR set to: 2
 31513                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 31514  0086CA  0ED0               	movlw	low _I2C1_CallbackReturnStop
 31515  0086CC  6F3E               	movwf	(_I2C1_Status+2)& (0+255),b
 31516  0086CE  0EA0               	movlw	high _I2C1_CallbackReturnStop
 31517  0086D0  6F3F               	movwf	(_I2C1_Status+3)& (0+255),b
 31518                           
 31519                           ; BSR set to: 2
 31520                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 31521  0086D2  0E00               	movlw	0
 31522  0086D4  6F4A               	movwf	(_I2C1_Status+14)& (0+255),b
 31523  0086D6  0E00               	movlw	0
 31524  0086D8  6F4B               	movwf	(_I2C1_Status+15)& (0+255),b
 31525                           
 31526                           ; BSR set to: 2
 31527                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 31528  0086DA  0ED0               	movlw	low _I2C1_CallbackReturnStop
 31529  0086DC  6F40               	movwf	(_I2C1_Status+4)& (0+255),b
 31530  0086DE  0EA0               	movlw	high _I2C1_CallbackReturnStop
 31531  0086E0  6F41               	movwf	(_I2C1_Status+5)& (0+255),b
 31532                           
 31533                           ; BSR set to: 2
 31534                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 31535  0086E2  0E00               	movlw	0
 31536  0086E4  6F4C               	movwf	(_I2C1_Status+16)& (0+255),b
 31537  0086E6  0E00               	movlw	0
 31538  0086E8  6F4D               	movwf	(_I2C1_Status+17)& (0+255),b
 31539                           
 31540                           ; BSR set to: 2
 31541                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 31542  0086EA  0ED0               	movlw	low _I2C1_CallbackReturnStop
 31543  0086EC  6F42               	movwf	(_I2C1_Status+6)& (0+255),b
 31544  0086EE  0EA0               	movlw	high _I2C1_CallbackReturnStop
 31545  0086F0  6F43               	movwf	(_I2C1_Status+7)& (0+255),b
 31546                           
 31547                           ; BSR set to: 2
 31548                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 31549  0086F2  0E00               	movlw	0
 31550  0086F4  6F4E               	movwf	(_I2C1_Status+18)& (0+255),b
 31551  0086F6  0E00               	movlw	0
 31552  0086F8  6F4F               	movwf	(_I2C1_Status+19)& (0+255),b
 31553                           
 31554                           ; BSR set to: 2
 31555                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 31556  0086FA  0ECC               	movlw	low _I2C1_CallbackReturnReset
 31557  0086FC  6F44               	movwf	(_I2C1_Status+8)& (0+255),b
 31558  0086FE  0EA0               	movlw	high _I2C1_CallbackReturnReset
 31559  008700  6F45               	movwf	(_I2C1_Status+9)& (0+255),b
 31560                           
 31561                           ; BSR set to: 2
 31562                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 31563  008702  0E00               	movlw	0
 31564  008704  6F50               	movwf	(_I2C1_Status+20)& (0+255),b
 31565  008706  0E00               	movlw	0
 31566  008708  6F51               	movwf	(_I2C1_Status+21)& (0+255),b
 31567                           
 31568                           ; BSR set to: 2
 31569                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 31570  00870A  EC55  F050         	call	_I2C1_MasterClearIrq	;wreg free
 31571                           
 31572                           ; BSR set to: 14
 31573                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 31574  00870E  EC59  F04F         	call	_I2C1_MasterOpen	;wreg free
 31575                           
 31576                           ; BSR set to: 14
 31577                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 31578  008712  0E00               	movlw	0
 31579  008714  6E11               	movwf	I2C1_Open@returnValue^0,c
 31580  008716                     l20522:
 31581                           
 31582                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 31583  008716  5011               	movf	I2C1_Open@returnValue^0,w,c
 31584  008718  0012               	return		;funcret
 31585  00871A                     __end_of_I2C1_Open:
 31586                           	callstack 0
 31587                           
 31588 ;; *************** function _I2C1_MasterOpen *****************
 31589 ;; Defined at:
 31590 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 31591 ;; Parameters:    Size  Location     Type
 31592 ;;		None
 31593 ;; Auto vars:     Size  Location     Type
 31594 ;;		None
 31595 ;; Return value:  Size  Location     Type
 31596 ;;                  1    wreg      _Bool 
 31597 ;; Registers used:
 31598 ;;		wreg, status,2
 31599 ;; Tracked objects:
 31600 ;;		On entry : 3F/E
 31601 ;;		On exit  : 3F/E
 31602 ;;		Unchanged: 3F/0
 31603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31608 ;;Total ram usage:        0 bytes
 31609 ;; Hardware stack levels used: 1
 31610 ;; Hardware stack levels required when called: 4
 31611 ;; This function calls:
 31612 ;;		Nothing
 31613 ;; This function is called by:
 31614 ;;		_I2C1_Open
 31615 ;; This function uses a non-reentrant model
 31616 ;;
 31617                           
 31618                           	psect	text136
 31619  009EB2                     __ptext136:
 31620                           	callstack 0
 31621  009EB2                     _I2C1_MasterOpen:
 31622                           	callstack 20
 31623                           
 31624                           ; BSR set to: 14
 31625                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 31626                           
 31627                           ;incstack = 0
 31628  009EB2  BA96               	btfsc	150,5,c	;volatile
 31629  009EB4  0012               	return	
 31630                           
 31631                           ; BSR set to: 14
 31632                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x80;
 31633  009EB6  0E80               	movlw	128
 31634  009EB8  6E95               	movwf	149,c	;volatile
 31635                           
 31636                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 31637  009EBA  0E08               	movlw	8
 31638  009EBC  6E96               	movwf	150,c	;volatile
 31639                           
 31640                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 31641  009EBE  0E00               	movlw	0
 31642  009EC0  6E97               	movwf	151,c	;volatile
 31643                           
 31644                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x9F;
 31645  009EC2  0E9F               	movlw	159
 31646  009EC4  6E93               	movwf	147,c	;volatile
 31647                           
 31648                           ; BSR set to: 14
 31649                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 31650  009EC6  8A96               	bsf	150,5,c	;volatile
 31651                           
 31652                           ; BSR set to: 14
 31653  009EC8  0012               	return		;funcret
 31654  009ECA                     __end_of_I2C1_MasterOpen:
 31655                           	callstack 0
 31656                           
 31657 ;; *************** function _I2C1_MasterWrite *****************
 31658 ;; Defined at:
 31659 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 31660 ;; Parameters:    Size  Location     Type
 31661 ;;		None
 31662 ;; Auto vars:     Size  Location     Type
 31663 ;;		None
 31664 ;; Return value:  Size  Location     Type
 31665 ;;                  1    wreg      enum E355
 31666 ;; Registers used:
 31667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31668 ;; Tracked objects:
 31669 ;;		On entry : 0/2
 31670 ;;		On exit  : 3F/2
 31671 ;;		Unchanged: 0/0
 31672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31677 ;;Total ram usage:        0 bytes
 31678 ;; Hardware stack levels used: 1
 31679 ;; Hardware stack levels required when called: 11
 31680 ;; This function calls:
 31681 ;;		_I2C1_MasterOperation
 31682 ;; This function is called by:
 31683 ;;		_i2c_writeNBytes
 31684 ;;		_i2c_readDataBlock
 31685 ;;		_I2C1_Read1ByteRegister
 31686 ;; This function uses a non-reentrant model
 31687 ;;
 31688                           
 31689                           	psect	text137
 31690  00A036                     __ptext137:
 31691                           	callstack 0
 31692  00A036                     _I2C1_MasterWrite:
 31693                           	callstack 14
 31694                           
 31695                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 31696                           
 31697                           ; BSR set to: 14
 31698                           ;incstack = 0
 31699  00A036  0E00               	movlw	0
 31700  00A038  ECF7  F04C         	call	_I2C1_MasterOperation
 31701                           
 31702                           ; BSR set to: 2
 31703  00A03C  0012               	return		;funcret
 31704  00A03E                     __end_of_I2C1_MasterWrite:
 31705                           	callstack 0
 31706                           
 31707 ;; *************** function _I2C1_MasterOperation *****************
 31708 ;; Defined at:
 31709 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 31710 ;; Parameters:    Size  Location     Type
 31711 ;;  read            1    wreg     _Bool 
 31712 ;; Auto vars:     Size  Location     Type
 31713 ;;  read            1   31[COMRAM] _Bool 
 31714 ;;  returnValue     1   32[COMRAM] enum E355
 31715 ;; Return value:  Size  Location     Type
 31716 ;;                  1    wreg      enum E355
 31717 ;; Registers used:
 31718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31719 ;; Tracked objects:
 31720 ;;		On entry : 0/2
 31721 ;;		On exit  : 3F/2
 31722 ;;		Unchanged: 0/0
 31723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31725 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31727 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31728 ;;Total ram usage:        2 bytes
 31729 ;; Hardware stack levels used: 1
 31730 ;; Hardware stack levels required when called: 10
 31731 ;; This function calls:
 31732 ;;		_I2C1_MasterStart
 31733 ;;		_I2C1_Poller
 31734 ;; This function is called by:
 31735 ;;		_I2C1_MasterWrite
 31736 ;; This function uses a non-reentrant model
 31737 ;;
 31738                           
 31739                           	psect	text138
 31740  0099EE                     __ptext138:
 31741                           	callstack 0
 31742  0099EE                     _I2C1_MasterOperation:
 31743                           	callstack 14
 31744                           
 31745                           ; BSR set to: 2
 31746                           ;incstack = 0
 31747                           ;I2C1_MasterOperation@read stored from wreg
 31748  0099EE  6E20               	movwf	I2C1_MasterOperation@read^0,c
 31749                           
 31750                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 31751  0099F0  0E01               	movlw	1
 31752  0099F2  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 31753                           
 31754                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 31755  0099F4  0102               	movlb	2	; () banked
 31756  0099F6  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 31757  0099F8  D00E               	goto	l20474
 31758                           
 31759                           ; BSR set to: 2
 31760                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 31761  0099FA  835F               	bsf	(_I2C1_Status+35)& (0+255),1,b
 31762                           
 31763                           ; BSR set to: 2
 31764                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 31765  0099FC  0E00               	movlw	0
 31766  0099FE  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 31767                           
 31768                           ; BSR set to: 2
 31769                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 31770  009A00  5020               	movf	I2C1_MasterOperation@read^0,w,c
 31771  009A02  B4D8               	btfsc	status,2,c
 31772  009A04  D002               	goto	l20468
 31773                           
 31774                           ; BSR set to: 2
 31775                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 31776  009A06  0E01               	movlw	1
 31777  009A08  D001               	goto	L113
 31778  009A0A                     l20468:
 31779                           
 31780                           ; BSR set to: 2
 31781                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 31782  009A0A  0E02               	movlw	2
 31783  009A0C                     L113:
 31784  009A0C  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31785                           
 31786                           ; BSR set to: 2
 31787                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 31788  009A0E  EC6E  F050         	call	_I2C1_MasterStart	;wreg free
 31789                           
 31790                           ; BSR set to: 2
 31791                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 31792  009A12  ECB6  F04F         	call	_I2C1_Poller	;wreg free
 31793  009A16                     l20474:
 31794                           
 31795                           ; BSR set to: 2
 31796                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 31797  009A16  5021               	movf	I2C1_MasterOperation@returnValue^0,w,c
 31798                           
 31799                           ; BSR set to: 2
 31800  009A18  0012               	return		;funcret
 31801  009A1A                     __end_of_I2C1_MasterOperation:
 31802                           	callstack 0
 31803                           
 31804 ;; *************** function _I2C1_Poller *****************
 31805 ;; Defined at:
 31806 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 31807 ;; Parameters:    Size  Location     Type
 31808 ;;		None
 31809 ;; Auto vars:     Size  Location     Type
 31810 ;;		None
 31811 ;; Return value:  Size  Location     Type
 31812 ;;                  1    wreg      void 
 31813 ;; Registers used:
 31814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31815 ;; Tracked objects:
 31816 ;;		On entry : 3F/2
 31817 ;;		On exit  : 3F/2
 31818 ;;		Unchanged: 0/0
 31819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31824 ;;Total ram usage:        0 bytes
 31825 ;; Hardware stack levels used: 1
 31826 ;; Hardware stack levels required when called: 9
 31827 ;; This function calls:
 31828 ;;		_I2C1_MasterFsm
 31829 ;;		_I2C1_MasterWaitForEvent
 31830 ;; This function is called by:
 31831 ;;		_I2C1_MasterOperation
 31832 ;; This function uses a non-reentrant model
 31833 ;;
 31834                           
 31835                           	psect	text139
 31836  009F6C                     __ptext139:
 31837                           	callstack 0
 31838  009F6C                     _I2C1_Poller:
 31839                           	callstack 14
 31840                           
 31841                           ; BSR set to: 2
 31842                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 31843                           
 31844                           ; BSR set to: 2
 31845                           ;incstack = 0
 31846  009F6C  D004               	goto	l20442
 31847  009F6E                     l20438:
 31848                           
 31849                           ; BSR set to: 2
 31850                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 31851  009F6E  EC1F  F050         	call	_I2C1_MasterWaitForEvent	;wreg free
 31852                           
 31853                           ; BSR set to: 14
 31854                           ;mcc_generated_files/i2c1_master.c: 317:     I2C1_MasterFsm();
 31855  009F72  EC88  F049         	call	_I2C1_MasterFsm	;wreg free
 31856  009F76                     l20442:
 31857                           
 31858                           ; BSR set to: 2
 31859                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 31860  009F76  A35F               	btfss	(_I2C1_Status+35)& (0+255),1,b
 31861  009F78  0012               	return	
 31862  009F7A  D7F9               	goto	l20438
 31863  009F7C                     __end_of_I2C1_Poller:
 31864                           	callstack 0
 31865                           
 31866 ;; *************** function _I2C1_MasterWaitForEvent *****************
 31867 ;; Defined at:
 31868 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 31869 ;; Parameters:    Size  Location     Type
 31870 ;;		None
 31871 ;; Auto vars:     Size  Location     Type
 31872 ;;		None
 31873 ;; Return value:  Size  Location     Type
 31874 ;;                  1    wreg      void 
 31875 ;; Registers used:
 31876 ;;		None
 31877 ;; Tracked objects:
 31878 ;;		On entry : 3F/2
 31879 ;;		On exit  : 3F/E
 31880 ;;		Unchanged: 0/0
 31881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31886 ;;Total ram usage:        0 bytes
 31887 ;; Hardware stack levels used: 1
 31888 ;; Hardware stack levels required when called: 4
 31889 ;; This function calls:
 31890 ;;		Nothing
 31891 ;; This function is called by:
 31892 ;;		_I2C1_Poller
 31893 ;; This function uses a non-reentrant model
 31894 ;;
 31895                           
 31896                           	psect	text140
 31897  00A03E                     __ptext140:
 31898                           	callstack 0
 31899  00A03E                     _I2C1_MasterWaitForEvent:
 31900                           	callstack 18
 31901                           
 31902                           ; BSR set to: 2
 31903                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 31904                           
 31905                           ; BSR set to: 2
 31906                           ;incstack = 0
 31907                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 31908  00A03E  010E               	movlb	14	; () banked
 31909  00A040  B1CD               	btfsc	205,0,b	;volatile
 31910  00A042  0012               	return	
 31911  00A044  D7FC               	goto	__ptext140
 31912  00A046                     __end_of_I2C1_MasterWaitForEvent:
 31913                           	callstack 0
 31914                           
 31915 ;; *************** function _I2C1_MasterFsm *****************
 31916 ;; Defined at:
 31917 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 31918 ;; Parameters:    Size  Location     Type
 31919 ;;		None
 31920 ;; Auto vars:     Size  Location     Type
 31921 ;;		None
 31922 ;; Return value:  Size  Location     Type
 31923 ;;                  1    wreg      void 
 31924 ;; Registers used:
 31925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31926 ;; Tracked objects:
 31927 ;;		On entry : 3F/E
 31928 ;;		On exit  : 3F/2
 31929 ;;		Unchanged: 0/0
 31930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31933 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31934 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31935 ;;Total ram usage:        3 bytes
 31936 ;; Hardware stack levels used: 1
 31937 ;; Hardware stack levels required when called: 8
 31938 ;; This function calls:
 31939 ;;		_I2C1_DO_ADDRESS_NACK
 31940 ;;		_I2C1_DO_IDLE
 31941 ;;		_I2C1_DO_RCEN
 31942 ;;		_I2C1_DO_RESET
 31943 ;;		_I2C1_DO_RX
 31944 ;;		_I2C1_DO_RX_ACK
 31945 ;;		_I2C1_DO_RX_NACK_RESTART
 31946 ;;		_I2C1_DO_RX_NACK_STOP
 31947 ;;		_I2C1_DO_SEND_ADR_READ
 31948 ;;		_I2C1_DO_SEND_ADR_WRITE
 31949 ;;		_I2C1_DO_SEND_RESTART
 31950 ;;		_I2C1_DO_SEND_RESTART_READ
 31951 ;;		_I2C1_DO_SEND_RESTART_WRITE
 31952 ;;		_I2C1_DO_SEND_STOP
 31953 ;;		_I2C1_DO_TX
 31954 ;;		_I2C1_DO_TX_EMPTY
 31955 ;;		_I2C1_MasterClearIrq
 31956 ;;		_I2C1_MasterIsNack
 31957 ;; This function is called by:
 31958 ;;		_I2C1_Poller
 31959 ;; This function uses a non-reentrant model
 31960 ;;
 31961                           
 31962                           	psect	text141
 31963  009310                     __ptext141:
 31964                           	callstack 0
 31965  009310                     _I2C1_MasterFsm:
 31966                           	callstack 14
 31967                           
 31968                           ; BSR set to: 14
 31969                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 31970                           
 31971                           ; BSR set to: 14
 31972                           ;incstack = 0
 31973  009310  EC55  F050         	call	_I2C1_MasterClearIrq	;wreg free
 31974                           
 31975                           ; BSR set to: 14
 31976                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 31977  009314  0102               	movlb	2	; () banked
 31978  009316  A15F               	btfss	(_I2C1_Status+35)& (0+255),0,b
 31979  009318  D007               	goto	l20432
 31980                           
 31981                           ; BSR set to: 2
 31982  00931A  ECD3  F04F         	call	_I2C1_MasterIsNack	;wreg free
 31983  00931E  0900               	iorlw	0
 31984  009320  B4D8               	btfsc	status,2,c
 31985  009322  D002               	goto	l20432
 31986                           
 31987                           ; BSR set to: 2
 31988                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 31989  009324  0E0F               	movlw	15
 31990  009326  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31991  009328                     l20432:
 31992                           
 31993                           ; BSR set to: 2
 31994                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 31995  009328  515D               	movf	(_I2C1_Status+33)& (0+255),w,b
 31996  00932A  0D02               	mullw	2
 31997  00932C  50F3               	movf	243,w,c
 31998  00932E  0F01               	addlw	low _i2c1_fsmStateTable
 31999  009330  6E1D               	movwf	??_I2C1_MasterFsm^0,c
 32000  009332  C01D  FFF6         	movff	??_I2C1_MasterFsm,tblptrl
 32001  009336                     	if	1	;There is more than 1 active tblptr byte
 32002  009336  0E0F               	movlw	high __smallconst
 32003  009338  6EF7               	movwf	tblptrh,c
 32004  00933A                     	endif
 32005  00933A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32006  00933A  6AF8               	clrf	tblptru,c
 32007  00933C                     	endif
 32008  00933C                     	if	0	;tblptru may be non-zero
 32009  00933C                     	endif
 32010  00933C  0009               	tblrd		*+
 32011  00933E  CFF5 F01E          	movff	tablat,??_I2C1_MasterFsm+1
 32012  009342  0009               	tblrd		*+
 32013  009344  CFF5 F01F          	movff	tablat,??_I2C1_MasterFsm+2
 32014  009348  D801               	call	u23448
 32015  00934A  D009               	goto	u23449
 32016  00934C                     u23448:
 32017  00934C  0005               	push	
 32018  00934E  6EFA               	movwf	pclath,c
 32019  009350  501E               	movf	(??_I2C1_MasterFsm+1)^0,w,c
 32020  009352  6EFD               	movwf	tosl,c
 32021  009354  501F               	movf	(??_I2C1_MasterFsm+2)^0,w,c
 32022  009356  6EFE               	movwf	tosh,c
 32023  009358  6AFF               	clrf	tosu,c
 32024  00935A  50FA               	movf	pclath,w,c
 32025  00935C  0012               	return		;indir
 32026  00935E                     u23449:
 32027  00935E  0102               	movlb	2	; () banked
 32028  009360  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 32029                           
 32030                           ; BSR set to: 2
 32031  009362  0012               	return		;funcret
 32032  009364                     __end_of_I2C1_MasterFsm:
 32033                           	callstack 0
 32034                           
 32035 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 32036 ;; Defined at:
 32037 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 32038 ;; Parameters:    Size  Location     Type
 32039 ;;		None
 32040 ;; Auto vars:     Size  Location     Type
 32041 ;;		None
 32042 ;; Return value:  Size  Location     Type
 32043 ;;                  1    wreg      enum E10442
 32044 ;; Registers used:
 32045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32046 ;; Tracked objects:
 32047 ;;		On entry : 3F/2
 32048 ;;		On exit  : 0/0
 32049 ;;		Unchanged: 0/0
 32050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32053 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32054 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32055 ;;Total ram usage:        2 bytes
 32056 ;; Hardware stack levels used: 1
 32057 ;; Hardware stack levels required when called: 7
 32058 ;; This function calls:
 32059 ;;		Absolute function
 32060 ;;		_I2C1_CallbackReturnReset
 32061 ;;		_I2C1_CallbackReturnStop
 32062 ;;		_I2C1_DO_SEND_RESTART
 32063 ;;		_I2C1_DO_SEND_STOP
 32064 ;;		_rd1RegCompleteHandler
 32065 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32066 ;;		_rd2RegCompleteHandler
 32067 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32068 ;;		_rdBlkRegCompleteHandler
 32069 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32070 ;;		_wr1RegCompleteHandler
 32071 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32072 ;;		_wr2RegCompleteHandler
 32073 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32074 ;; This function is called by:
 32075 ;;		_I2C1_MasterFsm
 32076 ;; This function uses a non-reentrant model
 32077 ;;
 32078                           
 32079                           	psect	text142
 32080  0094A4                     __ptext142:
 32081                           	callstack 0
 32082  0094A4                     _I2C1_DO_ADDRESS_NACK:
 32083                           	callstack 14
 32084                           
 32085                           ; BSR set to: 2
 32086                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 32087                           
 32088                           ; BSR set to: 2
 32089                           ;incstack = 0
 32090  0094A4  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 32091                           
 32092                           ; BSR set to: 2
 32093                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 32094  0094A6  0E02               	movlw	2
 32095  0094A8  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 32096                           
 32097                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 32098  0094AA  D006               	goto	l20416
 32099  0094AC                     l20406:
 32100                           
 32101                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 32102  0094AC  EC33  F050         	call	_I2C1_DO_SEND_RESTART	;wreg free
 32103  0094B0  0012               	return	
 32104  0094B2                     l20410:
 32105                           
 32106                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 32107  0094B2  EC2F  F050         	call	_I2C1_DO_SEND_STOP	;wreg free
 32108  0094B6  0012               	return	
 32109  0094B8                     l20416:
 32110                           
 32111                           ; BSR set to: 2
 32112  0094B8  C24C  F019         	movff	_I2C1_Status+16,I2C1_CallbackReturnReset@funPtr
 32113  0094BC  C24D  F01A         	movff	_I2C1_Status+17,I2C1_CallbackReturnReset@funPtr+1
 32114  0094C0  D801               	call	u23408
 32115  0094C2  D009               	goto	u23409
 32116  0094C4                     u23408:
 32117  0094C4  0005               	push	
 32118  0094C6  6EFA               	movwf	pclath,c
 32119  0094C8  5140               	movf	(_I2C1_Status+4)& (0+255),w,b
 32120  0094CA  6EFD               	movwf	tosl,c
 32121  0094CC  5141               	movf	(_I2C1_Status+5)& (0+255),w,b
 32122  0094CE  6EFE               	movwf	tosh,c
 32123  0094D0  6AFF               	clrf	tosu,c
 32124  0094D2  50FA               	movf	pclath,w,c
 32125  0094D4  0012               	return		;indir
 32126  0094D6                     u23409:
 32127  0094D6  6E1B               	movwf	??_I2C1_DO_ADDRESS_NACK^0,c
 32128  0094D8  6A1C               	clrf	(??_I2C1_DO_ADDRESS_NACK+1)^0,c
 32129                           
 32130                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32131                           ; Switch size 1, requested type "simple"
 32132                           ; Number of cases is 1, Range of values is 0 to 0
 32133                           ; switch strategies available:
 32134                           ; Name         Instructions Cycles
 32135                           ; simple_byte            4     3 (average)
 32136                           ;	Chosen strategy is simple_byte
 32137  0094DA  501C               	movf	(??_I2C1_DO_ADDRESS_NACK+1)^0,w,c
 32138  0094DC  0A00               	xorlw	0	; case 0
 32139  0094DE  A4D8               	btfss	status,2,c
 32140  0094E0  D7E8               	goto	l20410
 32141                           
 32142                           ; Switch size 1, requested type "simple"
 32143                           ; Number of cases is 2, Range of values is 2 to 3
 32144                           ; switch strategies available:
 32145                           ; Name         Instructions Cycles
 32146                           ; simple_byte            7     4 (average)
 32147                           ;	Chosen strategy is simple_byte
 32148  0094E2  501B               	movf	??_I2C1_DO_ADDRESS_NACK^0,w,c
 32149  0094E4  0A02               	xorlw	2	; case 2
 32150  0094E6  B4D8               	btfsc	status,2,c
 32151  0094E8  D7E1               	goto	l20406
 32152  0094EA  0A01               	xorlw	1	; case 3
 32153  0094EC  B4D8               	btfsc	status,2,c
 32154  0094EE  D7DE               	goto	l20406
 32155  0094F0  D7E0               	goto	l20410
 32156  0094F2                     __end_of_I2C1_DO_ADDRESS_NACK:
 32157                           	callstack 0
 32158                           
 32159 ;; *************** function _I2C1_DO_RESET *****************
 32160 ;; Defined at:
 32161 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 32162 ;; Parameters:    Size  Location     Type
 32163 ;;		None
 32164 ;; Auto vars:     Size  Location     Type
 32165 ;;		None
 32166 ;; Return value:  Size  Location     Type
 32167 ;;                  1    wreg      enum E10442
 32168 ;; Registers used:
 32169 ;;		wreg, status,2
 32170 ;; Tracked objects:
 32171 ;;		On entry : 3F/2
 32172 ;;		On exit  : 3F/2
 32173 ;;		Unchanged: 0/0
 32174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32179 ;;Total ram usage:        0 bytes
 32180 ;; Hardware stack levels used: 1
 32181 ;; Hardware stack levels required when called: 4
 32182 ;; This function calls:
 32183 ;;		Nothing
 32184 ;; This function is called by:
 32185 ;;		_I2C1_MasterFsm
 32186 ;; This function uses a non-reentrant model
 32187 ;;
 32188                           
 32189                           	psect	text143
 32190  00A018                     __ptext143:
 32191                           	callstack 0
 32192  00A018                     _I2C1_DO_RESET:
 32193                           	callstack 17
 32194                           
 32195                           ; BSR set to: 2
 32196                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 32197                           
 32198                           ;incstack = 0
 32199  00A018  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 32200                           
 32201                           ; BSR set to: 2
 32202                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 32203  00A01A  0E00               	movlw	0
 32204  00A01C  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 32205                           
 32206                           ; BSR set to: 2
 32207                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 32208  00A01E  0E0E               	movlw	14
 32209                           
 32210                           ; BSR set to: 2
 32211  00A020  0012               	return		;funcret
 32212  00A022                     __end_of_I2C1_DO_RESET:
 32213                           	callstack 0
 32214                           
 32215 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 32216 ;; Defined at:
 32217 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 32218 ;; Parameters:    Size  Location     Type
 32219 ;;		None
 32220 ;; Auto vars:     Size  Location     Type
 32221 ;;		None
 32222 ;; Return value:  Size  Location     Type
 32223 ;;                  1    wreg      enum E10442
 32224 ;; Registers used:
 32225 ;;		wreg, cstack
 32226 ;; Tracked objects:
 32227 ;;		On entry : 0/2
 32228 ;;		On exit  : 0/0
 32229 ;;		Unchanged: 0/0
 32230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32235 ;;Total ram usage:        0 bytes
 32236 ;; Hardware stack levels used: 1
 32237 ;; Hardware stack levels required when called: 5
 32238 ;; This function calls:
 32239 ;;		_I2C1_MasterSendNack
 32240 ;; This function is called by:
 32241 ;;		_I2C1_DO_RX
 32242 ;;		_I2C1_MasterFsm
 32243 ;; This function uses a non-reentrant model
 32244 ;;
 32245                           
 32246                           	psect	text144
 32247  00A046                     __ptext144:
 32248                           	callstack 0
 32249  00A046                     _I2C1_DO_RX_NACK_RESTART:
 32250                           	callstack 16
 32251                           
 32252                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 32253                           
 32254                           ; BSR set to: 2
 32255                           ;incstack = 0
 32256  00A046  EC52  F050         	call	_I2C1_MasterSendNack	;wreg free
 32257                           
 32258                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 32259  00A04A  0E09               	movlw	9
 32260  00A04C  0012               	return		;funcret
 32261  00A04E                     __end_of_I2C1_DO_RX_NACK_RESTART:
 32262                           	callstack 0
 32263                           
 32264 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 32265 ;; Defined at:
 32266 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 32267 ;; Parameters:    Size  Location     Type
 32268 ;;		None
 32269 ;; Auto vars:     Size  Location     Type
 32270 ;;		None
 32271 ;; Return value:  Size  Location     Type
 32272 ;;                  1    wreg      enum E10442
 32273 ;; Registers used:
 32274 ;;		wreg, cstack
 32275 ;; Tracked objects:
 32276 ;;		On entry : 0/2
 32277 ;;		On exit  : 0/0
 32278 ;;		Unchanged: 0/0
 32279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32284 ;;Total ram usage:        0 bytes
 32285 ;; Hardware stack levels used: 1
 32286 ;; Hardware stack levels required when called: 5
 32287 ;; This function calls:
 32288 ;;		_I2C1_MasterSendNack
 32289 ;; This function is called by:
 32290 ;;		_I2C1_DO_RX
 32291 ;;		_I2C1_MasterFsm
 32292 ;; This function uses a non-reentrant model
 32293 ;;
 32294                           
 32295                           	psect	text145
 32296  00A04E                     __ptext145:
 32297                           	callstack 0
 32298  00A04E                     _I2C1_DO_RX_NACK_STOP:
 32299                           	callstack 16
 32300                           
 32301                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 32302                           
 32303                           ;incstack = 0
 32304  00A04E  EC52  F050         	call	_I2C1_MasterSendNack	;wreg free
 32305                           
 32306                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 32307  00A052  0E0A               	movlw	10
 32308  00A054  0012               	return		;funcret
 32309  00A056                     __end_of_I2C1_DO_RX_NACK_STOP:
 32310                           	callstack 0
 32311                           
 32312 ;; *************** function _I2C1_DO_RX_ACK *****************
 32313 ;; Defined at:
 32314 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 32315 ;; Parameters:    Size  Location     Type
 32316 ;;		None
 32317 ;; Auto vars:     Size  Location     Type
 32318 ;;		None
 32319 ;; Return value:  Size  Location     Type
 32320 ;;                  1    wreg      enum E10442
 32321 ;; Registers used:
 32322 ;;		wreg, cstack
 32323 ;; Tracked objects:
 32324 ;;		On entry : 3F/2
 32325 ;;		On exit  : 3F/2
 32326 ;;		Unchanged: 3F/0
 32327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32332 ;;Total ram usage:        0 bytes
 32333 ;; Hardware stack levels used: 1
 32334 ;; Hardware stack levels required when called: 5
 32335 ;; This function calls:
 32336 ;;		_I2C1_MasterSendAck
 32337 ;; This function is called by:
 32338 ;;		_I2C1_MasterFsm
 32339 ;; This function uses a non-reentrant model
 32340 ;;
 32341                           
 32342                           	psect	text146
 32343  00A056                     __ptext146:
 32344                           	callstack 0
 32345  00A056                     _I2C1_DO_RX_ACK:
 32346                           	callstack 16
 32347                           
 32348                           ; BSR set to: 2
 32349                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 32350                           
 32351                           ;incstack = 0
 32352  00A056  EC4F  F050         	call	_I2C1_MasterSendAck	;wreg free
 32353                           
 32354                           ; BSR set to: 2
 32355                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 32356  00A05A  0E05               	movlw	5
 32357                           
 32358                           ; BSR set to: 2
 32359  00A05C  0012               	return		;funcret
 32360  00A05E                     __end_of_I2C1_DO_RX_ACK:
 32361                           	callstack 0
 32362                           
 32363 ;; *************** function _I2C1_DO_SEND_STOP *****************
 32364 ;; Defined at:
 32365 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 32366 ;; Parameters:    Size  Location     Type
 32367 ;;		None
 32368 ;; Auto vars:     Size  Location     Type
 32369 ;;		None
 32370 ;; Return value:  Size  Location     Type
 32371 ;;                  1    wreg      enum E10442
 32372 ;; Registers used:
 32373 ;;		wreg, cstack
 32374 ;; Tracked objects:
 32375 ;;		On entry : 0/2
 32376 ;;		On exit  : 0/0
 32377 ;;		Unchanged: 0/0
 32378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32383 ;;Total ram usage:        0 bytes
 32384 ;; Hardware stack levels used: 1
 32385 ;; Hardware stack levels required when called: 5
 32386 ;; This function calls:
 32387 ;;		_I2C1_MasterStop
 32388 ;; This function is called by:
 32389 ;;		_I2C1_DO_TX
 32390 ;;		_I2C1_DO_TX_EMPTY
 32391 ;;		_I2C1_DO_ADDRESS_NACK
 32392 ;;		_I2C1_MasterFsm
 32393 ;; This function uses a non-reentrant model
 32394 ;;
 32395                           
 32396                           	psect	text147
 32397  00A05E                     __ptext147:
 32398                           	callstack 0
 32399  00A05E                     _I2C1_DO_SEND_STOP:
 32400                           	callstack 15
 32401                           
 32402                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 32403                           
 32404                           ; BSR set to: 2
 32405                           ;incstack = 0
 32406  00A05E  EC6A  F050         	call	_I2C1_MasterStop	;wreg free
 32407                           
 32408                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 32409  00A062  0E00               	movlw	0
 32410  00A064  0012               	return		;funcret
 32411  00A066                     __end_of_I2C1_DO_SEND_STOP:
 32412                           	callstack 0
 32413                           
 32414 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 32415 ;; Defined at:
 32416 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 32417 ;; Parameters:    Size  Location     Type
 32418 ;;		None
 32419 ;; Auto vars:     Size  Location     Type
 32420 ;;		None
 32421 ;; Return value:  Size  Location     Type
 32422 ;;                  1    wreg      enum E10442
 32423 ;; Registers used:
 32424 ;;		wreg, cstack
 32425 ;; Tracked objects:
 32426 ;;		On entry : 0/2
 32427 ;;		On exit  : 0/0
 32428 ;;		Unchanged: 0/0
 32429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32434 ;;Total ram usage:        0 bytes
 32435 ;; Hardware stack levels used: 1
 32436 ;; Hardware stack levels required when called: 5
 32437 ;; This function calls:
 32438 ;;		_I2C1_MasterEnableRestart
 32439 ;; This function is called by:
 32440 ;;		_I2C1_DO_TX_EMPTY
 32441 ;;		_I2C1_DO_ADDRESS_NACK
 32442 ;;		_I2C1_MasterFsm
 32443 ;; This function uses a non-reentrant model
 32444 ;;
 32445                           
 32446                           	psect	text148
 32447  00A066                     __ptext148:
 32448                           	callstack 0
 32449  00A066                     _I2C1_DO_SEND_RESTART:
 32450                           	callstack 15
 32451                           
 32452                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 32453                           
 32454                           ;incstack = 0
 32455  00A066  EC6C  F050         	call	_I2C1_MasterEnableRestart	;wreg free
 32456                           
 32457                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 32458  00A06A  0E01               	movlw	1
 32459  00A06C  0012               	return		;funcret
 32460  00A06E                     __end_of_I2C1_DO_SEND_RESTART:
 32461                           	callstack 0
 32462                           
 32463 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 32464 ;; Defined at:
 32465 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 32466 ;; Parameters:    Size  Location     Type
 32467 ;;		None
 32468 ;; Auto vars:     Size  Location     Type
 32469 ;;		None
 32470 ;; Return value:  Size  Location     Type
 32471 ;;                  1    wreg      enum E10442
 32472 ;; Registers used:
 32473 ;;		wreg, cstack
 32474 ;; Tracked objects:
 32475 ;;		On entry : 0/2
 32476 ;;		On exit  : 0/0
 32477 ;;		Unchanged: 0/0
 32478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32483 ;;Total ram usage:        0 bytes
 32484 ;; Hardware stack levels used: 1
 32485 ;; Hardware stack levels required when called: 5
 32486 ;; This function calls:
 32487 ;;		_I2C1_MasterEnableRestart
 32488 ;; This function is called by:
 32489 ;;		_I2C1_DO_TX
 32490 ;;		_I2C1_MasterFsm
 32491 ;; This function uses a non-reentrant model
 32492 ;;
 32493                           
 32494                           	psect	text149
 32495  00A06E                     __ptext149:
 32496                           	callstack 0
 32497  00A06E                     _I2C1_DO_SEND_RESTART_WRITE:
 32498                           	callstack 15
 32499                           
 32500                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 32501                           
 32502                           ;incstack = 0
 32503  00A06E  EC6C  F050         	call	_I2C1_MasterEnableRestart	;wreg free
 32504                           
 32505                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 32506  00A072  0E02               	movlw	2
 32507  00A074  0012               	return		;funcret
 32508  00A076                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 32509                           	callstack 0
 32510                           
 32511 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 32512 ;; Defined at:
 32513 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 32514 ;; Parameters:    Size  Location     Type
 32515 ;;		None
 32516 ;; Auto vars:     Size  Location     Type
 32517 ;;		None
 32518 ;; Return value:  Size  Location     Type
 32519 ;;                  1    wreg      enum E10442
 32520 ;; Registers used:
 32521 ;;		wreg, cstack
 32522 ;; Tracked objects:
 32523 ;;		On entry : 0/2
 32524 ;;		On exit  : 0/0
 32525 ;;		Unchanged: 0/0
 32526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32531 ;;Total ram usage:        0 bytes
 32532 ;; Hardware stack levels used: 1
 32533 ;; Hardware stack levels required when called: 5
 32534 ;; This function calls:
 32535 ;;		_I2C1_MasterEnableRestart
 32536 ;; This function is called by:
 32537 ;;		_I2C1_DO_TX
 32538 ;;		_I2C1_MasterFsm
 32539 ;; This function uses a non-reentrant model
 32540 ;;
 32541                           
 32542                           	psect	text150
 32543  00A076                     __ptext150:
 32544                           	callstack 0
 32545  00A076                     _I2C1_DO_SEND_RESTART_READ:
 32546                           	callstack 15
 32547                           
 32548                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 32549                           
 32550                           ;incstack = 0
 32551  00A076  EC6C  F050         	call	_I2C1_MasterEnableRestart	;wreg free
 32552                           
 32553                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 32554  00A07A  0E01               	movlw	1
 32555  00A07C  0012               	return		;funcret
 32556  00A07E                     __end_of_I2C1_DO_SEND_RESTART_READ:
 32557                           	callstack 0
 32558                           
 32559 ;; *************** function _I2C1_DO_RCEN *****************
 32560 ;; Defined at:
 32561 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 32562 ;; Parameters:    Size  Location     Type
 32563 ;;		None
 32564 ;; Auto vars:     Size  Location     Type
 32565 ;;		None
 32566 ;; Return value:  Size  Location     Type
 32567 ;;                  1    wreg      enum E10442
 32568 ;; Registers used:
 32569 ;;		wreg, cstack
 32570 ;; Tracked objects:
 32571 ;;		On entry : 3F/2
 32572 ;;		On exit  : 3F/2
 32573 ;;		Unchanged: 0/0
 32574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32579 ;;Total ram usage:        0 bytes
 32580 ;; Hardware stack levels used: 1
 32581 ;; Hardware stack levels required when called: 5
 32582 ;; This function calls:
 32583 ;;		_I2C1_MasterStartRx
 32584 ;; This function is called by:
 32585 ;;		_I2C1_MasterFsm
 32586 ;; This function uses a non-reentrant model
 32587 ;;
 32588                           
 32589                           	psect	text151
 32590  00A022                     __ptext151:
 32591                           	callstack 0
 32592  00A022                     _I2C1_DO_RCEN:
 32593                           	callstack 16
 32594                           
 32595                           ; BSR set to: 2
 32596                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 32597                           
 32598                           ;incstack = 0
 32599  00A022  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 32600                           
 32601                           ; BSR set to: 2
 32602                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 32603  00A024  EC64  F050         	call	_I2C1_MasterStartRx	;wreg free
 32604                           
 32605                           ; BSR set to: 2
 32606                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 32607  00A028  0E04               	movlw	4
 32608                           
 32609                           ; BSR set to: 2
 32610  00A02A  0012               	return		;funcret
 32611  00A02C                     __end_of_I2C1_DO_RCEN:
 32612                           	callstack 0
 32613                           
 32614 ;; *************** function _I2C1_DO_RX *****************
 32615 ;; Defined at:
 32616 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 32617 ;; Parameters:    Size  Location     Type
 32618 ;;		None
 32619 ;; Auto vars:     Size  Location     Type
 32620 ;;		None
 32621 ;; Return value:  Size  Location     Type
 32622 ;;                  1    wreg      enum E10442
 32623 ;; Registers used:
 32624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32625 ;; Tracked objects:
 32626 ;;		On entry : 3F/2
 32627 ;;		On exit  : 0/0
 32628 ;;		Unchanged: 0/0
 32629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32632 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32633 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32634 ;;Total ram usage:        2 bytes
 32635 ;; Hardware stack levels used: 1
 32636 ;; Hardware stack levels required when called: 7
 32637 ;; This function calls:
 32638 ;;		Absolute function
 32639 ;;		_I2C1_CallbackReturnReset
 32640 ;;		_I2C1_CallbackReturnStop
 32641 ;;		_I2C1_DO_RX_NACK_RESTART
 32642 ;;		_I2C1_DO_RX_NACK_STOP
 32643 ;;		_I2C1_MasterGetRxData
 32644 ;;		_I2C1_MasterSendAck
 32645 ;;		_rd1RegCompleteHandler
 32646 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32647 ;;		_rd2RegCompleteHandler
 32648 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32649 ;;		_rdBlkRegCompleteHandler
 32650 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32651 ;;		_wr1RegCompleteHandler
 32652 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32653 ;;		_wr2RegCompleteHandler
 32654 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32655 ;; This function is called by:
 32656 ;;		_I2C1_MasterFsm
 32657 ;; This function uses a non-reentrant model
 32658 ;;
 32659                           
 32660                           	psect	text152
 32661  008916                     __ptext152:
 32662                           	callstack 0
 32663  008916                     _I2C1_DO_RX:
 32664                           	callstack 14
 32665                           
 32666                           ; BSR set to: 2
 32667                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 32668                           
 32669                           ; BSR set to: 2
 32670                           ;incstack = 0
 32671  008916  EC62  F050         	call	_I2C1_MasterGetRxData	;wreg free
 32672  00891A  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 32673  00891E  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 32674  008922  6EDF               	movwf	indf2,c
 32675                           
 32676                           ; BSR set to: 2
 32677  008924  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 32678  008926  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 32679                           
 32680                           ; BSR set to: 2
 32681                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 32682  008928  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 32683  00892A  A0D8               	btfss	status,0,c
 32684  00892C  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 32685  00892E  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 32686  008930  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 32687  008932  B4D8               	btfsc	status,2,c
 32688  008934  D004               	goto	l690
 32689                           
 32690                           ; BSR set to: 2
 32691                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 32692  008936  EC4F  F050         	call	_I2C1_MasterSendAck	;wreg free
 32693                           
 32694                           ; BSR set to: 2
 32695                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 32696  00893A  0E05               	movlw	5
 32697  00893C  0012               	return	
 32698  00893E                     l690:
 32699                           
 32700                           ; BSR set to: 2
 32701                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 32702  00893E  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 32703                           
 32704                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 32705  008940  D006               	goto	l20350
 32706  008942                     l20340:
 32707                           
 32708                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 32709  008942  EC23  F050         	call	_I2C1_DO_RX_NACK_RESTART	;wreg free
 32710  008946  0012               	return	
 32711  008948                     l20344:
 32712                           
 32713                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 32714  008948  EC27  F050         	call	_I2C1_DO_RX_NACK_STOP	;wreg free
 32715  00894C  0012               	return	
 32716  00894E                     l20350:
 32717                           
 32718                           ; BSR set to: 2
 32719  00894E  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 32720  008952  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 32721  008956  D801               	call	u23388
 32722  008958  D009               	goto	u23389
 32723  00895A                     u23388:
 32724  00895A  0005               	push	
 32725  00895C  6EFA               	movwf	pclath,c
 32726  00895E  513C               	movf	_I2C1_Status& (0+255),w,b
 32727  008960  6EFD               	movwf	tosl,c
 32728  008962  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 32729  008964  6EFE               	movwf	tosh,c
 32730  008966  6AFF               	clrf	tosu,c
 32731  008968  50FA               	movf	pclath,w,c
 32732  00896A  0012               	return		;indir
 32733  00896C                     u23389:
 32734  00896C  6E1B               	movwf	??_I2C1_DO_RX^0,c
 32735  00896E  6A1C               	clrf	(??_I2C1_DO_RX+1)^0,c
 32736                           
 32737                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32738                           ; Switch size 1, requested type "simple"
 32739                           ; Number of cases is 1, Range of values is 0 to 0
 32740                           ; switch strategies available:
 32741                           ; Name         Instructions Cycles
 32742                           ; simple_byte            4     3 (average)
 32743                           ;	Chosen strategy is simple_byte
 32744  008970  501C               	movf	(??_I2C1_DO_RX+1)^0,w,c
 32745  008972  0A00               	xorlw	0	; case 0
 32746  008974  A4D8               	btfss	status,2,c
 32747  008976  D7E8               	goto	l20344
 32748                           
 32749                           ; Switch size 1, requested type "simple"
 32750                           ; Number of cases is 4, Range of values is 1 to 4
 32751                           ; switch strategies available:
 32752                           ; Name         Instructions Cycles
 32753                           ; simple_byte           13     7 (average)
 32754                           ;	Chosen strategy is simple_byte
 32755  008978  501B               	movf	??_I2C1_DO_RX^0,w,c
 32756  00897A  0A01               	xorlw	1	; case 1
 32757  00897C  B4D8               	btfsc	status,2,c
 32758  00897E  D7E4               	goto	l20344
 32759  008980  0A03               	xorlw	3	; case 2
 32760  008982  B4D8               	btfsc	status,2,c
 32761  008984  D7DE               	goto	l20340
 32762  008986  0A01               	xorlw	1	; case 3
 32763  008988  B4D8               	btfsc	status,2,c
 32764  00898A  D7DB               	goto	l20340
 32765  00898C  0A07               	xorlw	7	; case 4
 32766  00898E  D7DC               	goto	l20344
 32767  008990                     __end_of_I2C1_DO_RX:
 32768                           	callstack 0
 32769                           
 32770 ;; *************** function _I2C1_DO_TX *****************
 32771 ;; Defined at:
 32772 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 32773 ;; Parameters:    Size  Location     Type
 32774 ;;		None
 32775 ;; Auto vars:     Size  Location     Type
 32776 ;;		None
 32777 ;; Return value:  Size  Location     Type
 32778 ;;                  1    wreg      enum E10442
 32779 ;; Registers used:
 32780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32781 ;; Tracked objects:
 32782 ;;		On entry : 3F/2
 32783 ;;		On exit  : 0/0
 32784 ;;		Unchanged: 0/0
 32785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32788 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32789 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32790 ;;Total ram usage:        2 bytes
 32791 ;; Hardware stack levels used: 1
 32792 ;; Hardware stack levels required when called: 7
 32793 ;; This function calls:
 32794 ;;		Absolute function
 32795 ;;		_I2C1_CallbackReturnReset
 32796 ;;		_I2C1_CallbackReturnStop
 32797 ;;		_I2C1_DO_SEND_RESTART_READ
 32798 ;;		_I2C1_DO_SEND_RESTART_WRITE
 32799 ;;		_I2C1_DO_SEND_STOP
 32800 ;;		_I2C1_MasterIsNack
 32801 ;;		_I2C1_MasterSendTxData
 32802 ;;		_rd1RegCompleteHandler
 32803 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32804 ;;		_rd2RegCompleteHandler
 32805 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32806 ;;		_rdBlkRegCompleteHandler
 32807 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32808 ;;		_wr1RegCompleteHandler
 32809 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32810 ;;		_wr2RegCompleteHandler
 32811 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32812 ;; This function is called by:
 32813 ;;		_I2C1_MasterFsm
 32814 ;; This function uses a non-reentrant model
 32815 ;;
 32816                           
 32817                           	psect	text153
 32818  008476                     __ptext153:
 32819                           	callstack 0
 32820  008476                     _I2C1_DO_TX:
 32821                           	callstack 14
 32822                           
 32823                           ; BSR set to: 2
 32824                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 32825                           
 32826                           ;incstack = 0
 32827  008476  ECD3  F04F         	call	_I2C1_MasterIsNack	;wreg free
 32828  00847A  0900               	iorlw	0
 32829  00847C  A4D8               	btfss	status,2,c
 32830  00847E  D00A               	goto	l20310
 32831  008480  D02A               	goto	l674
 32832  008482                     l20296:
 32833                           
 32834                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 32835  008482  EC3B  F050         	call	_I2C1_DO_SEND_RESTART_READ	;wreg free
 32836  008486  0012               	return	
 32837  008488                     l20300:
 32838                           
 32839                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 32840  008488  EC37  F050         	call	_I2C1_DO_SEND_RESTART_WRITE	;wreg free
 32841  00848C  0012               	return	
 32842  00848E                     l20304:
 32843                           
 32844                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 32845  00848E  EC2F  F050         	call	_I2C1_DO_SEND_STOP	;wreg free
 32846  008492  0012               	return	
 32847  008494                     l20310:
 32848                           
 32849                           ; BSR set to: 2
 32850  008494  C24E  F019         	movff	_I2C1_Status+18,I2C1_CallbackReturnReset@funPtr
 32851  008498  C24F  F01A         	movff	_I2C1_Status+19,I2C1_CallbackReturnReset@funPtr+1
 32852  00849C  D801               	call	u23358
 32853  00849E  D009               	goto	u23359
 32854  0084A0                     u23358:
 32855  0084A0  0005               	push	
 32856  0084A2  6EFA               	movwf	pclath,c
 32857  0084A4  5142               	movf	(_I2C1_Status+6)& (0+255),w,b
 32858  0084A6  6EFD               	movwf	tosl,c
 32859  0084A8  5143               	movf	(_I2C1_Status+7)& (0+255),w,b
 32860  0084AA  6EFE               	movwf	tosh,c
 32861  0084AC  6AFF               	clrf	tosu,c
 32862  0084AE  50FA               	movf	pclath,w,c
 32863  0084B0  0012               	return		;indir
 32864  0084B2                     u23359:
 32865  0084B2  6E1B               	movwf	??_I2C1_DO_TX^0,c
 32866  0084B4  6A1C               	clrf	(??_I2C1_DO_TX+1)^0,c
 32867                           
 32868                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32869                           ; Switch size 1, requested type "simple"
 32870                           ; Number of cases is 1, Range of values is 0 to 0
 32871                           ; switch strategies available:
 32872                           ; Name         Instructions Cycles
 32873                           ; simple_byte            4     3 (average)
 32874                           ;	Chosen strategy is simple_byte
 32875  0084B6  501C               	movf	(??_I2C1_DO_TX+1)^0,w,c
 32876  0084B8  0A00               	xorlw	0	; case 0
 32877  0084BA  A4D8               	btfss	status,2,c
 32878  0084BC  D7E8               	goto	l20304
 32879                           
 32880                           ; Switch size 1, requested type "simple"
 32881                           ; Number of cases is 4, Range of values is 1 to 4
 32882                           ; switch strategies available:
 32883                           ; Name         Instructions Cycles
 32884                           ; simple_byte           13     7 (average)
 32885                           ;	Chosen strategy is simple_byte
 32886  0084BE  501B               	movf	??_I2C1_DO_TX^0,w,c
 32887  0084C0  0A01               	xorlw	1	; case 1
 32888  0084C2  B4D8               	btfsc	status,2,c
 32889  0084C4  D7E4               	goto	l20304
 32890  0084C6  0A03               	xorlw	3	; case 2
 32891  0084C8  B4D8               	btfsc	status,2,c
 32892  0084CA  D7DB               	goto	l20296
 32893  0084CC  0A01               	xorlw	1	; case 3
 32894  0084CE  B4D8               	btfsc	status,2,c
 32895  0084D0  D7DB               	goto	l20300
 32896  0084D2  0A07               	xorlw	7	; case 4
 32897  0084D4  D7DC               	goto	l20304
 32898  0084D6                     l674:
 32899                           
 32900                           ; BSR set to: 2
 32901                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 32902  0084D6  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 32903                           
 32904                           ; BSR set to: 2
 32905                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 32906  0084D8  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 32907  0084DC  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 32908  0084E0  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 32909  0084E2  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 32910  0084E4  50DF               	movf	indf2,w,c
 32911  0084E6  EC3F  F050         	call	_I2C1_MasterSendTxData
 32912                           
 32913                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 32914  0084EA  0102               	movlb	2	; () banked
 32915  0084EC  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 32916  0084EE  A0D8               	btfss	status,0,c
 32917  0084F0  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 32918  0084F2  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 32919  0084F4  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 32920  0084F6  A4D8               	btfss	status,2,c
 32921  0084F8  D002               	goto	l20318
 32922                           
 32923                           ; BSR set to: 2
 32924  0084FA  0E06               	movlw	6
 32925  0084FC  0012               	return	
 32926  0084FE                     l20318:
 32927                           
 32928                           ; BSR set to: 2
 32929  0084FE  0E03               	movlw	3
 32930  008500  0012               	return		;funcret
 32931  008502                     __end_of_I2C1_DO_TX:
 32932                           	callstack 0
 32933                           
 32934 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 32935 ;; Defined at:
 32936 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 32937 ;; Parameters:    Size  Location     Type
 32938 ;;		None
 32939 ;; Auto vars:     Size  Location     Type
 32940 ;;		None
 32941 ;; Return value:  Size  Location     Type
 32942 ;;                  1    wreg      enum E10442
 32943 ;; Registers used:
 32944 ;;		wreg, status,2, status,0, cstack
 32945 ;; Tracked objects:
 32946 ;;		On entry : 3F/2
 32947 ;;		On exit  : 0/0
 32948 ;;		Unchanged: 0/0
 32949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32954 ;;Total ram usage:        0 bytes
 32955 ;; Hardware stack levels used: 1
 32956 ;; Hardware stack levels required when called: 5
 32957 ;; This function calls:
 32958 ;;		_I2C1_MasterSendTxData
 32959 ;; This function is called by:
 32960 ;;		_I2C1_MasterFsm
 32961 ;; This function uses a non-reentrant model
 32962 ;;
 32963                           
 32964                           	psect	text154
 32965  009F8A                     __ptext154:
 32966                           	callstack 0
 32967  009F8A                     _I2C1_DO_SEND_ADR_WRITE:
 32968                           	callstack 16
 32969                           
 32970                           ; BSR set to: 2
 32971                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 32972                           
 32973                           ;incstack = 0
 32974  009F8A  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 32975                           
 32976                           ; BSR set to: 2
 32977                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 32978  009F8C  5158               	movf	(_I2C1_Status+28)& (0+255),w,b
 32979  009F8E  2558               	addwf	(_I2C1_Status+28)& (0+255),w,b
 32980  009F90  EC3F  F050         	call	_I2C1_MasterSendTxData
 32981                           
 32982                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 32983  009F94  0E03               	movlw	3
 32984  009F96  0012               	return		;funcret
 32985  009F98                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 32986                           	callstack 0
 32987                           
 32988 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 32989 ;; Defined at:
 32990 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 32991 ;; Parameters:    Size  Location     Type
 32992 ;;		None
 32993 ;; Auto vars:     Size  Location     Type
 32994 ;;		None
 32995 ;; Return value:  Size  Location     Type
 32996 ;;                  1    wreg      enum E10442
 32997 ;; Registers used:
 32998 ;;		wreg, status,0, cstack
 32999 ;; Tracked objects:
 33000 ;;		On entry : 3F/2
 33001 ;;		On exit  : 0/0
 33002 ;;		Unchanged: 0/0
 33003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33008 ;;Total ram usage:        0 bytes
 33009 ;; Hardware stack levels used: 1
 33010 ;; Hardware stack levels required when called: 5
 33011 ;; This function calls:
 33012 ;;		_I2C1_MasterSendTxData
 33013 ;; This function is called by:
 33014 ;;		_I2C1_MasterFsm
 33015 ;; This function uses a non-reentrant model
 33016 ;;
 33017                           
 33018                           	psect	text155
 33019  009F98                     __ptext155:
 33020                           	callstack 0
 33021  009F98                     _I2C1_DO_SEND_ADR_READ:
 33022                           	callstack 16
 33023                           
 33024                           ; BSR set to: 2
 33025                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 33026                           
 33027                           ;incstack = 0
 33028  009F98  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 33029                           
 33030                           ; BSR set to: 2
 33031                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 33032  009F9A  80D8               	bsf	status,0,c
 33033  009F9C  3558               	rlcf	(_I2C1_Status+28)& (0+255),w,b
 33034  009F9E  EC3F  F050         	call	_I2C1_MasterSendTxData
 33035                           
 33036                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 33037  009FA2  0E05               	movlw	5
 33038  009FA4  0012               	return		;funcret
 33039  009FA6                     __end_of_I2C1_DO_SEND_ADR_READ:
 33040                           	callstack 0
 33041                           
 33042 ;; *************** function _I2C1_DO_IDLE *****************
 33043 ;; Defined at:
 33044 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 33045 ;; Parameters:    Size  Location     Type
 33046 ;;		None
 33047 ;; Auto vars:     Size  Location     Type
 33048 ;;		None
 33049 ;; Return value:  Size  Location     Type
 33050 ;;                  1    wreg      enum E10442
 33051 ;; Registers used:
 33052 ;;		wreg, status,2
 33053 ;; Tracked objects:
 33054 ;;		On entry : 3F/2
 33055 ;;		On exit  : 3F/2
 33056 ;;		Unchanged: 0/0
 33057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33062 ;;Total ram usage:        0 bytes
 33063 ;; Hardware stack levels used: 1
 33064 ;; Hardware stack levels required when called: 4
 33065 ;; This function calls:
 33066 ;;		Nothing
 33067 ;; This function is called by:
 33068 ;;		_I2C1_MasterFsm
 33069 ;; This function uses a non-reentrant model
 33070 ;;
 33071                           
 33072                           	psect	text156
 33073  00A02C                     __ptext156:
 33074                           	callstack 0
 33075  00A02C                     _I2C1_DO_IDLE:
 33076                           	callstack 17
 33077                           
 33078                           ; BSR set to: 2
 33079                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 33080                           
 33081                           ;incstack = 0
 33082  00A02C  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 33083                           
 33084                           ; BSR set to: 2
 33085                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 33086  00A02E  0E00               	movlw	0
 33087  00A030  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 33088                           
 33089                           ; BSR set to: 2
 33090                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 33091  00A032  0E0E               	movlw	14
 33092                           
 33093                           ; BSR set to: 2
 33094  00A034  0012               	return		;funcret
 33095  00A036                     __end_of_I2C1_DO_IDLE:
 33096                           	callstack 0
 33097                           
 33098 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 33099 ;; Defined at:
 33100 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 33101 ;; Parameters:    Size  Location     Type
 33102 ;;		None
 33103 ;; Auto vars:     Size  Location     Type
 33104 ;;		None
 33105 ;; Return value:  Size  Location     Type
 33106 ;;                  1    wreg      enum E10442
 33107 ;; Registers used:
 33108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 33109 ;; Tracked objects:
 33110 ;;		On entry : 3F/2
 33111 ;;		On exit  : 0/0
 33112 ;;		Unchanged: 0/0
 33113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33116 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33117 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33118 ;;Total ram usage:        2 bytes
 33119 ;; Hardware stack levels used: 1
 33120 ;; Hardware stack levels required when called: 7
 33121 ;; This function calls:
 33122 ;;		Absolute function
 33123 ;;		_I2C1_CallbackReturnReset
 33124 ;;		_I2C1_CallbackReturnStop
 33125 ;;		_I2C1_DO_SEND_RESTART
 33126 ;;		_I2C1_DO_SEND_STOP
 33127 ;;		_I2C1_MasterSetIrq
 33128 ;;		_rd1RegCompleteHandler
 33129 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 33130 ;;		_rd2RegCompleteHandler
 33131 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 33132 ;;		_rdBlkRegCompleteHandler
 33133 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 33134 ;;		_wr1RegCompleteHandler
 33135 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 33136 ;;		_wr2RegCompleteHandler
 33137 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 33138 ;; This function is called by:
 33139 ;;		_I2C1_MasterFsm
 33140 ;; This function uses a non-reentrant model
 33141 ;;
 33142                           
 33143                           	psect	text157
 33144  008F90                     __ptext157:
 33145                           	callstack 0
 33146  008F90                     _I2C1_DO_TX_EMPTY:
 33147                           	callstack 14
 33148                           
 33149                           ; BSR set to: 2
 33150                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 33151                           
 33152                           ; BSR set to: 2
 33153                           ;incstack = 0
 33154  008F90  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 33155                           
 33156                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 33157  008F92  D00A               	goto	l20382
 33158  008F94                     l20366:
 33159                           
 33160                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 33161  008F94  EC33  F050         	call	_I2C1_DO_SEND_RESTART	;wreg free
 33162  008F98  0012               	return	
 33163  008F9A                     l20370:
 33164                           
 33165                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 33166  008F9A  EC4C  F050         	call	_I2C1_MasterSetIrq	;wreg free
 33167                           
 33168                           ; BSR set to: 14
 33169                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 33170  008F9E  0E03               	movlw	3
 33171  008FA0  0012               	return	
 33172  008FA2                     l20376:
 33173                           
 33174                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 33175  008FA2  EC2F  F050         	call	_I2C1_DO_SEND_STOP	;wreg free
 33176  008FA6  0012               	return	
 33177  008FA8                     l20382:
 33178                           
 33179                           ; BSR set to: 2
 33180  008FA8  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 33181  008FAC  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 33182  008FB0  D801               	call	u23398
 33183  008FB2  D009               	goto	u23399
 33184  008FB4                     u23398:
 33185  008FB4  0005               	push	
 33186  008FB6  6EFA               	movwf	pclath,c
 33187  008FB8  513C               	movf	_I2C1_Status& (0+255),w,b
 33188  008FBA  6EFD               	movwf	tosl,c
 33189  008FBC  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 33190  008FBE  6EFE               	movwf	tosh,c
 33191  008FC0  6AFF               	clrf	tosu,c
 33192  008FC2  50FA               	movf	pclath,w,c
 33193  008FC4  0012               	return		;indir
 33194  008FC6                     u23399:
 33195  008FC6  6E1B               	movwf	??_I2C1_DO_TX_EMPTY^0,c
 33196  008FC8  6A1C               	clrf	(??_I2C1_DO_TX_EMPTY+1)^0,c
 33197                           
 33198                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33199                           ; Switch size 1, requested type "simple"
 33200                           ; Number of cases is 1, Range of values is 0 to 0
 33201                           ; switch strategies available:
 33202                           ; Name         Instructions Cycles
 33203                           ; simple_byte            4     3 (average)
 33204                           ;	Chosen strategy is simple_byte
 33205  008FCA  501C               	movf	(??_I2C1_DO_TX_EMPTY+1)^0,w,c
 33206  008FCC  0A00               	xorlw	0	; case 0
 33207  008FCE  A4D8               	btfss	status,2,c
 33208  008FD0  D7E8               	goto	l20376
 33209                           
 33210                           ; Switch size 1, requested type "simple"
 33211                           ; Number of cases is 4, Range of values is 1 to 4
 33212                           ; switch strategies available:
 33213                           ; Name         Instructions Cycles
 33214                           ; simple_byte           13     7 (average)
 33215                           ;	Chosen strategy is simple_byte
 33216  008FD2  501B               	movf	??_I2C1_DO_TX_EMPTY^0,w,c
 33217  008FD4  0A01               	xorlw	1	; case 1
 33218  008FD6  B4D8               	btfsc	status,2,c
 33219  008FD8  D7E4               	goto	l20376
 33220  008FDA  0A03               	xorlw	3	; case 2
 33221  008FDC  B4D8               	btfsc	status,2,c
 33222  008FDE  D7DA               	goto	l20366
 33223  008FE0  0A01               	xorlw	1	; case 3
 33224  008FE2  B4D8               	btfsc	status,2,c
 33225  008FE4  D7D7               	goto	l20366
 33226  008FE6  0A07               	xorlw	7	; case 4
 33227  008FE8  B4D8               	btfsc	status,2,c
 33228  008FEA  D7D7               	goto	l20370
 33229  008FEC  D7DA               	goto	l20376
 33230  008FEE                     __end_of_I2C1_DO_TX_EMPTY:
 33231                           	callstack 0
 33232                           
 33233 ;; *************** function _I2C1_MasterSetIrq *****************
 33234 ;; Defined at:
 33235 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 33236 ;; Parameters:    Size  Location     Type
 33237 ;;		None
 33238 ;; Auto vars:     Size  Location     Type
 33239 ;;		None
 33240 ;; Return value:  Size  Location     Type
 33241 ;;                  1    wreg      void 
 33242 ;; Registers used:
 33243 ;;		None
 33244 ;; Tracked objects:
 33245 ;;		On entry : 0/2
 33246 ;;		On exit  : 3F/E
 33247 ;;		Unchanged: 0/0
 33248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33253 ;;Total ram usage:        0 bytes
 33254 ;; Hardware stack levels used: 1
 33255 ;; Hardware stack levels required when called: 4
 33256 ;; This function calls:
 33257 ;;		Nothing
 33258 ;; This function is called by:
 33259 ;;		_I2C1_DO_TX_EMPTY
 33260 ;; This function uses a non-reentrant model
 33261 ;;
 33262                           
 33263                           	psect	text158
 33264  00A098                     __ptext158:
 33265                           	callstack 0
 33266  00A098                     _I2C1_MasterSetIrq:
 33267                           	callstack 16
 33268                           
 33269                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 33270                           
 33271                           ;incstack = 0
 33272  00A098  010E               	movlb	14	; () banked
 33273  00A09A  81CD               	bsf	205,0,b	;volatile
 33274                           
 33275                           ; BSR set to: 14
 33276  00A09C  0012               	return		;funcret
 33277  00A09E                     __end_of_I2C1_MasterSetIrq:
 33278                           	callstack 0
 33279                           
 33280 ;; *************** function _I2C1_MasterIsNack *****************
 33281 ;; Defined at:
 33282 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 33283 ;; Parameters:    Size  Location     Type
 33284 ;;		None
 33285 ;; Auto vars:     Size  Location     Type
 33286 ;;		None
 33287 ;; Return value:  Size  Location     Type
 33288 ;;                  1    wreg      _Bool 
 33289 ;; Registers used:
 33290 ;;		wreg
 33291 ;; Tracked objects:
 33292 ;;		On entry : 3F/2
 33293 ;;		On exit  : 3F/2
 33294 ;;		Unchanged: 3F/0
 33295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33300 ;;Total ram usage:        0 bytes
 33301 ;; Hardware stack levels used: 1
 33302 ;; Hardware stack levels required when called: 4
 33303 ;; This function calls:
 33304 ;;		Nothing
 33305 ;; This function is called by:
 33306 ;;		_I2C1_MasterFsm
 33307 ;;		_I2C1_DO_TX
 33308 ;; This function uses a non-reentrant model
 33309 ;;
 33310                           
 33311                           	psect	text159
 33312  009FA6                     __ptext159:
 33313                           	callstack 0
 33314  009FA6                     _I2C1_MasterIsNack:
 33315                           	callstack 17
 33316                           
 33317                           ; BSR set to: 2
 33318                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 33319                           
 33320                           ; BSR set to: 14
 33321                           ;incstack = 0
 33322  009FA6  AC97               	btfss	151,6,c	;volatile
 33323  009FA8  D002               	goto	u23330
 33324  009FAA  0E01               	movlw	1
 33325  009FAC  0012               	return	
 33326  009FAE                     u23330:
 33327  009FAE  0E00               	movlw	0
 33328                           
 33329                           ; BSR set to: 2
 33330  009FB0  0012               	return		;funcret
 33331  009FB2                     __end_of_I2C1_MasterIsNack:
 33332                           	callstack 0
 33333                           
 33334 ;; *************** function _I2C1_MasterSendTxData *****************
 33335 ;; Defined at:
 33336 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 33337 ;; Parameters:    Size  Location     Type
 33338 ;;  data            1    wreg     unsigned char 
 33339 ;; Auto vars:     Size  Location     Type
 33340 ;;  data            1   15[COMRAM] unsigned char 
 33341 ;; Return value:  Size  Location     Type
 33342 ;;                  1    wreg      void 
 33343 ;; Registers used:
 33344 ;;		wreg
 33345 ;; Tracked objects:
 33346 ;;		On entry : 3F/2
 33347 ;;		On exit  : 0/0
 33348 ;;		Unchanged: 0/0
 33349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33351 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33353 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33354 ;;Total ram usage:        1 bytes
 33355 ;; Hardware stack levels used: 1
 33356 ;; Hardware stack levels required when called: 4
 33357 ;; This function calls:
 33358 ;;		Nothing
 33359 ;; This function is called by:
 33360 ;;		_I2C1_DO_SEND_ADR_READ
 33361 ;;		_I2C1_DO_SEND_ADR_WRITE
 33362 ;;		_I2C1_DO_TX
 33363 ;; This function uses a non-reentrant model
 33364 ;;
 33365                           
 33366                           	psect	text160
 33367  00A07E                     __ptext160:
 33368                           	callstack 0
 33369  00A07E                     _I2C1_MasterSendTxData:
 33370                           	callstack 16
 33371                           
 33372                           ; BSR set to: 2
 33373                           ;incstack = 0
 33374                           ;I2C1_MasterSendTxData@data stored from wreg
 33375  00A07E  6E10               	movwf	I2C1_MasterSendTxData@data^0,c
 33376                           
 33377                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 33378  00A080  C010  FF92         	movff	I2C1_MasterSendTxData@data,3986	;volatile
 33379  00A084  0012               	return		;funcret
 33380  00A086                     __end_of_I2C1_MasterSendTxData:
 33381                           	callstack 0
 33382                           
 33383 ;; *************** function _I2C1_MasterSendAck *****************
 33384 ;; Defined at:
 33385 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 33386 ;; Parameters:    Size  Location     Type
 33387 ;;		None
 33388 ;; Auto vars:     Size  Location     Type
 33389 ;;		None
 33390 ;; Return value:  Size  Location     Type
 33391 ;;                  1    wreg      void 
 33392 ;; Registers used:
 33393 ;;		None
 33394 ;; Tracked objects:
 33395 ;;		On entry : 3F/2
 33396 ;;		On exit  : 3F/2
 33397 ;;		Unchanged: 3F/0
 33398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33403 ;;Total ram usage:        0 bytes
 33404 ;; Hardware stack levels used: 1
 33405 ;; Hardware stack levels required when called: 4
 33406 ;; This function calls:
 33407 ;;		Nothing
 33408 ;; This function is called by:
 33409 ;;		_I2C1_DO_RX
 33410 ;;		_I2C1_DO_RX_ACK
 33411 ;; This function uses a non-reentrant model
 33412 ;;
 33413                           
 33414                           	psect	text161
 33415  00A09E                     __ptext161:
 33416                           	callstack 0
 33417  00A09E                     _I2C1_MasterSendAck:
 33418                           	callstack 16
 33419                           
 33420                           ; BSR set to: 2
 33421                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 33422                           
 33423                           ;incstack = 0
 33424  00A09E  9A97               	bcf	151,5,c	;volatile
 33425                           
 33426                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 33427  00A0A0  8897               	bsf	151,4,c	;volatile
 33428                           
 33429                           ; BSR set to: 2
 33430  00A0A2  0012               	return		;funcret
 33431  00A0A4                     __end_of_I2C1_MasterSendAck:
 33432                           	callstack 0
 33433                           
 33434 ;; *************** function _I2C1_MasterGetRxData *****************
 33435 ;; Defined at:
 33436 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 33437 ;; Parameters:    Size  Location     Type
 33438 ;;		None
 33439 ;; Auto vars:     Size  Location     Type
 33440 ;;		None
 33441 ;; Return value:  Size  Location     Type
 33442 ;;                  1    wreg      unsigned char 
 33443 ;; Registers used:
 33444 ;;		wreg, status,2
 33445 ;; Tracked objects:
 33446 ;;		On entry : 3F/2
 33447 ;;		On exit  : 3F/2
 33448 ;;		Unchanged: 3F/0
 33449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33454 ;;Total ram usage:        0 bytes
 33455 ;; Hardware stack levels used: 1
 33456 ;; Hardware stack levels required when called: 4
 33457 ;; This function calls:
 33458 ;;		Nothing
 33459 ;; This function is called by:
 33460 ;;		_I2C1_DO_RX
 33461 ;; This function uses a non-reentrant model
 33462 ;;
 33463                           
 33464                           	psect	text162
 33465  00A0C4                     __ptext162:
 33466                           	callstack 0
 33467  00A0C4                     _I2C1_MasterGetRxData:
 33468                           	callstack 16
 33469                           
 33470                           ; BSR set to: 2
 33471                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 33472                           
 33473                           ; BSR set to: 2
 33474                           ;incstack = 0
 33475  00A0C4  5092               	movf	146,w,c	;volatile
 33476                           
 33477                           ; BSR set to: 2
 33478  00A0C6  0012               	return		;funcret
 33479  00A0C8                     __end_of_I2C1_MasterGetRxData:
 33480                           	callstack 0
 33481                           
 33482 ;; *************** function _I2C1_MasterSendNack *****************
 33483 ;; Defined at:
 33484 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 33485 ;; Parameters:    Size  Location     Type
 33486 ;;		None
 33487 ;; Auto vars:     Size  Location     Type
 33488 ;;		None
 33489 ;; Return value:  Size  Location     Type
 33490 ;;                  1    wreg      void 
 33491 ;; Registers used:
 33492 ;;		None
 33493 ;; Tracked objects:
 33494 ;;		On entry : 0/2
 33495 ;;		On exit  : 0/0
 33496 ;;		Unchanged: 0/0
 33497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33502 ;;Total ram usage:        0 bytes
 33503 ;; Hardware stack levels used: 1
 33504 ;; Hardware stack levels required when called: 4
 33505 ;; This function calls:
 33506 ;;		Nothing
 33507 ;; This function is called by:
 33508 ;;		_I2C1_DO_RX_NACK_STOP
 33509 ;;		_I2C1_DO_RX_NACK_RESTART
 33510 ;; This function uses a non-reentrant model
 33511 ;;
 33512                           
 33513                           	psect	text163
 33514  00A0A4                     __ptext163:
 33515                           	callstack 0
 33516  00A0A4                     _I2C1_MasterSendNack:
 33517                           	callstack 16
 33518                           
 33519                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 33520                           
 33521                           ; BSR set to: 2
 33522                           ;incstack = 0
 33523  00A0A4  8A97               	bsf	151,5,c	;volatile
 33524                           
 33525                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 33526  00A0A6  8897               	bsf	151,4,c	;volatile
 33527  00A0A8  0012               	return		;funcret
 33528  00A0AA                     __end_of_I2C1_MasterSendNack:
 33529                           	callstack 0
 33530                           
 33531 ;; *************** function _I2C1_MasterStartRx *****************
 33532 ;; Defined at:
 33533 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 33534 ;; Parameters:    Size  Location     Type
 33535 ;;		None
 33536 ;; Auto vars:     Size  Location     Type
 33537 ;;		None
 33538 ;; Return value:  Size  Location     Type
 33539 ;;                  1    wreg      void 
 33540 ;; Registers used:
 33541 ;;		None
 33542 ;; Tracked objects:
 33543 ;;		On entry : 3F/2
 33544 ;;		On exit  : 3F/2
 33545 ;;		Unchanged: 3F/0
 33546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33551 ;;Total ram usage:        0 bytes
 33552 ;; Hardware stack levels used: 1
 33553 ;; Hardware stack levels required when called: 4
 33554 ;; This function calls:
 33555 ;;		Nothing
 33556 ;; This function is called by:
 33557 ;;		_I2C1_DO_RCEN
 33558 ;; This function uses a non-reentrant model
 33559 ;;
 33560                           
 33561                           	psect	text164
 33562  00A0C8                     __ptext164:
 33563                           	callstack 0
 33564  00A0C8                     _I2C1_MasterStartRx:
 33565                           	callstack 16
 33566                           
 33567                           ; BSR set to: 2
 33568                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 33569                           
 33570                           ;incstack = 0
 33571  00A0C8  8697               	bsf	151,3,c	;volatile
 33572                           
 33573                           ; BSR set to: 2
 33574  00A0CA  0012               	return		;funcret
 33575  00A0CC                     __end_of_I2C1_MasterStartRx:
 33576                           	callstack 0
 33577                           
 33578 ;; *************** function _I2C1_CallbackReturnReset *****************
 33579 ;; Defined at:
 33580 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 33581 ;; Parameters:    Size  Location     Type
 33582 ;;  funPtr          2   24[COMRAM] PTR void 
 33583 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33584 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33585 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33586 ;; Auto vars:     Size  Location     Type
 33587 ;;		None
 33588 ;; Return value:  Size  Location     Type
 33589 ;;                  1    wreg      enum E360
 33590 ;; Registers used:
 33591 ;;		wreg
 33592 ;; Tracked objects:
 33593 ;;		On entry : 3F/2
 33594 ;;		On exit  : 3F/2
 33595 ;;		Unchanged: 3F/0
 33596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33597 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33600 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33601 ;;Total ram usage:        2 bytes
 33602 ;; Hardware stack levels used: 1
 33603 ;; Hardware stack levels required when called: 4
 33604 ;; This function calls:
 33605 ;;		Nothing
 33606 ;; This function is called by:
 33607 ;;		_I2C1_Open
 33608 ;;		_I2C1_DO_TX
 33609 ;;		_I2C1_DO_RX
 33610 ;;		_I2C1_DO_TX_EMPTY
 33611 ;;		_I2C1_DO_ADDRESS_NACK
 33612 ;; This function uses a non-reentrant model
 33613 ;;
 33614                           
 33615                           	psect	text165
 33616  00A0CC                     __ptext165:
 33617                           	callstack 0
 33618  00A0CC                     _I2C1_CallbackReturnReset:
 33619                           	callstack 16
 33620                           
 33621                           ; BSR set to: 2
 33622                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 33623                           
 33624                           ; BSR set to: 2
 33625                           ;incstack = 0
 33626  00A0CC  0E05               	movlw	5
 33627                           
 33628                           ; BSR set to: 2
 33629  00A0CE  0012               	return		;funcret
 33630  00A0D0                     __end_of_I2C1_CallbackReturnReset:
 33631                           	callstack 0
 33632                           
 33633 ;; *************** function _I2C1_CallbackReturnStop *****************
 33634 ;; Defined at:
 33635 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 33636 ;; Parameters:    Size  Location     Type
 33637 ;;  funPtr          2   24[COMRAM] PTR void 
 33638 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33639 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33640 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33641 ;; Auto vars:     Size  Location     Type
 33642 ;;		None
 33643 ;; Return value:  Size  Location     Type
 33644 ;;                  1    wreg      enum E360
 33645 ;; Registers used:
 33646 ;;		wreg
 33647 ;; Tracked objects:
 33648 ;;		On entry : 3F/2
 33649 ;;		On exit  : 3F/2
 33650 ;;		Unchanged: 3F/0
 33651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33652 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33655 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33656 ;;Total ram usage:        2 bytes
 33657 ;; Hardware stack levels used: 1
 33658 ;; Hardware stack levels required when called: 4
 33659 ;; This function calls:
 33660 ;;		Nothing
 33661 ;; This function is called by:
 33662 ;;		_I2C1_Open
 33663 ;;		_I2C1_SetCallback
 33664 ;;		_I2C1_DO_TX
 33665 ;;		_I2C1_DO_RX
 33666 ;;		_I2C1_DO_TX_EMPTY
 33667 ;;		_I2C1_DO_ADDRESS_NACK
 33668 ;; This function uses a non-reentrant model
 33669 ;;
 33670                           
 33671                           	psect	text166
 33672  00A0D0                     __ptext166:
 33673                           	callstack 0
 33674  00A0D0                     _I2C1_CallbackReturnStop:
 33675                           	callstack 16
 33676                           
 33677                           ; BSR set to: 2
 33678                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 33679                           
 33680                           ; BSR set to: 2
 33681                           ;incstack = 0
 33682  00A0D0  0E01               	movlw	1
 33683                           
 33684                           ; BSR set to: 2
 33685  00A0D2  0012               	return		;funcret
 33686  00A0D4                     __end_of_I2C1_CallbackReturnStop:
 33687                           	callstack 0
 33688                           
 33689 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F535 *****************
 33690 ;; Defined at:
 33691 ;;		line 176 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33692 ;; Parameters:    Size  Location     Type
 33693 ;;  ptr             2   24[COMRAM] PTR void 
 33694 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33695 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33696 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33697 ;; Auto vars:     Size  Location     Type
 33698 ;;		None
 33699 ;; Return value:  Size  Location     Type
 33700 ;;                  1    wreg      enum E527
 33701 ;; Registers used:
 33702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33703 ;; Tracked objects:
 33704 ;;		On entry : 3F/2
 33705 ;;		On exit  : 0/0
 33706 ;;		Unchanged: 0/0
 33707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33708 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33711 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33712 ;;Total ram usage:        2 bytes
 33713 ;; Hardware stack levels used: 1
 33714 ;; Hardware stack levels required when called: 6
 33715 ;; This function calls:
 33716 ;;		_I2C1_SetBuffer
 33717 ;;		_I2C1_SetDataCompleteCallback
 33718 ;; This function is called by:
 33719 ;;		_I2C1_DO_TX
 33720 ;;		_I2C1_DO_RX
 33721 ;;		_I2C1_DO_TX_EMPTY
 33722 ;;		_I2C1_DO_ADDRESS_NACK
 33723 ;; This function uses a non-reentrant model
 33724 ;;
 33725                           
 33726                           	psect	text167
 33727  0096D4                     __ptext167:
 33728                           	callstack 0
 33729  0096D4                     _rdBlkRegCompleteHandler@i2c1_master_example$F535:
 33730                           	callstack 14
 33731                           
 33732                           ; BSR set to: 2
 33733                           ;mcc_generated_files/examples/i2c1_master_example.c: 176: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 177: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 178:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 33734                           
 33735                           ; BSR set to: 2
 33736                           ;incstack = 0
 33737  0096D4  EE20 F002          	lfsr	2,2
 33738  0096D8  5019               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr^0,w,c
 33739  0096DA  26D9               	addwf	fsr2l,f,c
 33740  0096DC  501A               	movf	(rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1)^0,w,c
 33741  0096DE  22DA               	addwfc	fsr2h,f,c
 33742  0096E0  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 33743  0096E4  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 33744  0096E8  C019  FFD9         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr,fsr2l
 33745  0096EC  C01A  FFDA         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1,fsr2h
 33746  0096F0  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 33747  0096F4  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 33748  0096F8  EC1C  F04F         	call	_I2C1_SetBuffer	;wreg free
 33749                           
 33750                           ; BSR set to: 2
 33751                           ;mcc_generated_files/examples/i2c1_master_example.c: 179:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33752  0096FC  0E00               	movlw	0
 33753  0096FE  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33754  009700  0E00               	movlw	0
 33755  009702  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33756  009704  0E00               	movlw	0
 33757  009706  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33758  009708  0E00               	movlw	0
 33759  00970A  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33760  00970C  EC65  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33761                           
 33762                           ;mcc_generated_files/examples/i2c1_master_example.c: 180:     return I2C1_RESTART_READ;
 33763  009710  0E02               	movlw	2
 33764  009712  0012               	return		;funcret
 33765  009714                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535:
 33766                           	callstack 0
 33767                           
 33768 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F517 *****************
 33769 ;; Defined at:
 33770 ;;		line 162 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33771 ;; Parameters:    Size  Location     Type
 33772 ;;  ptr             2   24[COMRAM] PTR void 
 33773 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33774 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33775 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33776 ;; Auto vars:     Size  Location     Type
 33777 ;;		None
 33778 ;; Return value:  Size  Location     Type
 33779 ;;                  1    wreg      enum E527
 33780 ;; Registers used:
 33781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33782 ;; Tracked objects:
 33783 ;;		On entry : 3F/2
 33784 ;;		On exit  : 0/0
 33785 ;;		Unchanged: 0/0
 33786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33787 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33790 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33791 ;;Total ram usage:        2 bytes
 33792 ;; Hardware stack levels used: 1
 33793 ;; Hardware stack levels required when called: 6
 33794 ;; This function calls:
 33795 ;;		_I2C1_SetBuffer
 33796 ;;		_I2C1_SetDataCompleteCallback
 33797 ;; This function is called by:
 33798 ;;		_I2C1_DO_TX
 33799 ;;		_I2C1_DO_RX
 33800 ;;		_I2C1_DO_TX_EMPTY
 33801 ;;		_I2C1_DO_ADDRESS_NACK
 33802 ;; This function uses a non-reentrant model
 33803 ;;
 33804                           
 33805                           	psect	text168
 33806  009A1A                     __ptext168:
 33807                           	callstack 0
 33808  009A1A                     _wr1RegCompleteHandler@i2c1_master_example$F517:
 33809                           	callstack 14
 33810                           
 33811                           ; BSR set to: 2
 33812                           ;mcc_generated_files/examples/i2c1_master_example.c: 162: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 163: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 164:     I2C1_SetBuffer(ptr,1);
 33813                           
 33814                           ;incstack = 0
 33815  009A1A  C019  F010         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr,I2C1_SetBuffer@buffer
 33816  009A1E  C01A  F011         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr+1,I2C1_SetBuffer@buffer+1
 33817  009A22  0E00               	movlw	0
 33818  009A24  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33819  009A26  0E01               	movlw	1
 33820  009A28  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33821  009A2A  EC1C  F04F         	call	_I2C1_SetBuffer	;wreg free
 33822                           
 33823                           ; BSR set to: 2
 33824                           ;mcc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33825  009A2E  0E00               	movlw	0
 33826  009A30  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33827  009A32  0E00               	movlw	0
 33828  009A34  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33829  009A36  0E00               	movlw	0
 33830  009A38  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33831  009A3A  0E00               	movlw	0
 33832  009A3C  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33833  009A3E  EC65  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33834                           
 33835                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     return I2C1_CONTINUE;
 33836  009A42  0E04               	movlw	4
 33837  009A44  0012               	return		;funcret
 33838  009A46                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F517:
 33839                           	callstack 0
 33840                           
 33841 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F511 *****************
 33842 ;; Defined at:
 33843 ;;		line 155 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33844 ;; Parameters:    Size  Location     Type
 33845 ;;  ptr             2   24[COMRAM] PTR void 
 33846 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33847 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33848 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33849 ;; Auto vars:     Size  Location     Type
 33850 ;;		None
 33851 ;; Return value:  Size  Location     Type
 33852 ;;                  1    wreg      enum E527
 33853 ;; Registers used:
 33854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33855 ;; Tracked objects:
 33856 ;;		On entry : 3F/2
 33857 ;;		On exit  : 0/0
 33858 ;;		Unchanged: 0/0
 33859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33860 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33863 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33864 ;;Total ram usage:        2 bytes
 33865 ;; Hardware stack levels used: 1
 33866 ;; Hardware stack levels required when called: 6
 33867 ;; This function calls:
 33868 ;;		_I2C1_SetBuffer
 33869 ;;		_I2C1_SetDataCompleteCallback
 33870 ;; This function is called by:
 33871 ;;		_I2C1_DO_TX
 33872 ;;		_I2C1_DO_RX
 33873 ;;		_I2C1_DO_TX_EMPTY
 33874 ;;		_I2C1_DO_ADDRESS_NACK
 33875 ;; This function uses a non-reentrant model
 33876 ;;
 33877                           
 33878                           	psect	text169
 33879  009A46                     __ptext169:
 33880                           	callstack 0
 33881  009A46                     _rd2RegCompleteHandler@i2c1_master_example$F511:
 33882                           	callstack 14
 33883                           
 33884                           ; BSR set to: 2
 33885                           ;mcc_generated_files/examples/i2c1_master_example.c: 155: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 156: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 157:     I2C1_SetBuffer(ptr,2);
 33886                           
 33887                           ;incstack = 0
 33888  009A46  C019  F010         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr,I2C1_SetBuffer@buffer
 33889  009A4A  C01A  F011         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr+1,I2C1_SetBuffer@buffer+1
 33890  009A4E  0E00               	movlw	0
 33891  009A50  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33892  009A52  0E02               	movlw	2
 33893  009A54  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33894  009A56  EC1C  F04F         	call	_I2C1_SetBuffer	;wreg free
 33895                           
 33896                           ; BSR set to: 2
 33897                           ;mcc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33898  009A5A  0E00               	movlw	0
 33899  009A5C  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33900  009A5E  0E00               	movlw	0
 33901  009A60  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33902  009A62  0E00               	movlw	0
 33903  009A64  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33904  009A66  0E00               	movlw	0
 33905  009A68  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33906  009A6A  EC65  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33907                           
 33908                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     return I2C1_RESTART_READ;
 33909  009A6E  0E02               	movlw	2
 33910  009A70  0012               	return		;funcret
 33911  009A72                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F511:
 33912                           	callstack 0
 33913                           
 33914 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F500 *****************
 33915 ;; Defined at:
 33916 ;;		line 148 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33917 ;; Parameters:    Size  Location     Type
 33918 ;;  ptr             2   24[COMRAM] PTR void 
 33919 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33920 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33921 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33922 ;; Auto vars:     Size  Location     Type
 33923 ;;		None
 33924 ;; Return value:  Size  Location     Type
 33925 ;;                  1    wreg      enum E527
 33926 ;; Registers used:
 33927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33928 ;; Tracked objects:
 33929 ;;		On entry : 3F/2
 33930 ;;		On exit  : 0/0
 33931 ;;		Unchanged: 0/0
 33932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33933 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33936 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33937 ;;Total ram usage:        2 bytes
 33938 ;; Hardware stack levels used: 1
 33939 ;; Hardware stack levels required when called: 6
 33940 ;; This function calls:
 33941 ;;		_I2C1_SetBuffer
 33942 ;;		_I2C1_SetDataCompleteCallback
 33943 ;; This function is called by:
 33944 ;;		_I2C1_Read1ByteRegister
 33945 ;;		_I2C1_DO_TX
 33946 ;;		_I2C1_DO_RX
 33947 ;;		_I2C1_DO_TX_EMPTY
 33948 ;;		_I2C1_DO_ADDRESS_NACK
 33949 ;; This function uses a non-reentrant model
 33950 ;;
 33951                           
 33952                           	psect	text170
 33953  009A72                     __ptext170:
 33954                           	callstack 0
 33955  009A72                     _rd1RegCompleteHandler@i2c1_master_example$F500:
 33956                           	callstack 14
 33957                           
 33958                           ; BSR set to: 2
 33959                           ;mcc_generated_files/examples/i2c1_master_example.c: 148: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 149: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 150:     I2C1_SetBuffer(ptr,1);
 33960                           
 33961                           ;incstack = 0
 33962  009A72  C019  F010         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr,I2C1_SetBuffer@buffer
 33963  009A76  C01A  F011         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr+1,I2C1_SetBuffer@buffer+1
 33964  009A7A  0E00               	movlw	0
 33965  009A7C  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33966  009A7E  0E01               	movlw	1
 33967  009A80  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33968  009A82  EC1C  F04F         	call	_I2C1_SetBuffer	;wreg free
 33969                           
 33970                           ; BSR set to: 2
 33971                           ;mcc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33972  009A86  0E00               	movlw	0
 33973  009A88  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33974  009A8A  0E00               	movlw	0
 33975  009A8C  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33976  009A8E  0E00               	movlw	0
 33977  009A90  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33978  009A92  0E00               	movlw	0
 33979  009A94  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33980  009A96  EC65  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33981                           
 33982                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     return I2C1_RESTART_READ;
 33983  009A9A  0E02               	movlw	2
 33984  009A9C  0012               	return		;funcret
 33985  009A9E                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F500:
 33986                           	callstack 0
 33987                           
 33988 ;; *************** function _rdBlkRegCompleteHandler *****************
 33989 ;; Defined at:
 33990 ;;		line 140 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33991 ;; Parameters:    Size  Location     Type
 33992 ;;  p               2   24[COMRAM] PTR void 
 33993 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33994 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33995 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33996 ;; Auto vars:     Size  Location     Type
 33997 ;;		None
 33998 ;; Return value:  Size  Location     Type
 33999 ;;                  1    wreg      enum E360
 34000 ;; Registers used:
 34001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34002 ;; Tracked objects:
 34003 ;;		On entry : 3F/2
 34004 ;;		On exit  : 0/0
 34005 ;;		Unchanged: 0/0
 34006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34007 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34010 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34011 ;;Total ram usage:        2 bytes
 34012 ;; Hardware stack levels used: 1
 34013 ;; Hardware stack levels required when called: 6
 34014 ;; This function calls:
 34015 ;;		_I2C1_SetBuffer
 34016 ;;		_I2C1_SetDataCompleteCallback
 34017 ;; This function is called by:
 34018 ;;		_i2c_readDataBlock
 34019 ;;		_I2C1_DO_TX
 34020 ;;		_I2C1_DO_RX
 34021 ;;		_I2C1_DO_TX_EMPTY
 34022 ;;		_I2C1_DO_ADDRESS_NACK
 34023 ;; This function uses a non-reentrant model
 34024 ;;
 34025                           
 34026                           	psect	text171
 34027  009714                     __ptext171:
 34028                           	callstack 0
 34029  009714                     _rdBlkRegCompleteHandler:
 34030                           	callstack 14
 34031                           
 34032                           ; BSR set to: 2
 34033                           ;mcc_generated_files/drivers/i2c_simple_master.c: 140: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 141: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 34034                           
 34035                           ;incstack = 0
 34036  009714  EE20 F002          	lfsr	2,2
 34037  009718  5019               	movf	rdBlkRegCompleteHandler@p^0,w,c
 34038  00971A  26D9               	addwf	fsr2l,f,c
 34039  00971C  501A               	movf	(rdBlkRegCompleteHandler@p+1)^0,w,c
 34040  00971E  22DA               	addwfc	fsr2h,f,c
 34041  009720  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 34042  009724  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 34043  009728  C019  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
 34044  00972C  C01A  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
 34045  009730  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 34046  009734  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 34047  009738  EC1C  F04F         	call	_I2C1_SetBuffer	;wreg free
 34048                           
 34049                           ; BSR set to: 2
 34050                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 34051  00973C  0E00               	movlw	0
 34052  00973E  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 34053  009740  0E00               	movlw	0
 34054  009742  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 34055  009744  0E00               	movlw	0
 34056  009746  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 34057  009748  0E00               	movlw	0
 34058  00974A  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 34059  00974C  EC65  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 34060                           
 34061                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     return I2C1_RESTART_READ;
 34062  009750  0E02               	movlw	2
 34063  009752  0012               	return		;funcret
 34064  009754                     __end_of_rdBlkRegCompleteHandler:
 34065                           	callstack 0
 34066                           
 34067 ;; *************** function _wr2RegCompleteHandler *****************
 34068 ;; Defined at:
 34069 ;;		line 116 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 34070 ;; Parameters:    Size  Location     Type
 34071 ;;  p               2   24[COMRAM] PTR void 
 34072 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34073 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34074 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34075 ;; Auto vars:     Size  Location     Type
 34076 ;;		None
 34077 ;; Return value:  Size  Location     Type
 34078 ;;                  1    wreg      enum E360
 34079 ;; Registers used:
 34080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34081 ;; Tracked objects:
 34082 ;;		On entry : 3F/2
 34083 ;;		On exit  : 0/0
 34084 ;;		Unchanged: 0/0
 34085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34086 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34089 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34090 ;;Total ram usage:        2 bytes
 34091 ;; Hardware stack levels used: 1
 34092 ;; Hardware stack levels required when called: 6
 34093 ;; This function calls:
 34094 ;;		_I2C1_SetBuffer
 34095 ;;		_I2C1_SetDataCompleteCallback
 34096 ;; This function is called by:
 34097 ;;		_I2C1_DO_TX
 34098 ;;		_I2C1_DO_RX
 34099 ;;		_I2C1_DO_TX_EMPTY
 34100 ;;		_I2C1_DO_ADDRESS_NACK
 34101 ;; This function uses a non-reentrant model
 34102 ;;
 34103                           
 34104                           	psect	text172
 34105  009A9E                     __ptext172:
 34106                           	callstack 0
 34107  009A9E                     _wr2RegCompleteHandler:
 34108                           	callstack 14
 34109                           
 34110                           ; BSR set to: 2
 34111                           ;mcc_generated_files/drivers/i2c_simple_master.c: 116: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 117: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 118:     I2C1_SetBuffer(p,2);
 34112                           
 34113                           ;incstack = 0
 34114  009A9E  C019  F010         	movff	wr2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 34115  009AA2  C01A  F011         	movff	wr2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 34116  009AA6  0E00               	movlw	0
 34117  009AA8  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 34118  009AAA  0E02               	movlw	2
 34119  009AAC  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 34120  009AAE  EC1C  F04F         	call	_I2C1_SetBuffer	;wreg free
 34121                           
 34122                           ; BSR set to: 2
 34123                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 34124  009AB2  0E00               	movlw	0
 34125  009AB4  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 34126  009AB6  0E00               	movlw	0
 34127  009AB8  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 34128  009ABA  0E00               	movlw	0
 34129  009ABC  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 34130  009ABE  0E00               	movlw	0
 34131  009AC0  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 34132  009AC2  EC65  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 34133                           
 34134                           ;mcc_generated_files/drivers/i2c_simple_master.c: 120:     return I2C1_CONTINUE;
 34135  009AC6  0E04               	movlw	4
 34136  009AC8  0012               	return		;funcret
 34137  009ACA                     __end_of_wr2RegCompleteHandler:
 34138                           	callstack 0
 34139                           
 34140 ;; *************** function _rd2RegCompleteHandler *****************
 34141 ;; Defined at:
 34142 ;;		line 93 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 34143 ;; Parameters:    Size  Location     Type
 34144 ;;  p               2   24[COMRAM] PTR void 
 34145 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34146 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34147 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34148 ;; Auto vars:     Size  Location     Type
 34149 ;;		None
 34150 ;; Return value:  Size  Location     Type
 34151 ;;                  1    wreg      enum E360
 34152 ;; Registers used:
 34153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34154 ;; Tracked objects:
 34155 ;;		On entry : 3F/2
 34156 ;;		On exit  : 0/0
 34157 ;;		Unchanged: 0/0
 34158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34159 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34162 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34163 ;;Total ram usage:        2 bytes
 34164 ;; Hardware stack levels used: 1
 34165 ;; Hardware stack levels required when called: 6
 34166 ;; This function calls:
 34167 ;;		_I2C1_SetBuffer
 34168 ;;		_I2C1_SetDataCompleteCallback
 34169 ;; This function is called by:
 34170 ;;		_I2C1_DO_TX
 34171 ;;		_I2C1_DO_RX
 34172 ;;		_I2C1_DO_TX_EMPTY
 34173 ;;		_I2C1_DO_ADDRESS_NACK
 34174 ;; This function uses a non-reentrant model
 34175 ;;
 34176                           
 34177                           	psect	text173
 34178  009ACA                     __ptext173:
 34179                           	callstack 0
 34180  009ACA                     _rd2RegCompleteHandler:
 34181                           	callstack 14
 34182                           
 34183                           ; BSR set to: 2
 34184                           ;mcc_generated_files/drivers/i2c_simple_master.c: 93: static i2c1_operations_t rd2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 94: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 95:     I2C1_SetBuffer(p,2);
 34185                           
 34186                           ;incstack = 0
 34187  009ACA  C019  F010         	movff	rd2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 34188  009ACE  C01A  F011         	movff	rd2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 34189  009AD2  0E00               	movlw	0
 34190  009AD4  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 34191  009AD6  0E02               	movlw	2
 34192  009AD8  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 34193  009ADA  EC1C  F04F         	call	_I2C1_SetBuffer	;wreg free
 34194                           
 34195                           ; BSR set to: 2
 34196                           ;mcc_generated_files/drivers/i2c_simple_master.c: 96:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 34197  009ADE  0E00               	movlw	0
 34198  009AE0  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 34199  009AE2  0E00               	movlw	0
 34200  009AE4  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 34201  009AE6  0E00               	movlw	0
 34202  009AE8  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 34203  009AEA  0E00               	movlw	0
 34204  009AEC  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 34205  009AEE  EC65  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 34206                           
 34207                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97:     return I2C1_RESTART_READ;
 34208  009AF2  0E02               	movlw	2
 34209  009AF4  0012               	return		;funcret
 34210  009AF6                     __end_of_rd2RegCompleteHandler:
 34211                           	callstack 0
 34212                           
 34213 ;; *************** function _rd1RegCompleteHandler *****************
 34214 ;; Defined at:
 34215 ;;		line 64 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 34216 ;; Parameters:    Size  Location     Type
 34217 ;;  p               2   24[COMRAM] PTR void 
 34218 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34219 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34220 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34221 ;; Auto vars:     Size  Location     Type
 34222 ;;		None
 34223 ;; Return value:  Size  Location     Type
 34224 ;;                  1    wreg      enum E360
 34225 ;; Registers used:
 34226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34227 ;; Tracked objects:
 34228 ;;		On entry : 3F/2
 34229 ;;		On exit  : 0/0
 34230 ;;		Unchanged: 0/0
 34231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34232 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34235 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34236 ;;Total ram usage:        2 bytes
 34237 ;; Hardware stack levels used: 1
 34238 ;; Hardware stack levels required when called: 6
 34239 ;; This function calls:
 34240 ;;		_I2C1_SetBuffer
 34241 ;;		_I2C1_SetDataCompleteCallback
 34242 ;; This function is called by:
 34243 ;;		_I2C1_DO_TX
 34244 ;;		_I2C1_DO_RX
 34245 ;;		_I2C1_DO_TX_EMPTY
 34246 ;;		_I2C1_DO_ADDRESS_NACK
 34247 ;; This function uses a non-reentrant model
 34248 ;;
 34249                           
 34250                           	psect	text174
 34251  009AF6                     __ptext174:
 34252                           	callstack 0
 34253  009AF6                     _rd1RegCompleteHandler:
 34254                           	callstack 14
 34255                           
 34256                           ; BSR set to: 2
 34257                           ;mcc_generated_files/drivers/i2c_simple_master.c: 64: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 65: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 66:     I2C1_SetBuffer(p,1);
 34258                           
 34259                           ;incstack = 0
 34260  009AF6  C019  F010         	movff	rd1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 34261  009AFA  C01A  F011         	movff	rd1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 34262  009AFE  0E00               	movlw	0
 34263  009B00  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 34264  009B02  0E01               	movlw	1
 34265  009B04  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 34266  009B06  EC1C  F04F         	call	_I2C1_SetBuffer	;wreg free
 34267                           
 34268                           ; BSR set to: 2
 34269                           ;mcc_generated_files/drivers/i2c_simple_master.c: 67:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 34270  009B0A  0E00               	movlw	0
 34271  009B0C  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 34272  009B0E  0E00               	movlw	0
 34273  009B10  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 34274  009B12  0E00               	movlw	0
 34275  009B14  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 34276  009B16  0E00               	movlw	0
 34277  009B18  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 34278  009B1A  EC65  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 34279                           
 34280                           ;mcc_generated_files/drivers/i2c_simple_master.c: 68:     return I2C1_RESTART_READ;
 34281  009B1E  0E02               	movlw	2
 34282  009B20  0012               	return		;funcret
 34283  009B22                     __end_of_rd1RegCompleteHandler:
 34284                           	callstack 0
 34285                           
 34286 ;; *************** function _wr1RegCompleteHandler *****************
 34287 ;; Defined at:
 34288 ;;		line 33 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 34289 ;; Parameters:    Size  Location     Type
 34290 ;;  p               2   24[COMRAM] PTR void 
 34291 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34292 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34293 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34294 ;; Auto vars:     Size  Location     Type
 34295 ;;		None
 34296 ;; Return value:  Size  Location     Type
 34297 ;;                  1    wreg      enum E360
 34298 ;; Registers used:
 34299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34300 ;; Tracked objects:
 34301 ;;		On entry : 3F/2
 34302 ;;		On exit  : 0/0
 34303 ;;		Unchanged: 0/0
 34304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34305 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34308 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34309 ;;Total ram usage:        2 bytes
 34310 ;; Hardware stack levels used: 1
 34311 ;; Hardware stack levels required when called: 6
 34312 ;; This function calls:
 34313 ;;		_I2C1_SetBuffer
 34314 ;;		_I2C1_SetDataCompleteCallback
 34315 ;; This function is called by:
 34316 ;;		_I2C1_DO_TX
 34317 ;;		_I2C1_DO_RX
 34318 ;;		_I2C1_DO_TX_EMPTY
 34319 ;;		_I2C1_DO_ADDRESS_NACK
 34320 ;; This function uses a non-reentrant model
 34321 ;;
 34322                           
 34323                           	psect	text175
 34324  009B22                     __ptext175:
 34325                           	callstack 0
 34326  009B22                     _wr1RegCompleteHandler:
 34327                           	callstack 14
 34328                           
 34329                           ; BSR set to: 2
 34330                           ;mcc_generated_files/drivers/i2c_simple_master.c: 33: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 34: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 35:     I2C1_SetBuffer(p,1);
 34331                           
 34332                           ;incstack = 0
 34333  009B22  C019  F010         	movff	wr1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 34334  009B26  C01A  F011         	movff	wr1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 34335  009B2A  0E00               	movlw	0
 34336  009B2C  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 34337  009B2E  0E01               	movlw	1
 34338  009B30  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 34339  009B32  EC1C  F04F         	call	_I2C1_SetBuffer	;wreg free
 34340                           
 34341                           ; BSR set to: 2
 34342                           ;mcc_generated_files/drivers/i2c_simple_master.c: 36:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 34343  009B36  0E00               	movlw	0
 34344  009B38  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 34345  009B3A  0E00               	movlw	0
 34346  009B3C  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 34347  009B3E  0E00               	movlw	0
 34348  009B40  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 34349  009B42  0E00               	movlw	0
 34350  009B44  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 34351  009B46  EC65  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 34352                           
 34353                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     return I2C1_CONTINUE;
 34354  009B4A  0E04               	movlw	4
 34355  009B4C  0012               	return		;funcret
 34356  009B4E                     __end_of_wr1RegCompleteHandler:
 34357                           	callstack 0
 34358                           
 34359 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F523 *****************
 34360 ;; Defined at:
 34361 ;;		line 169 in file "mcc_generated_files/examples/i2c1_master_example.c"
 34362 ;; Parameters:    Size  Location     Type
 34363 ;;  ptr             2   24[COMRAM] PTR void 
 34364 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34365 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34366 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34367 ;; Auto vars:     Size  Location     Type
 34368 ;;		None
 34369 ;; Return value:  Size  Location     Type
 34370 ;;                  1    wreg      enum E527
 34371 ;; Registers used:
 34372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34373 ;; Tracked objects:
 34374 ;;		On entry : 3F/2
 34375 ;;		On exit  : 0/0
 34376 ;;		Unchanged: 0/0
 34377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34378 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34381 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34382 ;;Total ram usage:        2 bytes
 34383 ;; Hardware stack levels used: 1
 34384 ;; Hardware stack levels required when called: 6
 34385 ;; This function calls:
 34386 ;;		_I2C1_SetBuffer
 34387 ;;		_I2C1_SetDataCompleteCallback
 34388 ;; This function is called by:
 34389 ;;		_I2C1_DO_TX
 34390 ;;		_I2C1_DO_RX
 34391 ;;		_I2C1_DO_TX_EMPTY
 34392 ;;		_I2C1_DO_ADDRESS_NACK
 34393 ;; This function uses a non-reentrant model
 34394 ;;
 34395                           
 34396                           	psect	text176
 34397  009B4E                     __ptext176:
 34398                           	callstack 0
 34399  009B4E                     _wr2RegCompleteHandler@i2c1_master_example$F523:
 34400                           	callstack 14
 34401                           
 34402                           ; BSR set to: 2
 34403                           ;mcc_generated_files/examples/i2c1_master_example.c: 169: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 170: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 171:     I2C1_SetBuffer(ptr,2);
 34404                           
 34405                           ;incstack = 0
 34406  009B4E  C019  F010         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr,I2C1_SetBuffer@buffer
 34407  009B52  C01A  F011         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr+1,I2C1_SetBuffer@buffer+1
 34408  009B56  0E00               	movlw	0
 34409  009B58  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 34410  009B5A  0E02               	movlw	2
 34411  009B5C  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 34412  009B5E  EC1C  F04F         	call	_I2C1_SetBuffer	;wreg free
 34413                           
 34414                           ; BSR set to: 2
 34415                           ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 34416  009B62  0E00               	movlw	0
 34417  009B64  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 34418  009B66  0E00               	movlw	0
 34419  009B68  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 34420  009B6A  0E00               	movlw	0
 34421  009B6C  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 34422  009B6E  0E00               	movlw	0
 34423  009B70  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 34424  009B72  EC65  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 34425                           
 34426                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     return I2C1_CONTINUE;
 34427  009B76  0E04               	movlw	4
 34428  009B78  0012               	return		;funcret
 34429  009B7A                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F523:
 34430                           	callstack 0
 34431                           
 34432 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 34433 ;; Defined at:
 34434 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 34435 ;; Parameters:    Size  Location     Type
 34436 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 34437 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 34438 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 34439 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 34440 ;;  ptr             2   22[COMRAM] PTR void 
 34441 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34442 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34443 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34444 ;; Auto vars:     Size  Location     Type
 34445 ;;		None
 34446 ;; Return value:  Size  Location     Type
 34447 ;;                  1    wreg      void 
 34448 ;; Registers used:
 34449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34450 ;; Tracked objects:
 34451 ;;		On entry : 33/2
 34452 ;;		On exit  : 0/0
 34453 ;;		Unchanged: 0/0
 34454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34455 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34458 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34459 ;;Total ram usage:        4 bytes
 34460 ;; Hardware stack levels used: 1
 34461 ;; Hardware stack levels required when called: 5
 34462 ;; This function calls:
 34463 ;;		_I2C1_SetCallback
 34464 ;; This function is called by:
 34465 ;;		_wr1RegCompleteHandler
 34466 ;;		_rd1RegCompleteHandler
 34467 ;;		_rd2RegCompleteHandler
 34468 ;;		_wr2RegCompleteHandler
 34469 ;;		_rdBlkRegCompleteHandler
 34470 ;;		_i2c_readDataBlock
 34471 ;;		_I2C1_Read1ByteRegister
 34472 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 34473 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 34474 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 34475 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 34476 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 34477 ;; This function uses a non-reentrant model
 34478 ;;
 34479                           
 34480                           	psect	text177
 34481  009ECA                     __ptext177:
 34482                           	callstack 0
 34483  009ECA                     _I2C1_SetDataCompleteCallback:
 34484                           	callstack 20
 34485                           
 34486                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 34487                           
 34488                           ;incstack = 0
 34489  009ECA  C015  F010         	movff	I2C1_SetDataCompleteCallback@cb,I2C1_SetCallback@cb
 34490  009ECE  C016  F011         	movff	I2C1_SetDataCompleteCallback@cb+1,I2C1_SetCallback@cb+1
 34491  009ED2  C017  F012         	movff	I2C1_SetDataCompleteCallback@ptr,I2C1_SetCallback@ptr
 34492  009ED6  C018  F013         	movff	I2C1_SetDataCompleteCallback@ptr+1,I2C1_SetCallback@ptr+1
 34493  009EDA  0E00               	movlw	0
 34494  009EDC  EC94  F046         	call	_I2C1_SetCallback
 34495  009EE0  0012               	return		;funcret
 34496  009EE2                     __end_of_I2C1_SetDataCompleteCallback:
 34497                           	callstack 0
 34498                           
 34499 ;; *************** function _I2C1_SetCallback *****************
 34500 ;; Defined at:
 34501 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 34502 ;; Parameters:    Size  Location     Type
 34503 ;;  idx             1    wreg     enum E10460
 34504 ;;  cb              2   15[COMRAM] PTR FTN(PTR void ,)enum 
 34505 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 34506 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 34507 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 34508 ;;  ptr             2   17[COMRAM] PTR void 
 34509 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34510 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34511 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34512 ;; Auto vars:     Size  Location     Type
 34513 ;;  idx             1   19[COMRAM] enum E10460
 34514 ;; Return value:  Size  Location     Type
 34515 ;;                  1    wreg      void 
 34516 ;; Registers used:
 34517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34518 ;; Tracked objects:
 34519 ;;		On entry : 33/2
 34520 ;;		On exit  : 0/0
 34521 ;;		Unchanged: 0/0
 34522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34523 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34524 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34526 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34527 ;;Total ram usage:        5 bytes
 34528 ;; Hardware stack levels used: 1
 34529 ;; Hardware stack levels required when called: 4
 34530 ;; This function calls:
 34531 ;;		Nothing
 34532 ;; This function is called by:
 34533 ;;		_I2C1_SetDataCompleteCallback
 34534 ;;		_I2C1_SetAddressNackCallback
 34535 ;; This function uses a non-reentrant model
 34536 ;;
 34537                           
 34538                           	psect	text178
 34539  008D28                     __ptext178:
 34540                           	callstack 0
 34541  008D28                     _I2C1_SetCallback:
 34542                           	callstack 20
 34543                           
 34544                           ;incstack = 0
 34545                           ;I2C1_SetCallback@idx stored from wreg
 34546  008D28  6E14               	movwf	I2C1_SetCallback@idx^0,c
 34547                           
 34548                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 34549  008D2A  5010               	movf	I2C1_SetCallback@cb^0,w,c
 34550  008D2C  1011               	iorwf	(I2C1_SetCallback@cb+1)^0,w,c
 34551  008D2E  B4D8               	btfsc	status,2,c
 34552  008D30  D019               	goto	l20108
 34553                           
 34554                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 34555  008D32  5014               	movf	I2C1_SetCallback@idx^0,w,c
 34556  008D34  0D02               	mullw	2
 34557  008D36  0E3C               	movlw	low _I2C1_Status
 34558  008D38  24F3               	addwf	243,w,c
 34559  008D3A  6ED9               	movwf	fsr2l,c
 34560  008D3C  0E02               	movlw	high _I2C1_Status
 34561  008D3E  20F4               	addwfc	prodh,w,c
 34562  008D40  6EDA               	movwf	fsr2h,c
 34563  008D42  C010  FFDE         	movff	I2C1_SetCallback@cb,postinc2
 34564  008D46  C011  FFDD         	movff	I2C1_SetCallback@cb+1,postdec2
 34565                           
 34566                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 34567  008D4A  5014               	movf	I2C1_SetCallback@idx^0,w,c
 34568  008D4C  0D02               	mullw	2
 34569  008D4E  0E48               	movlw	low (_I2C1_Status+12)
 34570  008D50  24F3               	addwf	243,w,c
 34571  008D52  6ED9               	movwf	fsr2l,c
 34572  008D54  0E02               	movlw	high (_I2C1_Status+12)
 34573  008D56  20F4               	addwfc	prodh,w,c
 34574  008D58  6EDA               	movwf	fsr2h,c
 34575  008D5A  C012  FFDE         	movff	I2C1_SetCallback@ptr,postinc2
 34576  008D5E  C013  FFDD         	movff	I2C1_SetCallback@ptr+1,postdec2
 34577                           
 34578                           ;mcc_generated_files/i2c1_master.c: 304:     }
 34579  008D62  0012               	return	
 34580  008D64                     l20108:
 34581                           
 34582                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 34583  008D64  5014               	movf	I2C1_SetCallback@idx^0,w,c
 34584  008D66  0D02               	mullw	2
 34585  008D68  0E3C               	movlw	low _I2C1_Status
 34586  008D6A  24F3               	addwf	243,w,c
 34587  008D6C  6ED9               	movwf	fsr2l,c
 34588  008D6E  0E02               	movlw	high _I2C1_Status
 34589  008D70  20F4               	addwfc	prodh,w,c
 34590  008D72  6EDA               	movwf	fsr2h,c
 34591  008D74  0ED0               	movlw	low _I2C1_CallbackReturnStop
 34592  008D76  6EDE               	movwf	postinc2,c
 34593  008D78  0EA0               	movlw	high _I2C1_CallbackReturnStop
 34594  008D7A  6EDD               	movwf	postdec2,c
 34595                           
 34596                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 34597  008D7C  5014               	movf	I2C1_SetCallback@idx^0,w,c
 34598  008D7E  0D02               	mullw	2
 34599  008D80  0E48               	movlw	low (_I2C1_Status+12)
 34600  008D82  24F3               	addwf	243,w,c
 34601  008D84  6ED9               	movwf	fsr2l,c
 34602  008D86  0E02               	movlw	high (_I2C1_Status+12)
 34603  008D88  20F4               	addwfc	prodh,w,c
 34604  008D8A  6EDA               	movwf	fsr2h,c
 34605  008D8C  0E00               	movlw	0
 34606  008D8E  6EDE               	movwf	postinc2,c
 34607  008D90  0E00               	movlw	0
 34608  008D92  6EDD               	movwf	postdec2,c
 34609  008D94  0012               	return		;funcret
 34610  008D96                     __end_of_I2C1_SetCallback:
 34611                           	callstack 0
 34612                           
 34613 ;; *************** function _I2C1_SetBuffer *****************
 34614 ;; Defined at:
 34615 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 34616 ;; Parameters:    Size  Location     Type
 34617 ;;  buffer          2   15[COMRAM] PTR void 
 34618 ;;		 -> eusartparser@serial(4), cmdMemoryIsEmpty@tempSerial(4), memoryTEMP(16), var_sys_NVM(64), 
 34619 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_WriteNBytes@dat(17), I2C1_Write2ByteRegister@
      +reg(1), 
 34620 ;;		 -> I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2Byte
      +Register@reg(1), 
 34621 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), i2c
      +_readDataBlock@reg(2), 
 34622 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg
      +(1), 
 34623 ;;		 -> i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_writeNBytes@dat(
      +17), 
 34624 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34625 ;;  bufferSize      2   17[COMRAM] unsigned int 
 34626 ;; Auto vars:     Size  Location     Type
 34627 ;;		None
 34628 ;; Return value:  Size  Location     Type
 34629 ;;                  1    wreg      void 
 34630 ;; Registers used:
 34631 ;;		wreg, status,2, status,0
 34632 ;; Tracked objects:
 34633 ;;		On entry : 0/2
 34634 ;;		On exit  : 3F/2
 34635 ;;		Unchanged: 0/0
 34636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34637 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34640 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34641 ;;Total ram usage:        4 bytes
 34642 ;; Hardware stack levels used: 1
 34643 ;; Hardware stack levels required when called: 4
 34644 ;; This function calls:
 34645 ;;		Nothing
 34646 ;; This function is called by:
 34647 ;;		_wr1RegCompleteHandler
 34648 ;;		_i2c_writeNBytes
 34649 ;;		_rd1RegCompleteHandler
 34650 ;;		_rd2RegCompleteHandler
 34651 ;;		_wr2RegCompleteHandler
 34652 ;;		_rdBlkRegCompleteHandler
 34653 ;;		_i2c_readDataBlock
 34654 ;;		_I2C1_Read1ByteRegister
 34655 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 34656 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 34657 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 34658 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 34659 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 34660 ;; This function uses a non-reentrant model
 34661 ;;
 34662                           
 34663                           	psect	text179
 34664  009E38                     __ptext179:
 34665                           	callstack 0
 34666  009E38                     _I2C1_SetBuffer:
 34667                           	callstack 21
 34668                           
 34669                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 34670                           
 34671                           ;incstack = 0
 34672  009E38  0102               	movlb	2	; () banked
 34673  009E3A  A75F               	btfss	(_I2C1_Status+35)& (0+255),3,b
 34674  009E3C  0012               	return	
 34675                           
 34676                           ; BSR set to: 2
 34677                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 34678  009E3E  C010  F259         	movff	I2C1_SetBuffer@buffer,_I2C1_Status+29
 34679  009E42  C011  F25A         	movff	I2C1_SetBuffer@buffer+1,_I2C1_Status+30
 34680                           
 34681                           ; BSR set to: 2
 34682                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 34683  009E46  C012  F25B         	movff	I2C1_SetBuffer@bufferSize,_I2C1_Status+31
 34684  009E4A  C013  F25C         	movff	I2C1_SetBuffer@bufferSize+1,_I2C1_Status+32
 34685                           
 34686                           ; BSR set to: 2
 34687                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 34688  009E4E  975F               	bcf	(_I2C1_Status+35)& (0+255),3,b
 34689                           
 34690                           ; BSR set to: 2
 34691  009E50  0012               	return		;funcret
 34692  009E52                     __end_of_I2C1_SetBuffer:
 34693                           	callstack 0
 34694                           
 34695 ;; *************** function _I2C1_MasterStop *****************
 34696 ;; Defined at:
 34697 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 34698 ;; Parameters:    Size  Location     Type
 34699 ;;		None
 34700 ;; Auto vars:     Size  Location     Type
 34701 ;;		None
 34702 ;; Return value:  Size  Location     Type
 34703 ;;                  1    wreg      void 
 34704 ;; Registers used:
 34705 ;;		None
 34706 ;; Tracked objects:
 34707 ;;		On entry : 0/2
 34708 ;;		On exit  : 0/0
 34709 ;;		Unchanged: 0/0
 34710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34715 ;;Total ram usage:        0 bytes
 34716 ;; Hardware stack levels used: 1
 34717 ;; Hardware stack levels required when called: 4
 34718 ;; This function calls:
 34719 ;;		Nothing
 34720 ;; This function is called by:
 34721 ;;		_I2C1_DO_SEND_STOP
 34722 ;; This function uses a non-reentrant model
 34723 ;;
 34724                           
 34725                           	psect	text180
 34726  00A0D4                     __ptext180:
 34727                           	callstack 0
 34728  00A0D4                     _I2C1_MasterStop:
 34729                           	callstack 15
 34730                           
 34731                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 34732                           
 34733                           ; BSR set to: 2
 34734                           ;incstack = 0
 34735  00A0D4  8497               	bsf	151,2,c	;volatile
 34736  00A0D6  0012               	return		;funcret
 34737  00A0D8                     __end_of_I2C1_MasterStop:
 34738                           	callstack 0
 34739                           
 34740 ;; *************** function _I2C1_MasterEnableRestart *****************
 34741 ;; Defined at:
 34742 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 34743 ;; Parameters:    Size  Location     Type
 34744 ;;		None
 34745 ;; Auto vars:     Size  Location     Type
 34746 ;;		None
 34747 ;; Return value:  Size  Location     Type
 34748 ;;                  1    wreg      void 
 34749 ;; Registers used:
 34750 ;;		None
 34751 ;; Tracked objects:
 34752 ;;		On entry : 0/2
 34753 ;;		On exit  : 0/0
 34754 ;;		Unchanged: 0/0
 34755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34760 ;;Total ram usage:        0 bytes
 34761 ;; Hardware stack levels used: 1
 34762 ;; Hardware stack levels required when called: 4
 34763 ;; This function calls:
 34764 ;;		Nothing
 34765 ;; This function is called by:
 34766 ;;		_I2C1_DO_SEND_RESTART_READ
 34767 ;;		_I2C1_DO_SEND_RESTART_WRITE
 34768 ;;		_I2C1_DO_SEND_RESTART
 34769 ;; This function uses a non-reentrant model
 34770 ;;
 34771                           
 34772                           	psect	text181
 34773  00A0D8                     __ptext181:
 34774                           	callstack 0
 34775  00A0D8                     _I2C1_MasterEnableRestart:
 34776                           	callstack 15
 34777                           
 34778                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 34779                           
 34780                           ;incstack = 0
 34781  00A0D8  8297               	bsf	151,1,c	;volatile
 34782  00A0DA  0012               	return		;funcret
 34783  00A0DC                     __end_of_I2C1_MasterEnableRestart:
 34784                           	callstack 0
 34785                           
 34786 ;; *************** function _I2C1_MasterStart *****************
 34787 ;; Defined at:
 34788 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 34789 ;; Parameters:    Size  Location     Type
 34790 ;;		None
 34791 ;; Auto vars:     Size  Location     Type
 34792 ;;		None
 34793 ;; Return value:  Size  Location     Type
 34794 ;;                  1    wreg      void 
 34795 ;; Registers used:
 34796 ;;		None
 34797 ;; Tracked objects:
 34798 ;;		On entry : 3F/2
 34799 ;;		On exit  : 3F/2
 34800 ;;		Unchanged: 3F/0
 34801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34806 ;;Total ram usage:        0 bytes
 34807 ;; Hardware stack levels used: 1
 34808 ;; Hardware stack levels required when called: 4
 34809 ;; This function calls:
 34810 ;;		Nothing
 34811 ;; This function is called by:
 34812 ;;		_I2C1_MasterOperation
 34813 ;; This function uses a non-reentrant model
 34814 ;;
 34815                           
 34816                           	psect	text182
 34817  00A0DC                     __ptext182:
 34818                           	callstack 0
 34819  00A0DC                     _I2C1_MasterStart:
 34820                           	callstack 19
 34821                           
 34822                           ; BSR set to: 2
 34823                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 34824                           
 34825                           ;incstack = 0
 34826  00A0DC  8097               	bsf	151,0,c	;volatile
 34827                           
 34828                           ; BSR set to: 2
 34829  00A0DE  0012               	return		;funcret
 34830  00A0E0                     __end_of_I2C1_MasterStart:
 34831                           	callstack 0
 34832                           
 34833 ;; *************** function _I2C1_Close *****************
 34834 ;; Defined at:
 34835 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 34836 ;; Parameters:    Size  Location     Type
 34837 ;;		None
 34838 ;; Auto vars:     Size  Location     Type
 34839 ;;  returnValue     1   15[COMRAM] enum E355
 34840 ;; Return value:  Size  Location     Type
 34841 ;;                  1    wreg      enum E355
 34842 ;; Registers used:
 34843 ;;		wreg, status,2, cstack
 34844 ;; Tracked objects:
 34845 ;;		On entry : 0/2
 34846 ;;		On exit  : 33/2
 34847 ;;		Unchanged: 0/0
 34848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34850 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34852 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34853 ;;Total ram usage:        1 bytes
 34854 ;; Hardware stack levels used: 1
 34855 ;; Hardware stack levels required when called: 5
 34856 ;; This function calls:
 34857 ;;		_I2C1_MasterClearIrq
 34858 ;;		_I2C1_MasterClose
 34859 ;;		_I2C1_MasterDisableIrq
 34860 ;; This function is called by:
 34861 ;;		_i2c_writeNBytes
 34862 ;;		_i2c_readDataBlock
 34863 ;;		_I2C1_Read1ByteRegister
 34864 ;; This function uses a non-reentrant model
 34865 ;;
 34866                           
 34867                           	psect	text183
 34868  009D1C                     __ptext183:
 34869                           	callstack 0
 34870  009D1C                     _I2C1_Close:
 34871                           	callstack 20
 34872                           
 34873                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 34874                           
 34875                           ; BSR set to: 2
 34876                           ;incstack = 0
 34877  009D1C  0E01               	movlw	1
 34878  009D1E  6E10               	movwf	I2C1_Close@returnValue^0,c
 34879                           
 34880                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 34881  009D20  0102               	movlb	2	; () banked
 34882  009D22  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 34883  009D24  D00A               	goto	l20542
 34884                           
 34885                           ; BSR set to: 2
 34886                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 34887  009D26  955F               	bcf	(_I2C1_Status+35)& (0+255),2,b
 34888                           
 34889                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 34890  009D28  6958               	setf	(_I2C1_Status+28)& (0+255),b
 34891                           
 34892                           ; BSR set to: 2
 34893                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 34894  009D2A  EC55  F050         	call	_I2C1_MasterClearIrq	;wreg free
 34895                           
 34896                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 34897  009D2E  EC70  F050         	call	_I2C1_MasterDisableIrq	;wreg free
 34898                           
 34899                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 34900  009D32  EC72  F050         	call	_I2C1_MasterClose	;wreg free
 34901                           
 34902                           ; BSR set to: 14
 34903                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 34904  009D36  C25E  F010         	movff	_I2C1_Status+34,I2C1_Close@returnValue
 34905  009D3A                     l20542:
 34906                           
 34907                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 34908  009D3A  5010               	movf	I2C1_Close@returnValue^0,w,c
 34909  009D3C  0012               	return		;funcret
 34910  009D3E                     __end_of_I2C1_Close:
 34911                           	callstack 0
 34912                           
 34913 ;; *************** function _I2C1_MasterDisableIrq *****************
 34914 ;; Defined at:
 34915 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 34916 ;; Parameters:    Size  Location     Type
 34917 ;;		None
 34918 ;; Auto vars:     Size  Location     Type
 34919 ;;		None
 34920 ;; Return value:  Size  Location     Type
 34921 ;;                  1    wreg      void 
 34922 ;; Registers used:
 34923 ;;		None
 34924 ;; Tracked objects:
 34925 ;;		On entry : 3F/E
 34926 ;;		On exit  : 3F/E
 34927 ;;		Unchanged: 0/0
 34928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34933 ;;Total ram usage:        0 bytes
 34934 ;; Hardware stack levels used: 1
 34935 ;; Hardware stack levels required when called: 4
 34936 ;; This function calls:
 34937 ;;		Nothing
 34938 ;; This function is called by:
 34939 ;;		_I2C1_Close
 34940 ;; This function uses a non-reentrant model
 34941 ;;
 34942                           
 34943                           	psect	text184
 34944  00A0E0                     __ptext184:
 34945                           	callstack 0
 34946  00A0E0                     _I2C1_MasterDisableIrq:
 34947                           	callstack 20
 34948                           
 34949                           ; BSR set to: 14
 34950                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 34951                           
 34952                           ;incstack = 0
 34953  00A0E0  91C5               	bcf	197,0,b	;volatile
 34954                           
 34955                           ; BSR set to: 14
 34956  00A0E2  0012               	return		;funcret
 34957  00A0E4                     __end_of_I2C1_MasterDisableIrq:
 34958                           	callstack 0
 34959                           
 34960 ;; *************** function _I2C1_MasterClose *****************
 34961 ;; Defined at:
 34962 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 34963 ;; Parameters:    Size  Location     Type
 34964 ;;		None
 34965 ;; Auto vars:     Size  Location     Type
 34966 ;;		None
 34967 ;; Return value:  Size  Location     Type
 34968 ;;                  1    wreg      void 
 34969 ;; Registers used:
 34970 ;;		None
 34971 ;; Tracked objects:
 34972 ;;		On entry : 3F/E
 34973 ;;		On exit  : 3F/E
 34974 ;;		Unchanged: 3F/0
 34975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34980 ;;Total ram usage:        0 bytes
 34981 ;; Hardware stack levels used: 1
 34982 ;; Hardware stack levels required when called: 4
 34983 ;; This function calls:
 34984 ;;		Nothing
 34985 ;; This function is called by:
 34986 ;;		_I2C1_Close
 34987 ;; This function uses a non-reentrant model
 34988 ;;
 34989                           
 34990                           	psect	text185
 34991  00A0E4                     __ptext185:
 34992                           	callstack 0
 34993  00A0E4                     _I2C1_MasterClose:
 34994                           	callstack 20
 34995                           
 34996                           ; BSR set to: 14
 34997                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 34998                           
 34999                           ; BSR set to: 14
 35000                           ;incstack = 0
 35001  00A0E4  9A96               	bcf	150,5,c	;volatile
 35002                           
 35003                           ; BSR set to: 14
 35004  00A0E6  0012               	return		;funcret
 35005  00A0E8                     __end_of_I2C1_MasterClose:
 35006                           	callstack 0
 35007                           
 35008 ;; *************** function _I2C1_MasterClearIrq *****************
 35009 ;; Defined at:
 35010 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 35011 ;; Parameters:    Size  Location     Type
 35012 ;;		None
 35013 ;; Auto vars:     Size  Location     Type
 35014 ;;		None
 35015 ;; Return value:  Size  Location     Type
 35016 ;;                  1    wreg      void 
 35017 ;; Registers used:
 35018 ;;		None
 35019 ;; Tracked objects:
 35020 ;;		On entry : 33/2
 35021 ;;		On exit  : 3F/E
 35022 ;;		Unchanged: 0/0
 35023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35028 ;;Total ram usage:        0 bytes
 35029 ;; Hardware stack levels used: 1
 35030 ;; Hardware stack levels required when called: 4
 35031 ;; This function calls:
 35032 ;;		Nothing
 35033 ;; This function is called by:
 35034 ;;		_I2C1_Open
 35035 ;;		_I2C1_Close
 35036 ;;		_I2C1_MasterFsm
 35037 ;; This function uses a non-reentrant model
 35038 ;;
 35039                           
 35040                           	psect	text186
 35041  00A0AA                     __ptext186:
 35042                           	callstack 0
 35043  00A0AA                     _I2C1_MasterClearIrq:
 35044                           	callstack 20
 35045                           
 35046                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 35047                           
 35048                           ; BSR set to: 14
 35049                           ;incstack = 0
 35050  00A0AA  010E               	movlb	14	; () banked
 35051  00A0AC  91CD               	bcf	205,0,b	;volatile
 35052                           
 35053                           ; BSR set to: 14
 35054  00A0AE  0012               	return		;funcret
 35055  00A0B0                     __end_of_I2C1_MasterClearIrq:
 35056                           	callstack 0
 35057                           
 35058 ;; *************** function _INTERRUPT_InterruptManager *****************
 35059 ;; Defined at:
 35060 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 35061 ;; Parameters:    Size  Location     Type
 35062 ;;		None
 35063 ;; Auto vars:     Size  Location     Type
 35064 ;;		None
 35065 ;; Return value:  Size  Location     Type
 35066 ;;                  1    wreg      void 
 35067 ;; Registers used:
 35068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 35069 ;; Tracked objects:
 35070 ;;		On entry : 0/0
 35071 ;;		On exit  : 0/0
 35072 ;;		Unchanged: 0/0
 35073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35076 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35077 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35078 ;;Total ram usage:        6 bytes
 35079 ;; Hardware stack levels used: 1
 35080 ;; Hardware stack levels required when called: 3
 35081 ;; This function calls:
 35082 ;;		Absolute function
 35083 ;;		_EUSART1_Receive_ISR
 35084 ;;		_EUSART1_Transmit_ISR
 35085 ;;		_TMR0_ISR
 35086 ;;		_TMR1_ISR
 35087 ;;		_TMR2_ISR
 35088 ;; This function is called by:
 35089 ;;		Interrupt level 2
 35090 ;; This function uses a non-reentrant model
 35091 ;;
 35092                           
 35093                           	psect	intcode
 35094  000008                     __pintcode:
 35095                           	callstack 0
 35096  000008                     _INTERRUPT_InterruptManager:
 35097                           	callstack 14
 35098                           
 35099                           ; BSR set to: 14
 35100                           ;incstack = 0
 35101  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 35102  00000A  CFFA F00A          	movff	pclath,??_INTERRUPT_InterruptManager
 35103  00000E  CFFB F00B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 35104  000012  CFD9 F00C          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 35105  000016  CFDA F00D          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 35106  00001A  CFF3 F00E          	movff	prodl,??_INTERRUPT_InterruptManager+4
 35107  00001E  CFF4 F00F          	movff	prodh,??_INTERRUPT_InterruptManager+5
 35108                           
 35109                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 35110  000022  010E               	movlb	14	; () banked
 35111  000024  BBC2               	btfsc	194,5,b	;volatile
 35112                           
 35113                           ; BSR set to: 14
 35114  000026  ABCA               	btfss	202,5,b	;volatile
 35115  000028  D003               	goto	i2l867
 35116                           
 35117                           ; BSR set to: 14
 35118                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 35119  00002A  EC34  F04E         	call	_TMR0_ISR	;wreg free
 35120                           
 35121                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 35122  00002E  D028               	goto	i2l873
 35123  000030                     i2l867:
 35124                           
 35125                           ; BSR set to: 14
 35126  000030  ACF2               	btfss	242,6,c	;volatile
 35127  000032  D026               	goto	i2l873
 35128                           
 35129                           ; BSR set to: 14
 35130                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
 35131  000034  B9C5               	btfsc	197,4,b	;volatile
 35132                           
 35133                           ; BSR set to: 14
 35134  000036  A9CD               	btfss	205,4,b	;volatile
 35135  000038  D009               	goto	i2l870
 35136                           
 35137                           ; BSR set to: 14
 35138                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_TxDefaultInterruptHandler();
 35139  00003A  D801               	call	i2u2316_48
 35140  00003C  D021               	goto	i2l873
 35141  00003E                     i2u2316_48:
 35142  00003E  0005               	push	
 35143  000040  6EFA               	movwf	pclath,c
 35144  000042  0102               	movlb	2	; () banked
 35145  000044  51ED               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 35146  000046  6EFD               	movwf	tosl,c
 35147  000048  51EE               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 35148  00004A  D00B               	goto	L114
 35149  00004C                     i2l870:
 35150                           
 35151                           ; BSR set to: 14
 35152  00004C  BBC5               	btfsc	197,5,b	;volatile
 35153                           
 35154                           ; BSR set to: 14
 35155  00004E  ABCD               	btfss	205,5,b	;volatile
 35156  000050  D00C               	goto	i2l872
 35157                           
 35158                           ; BSR set to: 14
 35159                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_RxDefaultInterruptHandler();
 35160  000052  D801               	call	i2u2319_48
 35161  000054  D015               	goto	i2l873
 35162  000056                     i2u2319_48:
 35163  000056  0005               	push	
 35164  000058  6EFA               	movwf	pclath,c
 35165  00005A  0102               	movlb	2	; () banked
 35166  00005C  51EB               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 35167  00005E  6EFD               	movwf	tosl,c
 35168  000060  51EC               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 35169  000062                     L114:
 35170  000062  6EFE               	movwf	tosh,c
 35171  000064  6AFF               	clrf	tosu,c
 35172  000066  50FA               	movf	pclath,w,c
 35173  000068  0012               	return		;indir
 35174  00006A                     i2l872:
 35175                           
 35176                           ; BSR set to: 14
 35177  00006A  B1C6               	btfsc	198,0,b	;volatile
 35178                           
 35179                           ; BSR set to: 14
 35180  00006C  A1CE               	btfss	206,0,b	;volatile
 35181  00006E  D003               	goto	i2l874
 35182                           
 35183                           ; BSR set to: 14
 35184                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR1_ISR();
 35185  000070  ECAA  F04B         	call	_TMR1_ISR	;wreg free
 35186                           
 35187                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 35188  000074  D005               	goto	i2l873
 35189  000076                     i2l874:
 35190                           
 35191                           ; BSR set to: 14
 35192  000076  B3C6               	btfsc	198,1,b	;volatile
 35193                           
 35194                           ; BSR set to: 14
 35195  000078  A3CE               	btfss	206,1,b	;volatile
 35196  00007A  D002               	goto	i2l873
 35197                           
 35198                           ; BSR set to: 14
 35199                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             TMR2_ISR();
 35200  00007C  ECC2  F036         	call	_TMR2_ISR	;wreg free
 35201  000080                     i2l873:
 35202                           
 35203                           ; BSR set to: 14
 35204  000080  C00F  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
 35205  000084  C00E  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
 35206  000088  C00D  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 35207  00008C  C00C  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 35208  000090  C00B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 35209  000094  C00A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 35210  000098  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 35211  00009A  0011               	retfie		f
 35212  00009C                     __end_of_INTERRUPT_InterruptManager:
 35213                           	callstack 0
 35214                           
 35215 ;; *************** function _TMR2_ISR *****************
 35216 ;; Defined at:
 35217 ;;		line 180 in file "mcc_generated_files/tmr2.c"
 35218 ;; Parameters:    Size  Location     Type
 35219 ;;		None
 35220 ;; Auto vars:     Size  Location     Type
 35221 ;;		None
 35222 ;; Return value:  Size  Location     Type
 35223 ;;                  1    wreg      void 
 35224 ;; Registers used:
 35225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 35226 ;; Tracked objects:
 35227 ;;		On entry : 3F/E
 35228 ;;		On exit  : 0/0
 35229 ;;		Unchanged: 0/0
 35230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35235 ;;Total ram usage:        0 bytes
 35236 ;; Hardware stack levels used: 1
 35237 ;; Hardware stack levels required when called: 2
 35238 ;; This function calls:
 35239 ;;		Absolute function
 35240 ;;		_ReadADC
 35241 ;;		_TMR2_DefaultInterruptHandler
 35242 ;;		_controlTimeslots
 35243 ;;		_refreshSegment
 35244 ;; This function is called by:
 35245 ;;		_INTERRUPT_InterruptManager
 35246 ;; This function uses a non-reentrant model
 35247 ;;
 35248                           
 35249                           	psect	text188
 35250  006D84                     __ptext188:
 35251                           	callstack 0
 35252  006D84                     _TMR2_ISR:
 35253                           	callstack 14
 35254                           
 35255                           ; BSR set to: 14
 35256                           ;mcc_generated_files/tmr2.c: 184:     PIR4bits.TMR2IF = 0;
 35257                           
 35258                           ;incstack = 0
 35259  006D84  93CE               	bcf	206,1,b	;volatile
 35260                           
 35261                           ; BSR set to: 14
 35262                           ;mcc_generated_files/tmr2.c: 188:                 ReadADC();
 35263  006D86  EC5D  F049         	call	_ReadADC	;wreg free
 35264                           
 35265                           ;mcc_generated_files/tmr2.c: 191:             refreshSegment();
 35266  006D8A  ECC6  F042         	call	_refreshSegment	;wreg free
 35267                           
 35268                           ;mcc_generated_files/tmr2.c: 193:             if(ts_system.ts_TimeSlotMain>0)
 35269  006D8E  0101               	movlb	1	; () banked
 35270  006D90  51A1               	movf	(_ts_system+3)& (0+255),w,b	;volatile
 35271  006D92  A4D8               	btfss	status,2,c
 35272                           
 35273                           ; BSR set to: 1
 35274                           ;mcc_generated_files/tmr2.c: 194:                 {;mcc_generated_files/tmr2.c: 195:    
      +                                       ts_system.ts_TimeSlotMain--;
 35275  006D94  07A1               	decf	(_ts_system+3)& (0+255),f,b	;volatile
 35276                           
 35277                           ; BSR set to: 1
 35278                           ;mcc_generated_files/tmr2.c: 198:             if (ts_system.ts_TimeSlot50ms > 0)
 35279  006D96  519F               	movf	(_ts_system+1)& (0+255),w,b	;volatile
 35280  006D98  B4D8               	btfsc	status,2,c
 35281  006D9A  D002               	goto	i2l17062
 35282                           
 35283                           ; BSR set to: 1
 35284                           ;mcc_generated_files/tmr2.c: 199:                 {;mcc_generated_files/tmr2.c: 200:    
      +                                       ts_system.ts_TimeSlot50ms--;
 35285  006D9C  079F               	decf	(_ts_system+1)& (0+255),f,b	;volatile
 35286                           
 35287                           ;mcc_generated_files/tmr2.c: 201:                 }
 35288  006D9E  D089               	goto	i2l17134
 35289  006DA0                     i2l17062:
 35290                           
 35291                           ; BSR set to: 1
 35292                           ;mcc_generated_files/tmr2.c: 203:                 {;mcc_generated_files/tmr2.c: 204:    
      +                                       ts_system.ts_TimeSlot50ms = 50;
 35293  006DA0  0E32               	movlw	50
 35294  006DA2  6F9F               	movwf	(_ts_system+1)& (0+255),b	;volatile
 35295                           
 35296                           ; BSR set to: 1
 35297                           ;mcc_generated_files/tmr2.c: 208:                     controlTimeslots();
 35298  006DA4  ECE7  F032         	call	_controlTimeslots	;wreg free
 35299                           
 35300                           ; BSR set to: 1
 35301                           ;mcc_generated_files/tmr2.c: 210:                       if (Counterchoose == 0)
 35302  006DA8  0100               	movlb	0	; () banked
 35303  006DAA  5192               	movf	_Counterchoose& (0+255),w,b
 35304  006DAC  A4D8               	btfss	status,2,c
 35305  006DAE  D002               	goto	i2l17070
 35306                           
 35307                           ; BSR set to: 0
 35308                           ;mcc_generated_files/tmr2.c: 211:                                {;mcc_generated_files/t
      +                          mr2.c: 212:                                    Counterchoose = 1;
 35309  006DB0  0E01               	movlw	1
 35310  006DB2  D001               	goto	L115
 35311  006DB4                     i2l17070:
 35312                           
 35313                           ; BSR set to: 0
 35314                           ;mcc_generated_files/tmr2.c: 215:                                {;mcc_generated_files/t
      +                          mr2.c: 216:                                    Counterchoose = 0;
 35315  006DB4  0E00               	movlw	0
 35316  006DB6                     L115:
 35317  006DB6  6F92               	movwf	_Counterchoose& (0+255),b
 35318                           
 35319                           ; BSR set to: 0
 35320                           ;mcc_generated_files/tmr2.c: 218:                            if (var_sys.LearningIsEnabl
      +                          ed==NO)
 35321                           
 35322                           ;mcc_generated_files/tmr2.c: 217:                                }
 35323  006DB8  0101               	movlb	1	; () banked
 35324  006DBA  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 35325  006DBC  A4D8               	btfss	status,2,c
 35326  006DBE  D034               	goto	i2l17096
 35327                           
 35328                           ; BSR set to: 1
 35329                           ;mcc_generated_files/tmr2.c: 219:                            {;mcc_generated_files/tmr2.
      +                          c: 222:                                if (var_sys.TimeMaxMotorIsON > 0 && var_sys.Activ
      +                          atecounter != stoped)
 35330  006DC0  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 35331  006DC2  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 35332  006DC4  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 35333  006DC6  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 35334  006DC8  B4D8               	btfsc	status,2,c
 35335  006DCA  D008               	goto	i2l1266
 35336                           
 35337                           ; BSR set to: 1
 35338  006DCC  5116               	movf	(_var_sys+22)& (0+255),w,b	;volatile
 35339  006DCE  B4D8               	btfsc	status,2,c
 35340  006DD0  D005               	goto	i2l1266
 35341                           
 35342                           ; BSR set to: 1
 35343                           ;mcc_generated_files/tmr2.c: 223:                                {;mcc_generated_files/t
      +                          mr2.c: 225:                                     var_sys.TimeMaxMotorIsON--;
 35344  006DD2  0718               	decf	(_var_sys+24)& (0+255),f,b	;volatile
 35345  006DD4  0E00               	movlw	0
 35346  006DD6  5B19               	subwfb	(_var_sys+25)& (0+255),f,b	;volatile
 35347  006DD8  5B1A               	subwfb	(_var_sys+26)& (0+255),f,b	;volatile
 35348  006DDA  5B1B               	subwfb	(_var_sys+27)& (0+255),f,b	;volatile
 35349  006DDC                     i2l1266:
 35350                           
 35351                           ; BSR set to: 1
 35352                           ;mcc_generated_files/tmr2.c: 230:                                if (var_sys.Activatecou
      +                          nter == open)
 35353  006DDC  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 35354  006DDE  A4D8               	btfss	status,2,c
 35355  006DE0  D00E               	goto	i2l17086
 35356                           
 35357                           ; BSR set to: 1
 35358                           ;mcc_generated_files/tmr2.c: 231:                                {;mcc_generated_files/t
      +                          mr2.c: 232:                                    {;mcc_generated_files/tmr2.c: 234:       
      +                                                            if (powerControl_st.decelarationActive==YES)
 35359  006DE2  057B               	decf	_powerControl_st& (0+255),w,b
 35360  006DE4  A4D8               	btfss	status,2,c
 35361  006DE6  D004               	goto	i2u1929_40
 35362                           
 35363                           ; BSR set to: 1
 35364                           ;mcc_generated_files/tmr2.c: 235:                                         {;mcc_generate
      +                          d_files/tmr2.c: 236:                                             if(Counterchoose ==1){
 35365  006DE8  0100               	movlb	0	; () banked
 35366  006DEA  0592               	decf	_Counterchoose& (0+255),w,b
 35367  006DEC  A4D8               	btfss	status,2,c
 35368  006DEE  D061               	goto	i2l17134
 35369  006DF0                     i2u1929_40:
 35370                           
 35371                           ;mcc_generated_files/tmr2.c: 237:                                               var_sys.
      +                          PositionActual++;
 35372  006DF0  0E01               	movlw	1
 35373  006DF2  0101               	movlb	1	; () banked
 35374  006DF4  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 35375  006DF6  0E00               	movlw	0
 35376  006DF8  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 35377  006DFA  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 35378  006DFC  D013               	goto	L116
 35379  006DFE                     i2l17086:
 35380                           
 35381                           ; BSR set to: 1
 35382  006DFE  0E02               	movlw	2
 35383  006E00  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 35384  006E02  A4D8               	btfss	status,2,c
 35385  006E04  D056               	goto	i2l17134
 35386                           
 35387                           ; BSR set to: 1
 35388                           ;mcc_generated_files/tmr2.c: 250:                                {;mcc_generated_files/t
      +                          mr2.c: 251:                                        if (powerControl_st.decelarationActiv
      +                          e==YES)
 35389  006E06  057B               	decf	_powerControl_st& (0+255),w,b
 35390  006E08  A4D8               	btfss	status,2,c
 35391  006E0A  D004               	goto	i2u1932_40
 35392                           
 35393                           ; BSR set to: 1
 35394                           ;mcc_generated_files/tmr2.c: 252:                                         {;mcc_generate
      +                          d_files/tmr2.c: 253:                                             if(Counterchoose ==1){
 35395  006E0C  0100               	movlb	0	; () banked
 35396  006E0E  0592               	decf	_Counterchoose& (0+255),w,b
 35397  006E10  A4D8               	btfss	status,2,c
 35398  006E12  D04F               	goto	i2l17134
 35399  006E14                     i2u1932_40:
 35400                           
 35401                           ;mcc_generated_files/tmr2.c: 254:                                               var_sys.
      +                          PositionActual--;
 35402  006E14  0EFF               	movlw	255
 35403  006E16  0101               	movlb	1	; () banked
 35404  006E18  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 35405  006E1A  0EFF               	movlw	255
 35406  006E1C  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 35407  006E1E  0EFF               	movlw	255
 35408  006E20  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 35409  006E22  0EFF               	movlw	255
 35410  006E24                     L116:
 35411  006E24  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 35412                           
 35413                           ;mcc_generated_files/tmr2.c: 263:                            }
 35414  006E26  D045               	goto	i2l17134
 35415  006E28                     i2l17096:
 35416                           
 35417                           ; BSR set to: 1
 35418                           ;mcc_generated_files/tmr2.c: 266:                            {;mcc_generated_files/tmr2.
      +                          c: 267:                                if (var_sys.Counter_Learning ==1)
 35419  006E28  0517               	decf	(_var_sys+23)& (0+255),w,b	;volatile
 35420  006E2A  A4D8               	btfss	status,2,c
 35421  006E2C  D01C               	goto	i2l1277
 35422                           
 35423                           ; BSR set to: 1
 35424                           ;mcc_generated_files/tmr2.c: 268:                                {;mcc_generated_files/t
      +                          mr2.c: 270:                                     if (var_sys.Activatecounter == open)
 35425  006E2E  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 35426  006E30  A4D8               	btfss	status,2,c
 35427  006E32  D00B               	goto	i2l17106
 35428                           
 35429                           ; BSR set to: 1
 35430                           ;mcc_generated_files/tmr2.c: 271:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 273:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 35431  006E34  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 35432  006E36  B4D8               	btfsc	status,2,c
 35433  006E38  D016               	goto	i2l1277
 35434                           
 35435                           ; BSR set to: 1
 35436                           ;mcc_generated_files/tmr2.c: 282:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 283:                                              learn_st.timeOpen++
      +                          ;
 35437  006E3A  0E01               	movlw	1
 35438  006E3C  0100               	movlb	0	; () banked
 35439  006E3E  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 35440  006E40  0E00               	movlw	0
 35441  006E42  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 35442  006E44  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 35443  006E46  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 35444  006E48  D00E               	goto	i2l1277
 35445  006E4A                     i2l17106:
 35446                           
 35447                           ; BSR set to: 1
 35448  006E4A  0E02               	movlw	2
 35449  006E4C  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 35450  006E4E  A4D8               	btfss	status,2,c
 35451  006E50  D00A               	goto	i2l1277
 35452                           
 35453                           ; BSR set to: 1
 35454                           ;mcc_generated_files/tmr2.c: 287:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 289:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 35455  006E52  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 35456  006E54  B4D8               	btfsc	status,2,c
 35457  006E56  D007               	goto	i2l1277
 35458                           
 35459                           ; BSR set to: 1
 35460                           ;mcc_generated_files/tmr2.c: 297:                                             {;mcc_gene
      +                          rated_files/tmr2.c: 298:                                                learn_st.timeClo
      +                          se++;
 35461  006E58  0E01               	movlw	1
 35462  006E5A  0100               	movlb	0	; () banked
 35463  006E5C  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 35464  006E5E  0E00               	movlw	0
 35465  006E60  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 35466  006E62  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 35467  006E64  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 35468  006E66                     i2l1277:
 35469                           
 35470                           ;mcc_generated_files/tmr2.c: 304:                                 if (var_sys.LearningDe
      +                          celaration ==1 && var_sys.programinAutomatic == 1)
 35471  006E66  0101               	movlb	1	; () banked
 35472  006E68  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 35473  006E6A  A4D8               	btfss	status,2,c
 35474  006E6C  D022               	goto	i2l17134
 35475                           
 35476                           ; BSR set to: 1
 35477  006E6E  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 35478  006E70  A4D8               	btfss	status,2,c
 35479  006E72  D01F               	goto	i2l17134
 35480                           
 35481                           ; BSR set to: 1
 35482                           ;mcc_generated_files/tmr2.c: 305:                                 {;mcc_generated_files/
      +                          tmr2.c: 308:                                        if ( ts_system.ts_TimeSlot500ms > 0)
 35483  006E74  519E               	movf	_ts_system& (0+255),w,b	;volatile
 35484  006E76  B4D8               	btfsc	status,2,c
 35485  006E78  D002               	goto	i2l17120
 35486                           
 35487                           ; BSR set to: 1
 35488                           ;mcc_generated_files/tmr2.c: 309:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 310:                                                ts_system.ts_Time
      +                          Slot500ms--;
 35489  006E7A  079E               	decf	_ts_system& (0+255),f,b	;volatile
 35490                           
 35491                           ;mcc_generated_files/tmr2.c: 311:                                            }
 35492  006E7C  D01A               	goto	i2l17134
 35493  006E7E                     i2l17120:
 35494                           
 35495                           ; BSR set to: 1
 35496                           ;mcc_generated_files/tmr2.c: 314:                                          {;mcc_generat
      +                          ed_files/tmr2.c: 315:                                             ts_system.ts_TimeSlot5
      +                          00ms = 10;
 35497  006E7E  0E0A               	movlw	10
 35498  006E80  6F9E               	movwf	_ts_system& (0+255),b	;volatile
 35499                           
 35500                           ; BSR set to: 1
 35501                           ;mcc_generated_files/tmr2.c: 317:                                             if ( var_s
      +                          ys.Activatecounter ==open )
 35502  006E82  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 35503  006E84  A4D8               	btfss	status,2,c
 35504  006E86  D009               	goto	i2l17128
 35505                           
 35506                           ; BSR set to: 1
 35507                           ;mcc_generated_files/tmr2.c: 318:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 319:                                                  learn_st.ti
      +                          meDecelerationOpen++;
 35508  006E88  0100               	movlb	0	; () banked
 35509  006E8A  2B69               	incf	(_learn_st+9)& (0+255),f,b	;volatile
 35510                           
 35511                           ; BSR set to: 0
 35512                           ;mcc_generated_files/tmr2.c: 320:                                                  learn
      +                          _st.timeOpen++;
 35513  006E8C  0E01               	movlw	1
 35514  006E8E  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 35515  006E90  0E00               	movlw	0
 35516  006E92  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 35517  006E94  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 35518  006E96  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 35519                           
 35520                           ;mcc_generated_files/tmr2.c: 322:                                                }
 35521  006E98  D00C               	goto	i2l17134
 35522  006E9A                     i2l17128:
 35523                           
 35524                           ; BSR set to: 1
 35525  006E9A  0E02               	movlw	2
 35526  006E9C  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 35527  006E9E  A4D8               	btfss	status,2,c
 35528  006EA0  D008               	goto	i2l17134
 35529                           
 35530                           ; BSR set to: 1
 35531                           ;mcc_generated_files/tmr2.c: 325:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 326:                                                  learn_st.ti
      +                          meDecelerationClose++;
 35532  006EA2  0100               	movlb	0	; () banked
 35533  006EA4  2B68               	incf	(_learn_st+8)& (0+255),f,b	;volatile
 35534                           
 35535                           ; BSR set to: 0
 35536                           ;mcc_generated_files/tmr2.c: 327:                                                  learn
      +                          _st.timeClose++;
 35537  006EA6  0E01               	movlw	1
 35538  006EA8  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 35539  006EAA  0E00               	movlw	0
 35540  006EAC  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 35541  006EAE  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 35542  006EB0  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 35543  006EB2                     i2l17134:
 35544                           
 35545                           ;mcc_generated_files/tmr2.c: 335:     if(TMR2_InterruptHandler)
 35546  006EB2  0102               	movlb	2	; () banked
 35547  006EB4  51DD               	movf	_TMR2_InterruptHandler& (0+255),w,b
 35548  006EB6  11DE               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 35549  006EB8  B4D8               	btfsc	status,2,c
 35550  006EBA  0012               	return	
 35551                           
 35552                           ; BSR set to: 2
 35553                           ;mcc_generated_files/tmr2.c: 336:     {;mcc_generated_files/tmr2.c: 337:         TMR2_In
      +                          terruptHandler();
 35554  006EBC  D801               	call	i2u1944_48
 35555  006EBE  0012               	return	
 35556  006EC0                     i2u1944_48:
 35557  006EC0  0005               	push	
 35558  006EC2  6EFA               	movwf	pclath,c
 35559  006EC4  51DD               	movf	_TMR2_InterruptHandler& (0+255),w,b
 35560  006EC6  6EFD               	movwf	tosl,c
 35561  006EC8  51DE               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 35562  006ECA  6EFE               	movwf	tosh,c
 35563  006ECC  6AFF               	clrf	tosu,c
 35564  006ECE  50FA               	movf	pclath,w,c
 35565  006ED0  0012               	return		;indir
 35566  006ED2                     __end_of_TMR2_ISR:
 35567                           	callstack 0
 35568                           
 35569 ;; *************** function _refreshSegment *****************
 35570 ;; Defined at:
 35571 ;;		line 50 in file "outputs_MC50.c"
 35572 ;; Parameters:    Size  Location     Type
 35573 ;;		None
 35574 ;; Auto vars:     Size  Location     Type
 35575 ;;		None
 35576 ;; Return value:  Size  Location     Type
 35577 ;;                  1    wreg      void 
 35578 ;; Registers used:
 35579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35580 ;; Tracked objects:
 35581 ;;		On entry : 31/E
 35582 ;;		On exit  : 3E/0
 35583 ;;		Unchanged: 0/0
 35584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35589 ;;Total ram usage:        0 bytes
 35590 ;; Hardware stack levels used: 1
 35591 ;; Hardware stack levels required when called: 1
 35592 ;; This function calls:
 35593 ;;		_Segments_Set
 35594 ;; This function is called by:
 35595 ;;		_TMR2_ISR
 35596 ;; This function uses a non-reentrant model
 35597 ;;
 35598                           
 35599                           	psect	text189
 35600  00858C                     __ptext189:
 35601                           	callstack 0
 35602  00858C                     _refreshSegment:
 35603                           	callstack 14
 35604                           
 35605                           ;outputs_MC50.c: 54:     if (dispStruct.intermitentFreq==0||dispStruct.upFase==1)
 35606                           
 35607                           ;incstack = 0
 35608  00858C  0100               	movlb	0	; () banked
 35609  00858E  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 35610  008590  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 35611  008592  B4D8               	btfsc	status,2,c
 35612  008594  D003               	goto	i2u1554_40
 35613                           
 35614                           ; BSR set to: 0
 35615  008596  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 35616  008598  A4D8               	btfss	status,2,c
 35617  00859A  D01F               	goto	i2l2133
 35618  00859C                     i2u1554_40:
 35619                           
 35620                           ; BSR set to: 0
 35621                           ;outputs_MC50.c: 55:     {;outputs_MC50.c: 56:         if (dispStruct.lastDisplay==disp2
      +                          _e)
 35622  00859C  0574               	decf	(_dispStruct+2)& (0+255),w,b	;volatile
 35623  00859E  A4D8               	btfss	status,2,c
 35624  0085A0  D00D               	goto	i2l2128
 35625                           
 35626                           ; BSR set to: 0
 35627                           
 35628                           ;outputs_MC50.c: 57:         {;outputs_MC50.c: 58:             do { LATCbits.LATC0 = 0; 
      +                          } while(0);
 35629  0085A2  9085               	bcf	133,0,c	;volatile
 35630                           
 35631                           ; BSR set to: 0
 35632                           ;outputs_MC50.c: 59:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play1]);
 35633  0085A4  0ED2               	movlw	low _DispTable
 35634  0085A6  2572               	addwf	_dispStruct& (0+255),w,b	;volatile
 35635  0085A8  6ED9               	movwf	fsr2l,c
 35636  0085AA  6ADA               	clrf	fsr2h,c
 35637  0085AC  0E03               	movlw	high _DispTable
 35638  0085AE  22DA               	addwfc	fsr2h,f,c
 35639  0085B0  50DF               	movf	indf2,w,c
 35640  0085B2  ECD9  F04F         	call	_Segments_Set
 35641  0085B6  8285               	bsf	133,1,c	;volatile
 35642                           
 35643                           ;outputs_MC50.c: 61:             dispStruct.lastDisplay=disp1_e;
 35644  0085B8  0E00               	movlw	0
 35645  0085BA  D00C               	goto	L117
 35646  0085BC                     i2l2128:
 35647                           
 35648                           ; BSR set to: 0
 35649  0085BC  9285               	bcf	133,1,c	;volatile
 35650                           
 35651                           ; BSR set to: 0
 35652                           ;outputs_MC50.c: 66:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play2]);
 35653  0085BE  0ED2               	movlw	low _DispTable
 35654  0085C0  2573               	addwf	(_dispStruct+1)& (0+255),w,b	;volatile
 35655  0085C2  6ED9               	movwf	fsr2l,c
 35656  0085C4  6ADA               	clrf	fsr2h,c
 35657  0085C6  0E03               	movlw	high _DispTable
 35658  0085C8  22DA               	addwfc	fsr2h,f,c
 35659  0085CA  50DF               	movf	indf2,w,c
 35660  0085CC  ECD9  F04F         	call	_Segments_Set
 35661  0085D0  8085               	bsf	133,0,c	;volatile
 35662                           
 35663                           ;outputs_MC50.c: 68:             dispStruct.lastDisplay=disp2_e;
 35664  0085D2  0E01               	movlw	1
 35665  0085D4                     L117:
 35666  0085D4  0100               	movlb	0	; () banked
 35667  0085D6  6F74               	movwf	(_dispStruct+2)& (0+255),b	;volatile
 35668  0085D8  D002               	goto	i2l15262
 35669  0085DA                     i2l2133:
 35670                           
 35671                           ; BSR set to: 0
 35672  0085DA  9085               	bcf	133,0,c	;volatile
 35673                           
 35674                           ; BSR set to: 0
 35675                           
 35676                           ;outputs_MC50.c: 75:         do { LATCbits.LATC1 = 0; } while(0);
 35677  0085DC  9285               	bcf	133,1,c	;volatile
 35678  0085DE                     i2l15262:
 35679                           
 35680                           ; BSR set to: 0
 35681                           ;outputs_MC50.c: 79:     if(ts_system.timeFreqDigit<=0 && dispStruct.intermitentFreq!=0)
 35682  0085DE  0101               	movlb	1	; () banked
 35683  0085E0  BFA9               	btfsc	(_ts_system+11)& (0+255),7,b	;volatile
 35684  0085E2  D005               	goto	i2u1556_40
 35685  0085E4  51A9               	movf	(_ts_system+11)& (0+255),w,b	;volatile
 35686  0085E6  E114               	bnz	i2l2140
 35687  0085E8  05A8               	decf	(_ts_system+10)& (0+255),w,b	;volatile
 35688  0085EA  B0D8               	btfsc	status,0,c
 35689  0085EC  0012               	return	
 35690  0085EE                     i2u1556_40:
 35691                           
 35692                           ; BSR set to: 1
 35693  0085EE  0100               	movlb	0	; () banked
 35694  0085F0  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 35695  0085F2  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 35696  0085F4  B4D8               	btfsc	status,2,c
 35697  0085F6  0012               	return	
 35698                           
 35699                           ; BSR set to: 0
 35700                           ;outputs_MC50.c: 80:     {;outputs_MC50.c: 81:         ts_system.timeFreqDigit=dispStruc
      +                          t.intermitentFreq;
 35701  0085F8  C075  F1A8         	movff	_dispStruct+3,_ts_system+10	;volatile
 35702  0085FC  C076  F1A9         	movff	_dispStruct+4,_ts_system+11	;volatile
 35703                           
 35704                           ; BSR set to: 0
 35705                           ;outputs_MC50.c: 82:         if(dispStruct.upFase==1)
 35706  008600  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 35707  008602  A4D8               	btfss	status,2,c
 35708  008604  D003               	goto	i2l15272
 35709                           
 35710                           ; BSR set to: 0
 35711                           ;outputs_MC50.c: 83:         {;outputs_MC50.c: 84:             dispStruct.upFase = 0;
 35712  008606  0E00               	movlw	0
 35713  008608  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 35714                           
 35715                           ;outputs_MC50.c: 85:         }
 35716  00860A  0012               	return	
 35717  00860C                     i2l15272:
 35718                           
 35719                           ; BSR set to: 0
 35720                           ;outputs_MC50.c: 87:         {;outputs_MC50.c: 88:             dispStruct.upFase = 1;
 35721  00860C  0E01               	movlw	1
 35722  00860E  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 35723  008610                     i2l2140:
 35724  008610  0012               	return		;funcret
 35725  008612                     __end_of_refreshSegment:
 35726                           	callstack 0
 35727                           
 35728 ;; *************** function _Segments_Set *****************
 35729 ;; Defined at:
 35730 ;;		line 93 in file "outputs_MC50.c"
 35731 ;; Parameters:    Size  Location     Type
 35732 ;;  value           1    wreg     unsigned char 
 35733 ;; Auto vars:     Size  Location     Type
 35734 ;;  value           1    0[COMRAM] unsigned char 
 35735 ;; Return value:  Size  Location     Type
 35736 ;;                  1    wreg      void 
 35737 ;; Registers used:
 35738 ;;		wreg, status,2, status,0
 35739 ;; Tracked objects:
 35740 ;;		On entry : 3F/0
 35741 ;;		On exit  : 0/0
 35742 ;;		Unchanged: 0/0
 35743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35745 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35747 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35748 ;;Total ram usage:        1 bytes
 35749 ;; Hardware stack levels used: 1
 35750 ;; This function calls:
 35751 ;;		Nothing
 35752 ;; This function is called by:
 35753 ;;		_refreshSegment
 35754 ;; This function uses a non-reentrant model
 35755 ;;
 35756                           
 35757                           	psect	text190
 35758  009FB2                     __ptext190:
 35759                           	callstack 0
 35760  009FB2                     _Segments_Set:
 35761                           	callstack 14
 35762                           
 35763                           ;incstack = 0
 35764                           ;Segments_Set@value stored from wreg
 35765  009FB2  6E01               	movwf	Segments_Set@value^0,c
 35766                           
 35767                           ;outputs_MC50.c: 93: void Segments_Set(char value);outputs_MC50.c: 94: {;outputs_MC50.c:
      +                           95:    LATD &= 0x80;
 35768  009FB4  0E80               	movlw	128
 35769  009FB6  1686               	andwf	134,f,c	;volatile
 35770                           
 35771                           ;outputs_MC50.c: 96:    LATD |= value;
 35772  009FB8  5001               	movf	Segments_Set@value^0,w,c	;volatile
 35773  009FBA  1286               	iorwf	134,f,c	;volatile
 35774  009FBC  0012               	return		;funcret
 35775  009FBE                     __end_of_Segments_Set:
 35776                           	callstack 0
 35777                           
 35778 ;; *************** function _controlTimeslots *****************
 35779 ;; Defined at:
 35780 ;;		line 190 in file "main_MC50.c"
 35781 ;; Parameters:    Size  Location     Type
 35782 ;;		None
 35783 ;; Auto vars:     Size  Location     Type
 35784 ;;		None
 35785 ;; Return value:  Size  Location     Type
 35786 ;;                  1    wreg      void 
 35787 ;; Registers used:
 35788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35789 ;; Tracked objects:
 35790 ;;		On entry : 3F/1
 35791 ;;		On exit  : 3F/1
 35792 ;;		Unchanged: 0/0
 35793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35798 ;;Total ram usage:        0 bytes
 35799 ;; Hardware stack levels used: 1
 35800 ;; Hardware stack levels required when called: 1
 35801 ;; This function calls:
 35802 ;;		_decrementTimeslot
 35803 ;; This function is called by:
 35804 ;;		_TMR2_ISR
 35805 ;; This function uses a non-reentrant model
 35806 ;;
 35807                           
 35808                           	psect	text191
 35809  0065CE                     __ptext191:
 35810                           	callstack 0
 35811  0065CE                     _controlTimeslots:
 35812                           	callstack 14
 35813                           
 35814                           ; BSR set to: 1
 35815                           ;main_MC50.c: 192:  decrementTimeslot((int*)&ts_system.Debug_TS);
 35816                           
 35817                           ;incstack = 0
 35818  0065CE  0EA6               	movlw	low (_ts_system+8)
 35819  0065D0  6E01               	movwf	decrementTimeslot@ts^0,c
 35820  0065D2  0E01               	movlw	high (_ts_system+8)
 35821  0065D4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35822  0065D6  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 35823                           
 35824                           ;main_MC50.c: 193:     decrementTimeslot((int*)&ts_system.timewaitFlashRGB);
 35825  0065DA  0EE4               	movlw	low (_ts_system+70)
 35826  0065DC  6E01               	movwf	decrementTimeslot@ts^0,c
 35827  0065DE  0E01               	movlw	high (_ts_system+70)
 35828  0065E0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35829  0065E2  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 35830                           
 35831                           ;main_MC50.c: 194:     decrementTimeslot((int*)&ts_system.timeFreqDigit);
 35832  0065E6  0EA8               	movlw	low (_ts_system+10)
 35833  0065E8  6E01               	movwf	decrementTimeslot@ts^0,c
 35834  0065EA  0E01               	movlw	high (_ts_system+10)
 35835  0065EC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35836  0065EE  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 35837                           
 35838                           ;main_MC50.c: 195:     decrementTimeslot((int*)&ts_system.timeSinalizationDigit);
 35839  0065F2  0EAA               	movlw	low (_ts_system+12)
 35840  0065F4  6E01               	movwf	decrementTimeslot@ts^0,c
 35841  0065F6  0E01               	movlw	high (_ts_system+12)
 35842  0065F8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35843  0065FA  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 35844                           
 35845                           ;main_MC50.c: 196:     decrementTimeslot((int*)&ts_system.timeoutMenu);
 35846  0065FE  0EAC               	movlw	low (_ts_system+14)
 35847  006600  6E01               	movwf	decrementTimeslot@ts^0,c
 35848  006602  0E01               	movlw	high (_ts_system+14)
 35849  006604  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35850  006606  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 35851                           
 35852                           ;main_MC50.c: 197:     decrementTimeslot((int*)&ts_system.timeOpenWalk);
 35853  00660A  0EAE               	movlw	low (_ts_system+16)
 35854  00660C  6E01               	movwf	decrementTimeslot@ts^0,c
 35855  00660E  0E01               	movlw	high (_ts_system+16)
 35856  006610  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35857  006612  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 35858                           
 35859                           ;main_MC50.c: 198:     decrementTimeslot((int*)&ts_system.timeWaitToClose);
 35860  006616  0EB0               	movlw	low (_ts_system+18)
 35861  006618  6E01               	movwf	decrementTimeslot@ts^0,c
 35862  00661A  0E01               	movlw	high (_ts_system+18)
 35863  00661C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35864  00661E  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 35865                           
 35866                           ;main_MC50.c: 199:     decrementTimeslot((int*)&ts_system.TimeLastCommand);
 35867  006622  0EB2               	movlw	low (_ts_system+20)
 35868  006624  6E01               	movwf	decrementTimeslot@ts^0,c
 35869  006626  0E01               	movlw	high (_ts_system+20)
 35870  006628  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35871  00662A  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 35872                           
 35873                           ;main_MC50.c: 200:     decrementTimeslot((int*)&ts_system.timeSoftStart);
 35874  00662E  0EB4               	movlw	low (_ts_system+22)
 35875  006630  6E01               	movwf	decrementTimeslot@ts^0,c
 35876  006632  0E01               	movlw	high (_ts_system+22)
 35877  006634  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35878  006636  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 35879                           
 35880                           ;main_MC50.c: 201:     decrementTimeslot((int*)&ts_system.TimeChargeCondesador);
 35881  00663A  0EB8               	movlw	low (_ts_system+26)
 35882  00663C  6E01               	movwf	decrementTimeslot@ts^0,c
 35883  00663E  0E01               	movlw	high (_ts_system+26)
 35884  006640  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35885  006642  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 35886                           
 35887                           ;main_MC50.c: 203:     decrementTimeslot((int*)&ts_system.timeFreqRGB);
 35888  006646  0EBA               	movlw	low (_ts_system+28)
 35889  006648  6E01               	movwf	decrementTimeslot@ts^0,c
 35890  00664A  0E01               	movlw	high (_ts_system+28)
 35891  00664C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35892  00664E  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 35893                           
 35894                           ;main_MC50.c: 204:     decrementTimeslot((int*)&ts_system.timeFreqFlashligth);
 35895  006652  0EBC               	movlw	low (_ts_system+30)
 35896  006654  6E01               	movwf	decrementTimeslot@ts^0,c
 35897  006656  0E01               	movlw	high (_ts_system+30)
 35898  006658  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35899  00665A  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 35900                           
 35901                           ;main_MC50.c: 206:     decrementTimeslot((int*)&ts_system.TimeWaitToNextState);
 35902  00665E  0EC2               	movlw	low (_ts_system+36)
 35903  006660  6E01               	movwf	decrementTimeslot@ts^0,c
 35904  006662  0E01               	movlw	high (_ts_system+36)
 35905  006664  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35906  006666  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 35907                           
 35908                           ;main_MC50.c: 208:     decrementTimeslot((int*)&ts_system.timeBetweenSaveCounters);
 35909  00666A  0EC4               	movlw	low (_ts_system+38)
 35910  00666C  6E01               	movwf	decrementTimeslot@ts^0,c
 35911  00666E  0E01               	movlw	high (_ts_system+38)
 35912  006670  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35913  006672  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 35914                           
 35915                           ;main_MC50.c: 209:     decrementTimeslot((int*)&ts_system.TimeElectricBrake);
 35916  006676  0EC6               	movlw	low (_ts_system+40)
 35917  006678  6E01               	movwf	decrementTimeslot@ts^0,c
 35918  00667A  0E01               	movlw	high (_ts_system+40)
 35919  00667C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35920  00667E  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 35921                           
 35922                           ;main_MC50.c: 210:     decrementTimeslot((int*)&ts_system.TimeCurrentAlarm);
 35923  006682  0EC8               	movlw	low (_ts_system+42)
 35924  006684  6E01               	movwf	decrementTimeslot@ts^0,c
 35925  006686  0E01               	movlw	high (_ts_system+42)
 35926  006688  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35927  00668A  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 35928                           
 35929                           ;main_MC50.c: 212:     decrementTimeslot((int*)&ts_system.TimeStopedBeforeDecelaration);
 35930  00668E  0ECA               	movlw	low (_ts_system+44)
 35931  006690  6E01               	movwf	decrementTimeslot@ts^0,c
 35932  006692  0E01               	movlw	high (_ts_system+44)
 35933  006694  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35934  006696  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 35935                           
 35936                           ;main_MC50.c: 213:     decrementTimeslot((int*)&ts_system.TimeCurrentWaitForAlarm);
 35937  00669A  0ECC               	movlw	low (_ts_system+46)
 35938  00669C  6E01               	movwf	decrementTimeslot@ts^0,c
 35939  00669E  0E01               	movlw	high (_ts_system+46)
 35940  0066A0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35941  0066A2  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 35942                           
 35943                           ;main_MC50.c: 214:     decrementTimeslot((int*)&ts_system.TimeInversionStart);
 35944  0066A6  0ECE               	movlw	low (_ts_system+48)
 35945  0066A8  6E01               	movwf	decrementTimeslot@ts^0,c
 35946  0066AA  0E01               	movlw	high (_ts_system+48)
 35947  0066AC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35948  0066AE  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 35949                           
 35950                           ;main_MC50.c: 215:     decrementTimeslot((int*)&ts_system.TimeReleCapacitor);
 35951  0066B2  0EE0               	movlw	low (_ts_system+66)
 35952  0066B4  6E01               	movwf	decrementTimeslot@ts^0,c
 35953  0066B6  0E01               	movlw	high (_ts_system+66)
 35954  0066B8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35955  0066BA  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 35956                           
 35957                           ;main_MC50.c: 216:     decrementTimeslot((int*)&ts_system.TimeWaitReleCapacitor);
 35958  0066BE  0EE2               	movlw	low (_ts_system+68)
 35959  0066C0  6E01               	movwf	decrementTimeslot@ts^0,c
 35960  0066C2  0E01               	movlw	high (_ts_system+68)
 35961  0066C4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35962  0066C6  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 35963                           
 35964                           ;main_MC50.c: 221:     if ( ( var_sys_NVM.electricBrake==0 ) || ( ts_system.TimeElectric
      +                          Brake<=0 ) )
 35965  0066CA  0100               	movlb	0	; () banked
 35966  0066CC  51AF               	movf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 35967  0066CE  B4D8               	btfsc	status,2,c
 35968  0066D0  D008               	goto	i2u1560_40
 35969                           
 35970                           ; BSR set to: 0
 35971  0066D2  0101               	movlb	1	; () banked
 35972  0066D4  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35973  0066D6  D005               	goto	i2u1560_40
 35974  0066D8  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35975  0066DA  E109               	bnz	i2l2024
 35976  0066DC  05C6               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 35977  0066DE  B0D8               	btfsc	status,0,c
 35978  0066E0  D006               	goto	i2l2024
 35979  0066E2                     i2u1560_40:
 35980                           
 35981                           ;main_MC50.c: 222:     {;main_MC50.c: 225:         decrementTimeslot((int*)&ts_system.In
      +                          vertionTimeClosingFromOpen);
 35982  0066E2  0ED0               	movlw	low (_ts_system+50)
 35983  0066E4  6E01               	movwf	decrementTimeslot@ts^0,c
 35984  0066E6  0E01               	movlw	high (_ts_system+50)
 35985  0066E8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35986  0066EA  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 35987  0066EE                     i2l2024:
 35988                           
 35989                           ;main_MC50.c: 228:     decrementTimeslot((int*)&ts_system.TimeWaitToGetCurrent);
 35990  0066EE  0ED2               	movlw	low (_ts_system+52)
 35991  0066F0  6E01               	movwf	decrementTimeslot@ts^0,c
 35992  0066F2  0E01               	movlw	high (_ts_system+52)
 35993  0066F4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35994  0066F6  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 35995                           
 35996                           ;main_MC50.c: 229:     decrementTimeslot((int*)&ts_system.TimeLearningDecelaration);
 35997  0066FA  0ED4               	movlw	low (_ts_system+54)
 35998  0066FC  6E01               	movwf	decrementTimeslot@ts^0,c
 35999  0066FE  0E01               	movlw	high (_ts_system+54)
 36000  006700  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 36001  006702  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 36002                           
 36003                           ;main_MC50.c: 230:     decrementTimeslot((int*)&ts_system.TimeTransitionDecelaration);
 36004  006706  0ED6               	movlw	low (_ts_system+56)
 36005  006708  6E01               	movwf	decrementTimeslot@ts^0,c
 36006  00670A  0E01               	movlw	high (_ts_system+56)
 36007  00670C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 36008  00670E  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 36009                           
 36010                           ;main_MC50.c: 232:     decrementTimeslot((int*)&ts_system.timewaitBeforeSoftStart);
 36011  006712  0ED8               	movlw	low (_ts_system+58)
 36012  006714  6E01               	movwf	decrementTimeslot@ts^0,c
 36013  006716  0E01               	movlw	high (_ts_system+58)
 36014  006718  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 36015  00671A  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 36016                           
 36017                           ;main_MC50.c: 233:     decrementTimeslot((int*)&ts_system.TimeShowVersion);
 36018  00671E  0EDA               	movlw	low (_ts_system+60)
 36019  006720  6E01               	movwf	decrementTimeslot@ts^0,c
 36020  006722  0E01               	movlw	high (_ts_system+60)
 36021  006724  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 36022  006726  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 36023                           
 36024                           ;main_MC50.c: 235:     decrementTimeslot((int*)&ts_system.TimeStopADCZeroOffsetCalc);
 36025  00672A  0EDC               	movlw	low (_ts_system+62)
 36026  00672C  6E01               	movwf	decrementTimeslot@ts^0,c
 36027  00672E  0E01               	movlw	high (_ts_system+62)
 36028  006730  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 36029  006732  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 36030                           
 36031                           ;main_MC50.c: 237:     decrementTimeslot((int*)&ts_system.TimeStopElectricBrake);
 36032  006736  0EDE               	movlw	low (_ts_system+64)
 36033  006738  6E01               	movwf	decrementTimeslot@ts^0,c
 36034  00673A  0E01               	movlw	high (_ts_system+64)
 36035  00673C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 36036  00673E  ECD2  F04D         	call	_decrementTimeslot	;wreg free
 36037                           
 36038                           ;main_MC50.c: 240:     if (ts_system.TimeOnFlashLigth>0)
 36039  006742  0101               	movlb	1	; () banked
 36040  006744  BFC1               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 36041  006746  0012               	return	
 36042  006748  51C1               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 36043  00674A  11C0               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 36044  00674C  11BF               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 36045  00674E  E103               	bnz	i2u1561_40
 36046  006750  05BE               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 36047  006752  A0D8               	btfss	status,0,c
 36048  006754  0012               	return	
 36049  006756                     i2u1561_40:
 36050                           
 36051                           ; BSR set to: 1
 36052                           ;main_MC50.c: 241:     {;main_MC50.c: 242:         ts_system.TimeOnFlashLigth--;
 36053  006756  0EFF               	movlw	255
 36054  006758  27BE               	addwf	(_ts_system+32)& (0+255),f,b	;volatile
 36055  00675A  0EFF               	movlw	255
 36056  00675C  23BF               	addwfc	(_ts_system+33)& (0+255),f,b	;volatile
 36057  00675E  0EFF               	movlw	255
 36058  006760  23C0               	addwfc	(_ts_system+34)& (0+255),f,b	;volatile
 36059  006762  0EFF               	movlw	255
 36060  006764  23C1               	addwfc	(_ts_system+35)& (0+255),f,b	;volatile
 36061                           
 36062                           ; BSR set to: 1
 36063  006766  0012               	return		;funcret
 36064  006768                     __end_of_controlTimeslots:
 36065                           	callstack 0
 36066                           
 36067 ;; *************** function _decrementTimeslot *****************
 36068 ;; Defined at:
 36069 ;;		line 246 in file "main_MC50.c"
 36070 ;; Parameters:    Size  Location     Type
 36071 ;;  ts              2    0[COMRAM] PTR int 
 36072 ;;		 -> ts_system.TimeShowVersion(2), ts_system.TimeLearningDecelaration(2), ts_system.TimeWaitToGetCurrent(2), ts_syste
      +m.InvertionTimeClosingFromOpen(2), 
 36073 ;;		 -> ts_system.TimeWaitReleCapacitor(2), ts_system.TimeInversionStart(2), ts_system.TimeStopedBeforeDecelaration(2), 
      +ts_system.TimeWaitToNextState(2), 
 36074 ;;		 -> ts_system.timeFreqFlashligth(2), ts_system.timeFreqRGB(2), ts_system.timeWaitToClose(2), ts_system.timeOpenWalk(
      +2), 
 36075 ;;		 -> ts_system.timeoutMenu(2), ts_system.timeFreqDigit(2), ts_system.timewaitFlashRGB(2), ts_system.TimeStopElectricB
      +rake(2), 
 36076 ;;		 -> ts_system.Debug_TS(2), ts_system.timeSinalizationDigit(2), ts_system.TimeLastCommand(2), ts_system.timeBetweenSa
      +veCounters(2), 
 36077 ;;		 -> ts_system.TimeCurrentAlarm(2), ts_system.TimeCurrentWaitForAlarm(2), ts_system.TimeReleCapacitor(2), ts_system.T
      +imeChargeCondesador(2), 
 36078 ;;		 -> ts_system.TimeTransitionDecelaration(2), ts_system.timewaitBeforeSoftStart(2), ts_system.timeSoftStart(2), ts_sy
      +stem.TimeElectricBrake(2), 
 36079 ;;		 -> ts_system.TimeStopADCZeroOffsetCalc(2), ts_system(72), 
 36080 ;; Auto vars:     Size  Location     Type
 36081 ;;		None
 36082 ;; Return value:  Size  Location     Type
 36083 ;;                  1    wreg      void 
 36084 ;; Registers used:
 36085 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36086 ;; Tracked objects:
 36087 ;;		On entry : 0/1
 36088 ;;		On exit  : 0/0
 36089 ;;		Unchanged: 0/0
 36090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36091 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36093 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36094 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36095 ;;Total ram usage:        4 bytes
 36096 ;; Hardware stack levels used: 1
 36097 ;; This function calls:
 36098 ;;		Nothing
 36099 ;; This function is called by:
 36100 ;;		_controlTimeslots
 36101 ;; This function uses a non-reentrant model
 36102 ;;
 36103                           
 36104                           	psect	text192
 36105  009BA4                     __ptext192:
 36106                           	callstack 0
 36107  009BA4                     _decrementTimeslot:
 36108                           	callstack 14
 36109                           
 36110                           ;main_MC50.c: 246: void decrementTimeslot(int * ts);main_MC50.c: 247: {;main_MC50.c: 248
      +                          :     if (ts[0]>0)
 36111                           
 36112                           ; BSR set to: 1
 36113                           ;incstack = 0
 36114  009BA4  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 36115  009BA8  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 36116  009BAC  0E01               	movlw	1
 36117  009BAE  BEDB               	btfsc	plusw2,7,c
 36118  009BB0  0012               	return	
 36119  009BB2  0E01               	movlw	1
 36120  009BB4  50DB               	movf	plusw2,w,c
 36121  009BB6  E103               	bnz	i2u1378_40
 36122  009BB8  04DE               	decf	postinc2,w,c
 36123  009BBA  A0D8               	btfss	status,0,c
 36124  009BBC  0012               	return	
 36125  009BBE                     i2u1378_40:
 36126                           
 36127                           ;main_MC50.c: 249:     {;main_MC50.c: 250:         ts[0]--;
 36128  009BBE  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 36129  009BC2  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 36130  009BC6  06DE               	decf	postinc2,f,c
 36131  009BC8  0E00               	movlw	0
 36132  009BCA  5ADD               	subwfb	postdec2,f,c
 36133  009BCC  0012               	return		;funcret
 36134  009BCE                     __end_of_decrementTimeslot:
 36135                           	callstack 0
 36136                           
 36137 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 36138 ;; Defined at:
 36139 ;;		line 346 in file "mcc_generated_files/tmr2.c"
 36140 ;; Parameters:    Size  Location     Type
 36141 ;;		None
 36142 ;; Auto vars:     Size  Location     Type
 36143 ;;		None
 36144 ;; Return value:  Size  Location     Type
 36145 ;;                  1    wreg      void 
 36146 ;; Registers used:
 36147 ;;		None
 36148 ;; Tracked objects:
 36149 ;;		On entry : 3F/2
 36150 ;;		On exit  : 3F/2
 36151 ;;		Unchanged: 3F/0
 36152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36157 ;;Total ram usage:        0 bytes
 36158 ;; Hardware stack levels used: 1
 36159 ;; This function calls:
 36160 ;;		Nothing
 36161 ;; This function is called by:
 36162 ;;		_TMR2_Initialize
 36163 ;;		_TMR2_ISR
 36164 ;; This function uses a non-reentrant model
 36165 ;;
 36166                           
 36167                           	psect	text193
 36168  00A0EA                     __ptext193:
 36169                           	callstack 0
 36170  00A0EA                     _TMR2_DefaultInterruptHandler:
 36171                           	callstack 15
 36172                           
 36173                           ; BSR set to: 2
 36174                           
 36175                           ;incstack = 0
 36176  00A0EA  0012               	return		;funcret
 36177  00A0EC                     __end_of_TMR2_DefaultInterruptHandler:
 36178                           	callstack 0
 36179                           
 36180 ;; *************** function _ReadADC *****************
 36181 ;; Defined at:
 36182 ;;		line 38 in file "controlCurrent_MC50.c"
 36183 ;; Parameters:    Size  Location     Type
 36184 ;;		None
 36185 ;; Auto vars:     Size  Location     Type
 36186 ;;		None
 36187 ;; Return value:  Size  Location     Type
 36188 ;;                  1    wreg      void 
 36189 ;; Registers used:
 36190 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36191 ;; Tracked objects:
 36192 ;;		On entry : 3F/E
 36193 ;;		On exit  : 31/0
 36194 ;;		Unchanged: 0/0
 36195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36198 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36199 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36200 ;;Total ram usage:        3 bytes
 36201 ;; Hardware stack levels used: 1
 36202 ;; Hardware stack levels required when called: 1
 36203 ;; This function calls:
 36204 ;;		_ADCC_GetSingleConversion
 36205 ;; This function is called by:
 36206 ;;		_TMR2_ISR
 36207 ;; This function uses a non-reentrant model
 36208 ;;
 36209                           
 36210                           	psect	text194
 36211  0092BA                     __ptext194:
 36212                           	callstack 0
 36213  0092BA                     _ReadADC:
 36214                           	callstack 14
 36215                           
 36216                           ; BSR set to: 14
 36217                           ;controlCurrent_MC50.c: 40:      if (!ADCON0bits.GO_nDONE)
 36218                           
 36219                           ; BSR set to: 2
 36220                           ;incstack = 0
 36221  0092BA  B060               	btfsc	96,0,c	;volatile
 36222  0092BC  0012               	return	
 36223                           
 36224                           ; BSR set to: 14
 36225                           ;controlCurrent_MC50.c: 41:      {;controlCurrent_MC50.c: 42:         if ( idxAdcAquisit
      +                          ion >= 30 )
 36226  0092BE  0E1D               	movlw	29
 36227  0092C0  0100               	movlb	0	; () banked
 36228  0092C2  6591               	cpfsgt	_idxAdcAquisition& (0+255),b	;volatile
 36229  0092C4  D002               	goto	i2l15238
 36230                           
 36231                           ; BSR set to: 0
 36232                           ;controlCurrent_MC50.c: 43:         {;controlCurrent_MC50.c: 44:             idxAdcAquis
      +                          ition=0;
 36233  0092C6  0E00               	movlw	0
 36234  0092C8  6F91               	movwf	_idxAdcAquisition& (0+255),b	;volatile
 36235  0092CA                     i2l15238:
 36236                           
 36237                           ; BSR set to: 0
 36238                           ;controlCurrent_MC50.c: 47:         ADC_array[idxAdcAquisition] = ((unsigned int)((ADRES
      +                          H << 8) + ADRESL)>>6);
 36239  0092CA  5063               	movf	99,w,c	;volatile
 36240  0092CC  CF64 F002          	movff	3940,??_ReadADC	;volatile
 36241  0092D0  6A03               	clrf	(??_ReadADC+1)^0,c
 36242  0092D2  C002  F003         	movff	??_ReadADC,??_ReadADC+1
 36243  0092D6  6A02               	clrf	??_ReadADC^0,c
 36244  0092D8  2602               	addwf	??_ReadADC^0,f,c
 36245  0092DA  0E00               	movlw	0
 36246  0092DC  2203               	addwfc	(??_ReadADC+1)^0,f,c
 36247  0092DE  0E06               	movlw	6
 36248  0092E0  6E04               	movwf	(??_ReadADC+2)^0,c
 36249  0092E2                     i2u1552_45:
 36250  0092E2  90D8               	bcf	status,0,c
 36251  0092E4  3203               	rrcf	(??_ReadADC+1)^0,f,c
 36252  0092E6  3202               	rrcf	??_ReadADC^0,f,c
 36253  0092E8  2E04               	decfsz	(??_ReadADC+2)^0,f,c
 36254  0092EA  D7FB               	goto	i2u1552_45
 36255  0092EC  5191               	movf	_idxAdcAquisition& (0+255),w,b	;volatile
 36256  0092EE  0D02               	mullw	2
 36257  0092F0  0E00               	movlw	low _ADC_array
 36258  0092F2  24F3               	addwf	243,w,c
 36259  0092F4  6ED9               	movwf	fsr2l,c
 36260  0092F6  0E02               	movlw	high _ADC_array
 36261  0092F8  20F4               	addwfc	prodh,w,c
 36262  0092FA  6EDA               	movwf	fsr2h,c
 36263  0092FC  C002  FFDE         	movff	??_ReadADC,postinc2
 36264  009300  C003  FFDD         	movff	??_ReadADC+1,postdec2
 36265                           
 36266                           ; BSR set to: 0
 36267                           ;controlCurrent_MC50.c: 48:         ADCC_GetSingleConversion(0x00);
 36268  009304  0E00               	movlw	0
 36269  009306  EC7C  F04F         	call	_ADCC_GetSingleConversion
 36270                           
 36271                           ;controlCurrent_MC50.c: 49:         idxAdcAquisition++;
 36272  00930A  0100               	movlb	0	; () banked
 36273  00930C  2B91               	incf	_idxAdcAquisition& (0+255),f,b	;volatile
 36274  00930E  0012               	return		;funcret
 36275  009310                     __end_of_ReadADC:
 36276                           	callstack 0
 36277                           
 36278 ;; *************** function _ADCC_GetSingleConversion *****************
 36279 ;; Defined at:
 36280 ;;		line 131 in file "mcc_generated_files/adcc.c"
 36281 ;; Parameters:    Size  Location     Type
 36282 ;;  channel         1    wreg     enum E10053
 36283 ;; Auto vars:     Size  Location     Type
 36284 ;;  channel         1    0[COMRAM] enum E10053
 36285 ;; Return value:  Size  Location     Type
 36286 ;;                  2  433[None  ] int 
 36287 ;; Registers used:
 36288 ;;		wreg, status,2, cstack
 36289 ;; Tracked objects:
 36290 ;;		On entry : 3F/0
 36291 ;;		On exit  : 0/0
 36292 ;;		Unchanged: 0/0
 36293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36295 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36297 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36298 ;;Total ram usage:        1 bytes
 36299 ;; Hardware stack levels used: 1
 36300 ;; This function calls:
 36301 ;;		Nothing
 36302 ;; This function is called by:
 36303 ;;		_ReadADC
 36304 ;; This function uses a non-reentrant model
 36305 ;;
 36306                           
 36307                           	psect	text195
 36308  009EF8                     __ptext195:
 36309                           	callstack 0
 36310  009EF8                     _ADCC_GetSingleConversion:
 36311                           	callstack 14
 36312                           
 36313                           ;incstack = 0
 36314                           ;ADCC_GetSingleConversion@channel stored from wreg
 36315  009EF8  6E01               	movwf	ADCC_GetSingleConversion@channel^0,c
 36316                           
 36317                           ;mcc_generated_files/adcc.c: 131: ADCC_GetSingleConversion(adcc_channel_t channel);mcc_g
      +                          enerated_files/adcc.c: 132: {;mcc_generated_files/adcc.c: 134:     ADPCH = channel;
 36318  009EFA  C001  FF5F         	movff	ADCC_GetSingleConversion@channel,3935	;volatile
 36319                           
 36320                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADON = 1;
 36321  009EFE  8E60               	bsf	96,7,c	;volatile
 36322                           
 36323                           ;mcc_generated_files/adcc.c: 139:       _delay((unsigned long)((5)*(64000000/4000000.0))
      +                          );
 36324  009F00  0E1A               	movlw	26
 36325  009F02                     i2u3443_47:
 36326  009F02  2EE8               	decfsz	wreg,f,c
 36327  009F04  D7FE               	bra	i2u3443_47
 36328  009F06  D000               	nop2	
 36329                           
 36330                           ;mcc_generated_files/adcc.c: 142:     ADCON0bits.ADCONT = 0;
 36331  009F08  9C60               	bcf	96,6,c	;volatile
 36332                           
 36333                           ;mcc_generated_files/adcc.c: 145:     ADCON0bits.ADGO = 1;
 36334  009F0A  8060               	bsf	96,0,c	;volatile
 36335  009F0C  0012               	return		;funcret
 36336  009F0E                     __end_of_ADCC_GetSingleConversion:
 36337                           	callstack 0
 36338                           
 36339 ;; *************** function _TMR1_ISR *****************
 36340 ;; Defined at:
 36341 ;;		line 166 in file "mcc_generated_files/tmr1.c"
 36342 ;; Parameters:    Size  Location     Type
 36343 ;;		None
 36344 ;; Auto vars:     Size  Location     Type
 36345 ;;		None
 36346 ;; Return value:  Size  Location     Type
 36347 ;;                  1    wreg      void 
 36348 ;; Registers used:
 36349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 36350 ;; Tracked objects:
 36351 ;;		On entry : 3F/E
 36352 ;;		On exit  : 0/0
 36353 ;;		Unchanged: 0/0
 36354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36359 ;;Total ram usage:        0 bytes
 36360 ;; Hardware stack levels used: 1
 36361 ;; Hardware stack levels required when called: 2
 36362 ;; This function calls:
 36363 ;;		Absolute function
 36364 ;;		_TMR1_DefaultInterruptHandler
 36365 ;;		_TMR1_WriteTimer
 36366 ;;		_controlMotorForce
 36367 ;; This function is called by:
 36368 ;;		_INTERRUPT_InterruptManager
 36369 ;; This function uses a non-reentrant model
 36370 ;;
 36371                           
 36372                           	psect	text196
 36373  009754                     __ptext196:
 36374                           	callstack 0
 36375  009754                     _TMR1_ISR:
 36376                           	callstack 14
 36377                           
 36378                           ; BSR set to: 14
 36379                           ;mcc_generated_files/tmr1.c: 170:     PIR4bits.TMR1IF = 0;
 36380                           
 36381                           ;incstack = 0
 36382  009754  91CE               	bcf	206,0,b	;volatile
 36383                           
 36384                           ; BSR set to: 14
 36385                           ;mcc_generated_files/tmr1.c: 172:             controlMotorForce();
 36386  009756  EC98  F02B         	call	_controlMotorForce	;wreg free
 36387                           
 36388                           ;mcc_generated_files/tmr1.c: 173:             if(ts_system.ts_TimeSlotTRIAC>0)
 36389  00975A  0101               	movlb	1	; () banked
 36390  00975C  51A3               	movf	(_ts_system+5)& (0+255),w,b	;volatile
 36391  00975E  A4D8               	btfss	status,2,c
 36392                           
 36393                           ; BSR set to: 1
 36394                           ;mcc_generated_files/tmr1.c: 174:             {;mcc_generated_files/tmr1.c: 176:        
      +                                   ts_system.ts_TimeSlotTRIAC--;
 36395  009760  07A3               	decf	(_ts_system+5)& (0+255),f,b	;volatile
 36396                           
 36397                           ; BSR set to: 1
 36398                           ;mcc_generated_files/tmr1.c: 178:             if (ts_system.ts_TimeSlot1ms > 0 )
 36399  009762  51A0               	movf	(_ts_system+2)& (0+255),w,b	;volatile
 36400  009764  A4D8               	btfss	status,2,c
 36401                           
 36402                           ; BSR set to: 1
 36403                           ;mcc_generated_files/tmr1.c: 179:             {;mcc_generated_files/tmr1.c: 180:        
      +                               ts_system.ts_TimeSlot1ms--;
 36404  009766  07A0               	decf	(_ts_system+2)& (0+255),f,b	;volatile
 36405                           
 36406                           ; BSR set to: 1
 36407                           ;mcc_generated_files/tmr1.c: 183:     TMR1_WriteTimer(timer1ReloadVal);
 36408  009768  C2E1  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 36409  00976C  C2E2  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 36410  009770  ECDA  F04E         	call	_TMR1_WriteTimer	;wreg free
 36411                           
 36412                           ; BSR set to: 1
 36413                           ;mcc_generated_files/tmr1.c: 185:     if(TMR1_InterruptHandler)
 36414  009774  0102               	movlb	2	; () banked
 36415  009776  51DF               	movf	_TMR1_InterruptHandler& (0+255),w,b
 36416  009778  11E0               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 36417  00977A  B4D8               	btfsc	status,2,c
 36418  00977C  0012               	return	
 36419                           
 36420                           ; BSR set to: 2
 36421                           ;mcc_generated_files/tmr1.c: 186:     {;mcc_generated_files/tmr1.c: 187:         TMR1_In
      +                          terruptHandler();
 36422  00977E  D801               	call	i2u1920_48
 36423  009780  0012               	return	
 36424  009782                     i2u1920_48:
 36425  009782  0005               	push	
 36426  009784  6EFA               	movwf	pclath,c
 36427  009786  51DF               	movf	_TMR1_InterruptHandler& (0+255),w,b
 36428  009788  6EFD               	movwf	tosl,c
 36429  00978A  51E0               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 36430  00978C  6EFE               	movwf	tosh,c
 36431  00978E  6AFF               	clrf	tosu,c
 36432  009790  50FA               	movf	pclath,w,c
 36433  009792  0012               	return		;indir
 36434  009794                     __end_of_TMR1_ISR:
 36435                           	callstack 0
 36436                           
 36437 ;; *************** function _controlMotorForce *****************
 36438 ;; Defined at:
 36439 ;;		line 213 in file "outputs_MC50.c"
 36440 ;; Parameters:    Size  Location     Type
 36441 ;;		None
 36442 ;; Auto vars:     Size  Location     Type
 36443 ;;		None
 36444 ;; Return value:  Size  Location     Type
 36445 ;;                  1    wreg      void 
 36446 ;; Registers used:
 36447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36448 ;; Tracked objects:
 36449 ;;		On entry : 3F/E
 36450 ;;		On exit  : 3E/0
 36451 ;;		Unchanged: 0/0
 36452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36455 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36456 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36457 ;;Total ram usage:        5 bytes
 36458 ;; Hardware stack levels used: 1
 36459 ;; Hardware stack levels required when called: 1
 36460 ;; This function calls:
 36461 ;;		i2_GetMotorPower
 36462 ;;		i2_VerifyElectricalBrake
 36463 ;; This function is called by:
 36464 ;;		_TMR1_ISR
 36465 ;; This function uses a non-reentrant model
 36466 ;;
 36467                           
 36468                           	psect	text197
 36469  005730                     __ptext197:
 36470                           	callstack 0
 36471  005730                     _controlMotorForce:
 36472                           	callstack 14
 36473                           
 36474                           ; BSR set to: 14
 36475                           ;outputs_MC50.c: 217:     difTime=GetMotorPower();
 36476                           
 36477                           ;incstack = 0
 36478  005730  EC75  F03E         	call	i2_GetMotorPower	;wreg free
 36479  005734  6F93               	movwf	_difTime& (0+255),b
 36480                           
 36481                           ; BSR set to: 1
 36482                           ;outputs_MC50.c: 218:     if(powerControl_st.decelarationActive==YES)
 36483  005736  057B               	decf	_powerControl_st& (0+255),w,b
 36484  005738  A4D8               	btfss	status,2,c
 36485  00573A  D00F               	goto	i2l2191
 36486                           
 36487                           ; BSR set to: 1
 36488                           ;outputs_MC50.c: 219:     {;outputs_MC50.c: 220:         if(ts_system.TimeStopedBeforeDe
      +                          celaration>0)
 36489  00573C  BFCB               	btfsc	(_ts_system+45)& (0+255),7,b	;volatile
 36490  00573E  D008               	goto	i2l15126
 36491  005740  51CB               	movf	(_ts_system+45)& (0+255),w,b	;volatile
 36492  005742  E103               	bnz	i2u1512_40
 36493  005744  05CA               	decf	(_ts_system+44)& (0+255),w,b	;volatile
 36494  005746  A0D8               	btfss	status,0,c
 36495  005748  D003               	goto	i2l15126
 36496  00574A                     i2u1512_40:
 36497                           
 36498                           ; BSR set to: 1
 36499                           ;outputs_MC50.c: 221:         {;outputs_MC50.c: 222:             StateTRIAC=0;
 36500  00574A  0E00               	movlw	0
 36501  00574C  6F94               	movwf	_StateTRIAC& (0+255),b
 36502                           
 36503                           ;outputs_MC50.c: 223:         }
 36504  00574E  D005               	goto	i2l2191
 36505  005750                     i2l15126:
 36506                           
 36507                           ; BSR set to: 1
 36508  005750  517D               	movf	(_powerControl_st+2)& (0+255),w,b
 36509  005752  5D7F               	subwf	(_powerControl_st+4)& (0+255),w,b
 36510  005754  A0D8               	btfss	status,0,c
 36511                           
 36512                           ; BSR set to: 1
 36513                           ;outputs_MC50.c: 225:         {;outputs_MC50.c: 227:             difTime=powerControl_st
      +                          .decelarationPower;
 36514  005756  C17E  F193         	movff	_powerControl_st+3,_difTime
 36515  00575A                     i2l2191:
 36516                           
 36517                           ; BSR set to: 1
 36518                           ;outputs_MC50.c: 242:     if(PORTAbits.RA3==1 && zeroCrossing==0)
 36519  00575A  A68D               	btfss	141,3,c	;volatile
 36520  00575C  D071               	goto	i2l2195
 36521                           
 36522                           ; BSR set to: 1
 36523  00575E  5196               	movf	_zeroCrossing& (0+255),w,b
 36524  005760  A4D8               	btfss	status,2,c
 36525  005762  D06E               	goto	i2l2195
 36526                           
 36527                           ; BSR set to: 1
 36528                           ;outputs_MC50.c: 243:     {;outputs_MC50.c: 257:         if ( waitZeroPeak == 0 )
 36529  005764  5195               	movf	_waitZeroPeak& (0+255),w,b
 36530  005766  A4D8               	btfss	status,2,c
 36531  005768  D016               	goto	i2l15142
 36532                           
 36533                           ; BSR set to: 1
 36534                           ;outputs_MC50.c: 258:         {;outputs_MC50.c: 260:             zeroCrossingWaitTime[ze
      +                          roCrossingWaitTimeIdx] = (zeroCrossingLength>>1);
 36535  00576A  0EFA               	movlw	low _zeroCrossingWaitTime
 36536  00576C  0100               	movlb	0	; () banked
 36537  00576E  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 36538  005770  6ED9               	movwf	fsr2l,c
 36539  005772  6ADA               	clrf	fsr2h,c
 36540  005774  0E02               	movlw	high _zeroCrossingWaitTime
 36541  005776  22DA               	addwfc	fsr2h,f,c
 36542  005778  0101               	movlb	1	; () banked
 36543  00577A  90D8               	bcf	status,0,c
 36544  00577C  3197               	rrcf	_zeroCrossingLength& (0+255),w,b
 36545  00577E  6EDF               	movwf	indf2,c
 36546                           
 36547                           ; BSR set to: 1
 36548                           ;outputs_MC50.c: 261:             if ( zeroCrossingWaitTimeIdx == 0 )
 36549  005780  0100               	movlb	0	; () banked
 36550  005782  5184               	movf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 36551  005784  A4D8               	btfss	status,2,c
 36552  005786  D002               	goto	i2l15140
 36553                           
 36554                           ; BSR set to: 0
 36555                           ;outputs_MC50.c: 262:             {;outputs_MC50.c: 263:                 zeroCrossingWai
      +                          tTimeIdx = 1;
 36556  005788  0E01               	movlw	1
 36557  00578A  D001               	goto	L118
 36558  00578C                     i2l15140:
 36559                           
 36560                           ; BSR set to: 0
 36561                           ;outputs_MC50.c: 266:             {;outputs_MC50.c: 267:                 zeroCrossingWai
      +                          tTimeIdx = 0;
 36562  00578C  0E00               	movlw	0
 36563  00578E                     L118:
 36564  00578E  6F84               	movwf	_zeroCrossingWaitTimeIdx& (0+255),b
 36565                           
 36566                           ; BSR set to: 0
 36567                           ;outputs_MC50.c: 270:             zeroCrossingLength = 0;
 36568                           
 36569                           ;outputs_MC50.c: 268:             }
 36570  005790  0E00               	movlw	0
 36571  005792  0101               	movlb	1	; () banked
 36572  005794  6F97               	movwf	_zeroCrossingLength& (0+255),b
 36573  005796                     i2l15142:
 36574                           
 36575                           ; BSR set to: 1
 36576                           ;outputs_MC50.c: 273:         if ( (difTime<=80) || (ts_system.TimeElectricBrake>0) )
 36577  005796  0E50               	movlw	80
 36578  005798  6593               	cpfsgt	_difTime& (0+255),b
 36579  00579A  D007               	goto	i2u1519_40
 36580                           
 36581                           ; BSR set to: 1
 36582  00579C  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36583  00579E  D008               	goto	i2l15148
 36584  0057A0  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36585  0057A2  E103               	bnz	i2u1519_40
 36586  0057A4  05C6               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 36587  0057A6  A0D8               	btfss	status,0,c
 36588  0057A8  D003               	goto	i2l15148
 36589  0057AA                     i2u1519_40:
 36590                           
 36591                           ; BSR set to: 1
 36592                           
 36593                           ;outputs_MC50.c: 274:         {;outputs_MC50.c: 275:             do { LATDbits.LATD7 = 0
      +                          ; } while(0);
 36594  0057AA  9E86               	bcf	134,7,c	;volatile
 36595                           
 36596                           ; BSR set to: 1
 36597                           ;outputs_MC50.c: 276:             var_sys.TriacON=NO;
 36598  0057AC  0E00               	movlw	0
 36599  0057AE  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 36600  0057B0                     i2l15148:
 36601                           
 36602                           ; BSR set to: 1
 36603                           ;outputs_MC50.c: 280:         waitZeroPeak++;
 36604  0057B0  2B95               	incf	_waitZeroPeak& (0+255),f,b
 36605                           
 36606                           ; BSR set to: 1
 36607                           ;outputs_MC50.c: 282:         if ( waitZeroPeak > zeroCrossingWaitTime[zeroCrossingWaitT
      +                          imeIdx] )
 36608  0057B2  0EFA               	movlw	low _zeroCrossingWaitTime
 36609  0057B4  0100               	movlb	0	; () banked
 36610  0057B6  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 36611  0057B8  6ED9               	movwf	fsr2l,c
 36612  0057BA  6ADA               	clrf	fsr2h,c
 36613  0057BC  0E02               	movlw	high _zeroCrossingWaitTime
 36614  0057BE  22DA               	addwfc	fsr2h,f,c
 36615  0057C0  0101               	movlb	1	; () banked
 36616  0057C2  5195               	movf	_waitZeroPeak& (0+255),w,b
 36617  0057C4  5CDE               	subwf	postinc2,w,c
 36618  0057C6  B0D8               	btfsc	status,0,c
 36619  0057C8  D044               	goto	i2l15178
 36620                           
 36621                           ; BSR set to: 1
 36622                           ;outputs_MC50.c: 284:         {;outputs_MC50.c: 286:             if ((var_sys.Control50o
      +                          r60hz >= 90)&&(var_sys.Control50or60hz <= 105)){
 36623  0057CA  0E59               	movlw	89
 36624  0057CC  654D               	cpfsgt	(_var_sys+77)& (0+255),b	;volatile
 36625  0057CE  D005               	goto	i2l15158
 36626                           
 36627                           ; BSR set to: 1
 36628  0057D0  0E6A               	movlw	106
 36629  0057D2  614D               	cpfslt	(_var_sys+77)& (0+255),b	;volatile
 36630  0057D4  D002               	goto	i2l15158
 36631                           
 36632                           ; BSR set to: 1
 36633                           ;outputs_MC50.c: 287:                 var_sys.Torquerelanty = 1;
 36634  0057D6  0E01               	movlw	1
 36635  0057D8  D001               	goto	L119
 36636  0057DA                     i2l15158:
 36637                           
 36638                           ; BSR set to: 1
 36639                           ;outputs_MC50.c: 290:             {;outputs_MC50.c: 291:                var_sys.Torquere
      +                          lanty = 0;
 36640  0057DA  0E00               	movlw	0
 36641  0057DC                     L119:
 36642  0057DC  6F15               	movwf	(_var_sys+21)& (0+255),b	;volatile
 36643                           
 36644                           ; BSR set to: 1
 36645                           ;outputs_MC50.c: 294:             ts_system.ts_TimeSlotTRIAC=80;
 36646                           
 36647                           ;outputs_MC50.c: 292:             }
 36648  0057DE  0E50               	movlw	80
 36649  0057E0  6FA3               	movwf	(_ts_system+5)& (0+255),b	;volatile
 36650                           
 36651                           ;outputs_MC50.c: 295:             var_sys.Control50or60hz = 0;
 36652  0057E2  0E00               	movlw	0
 36653  0057E4  6F4D               	movwf	(_var_sys+77)& (0+255),b	;volatile
 36654                           
 36655                           ;outputs_MC50.c: 296:             StateTRIAC=1;
 36656  0057E6  0E01               	movlw	1
 36657  0057E8  6F94               	movwf	_StateTRIAC& (0+255),b
 36658                           
 36659                           ;outputs_MC50.c: 297:             zeroCrossing=1;
 36660  0057EA  0E01               	movlw	1
 36661  0057EC  6F96               	movwf	_zeroCrossing& (0+255),b
 36662                           
 36663                           ; BSR set to: 1
 36664                           ;outputs_MC50.c: 298:             powerControl_st.actualCycle++;
 36665  0057EE  2B7F               	incf	(_powerControl_st+4)& (0+255),f,b
 36666                           
 36667                           ; BSR set to: 1
 36668                           ;outputs_MC50.c: 304:             if ( var_sys_NVM.electricBrake==1 && ts_system.TimeEle
      +                          ctricBrake>0 )
 36669  0057F0  0100               	movlb	0	; () banked
 36670  0057F2  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 36671  0057F4  A4D8               	btfss	status,2,c
 36672  0057F6  D00E               	goto	i2l15170
 36673                           
 36674                           ; BSR set to: 0
 36675  0057F8  0101               	movlb	1	; () banked
 36676  0057FA  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36677  0057FC  D00B               	goto	i2l15170
 36678  0057FE  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36679  005800  E103               	bnz	i2u1524_40
 36680  005802  05C6               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 36681  005804  A0D8               	btfss	status,0,c
 36682  005806  D006               	goto	i2l15170
 36683  005808                     i2u1524_40:
 36684                           
 36685                           ; BSR set to: 1
 36686                           ;outputs_MC50.c: 305:             {;outputs_MC50.c: 307:                 if ( powerContr
      +                          ol_st.actualCycle>=2 )
 36687  005808  0E01               	movlw	1
 36688  00580A  657F               	cpfsgt	(_powerControl_st+4)& (0+255),b
 36689  00580C  D022               	goto	i2l15178
 36690  00580E                     i2u1525_40:
 36691                           
 36692                           ; BSR set to: 1
 36693                           ;outputs_MC50.c: 308:                 {;outputs_MC50.c: 309:                     powerCo
      +                          ntrol_st.actualCycle=0;
 36694  00580E  0E00               	movlw	0
 36695  005810  6F7F               	movwf	(_powerControl_st+4)& (0+255),b
 36696  005812  D01F               	goto	i2l15178
 36697  005814                     i2l15170:
 36698                           
 36699                           ;outputs_MC50.c: 313:             {;outputs_MC50.c: 314:                 if ( powerContr
      +                          ol_st.actualCycle>=(powerControl_st.decelarationCyclesOff+powerControl_st.decelarationCy
      +                          clesOn) )
 36700  005814  0101               	movlb	1	; () banked
 36701  005816  517C               	movf	(_powerControl_st+1)& (0+255),w,b
 36702  005818  C17D  F005         	movff	_powerControl_st+2,??_controlMotorForce
 36703  00581C  6A06               	clrf	(??_controlMotorForce+1)^0,c
 36704  00581E  2605               	addwf	??_controlMotorForce^0,f,c
 36705  005820  0E00               	movlw	0
 36706  005822  2206               	addwfc	(??_controlMotorForce+1)^0,f,c
 36707  005824  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 36708  005826  6E07               	movwf	(??_controlMotorForce+2)^0,c
 36709  005828  6A08               	clrf	(??_controlMotorForce+3)^0,c
 36710  00582A  5005               	movf	??_controlMotorForce^0,w,c
 36711  00582C  5C07               	subwf	(??_controlMotorForce+2)^0,w,c
 36712  00582E  5008               	movf	(??_controlMotorForce+3)^0,w,c
 36713  005830  0A80               	xorlw	128
 36714  005832  6E09               	movwf	(??_controlMotorForce+4)^0,c
 36715  005834  5006               	movf	(??_controlMotorForce+1)^0,w,c
 36716  005836  0A80               	xorlw	128
 36717  005838  5809               	subwfb	(??_controlMotorForce+4)^0,w,c
 36718  00583A  B0D8               	btfsc	status,0,c
 36719  00583C  D7E8               	goto	i2u1525_40
 36720  00583E  D009               	goto	i2l15178
 36721  005840                     i2l2195:
 36722                           
 36723                           ; BSR set to: 1
 36724  005840  B68D               	btfsc	141,3,c	;volatile
 36725  005842  D007               	goto	i2l15178
 36726                           
 36727                           ; BSR set to: 1
 36728  005844  5196               	movf	_zeroCrossing& (0+255),w,b
 36729  005846  B4D8               	btfsc	status,2,c
 36730  005848  D004               	goto	i2l15178
 36731                           
 36732                           ; BSR set to: 1
 36733                           ;outputs_MC50.c: 328:     {;outputs_MC50.c: 330:         zeroCrossing=0;
 36734  00584A  0E00               	movlw	0
 36735  00584C  6F96               	movwf	_zeroCrossing& (0+255),b
 36736                           
 36737                           ;outputs_MC50.c: 331:         waitZeroPeak=0;
 36738  00584E  0E00               	movlw	0
 36739  005850  6F95               	movwf	_waitZeroPeak& (0+255),b
 36740  005852                     i2l15178:
 36741                           
 36742                           ; BSR set to: 1
 36743                           ;outputs_MC50.c: 336:     if ( PORTAbits.RA3!=0 )
 36744  005852  B68D               	btfsc	141,3,c	;volatile
 36745                           
 36746                           ; BSR set to: 1
 36747                           ;outputs_MC50.c: 337:     {;outputs_MC50.c: 339:         zeroCrossingLength++;
 36748  005854  2B97               	incf	_zeroCrossingLength& (0+255),f,b
 36749                           
 36750                           ; BSR set to: 1
 36751                           ;outputs_MC50.c: 342:    var_sys.Control50or60hz ++;
 36752                           
 36753                           ;outputs_MC50.c: 340:     }
 36754  005856  2B4D               	incf	(_var_sys+77)& (0+255),f,b	;volatile
 36755                           
 36756                           ; BSR set to: 1
 36757                           ;outputs_MC50.c: 352:     stateMotor = VerifyElectricalBrake(var_sys.StateMotor);
 36758  005858  5100               	movf	_var_sys& (0+255),w,b	;volatile
 36759  00585A  EC04  F045         	call	i2_VerifyElectricalBrake
 36760  00585E  0100               	movlb	0	; () banked
 36761  005860  6F83               	movwf	_stateMotor& (0+255),b
 36762                           
 36763                           ; BSR set to: 0
 36764                           ;outputs_MC50.c: 354:     if ( var_sys_NVM.electricBrake==1 && ts_system.TimeElectricBra
      +                          ke>0 && ts_system.TimeStopElectricBrake<=0 )
 36765  005862  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 36766  005864  A4D8               	btfss	status,2,c
 36767  005866  D02E               	goto	i2l15202
 36768                           
 36769                           ; BSR set to: 0
 36770  005868  0101               	movlb	1	; () banked
 36771  00586A  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36772  00586C  D02B               	goto	i2l15202
 36773  00586E  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36774  005870  E103               	bnz	i2u1531_40
 36775  005872  05C6               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 36776  005874  A0D8               	btfss	status,0,c
 36777  005876  D026               	goto	i2l15202
 36778  005878                     i2u1531_40:
 36779                           
 36780                           ; BSR set to: 1
 36781  005878  BFDF               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 36782  00587A  D005               	goto	i2u1532_40
 36783  00587C  51DF               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 36784  00587E  E122               	bnz	i2l15202
 36785  005880  05DE               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 36786  005882  B0D8               	btfsc	status,0,c
 36787  005884  D01F               	goto	i2l15202
 36788  005886                     i2u1532_40:
 36789                           
 36790                           ; BSR set to: 1
 36791                           ;outputs_MC50.c: 355:     {;outputs_MC50.c: 357:         if(stateMotor !=0 && StateTRIAC
      +                          ==1 && ts_system.ts_TRIACWait<=0 && powerControl_st.actualCycle==0 && ts_system.TimeElec
      +                          tricBrake<(((5+6)*( 100/50))-(5*( 100/50))) )
 36792  005886  0100               	movlb	0	; () banked
 36793  005888  5183               	movf	_stateMotor& (0+255),w,b
 36794  00588A  B4D8               	btfsc	status,2,c
 36795  00588C  D03A               	goto	i2l15214
 36796                           
 36797                           ; BSR set to: 0
 36798  00588E  0101               	movlb	1	; () banked
 36799  005890  0594               	decf	_StateTRIAC& (0+255),w,b
 36800  005892  A4D8               	btfss	status,2,c
 36801  005894  D036               	goto	i2l15214
 36802                           
 36803                           ; BSR set to: 1
 36804  005896  BFA5               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 36805  005898  D005               	goto	i2u1535_40
 36806  00589A  51A5               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 36807  00589C  E132               	bnz	i2l15214
 36808  00589E  05A4               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 36809  0058A0  B0D8               	btfsc	status,0,c
 36810  0058A2  D02F               	goto	i2l15214
 36811  0058A4                     i2u1535_40:
 36812                           
 36813                           ; BSR set to: 1
 36814  0058A4  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 36815  0058A6  A4D8               	btfss	status,2,c
 36816  0058A8  D02C               	goto	i2l15214
 36817                           
 36818                           ; BSR set to: 1
 36819  0058AA  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36820  0058AC  D006               	goto	i2u1537_40
 36821  0058AE  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36822  0058B0  E128               	bnz	i2l15214
 36823  0058B2  0E0C               	movlw	12
 36824  0058B4  5DC6               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 36825  0058B6  B0D8               	btfsc	status,0,c
 36826  0058B8  D024               	goto	i2l15214
 36827  0058BA                     i2u1537_40:
 36828                           
 36829                           ; BSR set to: 1
 36830                           
 36831                           ;outputs_MC50.c: 358:         {;outputs_MC50.c: 359:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 36832  0058BA  8E86               	bsf	134,7,c	;volatile
 36833                           
 36834                           ; BSR set to: 1
 36835                           ;outputs_MC50.c: 360:            ts_system.ts_TRIACWait=-(25*200);
 36836  0058BC  0EEC               	movlw	236
 36837  0058BE  6FA5               	movwf	(_ts_system+7)& (0+255),b	;volatile
 36838  0058C0  0E78               	movlw	120
 36839  0058C2  D01A               	goto	L120
 36840  0058C4                     i2l15202:
 36841                           
 36842                           ;outputs_MC50.c: 366:     {;outputs_MC50.c: 368:         if(stateMotor !=0 && ts_system.
      +                          ts_TimeSlotTRIAC<difTime && StateTRIAC==1 && ts_system.ts_TRIACWait<=0 && var_sys.InStop
      +                          ing==NO)
 36843  0058C4  0100               	movlb	0	; () banked
 36844  0058C6  5183               	movf	_stateMotor& (0+255),w,b
 36845  0058C8  B4D8               	btfsc	status,2,c
 36846  0058CA  D01B               	goto	i2l15214
 36847                           
 36848                           ; BSR set to: 0
 36849  0058CC  0101               	movlb	1	; () banked
 36850  0058CE  5193               	movf	_difTime& (0+255),w,b
 36851  0058D0  5DA3               	subwf	(_ts_system+5)& (0+255),w,b	;volatile
 36852  0058D2  B0D8               	btfsc	status,0,c
 36853  0058D4  D016               	goto	i2l15214
 36854                           
 36855                           ; BSR set to: 1
 36856  0058D6  0594               	decf	_StateTRIAC& (0+255),w,b
 36857  0058D8  A4D8               	btfss	status,2,c
 36858  0058DA  D013               	goto	i2l15214
 36859                           
 36860                           ; BSR set to: 1
 36861  0058DC  BFA5               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 36862  0058DE  D005               	goto	i2u1541_40
 36863  0058E0  51A5               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 36864  0058E2  E10F               	bnz	i2l15214
 36865  0058E4  05A4               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 36866  0058E6  B0D8               	btfsc	status,0,c
 36867  0058E8  D00C               	goto	i2l15214
 36868  0058EA                     i2u1541_40:
 36869                           
 36870                           ; BSR set to: 1
 36871  0058EA  510D               	movf	(_var_sys+13)& (0+255),w,b	;volatile
 36872  0058EC  A4D8               	btfss	status,2,c
 36873  0058EE  D009               	goto	i2l15214
 36874                           
 36875                           ; BSR set to: 1
 36876                           
 36877                           ;outputs_MC50.c: 369:         {;outputs_MC50.c: 370:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 36878  0058F0  8E86               	bsf	134,7,c	;volatile
 36879                           
 36880                           ; BSR set to: 1
 36881                           ;outputs_MC50.c: 371:            ts_system.ts_TRIACWait=-200;
 36882  0058F2  0EFF               	movlw	255
 36883  0058F4  6FA5               	movwf	(_ts_system+7)& (0+255),b	;volatile
 36884  0058F6  0E38               	movlw	56
 36885  0058F8                     L120:
 36886  0058F8  6FA4               	movwf	(_ts_system+6)& (0+255),b	;volatile
 36887                           
 36888                           ;outputs_MC50.c: 372:            var_sys.TriacON=YES;
 36889  0058FA  0E01               	movlw	1
 36890  0058FC  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 36891                           
 36892                           ;outputs_MC50.c: 373:            StateTRIAC=0;
 36893  0058FE  0E00               	movlw	0
 36894  005900  6F94               	movwf	_StateTRIAC& (0+255),b
 36895  005902                     i2l15214:
 36896                           
 36897                           ;outputs_MC50.c: 377:     if (((ts_system.ts_TimeSlotTRIAC <= 20 )&& ts_system.TimeElect
      +                          ricBrake<0) || (stateMotor==0))
 36898  005902  0E15               	movlw	21
 36899  005904  0101               	movlb	1	; () banked
 36900  005906  61A3               	cpfslt	(_ts_system+5)& (0+255),b	;volatile
 36901  005908  D002               	goto	i2u1544_40
 36902                           
 36903                           ; BSR set to: 1
 36904  00590A  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36905  00590C  D004               	goto	i2u1545_40
 36906  00590E                     i2u1544_40:
 36907                           
 36908                           ; BSR set to: 1
 36909  00590E  0100               	movlb	0	; () banked
 36910  005910  5183               	movf	_stateMotor& (0+255),w,b
 36911  005912  A4D8               	btfss	status,2,c
 36912  005914  D004               	goto	i2l2222
 36913  005916                     i2u1545_40:
 36914                           
 36915                           ;outputs_MC50.c: 378:     {;outputs_MC50.c: 384:             do { LATDbits.LATD7 = 0; } 
      +                          while(0);
 36916  005916  9E86               	bcf	134,7,c	;volatile
 36917                           
 36918                           ;outputs_MC50.c: 385:             var_sys.TriacON=NO;
 36919  005918  0E00               	movlw	0
 36920  00591A  0101               	movlb	1	; () banked
 36921  00591C  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 36922  00591E                     i2l2222:
 36923                           
 36924                           ;outputs_MC50.c: 396:     if(stateMotor !=0 && ts_system.ts_TRIACWait>0)
 36925  00591E  0100               	movlb	0	; () banked
 36926  005920  5183               	movf	_stateMotor& (0+255),w,b
 36927  005922  B4D8               	btfsc	status,2,c
 36928  005924  D00C               	goto	i2l15226
 36929                           
 36930                           ; BSR set to: 0
 36931  005926  0101               	movlb	1	; () banked
 36932  005928  BFA5               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 36933  00592A  D009               	goto	i2l15226
 36934  00592C  51A5               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 36935  00592E  E103               	bnz	i2u1547_40
 36936  005930  05A4               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 36937  005932  A0D8               	btfss	status,0,c
 36938  005934  D004               	goto	i2l15226
 36939  005936                     i2u1547_40:
 36940                           
 36941                           ; BSR set to: 1
 36942                           ;outputs_MC50.c: 397:     {;outputs_MC50.c: 398:         ts_system.ts_TRIACWait--;
 36943  005936  07A4               	decf	(_ts_system+6)& (0+255),f,b	;volatile
 36944  005938  A0D8               	btfss	status,0,c
 36945  00593A  07A5               	decf	(_ts_system+7)& (0+255),f,b	;volatile
 36946                           
 36947                           ;outputs_MC50.c: 399:     }
 36948  00593C  0012               	return	
 36949  00593E                     i2l15226:
 36950  00593E  0100               	movlb	0	; () banked
 36951  005940  5183               	movf	_stateMotor& (0+255),w,b
 36952  005942  A4D8               	btfss	status,2,c
 36953  005944  0012               	return	
 36954                           
 36955                           ; BSR set to: 0
 36956  005946  0101               	movlb	1	; () banked
 36957  005948  AFA5               	btfss	(_ts_system+7)& (0+255),7,b	;volatile
 36958  00594A  0012               	return	
 36959                           
 36960                           ; BSR set to: 1
 36961                           ;outputs_MC50.c: 401:     {;outputs_MC50.c: 402:         ts_system.ts_TRIACWait++;
 36962  00594C  4BA4               	infsnz	(_ts_system+6)& (0+255),f,b	;volatile
 36963  00594E  2BA5               	incf	(_ts_system+7)& (0+255),f,b	;volatile
 36964  005950  0012               	return		;funcret
 36965  005952                     __end_of_controlMotorForce:
 36966                           	callstack 0
 36967                           
 36968 ;; *************** function i2_VerifyElectricalBrake *****************
 36969 ;; Defined at:
 36970 ;;		line 658 in file "outputs_MC50.c"
 36971 ;; Parameters:    Size  Location     Type
 36972 ;;  actualState     1    wreg     enum E10381
 36973 ;; Auto vars:     Size  Location     Type
 36974 ;;  actualState     1    1[COMRAM] enum E10381
 36975 ;;  tempState       1    0[COMRAM] enum E10381
 36976 ;; Return value:  Size  Location     Type
 36977 ;;                  1    wreg      enum E10381
 36978 ;; Registers used:
 36979 ;;		wreg, status,2, status,0
 36980 ;; Tracked objects:
 36981 ;;		On entry : 3F/1
 36982 ;;		On exit  : 3E/0
 36983 ;;		Unchanged: 0/0
 36984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36986 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36988 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36989 ;;Total ram usage:        2 bytes
 36990 ;; Hardware stack levels used: 1
 36991 ;; This function calls:
 36992 ;;		Nothing
 36993 ;; This function is called by:
 36994 ;;		_controlMotorForce
 36995 ;; This function uses a non-reentrant model
 36996 ;;
 36997                           
 36998                           	psect	text198
 36999  008A08                     __ptext198:
 37000                           	callstack 0
 37001  008A08                     i2_VerifyElectricalBrake:
 37002                           	callstack 14
 37003                           
 37004                           ;incstack = 0
 37005                           ;i2VerifyElectricalBrake@actualState stored from wreg
 37006  008A08  6E02               	movwf	i2VerifyElectricalBrake@actualState^0,c
 37007                           
 37008                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 37009  008A0A  C002  F001         	movff	i2VerifyElectricalBrake@actualState,i2VerifyElectricalBrake@tempState
 37010                           
 37011                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 37012  008A0E  0100               	movlb	0	; () banked
 37013  008A10  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 37014  008A12  A4D8               	btfss	status,2,c
 37015  008A14  D02E               	goto	i2l2323
 37016                           
 37017                           ; BSR set to: 0
 37018  008A16  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 37019  008A18  A4D8               	btfss	status,2,c
 37020  008A1A  D02B               	goto	i2l2323
 37021                           
 37022                           ; BSR set to: 0
 37023  008A1C  0101               	movlb	1	; () banked
 37024  008A1E  BFDF               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 37025  008A20  D005               	goto	i2u1478_40
 37026  008A22  51DF               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 37027  008A24  E126               	bnz	i2l2323
 37028  008A26  05DE               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 37029  008A28  B0D8               	btfsc	status,0,c
 37030  008A2A  D023               	goto	i2l2323
 37031  008A2C                     i2u1478_40:
 37032                           
 37033                           ; BSR set to: 1
 37034                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 37035  008A2C  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 37036  008A2E  0100               	movlb	0	; () banked
 37037  008A30  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 37038  008A32  B4D8               	btfsc	status,2,c
 37039  008A34  D00B               	goto	i2l14844
 37040                           
 37041                           ; BSR set to: 0
 37042  008A36  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 37043  008A38  A4D8               	btfss	status,2,c
 37044  008A3A  D008               	goto	i2l14844
 37045                           
 37046                           ; BSR set to: 0
 37047                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 37048  008A3C  0E01               	movlw	1
 37049  008A3E  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 37050                           
 37051                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 37052  008A40  0E00               	movlw	0
 37053  008A42  0101               	movlb	1	; () banked
 37054  008A44  6FC7               	movwf	(_ts_system+41)& (0+255),b	;volatile
 37055  008A46  0E16               	movlw	22
 37056  008A48  6FC6               	movwf	(_ts_system+40)& (0+255),b	;volatile
 37057                           
 37058                           ;outputs_MC50.c: 670:         }
 37059  008A4A  D018               	goto	i2l2328
 37060  008A4C                     i2l14844:
 37061                           
 37062                           ; BSR set to: 0
 37063  008A4C  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 37064  008A4E  A4D8               	btfss	status,2,c
 37065  008A50  D00B               	goto	i2l14850
 37066                           
 37067                           ; BSR set to: 0
 37068  008A52  0101               	movlb	1	; () banked
 37069  008A54  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 37070  008A56  D008               	goto	i2l14850
 37071  008A58  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 37072  008A5A  E103               	bnz	i2u1482_40
 37073  008A5C  05C6               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 37074  008A5E  A0D8               	btfss	status,0,c
 37075  008A60  D003               	goto	i2l14850
 37076  008A62                     i2u1482_40:
 37077                           
 37078                           ; BSR set to: 1
 37079                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 37080  008A62  0E01               	movlw	1
 37081  008A64  6E01               	movwf	i2VerifyElectricalBrake@tempState^0,c
 37082                           
 37083                           ;outputs_MC50.c: 686:         }
 37084  008A66  D00A               	goto	i2l2328
 37085  008A68                     i2l14850:
 37086                           
 37087                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 37088  008A68  0E00               	movlw	0
 37089  008A6A  0100               	movlb	0	; () banked
 37090  008A6C  6F78               	movwf	_brakeElectric_st& (0+255),b
 37091                           
 37092                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 37093  008A6E  0E00               	movlw	0
 37094  008A70  D004               	goto	L121
 37095  008A72                     i2l2323:
 37096                           
 37097                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 37098  008A72  C002  F078         	movff	i2VerifyElectricalBrake@actualState,_brakeElectric_st
 37099                           
 37100                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 37101  008A76  0E00               	movlw	0
 37102  008A78  0100               	movlb	0	; () banked
 37103  008A7A                     L121:
 37104  008A7A  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 37105  008A7C                     i2l2328:
 37106                           
 37107                           ;outputs_MC50.c: 700:     return tempState;
 37108  008A7C  5001               	movf	i2VerifyElectricalBrake@tempState^0,w,c
 37109  008A7E  0012               	return		;funcret
 37110  008A80                     __end_ofi2_VerifyElectricalBrake:
 37111                           	callstack 0
 37112                           
 37113 ;; *************** function i2_GetMotorPower *****************
 37114 ;; Defined at:
 37115 ;;		line 405 in file "outputs_MC50.c"
 37116 ;; Parameters:    Size  Location     Type
 37117 ;;		None
 37118 ;; Auto vars:     Size  Location     Type
 37119 ;;  defineatraso    1    3[COMRAM] unsigned char 
 37120 ;; Return value:  Size  Location     Type
 37121 ;;                  1    wreg      unsigned char 
 37122 ;; Registers used:
 37123 ;;		wreg, status,2, status,0, prodl, prodh
 37124 ;; Tracked objects:
 37125 ;;		On entry : 3F/E
 37126 ;;		On exit  : 3F/1
 37127 ;;		Unchanged: 0/0
 37128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37130 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37131 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37132 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37133 ;;Total ram usage:        4 bytes
 37134 ;; Hardware stack levels used: 1
 37135 ;; This function calls:
 37136 ;;		Nothing
 37137 ;; This function is called by:
 37138 ;;		_controlMotorForce
 37139 ;; This function uses a non-reentrant model
 37140 ;;
 37141                           
 37142                           	psect	text199
 37143  007CEA                     __ptext199:
 37144                           	callstack 0
 37145  007CEA                     i2_GetMotorPower:
 37146                           	callstack 14
 37147                           
 37148                           ; BSR set to: 14
 37149                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 37150                           
 37151                           ;incstack = 0
 37152  007CEA  0101               	movlb	1	; () banked
 37153  007CEC  057B               	decf	_powerControl_st& (0+255),w,b
 37154  007CEE  A4D8               	btfss	status,2,c
 37155  007CF0  D006               	goto	i2l14794
 37156                           
 37157                           ; BSR set to: 1
 37158                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 37159  007CF2  0100               	movlb	0	; () banked
 37160  007CF4  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 37161  007CF6  0D06               	mullw	6
 37162  007CF8  CFF3 F192          	movff	prodl,_temppower
 37163                           
 37164                           ;outputs_MC50.c: 416:     }
 37165  007CFC  D043               	goto	i2l2240
 37166  007CFE                     i2l14794:
 37167                           
 37168                           ; BSR set to: 1
 37169                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 37170  007CFE  0100               	movlb	0	; () banked
 37171  007D00  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 37172  007D02  0D06               	mullw	6
 37173  007D04  CFF3 F082          	movff	prodl,_fullmotorPower
 37174                           
 37175                           ; BSR set to: 0
 37176                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 37177  007D08  0101               	movlb	1	; () banked
 37178  007D0A  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 37179  007D0C  D01C               	goto	i2l14804
 37180  007D0E  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 37181  007D10  E103               	bnz	i2u1468_40
 37182  007D12  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 37183  007D14  A0D8               	btfss	status,0,c
 37184  007D16  D017               	goto	i2l14804
 37185  007D18                     i2u1468_40:
 37186                           
 37187                           ; BSR set to: 1
 37188                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 37189  007D18  0100               	movlb	0	; () banked
 37190  007D1A  5182               	movf	_fullmotorPower& (0+255),w,b
 37191  007D1C  6E01               	movwf	??i2_GetMotorPower^0,c
 37192  007D1E  6A02               	clrf	(??i2_GetMotorPower+1)^0,c
 37193  007D20  0101               	movlb	1	; () banked
 37194  007D22  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 37195  007D24  5C01               	subwf	??i2_GetMotorPower^0,w,c
 37196  007D26  5002               	movf	(??i2_GetMotorPower+1)^0,w,c
 37197  007D28  0A80               	xorlw	128
 37198  007D2A  6E03               	movwf	(??i2_GetMotorPower+2)^0,c
 37199  007D2C  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 37200  007D2E  0A80               	xorlw	128
 37201  007D30  5803               	subwfb	(??i2_GetMotorPower+2)^0,w,c
 37202  007D32  B0D8               	btfsc	status,0,c
 37203  007D34  D002               	goto	i2l14802
 37204                           
 37205                           ; BSR set to: 1
 37206                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 37207  007D36  0E01               	movlw	1
 37208  007D38  D004               	goto	L123
 37209  007D3A                     i2l14802:
 37210                           
 37211                           ; BSR set to: 1
 37212                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 37213  007D3A  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 37214  007D3C  0100               	movlb	0	; () banked
 37215  007D3E  5D82               	subwf	_fullmotorPower& (0+255),w,b
 37216  007D40  D017               	goto	L124
 37217  007D42                     L123:
 37218  007D42  6F92               	movwf	_temppower& (0+255),b
 37219  007D44  D01F               	goto	i2l2240
 37220  007D46                     i2l14804:
 37221                           
 37222                           ; BSR set to: 1
 37223  007D46  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 37224  007D48  D005               	goto	i2u1470_40
 37225  007D4A  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 37226  007D4C  E113               	bnz	i2l14814
 37227  007D4E  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 37228  007D50  B0D8               	btfsc	status,0,c
 37229  007D52  D010               	goto	i2l14814
 37230  007D54                     i2u1470_40:
 37231                           
 37232                           ; BSR set to: 1
 37233  007D54  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 37234  007D56  D005               	goto	i2u1471_40
 37235  007D58  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 37236  007D5A  E10C               	bnz	i2l14814
 37237  007D5C  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 37238  007D5E  B0D8               	btfsc	status,0,c
 37239  007D60  D009               	goto	i2l14814
 37240  007D62                     i2u1471_40:
 37241                           
 37242                           ; BSR set to: 1
 37243                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 37244  007D62  C082  F192         	movff	_fullmotorPower,_temppower
 37245                           
 37246                           ; BSR set to: 1
 37247                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 37248  007D66  0E08               	movlw	8
 37249  007D68  0100               	movlb	0	; () banked
 37250  007D6A  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 37251  007D6C  D00B               	goto	i2l2240
 37252                           
 37253                           ; BSR set to: 0
 37254                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 37255  007D6E  0E3A               	movlw	58
 37256  007D70                     L124:
 37257  007D70  0101               	movlb	1	; () banked
 37258  007D72  D7E7               	goto	L123
 37259  007D74                     i2l14814:
 37260                           
 37261                           ; BSR set to: 1
 37262  007D74  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 37263  007D76  D006               	goto	i2l2240
 37264  007D78  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 37265  007D7A  E102               	bnz	i2u1473_40
 37266  007D7C  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 37267  007D7E  B0D8               	btfsc	status,0,c
 37268  007D80                     i2u1473_40:
 37269                           
 37270                           ; BSR set to: 1
 37271                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 37272  007D80  C110  F192         	movff	_var_sys+16,_temppower	;volatile
 37273  007D84                     i2l2240:
 37274                           
 37275                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 37276  007D84  0101               	movlb	1	; () banked
 37277  007D86  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 37278  007D88  D00E               	goto	i2l14824
 37279  007D8A  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 37280  007D8C  E103               	bnz	i2u1474_40
 37281  007D8E  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 37282  007D90  A0D8               	btfss	status,0,c
 37283  007D92  D009               	goto	i2l14824
 37284  007D94                     i2u1474_40:
 37285                           
 37286                           ; BSR set to: 1
 37287  007D94  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 37288  007D96  D005               	goto	i2u1475_40
 37289  007D98  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 37290  007D9A  E105               	bnz	i2l14824
 37291  007D9C  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 37292  007D9E  B0D8               	btfsc	status,0,c
 37293  007DA0  D002               	goto	i2l14824
 37294  007DA2                     i2u1475_40:
 37295                           
 37296                           ; BSR set to: 1
 37297                           ;outputs_MC50.c: 452:     defineatraso = 5;
 37298  007DA2  0E05               	movlw	5
 37299  007DA4  D001               	goto	L122
 37300  007DA6                     i2l14824:
 37301                           
 37302                           ; BSR set to: 1
 37303                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 37304  007DA6  0E17               	movlw	23
 37305  007DA8                     L122:
 37306  007DA8  6E04               	movwf	i2GetMotorPower@defineatraso^0,c
 37307                           
 37308                           ; BSR set to: 1
 37309                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 37310  007DAA  5192               	movf	_temppower& (0+255),w,b
 37311  007DAC  2404               	addwf	i2GetMotorPower@defineatraso^0,w,c
 37312                           
 37313                           ; BSR set to: 1
 37314  007DAE  0012               	return		;funcret
 37315  007DB0                     __end_ofi2_GetMotorPower:
 37316                           	callstack 0
 37317                           
 37318 ;; *************** function _TMR1_WriteTimer *****************
 37319 ;; Defined at:
 37320 ;;		line 129 in file "mcc_generated_files/tmr1.c"
 37321 ;; Parameters:    Size  Location     Type
 37322 ;;  timerVal        2    0[COMRAM] unsigned short 
 37323 ;; Auto vars:     Size  Location     Type
 37324 ;;		None
 37325 ;; Return value:  Size  Location     Type
 37326 ;;                  1    wreg      void 
 37327 ;; Registers used:
 37328 ;;		None
 37329 ;; Tracked objects:
 37330 ;;		On entry : 3F/1
 37331 ;;		On exit  : 3F/1
 37332 ;;		Unchanged: 3F/0
 37333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37334 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37337 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37338 ;;Total ram usage:        2 bytes
 37339 ;; Hardware stack levels used: 1
 37340 ;; This function calls:
 37341 ;;		Nothing
 37342 ;; This function is called by:
 37343 ;;		_TMR1_ISR
 37344 ;; This function uses a non-reentrant model
 37345 ;;
 37346                           
 37347                           	psect	text200
 37348  009DB4                     __ptext200:
 37349                           	callstack 0
 37350  009DB4                     _TMR1_WriteTimer:
 37351                           	callstack 15
 37352                           
 37353                           ; BSR set to: 1
 37354                           ;mcc_generated_files/tmr1.c: 129: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 130: {;mcc_generated_files/tmr1.c: 131:     if (T1CONbits.nT1SYNC == 1)
 37355                           
 37356                           ; BSR set to: 1
 37357                           ;incstack = 0
 37358  009DB4  A4CF               	btfss	207,2,c	;volatile
 37359  009DB6  D007               	goto	i2l1147
 37360                           
 37361                           ; BSR set to: 1
 37362                           ;mcc_generated_files/tmr1.c: 132:     {;mcc_generated_files/tmr1.c: 134:         T1CONbi
      +                          ts.TMR1ON = 0;
 37363  009DB8  90CF               	bcf	207,0,c	;volatile
 37364                           
 37365                           ;mcc_generated_files/tmr1.c: 137:         TMR1H = (uint8_t)(timerVal >> 8);
 37366  009DBA  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 37367                           
 37368                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 37369  009DBE  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 37370                           
 37371                           ;mcc_generated_files/tmr1.c: 141:         T1CONbits.TMR1ON =1;
 37372  009DC2  80CF               	bsf	207,0,c	;volatile
 37373                           
 37374                           ;mcc_generated_files/tmr1.c: 142:     }
 37375  009DC4  0012               	return	
 37376  009DC6                     i2l1147:
 37377                           
 37378                           ; BSR set to: 1
 37379                           ;mcc_generated_files/tmr1.c: 144:     {;mcc_generated_files/tmr1.c: 146:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 37380  009DC6  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 37381                           
 37382                           ;mcc_generated_files/tmr1.c: 147:         TMR1L = (uint8_t)timerVal;
 37383  009DCA  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 37384                           
 37385                           ; BSR set to: 1
 37386  009DCE  0012               	return		;funcret
 37387  009DD0                     __end_of_TMR1_WriteTimer:
 37388                           	callstack 0
 37389                           
 37390 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 37391 ;; Defined at:
 37392 ;;		line 196 in file "mcc_generated_files/tmr1.c"
 37393 ;; Parameters:    Size  Location     Type
 37394 ;;		None
 37395 ;; Auto vars:     Size  Location     Type
 37396 ;;		None
 37397 ;; Return value:  Size  Location     Type
 37398 ;;                  1    wreg      void 
 37399 ;; Registers used:
 37400 ;;		None
 37401 ;; Tracked objects:
 37402 ;;		On entry : 3F/2
 37403 ;;		On exit  : 3F/2
 37404 ;;		Unchanged: 3F/0
 37405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37410 ;;Total ram usage:        0 bytes
 37411 ;; Hardware stack levels used: 1
 37412 ;; This function calls:
 37413 ;;		Nothing
 37414 ;; This function is called by:
 37415 ;;		_TMR1_Initialize
 37416 ;;		_TMR1_ISR
 37417 ;; This function uses a non-reentrant model
 37418 ;;
 37419                           
 37420                           	psect	text201
 37421  00A0EC                     __ptext201:
 37422                           	callstack 0
 37423  00A0EC                     _TMR1_DefaultInterruptHandler:
 37424                           	callstack 15
 37425                           
 37426                           ; BSR set to: 2
 37427                           
 37428                           ; BSR set to: 1
 37429                           ;incstack = 0
 37430  00A0EC  0012               	return		;funcret
 37431  00A0EE                     __end_of_TMR1_DefaultInterruptHandler:
 37432                           	callstack 0
 37433                           
 37434 ;; *************** function _TMR0_ISR *****************
 37435 ;; Defined at:
 37436 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 37437 ;; Parameters:    Size  Location     Type
 37438 ;;		None
 37439 ;; Auto vars:     Size  Location     Type
 37440 ;;		None
 37441 ;; Return value:  Size  Location     Type
 37442 ;;                  1    wreg      void 
 37443 ;; Registers used:
 37444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 37445 ;; Tracked objects:
 37446 ;;		On entry : 3F/E
 37447 ;;		On exit  : 0/0
 37448 ;;		Unchanged: 0/0
 37449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37454 ;;Total ram usage:        0 bytes
 37455 ;; Hardware stack levels used: 1
 37456 ;; Hardware stack levels required when called: 1
 37457 ;; This function calls:
 37458 ;;		Absolute function
 37459 ;;		_TMR0_DefaultInterruptHandler
 37460 ;;		_rxi
 37461 ;; This function is called by:
 37462 ;;		_INTERRUPT_InterruptManager
 37463 ;; This function uses a non-reentrant model
 37464 ;;
 37465                           
 37466                           	psect	text202
 37467  009C68                     __ptext202:
 37468                           	callstack 0
 37469  009C68                     _TMR0_ISR:
 37470                           	callstack 15
 37471                           
 37472                           ; BSR set to: 14
 37473                           ;mcc_generated_files/tmr0.c: 130:     PIR0bits.TMR0IF = 0;
 37474                           
 37475                           ; BSR set to: 2
 37476                           ;incstack = 0
 37477  009C68  9BCA               	bcf	202,5,b	;volatile
 37478                           
 37479                           ; BSR set to: 14
 37480                           ;mcc_generated_files/tmr0.c: 132:     rxi();
 37481  009C6A  EC0E  F028         	call	_rxi	;wreg free
 37482                           
 37483                           ;mcc_generated_files/tmr0.c: 134:     if(TMR0_InterruptHandler)
 37484  009C6E  0102               	movlb	2	; () banked
 37485  009C70  51E3               	movf	_TMR0_InterruptHandler& (0+255),w,b
 37486  009C72  11E4               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 37487  009C74  B4D8               	btfsc	status,2,c
 37488  009C76  0012               	return	
 37489                           
 37490                           ; BSR set to: 2
 37491                           ;mcc_generated_files/tmr0.c: 135:     {;mcc_generated_files/tmr0.c: 136:         TMR0_In
      +                          terruptHandler();
 37492  009C78  D801               	call	i2u1916_48
 37493  009C7A  0012               	return	
 37494  009C7C                     i2u1916_48:
 37495  009C7C  0005               	push	
 37496  009C7E  6EFA               	movwf	pclath,c
 37497  009C80  51E3               	movf	_TMR0_InterruptHandler& (0+255),w,b
 37498  009C82  6EFD               	movwf	tosl,c
 37499  009C84  51E4               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 37500  009C86  6EFE               	movwf	tosh,c
 37501  009C88  6AFF               	clrf	tosu,c
 37502  009C8A  50FA               	movf	pclath,w,c
 37503  009C8C  0012               	return		;indir
 37504  009C8E                     __end_of_TMR0_ISR:
 37505                           	callstack 0
 37506                           
 37507 ;; *************** function _rxi *****************
 37508 ;; Defined at:
 37509 ;;		line 41 in file "inputs_MC50.c"
 37510 ;; Parameters:    Size  Location     Type
 37511 ;;		None
 37512 ;; Auto vars:     Size  Location     Type
 37513 ;;		None
 37514 ;; Return value:  Size  Location     Type
 37515 ;;                  1    wreg      void 
 37516 ;; Registers used:
 37517 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37518 ;; Tracked objects:
 37519 ;;		On entry : 3F/E
 37520 ;;		On exit  : 3C/0
 37521 ;;		Unchanged: 0/0
 37522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37525 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37526 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37527 ;;Total ram usage:        2 bytes
 37528 ;; Hardware stack levels used: 1
 37529 ;; This function calls:
 37530 ;;		Nothing
 37531 ;; This function is called by:
 37532 ;;		_TMR0_ISR
 37533 ;; This function uses a non-reentrant model
 37534 ;;
 37535                           
 37536                           	psect	text203
 37537  00501C                     __ptext203:
 37538                           	callstack 0
 37539  00501C                     _rxi:
 37540                           	callstack 15
 37541                           
 37542                           ; BSR set to: 14
 37543                           ;inputs_MC50.c: 43:     RFBit = PORTBbits.RB3;
 37544                           
 37545                           ;incstack = 0
 37546  00501C  0E00               	movlw	0
 37547  00501E  B68E               	btfsc	142,3,c	;volatile
 37548  005020  0E01               	movlw	1
 37549  005022  0100               	movlb	0	; () banked
 37550  005024  6F89               	movwf	_RFBit& (0+255),b	;volatile
 37551                           
 37552                           ; BSR set to: 0
 37553                           ;inputs_MC50.c: 47:     if (RFFull)
 37554  005026  518B               	movf	_RFFull& (0+255),w,b	;volatile
 37555  005028  A4D8               	btfss	status,2,c
 37556  00502A  0012               	return	
 37557  00502C  D116               	goto	i2l15108
 37558  00502E                     i2l14998:
 37559                           
 37560                           ; BSR set to: 1
 37561                           ;inputs_MC50.c: 53:             if (RFBit == 0) {
 37562  00502E  0100               	movlb	0	; () banked
 37563  005030  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37564  005032  A4D8               	btfss	status,2,c
 37565  005034  D004               	goto	i2l15002
 37566                           
 37567                           ; BSR set to: 0
 37568                           ;inputs_MC50.c: 56:                 RFstate = 3;
 37569  005036  0E03               	movlw	3
 37570  005038  0101               	movlb	1	; () banked
 37571  00503A  6F9C               	movwf	_RFstate& (0+255),b
 37572                           
 37573                           ;inputs_MC50.c: 57:             } else {
 37574  00503C  0012               	return	
 37575  00503E                     i2l15002:
 37576                           
 37577                           ; BSR set to: 0
 37578                           ;inputs_MC50.c: 58:                 RFcount--;
 37579  00503E  077E               	decf	_RFcount& (0+255),f,b
 37580  005040  A0D8               	btfss	status,0,c
 37581  005042  077F               	decf	(_RFcount+1)& (0+255),f,b
 37582                           
 37583                           ; BSR set to: 0
 37584                           ;inputs_MC50.c: 59:                 if (RFcount < -10)
 37585  005044  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 37586  005046  0012               	return	
 37587  005048  0EF6               	movlw	246
 37588  00504A  5D7E               	subwf	_RFcount& (0+255),w,b
 37589  00504C  0EFF               	movlw	255
 37590  00504E  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 37591  005050  B0D8               	btfsc	status,0,c
 37592  005052  0012               	return	
 37593  005054                     i2u1489_40:
 37594  005054                     i2l15006:
 37595                           
 37596                           ; BSR set to: 0
 37597                           ;inputs_MC50.c: 60:                 {;inputs_MC50.c: 62:                     RFstate = 0
      +                          ;
 37598  005054  0E00               	movlw	0
 37599  005056  0101               	movlb	1	; () banked
 37600  005058  6F9C               	movwf	_RFstate& (0+255),b
 37601  00505A  0012               	return	
 37602  00505C                     i2l15008:
 37603                           
 37604                           ; BSR set to: 1
 37605                           ;inputs_MC50.c: 67:             if (RFBit) {
 37606  00505C  0100               	movlb	0	; () banked
 37607  00505E  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37608  005060  B4D8               	btfsc	status,2,c
 37609  005062  D02C               	goto	i2l15028
 37610                           
 37611                           ; BSR set to: 0
 37612                           ;inputs_MC50.c: 71:                 RFstate = 2;
 37613  005064  0E02               	movlw	2
 37614  005066  0101               	movlb	1	; () banked
 37615  005068  6F9C               	movwf	_RFstate& (0+255),b
 37616                           
 37617                           ; BSR set to: 1
 37618                           ;inputs_MC50.c: 72:                 BufferRF[Bptr] >>= 1;
 37619  00506A  0EC8               	movlw	low _BufferRF
 37620  00506C  0100               	movlb	0	; () banked
 37621  00506E  258D               	addwf	_Bptr& (0+255),w,b
 37622  005070  6ED9               	movwf	fsr2l,c
 37623  005072  6ADA               	clrf	fsr2h,c
 37624  005074  0E02               	movlw	high _BufferRF
 37625  005076  22DA               	addwfc	fsr2h,f,c
 37626  005078  90D8               	bcf	status,0,c
 37627  00507A  32DF               	rrcf	indf2,f,c
 37628                           
 37629                           ; BSR set to: 0
 37630                           ;inputs_MC50.c: 73:                 if (RFcount >= 0) {
 37631  00507C  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37632  00507E  D008               	goto	i2l15018
 37633                           
 37634                           ; BSR set to: 0
 37635                           ;inputs_MC50.c: 74:                     BufferRF[Bptr] += 0x80;
 37636  005080  0EC8               	movlw	low _BufferRF
 37637  005082  258D               	addwf	_Bptr& (0+255),w,b
 37638  005084  6ED9               	movwf	fsr2l,c
 37639  005086  6ADA               	clrf	fsr2h,c
 37640  005088  0E02               	movlw	high _BufferRF
 37641  00508A  22DA               	addwfc	fsr2h,f,c
 37642  00508C  0E80               	movlw	128
 37643  00508E  26DF               	addwf	indf2,f,c
 37644  005090                     i2l15018:
 37645                           
 37646                           ; BSR set to: 0
 37647                           ;inputs_MC50.c: 81:                 RFcount = 0;
 37648  005090  0E00               	movlw	0
 37649  005092  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37650  005094  0E00               	movlw	0
 37651  005096  6F7E               	movwf	_RFcount& (0+255),b
 37652                           
 37653                           ; BSR set to: 0
 37654                           ;inputs_MC50.c: 83:                 if ((++BitCount & 7) == 0)
 37655  005098  2B8C               	incf	_BitCount& (0+255),f,b
 37656  00509A  C08C  F001         	movff	_BitCount,??_rxi
 37657  00509E  0E07               	movlw	7
 37658  0050A0  1601               	andwf	??_rxi^0,f,c
 37659  0050A2  B4D8               	btfsc	status,2,c
 37660                           
 37661                           ; BSR set to: 0
 37662                           ;inputs_MC50.c: 84:                     Bptr++;
 37663  0050A4  2B8D               	incf	_Bptr& (0+255),f,b
 37664                           
 37665                           ; BSR set to: 0
 37666                           ;inputs_MC50.c: 85:                 if (BitCount == 65) {
 37667  0050A6  0E41               	movlw	65
 37668  0050A8  198C               	xorwf	_BitCount& (0+255),w,b
 37669  0050AA  A4D8               	btfss	status,2,c
 37670  0050AC  0012               	return	
 37671                           
 37672                           ; BSR set to: 0
 37673                           ;inputs_MC50.c: 86:                     RFstate = 0;
 37674  0050AE  0E00               	movlw	0
 37675  0050B0  0101               	movlb	1	; () banked
 37676  0050B2  6F9C               	movwf	_RFstate& (0+255),b
 37677                           
 37678                           ;inputs_MC50.c: 87:                     RFFull = 1;
 37679  0050B4  0E01               	movlw	1
 37680  0050B6  0100               	movlb	0	; () banked
 37681  0050B8  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 37682  0050BA  0012               	return	
 37683  0050BC                     i2l15028:
 37684                           
 37685                           ; BSR set to: 0
 37686                           ;inputs_MC50.c: 92:                 RFcount++;
 37687  0050BC  4B7E               	infsnz	_RFcount& (0+255),f,b
 37688  0050BE  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 37689                           
 37690                           ; BSR set to: 0
 37691                           ;inputs_MC50.c: 93:                 if (RFcount >= 10)
 37692  0050C0  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37693  0050C2  0012               	return	
 37694  0050C4  517F               	movf	(_RFcount+1)& (0+255),w,b
 37695  0050C6  E104               	bnz	i2u1494_40
 37696  0050C8  0E0A               	movlw	10
 37697  0050CA  5D7E               	subwf	_RFcount& (0+255),w,b
 37698  0050CC  A0D8               	btfss	status,0,c
 37699  0050CE  0012               	return	
 37700  0050D0                     i2u1494_40:
 37701                           
 37702                           ; BSR set to: 0
 37703                           ;inputs_MC50.c: 94:                 {;inputs_MC50.c: 96:                     RFstate = 1
      +                          ;
 37704  0050D0  0E01               	movlw	1
 37705  0050D2  0101               	movlb	1	; () banked
 37706  0050D4  6F9C               	movwf	_RFstate& (0+255),b
 37707                           
 37708                           ;inputs_MC50.c: 97:                     Bptr = 0;
 37709  0050D6  0E00               	movlw	0
 37710  0050D8  0100               	movlb	0	; () banked
 37711  0050DA  6F8D               	movwf	_Bptr& (0+255),b
 37712                           
 37713                           ;inputs_MC50.c: 98:                     BitCount = 0;
 37714  0050DC  0E00               	movlw	0
 37715  0050DE  6F8C               	movwf	_BitCount& (0+255),b
 37716  0050E0  0012               	return	
 37717  0050E2                     i2l15034:
 37718                           
 37719                           ; BSR set to: 1
 37720                           ;inputs_MC50.c: 103:             if (RFBit) {
 37721  0050E2  0100               	movlb	0	; () banked
 37722  0050E4  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37723  0050E6  B4D8               	btfsc	status,2,c
 37724  0050E8  D030               	goto	i2l15050
 37725                           
 37726                           ; BSR set to: 0
 37727                           ;inputs_MC50.c: 106:                 if ((RFcount < 20) || (RFcount >= 45)) {
 37728  0050EA  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37729  0050EC  D00E               	goto	i2u1497_40
 37730  0050EE  517F               	movf	(_RFcount+1)& (0+255),w,b
 37731  0050F0  E104               	bnz	i2u1496_40
 37732  0050F2  0E14               	movlw	20
 37733  0050F4  5D7E               	subwf	_RFcount& (0+255),w,b
 37734  0050F6  A0D8               	btfss	status,0,c
 37735  0050F8  D008               	goto	i2u1497_40
 37736  0050FA                     i2u1496_40:
 37737                           
 37738                           ; BSR set to: 0
 37739  0050FA  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37740  0050FC  D01E               	goto	i2l15048
 37741  0050FE  517F               	movf	(_RFcount+1)& (0+255),w,b
 37742  005100  E104               	bnz	i2u1497_40
 37743  005102  0E2D               	movlw	45
 37744  005104  5D7E               	subwf	_RFcount& (0+255),w,b
 37745  005106  A0D8               	btfss	status,0,c
 37746  005108  D018               	goto	i2l15048
 37747  00510A                     i2u1497_40:
 37748                           
 37749                           ; BSR set to: 0
 37750                           ;inputs_MC50.c: 107:                     if((RFcount < 80) || RFcount>=100)
 37751  00510A  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37752  00510C  D7A3               	goto	i2u1489_40
 37753  00510E  517F               	movf	(_RFcount+1)& (0+255),w,b
 37754  005110  E104               	bnz	i2u1498_40
 37755  005112  0E50               	movlw	80
 37756  005114  5D7E               	subwf	_RFcount& (0+255),w,b
 37757  005116  A0D8               	btfss	status,0,c
 37758  005118  D79D               	goto	i2u1489_40
 37759  00511A                     i2u1498_40:
 37760                           
 37761                           ; BSR set to: 0
 37762  00511A  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37763  00511C  D006               	goto	i2l15046
 37764  00511E  517F               	movf	(_RFcount+1)& (0+255),w,b
 37765  005120  E199               	bnz	i2l15006
 37766  005122  0E64               	movlw	100
 37767  005124  5D7E               	subwf	_RFcount& (0+255),w,b
 37768  005126  B0D8               	btfsc	status,0,c
 37769  005128  D795               	goto	i2u1489_40
 37770  00512A                     i2l15046:
 37771                           
 37772                           ; BSR set to: 0
 37773                           ;inputs_MC50.c: 112:                     {;inputs_MC50.c: 113:                         R
      +                          Fcount = -10;
 37774  00512A  0EFF               	movlw	255
 37775  00512C  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37776  00512E  0EF6               	movlw	246
 37777  005130  6F7E               	movwf	_RFcount& (0+255),b
 37778                           
 37779                           ;inputs_MC50.c: 114:                         RFstate = 4;
 37780  005132  0E04               	movlw	4
 37781  005134  0101               	movlb	1	; () banked
 37782  005136  6F9C               	movwf	_RFstate& (0+255),b
 37783  005138  0012               	return	
 37784  00513A                     i2l15048:
 37785                           
 37786                           ; BSR set to: 0
 37787                           ;inputs_MC50.c: 118:                     RFcount = 0;
 37788  00513A  0E00               	movlw	0
 37789  00513C  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37790  00513E  0E00               	movlw	0
 37791  005140  6F7E               	movwf	_RFcount& (0+255),b
 37792                           
 37793                           ;inputs_MC50.c: 119:                     RFstate = 2;
 37794  005142  0E02               	movlw	2
 37795  005144  0101               	movlb	1	; () banked
 37796  005146  6F9C               	movwf	_RFstate& (0+255),b
 37797  005148  0012               	return	
 37798  00514A                     i2l15050:
 37799                           
 37800                           ; BSR set to: 0
 37801                           ;inputs_MC50.c: 122:                 RFcount++;
 37802  00514A  4B7E               	infsnz	_RFcount& (0+255),f,b
 37803  00514C  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 37804  00514E  0012               	return	
 37805  005150                     i2l15052:
 37806                           
 37807                           ; BSR set to: 1
 37808                           ;inputs_MC50.c: 127:             if (RFBit == 0) {
 37809  005150  0100               	movlb	0	; () banked
 37810  005152  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37811  005154  A4D8               	btfss	status,2,c
 37812  005156  D056               	goto	i2l15088
 37813                           
 37814                           ; BSR set to: 0
 37815                           ;inputs_MC50.c: 130:                 RFstate = 5;
 37816  005158  0E05               	movlw	5
 37817  00515A  0101               	movlb	1	; () banked
 37818  00515C  6F9C               	movwf	_RFstate& (0+255),b
 37819                           
 37820                           ; BSR set to: 1
 37821                           ;inputs_MC50.c: 131:                 BufferRF[Bptr] >>= 1;
 37822  00515E  0EC8               	movlw	low _BufferRF
 37823  005160  0100               	movlb	0	; () banked
 37824  005162  258D               	addwf	_Bptr& (0+255),w,b
 37825  005164  6ED9               	movwf	fsr2l,c
 37826  005166  6ADA               	clrf	fsr2h,c
 37827  005168  0E02               	movlw	high _BufferRF
 37828  00516A  22DA               	addwfc	fsr2h,f,c
 37829  00516C  90D8               	bcf	status,0,c
 37830  00516E  32DF               	rrcf	indf2,f,c
 37831                           
 37832                           ; BSR set to: 0
 37833                           ;inputs_MC50.c: 132:                 if (RFcount >= 0) {
 37834  005170  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37835  005172  D008               	goto	i2l15062
 37836                           
 37837                           ; BSR set to: 0
 37838                           ;inputs_MC50.c: 133:                     BufferRF[Bptr] += 0x80;
 37839  005174  0EC8               	movlw	low _BufferRF
 37840  005176  258D               	addwf	_Bptr& (0+255),w,b
 37841  005178  6ED9               	movwf	fsr2l,c
 37842  00517A  6ADA               	clrf	fsr2h,c
 37843  00517C  0E02               	movlw	high _BufferRF
 37844  00517E  22DA               	addwfc	fsr2h,f,c
 37845  005180  0E80               	movlw	128
 37846  005182  26DF               	addwf	indf2,f,c
 37847  005184                     i2l15062:
 37848                           
 37849                           ; BSR set to: 0
 37850                           ;inputs_MC50.c: 136:                 RFcount = 0;
 37851  005184  0E00               	movlw	0
 37852  005186  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37853  005188  0E00               	movlw	0
 37854  00518A  6F7E               	movwf	_RFcount& (0+255),b
 37855                           
 37856                           ; BSR set to: 0
 37857                           ;inputs_MC50.c: 138:                 if ((++BitCount & 7) == 0)
 37858  00518C  2B8C               	incf	_BitCount& (0+255),f,b
 37859  00518E  C08C  F001         	movff	_BitCount,??_rxi
 37860  005192  0E07               	movlw	7
 37861  005194  1601               	andwf	??_rxi^0,f,c
 37862  005196  A4D8               	btfss	status,2,c
 37863  005198  D009               	goto	i2l15070
 37864                           
 37865                           ; BSR set to: 0
 37866                           ;inputs_MC50.c: 139:                 {;inputs_MC50.c: 140:                     Bptr++;
 37867  00519A  2B8D               	incf	_Bptr& (0+255),f,b
 37868                           
 37869                           ; BSR set to: 0
 37870                           ;inputs_MC50.c: 141:                     BufferRF[Bptr]=0;
 37871  00519C  0EC8               	movlw	low _BufferRF
 37872  00519E  258D               	addwf	_Bptr& (0+255),w,b
 37873  0051A0  6ED9               	movwf	fsr2l,c
 37874  0051A2  6ADA               	clrf	fsr2h,c
 37875  0051A4  0E02               	movlw	high _BufferRF
 37876  0051A6  22DA               	addwfc	fsr2h,f,c
 37877  0051A8  0E00               	movlw	0
 37878  0051AA  6EDF               	movwf	indf2,c
 37879  0051AC                     i2l15070:
 37880                           
 37881                           ; BSR set to: 0
 37882                           ;inputs_MC50.c: 143:                 if (BitCount == 13) {
 37883  0051AC  0E0D               	movlw	13
 37884  0051AE  198C               	xorwf	_BitCount& (0+255),w,b
 37885  0051B0  A4D8               	btfss	status,2,c
 37886  0051B2  0012               	return	
 37887                           
 37888                           ; BSR set to: 0
 37889                           ;inputs_MC50.c: 144:                     RFstate = 0;
 37890  0051B4  0E00               	movlw	0
 37891  0051B6  0101               	movlb	1	; () banked
 37892  0051B8  6F9C               	movwf	_RFstate& (0+255),b
 37893                           
 37894                           ; BSR set to: 1
 37895                           ;inputs_MC50.c: 145:                     if(RFFull_12BIT==1)
 37896  0051BA  0100               	movlb	0	; () banked
 37897  0051BC  058A               	decf	_RFFull_12BIT& (0+255),w,b	;volatile
 37898  0051BE  A4D8               	btfss	status,2,c
 37899  0051C0  D01A               	goto	i2l15082
 37900                           
 37901                           ; BSR set to: 0
 37902                           ;inputs_MC50.c: 146:                     {;inputs_MC50.c: 147:                         i
      +                          f(BufferRF_12BIT[0]==BufferRF[0] && BufferRF_12BIT[1]==BufferRF[1])
 37903  0051C2  0102               	movlb	2	; () banked
 37904  0051C4  51C8               	movf	_BufferRF& (0+255),w,b
 37905  0051C6  0101               	movlb	1	; () banked
 37906  0051C8  1989               	xorwf	_BufferRF_12BIT& (0+255),w,b
 37907  0051CA  A4D8               	btfss	status,2,c
 37908  0051CC  D00F               	goto	i2l1620
 37909                           
 37910                           ; BSR set to: 1
 37911  0051CE  0102               	movlb	2	; () banked
 37912  0051D0  51C9               	movf	(_BufferRF+1)& (0+255),w,b
 37913  0051D2  0101               	movlb	1	; () banked
 37914  0051D4  198A               	xorwf	(_BufferRF_12BIT+1)& (0+255),w,b
 37915  0051D6  A4D8               	btfss	status,2,c
 37916  0051D8  D009               	goto	i2l1620
 37917                           
 37918                           ; BSR set to: 1
 37919                           ;inputs_MC50.c: 148:                         {;inputs_MC50.c: 149:                      
      +                                 RFFull = 1;
 37920  0051DA  0E01               	movlw	1
 37921  0051DC  0100               	movlb	0	; () banked
 37922  0051DE  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 37923                           
 37924                           ;inputs_MC50.c: 150:                             BufferRF[2]=0;
 37925  0051E0  0E00               	movlw	0
 37926  0051E2  0102               	movlb	2	; () banked
 37927  0051E4  6FCA               	movwf	(_BufferRF+2)& (0+255),b
 37928                           
 37929                           ;inputs_MC50.c: 151:                             BufferRF[3]=0;
 37930  0051E6  0E00               	movlw	0
 37931  0051E8  6FCB               	movwf	(_BufferRF+3)& (0+255),b
 37932                           
 37933                           ;inputs_MC50.c: 152:                         }
 37934  0051EA  0012               	return	
 37935  0051EC                     i2l1620:
 37936                           
 37937                           ; BSR set to: 1
 37938                           ;inputs_MC50.c: 154:                         {;inputs_MC50.c: 155:                      
      +                                 BufferRF_12BIT[0]=BufferRF[0];
 37939  0051EC  C2C8  F189         	movff	_BufferRF,_BufferRF_12BIT
 37940                           
 37941                           ;inputs_MC50.c: 156:                             BufferRF_12BIT[1]=BufferRF[1];
 37942  0051F0  C2C9  F18A         	movff	_BufferRF+1,_BufferRF_12BIT+1
 37943  0051F4  0012               	return	
 37944  0051F6                     i2l15082:
 37945                           
 37946                           ; BSR set to: 0
 37947                           ;inputs_MC50.c: 161:                     {;inputs_MC50.c: 162:                         R
      +                          FFull_12BIT=1;
 37948  0051F6  0E01               	movlw	1
 37949  0051F8  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
 37950                           
 37951                           ; BSR set to: 0
 37952                           ;inputs_MC50.c: 163:                         BufferRF_12BIT[0]=BufferRF[0];
 37953  0051FA  C2C8  F189         	movff	_BufferRF,_BufferRF_12BIT
 37954                           
 37955                           ; BSR set to: 0
 37956                           ;inputs_MC50.c: 164:                         BufferRF_12BIT[1]=BufferRF[1];
 37957  0051FE  C2C9  F18A         	movff	_BufferRF+1,_BufferRF_12BIT+1
 37958  005202  0012               	return	
 37959  005204                     i2l15088:
 37960                           
 37961                           ; BSR set to: 0
 37962                           ;inputs_MC50.c: 168:                 RFcount++;
 37963  005204  4B7E               	infsnz	_RFcount& (0+255),f,b
 37964  005206  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 37965                           
 37966                           ; BSR set to: 0
 37967                           ;inputs_MC50.c: 169:                 if (RFcount >= 10)
 37968  005208  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37969  00520A  0012               	return	
 37970  00520C  517F               	movf	(_RFcount+1)& (0+255),w,b
 37971  00520E  E104               	bnz	i2u1507_40
 37972  005210  0E0A               	movlw	10
 37973  005212  5D7E               	subwf	_RFcount& (0+255),w,b
 37974  005214  A0D8               	btfss	status,0,c
 37975  005216  0012               	return	
 37976  005218                     i2u1507_40:
 37977  005218  D71D               	goto	i2u1489_40
 37978  00521A                     i2l15094:
 37979                           
 37980                           ; BSR set to: 1
 37981                           ;inputs_MC50.c: 177:             if (RFBit) {
 37982  00521A  0100               	movlb	0	; () banked
 37983  00521C  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37984  00521E  B4D8               	btfsc	status,2,c
 37985  005220  D004               	goto	i2l15098
 37986                           
 37987                           ; BSR set to: 0
 37988                           ;inputs_MC50.c: 181:                 RFstate = 4;
 37989  005222  0E04               	movlw	4
 37990  005224  0101               	movlb	1	; () banked
 37991  005226  6F9C               	movwf	_RFstate& (0+255),b
 37992                           
 37993                           ;inputs_MC50.c: 183:             } else {
 37994  005228  0012               	return	
 37995  00522A                     i2l15098:
 37996                           
 37997                           ; BSR set to: 0
 37998                           ;inputs_MC50.c: 184:                 RFcount--;
 37999  00522A  077E               	decf	_RFcount& (0+255),f,b
 38000  00522C  A0D8               	btfss	status,0,c
 38001  00522E  077F               	decf	(_RFcount+1)& (0+255),f,b
 38002                           
 38003                           ; BSR set to: 0
 38004                           ;inputs_MC50.c: 185:                 if (RFcount < -10)
 38005  005230  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 38006  005232  0012               	return	
 38007  005234  0EF6               	movlw	246
 38008  005236  5D7E               	subwf	_RFcount& (0+255),w,b
 38009  005238  0EFF               	movlw	255
 38010  00523A  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 38011  00523C  B0D8               	btfsc	status,0,c
 38012  00523E  0012               	return	
 38013  005240  D747               	goto	i2u1494_40
 38014  005242                     i2l15104:
 38015                           
 38016                           ; BSR set to: 1
 38017                           ;inputs_MC50.c: 197:             RFstate = 1;
 38018  005242  0E01               	movlw	1
 38019  005244  6F9C               	movwf	_RFstate& (0+255),b
 38020                           
 38021                           ;inputs_MC50.c: 198:             RFcount = 0;
 38022  005246  0E00               	movlw	0
 38023  005248  0100               	movlb	0	; () banked
 38024  00524A  6F7F               	movwf	(_RFcount+1)& (0+255),b
 38025  00524C  0E00               	movlw	0
 38026  00524E  6F7E               	movwf	_RFcount& (0+255),b
 38027                           
 38028                           ;inputs_MC50.c: 199:             Bptr = 0;
 38029  005250  0E00               	movlw	0
 38030  005252  6F8D               	movwf	_Bptr& (0+255),b
 38031                           
 38032                           ;inputs_MC50.c: 200:             BitCount = 0;
 38033  005254  0E00               	movlw	0
 38034  005256  6F8C               	movwf	_BitCount& (0+255),b
 38035                           
 38036                           ;inputs_MC50.c: 201:             break;
 38037  005258  0012               	return	
 38038  00525A                     i2l15108:
 38039                           
 38040                           ; BSR set to: 0
 38041  00525A  0101               	movlb	1	; () banked
 38042  00525C  519C               	movf	_RFstate& (0+255),w,b
 38043  00525E  6E01               	movwf	??_rxi^0,c
 38044  005260  6A02               	clrf	(??_rxi+1)^0,c
 38045                           
 38046                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 38047                           ; Switch size 1, requested type "simple"
 38048                           ; Number of cases is 1, Range of values is 0 to 0
 38049                           ; switch strategies available:
 38050                           ; Name         Instructions Cycles
 38051                           ; simple_byte            4     3 (average)
 38052                           ;	Chosen strategy is simple_byte
 38053  005262  5002               	movf	(??_rxi+1)^0,w,c
 38054  005264  0A00               	xorlw	0	; case 0
 38055  005266  A4D8               	btfss	status,2,c
 38056  005268  D7EC               	goto	i2l15104
 38057                           
 38058                           ; BSR set to: 1
 38059                           ; Switch size 1, requested type "simple"
 38060                           ; Number of cases is 6, Range of values is 0 to 5
 38061                           ; switch strategies available:
 38062                           ; Name         Instructions Cycles
 38063                           ; simple_byte           19    10 (average)
 38064                           ;	Chosen strategy is simple_byte
 38065  00526A  5001               	movf	??_rxi^0,w,c
 38066  00526C  0A00               	xorlw	0	; case 0
 38067  00526E  B4D8               	btfsc	status,2,c
 38068  005270  D7E8               	goto	i2l15104
 38069  005272  0A01               	xorlw	1	; case 1
 38070  005274  B4D8               	btfsc	status,2,c
 38071  005276  D735               	goto	i2l15034
 38072  005278  0A03               	xorlw	3	; case 2
 38073  00527A  B4D8               	btfsc	status,2,c
 38074  00527C  D6D8               	goto	i2l14998
 38075  00527E  0A01               	xorlw	1	; case 3
 38076  005280  B4D8               	btfsc	status,2,c
 38077  005282  D6EC               	goto	i2l15008
 38078  005284  0A07               	xorlw	7	; case 4
 38079  005286  B4D8               	btfsc	status,2,c
 38080  005288  D763               	goto	i2l15052
 38081  00528A  0A01               	xorlw	1	; case 5
 38082  00528C  B4D8               	btfsc	status,2,c
 38083  00528E  D7C5               	goto	i2l15094
 38084  005290  D7D8               	goto	i2l15104
 38085  005292                     __end_of_rxi:
 38086                           	callstack 0
 38087                           
 38088 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 38089 ;; Defined at:
 38090 ;;		line 147 in file "mcc_generated_files/tmr0.c"
 38091 ;; Parameters:    Size  Location     Type
 38092 ;;		None
 38093 ;; Auto vars:     Size  Location     Type
 38094 ;;		None
 38095 ;; Return value:  Size  Location     Type
 38096 ;;                  1    wreg      void 
 38097 ;; Registers used:
 38098 ;;		None
 38099 ;; Tracked objects:
 38100 ;;		On entry : 3F/2
 38101 ;;		On exit  : 3F/2
 38102 ;;		Unchanged: 3F/0
 38103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38108 ;;Total ram usage:        0 bytes
 38109 ;; Hardware stack levels used: 1
 38110 ;; This function calls:
 38111 ;;		Nothing
 38112 ;; This function is called by:
 38113 ;;		_TMR0_Initialize
 38114 ;;		_TMR0_ISR
 38115 ;; This function uses a non-reentrant model
 38116 ;;
 38117                           
 38118                           	psect	text204
 38119  00A0EE                     __ptext204:
 38120                           	callstack 0
 38121  00A0EE                     _TMR0_DefaultInterruptHandler:
 38122                           	callstack 15
 38123                           
 38124                           ; BSR set to: 2
 38125                           
 38126                           ;incstack = 0
 38127  00A0EE  0012               	return		;funcret
 38128  00A0F0                     __end_of_TMR0_DefaultInterruptHandler:
 38129                           	callstack 0
 38130                           
 38131 ;; *************** function _EUSART1_Transmit_ISR *****************
 38132 ;; Defined at:
 38133 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 38134 ;; Parameters:    Size  Location     Type
 38135 ;;		None
 38136 ;; Auto vars:     Size  Location     Type
 38137 ;;		None
 38138 ;; Return value:  Size  Location     Type
 38139 ;;                  1    wreg      void 
 38140 ;; Registers used:
 38141 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38142 ;; Tracked objects:
 38143 ;;		On entry : 3F/2
 38144 ;;		On exit  : 30/0
 38145 ;;		Unchanged: 0/0
 38146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38151 ;;Total ram usage:        0 bytes
 38152 ;; Hardware stack levels used: 1
 38153 ;; This function calls:
 38154 ;;		Nothing
 38155 ;; This function is called by:
 38156 ;;		_EUSART1_Initialize
 38157 ;;		_INTERRUPT_InterruptManager
 38158 ;; This function uses a non-reentrant model
 38159 ;;
 38160                           
 38161                           	psect	text205
 38162  0098DA                     __ptext205:
 38163                           	callstack 0
 38164  0098DA                     _EUSART1_Transmit_ISR:
 38165                           	callstack 16
 38166                           
 38167                           ; BSR set to: 2
 38168                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 38169                           
 38170                           ; BSR set to: 2
 38171                           ;incstack = 0
 38172  0098DA  0E08               	movlw	8
 38173  0098DC  0101               	movlb	1	; () banked
 38174  0098DE  61FD               	cpfslt	_eusart1TxBufferRemaining& (0+255),b
 38175  0098E0  D012               	goto	i2l106
 38176                           
 38177                           ; BSR set to: 1
 38178                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 38179  0098E2  0E84               	movlw	low _eusart1TxBuffer
 38180  0098E4  0100               	movlb	0	; () banked
 38181  0098E6  2596               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 38182  0098E8  6ED9               	movwf	fsr2l,c
 38183  0098EA  6ADA               	clrf	fsr2h,c
 38184  0098EC  0E02               	movlw	high _eusart1TxBuffer
 38185  0098EE  22DA               	addwfc	fsr2h,f,c
 38186  0098F0  50DF               	movf	indf2,w,c
 38187  0098F2  6E9A               	movwf	154,c	;volatile
 38188                           
 38189                           ; BSR set to: 0
 38190  0098F4  2B96               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 38191                           
 38192                           ; BSR set to: 0
 38193                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 38194  0098F6  0E07               	movlw	7
 38195  0098F8  6596               	cpfsgt	_eusart1TxTail& (0+255),b
 38196  0098FA  D002               	goto	i2l17000
 38197                           
 38198                           ; BSR set to: 0
 38199                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 38200  0098FC  0E00               	movlw	0
 38201  0098FE  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 38202  009900                     i2l17000:
 38203                           
 38204                           ; BSR set to: 0
 38205                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 38206  009900  0101               	movlb	1	; () banked
 38207  009902  2BFD               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 38208                           
 38209                           ;mcc_generated_files/eusart1.c: 209:     }
 38210  009904  0012               	return	
 38211  009906                     i2l106:
 38212                           
 38213                           ; BSR set to: 1
 38214                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 38215  009906  010E               	movlb	14	; () banked
 38216  009908  99C5               	bcf	197,4,b	;volatile
 38217  00990A  0012               	return		;funcret
 38218  00990C                     __end_of_EUSART1_Transmit_ISR:
 38219                           	callstack 0
 38220                           
 38221 ;; *************** function _EUSART1_Receive_ISR *****************
 38222 ;; Defined at:
 38223 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 38224 ;; Parameters:    Size  Location     Type
 38225 ;;		None
 38226 ;; Auto vars:     Size  Location     Type
 38227 ;;		None
 38228 ;; Return value:  Size  Location     Type
 38229 ;;                  1    wreg      void 
 38230 ;; Registers used:
 38231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 38232 ;; Tracked objects:
 38233 ;;		On entry : 3F/2
 38234 ;;		On exit  : 0/0
 38235 ;;		Unchanged: 0/0
 38236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38241 ;;Total ram usage:        0 bytes
 38242 ;; Hardware stack levels used: 1
 38243 ;; Hardware stack levels required when called: 2
 38244 ;; This function calls:
 38245 ;;		Absolute function
 38246 ;;		_EUSART1_DefaultErrorHandler
 38247 ;;		_EUSART1_DefaultFramingErrorHandler
 38248 ;;		_EUSART1_DefaultOverrunErrorHandler
 38249 ;;		_EUSART1_RxDataHandler
 38250 ;; This function is called by:
 38251 ;;		_EUSART1_Initialize
 38252 ;;		_INTERRUPT_InterruptManager
 38253 ;; This function uses a non-reentrant model
 38254 ;;
 38255                           
 38256                           	psect	text206
 38257  00810A                     __ptext206:
 38258                           	callstack 0
 38259  00810A                     _EUSART1_Receive_ISR:
 38260                           	callstack 14
 38261                           
 38262                           ; BSR set to: 2
 38263                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 38264                           
 38265                           ;incstack = 0
 38266  00810A  0E74               	movlw	low _eusart1RxStatusBuffer
 38267  00810C  0100               	movlb	0	; () banked
 38268  00810E  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 38269  008110  6ED9               	movwf	fsr2l,c
 38270  008112  6ADA               	clrf	fsr2h,c
 38271  008114  0E02               	movlw	high _eusart1RxStatusBuffer
 38272  008116  22DA               	addwfc	fsr2h,f,c
 38273  008118  0E00               	movlw	0
 38274  00811A  6EDF               	movwf	indf2,c
 38275                           
 38276                           ; BSR set to: 0
 38277                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 38278  00811C  A49D               	btfss	157,2,c	;volatile
 38279  00811E  D013               	goto	i2u1910_49
 38280                           
 38281                           ; BSR set to: 0
 38282                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 38283  008120  0E74               	movlw	low _eusart1RxStatusBuffer
 38284  008122  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 38285  008124  6ED9               	movwf	fsr2l,c
 38286  008126  6ADA               	clrf	fsr2h,c
 38287  008128  0E02               	movlw	high _eusart1RxStatusBuffer
 38288  00812A  22DA               	addwfc	fsr2h,f,c
 38289  00812C  0102               	movlb	2	; () banked
 38290  00812E  82DF               	bsf	indf2,1,c
 38291                           
 38292                           ; BSR set to: 2
 38293                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 38294  008130  D801               	call	i2u1910_48
 38295  008132  D009               	goto	i2u1910_49
 38296  008134                     i2u1910_48:
 38297  008134  0005               	push	
 38298  008136  6EFA               	movwf	pclath,c
 38299  008138  51E9               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 38300  00813A  6EFD               	movwf	tosl,c
 38301  00813C  51EA               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 38302  00813E  6EFE               	movwf	tosh,c
 38303  008140  6AFF               	clrf	tosu,c
 38304  008142  50FA               	movf	pclath,w,c
 38305  008144  0012               	return		;indir
 38306  008146                     i2u1910_49:
 38307                           
 38308                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 38309  008146  A29D               	btfss	157,1,c	;volatile
 38310  008148  D014               	goto	i2u1912_49
 38311                           
 38312                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 38313  00814A  0E74               	movlw	low _eusart1RxStatusBuffer
 38314  00814C  0100               	movlb	0	; () banked
 38315  00814E  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 38316  008150  6ED9               	movwf	fsr2l,c
 38317  008152  6ADA               	clrf	fsr2h,c
 38318  008154  0E02               	movlw	high _eusart1RxStatusBuffer
 38319  008156  22DA               	addwfc	fsr2h,f,c
 38320  008158  0102               	movlb	2	; () banked
 38321  00815A  84DF               	bsf	indf2,2,c
 38322                           
 38323                           ; BSR set to: 2
 38324                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 38325  00815C  D801               	call	i2u1912_48
 38326  00815E  D009               	goto	i2u1912_49
 38327  008160                     i2u1912_48:
 38328  008160  0005               	push	
 38329  008162  6EFA               	movwf	pclath,c
 38330  008164  51E7               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 38331  008166  6EFD               	movwf	tosl,c
 38332  008168  51E8               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 38333  00816A  6EFE               	movwf	tosh,c
 38334  00816C  6AFF               	clrf	tosu,c
 38335  00816E  50FA               	movf	pclath,w,c
 38336  008170  0012               	return		;indir
 38337  008172                     i2u1912_49:
 38338                           
 38339                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 38340  008172  0E74               	movlw	low _eusart1RxStatusBuffer
 38341  008174  0100               	movlb	0	; () banked
 38342  008176  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 38343  008178  6ED9               	movwf	fsr2l,c
 38344  00817A  6ADA               	clrf	fsr2h,c
 38345  00817C  0E02               	movlw	high _eusart1RxStatusBuffer
 38346  00817E  22DA               	addwfc	fsr2h,f,c
 38347  008180  50DF               	movf	indf2,w,c
 38348  008182  B4D8               	btfsc	status,2,c
 38349  008184  D00C               	goto	i2l17020
 38350                           
 38351                           ; BSR set to: 0
 38352                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 38353  008186  D801               	call	i2u1914_48
 38354  008188  0012               	return	
 38355  00818A                     i2u1914_48:
 38356  00818A  0005               	push	
 38357  00818C  6EFA               	movwf	pclath,c
 38358  00818E  0102               	movlb	2	; () banked
 38359  008190  51E5               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 38360  008192  6EFD               	movwf	tosl,c
 38361  008194  51E6               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 38362  008196  6EFE               	movwf	tosh,c
 38363  008198  6AFF               	clrf	tosu,c
 38364  00819A  50FA               	movf	pclath,w,c
 38365  00819C  0012               	return		;indir
 38366  00819E                     i2l17020:
 38367                           
 38368                           ; BSR set to: 0
 38369                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 38370  00819E  EC9F  F04E         	call	_EUSART1_RxDataHandler	;wreg free
 38371  0081A2  0012               	return		;funcret
 38372  0081A4                     __end_of_EUSART1_Receive_ISR:
 38373                           	callstack 0
 38374                           
 38375 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 38376 ;; Defined at:
 38377 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 38378 ;; Parameters:    Size  Location     Type
 38379 ;;		None
 38380 ;; Auto vars:     Size  Location     Type
 38381 ;;		None
 38382 ;; Return value:  Size  Location     Type
 38383 ;;                  1    wreg      void 
 38384 ;; Registers used:
 38385 ;;		None
 38386 ;; Tracked objects:
 38387 ;;		On entry : 3F/2
 38388 ;;		On exit  : 3F/2
 38389 ;;		Unchanged: 3F/0
 38390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38395 ;;Total ram usage:        0 bytes
 38396 ;; Hardware stack levels used: 1
 38397 ;; This function calls:
 38398 ;;		Nothing
 38399 ;; This function is called by:
 38400 ;;		_EUSART1_Initialize
 38401 ;;		_EUSART1_Receive_ISR
 38402 ;; This function uses a non-reentrant model
 38403 ;;
 38404                           
 38405                           	psect	text207
 38406  00A0B0                     __ptext207:
 38407                           	callstack 0
 38408  00A0B0                     _EUSART1_DefaultOverrunErrorHandler:
 38409                           	callstack 15
 38410                           
 38411                           ; BSR set to: 2
 38412                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 38413                           
 38414                           ;incstack = 0
 38415  00A0B0  989D               	bcf	157,4,c	;volatile
 38416                           
 38417                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 38418  00A0B2  889D               	bsf	157,4,c	;volatile
 38419                           
 38420                           ; BSR set to: 2
 38421  00A0B4  0012               	return		;funcret
 38422  00A0B6                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 38423                           	callstack 0
 38424                           
 38425 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 38426 ;; Defined at:
 38427 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 38428 ;; Parameters:    Size  Location     Type
 38429 ;;		None
 38430 ;; Auto vars:     Size  Location     Type
 38431 ;;		None
 38432 ;; Return value:  Size  Location     Type
 38433 ;;                  1    wreg      void 
 38434 ;; Registers used:
 38435 ;;		None
 38436 ;; Tracked objects:
 38437 ;;		On entry : 3F/2
 38438 ;;		On exit  : 3F/2
 38439 ;;		Unchanged: 3F/0
 38440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38445 ;;Total ram usage:        0 bytes
 38446 ;; Hardware stack levels used: 1
 38447 ;; This function calls:
 38448 ;;		Nothing
 38449 ;; This function is called by:
 38450 ;;		_EUSART1_Initialize
 38451 ;;		_EUSART1_Receive_ISR
 38452 ;; This function uses a non-reentrant model
 38453 ;;
 38454                           
 38455                           	psect	text208
 38456  00A0F0                     __ptext208:
 38457                           	callstack 0
 38458  00A0F0                     _EUSART1_DefaultFramingErrorHandler:
 38459                           	callstack 15
 38460                           
 38461                           ; BSR set to: 2
 38462                           
 38463                           ; BSR set to: 2
 38464                           ;incstack = 0
 38465  00A0F0  0012               	return		;funcret
 38466  00A0F2                     __end_of_EUSART1_DefaultFramingErrorHandler:
 38467                           	callstack 0
 38468                           
 38469 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 38470 ;; Defined at:
 38471 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 38472 ;; Parameters:    Size  Location     Type
 38473 ;;		None
 38474 ;; Auto vars:     Size  Location     Type
 38475 ;;		None
 38476 ;; Return value:  Size  Location     Type
 38477 ;;                  1    wreg      void 
 38478 ;; Registers used:
 38479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38480 ;; Tracked objects:
 38481 ;;		On entry : 3F/2
 38482 ;;		On exit  : 3F/0
 38483 ;;		Unchanged: 0/0
 38484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38489 ;;Total ram usage:        0 bytes
 38490 ;; Hardware stack levels used: 1
 38491 ;; Hardware stack levels required when called: 1
 38492 ;; This function calls:
 38493 ;;		_EUSART1_RxDataHandler
 38494 ;; This function is called by:
 38495 ;;		_EUSART1_Initialize
 38496 ;;		_EUSART1_Receive_ISR
 38497 ;; This function uses a non-reentrant model
 38498 ;;
 38499                           
 38500                           	psect	text209
 38501  00A0B6                     __ptext209:
 38502                           	callstack 0
 38503  00A0B6                     _EUSART1_DefaultErrorHandler:
 38504                           	callstack 14
 38505                           
 38506                           ; BSR set to: 2
 38507                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 38508                           
 38509                           ; BSR set to: 2
 38510                           ;incstack = 0
 38511  00A0B6  EC9F  F04E         	call	_EUSART1_RxDataHandler	;wreg free
 38512                           
 38513                           ; BSR set to: 0
 38514  00A0BA  0012               	return		;funcret
 38515  00A0BC                     __end_of_EUSART1_DefaultErrorHandler:
 38516                           	callstack 0
 38517                           
 38518 ;; *************** function _EUSART1_RxDataHandler *****************
 38519 ;; Defined at:
 38520 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 38521 ;; Parameters:    Size  Location     Type
 38522 ;;		None
 38523 ;; Auto vars:     Size  Location     Type
 38524 ;;		None
 38525 ;; Return value:  Size  Location     Type
 38526 ;;                  1    wreg      void 
 38527 ;; Registers used:
 38528 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38529 ;; Tracked objects:
 38530 ;;		On entry : 3D/0
 38531 ;;		On exit  : 3F/0
 38532 ;;		Unchanged: 0/0
 38533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38538 ;;Total ram usage:        0 bytes
 38539 ;; Hardware stack levels used: 1
 38540 ;; This function calls:
 38541 ;;		Nothing
 38542 ;; This function is called by:
 38543 ;;		_EUSART1_Receive_ISR
 38544 ;;		_EUSART1_DefaultErrorHandler
 38545 ;; This function uses a non-reentrant model
 38546 ;;
 38547                           
 38548                           	psect	text210
 38549  009D3E                     __ptext210:
 38550                           	callstack 0
 38551  009D3E                     _EUSART1_RxDataHandler:
 38552                           	callstack 15
 38553                           
 38554                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 38555                           
 38556                           ; BSR set to: 0
 38557                           ;incstack = 0
 38558  009D3E  0E7C               	movlw	low _eusart1RxBuffer
 38559  009D40  0100               	movlb	0	; () banked
 38560  009D42  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 38561  009D44  6ED9               	movwf	fsr2l,c
 38562  009D46  6ADA               	clrf	fsr2h,c
 38563  009D48  0E02               	movlw	high _eusart1RxBuffer
 38564  009D4A  22DA               	addwfc	fsr2h,f,c
 38565  009D4C  CF99 FFDF          	movff	3993,indf2	;volatile
 38566                           
 38567                           ; BSR set to: 0
 38568  009D50  2B95               	incf	_eusart1RxHead& (0+255),f,b	;volatile
 38569                           
 38570                           ; BSR set to: 0
 38571                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 38572  009D52  0E07               	movlw	7
 38573  009D54  6595               	cpfsgt	_eusart1RxHead& (0+255),b
 38574  009D56  D002               	goto	i2l13248
 38575                           
 38576                           ; BSR set to: 0
 38577                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 38578  009D58  0E00               	movlw	0
 38579  009D5A  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 38580  009D5C                     i2l13248:
 38581                           
 38582                           ; BSR set to: 0
 38583                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 38584  009D5C  2B93               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 38585                           
 38586                           ; BSR set to: 0
 38587  009D5E  0012               	return		;funcret
 38588  009D60                     __end_of_EUSART1_RxDataHandler:
 38589                           	callstack 0
 38590                           
 38591                           	psect	text211
 38592  000000                     __ptext211:
 38593                           	callstack 0
 38594                           
 38595                           	psect	rparam
 38596  0000                     
 38597                           	psect	temp
 38598  000050                     btemp:
 38599                           	callstack 0
 38600  000050                     	ds	1
 38601  0000                     int$flags	set	btemp
 38602  0000                     wtemp8	set	btemp+1
 38603  0000                     ttemp5	set	btemp+1
 38604  0000                     ttemp6	set	btemp+4
 38605  0000                     ttemp7	set	btemp+8
 38606                           
 38607                           	psect	idloc
 38608                           
 38609                           ;Config register IDLOC0 @ 0x200000
 38610                           ;	unspecified, using default values
 38611  200000                     	org	2097152
 38612  200000  0FFF               	dw	4095
 38613                           
 38614                           ;Config register IDLOC1 @ 0x200002
 38615                           ;	unspecified, using default values
 38616  200002                     	org	2097154
 38617  200002  0FFF               	dw	4095
 38618                           
 38619                           ;Config register IDLOC2 @ 0x200004
 38620                           ;	unspecified, using default values
 38621  200004                     	org	2097156
 38622  200004  0FFF               	dw	4095
 38623                           
 38624                           ;Config register IDLOC3 @ 0x200006
 38625                           ;	unspecified, using default values
 38626  200006                     	org	2097158
 38627  200006  0FFF               	dw	4095
 38628                           
 38629                           ;Config register IDLOC4 @ 0x200008
 38630                           ;	unspecified, using default values
 38631  200008                     	org	2097160
 38632  200008  0FFF               	dw	4095
 38633                           
 38634                           ;Config register IDLOC5 @ 0x20000A
 38635                           ;	unspecified, using default values
 38636  20000A                     	org	2097162
 38637  20000A  0FFF               	dw	4095
 38638                           
 38639                           ;Config register IDLOC6 @ 0x20000C
 38640                           ;	unspecified, using default values
 38641  20000C                     	org	2097164
 38642  20000C  0FFF               	dw	4095
 38643                           
 38644                           ;Config register IDLOC7 @ 0x20000E
 38645                           ;	unspecified, using default values
 38646  20000E                     	org	2097166
 38647  20000E  0FFF               	dw	4095
 38648                           
 38649                           	psect	config
 38650                           
 38651                           ;Config register CONFIG1L @ 0x300000
 38652                           ;	External Oscillator mode Selection bits
 38653                           ;	FEXTOSC = OFF, Oscillator not enabled
 38654                           ;	Power-up default value for COSC bits
 38655                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 38656  300000                     	org	3145728
 38657  300000  8C                 	db	140
 38658                           
 38659                           ;Config register CONFIG1H @ 0x300001
 38660                           ;	Clock Out Enable bit
 38661                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 38662                           ;	Clock Switch Enable bit
 38663                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 38664                           ;	Fail-Safe Clock Monitor Enable bit
 38665                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 38666  300001                     	org	3145729
 38667  300001  FF                 	db	255
 38668                           
 38669                           ;Config register CONFIG2L @ 0x300002
 38670                           ;	Master Clear Enable bit
 38671                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 38672                           ;	Power-up Timer Enable bit
 38673                           ;	PWRTE = ON, Power up timer enabled
 38674                           ;	Low-power BOR enable bit
 38675                           ;	LPBOREN = OFF, ULPBOR disabled
 38676                           ;	Brown-out Reset Enable bits
 38677                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 38678  300002                     	org	3145730
 38679  300002  FD                 	db	253
 38680                           
 38681                           ;Config register CONFIG2H @ 0x300003
 38682                           ;	Brown Out Reset Voltage selection bits
 38683                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 38684                           ;	ZCD Disable bit
 38685                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 38686                           ;	PPSLOCK bit One-Way Set Enable bit
 38687                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 38688                           ;	Stack Full/Underflow Reset Enable bit
 38689                           ;	STVREN = ON, Stack full/underflow will cause Reset
 38690                           ;	Debugger Enable bit
 38691                           ;	DEBUG = OFF, Background debugger disabled
 38692                           ;	Extended Instruction Set Enable bit
 38693                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 38694  300003                     	org	3145731
 38695  300003  FF                 	db	255
 38696                           
 38697                           ;Config register CONFIG3L @ 0x300004
 38698                           ;	WDT Period Select bits
 38699                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 38700                           ;	WDT operating mode
 38701                           ;	WDTE = SWDTEN, WDT enabled/disabled by SWDTEN bit
 38702  300004                     	org	3145732
 38703  300004  BF                 	db	191
 38704                           
 38705                           ;Config register CONFIG3H @ 0x300005
 38706                           ;	WDT Window Select bits
 38707                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 38708                           ;	WDT input clock selector
 38709                           ;	WDTCCS = SC, Software Control
 38710  300005                     	org	3145733
 38711  300005  FF                 	db	255
 38712                           
 38713                           ;Config register CONFIG4L @ 0x300006
 38714                           ;	Write Protection Block 0
 38715                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 38716                           ;	Write Protection Block 1
 38717                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 38718                           ;	Write Protection Block 2
 38719                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 38720                           ;	Write Protection Block 3
 38721                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 38722  300006                     	org	3145734
 38723  300006  FF                 	db	255
 38724                           
 38725                           ;Config register CONFIG4H @ 0x300007
 38726                           ;	Configuration Register Write Protection bit
 38727                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 38728                           ;	Boot Block Write Protection bit
 38729                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 38730                           ;	Data EEPROM Write Protection bit
 38731                           ;	WRTD = OFF, Data EEPROM not write-protected
 38732                           ;	Scanner Enable bit
 38733                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
 38734                           ;	Low Voltage Programming Enable bit
 38735                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
 38736  300007                     	org	3145735
 38737  300007  DF                 	db	223
 38738                           
 38739                           ;Config register CONFIG5L @ 0x300008
 38740                           ;	UserNVM Program Memory Code Protection bit
 38741                           ;	CP = ON, UserNVM code protection enabled
 38742                           ;	DataNVM Memory Code Protection bit
 38743                           ;	CPD = ON, DataNVM code protection enabled
 38744  300008                     	org	3145736
 38745  300008  FC                 	db	252
 38746                           
 38747                           ;Config register CONFIG5H @ 0x300009
 38748                           ;	unspecified, using default values
 38749  300009                     	org	3145737
 38750  300009  FF                 	db	255
 38751                           
 38752                           ;Config register CONFIG6L @ 0x30000A
 38753                           ;	Table Read Protection Block 0
 38754                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 38755                           ;	Table Read Protection Block 1
 38756                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 38757                           ;	Table Read Protection Block 2
 38758                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 38759                           ;	Table Read Protection Block 3
 38760                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 38761  30000A                     	org	3145738
 38762  30000A  FF                 	db	255
 38763                           
 38764                           ;Config register CONFIG6H @ 0x30000B
 38765                           ;	Boot Block Table Read Protection bit
 38766                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 38767  30000B                     	org	3145739
 38768  30000B  FF                 	db	255
 38769                           tosu	equ	0xFFF
 38770                           tosh	equ	0xFFE
 38771                           tosl	equ	0xFFD
 38772                           stkptr	equ	0xFFC
 38773                           pclatu	equ	0xFFB
 38774                           pclath	equ	0xFFA
 38775                           pcl	equ	0xFF9
 38776                           tblptru	equ	0xFF8
 38777                           tblptrh	equ	0xFF7
 38778                           tblptrl	equ	0xFF6
 38779                           tablat	equ	0xFF5
 38780                           prodh	equ	0xFF4
 38781                           prodl	equ	0xFF3
 38782                           indf0	equ	0xFEF
 38783                           postinc0	equ	0xFEE
 38784                           postdec0	equ	0xFED
 38785                           preinc0	equ	0xFEC
 38786                           plusw0	equ	0xFEB
 38787                           fsr0h	equ	0xFEA
 38788                           fsr0l	equ	0xFE9
 38789                           wreg	equ	0xFE8
 38790                           indf1	equ	0xFE7
 38791                           postinc1	equ	0xFE6
 38792                           postdec1	equ	0xFE5
 38793                           preinc1	equ	0xFE4
 38794                           plusw1	equ	0xFE3
 38795                           fsr1h	equ	0xFE2
 38796                           fsr1l	equ	0xFE1
 38797                           bsr	equ	0xFE0
 38798                           indf2	equ	0xFDF
 38799                           postinc2	equ	0xFDE
 38800                           postdec2	equ	0xFDD
 38801                           preinc2	equ	0xFDC
 38802                           plusw2	equ	0xFDB
 38803                           fsr2h	equ	0xFDA
 38804                           fsr2l	equ	0xFD9
 38805                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    32
    Data        46
    BSS         825
    Persistent  19
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      79
    BANK0           160     36     158
    BANK1           256      0     255
    BANK2           256      7     252
    BANK3           256      0     247
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_DO_TX$8409$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8415$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8421$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX_EMPTY$8427$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8426	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8421	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_RX$8420	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8415	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_TX$8414	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX$8409	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_MasterFsm$8408	const PTR FTN()enum E10442 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$0$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    eusartparser@package	PTR struct package_t size(2) Largest target is 7
		 -> main@package(BANK2[7]), 

    confirmpackage@package	PTR struct package_t size(2) Largest target is 7
		 -> updateChangesToUart@package(COMRAM[7]), main@package(BANK2[7]), 

    read_eusartparser@package	PTR struct package_t size(2) Largest target is 7
		 -> updateChangesToUart@package(COMRAM[7]), main@package(BANK2[7]), 

    init_package@package	PTR struct package_t size(2) Largest target is 7
		 -> updateChangesToUart@package(COMRAM[7]), main@package(BANK2[7]), 

    sm_send_event@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_send_event@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_get_current_state@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_get_current_state@psm	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_init@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_init@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_execute_menuConfiguration@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_menuConfiguration@psm	PTR struct . size(2) Largest target is 12
		 -> menuConfiguration_stateMachine(BANK2[11]), 

    S6625$Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    edit_Param.Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM.walkTime(BANK0[1]), var_sys_NVM.softStart(BANK0[1]), var_sys_NVM.softstop(BANK0[1]), 
		 -> var_sys_NVM.flashRGBMode(BANK0[1]), var_sys_NVM.velocityDecelaration(BANK0[1]), var_sys_NVM.operationMode(BANK0[1]), var_sys_NVM.autoTimeFullClose(BANK0[1]), 
		 -> var_sys_NVM.Stopboton(BANK0[1]), var_sys_NVM.logicDigital(BANK0[1]), var_sys_NVM.Direction_motor(BANK0[1]), var_sys_NVM.folow_me(BANK0[1]), 
		 -> var_sys_NVM.ligthTime(BANK0[1]), var_sys_NVM.autoTimeWalkClose(BANK0[1]), var_sys_NVM.programmingDistance(BANK0[1]), var_sys_NVM.flashLightMode(BANK0[1]), 
		 -> var_sys_NVM.securityBandInOpen(BANK0[1]), var_sys_NVM.securityBandType(BANK0[1]), var_sys_NVM.securityBandIsON(BANK0[1]), var_sys_NVM.photoCellInOpen(BANK0[1]), 
		 -> var_sys_NVM.photoCellIsON(BANK0[1]), var_sys_NVM.decelarationClose(BANK0[1]), var_sys_NVM.motorPower(BANK0[1]), var_sys_NVM.decelarationOpen(BANK0[1]), 
		 -> var_sys_NVM.homemPresente(BANK0[1]), var_sys_NVM.TypeofMotor(BANK0[1]), var_sys_NVM.decelarationSensivity(BANK0[1]), var_sys_NVM.motorSensitivity(BANK0[1]), 
		 -> var_sys_NVM.electricBrake(BANK0[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    sm_execute_main@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_main@psm	PTR struct . size(2) Largest target is 12
		 -> main_stateMachine(BANK1[11]), 

    sm_execute_ControlLearning@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlLearning@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), 

    sm_execute_ControlGate@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlGate@psm	PTR struct . size(2) Largest target is 12
		 -> controlGate_stateMachine(BANK1[11]), 

    decrementTimeslot@ts	PTR int  size(2) Largest target is 72
		 -> ts_system.TimeShowVersion(BANK1[2]), ts_system.TimeLearningDecelaration(BANK1[2]), ts_system.TimeWaitToGetCurrent(BANK1[2]), ts_system.InvertionTimeClosingFromOpen(BANK1[2]), 
		 -> ts_system.TimeWaitReleCapacitor(BANK1[2]), ts_system.TimeInversionStart(BANK1[2]), ts_system.TimeStopedBeforeDecelaration(BANK1[2]), ts_system.TimeWaitToNextState(BANK1[2]), 
		 -> ts_system.timeFreqFlashligth(BANK1[2]), ts_system.timeFreqRGB(BANK1[2]), ts_system.timeWaitToClose(BANK1[2]), ts_system.timeOpenWalk(BANK1[2]), 
		 -> ts_system.timeoutMenu(BANK1[2]), ts_system.timeFreqDigit(BANK1[2]), ts_system.timewaitFlashRGB(BANK1[2]), ts_system.TimeStopElectricBrake(BANK1[2]), 
		 -> ts_system.Debug_TS(BANK1[2]), ts_system.timeSinalizationDigit(BANK1[2]), ts_system.TimeLastCommand(BANK1[2]), ts_system.timeBetweenSaveCounters(BANK1[2]), 
		 -> ts_system.TimeCurrentAlarm(BANK1[2]), ts_system.TimeCurrentWaitForAlarm(BANK1[2]), ts_system.TimeReleCapacitor(BANK1[2]), ts_system.TimeChargeCondesador(BANK1[2]), 
		 -> ts_system.TimeTransitionDecelaration(BANK1[2]), ts_system.timewaitBeforeSoftStart(BANK1[2]), ts_system.timeSoftStart(BANK1[2]), ts_system.TimeElectricBrake(BANK1[2]), 
		 -> ts_system.TimeStopADCZeroOffsetCalc(BANK1[2]), ts_system(BANK1[72]), 

    controlLearning_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    controlGate_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    main_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S4647$parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    menuConfiguration_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    verifyProgramingMode@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloq_classic_decrypt_packet@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecryptPacket_12BIT@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    DecryptPacket_12BIT@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloqDecryptPacket@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    keeloqDecryptPacket@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    getHopCode@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    HopCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    Decrypt@packet	PTR unsigned char  size(2) Largest target is 16
		 -> SecureKeyGen@HOPtemp(COMRAM[4]), NormalKeyGen@Buffer(COMRAM[8]), classic_data(BANK2[16]), 

    NormalKeyGen@serial	PTR unsigned long  size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    sp__getClassicManufCode	PTR void  size(2) Largest target is 8
		 -> DKEY(BANK2[8]), 

    getSerialCmd@serial	PTR unsigned long  size(1) Largest target is 4
		 -> controlSelectRemote@tempSerial(BANK0[4]), 

    SaveNVM_VarSystem@point	PTR unsigned char  size(1) Largest target is 64
		 -> var_sys_NVM(BANK0[64]), 

    ReadSerial@tempSerial	PTR unsigned long  size(1) Largest target is 4
		 -> eusartparser@serial(BANK0[4]), 

    validateRemoteSerialNumber@position	PTR unsigned char  size(2) Largest target is 16
		 -> eusartparser@pos(BANK0[1]), controlSelectRemote@pos(BANK0[1]), classic_data(BANK2[16]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    I2C1_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E10442[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F523@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@i2c1_master_example$F517@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F511@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@i2c1_master_example$F500@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_readDataBlock@data	PTR void  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), 
		 -> memoryTEMP(BANK2[16]), var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    d.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), 
		 -> memoryTEMP(BANK2[16]), var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    S429$data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    i2c_writeNBytes@data	PTR void  size(1) Largest target is 64
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _sm_execute_menuConfiguration->_ResetDefaultMemory
    _sm_execute_menuConfiguration->_setValueToEdit
    _load_New_Menu->_SetSegmentValueIntermitentMain
    _controlSelectRemote->_RemoveSerial
    _controlSelectRemote->_saveNewSerial
    _controlSelectRemote->_validateRemoteSerialNumber
    _getSerialCmd->_memcpy
    _controlSaveRemote->_SetSegmentValueIntermitentMain
    ___awdiv->___lbmod
    _SetSegmentValueMain->___awdiv
    _controlLearnDigit->_SetSegmentValueLearn
    _sm_execute_ControlGate->_sm_execute_ControlLearning
    _generateErrorLearnig->_sm_init
    _sm_init->_sm_restart
    _setPositionInvertionInOpening->_getTimeDecelaration
    _controlVelocity->_getStateOpenPosition
    _getStateOpenPosition->_getTimeDecelaration
    _InitSoftStop->_GetMotorPower
    _CloseOrder->_sm_send_event
    _setPositionInvertionInClosing->_getTimeDecelaration
    _getTimeDecelaration->___lmul
    ___lmul->___lldiv
    _StopOrder->_sm_send_event
    _GetSecurityStateInClosing->_SetSegmentValueIntermitent
    _WaitPreFlash->_sm_send_event
    _OpenFullOrder->_sm_send_event
    _OpenWalkOrder->_sm_send_event
    _sm_send_event->_sm_get_current_state
    _InitSoftStart->_GetMotorPower
    _GetSecurityStateInOpening->_SetSegmentValueIntermitent
    _GetOpenOrder->_SetSegmentValueIntermitentMain
    _SetSegmentValueIntermitentMain->___awdiv
    _read_package->_EUSART1_Read
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _keeloq_classic_decrypt_packet->_NormalKeyGen
    _NormalKeyGen->_Decrypt
    _Decrypt->_memcpy
    _HopCHK->_getHopCode
    _getHopCode->___wmul
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _loadNVM_VarSystem->_ResetDefaultMemory
    _loadNVM_VarSystem->_checkNVM_VarSystem
    _eusartparser->_RemoveSerial
    _eusartparser->_saveNewSerial
    _eusartparser->_validateRemoteSerialNumber
    _validateRemoteSerialNumber->_i2c_readDataBlock
    _updateChangesToUart->_read_eusartparser
    _read_eusartparser->_write_package
    _write_package->_EUSART1_Write
    _confirmpackage->_init_package
    _saveNewSerial->_i2c_writeNBytes
    _cmdMemoryIsEmpty->_i2c_readDataBlock
    _RemoveSerial->_i2c_writeNBytes
    _ReadSerial->_i2c_readDataBlock
    _ShowVersion->_SetSegmentValue
    _SetSegmentValue->___awdiv
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ControlMotor->_VerifyElectricalBrake
    _ControlLights->_setRGB_ON
    _setRGB_ON->_RGB_Set
    _ControlCurrent->_getCurrentComparator
    _refreshCurrent->_sumHIST
    _refreshADCZeroOffset->___lwdiv
    _getCurrentComparator->___wmul
    _SaveNVM_VarSystem->_i2c_writeNBytes
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F523
    _wr2RegCompleteHandler@i2c1_master_example$F523->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F517->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F535->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F511->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F500->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR2_ISR->_ReadADC
    _refreshSegment->_Segments_Set
    _controlTimeslots->_decrementTimeslot
    _ReadADC->_ADCC_GetSingleConversion
    _TMR1_ISR->_controlMotorForce
    _controlMotorForce->i2_GetMotorPower
    _TMR0_ISR->_rxi

Critical Paths under _main in BANK0

    _main->_eusartparser
    _sm_execute_main->_sm_execute_menuConfiguration
    _sm_execute_menuConfiguration->_controlSelectRemote
    _setValueToEdit->_SaveNVM_VarSystem
    _controlSelectRemote->_validateRemoteSerialNumber
    _sm_execute_ControlGate->_actionZone_Opening
    _sm_execute_ControlLearning->_SaveNVM_VarSystem
    _actionZone_Opening->_setPositionInvertionInClosing
    _controlVelocity->_getStateOpenPosition
    _actionZone_Closing->_setPositionInvertionInClosing
    _readRFButtons->_keeloqDecryptPacket
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _loadNVM_VarSystem->_SaveNVM_VarSystem
    _checkNVM_VarSystem->_SaveNVM_VarSystem
    _ResetDefaultMemory->_SaveNVM_VarSystem
    _eusartparser->_validateRemoteSerialNumber
    _ControlCounterMoves->_SaveNVM_VarSystem

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0 8935490
                                              0 BANK2      7     7      0
                _ControlCounterMoves
                     _ControlCurrent
                      _ControlInputs
                      _ControlLights
                       _ControlMotor
                _EUSART1_is_rx_ready
                       _InitReceiver
                  _SYSTEM_Initialize
                    _SetSegmentValue
                        _ShowVersion
                    _WWDT_SoftEnable
                    _WWDT_TimerClear
                    _controlVelocity
                       _eusartparser
                      _getKeyPressed
                  _loadNVM_VarSystem
                         _readInputs
                      _readRFButtons
                       _read_package
                         _readbutton
             _sm_execute_ControlGate
                    _sm_execute_main
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_execute_main                                      4     2      2 3276122
                                             21 BANK0      4     2      2
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                      _load_New_Menu
       _sm_execute_menuConfiguration
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_menuConfiguration                         4     2      2 3249934
                                             17 BANK0      4     2      2
                    _ClearFlag_rfCMD
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___lbdiv
                            ___lldiv
                             ___lmul
                            ___lwdiv
                  _controlLearnDigit
                  _controlSaveRemote
                _controlSelectRemote
                      _load_New_Menu
                     _setValueToEdit
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setValueToEdit                                       7     6      1  719702
                                             57 COMRAM     1     0      1
                                              4 BANK0      6     6      0
                       _InitReceiver
                  _SaveNVM_VarSystem
                   _cmdMemoryIsEmpty
                      _load_New_Menu
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) _load_New_Menu                                        4     4      0    7475
                                             31 COMRAM     4     4      0
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
 ---------------------------------------------------------------------------------
 (4) _InitReceiver                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlSelectRemote                                  9     9      0 1778943
                                              8 BANK0      9     9      0
                    _ClearFlag_rfCMD
                       _RemoveSerial
                  _SaveNVM_VarSystem
                    _SetSegmentValue
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                   _cmdMemoryIsEmpty
                       _getSerialCmd
                      _getTypeRemote
                      _saveNewSerial
                      _sm_send_event
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (4) _getTypeRemote                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _getSerialCmd                                         2     1      1    6667
                                             26 COMRAM     2     1      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _controlSaveRemote                                    1     1      0   21448
                                             31 COMRAM     1     1      0
                    _ClearFlag_rfCMD
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1    1492
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1705
                                             19 COMRAM     8     4      4
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueMain                                  2     1      1    2402
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _ClearFlag_rfCMD                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlLearnDigit                                    0     0      0      31
               _SetSegmentValueLearn
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValueLearn                                 3     3      0      31
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     601
                                             15 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _sm_execute_ControlGate                               5     3      2  633789
                                             15 BANK0      5     3      2
                       _GetOpenOrder
         _SetSegmentValueIntermitent
                       _WaitPreFlash
                  _actionZone_Closed
                 _actionZone_Closing
                  _actionZone_Opened
                 _actionZone_Opening
         _sm_execute_ControlLearning
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_ControlLearning                           5     3      2  372027
                                             57 COMRAM     1     1      0
                                              4 BANK0      4     2      2
                       _GetOpenOrder
                  _SaveNVM_VarSystem
                      _calculateMean
                 _clearLearningValue
               _generateErrorLearnig
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _generateErrorLearnig                                 0     0      0    2622
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_init                                              5     0      5    2622
                                             17 COMRAM     5     0      5
                         _sm_restart
 ---------------------------------------------------------------------------------
 (2) _sm_restart                                           2     0      2     214
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _clearLearningValue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _calculateMean                                       12     4      8    1241
                                             15 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opening                                   3     3      0   52477
                                             12 BANK0      3     3      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
         _SetSegmentValueIntermitent
                          _StopOrder
                     _VerifyFollowMe
                    _controlVelocity
      _setPositionInvertionInClosing
      _setPositionInvertionInOpening
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInOpening                        8     8      0    1207
                                             49 COMRAM     8     8      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (3) _controlVelocity                                      1     1      0    3806
                                              2 BANK0      1     1      0
          _ControlDecelarationFactor
                       _InitSoftStop
               _getStateOpenPosition
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getStateOpenPosition                                11    11      0    2562
                                             49 COMRAM     9     9      0
                                              0 BANK0      2     2      0
                             ___lmul
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _InitSoftStop                                         1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (4) _ControlDecelarationFactor                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opened                                    2     2      0   42796
                                             31 COMRAM     2     2      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                     _VerifyFollowMe
 ---------------------------------------------------------------------------------
 (3) _VerifyFollowMe                                       1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _CloseOrder                                           0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closing                                   2     2      0   58040
                                             49 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
         _SetSegmentValueIntermitent
                          _StopOrder
                             ___lmul
      _setPositionInvertionInClosing
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInClosing                       12    12      0    1207
                                              0 BANK0     12    12      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getTimeDecelaration                                  9     5      4    1207
                                             40 COMRAM     9     5      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8    1176
                                             28 COMRAM    12     4      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _StopOrder                                            0     0      0   11256
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInClosing                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closed                                    2     2      0   65057
                                             31 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                       _WaitPreFlash
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _WaitPreFlash                                         0     0      0   22549
                   _InitFullAutoTime
                      _OpenFullOrder
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _OpenFullOrder                                        0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _InitFullAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OpenWalkOrder                                        4     4      0   11389
                                             23 COMRAM     4     4      0
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_send_event                                        6     2      4   11256
                                             17 COMRAM     6     2      4
               _sm_get_current_state
 ---------------------------------------------------------------------------------
 (3) _sm_get_current_state                                 2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _InitSoftStart                                        1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (3) _InitWalkAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInOpening                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (3) _SetSegmentValueIntermitent                           4     1      3    1893
                                             15 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _GetOpenOrder                                         0     0      0    6454
     _SetSegmentValueIntermitentMain
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1    1861
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueIntermitentMain                       4     1      3    4593
                                             27 COMRAM     4     1      3
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _readbutton                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_package                                        14     7      7     429
                                             16 COMRAM    14     7      7
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      37
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readRFButtons                                        0     0      0  743020
                _DecryptPacket_12BIT
                _keeloqDecryptPacket
 ---------------------------------------------------------------------------------
 (2) _keeloqDecryptPacket                                 10     6      4  385615
                                              8 BANK0     10     6      4
                             _DecCHK
                             _HopCHK
      _keeloq_classic_decrypt_packet
                             _memcpy
         _validateRemoteSerialNumber
               _verifyProgramingMode
 ---------------------------------------------------------------------------------
 (3) _verifyProgramingMode                                 3     1      2     152
                                             15 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _keeloq_classic_decrypt_packet                        5     3      2   23218
                                             55 COMRAM     2     0      2
                                              0 BANK0      3     3      0
                            _Decrypt
                       _NormalKeyGen
 ---------------------------------------------------------------------------------
 (4) _NormalKeyGen                                        18    16      2   15069
                                             37 COMRAM    18    16      2
                            _Decrypt
                      _LoadManufCode
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _LoadManufCode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Decrypt                                             11     9      2    7935
                                             26 COMRAM    11     9      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _HopCHK                                               4     2      2    3969
                                             35 COMRAM     4     2      2
                          _ReqResync
                         _getHopCode
 ---------------------------------------------------------------------------------
 (4) _getHopCode                                          14    12      2    3541
                                             21 COMRAM    14    12      2
                          _ReqResync
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _ReqResync                                            2     0      2     211
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _DecCHK                                               4     2      2     242
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DecryptPacket_12BIT                                  5     1      4  357405
                                              8 BANK0      5     1      4
                             _memcpy
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (1) _readInputs                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loadNVM_VarSystem                                    0     0      0 1742040
             _I2C1_Read1ByteRegister
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
                 _checkNVM_VarSystem
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (2) _checkNVM_VarSystem                                   1     1      0  349391
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (3) _ResetDefaultMemory                                   1     1      0  349369
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (2) _I2C1_Read1ByteRegister                               3     2      1  345691
                                             33 COMRAM     3     2      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _getKeyPressed                                        1     1      0      37
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _eusartparser                                        35    33      2 2172772
                                              8 BANK0     28    26      2
                         _ReadSerial
                       _RemoveSerial
                  _SaveNVM_VarSystem
                   _cmdMemoryIsEmpty
                     _confirmpackage
                  _read_eusartparser
                      _saveNewSerial
                _updateChangesToUart
         _validateRemoteSerialNumber
                 _write_eusartparser
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_eusartparser                                  19    12      7    1966
                                             15 COMRAM    19    12      7
 ---------------------------------------------------------------------------------
 (4) _validateRemoteSerialNumber                          21    14      7  350496
                                             45 COMRAM    13     6      7
                                              0 BANK0      8     8      0
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (2) _updateChangesToUart                                  8     8      0   32952
                                             27 COMRAM     8     8      0
                     _confirmpackage
                       _init_package
                  _read_eusartparser
                      _write_package
 ---------------------------------------------------------------------------------
 (3) _read_eusartparser                                    4     2      2   13925
                                             23 COMRAM     4     2      2
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_package                                        7     0      7    8757
                                             16 COMRAM     7     0      7
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      62
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _confirmpackage                                       3     0      3    8222
                                             17 COMRAM     3     0      3
                       _init_package
 ---------------------------------------------------------------------------------
 (3) _init_package                                         2     0      2     338
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _saveNewSerial                                        8     3      5  349810
                                             57 COMRAM     1     1      0
                                              0 BANK0      7     2      5
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (4) _cmdMemoryIsEmpty                                     8     7      1  350671
                                             45 COMRAM     8     7      1
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (4) _RemoveSerial                                         8     7      1  349543
                                             57 COMRAM     1     0      1
                                              0 BANK0      7     7      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (2) _ReadSerial                                           5     3      2  348828
                                             45 COMRAM     5     3      2
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (5) _i2c_readDataBlock                                   12     6      6  348313
                                             33 COMRAM    12     6      6
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _WWDT_TimerClear                                      2     2      0      40
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WWDT_SoftEnable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ShowVersion                                          0     0      0     602
                    _SetSegmentValue
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValue                                      2     1      1     602
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     968
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _WWDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WWDT_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     121
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     121
                                             17 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlMotor                                         7     7      0     319
                                             17 COMRAM     7     7      0
              _VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (2) _VerifyElectricalBrake                                2     2      0     161
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ControlLights                                        0     0      0    1958
                   _setFlashLigth_ON
                          _setRGB_ON
 ---------------------------------------------------------------------------------
 (2) _setRGB_ON                                            5     3      2    1235
                                             16 COMRAM     5     3      2
                            _RGB_Set
 ---------------------------------------------------------------------------------
 (3) _RGB_Set                                              1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setFlashLigth_ON                                     2     0      2     723
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ControlInputs                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlCurrent                                       4     4      0    5060
                                             34 COMRAM     4     4      0
                      _GetMotorPower
               _getCurrentComparator
               _refreshADCZeroOffset
                     _refreshCurrent
 ---------------------------------------------------------------------------------
 (2) _refreshCurrent                                       0     0      0     820
                  _saveEnergyADCHist
                       _sumEnergyADC
                            _sumHIST
 ---------------------------------------------------------------------------------
 (3) _sumHIST                                             17    13      4     461
                                             15 COMRAM    17    13      4
 ---------------------------------------------------------------------------------
 (3) _sumEnergyADC                                         9     7      2     238
                                             15 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _saveEnergyADCHist                                    2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _refreshADCZeroOffset                                 3     3      0    1186
                                             22 COMRAM     3     3      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     781
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _getCurrentComparator                                13     9      4    3017
                                             21 COMRAM    13     9      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2878
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _GetMotorPower                                        4     4      0      37
                                             15 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ControlCounterMoves                                  0     0      0  349276
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (4) _SaveNVM_VarSystem                                    4     4      0  349276
                                              0 BANK0      4     4      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (5) _i2c_writeNBytes                                     24    19      5  349112
                                             33 COMRAM    24    19      5
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6    6478
                                             15 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetAddressNackCallback                          4     0      4    2859
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_Open                                            2     2      0      68
                                             15 COMRAM     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWrite                                     0     0      0  334109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOperation                                 2     2      0  334109
                                             31 COMRAM     2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (8) _I2C1_Poller                                          0     0      0  334041
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterFsm                                       3     3      0  334041
                                             28 COMRAM     3     3      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX_EMPTY                                    2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX                                          2     2      0   83518
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_WRITE                              0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_READ                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendTxData                               1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_ACK                                      0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX                                          2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_STOP                                0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RESET                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RCEN                                        0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_ADDRESS_NACK                                2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler@i2c1_master_example$F523      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler@i2c1_master_example$F517      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler@i2c1_master_example$F535    2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler@i2c1_master_example$F511      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler@i2c1_master_example$F500      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetDataCompleteCallback                         4     0      4    4339
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (7) _I2C1_SetCallback                                     5     1      4     997
                                             15 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetBuffer                                       4     0      4    3942
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnStop                             2     0      2       0
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnReset                            2     0      2     305
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Close                                           1     1      0      37
                                             15 COMRAM     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          6     6      0    2657
                                              9 COMRAM     6     6      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR2_ISR                                            0     0      0    2292
                   Absolute function *
                            _ReadADC
       _TMR2_DefaultInterruptHandler *
                   _controlTimeslots
                     _refreshSegment
 ---------------------------------------------------------------------------------
 (16) _refreshSegment                                      0     0      0      22
                       _Segments_Set
 ---------------------------------------------------------------------------------
 (17) _Segments_Set                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _controlTimeslots                                    0     0      0    2248
                  _decrementTimeslot
 ---------------------------------------------------------------------------------
 (17) _decrementTimeslot                                   4     2      2    2248
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ReadADC                                             3     3      0      22
                                              1 COMRAM     3     3      0
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetSingleConversion                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0     365
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _controlMotorForce
 ---------------------------------------------------------------------------------
 (16) _controlMotorForce                                   5     5      0     136
                                              4 COMRAM     5     5      0
                    i2_GetMotorPower
            i2_VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (17) i2_VerifyElectricalBrake                             2     2      0     112
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (17) i2_GetMotorPower                                     4     4      0      24
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (16) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                                _rxi
 ---------------------------------------------------------------------------------
 (16) _rxi                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ControlCounterMoves
     _SaveNVM_VarSystem
       _i2c_writeNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
             _I2C1_Poller
               _I2C1_MasterFsm
                 _I2C1_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                     _I2C1_MasterEnableRestart
                   _I2C1_DO_SEND_STOP *
                     _I2C1_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                       _I2C1_SetCallback
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                 _I2C1_DO_IDLE *
                 _I2C1_DO_RCEN *
                   _I2C1_MasterStartRx
                 _I2C1_DO_RESET *
                 _I2C1_DO_RX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_MasterSendNack
                   _I2C1_DO_RX_NACK_STOP *
                     _I2C1_MasterSendNack
                   _I2C1_MasterGetRxData *
                   _I2C1_MasterSendAck *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_RX_ACK *
                   _I2C1_MasterSendAck
                 _I2C1_DO_RX_NACK_RESTART *
                 _I2C1_DO_RX_NACK_STOP *
                 _I2C1_DO_SEND_ADR_READ *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_ADR_WRITE *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_RESTART *
                 _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                 _I2C1_DO_TX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterIsNack *
                   _I2C1_MasterSendTxData *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterSetIrq *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_MasterClearIrq *
                 _I2C1_MasterIsNack *
               _I2C1_MasterWaitForEvent
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterOpen
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
         _memcpy
   _ControlCurrent
     _GetMotorPower
     _getCurrentComparator
       ___wmul
     _refreshADCZeroOffset
       ___lwdiv
     _refreshCurrent
       _saveEnergyADCHist
       _sumEnergyADC
       _sumHIST
   _ControlInputs
   _ControlLights
     _setFlashLigth_ON
     _setRGB_ON
       _RGB_Set
   _ControlMotor
     _VerifyElectricalBrake
   _EUSART1_is_rx_ready
   _InitReceiver
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WWDT_Initialize
   _SetSegmentValue
     ___awdiv (ARG)
       ___lbmod (ARG)
     ___lbmod (ARG)
   _ShowVersion
     _SetSegmentValue
   _WWDT_SoftEnable
   _WWDT_TimerClear
   _controlVelocity
     _ControlDecelarationFactor
     _InitSoftStop
       _GetMotorPower
     _getStateOpenPosition
       ___lmul
         ___lldiv (ARG)
       _getTimeDecelaration
         ___lmul
     _getTimeDecelaration
   _eusartparser
     _ReadSerial
       _i2c_readDataBlock
         _I2C1_Close
         _I2C1_MasterWrite
         _I2C1_Open
         _I2C1_SetAddressNackCallback
         _I2C1_SetBuffer
         _I2C1_SetDataCompleteCallback
     _RemoveSerial
       _i2c_writeNBytes
     _SaveNVM_VarSystem
     _cmdMemoryIsEmpty
       _i2c_readDataBlock
     _confirmpackage
       _init_package
     _read_eusartparser
       _write_package
         _EUSART1_Write
     _saveNewSerial
       _i2c_writeNBytes
     _updateChangesToUart
       _confirmpackage
       _init_package
       _read_eusartparser
       _write_package
     _validateRemoteSerialNumber
       _i2c_readDataBlock
     _write_eusartparser
     _write_package
   _getKeyPressed
   _loadNVM_VarSystem
     _I2C1_Read1ByteRegister
       _I2C1_Close
       _I2C1_MasterWrite
       _I2C1_Open
       _I2C1_SetAddressNackCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
     _ResetDefaultMemory
       _SaveNVM_VarSystem
     _SaveNVM_VarSystem
     _checkNVM_VarSystem
       _SaveNVM_VarSystem
     _i2c_readDataBlock
   _readInputs
   _readRFButtons
     _DecryptPacket_12BIT
       _memcpy
       _validateRemoteSerialNumber
     _keeloqDecryptPacket
       _DecCHK
       _HopCHK
         _ReqResync
         _getHopCode
           _ReqResync
           ___wmul
       _keeloq_classic_decrypt_packet
         _Decrypt
           _memcpy
         _NormalKeyGen
           _Decrypt
           _LoadManufCode
           _memcpy
       _memcpy
       _validateRemoteSerialNumber
       _verifyProgramingMode
   _read_package
     _EUSART1_Read
   _readbutton
   _sm_execute_ControlGate
     _GetOpenOrder
       _SetSegmentValueIntermitentMain
         ___awdiv (ARG)
         ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbdiv
     _SetSegmentValueIntermitent
     _WaitPreFlash
       _InitFullAutoTime
       _OpenFullOrder
         _InitSoftStart
           _GetMotorPower
         _sm_send_event
           _sm_get_current_state
       _sm_send_event
     _actionZone_Closed
       _GetOpenOrder
       _GetSecurityStateInOpening
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
         _InitSoftStart
         _sm_send_event
       _WaitPreFlash
       _sm_send_event
     _actionZone_Closing
       _GetOpenOrder
       _GetSecurityStateInClosing
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _SetSegmentValueIntermitent
       _StopOrder
         _sm_send_event
       ___lmul
       _setPositionInvertionInClosing
         _getTimeDecelaration
       _sm_send_event
     _actionZone_Opened
       _CloseOrder
         _InitSoftStart
         _sm_send_event
       _GetOpenOrder
       _GetSecurityStateInClosing
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _VerifyFollowMe
     _actionZone_Opening
       _CloseOrder
       _GetOpenOrder
       _GetSecurityStateInClosing
       _GetSecurityStateInOpening
       _InitFullAutoTime
       _InitWalkAutoTime
       _SetSegmentValueIntermitent
       _StopOrder
       _VerifyFollowMe
       _controlVelocity
       _setPositionInvertionInClosing
       _setPositionInvertionInOpening
         _getTimeDecelaration
       _sm_send_event
     _sm_execute_ControlLearning
       _GetOpenOrder
       _SaveNVM_VarSystem
       _calculateMean
       _clearLearningValue
       _generateErrorLearnig
         _sm_init
           _sm_restart
       _sm_send_event
     _sm_send_event
   _sm_execute_main
     _SetSegmentValueIntermitentMain
     _SetSegmentValueMain
       ___awdiv (ARG)
       ___lbdiv (ARG)
       ___lbmod (ARG)
     _load_New_Menu
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
     _sm_execute_menuConfiguration
       _ClearFlag_rfCMD
       _ResetDefaultMemory
       _SaveNVM_VarSystem
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
       ___lbdiv
       ___lldiv
       ___lmul
       ___lwdiv
       _controlLearnDigit
         _SetSegmentValueLearn
       _controlSaveRemote
         _ClearFlag_rfCMD
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _sm_send_event
       _controlSelectRemote
         _ClearFlag_rfCMD
         _RemoveSerial
         _SaveNVM_VarSystem
         _SetSegmentValue
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _cmdMemoryIsEmpty
         _getSerialCmd
           _memcpy
         _getTypeRemote
         _saveNewSerial
         _sm_send_event
         _validateRemoteSerialNumber
       _load_New_Menu
       _setValueToEdit
         _InitReceiver
         _SaveNVM_VarSystem
         _cmdMemoryIsEmpty
         _load_New_Menu
         _sm_send_event
       _sm_send_event
     _sm_send_event
   _sm_init

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _rxi *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _controlMotorForce *
       i2_GetMotorPower
       i2_VerifyElectricalBrake
   _TMR2_ISR *
     Absolute function(Fake) *
     _ReadADC *
       _ADCC_GetSingleConversion
     _TMR2_DefaultInterruptHandler *
     _controlTimeslots *
       _decrementTimeslot
     _refreshSegment *
       _Segments_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      7      FC       9       98.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     24      9E       5       98.8%
BITBANK14           88      0       0      32        0.0%
BANK14              88      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4F       1       84.0%
BITBIGSFRllll       28      0       0      59        0.0%
BITBIGSFRhlllll     27      0       0      42        0.0%
BITBIGSFRhhllll     1B      0       0      37        0.0%
BITBIGSFRhhlh       1A      0       0      35        0.0%
BITBIGSFRhlllll     13      0       0      48        0.0%
BITBIGSFRhlllhh      F      0       0      41        0.0%
BITBIGSFRhlllll      E      0       0      46        0.0%
BITBIGSFRhhh         D      0       0      34        0.0%
BITBIGSFRhhllll      C      0       0      36        0.0%
BITBIGSFRllh         9      0       0      57        0.0%
BITBIGSFRhlllll      4      0       0      52        0.0%
BITBIGSFRhlllll      3      0       0      44        0.0%
BITBIGSFRhlllll      3      0       0      43        0.0%
BITBIGSFRhlllll      3      0       0      53        0.0%
BITBIGSFRhlllll      3      0       0      55        0.0%
BITBIGSFRhlllll      2      0       0      47        0.0%
BITBIGSFRhlllhh      2      0       0      40        0.0%
BITBIGSFRhlllll      2      0       0      49        0.0%
BITBIGSFRhlllll      2      0       0      54        0.0%
BITBIGSFRlh          2      0       0      56        0.0%
BITBIGSFRlllh        1      0       0      58        0.0%
BITBIGSFRhlllll      1      0       0      45        0.0%
BITBIGSFRhlllll      1      0       0      50        0.0%
BITBIGSFRhlllll      1      0       0      51        0.0%
BITBIGSFRhlllhh      1      0       0      39        0.0%
BITBIGSFRhlllhh      1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3DF      60        0.0%
DATA                 0      0     3DF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Sep 01 14:09:22 2022

                                        ?_ClearFlag_rfCMD 0001  
                              cmdMemoryIsEmpty@tempSerial 0032  
                                           _Counterchoose 0092  
                        __end_of_TMR2_SetInterruptHandler 9FD2  
                                _eusart1TxBufferRemaining 01FD  
                            SetSegmentValueIntermitent@d1 0013  
                            SetSegmentValueIntermitent@d2 0010  
                                    ??_checkNVM_VarSystem 003A  
                                            ___awdiv@sign 0019  
                                     ___wmul@multiplicand 0012  
                           __end_of_VerifyElectricalBrake 8A08  
                                           _LoadManufCode 9CD8  
                                        ?_SetSegmentValue 001C  
                                                     l100 96AA  
                            ??_sm_execute_ControlLearning 00DE  
                                                     l674 84D6  
                                                     l690 893E  
                                                     _GIE 007F97  
                                                     _Hop 007C  
                                   ?_I2C1_MasterOperation 0001  
                                         _timer1ReloadVal 02E1  
                                 keeloqDecryptPacket@data 00E0  
                                                     _rxi 501C  
                                  ControlMotor@stateMotor 0018  
                                         _TMR2_Initialize 99C2  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                  ?_I2C1_MasterSendTxData 0001  
                                       load_New_Menu@Menu 0022  
                                    _I2C1_DO_RX_NACK_STOP A04E  
                               ?_I2C1_MasterEnableRestart 0001  
                                       _SaveNVM_VarSystem 980A  
                        validateRemoteSerialNumber@serial 002E  
                                    I2C1_SetBuffer@buffer 0010  
                                       getKeyPressed@temp 0010  
                                     eusartparser@package 00E0  
                                   getCurrentComparator@x 0022  
                                      ?_SaveNVM_VarSystem 0001  
                                 ??_rd2RegCompleteHandler 001B  
                                                    l2044 8ECE  
                                                    l1405 6D82  
                                       readRFButtons@key1 0088  
                                                    l3102 3E90  
                                                    l2039 8EC2  
                                                    l2311 5B6E  
                                                    l2240 7CBE  
                                                    l2323 89FA  
                                                    l2403 572C  
                                                    l1372 95A8  
                                                    l1436 62B4  
                                                    l1524 6284  
                                                    l1357 779C  
                                                    l1517 6238  
                                                    l3053 3BDC  
                                                    l1366 791E  
                                                    l2254 7486  
                                                    l1383 64B8  
                                                    l2415 47AA  
                                                    l2328 8A04  
                                                    l2353 5650  
                                                    l3233 1A4C  
                                                    l3065 3D6C  
                                                    l2370 5648  
                                                    l1491 91B4  
                                                    l2507 835C  
                                                    l2443 491C  
                                                    l1731 75C2  
                                                    l1388 6540  
                                                    l2516 97A8  
                                                    l2380 5720  
                                                    l1740 7628  
                                                    l1732 75CA  
                                                    l1742 7644  
                                                    l1654 6800  
                                                    l2519 97CE  
                                                    l1495 611A  
                                                    l1743 764C  
                                                    l2376 565C  
                                                    l1736 75FC  
                                                    l3088 3DB2  
                                                    l1745 7668  
                                                    l1737 7604  
                                                    l1657 6876  
                                                    l4306 93AC  
                                                    l1746 7670  
                                                    l2810 501A  
                                                    l2730 5C90  
                                                    l1739 7620  
                                                    l1667 68BE  
                                                    l2723 54E4  
                                                    l3620 2EEE  
                                                    l1748 769A  
                                                    l3444 3A6A  
                                                    l3380 370A  
                                                    l3372 36D0  
                                                    l2477 4A32  
                                                    l2397 5718  
                                                    l1861 7BA8  
                                                    l3517 9048  
                                                    l2653 45E2  
                                                    l3438 3A38  
                                                    l3390 384E  
                                                    l3358 3610  
                                                    l2727 5B9A  
                                                    l3391 386E  
                                                    l3640 309E  
                                                    l3632 3070  
                                                    l2912 23E6  
                                                    l3641 30A8  
                                                    l2585 8BD8  
                                                    l2729 5BD0  
                                                    l3810 8F54  
                                                    l3642 30AE  
                                                    l3634 307A  
                                                    l3651 30DC  
                                                    l3643 30B4  
                                                    l3635 3084  
                                                    l1859 7B98  
                                                    l3660 3106  
                                                    l3644 30BA  
                                                    l3661 310C  
                                                    l3653 30E2  
                                                    l3645 30C0  
                                                    l3637 308A  
                                                    l1869 7BCC  
                                                    l2773 4E36  
                                                    l3493 7E62  
                                                    l3670 3366  
                                                    l3654 30E8  
                                                    l3646 30C6  
                                                    l3655 30EE  
                                                    l3639 3094  
                                                    l3664 31D6  
                                                    l3656 30F4  
                                                    l3648 30CC  
                                                    l3649 30D2  
                                                    l3658 30FA  
                                                    l3842 878A  
                                                    l3659 3100  
                                                    l3499 993A  
                                                    l3669 335C  
                                                    ?_rxi 0001  
                                                    _DKEY 02D1  
                                                    _LATA 000F83  
                                                    _LATB 000F84  
                                                    _LATC 000F85  
                                                    _LATD 000F86  
                                                    _LATE 000F87  
                                             main@package 02EF  
                                                    _T2PR 000FBC  
                                                    _PMD0 000EE1  
                                                    _PMD1 000EE2  
                                                    _PMD2 000EE3  
                                                    _PMD3 000EE4  
                                                    _PMD4 000EE5  
                                                    _PMD5 000EE6  
                                                    _EHop 028C  
                                           eusartparser@i 00E8  
                                                    _WPUA 000F10  
                                                    _WPUB 000F18  
                                                    _WPUC 000F20  
                                                    _WPUD 000F25  
                                                    _WPUE 000F2D  
                                         __end_of_RGB_Set 9F8A  
                                 ??_wr2RegCompleteHandler 001B  
                                                    _Bptr 008D  
                                        ??_I2C1_MasterFsm 001D  
                                           _EUSART1_Write 9694  
                               ??_I2C1_CallbackReturnStop 001B  
                                __end_of_controlTimeslots 6768  
                                                    _main 6A88  
                                           ?_EUSART1_Read 0001  
                                         ?_confirmpackage 0012  
                                                    _temp 0080  
                                                    fsr1h 000FE2  
                                                    fsr2h 000FDA  
                                                    indf1 000FE7  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                                                    btemp 0050  
                                    saveNewSerial@cmdType 003A  
                                     ??_SaveNVM_VarSystem 003A  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 009C  
                                        ??_I2C1_SetBuffer 0014  
                                          ??_ControlMotor 0012  
                                       ReadSerial@cmdType 0032  
                                         __end_of_Decrypt 7C24  
                                ?i2_VerifyElectricalBrake 0001  
                                        getSerialCmd@temp 001C  
                                           ?_InitReceiver 0001  
                              ??_TMR1_SetInterruptHandler 0012  
                                            ___param_bank 000000  
                                         i2_GetMotorPower 7CEA  
                                         __end_of_ReadADC 9310  
                           I2C1_CallbackReturnStop@funPtr 0019  
                                         ??_getTypeRemote 0010  
                                                   ??_rxi 0001  
                                    __end_of_GetOpenOrder 60F8  
                                 __end_of_TMR0_Initialize 9D1C  
                                          ?_LoadManufCode 0001  
                          ??_TMR0_DefaultInterruptHandler 0001  
                                           ?_InitSoftStop 0001  
                           sm_execute_ControlLearning@psm 00DC  
                           __end_of_OSCILLATOR_Initialize 9EF8  
                      SetSegmentValueIntermitentMain@time 001D  
                                                   l20108 8D64  
                                                   l20300 8488  
                                                   l21012 77B0  
                                                   l20310 8494  
                                                   l20304 848E  
                                                   l21032 7802  
                                                   l21024 77E4  
                                                   l21200 4CA4  
                                                   l20410 94B2  
                                                   l21050 784C  
                                                   l21018 77CA  
                                                   l21210 4D28  
                                                   l22002 3646  
                                                   l20340 8942  
                                                   l21044 7832  
                                                   l21036 780E  
                                                   l21028 77F6  
                                                   l21204 4CB6  
                                                   l22100 3814  
                                                   l22004 364E  
                                                   l20318 84FE  
                                                   l20350 894E  
                                                   l20406 94AC  
                                                   l21062 7872  
                                                   l21054 785A  
                                                   l21038 7818  
                                                   l21310 9B9C  
                                                   l21302 9B84  
                                                   l21214 4D64  
                                                   l21206 4D1A  
                                                   l22006 3656  
                                                   l20344 8948  
                                                   l20416 94B8  
                                                   l20432 9328  
                                                   l23000 7758  
                                                   l21160 4ADA  
                                                   l21152 4AC4  
                                                   l22200 39A2  
                                                   l22040 36E6  
                                                   l22024 3676  
                                                   l22016 366A  
                                                   l22008 365E  
                                                   l20370 8F9A  
                                                   l20442 9F76  
                                                   l20522 8716  
                                                   l21410 6A7A  
                                                   l21090 73CE  
                                                   l21082 7390  
                                                   l21058 7866  
                                                   l21066 787C  
                                                   l21250 864C  
                                                   l21154 4ACA  
                                                   l22130 3888  
                                                   l22050 36FA  
                                                   l22042 36EE  
                                                   l22034 3682  
                                                   l20612 9696  
                                                   l20700 7BA4  
                                                   l20604 9274  
                                                   l21252 8654  
                                                   l21244 8636  
                                                   l21180 4B7A  
                                                   l21172 4B1C  
                                                   l21148 4ABA  
                                                   l22220 39E0  
                                                   l22212 39D6  
                                                   l22140 38DA  
                                                   l22132 38B2  
                                                   l20542 9D3A  
                                                   l20366 8F94  
                                                   l20382 8FA8  
                                                   l20438 9F6E  
                                                   l21342 8438  
                                                   l23110 619E  
                                                   l23102 6182  
                                                   l21510 6042  
                                                   l21270 868C  
                                                   l21262 8674  
                                                   l21238 8626  
                                                   l21190 4C20  
                                                   l21182 4B96  
                                                   l21166 4B0C  
                                                   l22206 39CC  
                                                   l22150 3908  
                                                   l22134 38B6  
                                                   l22070 3722  
                                                   l22062 3712  
                                                   l22038 36DE  
                                                   l20376 8FA2  
                                                   l20296 8482  
                                                   l23024 644C  
                                                   l23016 959C  
                                                   l20712 7BC4  
                                                   l20704 7BB0  
                                                   l23200 5E84  
                                                   l21280 97E2  
                                                   l21504 603A  
                                                   l21432 5F6E  
                                                   l21600 8106  
                                                   l20608 9288  
                                                   l21096 7422  
                                                   l21192 4C3C  
                                                   l21184 4BBA  
                                                   l22240 3A0C  
                                                   l22232 3A08  
                                                   l22160 391C  
                                                   l22144 38F4  
                                                   l22080 377C  
                                                   l20474 9A16  
                                                   l20642 8B50  
                                                   l20634 8B14  
                                                   l20570 7C74  
                                                   l20562 7C38  
                                                   l23034 6482  
                                                   l21354 9BDA  
                                                   l21338 83F6  
                                                   l20626 96CA  
                                                   l23130 61E4  
                                                   l23122 61C8  
                                                   l23114 61AC  
                                                   l23106 6190  
                                                   l23202 5E94  
                                                   l21450 5FAC  
                                                   l21426 5F6A  
                                                   l24002 2556  
                                                   l21266 867E  
                                                   l21194 4C58  
                                                   l21186 4BD6  
                                                   l21178 4B4E  
                                                   l22226 39FE  
                                                   l22154 3910  
                                                   l22146 38FE  
                                                   l22138 38BE  
                                                   l22090 378C  
                                                   l20468 9A0A  
                                                   l20548 9620  
                                                   l20556 9640  
                                                   l20572 7C80  
                                                   l23052 6572  
                                                   l23044 6526  
                                                   l23028 6462  
                                                   l21372 7952  
                                                   l20628 96CE  
                                                   l21292 97FE  
                                                   l21284 97E8  
                                                   l21524 6068  
                                                   l21444 5FA8  
                                                   l21540 60B8  
                                                   l24004 2560  
                                                   l21196 4C70  
                                                   l21188 4BF2  
                                                   l22260 3A64  
                                                   l22180 3970  
                                                   l22172 394C  
                                                   l22156 3914  
                                                   l22092 37DA  
                                                   l22076 376A  
                                                   l20582 7CAE  
                                                   l21366 78BA  
                                                   l23310 82FC  
                                                   l23062 8C86  
                                                   l20822 636A  
                                                   l20814 6306  
                                                   l20806 62BC  
                                                   l23150 622A  
                                                   l23142 620E  
                                                   l23134 61F2  
                                                   l23126 61D6  
                                                   l23118 61BA  
                                                   l23070 610C  
                                                   l21622 7FFC  
                                                   l24110 2770  
                                                   l21198 4C8A  
                                                   l22246 3A2A  
                                                   l22190 3992  
                                                   l22174 3968  
                                                   l22166 3940  
                                                   l20592 7CE0  
                                                   l23048 6550  
                                                   l23304 82E4  
                                                   l20648 8A92  
                                                   l20808 62C2  
                                                   l20824 636E  
                                                   l21392 69B4  
                                                   l23208 5E98  
                                                   l21296 9806  
                                                   l21536 60B4  
                                                   l21456 5FD0  
                                                   l21616 7FF8  
                                                   l20752 79D8  
                                                   l23400 52CC  
                                                   l24200 2948  
                                                   l20904 9482  
                                                   l22432 40BA  
                                                   l22256 3A52  
                                                   l22192 3996  
                                                   l22184 3974  
                                                   l22168 3944  
                                                   l25010 72B8  
                                                   l23306 82EC  
                                                   l23314 8304  
                                                   l20658 8ADC  
                                                   l20842 6424  
                                                   l20834 63C0  
                                                   l23170 6276  
                                                   l23162 625A  
                                                   l23146 621C  
                                                   l23138 6200  
                                                   l23090 6158  
                                                   l23082 613C  
                                                   l20690 7B94  
                                                   l20682 7B7A  
                                                   l23234 5F0A  
                                                   l23218 5EDE  
                                                   l21482 6000  
                                                   l21466 5FD4  
                                                   l21570 80A2  
                                                   l23402 52E2  
                                                   l24026 25D0  
                                                   l20906 949C  
                                                   l22450 4138  
                                                   l22442 40DC  
                                                   l22274 3A9A  
                                                   l22194 399A  
                                                   l22178 396C  
                                                   l23308 82F4  
                                                   l23316 832C  
                                                   l20828 637C  
                                                   l20844 6428  
                                                   l21396 69EC  
                                                   l21388 6978  
                                                   l21716 9872  
                                                   l21708 985A  
                                                   l21548 60F4  
                                                   l21564 809E  
                                                   l21900 8D16  
                                                   l21652 8060  
                                                   l21636 802A  
                                                   l20764 7A48  
                                                   l20756 7A04  
                                                   l21812 5ADC  
                                                   l21820 5AFA  
                                                   l21732 5976  
                                                   l20908 94A0  
                                                   l22452 4170  
                                                   l22444 40DE  
                                                   l22268 3A84  
                                                   l22276 3AB6  
                                                   l22196 399E  
                                                   l24220 192A  
                                                   l23326 8358  
                                                   l20862 87EA  
                                                   l20870 8288  
                                                   l20854 8C16  
                                                   l23166 6268  
                                                   l23158 624C  
                                                   l23094 6166  
                                                   l23086 614A  
                                                   l23078 612E  
                                                   l21662 98A4  
                                                   l23190 5E10  
                                                   l23350 7F4C  
                                                   l24150 2868  
                                                   l24126 27DC  
                                                   l24118 278E  
                                                   l24070 26CC  
                                                   l24038 2626  
                                                   l22526 431C  
                                                   l22518 4302  
                                                   l22454 4176  
                                                   l22286 3ADE  
                                                   l24310 1BC2  
                                                   l20880 82CA  
                                                   l20872 82BA  
                                                   l21680 8552  
                                                   l21488 6008  
                                                   l21584 80D0  
                                                   l21904 8D1E  
                                                   l23352 7F62  
                                                   l21840 5B30  
                                                   l21744 59A2  
                                                   l23520 547C  
                                                   l23416 5310  
                                                   l20792 95F8  
                                                   l24152 2872  
                                                   l22800 877C  
                                                   l22472 41F2  
                                                   l22288 3B30  
                                                   l24320 1BE0  
                                                   l24304 1B90  
                                                   l24232 1990  
                                                   l24224 194C  
                                                   l24216 190A  
                                                   l22810 937A  
                                                   l25050 7352  
                                                   l25026 72F2  
                                                   l23282 89F0  
                                                   l23098 6174  
                                                   l20962 6EE0  
                                                   l23186 5E06  
                                                   l20786 908E  
                                                   l21850 5B5A  
                                                   l21842 5B36  
                                                   l21834 5B0C  
                                                   l21738 5988  
                                                   l21930 7A98  
                                                   l23530 5498  
                                                   l23522 5480  
                                                   l23506 5450  
                                                   l23450 53C0  
                                                   l24058 2676  
                                                   l22554 43BE  
                                                   l24410 1DFA  
                                                   l24306 1B92  
                                                   l22812 9382  
                                                   l25036 731E  
                                                   l23292 97AA  
                                                   l23276 89D4  
                                                   l21676 854E  
                                                   l23372 7F9E  
                                                   l23604 5C28  
                                                   l21940 7B0C  
                                                   l23524 5486  
                                                   l23436 5380  
                                                   l24172 28CA  
                                                   l22548 43A8  
                                                   l22484 4252  
                                                   l22476 422C  
                                                   l24412 1DFE  
                                                   l24324 1C0C  
                                                   l24308 1BBC  
                                                   l24260 1A04  
                                                   l24252 19E2  
                                                   l24244 19CA  
                                                   l24236 19B2  
                                                   l24228 196E  
                                                   l26020 3E4C  
                                                   l22822 93A2  
                                                   l20982 6FC8  
                                                   l25070 93D8  
                                                   l23366 7F94  
                                                   l23710 4DB6  
                                                   l23614 5C46  
                                                   l23542 54C2  
                                                   l24190 28FA  
                                                   l22486 4266  
                                                   l24414 1E0A  
                                                   l24342 1C9E  
                                                   l26110 3FA2  
                                                   l26006 3E28  
                                                   l20968 6F32  
                                                   l21688 856E  
                                                   l21960 71D6  
                                                   l23712 4DCC  
                                                   l23640 5C8C  
                                                   l23624 5C64  
                                                   l23616 5C4E  
                                                   l23608 5C32  
                                                   l21768 5A2E  
                                                   l21792 5A7A  
                                                   l21936 7AD2  
                                                   l23456 53D8  
                                                   l24184 28E4  
                                                   l24096 273E  
                                                   l26200 4540  
                                                   l22592 9934  
                                                   l22576 7E22  
                                                   l26040 3E80  
                                                   l26032 3E62  
                                                   l24610 31DC  
                                                   l21866 8B9C  
                                                   l21954 7192  
                                                   l21946 7146  
                                                   l23810 4F7C  
                                                   l23634 5C76  
                                                   l23562 5B8A  
                                                   l21778 5A4C  
                                                   l24522 2072  
                                                   l24514 2050  
                                                   l24346 1CC0  
                                                   l24274 1A4E  
                                                   l26130 4002  
                                                   l24620 33E2  
                                                   l24612 324E  
                                                   l20988 6FDE  
                                                   l23804 4F6C  
                                                   l23724 4E24  
                                                   l23484 5430  
                                                   l23468 53FC  
                                                   l21980 8F20  
                                                   l26212 4582  
                                                   l24508 2038  
                                                   l24444 1EB8  
                                                   l24436 1E64  
                                                   l24428 1E46  
                                                   l24372 1D2C  
                                                   l24364 1D10  
                                                   l24380 1D48  
                                                   l24268 1A2A  
                                                   l24276 1A92  
                                                   l26108 3F8E  
                                                   l26132 400E  
                                                   l24622 3430  
                                                   l24614 329C  
                                                   l24606 3116  
                                                   l22862 9574  
                                                   l23822 4F8E  
                                                   l23670 5CFE  
                                                   l23486 5436  
                                                   l26230 463A  
                                                   l22790 8748  
                                                   l21990 3622  
                                                   l24542 20B8  
                                                   l24526 207E  
                                                   l24438 1E66  
                                                   l24278 1AA8  
                                                   l26126 3FEE  
                                                   l26062 3ECA  
                                                   l25600 553A  
                                                   l24624 34A2  
                                                   l24616 330E  
                                                   l24608 3188  
                                                   l28000 1738  
                                                   l23824 4F92  
                                                   l23808 4F74  
                                                   l23744 4E9C  
                                                   l23648 5CAA  
                                                   l23904 2348  
                                                   l26216 45A4  
                                                   l26160 4470  
                                                   l26152 4440  
                                                   l21992 362A  
                                                   l24544 20C0  
                                                   l24536 20A6  
                                                   l24464 1F4A  
                                                   l24448 1EDA  
                                                   l24288 1B10  
                                                   l26136 401A  
                                                   l24706 6C5C  
                                                   l25602 5540  
                                                   l24618 3370  
                                                   l22874 90AC  
                                                   l21898 8D0A  
                                                   l23826 4F98  
                                                   l23658 5CD0  
                                                   l23594 5C04  
                                                   l21978 8EEE  
                                                   l26226 45E4  
                                                   l21994 3632  
                                                   l24570 21DE  
                                                   l24554 20FA  
                                                   l24298 1B76  
                                                   l26082 3F20  
                                                   l26066 3EDA  
                                                   l24724 6CCE  
                                                   l24740 6D1C  
                                                   l24628 34F0  
                                                   l22884 90F4  
                                                   l23860 5002  
                                                   l23844 4FD0  
                                                   l23836 4FB6  
                                                   l23764 4EE8  
                                                   l23684 5D2E  
                                                   l23932 23C4  
                                                   l23924 239C  
                                                   l23916 2384  
                                                   l23908 2362  
                                                   l26252 46A6  
                                                   l26172 44AA  
                                                   l26164 4488  
                                                   l26228 4624  
                                                   l26156 444E  
                                                   l22788 873C  
                                                   l21988 361A  
                                                   l24572 21E4  
                                                   l24564 21C8  
                                                   l24484 1FBA  
                                                   l24468 1F6C  
                                                   l24396 1DB4  
                                                   l26076 3EFC  
                                                   l22982 771E  
                                                   l24726 6CD2  
                                                   l25710 4830  
                                                   l28022 1758  
                                                   l28006 1742  
                                                   l24814 9E96  
                                                   l24910 8DF2  
                                                   l24902 8DDC  
                                                   l23782 4F26  
                                                   l23942 23E8  
                                                   l22984 7726  
                                                   l22968 76CA  
                                                   l25800 49F4  
                                                   l25720 486C  
                                                   l25560 8E8A  
                                                   l28040 17AA  
                                                   l24920 75AC  
                                                   l24824 678C  
                                                   l24912 8DF6  
                                                   l23792 4F42  
                                                   l23776 4F0C  
                                                   l23688 5D3A  
                                                   l23944 2428  
                                                   l26272 4706  
                                                   l26184 44E2  
                                                   l24568 21D8  
                                                   l24496 1FF4  
                                                   l24738 6D06  
                                                   l25722 487A  
                                                   l25714 4844  
                                                   l25642 5638  
                                                   l25618 558C  
                                                   l28018 1746  
                                                   l24922 75B6  
                                                   l23786 4F2E  
                                                   l23794 4F48  
                                                   l23970 24DA  
                                                   l23962 249C  
                                                   l23946 243E  
                                                   l26282 4722  
                                                   l26274 470C  
                                                   l22988 7732  
                                                   l25812 4A36  
                                                   l25644 563C  
                                                   l25564 8E9C  
                                                   l27500 2B36  
                                                   l28036 1788  
                                                   l24860 6860  
                                                   l23964 24BA  
                                                   l23884 22DA  
                                                   l23876 22A8  
                                                   l23868 2278  
                                                   l26276 4710  
                                                   l26292 4736  
                                                   l26188 4504  
                                                   l24588 222A  
                                                   l28124 6ACE  
                                                   l25822 4A72  
                                                   l25742 48D8  
                                                   l25726 4890  
                                                   l25670 5708  
                                                   l25646 564A  
                                                   l28054 17B8  
                                                   l24934 75E6  
                                                   l24854 6834  
                                                   l24846 6806  
                                                   l26286 4728  
                                                   l26278 471C  
                                                   l25910 3CB4  
                                                   l25902 3C96  
                                                   l28134 6AE4  
                                                   l25816 4A4E  
                                                   l25744 48E8  
                                                   l25728 489E  
                                                   l25680 478C  
                                                   l25672 570C  
                                                   l25648 5660  
                                                   l25592 551E  
                                                   l25568 8EB0  
                                                   l27520 2B90  
                                                   l27512 2B6C  
                                                   l27504 2B48  
                                                   l27440 29E8  
                                                   l27432 298A  
                                                   l27600 2F04  
                                                   l28080 1858  
                                                   l28056 17BC  
                                                   l28048 17B4  
                                                   l24936 75F0  
                                                   l23896 2322  
                                                   l23888 22FE  
                                                   l25920 3CC4  
                                                   l25832 3B38  
                                                   l25818 4A5C  
                                                   l25674 571A  
                                                   l25586 550E  
                                                   l27530 2C18  
                                                   l27434 29AA  
                                                   l28066 181E  
                                                   l24786 70A8  
                                                   l24882 68EE  
                                                   l24858 685A  
                                                   l25850 3BC4  
                                                   l25842 3B82  
                                                   l28154 6B9C  
                                                   l25828 4A8C  
                                                   l25780 499A  
                                                   l25748 48FE  
                                                   l25756 4928  
                                                   l27540 2C90  
                                                   l27524 2BB2  
                                                   l27516 2B7E  
                                                   l27508 2B5A  
                                                   l27460 2A72  
                                                   l27452 2A3E  
                                                   l27444 29FA  
                                                   l27436 29C6  
                                                   l28076 1836  
                                                   l27700 1062  
                                                   l24876 68DA  
                                                   l24892 8DBA  
                                                   l25932 3CF6  
                                                   l25860 3C20  
                                                   l28164 6BBA  
                                                   l28148 6B72  
                                    write_package@package 0011  
                                   _eusart1RxStatusBuffer 0274  
                                                   l25774 4974  
                                                   l25790 49BE  
                                                   l25686 47AC  
                                                   l27550 2D0C  
                                                   l27534 2C2A  
                                                   l28086 1864  
                                                   l27710 10BA  
                                                   l28094 186E  
                                                   l24982 7694  
                                                   l24878 68E2  
                                                   l24894 8DBE  
                                                   l23998 2548  
                                                   l25950 3D42  
                                                   l25926 3CDC  
                                                   l25846 3BA2  
                                                   l25838 3B60  
                                                   l25784 49AE  
                                                   l27616 9146  
                                                   l27560 2D88  
                                                   l27480 2ACC  
                                                   l27472 2AA8  
                                                   l27464 2A84  
                                                   l27456 2A60  
                                                   l27448 2A1C  
                                                   l28088 1868  
                                                   l27704 1092  
                                                   l25960 3D7C  
                                                   l25936 3D08  
                                                   l25880 3C72  
                                                   l25872 3C54  
                                                   l25856 3BDE  
                                                   l25778 498C  
                                                   l25698 47F6  
                                                   l27570 2E00  
                                                   l27554 2D22  
                                                   l27546 2CF6  
                                                   l27802 1358  
                                                   l27722 1108  
                                                   l27650 0F42  
                                                   l25970 3DA2  
                                                   l25890 3C80  
                                                   l25866 3C34  
                                                   l25858 3C0A  
                                                   l24996 7284  
                                                   l25796 49E0  
                                                   l27492 2B12  
                                                   l27484 2ADE  
                                                   l27476 2ABA  
                                                   l27468 2A96  
                                                   l27812 1396  
                                                   l27708 10B6  
                                                   l27660 0F88  
                                                   l27652 0F5E  
                                                   l25956 3D62  
                                                   l27582 2E66  
                                                   l27574 2E22  
                                                   l27566 2DEE  
                                                   l27902 1500  
                                                   l27806 137A  
                                                   l27726 112C  
                                                   l27718 10DE  
                                                   l27670 0FB0  
                                                   l27646 0F26  
                                                   l25958 3D6E  
                                                   l27496 2B24  
                                                   l27488 2B00  
                                                   l27920 155C  
                                                   l27912 150E  
                                                   l27904 1504  
                                                   l27824 13A2  
                                                   l27736 113A  
                                                   l27728 1130  
                                                   l27664 0F9A  
                                                   l27648 0F32  
                                                   l25992 3DEE  
                                                   l27578 2E44  
                                                   l27930 156A  
                                                   l27922 1560  
                                                   l27842 13E4  
                                                   l27818 139A  
                                                   l27754 11AA  
                                                   l27746 119C  
                                                   l27738 1144  
                                                   l27674 0FC0  
                                                   l27682 0FF2  
                                                   l27588 2ECC  
                                                   l27940 15CC  
                                                   l27932 1574  
                                                   l27916 1538  
                                                   l27860 1414  
                                                   l27828 13B4  
                                                   l27772 121A  
                                                   l27764 120C  
                                                   l27756 11B4  
                                                   l27748 11A0  
                                                   l27950 15E4  
                                                   l27942 15D0  
                                                   l27862 1418  
                                                   l27854 1410  
                                                   l27846 1406  
                                                   l27790 12EE  
                                                   l27766 1210  
                                                   l25998 3E0C  
                                                   l27960 1640  
                                                   l27784 1278  
                                                   l27882 147C  
                                                   l27948 15DA  
                                                   l27892 14A8  
                                                   l27796 132C  
                                                   l27966 164A  
                                                   l27958 163C  
                                                   l27894 14AC  
                                                   l27886 149E  
                                                   l27798 133C  
                                                   l27984 16D6  
                                                   l27898 14DC  
                                                   l27996 1716  
                                                   _ADACQ 000F5C  
                                       __end_of_I2C1_Open 871A  
                                                   _ADCAP 000F5D  
                                                   _ADACT 000F56  
                                   __end_of_saveNewSerial 8C4A  
                                                   ?_main 0001  
                                                   _ADCLK 000F57  
                                                   _ADCNT 000F67  
                                                   _ADPCH 000F5F  
                                                   _ADREF 000F58  
                                         __end_of___awdiv 8696  
                          ?_keeloq_classic_decrypt_packet 0038  
                                         __end_of___lbdiv 980A  
                                                   _ADPRE 000F5E  
                                                   _ADRPT 000F66  
                                         __end_of___lbmod 9BA4  
                                            _zeroCrossing 0196  
                                         __end_of___lldiv 879C  
                                                   _T1CLK 000FD2  
                                         ___awdiv@divisor 0016  
                                                   _T1CON 000FCF  
                                                   u30100 6826  
                                                   u30110 6834  
                                                   _T2CON 000FBD  
                                                   u30130 685A  
                                                   u30140 686E  
                                                   u32010 47BE  
                                                   u32100 485C  
                                                   u32020 47CC  
                                                   u30260 8DD4  
                                                   u32030 47DC  
                                                   u30190 68BE  
                                                   u23330 9FAE  
                                                   u30700 732C  
                                                   u30540 72A0  
                                                   u24300 7430  
                                                   u33100 3F6C  
                                                   _T2HLT 000FBE  
                                                   u30630 72E4  
                                                   u30470 726C  
                                                   u32310 49AA  
                                                   u32230 493E  
                                                   u23408 94C4  
                                                   u23600 7CDC  
                                                   u30560 72AC  
                                                   u32400 4A1C  
                                                   u32080 4840  
                                                   u24240 738C  
                                                   u25200 5A00  
                                                   u23409 94D6  
                                                   u30801 93CE  
                                                   u23530 7C52  
                                                   u30490 7278  
                                                   u32410 4A24  
                                                   u32170 48C8  
                                                   u24090 6FC0  
                                                   u25050 857E  
                                                   u25130 5994  
                                                   u32260 4956  
                                                   u24340 94FE  
                                                   u25300 5AA6  
                                                   u33220 4464  
                                                   u33140 3FBA  
                                                   u33060 3F4E  
                                                   u23358 84A0  
                                                   u23550 7C8E  
                                                   u30670 7314  
                                                   u25310 5AAE  
                                                   u32510 3BB8  
                                                   u23359 84B2  
                                                   u23448 934C  
                                                   u23560 7C9C  
                                                   u30760 7362  
                                                   u27000 97A4  
                                                   u32360 49F0  
                                                   u31800 55F0  
                                                   u31720 55AE  
                                                   u31480 8E78  
                                                   u24520 97EC  
                                                   u25400 5B44  
                                                   u25240 5A5C  
                                                   u25160 59D8  
                                                   u33400 4656  
                                                   u33240 449E  
                                                   u23449 935E  
                                                   u34121 15C0  
                                                   u34041 146E  
                                                   u25241 5A5A  
                                                   u30770 736A  
                                                   u27010 97BA  
                                                   u32450 4A80  
                                                   u31650 5568  
                                                   u33170 3FD2  
                                                   u23388 895A  
                                                   u23580 7CBA  
                                                   u30780 7372  
                                                   u31900 5692  
                                                   u31740 55BA  
                                                   u31660 5576  
                                                   u25180 59E8  
                                                   u26060 7DC0  
                                                   u23389 896C  
                                                   u25085 91FC  
                                                   u23398 8FB4  
                                                   u23590 7CCE  
                                                   u31670 5586  
                                                   u30790 93C0  
                                                   u25190 59F8  
                                                   u33270 44D6  
                                                   u32710 3D50  
                                                   u23399 8FC6  
                                                   u31671 5584  
                                                   u34311 1812  
                                                   u34151 1630  
                                                   u23815 79E4  
                                                   u31920 569C  
                                                   u31760 55C4  
                                                   u24720 5FA4  
                                                   u25440 8B8A  
                                                   u28000 4DEA  
                                                   u33440 4696  
                                                   u26080 991C  
                                                   u24480 8658  
                                                   u32800 3DCA  
                                                   u32480 3B54  
                                                   u33601 2D7A  
                                                   u33521 29B8  
                                                   u27050 833C  
                                                   u31690 559A  
                                                   u23850 9034  
                                                   u25290 5A96  
                                                   u33290 44F8  
                                                   u26250 874C  
                                                   u33611 2DAE  
                                                   u33531 2BD8  
                                                   u23835 7A54  
                                                   u31940 56C0  
                                                   u31860 567C  
                                                   u31780 55CE  
                                                   u25460 8BAC  
                                                   u27140 7F70  
                                                   u28100 4F02  
                                                   u25380 5B1C  
                                                   u27300 5398  
                                                   u32820 3DDA  
                                                   u33621 2DE0  
                                                   u33541 2C0A  
                                                   u33701 0F7A  
                                                   u26430 6442  
                                                   u26350 76BE  
                                                   u28110 4F1A  
                                                   u28030 4EB0  
                                                   u27230 52F8  
                                                   u32750 3D9C  
                                                   u33631 2E8C  
                                                   u33551 2C50  
                                                   u26440 645A  
                                                   u26280 9386  
                                                   u31880 5688  
                                                   u23880 9086  
                                                   u25480 8CE4  
                                                   u27320 53AC  
                                                   u34417 8AEC  
                                                   u33641 2EBE  
                                                   u33561 2C82  
                                                   u24690 5F46  
                                                   u28210 4FC6  
                                                   u28050 4EC4  
                                                   u25650 3A5E  
                                                   u32930 3EA0  
                                                   u32690 3D18  
                                                   u34427 8B60  
                                         __end_of___lwdiv 93B6  
                                                   u33571 2CB6  
                                                   u33731 0FE4  
                                                   u32931 3E9E  
                                                   u34371 6B86  
                                                   u28140 4F60  
                                                   u27420 5464  
                                                   u29020 28F8  
                                                   u28300 229C  
                                                   u25740 40F6  
                                                   u33581 2CE8  
                                                   u33901 1264  
                                                   u33741 101A  
                                                   u26470 649E  
                                                   u26550 6126  
                                                   u27510 54DA  
                                                   u27350 53E6  
                                                   u29030 2914  
                                                   u25910 42CC  
                                                   u25670 3A90  
                                                   u33591 2D48  
                                                   u33671 8F82  
                                                   u33831 1190  
                                                   u33751 1044  
                                                   u29031 2912  
                                                   u26480 64B0  
                                                   u28080 4EF6  
                                                   u27280 5336  
                                                   u29040 2922  
                                                   u25680 4064  
                                                   u33681 0F50  
                                                   u28330 22CE  
                                                   u25690 406A  
                                                   u33780 10C2  
                                                   u28180 4FA6  
                                                   u27700 5C22  
                                                   u27380 540A  
                                                   u32980 3EE8  
                                                   u33941 134A  
                                                   u33861 1200  
                                                   u25790 41B0  
                                                   u33791 10D0  
                                                   u33960 1384  
                                                   u26760 6244  
                                                   u28520 2478  
                                                   u25880 4292  
                                                   u29320 1C72  
                                                   u33890 1230  
                                                   u27730 5C42  
                                                   u28610 2550  
                                                   u29330 1CCE  
                                                   u29315 1C5C  
                                                   u26940 89B4  
                                                   u27660 5BFE  
                                                   u28700 2636  
                                                   u29340 1CD4  
                                                   u29180 1A40  
                                                   _T2TMR 000FBB  
                                                   u29325 1C6E  
                                                   u26870 5EA8  
                                                   u28710 2650  
                                                   u28630 2574  
                                                   u25990 4390  
                                                   u29510 1E8C  
                                                   u28711 264E  
                                                   u28800 26F8  
                                                   u28640 257C  
                                                   u28560 24F8  
                                                   u29600 2004  
                                                   u29360 1D1E  
                                                   u29601 2002  
                                                   u29505 1E76  
                                                   u27850 5CDE  
                                                   u28810 271C  
                                                   u28730 2694  
                                                   u28650 2596  
                                                   u28570 2500  
                                                   u29370 1D24  
                                                   _T2RST 000FC0  
                                                   u28811 271A  
                                                   u28731 2692  
                                                   u28651 2594  
                                                   u29515 1E88  
                                                   u26980 89EA  
                                                   u28900 27B6  
                                                   u28740 26A2  
                                                   u28580 251A  
                                                   u29620 201A  
                                                   u29460 1E18  
                                                   u29380 1D3A  
                                                   u28581 2518  
                                                   u29381 1D38  
                                                   u27950 5D58  
                                                   u28670 25EE  
                                                   u29710 20D0  
                                                   u29630 202E  
                                                   u29550 1F1E  
                                                   u29470 1E1E  
                                                   u27951 5D56  
                                                   u28671 25EC  
                                                   u29711 20CE  
                                                   u28840 2752  
                                                   u28680 25FC  
                                                   u29545 1F08  
                                                   i2l106 9906  
                                                   u27890 5D0E  
                                                   u29650 2048  
                                                   u29635 202A  
                                                   u29555 1F1A  
                                                   u28940 27F8  
                                                   u28860 275E  
                                                   u29580 1FCA  
                                                   u29910 6D3E  
                                                   u29830 6C98  
                                                   u28950 27FE  
                                                   u28790 26F2  
                                                   u29590 1FD0  
                                                   u29920 6D4C  
                                                   u28880 278C  
                                                   u29850 6CB0  
                                                   u29770 9F68  
                                                   u28890 27A8  
                                                   u28891 27A6  
                                                   u29940 6D66  
                                                   u28990 28DE  
                                                   u29880 6CEA  
                                                   u29795 9D94  
                                                   u29980 916C  
                                                   u29796 9D96  
                                                   u29990 919E  
                                                   i2l870 004C  
                                                   i2l872 006A  
                                                   i2l873 0080  
                                                   i2l874 0076  
                                                   i2l867 0030  
                                         ___awdiv@counter 0018  
                                              _CloseOrder 9BF6  
                              __end_of_i2c1_fsmStateTable 0F21  
                                                   _OSCEN 000EDC  
                                                   _TMR0H 000FD4  
                                                   _TMR1H 000FCE  
                                                   _TMR0L 000FD3  
                                                   _TMR1L 000FCD  
                                                   _RFBit 0089  
                                                   _PORTB 000F8E  
                               __end_of_SaveNVM_VarSystem 9842  
                          DecryptPacket_12BIT@commandType 00E4  
                                                   _TRISA 000F88  
                                                   _TRISB 000F89  
                                                   _TRISC 000F8A  
                                                   _TRISD 000F8B  
                                                   _TRISE 000F8C  
                                  ??_I2C1_MasterGetRxData 0010  
                                   ?_I2C1_DO_RX_NACK_STOP 0001  
                             validateRemoteSerialNumber@i 003A  
                             validateRemoteSerialNumber@j 0039  
                                     ___lmul@multiplicand 0021  
                               ?_TMR0_SetInterruptHandler 0010  
                                           _InitSoftStart 904A  
                              ??_I2C1_CallbackReturnReset 001B  
                                       ??_I2C1_MasterOpen 0010  
                                        _idxAdcAquisition 0091  
                                    _EUSART1_Transmit_ISR 98DA  
                                       ??_I2C1_MasterStop 0010  
                                       ??_I2C1_Initialize 0010  
                               GetMotorPower@defineatraso 0013  
                                        __end_of_TMR0_ISR 9C8E  
                                        __end_of_TMR1_ISR 9794  
                                        __end_of_TMR2_ISR 6ED2  
                                    _idxSaveEnergyADCHist 0090  
                                                   _rfCMD 003B  
                                                   _aux_i 0190  
                          actionZone_Closed@typeOpenOrder 0021  
                                        _setFlashLigth_ON 9794  
                                          ?_EUSART1_Write 0001  
                                          readbutton@key1 0086  
                                   SetSegmentValueMain@d1 001D  
                                          readbutton@key2 019A  
                                   SetSegmentValueMain@d2 001C  
                                 __end_of_TMR1_Initialize 9694  
                                    setFlashLigth_ON@Freq 0010  
                                                   pclath 000FFA  
       rd1RegCompleteHandler@i2c1_master_example$F500@ptr 0019  
                                                   pclatu 000FFB  
                                         __end_of_sumHIST 7994  
                                         __end_of_sm_init 9264  
                                                   tablat 000FF5  
       rd2RegCompleteHandler@i2c1_master_example$F511@ptr 0019  
       wr2RegCompleteHandler@i2c1_master_example$F523@ptr 0019  
       wr1RegCompleteHandler@i2c1_master_example$F517@ptr 0019  
     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr 0019  
                                          ??_EUSART1_Read 0010  
                                                   plusw0 000FEB  
                                                   plusw2 000FDB  
                                 __end_of_sm_execute_main 4048  
                                                   ttemp5 0051  
                                                   ttemp6 0054  
                                                   ttemp7 0058  
                                                   status 000FD8  
                                         ??_ControlLights 0016  
                                                   wtemp8 0051  
                                            ??_I2C1_DO_RX 001B  
                                            ??_I2C1_DO_TX 001B  
                                         ??_ControlInputs 0010  
                                         ___lbdiv@divisor 0010  
              __end_of_EUSART1_DefaultFramingErrorHandler A0F2  
                    ??_EUSART1_DefaultFramingErrorHandler 0001  
                     ?_EUSART1_DefaultFramingErrorHandler 0001  
                      _EUSART1_DefaultFramingErrorHandler A0F0  
                                         _TMR1_WriteTimer 9DB4  
                                  ??_I2C1_DO_ADDRESS_NACK 001B  
                                         ___lbdiv@counter 0012  
                            __end_of_getStateOpenPosition 748A  
                                            ??_I2C1_Close 0010  
                                          ??_InitReceiver 0010  
                        VerifyElectricalBrake@actualState 0011  
                      i2VerifyElectricalBrake@actualState 0002  
                                         __initialization 7E64  
                                 cmdMemoryIsEmpty@cmdType 0031  
                             ?_SetSegmentValueIntermitent 0010  
                              __end_of_EUSART1_Initialize 889A  
                                            __end_of_main 6C10  
                                              _ReadSerial 8C4A  
                         sm_execute_menuConfiguration@psm 00E9  
                             __end_of_DecryptPacket_12BIT 83EA  
                                          _refreshCurrent 9584  
                                          ??_InitSoftStop 0014  
                      validateRemoteSerialNumber@position 0033  
                                 __end_of_TMR2_Initialize 99EE  
                             ?_INTERRUPT_InterruptManager 0001  
                                          _refreshSegment 858C  
                                  ??_I2C1_MasterOperation 0020  
                                _TMR2_SetInterruptHandler 9FC8  
                                                  ??_main 003B  
                                       ??_WWDT_Initialize 0010  
                                           __activetblptr 000003  
                                       Segments_Set@value 0001  
                                   saveNewSerial@position 00DC  
                      __end_of_validateRemoteSerialNumber 6434  
                              _validateRemoteSerialNumber 6298  
                                          ?_InitSoftStart 0001  
                                   ?_EUSART1_Transmit_ISR 0001  
                                           sumEnergyADC@i 0018  
                                      __end_of_I2C1_DO_RX 8990  
                                      __end_of_I2C1_DO_TX 8502  
                                       ?_InitWalkAutoTime 0001  
                                       ??_controlVelocity 00DA  
                                               ??_RGB_Set 0010  
                              ?_ControlDecelarationFactor 0001  
                                    __end_of_getSerialCmd 94A4  
                  __end_of_SetSegmentValueIntermitentMain 9F36  
                          _SetSegmentValueIntermitentMain 9F22  
                                      ReadSerial@position 002F  
                                      __end_of_I2C1_Close 9D3E  
                                                  _ADACCH 000F71  
                                                  _ADACCL 000F70  
                                 ?_I2C1_Read1ByteRegister 0022  
                                      ??_InitWalkAutoTime 0010  
                                                  _ADCON0 000F60  
                                                  _ADCON1 000F59  
                                                  _ADCON2 000F5A  
                                                  _ADCON3 000F5B  
                                                  _ADERRH 000F6F  
                                                  _ADERRL 000F6E  
                                                  _ADLTHH 000F6B  
                                                  _ADLTHL 000F6A  
                                                  _ADRESH 000F64  
                                                  _ADRESL 000F63  
                                                  _ADSTAT 000F65  
                                                  _ADUTHH 000F6D  
                                        ___awdiv@dividend 0014  
                                                  _ADUTHL 000F6C  
                                                  _ANSELA 000F11  
                                                  _ANSELB 000F19  
                                                  _ANSELC 000F21  
                                                  _ANSELD 000F26  
                                                  _ANSELE 000F2E  
                                                  _T0CON0 000FD5  
                                                  _T0CON1 000FD6  
                                                  _T1GATE 000FD1  
                                                  _T1GCON 000FD0  
                                     readRFButtons@serial 0181  
                                                  _IOCBN3 00789B  
                                                  _IOCBP3 0078A3  
                                                  _RC1REG 000F99  
                                           _readRFButtons 6768  
                                                  _RC1STA 000F9D  
                                                  _RC3PPS 000EFA  
                                 TMR1_WriteTimer@timerVal 0001  
                                                  _RC4PPS 000EFB  
                                                  _ODCONA 000F0F  
                                                  _ODCONB 000F17  
                                                  _ODCONC 000F1F  
                                                  _ODCOND 000F24  
                                                  _ODCONE 000F2C  
                                                  _RC7PPS 000EFE  
                                   __end_of_GetMotorPower 7CEA  
                                                  i2l2024 66EE  
                                                  i2l1147 9DC6  
                                                  i2l2140 8610  
                                                  i2l2133 85DA  
                                                  i2l2222 591E  
                                                  i2l2240 7D84  
                                                  i2l2128 85BC  
                                                  i2l1266 6DDC  
                                                  i2l2323 8A72  
                                                  i2l1620 51EC  
                                                  i2l1277 6E66  
                                                  i2l2191 575A  
                                                  i2l2328 8A7C  
                                                  i2l2195 5840  
                                                  _INLVLA 000F0D  
                                                  _INLVLB 000F15  
                                                  _INLVLC 000F1D  
                                                  _INLVLD 000F22  
                                                  _INLVLE 000F2A  
                                               ??_Decrypt 001D  
                                  calculateMean@meanValue 0010  
                                                  _OSCFRQ 000EDE  
                         __end_ofi2_VerifyElectricalBrake 8A80  
                                                  _TMR0IE 007615  
                                                  _TMR0IF 007655  
                                                  _RX1PPS 000EB5  
                            __end_of_refreshADCZeroOffset 779E  
                                           ?_init_package 0010  
                                                  _TX1REG 000F9A  
                                                  _TX1STA 000F9E  
                                __end_of_cmdMemoryIsEmpty 82CE  
                                       ?_I2C1_MasterClose 0001  
                                                  _DecCHK 9876  
                                 __end_ofi2_GetMotorPower 7DB0  
                                                  _RFFull 008B  
                                rdBlkRegCompleteHandler@p 0019  
                                               ??_ReadADC 0002  
                                 ??_I2C1_MasterDisableIrq 0010  
                                       ?_I2C1_MasterStart 0001  
                                         eusartparser@pos 00EC  
                    __end_of_sm_execute_menuConfiguration 2270  
                            _sm_execute_menuConfiguration 1908  
                                       ?_I2C1_MasterWrite 0001  
                                                  _HopCHK 8502  
                                ?_I2C1_MasterWaitForEvent 0001  
                                      ??_I2C1_MasterClose 0010  
                                        _I2C1_DO_TX_EMPTY 8F90  
                                 controlSelectRemote@temp 00E8  
                                  _SumEnergyADCHist_array 0260  
                                      ??_I2C1_MasterStart 0010  
                                      ??_I2C1_MasterWrite 0022  
                                       _decrementTimeslot 9BA4  
                    __end_of_TMR1_DefaultInterruptHandler A0EE  
                            _TMR1_DefaultInterruptHandler A0EC  
                                  __end_of_refreshCurrent 95CA  
                                           ?_read_package 0011  
                                                  ___lmul 9264  
                                         ??_LoadManufCode 0010  
                                                  ___wmul 9C42  
                                  __end_of_refreshSegment 8612  
                                               ??___awdiv 0018  
                                               ??___lbdiv 0011  
                                               ??___lbmod 0011  
                                               ??___lldiv 0018  
                                      ?_decrementTimeslot 0001  
                                               ??___lwdiv 0014  
                                       ??_i2c_writeNBytes 0027  
                                           _load_New_Menu 4A9A  
                             __end_of_keeloqDecryptPacket 5F30  
                             setValueToEdit@posindex_6980 00E0  
                                ?_EUSART1_SetErrorHandler 0010  
                                                  _memcpy 960E  
                                        ?_TMR0_Initialize 0001  
                                                  clear_0 7ED4  
                                                  clear_1 7EE0  
                                                  clear_2 7EEC  
                                                  clear_3 7EF8  
                                                  clear_4 7F04  
                                        ___awdiv@quotient 001A  
                                       ??_WWDT_TimerClear 0010  
                      __end_of_sm_execute_ControlLearning 2988  
                              _sm_execute_ControlLearning 2270  
                                                  isa$std 000001  
                        ??_EUSART1_SetOverrunErrorHandler 0012  
                         ?_EUSART1_SetOverrunErrorHandler 0010  
                                       ??_WWDT_SoftEnable 0010  
                                ??_I2C1_DO_SEND_ADR_WRITE 0011  
                          SetSegmentValueIntermitent@time 0011  
                                  setValueToEdit@menuType 00DE  
                                       ?_I2C1_SetCallback 0010  
                                  ??_I2C1_DO_RX_NACK_STOP 0010  
                                           ??_ShowVersion 001E  
                                         _ADCC_Initialize 9406  
                                     ??_decrementTimeslot 0003  
                                             ?_CloseOrder 0001  
                                   _I2C1_DO_SEND_ADR_READ 9F98  
                                          _PMD_Initialize 9D98  
                                              _StateTRIAC 0194  
                                           ?_eusartparser 00E0  
                           ?_I2C1_SetDataCompleteCallback 0015  
                                      ??_I2C1_SetCallback 0014  
                                            __mediumconst 0000  
                          __end_of_I2C1_Read1ByteRegister 9102  
                                    __end_of_ControlMotor 5730  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                           Decrypt@Buffer 0022  
                                                  tblptru 000FF8  
                                               ??_sumHIST 0014  
                                               ??_sm_init 0017  
                                   SaveNVM_VarSystem@page 00D8  
                              __end_of_actionZone_Closing 501C  
                               ?_ADCC_GetSingleConversion 0001  
                                         ??_EUSART1_Write 0010  
                       __end_of_ControlDecelarationFactor 9E6A  
                TMR2_SetInterruptHandler@InterruptHandler 0010  
                TMR1_SetInterruptHandler@InterruptHandler 0010  
                TMR0_SetInterruptHandler@InterruptHandler 0010  
                                        ??_ControlCurrent 0023  
                                  setValueToEdit@posindex 00DF  
                                 __end_of_TMR1_WriteTimer 9DD0  
                                         _eusart1RxBuffer 027C  
                                          ?_readRFButtons 0001  
                                        ___lbdiv@dividend 0011  
                                 _I2C1_DO_RX_NACK_RESTART A046  
                                         _eusart1TxBuffer 0284  
                                     _SetSegmentValueMain 9DEA  
                                        ?_TMR1_Initialize 0001  
                                          ??_init_package 0012  
                                       _SYSTEM_Initialize 993C  
                              __end_of_actionZone_Opening 54E6  
                          I2C1_SetDataCompleteCallback@cb 0015  
                                         ___lbmod@divisor 0010  
                                              __accesstop 0060  
                                 __end_of__initialization 7F0A  
                                         ___lbmod@counter 0012  
                                           Decrypt@packet 001B  
                           setValueToEdit@haveValueToEdit 00E1  
                                        ?_sm_execute_main 00ED  
                                          _setValueToEdit 3604  
                                      getSerialCmd@serial 001B  
                         I2C1_MasterOperation@returnValue 0021  
                                      ?_SYSTEM_Initialize 0001  
                                           ___rparam_used 000001  
                               __end_of_decrementTimeslot 9BCE  
                                           ??_I2C1_Poller 0020  
                                           ?_Segments_Set 0001  
                                          ??_read_package 0018  
                         ??_setPositionInvertionInClosing 00D8  
                           ?_sm_execute_menuConfiguration 00E9  
                           __end_of_EUSART1_RxDataHandler 9D60  
                                 _rdBlkRegCompleteHandler 9714  
                                          __pcstackCOMRAM 0001  
                                         ?_refreshCurrent 0001  
                                   __end_of_getKeyPressed 9E9A  
                                            __pidataBANK0 A0E8  
                                            __pidataBANK1 A0F2  
                                            __pidataBANK2 A086  
                                            __pidataBANK3 9C8E  
                                     ??_SYSTEM_Initialize 0014  
                                             ?_ReadSerial 002E  
                        __end_of_I2C1_MasterEnableRestart A0DC  
                                          ?_load_New_Menu 0001  
                               sm_execute_ControlGate@psm 00E7  
                                               ?_TMR0_ISR 0001  
                                         ?_refreshSegment 0001  
                                               ?_TMR1_ISR 0001  
                                               ?_TMR2_ISR 0001  
                           ?_TMR1_DefaultInterruptHandler 0001  
                         ??_setPositionInvertionInOpening 0032  
                                    ?_SetSegmentValueMain 001C  
                                        ?_TMR2_Initialize 0001  
                                        ___lbdiv@quotient 0013  
                                  __end_of_PMD_Initialize 9DB4  
                            ??_I2C1_DO_SEND_RESTART_WRITE 0010  
                                 ??_I2C1_MasterSendTxData 0010  
                                         ??_InitSoftStart 0014  
                                    __end_of_EUSART1_Read 9584  
                                          ??_eusartparser 00E2  
                                  ??_EUSART1_Transmit_ISR 0001  
                                    _getStateOpenPosition 737A  
                               write_eusartparser@package 0010  
                                           ?_RemoveSerial 003A  
                                    __end_of_InitReceiver 9DEA  
                         actionZone_Closing@typeOpenOrder 0033  
                             __end_of_EUSART1_Receive_ISR 81A4  
                                   __end_of_I2C1_DO_RESET A022  
                          keeloqDecryptPacket@commandType 00E9  
                                        sumEnergyADC@sumE 0014  
                        verifyProgramingMode@classic_data 0010  
                                       __end_of_ReqResync 9E82  
                             VerifyFollowMe@securityClose 0010  
                                        ??_confirmpackage 0015  
                               __end_of_SYSTEM_Initialize 996A  
                                     __end_of_ShowVersion 8ED0  
                                           _eusart1RxHead 0095  
                                           _eusart1TxHead 0097  
                                           _eusart1RxTail 0094  
                                              __pbssBANK0 0060  
                                              __pbssBANK1 0100  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                  __end_of_setValueToEdit 3B36  
                                           _eusart1TxTail 0096  
                         __end_of_I2C1_MasterWaitForEvent A046  
                       _EUSART1_TxDefaultInterruptHandler 02ED  
                                            _GetOpenOrder 5F30  
                                    __end_of_InitSoftStop 953C  
                         ??_EUSART1_SetRxInterruptHandler 0012  
                          validateRemoteSerialNumber@mask 0035  
                                cmdMemoryIsEmpty@position 002E  
                           __end_of_rd2RegCompleteHandler 9AF6  
                                    I2C1_Open@returnValue 0011  
                                                 ?_DecCHK 0010  
                                           ?_WaitPreFlash 0001  
                                        ?i2_GetMotorPower 0001  
                            __end_of_SetSegmentValueLearn 789A  
                                       ?_controlTimeslots 0001  
                           __end_of_wr2RegCompleteHandler 9ACA  
                                           ?_NormalKeyGen 0026  
                                   __end_of_sm_send_event 904A  
                                   _rd1RegCompleteHandler 9AF6  
                                                 ?_HopCHK 0024  
                                          ??_Segments_Set 0001  
              validateRemoteSerialNumber@VerifyOnlySerial 0032  
                                              _edit_Param 0046  
                                       _I2C1_DO_SEND_STOP A05E  
                                      ??_controlTimeslots 0005  
                                           _button_struct 004C  
                                   _wr1RegCompleteHandler 9B22  
                         __end_of_EUSART1_SetErrorHandler A018  
                                       getHopCode@tempHop 0020  
                                       getHopCode@tempPos 0022  
                        __end_of_TMR0_SetInterruptHandler 9FE6  
                                                 ?___lmul 001D  
                                      ?_I2C1_DO_SEND_STOP 0001  
                                                 ?___wmul 0010  
                                              ??_TMR0_ISR 0003  
                                              _getHopCode 6ED2  
                                              ??_TMR1_ISR 000A  
                                              ??_TMR2_ISR 0005  
                                 __end_of_ADCC_Initialize 9456  
                                         _I2C1_MasterOpen 9EB2  
                                   ??_SetSegmentValueMain 001D  
                                         _I2C1_MasterStop A0D4  
                                         _I2C1_Initialize 9F36  
                                     __end_of_I2C1_Poller 9F7C  
                                __end_of_setFlashLigth_ON 97D0  
                                                 _ADFLTRH 000F73  
                                                 _ADFLTRL 000F72  
                                                 ?_memcpy 0010  
                                    readRFButtons@keyType 0087  
                                       __end_of_StopOrder 9D7C  
                                          ___lmul@product 0025  
                                                 _ADPREVH 000F62  
                                                 _ADPREVL 000F61  
                                write_eusartparser@debug2 0021  
                              __end_of_ResetDefaultMemory 6A88  
                                                 _ADSTPTH 000F69  
                                                 _ADSTPTL 000F68  
                          _menuConfiguration_stateMachine 02BD  
                                         ?_PMD_Initialize 0001  
                       keeloq_classic_decrypt_packet@data 0038  
                                  ?_I2C1_DO_SEND_ADR_READ 0001  
                                           _erroranterior 018B  
                                     ??_I2C1_DO_SEND_STOP 0010  
                  __end_of_EUSART1_SetFramingErrorHandler A00E  
                          _EUSART1_SetFramingErrorHandler A004  
                                    _refreshADCZeroOffset 76A0  
                                ??_sm_execute_ControlGate 00E9  
                                   i2c_readDataBlock@data 0024  
                                   _VerifyElectricalBrake 8990  
                                                 i2l15002 503E  
                                                 i2l15006 5054  
                                                 i2l13248 9D5C  
                                                 i2l15104 5242  
                                                 i2l15008 505C  
                                                 i2l15050 514A  
                                                 i2l15034 50E2  
                                                 i2l15018 5090  
                                                 i2l15202 58C4  
                                                 i2l15052 5150  
                                                 i2l15028 50BC  
                                                 i2l15108 525A  
                                                 i2l15140 578C  
                                                 i2l15070 51AC  
                                                 i2l15062 5184  
                                                 i2l15046 512A  
                                                 i2l15214 5902  
                                                 i2l15142 5796  
                                                 i2l15126 5750  
                                                 i2l17000 9900  
                                                 i2l15048 513A  
                                                 i2l15082 51F6  
                                                 i2l15226 593E  
                                                 i2l15170 5814  
                                                 i2l17020 819E  
                                                 i2l15148 57B0  
                                                 i2l15094 521A  
                                                 i2l15158 57DA  
                                                 i2l15238 92CA  
                                                 i2l15262 85DE  
                                                 i2l15088 5204  
                                                 i2l15272 860C  
                                                 i2l17120 6E7E  
                                                 i2l15098 522A  
                                                 i2l14802 7D3A  
                                                 i2l15178 5852  
                                                 i2l17106 6E4A  
                                                 i2l14804 7D46  
                                                 i2l14814 7D74  
                                                 i2l17070 6DB4  
                                                 i2l17134 6EB2  
                                                 i2l17062 6DA0  
                                                 i2l14824 7DA6  
                                                 i2l17128 6E9A  
                                                 i2l14850 8A68  
                                                 i2l14844 8A4C  
                                                 i2l17086 6DFE  
                                                 i2l17096 6E28  
                                                 i2l14794 7CFE  
                                                 i2l14998 502E  
                          actionZone_Opened@typeOpenOrder 0021  
                                   ?_getStateOpenPosition 0001  
                                          ??_RemoveSerial 00D8  
                                              _fimdecurso 0175  
                            ?_EUSART1_DefaultErrorHandler 0001  
                                       _I2C1_MasterIsNack 9FA6  
                                                 _SP1BRGH 000F9C  
                                                 _SP1BRGL 000F9B  
                                              _dispStruct 0072  
                                                 _OSCCON1 000ED8  
                                                 _OSCCON3 000EDA  
                                               _I2C1_Open 8696  
                               ??_I2C1_DO_RX_NACK_RESTART 0010  
                                                 _RGB_Set 9F7C  
                                              _auxCounter 00FC  
                                         ??_readRFButtons 003B  
                                                 _OSCTUNE 000EDD  
                                       _I2C1_MasterSetIrq A098  
                                                 _SSP1ADD 000F93  
                                                 _SLRCONA 000F0E  
                                                 _SLRCONB 000F16  
                                                 _SLRCONC 000F1E  
                                                 _SLRCOND 000F23  
                                                 _SLRCONE 000F2B  
                                                 _WDTCON0 000ED2  
                                                 _SSP1BUF 000F92  
                                                 _WDTCON1 000ED3  
                                      ?_I2C1_MasterIsNack 0001  
                              ?_I2C1_DO_SEND_RESTART_READ 0001  
                          ??_I2C1_SetDataCompleteCallback 0019  
                                        ?_TMR1_WriteTimer 0001  
                                      ?_I2C1_MasterSetIrq 0001  
                            __end_of_generateErrorLearnig 8E6A  
                                            _classic_data 0292  
                                          load_New_Menu@i 0023  
                                         ?_setValueToEdit 003A  
                                                 _RFcount 007E  
                         ??_keeloq_classic_decrypt_packet 00D8  
                                                 _Decrypt 7B58  
                                  eusartparser@relcounter 00F7  
                                          ??_WaitPreFlash 0018  
                                                 _RFstate 019C  
                                      _i2c1_fsmStateTable 0F01  
                                          ??_NormalKeyGen 0028  
                                     ??_I2C1_MasterIsNack 0010  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F500 9A9E  
          _rd1RegCompleteHandler@i2c1_master_example$F500 9A72  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F511 9A72  
          _rd2RegCompleteHandler@i2c1_master_example$F511 9A46  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F523 9B7A  
          _wr2RegCompleteHandler@i2c1_master_example$F523 9B4E  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F517 9A46  
                               __end_of_I2C1_DO_SEND_STOP A066  
          _wr1RegCompleteHandler@i2c1_master_example$F517 9A1A  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535 9714  
        _rdBlkRegCompleteHandler@i2c1_master_example$F535 96D4  
                               ??_rdBlkRegCompleteHandler 001B  
                          getCurrentComparator@tempOffset 0020  
                                                 _ReadADC 92BA  
                                      I2C1_SetCallback@cb 0010  
                                           _write_package 9996  
                                     ??_I2C1_MasterSetIrq 0010  
                                     _controlSelectRemote 4048  
                              __end_of_clearLearningValue 8916  
                                                 _NextHop 028E  
                                                 __Hparam 0000  
                              __end_of_write_eusartparser 3604  
                                                 __Lparam 0000  
                                         _WWDT_Initialize 9FBE  
                                         ??_load_New_Menu 0020  
                              ??_TMR2_SetInterruptHandler 0012  
                                               _ADC_array 0200  
                                            _getSerialCmd 9456  
                                                 ___awdiv 8612  
                                                 ___lbdiv 97D0  
                                                 ___lbmod 9B7A  
                                                 ___lldiv 871A  
                                              _readInputs 7598  
                                         _controlVelocity 5952  
                                                 ___lwdiv 9364  
                                           _OpenFullOrder 9C1C  
                                            __psmallconst 0F00  
                                     RemoveSerial@cmdType 00DA  
                   __end_of_setPositionInvertionInClosing 7256  
                           _setPositionInvertionInClosing 712E  
                          ??_sm_execute_menuConfiguration 00EB  
                                     _EUSART1_is_rx_ready 9F5C  
                                          getHopCode@data 0016  
                                                 _difTime 0193  
                                                 __pcinit 7E64  
                                           ?_I2C1_DO_IDLE 0001  
                                           ?_I2C1_DO_RCEN 0001  
                                                 __ramtop 0F00  
                                  i2c_writeNBytes@address 0039  
                                   __end_of_getTypeRemote A092  
                                    __end_of_init_package 98DA  
                                                 __ptext0 6A88  
                                                 __ptext1 3B36  
                                                 __ptext2 1908  
                                                 __ptext3 3604  
                                                 __ptext4 4A9A  
                                                 __ptext5 9DD0  
                                                 __ptext6 4048  
                                                 __ptext7 A08C  
                                                 __ptext8 9456  
                                                 __ptext9 7DB0  
                                   ?_refreshADCZeroOffset 0001  
                                              _memoryTEMP 02A2  
                                      i2c_readDataBlock@d 002A  
                                _I2C1_MasterEnableRestart A0D8  
                          ??_TMR1_DefaultInterruptHandler 0001  
                               __end_of_I2C1_MasterIsNack 9FB2  
                            ?_I2C1_SetAddressNackCallback 0015  
                                               _T1CONbits 000FCF  
                   __end_of_setPositionInvertionInOpening 7B58  
                           _setPositionInvertionInOpening 7A7C  
                                                 _lastKey 0198  
                                              _readbutton 8D96  
                                   _OSCILLATOR_Initialize 9EE2  
                                   OpenWalkOrder@diffTime 001A  
                                             _ShowVersion 8E6A  
                                    ?_controlSelectRemote 0001  
                             ?_validateRemoteSerialNumber 002E  
                                        _InitFullAutoTime 9E04  
                               __end_of_I2C1_MasterSetIrq A09E  
                             checkNVM_VarSystem@saveParam 003A  
                                                 _menu_st 0151  
                                __end_of_I2C1_DO_TX_EMPTY 8FEE  
                                  RemoveSerial@tempSerial 00DB  
                                       __end_of_setRGB_ON 835E  
                                      _EUSART1_Initialize 881C  
                                ??_PIN_MANAGER_Initialize 0010  
                               ?_TMR1_SetInterruptHandler 0010  
                                              ?_I2C1_Open 0001  
                                                 _sumHIST 789A  
                                                 _sm_init 920E  
                                          _BufferRF_12BIT 0189  
                                             sumHIST@sumH 001C  
                                    __end_of_read_package 9406  
                                                 _var_sys 0100  
                           ??_EUSART1_DefaultErrorHandler 0001  
                             ??_ControlDecelarationFactor 0010  
                                ?_I2C1_CallbackReturnStop 0019  
                                     init_package@package 0010  
                                           _OpenWalkOrder 8CBA  
                                    _zeroCrossingWaitTime 02FA  
                                       SetSegmentValue@d1 001D  
                                       SetSegmentValue@d2 001C  
                       __end_of_I2C1_DO_SEND_RESTART_READ A07E  
                                    end_of_initialization 7F0A  
                              __end_of_I2C1_MasterSendAck A0A4  
                                    ?_EUSART1_is_rx_ready 0001  
                                     _I2C1_MasterClearIrq A0AA  
                                     ?_EUSART1_Initialize 0001  
                                               _PCON0bits 000FD7  
                                                 memcpy@d 0017  
                                                 memcpy@n 0014  
                                                 memcpy@s 0019  
                              __end_of_I2C1_MasterStartRx A0CC  
                             _EUSART1_OverrunErrorHandler 02E7  
                                  ?_rd1RegCompleteHandler 0019  
                                         _i2c_writeNBytes 8AF6  
                              ?_GetSecurityStateInClosing 0001  
                                  _I2C1_DO_SEND_ADR_WRITE 9F8A  
                                       ?_cmdMemoryIsEmpty 002E  
                                          ?_write_package 0011  
                                           _calculateMean 8ED0  
                            __end_of_sm_get_current_state 9F5C  
                                               i2u1512_40 574A  
                                               i2u1507_40 5218  
                                               i2u1531_40 5878  
                                               i2u1532_40 5886  
                                               i2u1524_40 5808  
                                               i2u1541_40 58EA  
                                               i2u1525_40 580E  
                                               i2u2316_48 003E  
                                               i2u1470_40 7D54  
                                               i2u1471_40 7D62  
                                               i2u1535_40 58A4  
                                               i2u1519_40 57AA  
                            __end_of_I2C1_DO_SEND_RESTART A06E  
                                               i2u1544_40 590E  
                                               i2u1560_40 66E2  
                                               i2u2319_48 0056  
                                               i2u1552_45 92E2  
                                               i2u1473_40 7D80  
                                               i2u1545_40 5916  
                                               i2u1537_40 58BA  
                                               i2u1561_40 6756  
                                               i2u1474_40 7D94  
                                               i2u1482_40 8A62  
                                               i2u1378_40 9BBE  
                                               i2u1554_40 859C  
                                               i2u1475_40 7DA2  
                                               i2u1547_40 5936  
                                    __end_of_eusartparser 1908  
                                               i2u1468_40 7D18  
                                               i2u1556_40 85EE  
                                         _WWDT_TimerClear 9D7C  
                                 __end_of_I2C1_MasterOpen 9ECA  
                                  ?_wr1RegCompleteHandler 0019  
                                               i2u1494_40 50D0  
                                               i2u1478_40 8A2C  
                                               i2u1910_48 8134  
                                               i2u1910_49 8146  
                                               i2u1496_40 50FA  
                                               i2u1912_48 8160  
                                               i2u1497_40 510A  
                                               i2u1489_40 5054  
                                               i2u1920_48 9782  
                                   __end_of_ControlLights 4A9A  
                                               i2u1912_49 8172  
                                               i2u1498_40 511A  
                                               i2u1914_48 818A  
                                               i2u3443_47 9F02  
                                               i2u1932_40 6E14  
                                               i2u1916_48 9C7C  
                                 __end_of_I2C1_MasterStop A0D8  
                                 __end_of_I2C1_Initialize 9F4A  
                                               i2u1944_48 6EC0  
                                               i2u1929_40 6DF0  
                                         ___lldiv@divisor 0014  
                                   __end_of_ControlInputs 737A  
                   __end_of_EUSART1_SetRxInterruptHandler 9FFA  
                           _EUSART1_SetRxInterruptHandler 9FF0  
                                             _I2C1_Poller 9F6C  
                        ??_SetSegmentValueIntermitentMain 001F  
                         ?_SetSegmentValueIntermitentMain 001C  
                                         _WWDT_SoftEnable A0BC  
                                         ___lldiv@counter 001C  
                                      ??_cmdMemoryIsEmpty 002F  
                               ?_I2C1_CallbackReturnReset 0019  
                           __end_of_I2C1_MasterDisableIrq A0E4  
                                             _I2C1_Status 023C  
                              ?_GetSecurityStateInOpening 0001  
                                            _ControlMotor 54E6  
                                            _done_changes 018E  
                                  SaveNVM_VarSystem@point 00DB  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                             ?_getHopCode 0016  
                                          ?_OpenFullOrder 0001  
                        SetSegmentValueIntermitentMain@d1 001F  
                        SetSegmentValueIntermitentMain@d2 001C  
                                     _I2C1_MasterSendNack A0A4  
                                           HopCHK@hopDiff 0026  
                     __end_of_I2C1_SetAddressNackCallback 9EB2  
                             _I2C1_SetAddressNackCallback 9E9A  
                                        ?_ADCC_Initialize 0001  
                                     _getTimeDecelaration 7994  
                                              _sm_restart 95CA  
                        __end_of_ADCC_GetSingleConversion 9F0E  
                                    ?_I2C1_MasterClearIrq 0001  
                                          ??_I2C1_DO_IDLE 0010  
                                    ??_EUSART1_Initialize 0012  
                                        NormalKeyGen@SEED 02D9  
                                          ??_I2C1_DO_RCEN 0010  
                      __end_of_I2C1_DO_SEND_RESTART_WRITE A076  
                              _I2C1_DO_SEND_RESTART_WRITE A06E  
                       actionZone_Closing@securityClosing 0032  
                             ?_sm_execute_ControlLearning 00DC  
                                _TMR0_SetInterruptHandler 9FDC  
                                               _PORTAbits 000F8D  
                                               _PORTBbits 000F8E  
                                  ?_VerifyElectricalBrake 0001  
                                               _PORTEbits 000F91  
                         __end_of_rdBlkRegCompleteHandler 9754  
                                  ??_getStateOpenPosition 0032  
                                            ??_CloseOrder 0018  
                                   ??_controlSelectRemote 00E0  
                                    _SetSegmentValueLearn 779E  
                           ??_I2C1_SetAddressNackCallback 0019  
                               I2C1_Read1ByteRegister@reg 0022  
                                        ___lbmod@dividend 0011  
                                    __end_of_Segments_Set 9FBE  
                                     _ControlCounterMoves 915C  
                            _controlLearning_stateMachine 02B2  
                         I2C1_SetDataCompleteCallback@ptr 0017  
                                          ?_OpenWalkOrder 0001  
                                              _stateMotor 0083  
                                      eusartparser@i_7381 00E9  
                                      eusartparser@i_7390 00EF  
                                      eusartparser@i_7382 00ED  
                                      eusartparser@i_7391 00F0  
                                      eusartparser@i_7383 00EE  
                                      eusartparser@i_7392 00F4  
                                      eusartparser@i_7384 00F1  
                                      eusartparser@i_7393 00F5  
                                      eusartparser@i_7385 00F2  
                                      eusartparser@i_7394 00F6  
                                      eusartparser@i_7386 00F3  
                                      eusartparser@i_7388 00EA  
                                      eusartparser@i_7389 00EB  
                                           ?_sumEnergyADC 0010  
                          I2C1_CallbackReturnReset@funPtr 0019  
                       actionZone_Opening@securityClosing 00E4  
                                    ?_I2C1_MasterSendNack 0001  
                         keeloqDecryptPacket@classic_data 00E2  
                                     EUSART1_Write@txData 0010  
                                       ??_ClearFlag_rfCMD 0010  
                                    ?_getTimeDecelaration 0029  
                                   ??_EUSART1_is_rx_ready 0010  
                                       _saveEnergyADCHist 9BCE  
                                 __end_of_WWDT_Initialize 9FC8  
                                             ___lbmod@rem 0013  
                       actionZone_Opening@securityOpening 00E5  
                                      eusartparser@buffer 0185  
                                          ?_calculateMean 0010  
                                        ??_refreshCurrent 0021  
                                     _updateChangesToUart 8F32  
                                       ??_SetSegmentValue 001D  
                                            _EUSART1_Read 953C  
                                      ?_saveEnergyADCHist 0010  
                                      eusartparser@save_f 018D  
                       __end_of_GetSecurityStateInClosing 8064  
                                      eusartparser@serial 00F8  
                                        ??_refreshSegment 0002  
                                          __end_of_DecCHK 98A8  
                                       _controlLearnDigit 990C  
                                 __end_of_controlVelocity 5B70  
                                    ?_ControlCounterMoves 0001  
                                     setValueToEdit@value 01FC  
                                      _actionZone_Closing 4D90  
                                    __end_of_RemoveSerial 881C  
                                          __end_of_HopCHK 858C  
                                      __end_of_CloseOrder 9C1C  
                                 _zeroCrossingWaitTimeIdx 0084  
                                            _InitReceiver 9DD0  
                               _ControlDecelarationFactor 9E52  
                                      ?_controlLearnDigit 0001  
                                    _timer0ReloadVal16bit 0290  
                       __end_of_GetSecurityStateInOpening 810A  
                                       setRGB_ON@RGBLigth 0015  
                                            ??_ReadSerial 0030  
                                     ??_saveEnergyADCHist 0012  
                            __end_of_INTERRUPT_Initialize A0C4  
                                      _actionZone_Opening 5292  
                                   ??_I2C1_MasterClearIrq 0010  
                    __end_of_TMR2_DefaultInterruptHandler A0EC  
                            _TMR2_DefaultInterruptHandler A0EA  
                                             ?_readInputs 0001  
                                               _DispTable 03D2  
                                          __end_of___lmul 92BA  
                                   __end_of_LoadManufCode 9CFA  
                                     ?_actionZone_Closing 0001  
                                          __end_of___wmul 9C68  
                                          _I2C1_DO_RX_ACK A056  
                                  ??_refreshADCZeroOffset 0017  
                                    _generateErrorLearnig 8E02  
                                            _InitSoftStop 94F2  
                                     ??_controlLearnDigit 0013  
                                 i2_VerifyElectricalBrake 8A08  
                                          __end_of_memcpy 9652  
                                    ?_updateChangesToUart 0001  
                                  ?_OSCILLATOR_Initialize 0001  
                                    __end_of_WaitPreFlash 8BDA  
                            __end_of_getCurrentComparator 65CE  
                                      sm_send_event@event 0014  
                                    __end_of_NormalKeyGen 7598  
                                           _saveNewSerial 8BDA  
                                             ?_readbutton 0001  
                                     ?_actionZone_Opening 0001  
                                   ?_SetSegmentValueLearn 0001  
                         __end_of_I2C1_CallbackReturnStop A0D4  
                          ?_setPositionInvertionInClosing 0001  
                           __end_of_I2C1_MasterSendTxData A086  
                                       _read_eusartparser 2988  
                                   refreshADCZeroOffset@i 0017  
                                     start_initialization 7E64  
                             i2GetMotorPower@defineatraso 0004  
                                             ??_I2C1_Open 0010  
                                          ??_sumEnergyADC 0012  
                                      ?_read_eusartparser 0018  
                                             __end_of_rxi 5292  
                                   ??_I2C1_MasterSendNack 0010  
                                 __end_of_i2c_writeNBytes 8B6A  
                          ?_setPositionInvertionInOpening 0001  
                                   ??_getTimeDecelaration 002D  
           EUSART1_SetRxInterruptHandler@interruptHandler 0010  
           EUSART1_SetTxInterruptHandler@interruptHandler 0010  
                               __end_of_saveEnergyADCHist 9BF6  
                                 __end_of_WWDT_TimerClear 9D98  
                                    ??_actionZone_Closing 0032  
                                   __end_of_EUSART1_Write 96D4  
                                 __end_of_WWDT_SoftEnable A0C0  
                                      __end_of_ReadSerial 8CBA  
                                         ??_write_package 0018  
                                  rd1RegCompleteHandler@p 0019  
                            __end_of_verifyProgramingMode 9876  
                                               _ReqResync 9E6A  
                               __end_of_controlLearnDigit 993C  
                                     ??_read_eusartparser 001A  
                                                ??_DecCHK 0012  
                                       _programmer_enable 0085  
                                    ??_actionZone_Opening 003B  
                                  _sm_execute_ControlGate 442A  
                 sm_execute_ControlLearning@typeOpenOrder 003A  
                                                ??_HopCHK 0026  
                               refreshADCZeroOffset@media 0018  
                                I2C1_SetBuffer@bufferSize 0012  
                                   ??_ControlCounterMoves 003A  
                                       _controlSaveRemote 7DB0  
                                        ?_I2C1_MasterOpen 0001  
                            keeloqDecryptPacket@hop_error 00E8  
                                        ?_I2C1_MasterStop 0001  
                                        ?_I2C1_Initialize 0001  
                                 saveNewSerial@tempSerial 00D8  
                                  controlSelectRemote@pos 00E2  
                                         ??_OpenFullOrder 0018  
                                   calculateMean@newValue 0014  
                                      ?_controlSaveRemote 0001  
                                 sm_get_current_state@psm 0010  
                                        ??_PMD_Initialize 0010  
                                                ??___lmul 0025  
                                  __end_of_I2C1_DO_RX_ACK A05E  
                                                ??___wmul 0014  
                                      _zeroCrossingLength 0197  
                                          _VerifyFollowMe 9CB4  
                                  wr1RegCompleteHandler@p 0019  
                                   _EUSART1_RxDataHandler 9D3E  
                                 ??_I2C1_DO_SEND_ADR_READ 0010  
                          ?_EUSART1_SetRxInterruptHandler 0010  
                                             ?_sm_restart 0010  
                                             __pdataBANK0 00FC  
                                             __pdataBANK1 01FE  
                                             __pdataBANK2 02F6  
                                             __pdataBANK3 03D2  
                                   ?_generateErrorLearnig 0001  
                                                ??_memcpy 0016  
                                       ?_setFlashLigth_ON 0010  
                           ?_TMR2_DefaultInterruptHandler 0001  
                                   ??_updateChangesToUart 001C  
                                       _controlMotorForce 5730  
                                     ??_controlSaveRemote 0020  
                               __end_of_read_eusartparser 3060  
                                          ?_saveNewSerial 00D8  
                                        I2C1_Open@address 0010  
                                          _eusart1RxCount 0093  
                                      ??_setFlashLigth_ON 0012  
                                _ADCC_GetSingleConversion 9EF8  
                                      ?_controlMotorForce 0001  
                                   __end_of_InitSoftStart 90A6  
                                               _StopOrder 9D60  
                                    _sm_get_current_state 9F4A  
                                             __pbssCOMRAM 003B  
                                         ??_OpenWalkOrder 0018  
                                    _I2C1_DO_SEND_RESTART A066  
                                getTimeDecelaration@state 0031  
                       _EUSART1_RxDefaultInterruptHandler 02EB  
                                           __pcstackBANK0 00D8  
                                        ??_setValueToEdit 00DC  
                                           __pcstackBANK2 02EF  
                                                ?_RGB_Set 0001  
                                        _brakeElectric_st 0078  
                             ??_I2C1_DO_SEND_RESTART_READ 0010  
                                     ??_controlMotorForce 0005  
                                      _ResetDefaultMemory 68FE  
                                    ReadSerial@tempSerial 002E  
                                         ??_calculateMean 0018  
                         ??_EUSART1_SetTxInterruptHandler 0012  
                                    __end_of_I2C1_DO_IDLE A036  
                        ??_EUSART1_SetFramingErrorHandler 0012  
                         ?_EUSART1_SetFramingErrorHandler 0010  
                                                ?_Decrypt 001B  
                                    __end_of_I2C1_DO_RCEN A02C  
                                           _GetMotorPower 7C24  
                                        ?_WWDT_Initialize 0001  
                                              ?_ReqResync 0010  
                               __end_of_controlSaveRemote 7E64  
                                            _init_package 98A8  
                           I2C1_SetAddressNackCallback@cb 0015  
                                    updateChangesToUart@i 001C  
                                      sm_execute_main@psm 00ED  
                                                ?_ReadADC 0001  
                                            RGB_Set@value 0010  
                                   _TMR0_InterruptHandler 02E3  
                                     ?_ResetDefaultMemory 0001  
                                               __pnvBANK1 01FD  
                                               __pnvBANK2 02DD  
                                   _rd2RegCompleteHandler 9ACA  
                                        _InitWalkAutoTime 9F0E  
                                        ?_controlVelocity 0001  
                                __end_of_InitFullAutoTime 9E1E  
                             __end_of_SetSegmentValueMain 9E04  
                          VerifyElectricalBrake@tempState 0010  
                        i2VerifyElectricalBrake@tempState 0001  
                                        ___lwdiv@dividend 0010  
                                  _PIN_MANAGER_Initialize 81A4  
                                  __end_of_VerifyFollowMe 9CD8  
                                   _wr2RegCompleteHandler 9A9E  
                              ??_I2C1_MasterEnableRestart 0010  
                                               __pintcode 0008  
                                            _read_package 93B6  
                                          _I2C1_MasterFsm 9310  
                              __end_of_checkNVM_VarSystem 6298  
                        __end_of_TMR1_SetInterruptHandler 9FDC  
                         ADCC_GetSingleConversion@channel 0001  
                                         ?_I2C1_DO_RX_ACK 0001  
                                                ?___awdiv 0014  
                                               __ptext100 9D98  
                                               __ptext101 81A4  
                                                ?___lbdiv 0010  
                                               __ptext110 A00E  
                                               __ptext102 9EE2  
                                               __ptext111 9406  
                                               __ptext103 A0C0  
                                               __ptext200 9DB4  
                                               __ptext120 6C10  
                                               __ptext112 9F5C  
                                               __ptext104 9F36  
                                               __ptext201 A0EC  
                                               __ptext121 9584  
                                               __ptext113 54E6  
                                               __ptext105 881C  
                                               __ptext210 9D3E  
                                               __ptext202 9C68  
                                               __ptext130 915C  
                                               __ptext122 789A  
                                               __ptext114 8990  
                                               __ptext106 9FE6  
                                               __ptext211 0000  
                                               __ptext203 501C  
                                               __ptext131 980A  
                                               __ptext123 83EA  
                                               __ptext115 4776  
                                               __ptext107 9FF0  
                                               __ptext204 A0EE  
                                               __ptext140 A03E  
                                               __ptext132 8AF6  
                                               __ptext124 9BCE  
                                               __ptext116 82CE  
                                               __ptext108 9FFA  
                                               __ptext205 98DA  
                                               __ptext141 9310  
                                               __ptext133 960E  
                                               __ptext125 76A0  
                                               __ptext117 9F7C  
                                               __ptext109 A004  
                                               __ptext206 810A  
                                               __ptext150 A076  
                                               __ptext142 94A4  
                                               __ptext134 9E9A  
                                               __ptext126 9364  
                                               __ptext118 9794  
                                               __ptext207 A0B0  
                                               __ptext151 A022  
                                               __ptext143 A018  
                                               __ptext135 8696  
                                               __ptext127 6434  
                                               __ptext119 7256  
                                               __ptext208 A0F0  
                                               __ptext160 A07E  
                                               __ptext152 8916  
                                               __ptext144 A046  
                                               __ptext136 9EB2  
                                               __ptext128 9C42  
                                               __ptext209 A0B6  
                                               __ptext161 A09E  
                                               __ptext153 8476  
                                               __ptext145 A04E  
                                               __ptext137 A036  
                                               __ptext129 7C24  
                                               __ptext170 9A72  
                                               __ptext162 A0C4  
                                               __ptext154 9F8A  
                                               __ptext146 A056  
                                               __ptext138 99EE  
                                               __ptext171 9714  
                                               __ptext163 A0A4  
                                               __ptext155 9F98  
                                               __ptext147 A05E  
                                               __ptext139 9F6C  
                                               __ptext180 A0D4  
                                               __ptext172 9A9E  
                                               __ptext164 A0C8  
                                               __ptext156 A02C  
                                               __ptext148 A066  
                                               __ptext181 A0D8  
                                               __ptext173 9ACA  
                                               __ptext165 A0CC  
                                               __ptext157 8F90  
                                               __ptext149 A06E  
                              updateChangesToUart@package 001D  
                                               __ptext190 9FB2  
                                               __ptext182 A0DC  
                                               __ptext174 9AF6  
                                               __ptext166 A0D0  
                                               __ptext158 A098  
                                               __ptext191 65CE  
                                               __ptext183 9D1C  
                                               __ptext175 9B22  
                                               __ptext167 96D4  
                                               __ptext159 9FA6  
                                               __ptext192 9BA4  
                                               __ptext184 A0E0  
                                               __ptext176 9B4E  
                                               __ptext168 9A1A  
                                               __ptext193 A0EA  
                                               __ptext185 A0E4  
                                               __ptext177 9ECA  
                                               __ptext169 9A46  
                                               __ptext194 92BA  
                                               __ptext186 A0AA  
                                               __ptext178 8D28  
                                               __ptext195 9EF8  
                                               __ptext179 9E38  
                                               __ptext196 9754  
                                               __ptext188 6D84  
                                               __ptext197 5730  
                                               __ptext189 858C  
                                               __ptext198 8A08  
                                               __ptext199 7CEA  
                                                ?___lbmod 0010  
                                 write_eusartparser@debug 001F  
                            ??_SetSegmentValueIntermitent 0013  
                                                ?___lldiv 0010  
                               ??i2_VerifyElectricalBrake 0001  
                               __end_of_controlMotorForce 5952  
                                                ?___lwdiv 0010  
                                   confirmpackage@confirm 0014  
                                    i2c_readDataBlock@len 0026  
                                    i2c_readDataBlock@reg 0022  
                                   confirmpackage@package 0012  
                                 _I2C1_MasterWaitForEvent A03E  
                                        _I2C1_MasterClose A0E4  
                         DecryptPacket_12BIT@classic_data 00E2  
                                ??_I2C1_Read1ByteRegister 0023  
                                          _I2C1_SetBuffer 9E38  
                            ??_INTERRUPT_InterruptManager 000A  
                                  ??_SetSegmentValueLearn 0010  
                                        _I2C1_MasterStart A0DC  
                                    NormalKeyGen@SKEYtemp 002C  
                                        _I2C1_MasterWrite A036  
                                      _clearLearningValue 889A  
                                      _write_eusartparser 3060  
                                    ??_ResetDefaultMemory 003A  
                                                _BAUD1CON 000F9F  
                                             __smallconst 0F00  
                                   ?_sm_get_current_state 0010  
                                            ?_ShowVersion 0001  
                                                _F2Chance 0199  
                                              ?_StopOrder 0001  
              __end_of_EUSART1_DefaultOverrunErrorHandler A0B6  
                    ??_EUSART1_DefaultOverrunErrorHandler 0001  
                     ?_EUSART1_DefaultOverrunErrorHandler 0001  
                      _EUSART1_DefaultOverrunErrorHandler A0B0  
                                   ?_I2C1_DO_SEND_RESTART 0001  
                                       _i2c_readDataBlock 8A80  
                                            _eusartparser 0F22  
                                    _EUSART1_ErrorHandler 02E5  
                                       ?_I2C1_DO_TX_EMPTY 0001  
                                                ?_sumHIST 0010  
                                                ?_sm_init 0012  
                                 _EUSART1_SetErrorHandler A00E  
                                      ?_i2c_readDataBlock 0022  
                                     ReqResync@CurrentHop 0010  
                        __end_of_I2C1_CallbackReturnReset A0D0  
                                     ?_clearLearningValue 0001  
                                        ___lwdiv@quotient 0015  
                                     ?_write_eusartparser 0010  
                                        ?_i2c_writeNBytes 0022  
                                      ??_I2C1_DO_TX_EMPTY 001B  
                                                _T2CLKCON 000FBF  
                                   __end_of_readRFButtons 68FE  
                                 ??_rd1RegCompleteHandler 001B  
                                 ?_I2C1_DO_SEND_ADR_WRITE 0001  
                                               _setRGB_ON 82CE  
                               I2C1_MasterSendTxData@data 0010  
                                        ?_WWDT_TimerClear 0001  
                                    _INTERRUPT_Initialize A0C0  
                                          ?_GetMotorPower 0001  
                                 ??_wr1RegCompleteHandler 001B  
                                        ?_WWDT_SoftEnable 0001  
                                              sumHIST@max 0018  
                                              sumHIST@min 001A  
                                       ??_TMR0_Initialize 0012  
                                     ??_i2c_readDataBlock 0028  
                                        _I2C1_SetCallback 8D28  
                                              sm_init@psm 0012  
                                          ___wmul@product 0014  
                                                _LATAbits 000F83  
                 EUSART1_SetErrorHandler@interruptHandler 0010  
                                                _LATCbits 000F85  
                                read_eusartparser@package 0018  
                                                _LATDbits 000F86  
                                                _LATEbits 000F87  
                                              _I2C1_DO_RX 8916  
                                              _I2C1_DO_TX 8476  
                             ??_GetSecurityStateInClosing 0014  
                                                _PIE0bits 000EC2  
                                    _getCurrentComparator 6434  
                                                _PIE3bits 000EC5  
                                                _PIE4bits 000EC6  
                                              DecCHK@data 0010  
                                                Decrypt@i 001E  
                                                Decrypt@j 001F  
                                                Decrypt@p 0020  
                                         _firstselectflag 01FE  
                                     _DecryptPacket_12BIT 835E  
                                              _I2C1_Close 9D1C  
                         setValueToEdit@ParameterSelected 003A  
                                            ?_I2C1_Poller 0001  
                                  __end_of_I2C1_MasterFsm 9364  
                            __end_of_I2C1_MasterGetRxData A0C8  
                              ??_TMR0_SetInterruptHandler 0012  
                                                _PIR0bits 000ECA  
                                            _Segments_Set 9FB2  
                                                _PIR3bits 000ECD  
                                         ?_VerifyFollowMe 0001  
                                                _PIR4bits 000ECE  
                                readRFButtons@rollingCode 0187  
                             ??_GetSecurityStateInOpening 0014  
                                  ?_EUSART1_RxDataHandler 0001  
                                    ??_clearLearningValue 0010  
                                      _I2C1_MasterSendAck A09E  
                                    ??_write_eusartparser 0017  
                                    __end_of_sumEnergyADC 8476  
                               _I2C1_DO_SEND_RESTART_READ A076  
                                            ??_getHopCode 0018  
                                               _pointSync 007A  
                                   __end_of_load_New_Menu 4D90  
                                                _SSP1CON1 000F96  
                                                _SSP1CON2 000F97  
                                  ??_generateErrorLearnig 0017  
                                                _TMR0_ISR 9C68  
                                                _TMR1_ISR 9754  
                                                _TMR2_ISR 6D84  
                                           _getKeyPressed 9E82  
                                 ??_VerifyElectricalBrake 0010  
                                  __end_of_I2C1_SetBuffer 9E52  
                                               _temppower 0192  
                                         _powerControl_st 017B  
                                                _SSP1STAT 000F95  
                    __end_of_I2C1_SetDataCompleteCallback 9EE2  
                            _I2C1_SetDataCompleteCallback 9ECA  
                                      _I2C1_MasterStartRx A0C8  
                                         ??_saveNewSerial 00DD  
                             ?_I2C1_DO_SEND_RESTART_WRITE 0001  
                                       ??_TMR1_Initialize 0012  
                                         _ClearFlag_rfCMD A092  
                                     ?_I2C1_MasterSendAck 0001  
                                              _ADCON0bits 000F60  
                               __end_of_i2c_readDataBlock 8AF6  
                                       ___wmul@multiplier 0010  
                                ?_I2C1_DO_RX_NACK_RESTART 0001  
                                    _verifyProgramingMode 9842  
                                       ??_sm_execute_main 00EF  
                                    _numberOfErrorCurrent 008E  
                                    ?_DecryptPacket_12BIT 00E0  
                                               _ts_system 019E  
                                                _BitCount 008C  
                                     ?_I2C1_MasterStartRx 0001  
                            __end_of_I2C1_DO_ADDRESS_NACK 94F2  
                          controlSelectRemote@validSerial 00E1  
                          ??_TMR2_DefaultInterruptHandler 0001  
                                       _actionZone_Closed 7F14  
                               ?_TMR2_SetInterruptHandler 0010  
                                    _idxAdcZeroAquisition 008F  
                                         _SetSegmentValue 9E1E  
                                            _RemoveSerial 879C  
                          getStateOpenPosition@stateMotor 00D9  
                          __end_of_I2C1_DO_SEND_ADR_WRITE 9F98  
                                       _actionZone_Opened 5B70  
                                           _I2C1_DO_RESET A018  
                                      ?_actionZone_Closed 0001  
                                                _BufferRF 02C8  
                                     read_package@package 0018  
                                       ___lmul@multiplier 001D  
                                               copy_data0 7E78  
                                               copy_data1 7E98  
                                   ?_INTERRUPT_Initialize 0001  
                                              ?_setRGB_ON 0011  
                                   I2C1_Close@returnValue 0010  
                                ?_rdBlkRegCompleteHandler 0019  
                                      ?_actionZone_Opened 0001  
                                        _Abertura_pedonal 0191  
                                     I2C1_SetCallback@idx 0014  
                                     I2C1_SetCallback@ptr 0012  
                                      __end_of_getHopCode 7000  
                                             ??_ReqResync 0012  
                                    ??_I2C1_MasterSendAck 0010  
                                       ??_TMR2_Initialize 0012  
                                   EUSART1_Read@readValue 0010  
                                  ?_rd2RegCompleteHandler 0019  
                                     ??_actionZone_Closed 0020  
                                            _WaitPreFlash 8B6A  
                                   ?_getCurrentComparator 0016  
                            __end_of_I2C1_MasterOperation 9A1A  
                                            _NormalKeyGen 748A  
                     sm_execute_ControlGate@typeOpenOrder 00EB  
                                  ?_wr2RegCompleteHandler 0019  
                                    ??_I2C1_MasterStartRx 0010  
                                     ??_actionZone_Opened 0020  
                            saveEnergyADCHist@valueToSave 0010  
                   __end_of_EUSART1_SetTxInterruptHandler 9FF0  
                           _EUSART1_SetTxInterruptHandler 9FE6  
                                           _sm_send_event 8FEE  
                                     _keeloqDecryptPacket 5D5E  
                                                __Hrparam 0000  
                                         ?_I2C1_MasterFsm 0001  
                                               memcpy@tmp 0016  
                                                __Lrparam 0000  
                                    sumEnergyADC@auxValue 0016  
                                     i2c_writeNBytes@data 0024  
                         actionZone_Opening@typeOpenOrder 00E6  
                                          ?_getKeyPressed 0001  
                               ??_I2C1_MasterWaitForEvent 0010  
                                       _main_stateMachine 01F1  
                                   _I2C1_MasterDisableIrq A0E0  
                                            ??_readInputs 0010  
                                 ??_OSCILLATOR_Initialize 0010  
                             __end_of_controlSelectRemote 442A  
                                         ?_I2C1_SetBuffer 0010  
                                          _fullmotorPower 0082  
                                  ResetDefaultMemory@type 003A  
                                        _controlTimeslots 65CE  
                                _TMR1_SetInterruptHandler 9FD2  
                                  ??_sm_get_current_state 0012  
                                   ?_verifyProgramingMode 0010  
                               _GetSecurityStateInClosing 7FBE  
                       I2C1_Read1ByteRegister@returnValue 0024  
                                  ??_I2C1_DO_SEND_RESTART 0010  
                                            ??_readbutton 0010  
                               __end_of_actionZone_Closed 7FBE  
                                   ??_DecryptPacket_12BIT 003B  
                                   _TMR1_InterruptHandler 02DF  
                               ??_EUSART1_SetErrorHandler 0012  
                                       ??i2_GetMotorPower 0001  
                     __end_of_EUSART1_DefaultErrorHandler A0BC  
                             _EUSART1_DefaultErrorHandler A0B6  
                                             ??_StopOrder 0018  
                             __end_of_EUSART1_is_rx_ready 9F6C  
                                    ?_keeloqDecryptPacket 00E0  
                               __end_of_actionZone_Opened 5D5E  
                               getStateOpenPosition@state 00D8  
                               _GetSecurityStateInOpening 8064  
                                         ___lwdiv@divisor 0012  
                                          ?_I2C1_DO_RESET 0001  
                                         ___lwdiv@counter 0014  
                                                __ptext10 9B7A  
                                                __ptext11 8612  
                                                __ptext20 920E  
                                                __ptext12 9DEA  
                                                __ptext21 95CA  
                                                __ptext13 A092  
                                                __ptext30 5B70  
                                                __ptext22 889A  
                                                __ptext14 990C  
                                                __ptext31 9CB4  
                                                __ptext23 8ED0  
                                                __ptext15 779E  
                                                __ptext40 8B6A  
                                                __ptext32 9BF6  
                                                __ptext24 5292  
                                                __ptext16 871A  
                                                __ptext41 9C1C  
                                                __ptext33 4D90  
                                                __ptext25 7A7C  
                                                __ptext17 442A  
                                                __ptext50 5F30  
                                                __ptext42 9E04  
                                                __ptext34 712E  
                                                __ptext26 5952  
                                                __ptext18 2270  
                                                __ptext51 97D0  
                                                __ptext43 8CBA  
                                                __ptext35 7994  
                                                __ptext27 737A  
                                                __ptext19 8E02  
                                                __ptext60 748A  
                                                __ptext52 9F22  
                                                __ptext44 8FEE  
                                                __ptext36 9264  
                                                __ptext28 94F2  
                                                __ptext61 9CD8  
                                                __ptext53 8D96  
                                                __ptext45 9F4A  
                                                __ptext37 9D60  
                                                __ptext29 9E52  
                                                __ptext70 60F8  
                                                __ptext62 7B58  
                                                __ptext54 93B6  
                                                __ptext46 904A  
                                                __ptext38 7FBE  
                                                __ptext71 68FE  
                                                __ptext63 8502  
                                                __ptext55 953C  
                                                __ptext47 9F0E  
                                                __ptext39 7F14  
                                                __ptext80 9694  
                                                __ptext72 90A6  
                                                __ptext64 6ED2  
                                                __ptext56 6768  
                                                __ptext48 8064  
                                                __ptext81 9102  
                                                __ptext73 9E82  
                                                __ptext65 9E6A  
                                                __ptext57 5D5E  
                                                __ptext49 996A  
                                                __ptext90 8E6A  
                                                __ptext82 98A8  
                                                __ptext74 0F22  
                                                __ptext66 9876  
                                                __ptext58 9842  
                                                __ptext91 9E1E  
                                                __ptext83 8BDA  
                                                __ptext75 3060  
                                                __ptext67 835E  
                                                __ptext59 91B6  
                                                __ptext92 993C  
                                                __ptext84 823C  
                                                __ptext76 6298  
                                                __ptext68 7598  
                                                __ptext93 9FBE  
                                                __ptext85 879C  
                                                __ptext77 8F32  
                                                __ptext69 7000  
                                                __ptext94 99C2  
                                                __ptext86 8C4A  
                                                __ptext78 2988  
                                                __ptext95 9FC8  
                                                __ptext87 8A80  
                                                __ptext79 9996  
                                                __ptext96 9652  
                                                __ptext88 9D7C  
                                                __ptext97 9FD2  
                                                __ptext89 A0BC  
                                                __ptext98 9CFA  
                                                __ptext99 9FDC  
                                            _SSP1CON1bits 000F96  
                                            _SSP1CON2bits 000F97  
                                     NormalKeyGen@HOPtemp 0028  
                                         ??_GetMotorPower 0010  
                                _controlGate_stateMachine 01E6  
                                           ?_GetOpenOrder 0001  
                                 ?_sm_execute_ControlGate 00E7  
                                 DecryptPacket_12BIT@data 00E0  
                                                _learn_st 0060  
                ?_rd2RegCompleteHandler@pic18f46k40$F7881 0019  
               ??_rd2RegCompleteHandler@pic18f46k40$F7883 001B  
                ?_rd1RegCompleteHandler@pic18f46k40$F7875 0019  
                ?_wr1RegCompleteHandler@pic18f46k40$F7867 0019  
               ??_rd1RegCompleteHandler@pic18f46k40$F7877 001B  
               ??_wr1RegCompleteHandler@pic18f46k40$F7869 001B  
              ?_rdBlkRegCompleteHandler@pic18f46k40$F7893 0019  
             ??_rdBlkRegCompleteHandler@pic18f46k40$F7895 001B  
                ?_wr2RegCompleteHandler@pic18f46k40$F7887 0019  
               ??_wr2RegCompleteHandler@pic18f46k40$F7889 001B  
                                      __end_of_readInputs 76A0  
                                _I2C1_CallbackReturnReset A0CC  
                                             ?_I2C1_DO_RX 0001  
                                             ?_I2C1_DO_TX 0001  
                                          ?_sm_send_event 0012  
                    __end_of_TMR0_DefaultInterruptHandler A0F0  
                            _TMR0_DefaultInterruptHandler A0EE  
                                i2c_readDataBlock@address 0029  
                             __end_of_I2C1_MasterClearIrq A0B0  
                            __end_of_I2C1_DO_RX_NACK_STOP A056  
                                             ?_I2C1_Close 0001  
                                          _ControlCurrent 6C10  
                                                _security 016A  
                                    RemoveSerial@position 003A  
                                      __end_of_readbutton 8E02  
                                              _RC1STAbits 000F9D  
          EUSART1_SetOverrunErrorHandler@interruptHandler 0010  
                                 __end_of_ClearFlag_rfCMD A098  
                                    sm_init@initial_state 0014  
                      __end_of_SetSegmentValueIntermitent 9996  
                              _SetSegmentValueIntermitent 996A  
                                                isa$xinst 000000  
                              ??_ADCC_GetSingleConversion 0001  
                                                int$flags 0050  
                         __end_of_I2C1_DO_RX_NACK_RESTART A04E  
                           SetSegmentValueLearn@direction 0012  
                                            ??_sm_restart 0012  
                                I2C1_MasterOperation@read 0020  
                      __end_of_INTERRUPT_InterruptManager 009C  
                              _INTERRUPT_InterruptManager 0008  
                                       _loadNVM_VarSystem 7000  
                                SaveNVM_VarSystem@tempAdd 00D9  
                                       ??_TMR1_WriteTimer 0003  
                                 __end_of_SetSegmentValue 9E38  
                           __end_of_I2C1_DO_SEND_ADR_READ 9FA6  
                             _EUSART1_FramingErrorHandler 02E9  
                                            _I2C1_DO_IDLE A02C  
                                     _EUSART1_Receive_ISR 810A  
                                            _I2C1_DO_RCEN A022  
                                     decrementTimeslot@ts 0001  
                                      ?_loadNVM_VarSystem 0001  
                           controlSelectRemote@tempSerial 00E4  
                                           _getTypeRemote A08C  
                             __end_of_I2C1_MasterSendNack A0AA  
                                        sm_send_event@psm 0012  
                             __end_of_getTimeDecelaration 7A7C  
                                   ??_keeloqDecryptPacket 00E4  
                                            _waitZeroPeak 0195  
                                __end_of_InitWalkAutoTime 9F22  
                                              _INTCONbits 000FF2  
                                       _aux_in_auto_close 018F  
                                                memcpy@d1 0010  
                                                memcpy@s1 0012  
                          I2C1_SetAddressNackCallback@ptr 0017  
                                      i2c_writeNBytes@dat 0028  
                                      i2c_writeNBytes@len 0025  
                                      i2c_writeNBytes@reg 0022  
                                    _I2C1_MasterGetRxData A0C4  
                                   _I2C1_MasterSendTxData A07E  
                                     ??_loadNVM_VarSystem 003B  
                                           sm_restart@psm 0010  
                                  ??_INTERRUPT_Initialize 0010  
                                            _RFFull_12BIT 008A  
                                    _control_limit_switch 0081  
                          __end_of_sm_execute_ControlGate 4776  
                                              Decrypt@aux 0021  
                                              Decrypt@key 001D  
                                          ??_GetOpenOrder 0020  
                                             ??_setRGB_ON 0013  
                             __end_of_ControlCounterMoves 91B6  
                                                intlevel2 0000  
                        actionZone_Opened@securityClosing 0020  
                        actionZone_Closed@securityOpening 0020  
                                __end_of_I2C1_MasterClose A0E8  
                                    ?_EUSART1_Receive_ISR 0001  
                                  _I2C1_Read1ByteRegister 90A6  
                                 readRFButtons@typeRemote 019B  
                                  ??_getCurrentComparator 001A  
                                  rd2RegCompleteHandler@p 0019  
                                      __end_of_sm_restart 960E  
                                        ___lldiv@dividend 0010  
                                 ?_PIN_MANAGER_Initialize 0001  
                                  __end_of_ControlCurrent 6D84  
                           I2C1_Read1ByteRegister@address 0023  
                                __end_of_I2C1_MasterStart A0E0  
                                __end_of_I2C1_MasterWrite A03E  
                                   __end_of_write_package 99C2  
                                             _tempCounter 02F6  
                  __end_of_EUSART1_SetOverrunErrorHandler A004  
                          _EUSART1_SetOverrunErrorHandler 9FFA  
                                        ??_I2C1_DO_RX_ACK 0010  
                                             _WDTCON0bits 000ED2  
                                             getHopCode@i 0023  
                                 _I2C1_CallbackReturnStop A0D0  
                            __end_of_EUSART1_Transmit_ISR 990C  
                                          _confirmpackage 9102  
                                      NormalKeyGen@Buffer 0030  
                                                sumHIST@i 0020  
                                         ??_getKeyPressed 0010  
                                           _ControlLights 4776  
                                       ?_InitFullAutoTime 0001  
                                           _ControlInputs 7256  
                           ?_TMR0_DefaultInterruptHandler 0001  
                                    _I2C1_DO_ADDRESS_NACK 94A4  
                                              HopCHK@data 0024  
                                  ?_I2C1_MasterDisableIrq 0001  
                                           ?_getSerialCmd 001B  
                             __end_of_updateChangesToUart 8F90  
                                          _ADC_zero_array 0396  
                               __end_of_loadNVM_VarSystem 712E  
                                      ??_InitFullAutoTime 0010  
                   __end_of_keeloq_classic_decrypt_packet 920E  
                           _keeloq_classic_decrypt_packet 91B6  
                                   __end_of_OpenFullOrder 9C42  
                                  wr2RegCompleteHandler@p 0019  
          EUSART1_SetFramingErrorHandler@interruptHandler 0010  
                          ?_EUSART1_SetTxInterruptHandler 0010  
                                  ??_verifyProgramingMode 0012  
                                      _eusart1RxLastError 019D  
                                          ?_getTypeRemote 0001  
                                        _cmdMemoryIsEmpty 823C  
                                      NormalKeyGen@serial 0026  
                                __end_of_I2C1_SetCallback 8D96  
                                             _var_sys_NVM 0098  
                                              _SSP1DATPPS 000EB8  
                                              _SSP1CLKPPS 000EB7  
                                         ??_I2C1_DO_RESET 0010  
                                    WWDT_TimerClear@state 0010  
                                        ___lldiv@quotient 0018  
                                    _I2C1_MasterOperation 99EE  
                                         _TMR0_Initialize 9CFA  
                            ??_validateRemoteSerialNumber 00D8  
                                      _checkNVM_VarSystem 60F8  
                                   ?_I2C1_MasterGetRxData 0001  
                           controlSelectRemote@typeRemote 00E3  
                                   __end_of_OpenWalkOrder 8D28  
                                            _sumEnergyADC 83EA  
                                          _listSyncValues 0300  
                                           setRGB_ON@Freq 0011  
                                     ?_checkNVM_VarSystem 0001  
                                   ??_EUSART1_Receive_ISR 0001  
                          __end_of_PIN_MANAGER_Initialize 823C  
                                       ??_ADCC_Initialize 0010  
                           __end_of_rd1RegCompleteHandler 9B22  
                                         ??_sm_send_event 0016  
                                        ??_VerifyFollowMe 0010  
                                   __end_of_calculateMean 8F32  
                                        sm_init@hist_mode 0016  
                                  __end_of_confirmpackage 915C  
                                         ?_ControlCurrent 0001  
                           __end_of_wr1RegCompleteHandler 9B4E  
                                   _TMR2_InterruptHandler 02DD  
                                 ??_EUSART1_RxDataHandler 0001  
                                          ?_ControlLights 0001  
                                         _TMR1_Initialize 9652  
                                          ?_ControlInputs 0001  
                                   ?_I2C1_DO_ADDRESS_NACK 0001  
                                          ??_getSerialCmd 001C  
                                           ?_ControlMotor 0001  
                                         _sm_execute_main 3B36  
