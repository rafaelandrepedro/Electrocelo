

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Jul 21 08:54:46 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1,group=2
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1,inline
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1,inline
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1,inline
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=2,class=CODE,delta=1
   180                           	psect	text155,global,reloc=2,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1,inline
   184                           	psect	text159,global,reloc=2,class=CODE,delta=1,inline
   185                           	psect	text160,global,reloc=2,class=CODE,delta=1,inline
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1,inline
   187                           	psect	text162,global,reloc=2,class=CODE,delta=1,inline
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1,inline
   189                           	psect	text164,global,reloc=2,class=CODE,delta=1,inline
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=2,class=CODE,delta=1
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1
   194                           	psect	text169,global,reloc=2,class=CODE,delta=1
   195                           	psect	text170,global,reloc=2,class=CODE,delta=1
   196                           	psect	text171,global,reloc=2,class=CODE,delta=1
   197                           	psect	text172,global,reloc=2,class=CODE,delta=1
   198                           	psect	text173,global,reloc=2,class=CODE,delta=1
   199                           	psect	text174,global,reloc=2,class=CODE,delta=1
   200                           	psect	text175,global,reloc=2,class=CODE,delta=1
   201                           	psect	text176,global,reloc=2,class=CODE,delta=1
   202                           	psect	text177,global,reloc=2,class=CODE,delta=1
   203                           	psect	text178,global,reloc=2,class=CODE,delta=1
   204                           	psect	text179,global,reloc=2,class=CODE,delta=1
   205                           	psect	text180,global,reloc=2,class=CODE,delta=1,inline
   206                           	psect	text181,global,reloc=2,class=CODE,delta=1,inline
   207                           	psect	text182,global,reloc=2,class=CODE,delta=1,inline
   208                           	psect	text183,global,reloc=2,class=CODE,delta=1
   209                           	psect	text184,global,reloc=2,class=CODE,delta=1,inline
   210                           	psect	text185,global,reloc=2,class=CODE,delta=1,inline
   211                           	psect	text186,global,reloc=2,class=CODE,delta=1,inline
   212                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   213                           	psect	text188,global,reloc=2,class=CODE,delta=1
   214                           	psect	text189,global,reloc=2,class=CODE,delta=1
   215                           	psect	text190,global,reloc=2,class=CODE,delta=1
   216                           	psect	text191,global,reloc=2,class=CODE,delta=1
   217                           	psect	text192,global,reloc=2,class=CODE,delta=1
   218                           	psect	text193,global,reloc=2,class=CODE,delta=1
   219                           	psect	text194,global,reloc=2,class=CODE,delta=1
   220                           	psect	text195,global,reloc=2,class=CODE,delta=1
   221                           	psect	text196,global,reloc=2,class=CODE,delta=1
   222                           	psect	text197,global,reloc=2,class=CODE,delta=1
   223                           	psect	text198,global,reloc=2,class=CODE,delta=1
   224                           	psect	text199,global,reloc=2,class=CODE,delta=1
   225                           	psect	text200,global,reloc=2,class=CODE,delta=1
   226                           	psect	text201,global,reloc=2,class=CODE,delta=1
   227                           	psect	text202,global,reloc=2,class=CODE,delta=1
   228                           	psect	text203,global,reloc=2,class=CODE,delta=1
   229                           	psect	text204,global,reloc=2,class=CODE,delta=1
   230                           	psect	text205,global,reloc=2,class=CODE,delta=1
   231                           	psect	text206,global,reloc=2,class=CODE,delta=1
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	text208,global,reloc=2,class=CODE,delta=1
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	text210,global,reloc=2,class=CODE,delta=1
   236                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   237                           	psect	text211,global,reloc=2,class=CODE,delta=1
   238                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   239                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   240                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   241                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   242  0000                     
   243                           ; Version 2.36
   244                           ; Generated 28/01/2022 GMT
   245                           ; 
   246                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   247                           ; All rights reserved.
   248                           ; 
   249                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   250                           ; 
   251                           ; Redistribution and use in source and binary forms, with or without modification, are
   252                           ; permitted provided that the following conditions are met:
   253                           ; 
   254                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   255                           ;        conditions and the following disclaimer.
   256                           ; 
   257                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   258                           ;        of conditions and the following disclaimer in the documentation and/or other
   259                           ;        materials provided with the distribution. Publication is not required when
   260                           ;        this file is used in an embedded application.
   261                           ; 
   262                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   263                           ;        software without specific prior written permission.
   264                           ; 
   265                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   266                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   267                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   268                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   269                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   270                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   271                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   272                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   273                           ; 
   274                           ; 
   275                           ; Code-generator required, PIC18F46K40 Definitions
   276                           ; 
   277                           ; SFR Addresses
   278  0000                     
   279                           	psect	idataBANK0
   280  00A0B2                     __pidataBANK0:
   281                           	callstack 0
   282                           
   283                           ;initializer for _auxCounter
   284  00A0B2  03E8               	dw	1000
   285                           
   286                           	psect	idataBANK1
   287  00A0BC                     __pidataBANK1:
   288                           	callstack 0
   289                           
   290                           ;initializer for _firstselectflag
   291  00A0BC  01                 	db	1
   292                           
   293                           	psect	idataBANK2
   294  00A050                     __pidataBANK2:
   295                           	callstack 0
   296                           
   297                           ;initializer for _tempCounter
   298  00A050  3DDD               	dw	15837
   299  00A052  000F               	dw	15
   300                           
   301                           ;initializer for _zeroCrossingWaitTime
   302  00A054  19                 	db	25
   303  00A055  19                 	db	25
   304                           
   305                           	psect	idataBANK3
   306  009C58                     __pidataBANK3:
   307                           	callstack 0
   308                           
   309                           ;initializer for _DispTable
   310  009C58  6F                 	db	111
   311  009C59  21                 	db	33
   312  009C5A  76                 	db	118
   313  009C5B  73                 	db	115
   314  009C5C  39                 	db	57
   315  009C5D  5B                 	db	91
   316  009C5E  5F                 	db	95
   317  009C5F  61                 	db	97
   318  009C60  7F                 	db	127
   319  009C61  7B                 	db	123
   320  009C62  7D                 	db	125
   321  009C63  7F                 	db	127
   322  009C64  4E                 	db	78
   323  009C65  37                 	db	55
   324  009C66  5E                 	db	94
   325  009C67  5C                 	db	92
   326  009C68  7C                 	db	124
   327  009C69  3D                 	db	61
   328  009C6A  0E                 	db	14
   329  009C6B  2F                 	db	47
   330  009C6C  14                 	db	20
   331  009C6D  1E                 	db	30
   332  009C6E  07                 	db	7
   333  009C6F  45                 	db	69
   334  009C70  10                 	db	16
   335  009C71  0C                 	db	12
   336  009C72  40                 	db	64
   337  009C73  20                 	db	32
   338  009C74  01                 	db	1
   339  009C75  02                 	db	2
   340  009C76  04                 	db	4
   341  009C77  08                 	db	8
   342  009C78  00                 	db	0
   343  009C79  3B                 	db	59
   344  009C7A  1F                 	db	31
   345  009C7B  16                 	db	22
   346  009C7C  17                 	db	23
   347                           
   348                           	psect	smallconst
   349  000F00                     __psmallconst:
   350                           	callstack 0
   351  000F00  00                 	db	0
   352  000F01                     _i2c1_fsmStateTable:
   353                           	callstack 0
   354  000F01  F6                 	db	low _I2C1_DO_IDLE
   355  000F02  9F                 	db	high _I2C1_DO_IDLE
   356  000F03  62                 	db	low _I2C1_DO_SEND_ADR_READ
   357  000F04  9F                 	db	high _I2C1_DO_SEND_ADR_READ
   358  000F05  54                 	db	low _I2C1_DO_SEND_ADR_WRITE
   359  000F06  9F                 	db	high _I2C1_DO_SEND_ADR_WRITE
   360  000F07  2A                 	db	low _I2C1_DO_TX
   361  000F08  84                 	db	high _I2C1_DO_TX
   362  000F09  CA                 	db	low _I2C1_DO_RX
   363  000F0A  88                 	db	high _I2C1_DO_RX
   364  000F0B  EC                 	db	low _I2C1_DO_RCEN
   365  000F0C  9F                 	db	high _I2C1_DO_RCEN
   366  000F0D  5A                 	db	low _I2C1_DO_TX_EMPTY
   367  000F0E  8F                 	db	high _I2C1_DO_TX_EMPTY
   368  000F0F  40                 	db	low _I2C1_DO_SEND_RESTART_READ
   369  000F10  A0                 	db	high _I2C1_DO_SEND_RESTART_READ
   370  000F11  38                 	db	low _I2C1_DO_SEND_RESTART_WRITE
   371  000F12  A0                 	db	high _I2C1_DO_SEND_RESTART_WRITE
   372  000F13  30                 	db	low _I2C1_DO_SEND_RESTART
   373  000F14  A0                 	db	high _I2C1_DO_SEND_RESTART
   374  000F15  28                 	db	low _I2C1_DO_SEND_STOP
   375  000F16  A0                 	db	high _I2C1_DO_SEND_STOP
   376  000F17  20                 	db	low _I2C1_DO_RX_ACK
   377  000F18  A0                 	db	high _I2C1_DO_RX_ACK
   378  000F19  18                 	db	low _I2C1_DO_RX_NACK_STOP
   379  000F1A  A0                 	db	high _I2C1_DO_RX_NACK_STOP
   380  000F1B  10                 	db	low _I2C1_DO_RX_NACK_RESTART
   381  000F1C  A0                 	db	high _I2C1_DO_RX_NACK_RESTART
   382  000F1D  E2                 	db	low _I2C1_DO_RESET
   383  000F1E  9F                 	db	high _I2C1_DO_RESET
   384  000F1F  6E                 	db	low _I2C1_DO_ADDRESS_NACK
   385  000F20  94                 	db	high _I2C1_DO_ADDRESS_NACK
   386  000F21                     __end_of_i2c1_fsmStateTable:
   387                           	callstack 0
   388  0000                     _T2CON	set	4029
   389  0000                     _T1CON	set	4047
   390  0000                     _T1CLK	set	4050
   391  0000                     _T1GATE	set	4049
   392  0000                     _T0CON0	set	4053
   393  0000                     _INLVLD	set	3874
   394  0000                     _SLRCOND	set	3875
   395  0000                     _ODCOND	set	3876
   396  0000                     _WPUD	set	3877
   397  0000                     _TRISD	set	3979
   398  0000                     _TRISC	set	3978
   399  0000                     _TRISB	set	3977
   400  0000                     _TRISA	set	3976
   401  0000                     _TRISE	set	3980
   402  0000                     _LATC	set	3973
   403  0000                     _LATB	set	3972
   404  0000                     _OSCTUNE	set	3805
   405  0000                     _OSCFRQ	set	3806
   406  0000                     _ADERRL	set	3950
   407  0000                     _ADERRH	set	3951
   408  0000                     _ADPREVL	set	3937
   409  0000                     _ADPREVH	set	3938
   410  0000                     _ADFLTRL	set	3954
   411  0000                     _ADFLTRH	set	3955
   412  0000                     _ADACCL	set	3952
   413  0000                     _ADACCH	set	3953
   414  0000                     _ADCNT	set	3943
   415  0000                     _ADRESL	set	3939
   416  0000                     _ADRESH	set	3940
   417  0000                     _ADACQ	set	3932
   418  0000                     _ADCON0	set	3936
   419  0000                     _ADCLK	set	3927
   420  0000                     _ADSTAT	set	3941
   421  0000                     _ADCON3	set	3931
   422  0000                     _ADCON2	set	3930
   423  0000                     _ADPRE	set	3934
   424  0000                     _ADSTPTH	set	3945
   425  0000                     _ADUTHH	set	3949
   426  0000                     _ADUTHL	set	3948
   427  0000                     _ADLTHH	set	3947
   428  0000                     _SP1BRGH	set	3996
   429  0000                     _TX1STA	set	3998
   430  000F21  00                 	db	0	; dummy byte at the end
   431  0000                     
   432                           	psect	nvBANK1
   433  0001FD                     __pnvBANK1:
   434                           	callstack 0
   435  0001FD                     _eusart1TxBufferRemaining:
   436                           	callstack 0
   437  0001FD                     	ds	1
   438                           
   439                           	psect	nvBANK2
   440  0002DD                     __pnvBANK2:
   441                           	callstack 0
   442  0002DD                     _TMR2_InterruptHandler:
   443                           	callstack 0
   444  0002DD                     	ds	2
   445  0002DF                     _TMR1_InterruptHandler:
   446                           	callstack 0
   447  0002DF                     	ds	2
   448  0002E1                     _timer1ReloadVal:
   449                           	callstack 0
   450  0002E1                     	ds	2
   451  0002E3                     _TMR0_InterruptHandler:
   452                           	callstack 0
   453  0002E3                     	ds	2
   454  0002E5                     _EUSART1_ErrorHandler:
   455                           	callstack 0
   456  0002E5                     	ds	2
   457  0002E7                     _EUSART1_OverrunErrorHandler:
   458                           	callstack 0
   459  0002E7                     	ds	2
   460  0002E9                     _EUSART1_FramingErrorHandler:
   461                           	callstack 0
   462  0002E9                     	ds	2
   463  0002EB                     _EUSART1_RxDefaultInterruptHandler:
   464                           	callstack 0
   465  0002EB                     	ds	2
   466  0002ED                     _EUSART1_TxDefaultInterruptHandler:
   467                           	callstack 0
   468  0002ED                     	ds	2
   469  0000                     _WDTCON0bits	set	3794
   470  0000                     _TMR0IE	set	30229
   471  0000                     _TMR0IF	set	30293
   472  0000                     _LATEbits	set	3975
   473  0000                     _LATDbits	set	3974
   474  0000                     _LATAbits	set	3971
   475  0000                     _LATCbits	set	3973
   476  0000                     _PORTB	set	3982
   477  0000                     _T1CONbits	set	4047
   478  0000                     _SSP1CON2bits	set	3991
   479  0000                     _SSP1CON1bits	set	3990
   480  0000                     _ADCON0bits	set	3936
   481  0000                     _RC1STAbits	set	3997
   482  0000                     _GIE	set	32663
   483  0000                     _RX1PPS	set	3765
   484  0000                     _SSP1CLKPPS	set	3767
   485  0000                     _PIE0bits	set	3778
   486  0000                     _PIE3bits	set	3781
   487  0000                     _PIE4bits	set	3782
   488  0000                     _PIR0bits	set	3786
   489  0000                     _PIR3bits	set	3789
   490  0000                     _ADACT	set	3926
   491  0000                     _ADREF	set	3928
   492  0000                     _ADCON1	set	3929
   493  0000                     _ADCAP	set	3933
   494  0000                     _ADPCH	set	3935
   495  0000                     _ADRPT	set	3942
   496  0000                     _ADSTPTL	set	3944
   497  0000                     _ADLTHL	set	3946
   498  0000                     _RC1REG	set	3993
   499  0000                     _TX1REG	set	3994
   500  0000                     _SP1BRGL	set	3995
   501  0000                     _RC1STA	set	3997
   502  0000                     _BAUD1CON	set	3999
   503  0000                     _T2TMR	set	4027
   504  0000                     _T2PR	set	4028
   505  0000                     _T2HLT	set	4030
   506  0000                     _T2CLKCON	set	4031
   507  0000                     _TMR1L	set	4045
   508  0000                     _TMR1H	set	4046
   509  0000                     _T1GCON	set	4048
   510  0000                     _TMR0L	set	4051
   511  0000                     _TMR0H	set	4052
   512  0000                     _T0CON1	set	4054
   513  0000                     _PCON0bits	set	4055
   514  0000                     _INTCONbits	set	4082
   515  0000                     _LATA	set	3971
   516  0000                     _LATD	set	3974
   517  0000                     _LATE	set	3975
   518  0000                     _SSP1BUF	set	3986
   519  0000                     _SSP1ADD	set	3987
   520  0000                     _SSP1STAT	set	3989
   521  0000                     _SSP1CON2	set	3991
   522  0000                     _SSP1CON1	set	3990
   523  0000                     _WDTCON0	set	3794
   524  0000                     _OSCCON1	set	3800
   525  0000                     _PIR4bits	set	3790
   526  0000                     _OSCCON3	set	3802
   527  0000                     _OSCEN	set	3804
   528  0000                     _PMD0	set	3809
   529  0000                     _RC3PPS	set	3834
   530  0000                     _INLVLA	set	3853
   531  0000                     _SLRCONA	set	3854
   532  0000                     _ODCONA	set	3855
   533  0000                     _WPUA	set	3856
   534  0000                     _ANSELA	set	3857
   535  0000                     _ANSELB	set	3865
   536  0000                     _ANSELC	set	3873
   537  0000                     _ANSELD	set	3878
   538  0000                     _PMD5	set	3814
   539  0000                     _PMD4	set	3813
   540  0000                     _PMD3	set	3812
   541  0000                     _PMD2	set	3811
   542  0000                     _PMD1	set	3810
   543  0000                     _WDTCON1	set	3795
   544  0000                     _PORTEbits	set	3985
   545  0000                     _PORTBbits	set	3982
   546  0000                     _PORTAbits	set	3981
   547  0000                     _INLVLE	set	3882
   548  0000                     _SLRCONE	set	3883
   549  0000                     _ODCONE	set	3884
   550  0000                     _WPUE	set	3885
   551  0000                     _ANSELE	set	3886
   552  0000                     _INLVLC	set	3869
   553  0000                     _SLRCONC	set	3870
   554  0000                     _ODCONC	set	3871
   555  0000                     _WPUC	set	3872
   556  0000                     _INLVLB	set	3861
   557  0000                     _SLRCONB	set	3862
   558  0000                     _ODCONB	set	3863
   559  0000                     _WPUB	set	3864
   560  0000                     _IOCBN3	set	30875
   561  0000                     _IOCBP3	set	30883
   562  0000                     _SSP1DATPPS	set	3768
   563  0000                     _RC7PPS	set	3838
   564  0000                     _RC4PPS	set	3835
   565  0000                     _T2RST	set	4032
   566                           
   567                           ; #config settings
   568                           
   569                           	psect	cinit
   570  007E18                     __pcinit:
   571                           	callstack 0
   572  007E18                     start_initialization:
   573                           	callstack 0
   574  007E18                     __initialization:
   575                           	callstack 0
   576                           
   577                           ; Initialize objects allocated to BANK3 (37 bytes)
   578                           ; load TBLPTR registers with __pidataBANK3
   579  007E18  0E58               	movlw	low __pidataBANK3
   580  007E1A  6EF6               	movwf	tblptrl,c
   581  007E1C  0E9C               	movlw	high __pidataBANK3
   582  007E1E  6EF7               	movwf	tblptrh,c
   583  007E20  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   584  007E22  6EF8               	movwf	tblptru,c
   585  007E24  EE03  F0D2         	lfsr	0,__pdataBANK3
   586  007E28  EE10 F025          	lfsr	1,37
   587  007E2C                     copy_data0:
   588  007E2C  0009               	tblrd		*+
   589  007E2E  CFF5 FFEE          	movff	tablat,postinc0
   590  007E32  50E5               	movf	postdec1,w,c
   591  007E34  50E1               	movf	fsr1l,w,c
   592  007E36  E1FA               	bnz	copy_data0
   593                           
   594                           ; Initialize objects allocated to BANK2 (6 bytes)
   595                           ; load TBLPTR registers with __pidataBANK2
   596  007E38  0E50               	movlw	low __pidataBANK2
   597  007E3A  6EF6               	movwf	tblptrl,c
   598  007E3C  0EA0               	movlw	high __pidataBANK2
   599  007E3E  6EF7               	movwf	tblptrh,c
   600  007E40  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   601  007E42  6EF8               	movwf	tblptru,c
   602  007E44  EE02  F0F6         	lfsr	0,__pdataBANK2
   603  007E48  EE10 F006          	lfsr	1,6
   604  007E4C                     copy_data1:
   605  007E4C  0009               	tblrd		*+
   606  007E4E  CFF5 FFEE          	movff	tablat,postinc0
   607  007E52  50E5               	movf	postdec1,w,c
   608  007E54  50E1               	movf	fsr1l,w,c
   609  007E56  E1FA               	bnz	copy_data1
   610                           
   611                           ; Initialize objects allocated to BANK1 (1 bytes)
   612                           ; load TBLPTR registers with __pidataBANK1
   613  007E58  0EBC               	movlw	low __pidataBANK1
   614  007E5A  6EF6               	movwf	tblptrl,c
   615  007E5C  0EA0               	movlw	high __pidataBANK1
   616  007E5E  6EF7               	movwf	tblptrh,c
   617  007E60  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   618  007E62  6EF8               	movwf	tblptru,c
   619  007E64  0009               	tblrd		*+	;fetch initializer
   620  007E66  CFF5 F1FE          	movff	tablat,__pdataBANK1
   621                           
   622                           ; Initialize objects allocated to BANK0 (2 bytes)
   623                           ; load TBLPTR registers with __pidataBANK0
   624  007E6A  0EB2               	movlw	low __pidataBANK0
   625  007E6C  6EF6               	movwf	tblptrl,c
   626  007E6E  0EA0               	movlw	high __pidataBANK0
   627  007E70  6EF7               	movwf	tblptrh,c
   628  007E72  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   629  007E74  6EF8               	movwf	tblptru,c
   630  007E76  0009               	tblrd		*+	;fetch initializer
   631  007E78  CFF5 F0FC          	movff	tablat,__pdataBANK0
   632  007E7C  0009               	tblrd		*+	;fetch initializer
   633  007E7E  CFF5 F0FD          	movff	tablat,__pdataBANK0+1
   634                           
   635                           ; Clear objects allocated to BANK3 (210 bytes)
   636  007E82  EE03  F000         	lfsr	0,__pbssBANK3
   637  007E86  0ED2               	movlw	210
   638  007E88                     clear_0:
   639  007E88  6AEE               	clrf	postinc0,c
   640  007E8A  06E8               	decf	wreg,f,c
   641  007E8C  E1FD               	bnz	clear_0
   642                           
   643                           ; Clear objects allocated to BANK2 (221 bytes)
   644  007E8E  EE02  F000         	lfsr	0,__pbssBANK2
   645  007E92  0EDD               	movlw	221
   646  007E94                     clear_1:
   647  007E94  6AEE               	clrf	postinc0,c
   648  007E96  06E8               	decf	wreg,f,c
   649  007E98  E1FD               	bnz	clear_1
   650                           
   651                           ; Clear objects allocated to BANK1 (253 bytes)
   652  007E9A  EE01  F000         	lfsr	0,__pbssBANK1
   653  007E9E  0EFD               	movlw	253
   654  007EA0                     clear_2:
   655  007EA0  6AEE               	clrf	postinc0,c
   656  007EA2  06E8               	decf	wreg,f,c
   657  007EA4  E1FD               	bnz	clear_2
   658                           
   659                           ; Clear objects allocated to BANK0 (120 bytes)
   660  007EA6  EE00  F060         	lfsr	0,__pbssBANK0
   661  007EAA  0E78               	movlw	120
   662  007EAC                     clear_3:
   663  007EAC  6AEE               	clrf	postinc0,c
   664  007EAE  06E8               	decf	wreg,f,c
   665  007EB0  E1FD               	bnz	clear_3
   666                           
   667                           ; Clear objects allocated to COMRAM (21 bytes)
   668  007EB2  EE00  F03B         	lfsr	0,__pbssCOMRAM
   669  007EB6  0E15               	movlw	21
   670  007EB8                     clear_4:
   671  007EB8  6AEE               	clrf	postinc0,c
   672  007EBA  06E8               	decf	wreg,f,c
   673  007EBC  E1FD               	bnz	clear_4
   674  007EBE                     end_of_initialization:
   675                           	callstack 0
   676  007EBE                     __end_of__initialization:
   677                           	callstack 0
   678  007EBE  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   679  007EC0  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   680  007EC2  0100               	movlb	0
   681  007EC4  EF1E  F035         	goto	_main	;jump to C main() function
   682                           
   683                           	psect	bssCOMRAM
   684  00003B                     __pbssCOMRAM:
   685                           	callstack 0
   686  00003B                     _rfCMD:
   687                           	callstack 0
   688  00003B                     	ds	11
   689  000046                     _edit_Param:
   690                           	callstack 0
   691  000046                     	ds	6
   692  00004C                     _button_struct:
   693                           	callstack 0
   694  00004C                     	ds	4
   695                           
   696                           	psect	bssBANK0
   697  000060                     __pbssBANK0:
   698                           	callstack 0
   699  000060                     _learn_st:
   700                           	callstack 0
   701  000060                     	ds	18
   702  000072                     _dispStruct:
   703                           	callstack 0
   704  000072                     	ds	6
   705  000078                     _brakeElectric_st:
   706                           	callstack 0
   707  000078                     	ds	2
   708  00007A                     _pointSync:
   709                           	callstack 0
   710  00007A                     	ds	2
   711  00007C                     _Hop:
   712                           	callstack 0
   713  00007C                     	ds	2
   714  00007E                     _RFcount:
   715                           	callstack 0
   716  00007E                     	ds	2
   717  000080                     _temp:
   718                           	callstack 0
   719  000080                     	ds	1
   720  000081                     _control_limit_switch:
   721                           	callstack 0
   722  000081                     	ds	1
   723  000082                     _fullmotorPower:
   724                           	callstack 0
   725  000082                     	ds	1
   726  000083                     _stateMotor:
   727                           	callstack 0
   728  000083                     	ds	1
   729  000084                     _zeroCrossingWaitTimeIdx:
   730                           	callstack 0
   731  000084                     	ds	1
   732  000085                     _programmer_enable:
   733                           	callstack 0
   734  000085                     	ds	1
   735  000086                     readbutton@key1:
   736                           	callstack 0
   737  000086                     	ds	1
   738  000087                     readRFButtons@keyType:
   739                           	callstack 0
   740  000087                     	ds	1
   741  000088                     readRFButtons@key1:
   742                           	callstack 0
   743  000088                     	ds	1
   744  000089                     _RFBit:
   745                           	callstack 0
   746  000089                     	ds	1
   747  00008A                     _RFFull_12BIT:
   748                           	callstack 0
   749  00008A                     	ds	1
   750  00008B                     _RFFull:
   751                           	callstack 0
   752  00008B                     	ds	1
   753  00008C                     _BitCount:
   754                           	callstack 0
   755  00008C                     	ds	1
   756  00008D                     _Bptr:
   757                           	callstack 0
   758  00008D                     	ds	1
   759  00008E                     _numberOfErrorCurrent:
   760                           	callstack 0
   761  00008E                     	ds	1
   762  00008F                     _idxAdcZeroAquisition:
   763                           	callstack 0
   764  00008F                     	ds	1
   765  000090                     _idxSaveEnergyADCHist:
   766                           	callstack 0
   767  000090                     	ds	1
   768  000091                     _idxAdcAquisition:
   769                           	callstack 0
   770  000091                     	ds	1
   771  000092                     _Counterchoose:
   772                           	callstack 0
   773  000092                     	ds	1
   774  000093                     _eusart1RxCount:
   775                           	callstack 0
   776  000093                     	ds	1
   777  000094                     _eusart1RxTail:
   778                           	callstack 0
   779  000094                     	ds	1
   780  000095                     _eusart1RxHead:
   781                           	callstack 0
   782  000095                     	ds	1
   783  000096                     _eusart1TxTail:
   784                           	callstack 0
   785  000096                     	ds	1
   786  000097                     _eusart1TxHead:
   787                           	callstack 0
   788  000097                     	ds	1
   789  000098                     _var_sys_NVM:
   790                           	callstack 0
   791  000098                     	ds	64
   792                           
   793                           	psect	dataBANK0
   794  0000FC                     __pdataBANK0:
   795                           	callstack 0
   796  0000FC                     _auxCounter:
   797                           	callstack 0
   798  0000FC                     	ds	2
   799                           
   800                           	psect	bssBANK1
   801  000100                     __pbssBANK1:
   802                           	callstack 0
   803  000100                     _var_sys:
   804                           	callstack 0
   805  000100                     	ds	81
   806  000151                     _menu_st:
   807                           	callstack 0
   808  000151                     	ds	25
   809  00016A                     _security:
   810                           	callstack 0
   811  00016A                     	ds	11
   812  000175                     _fimdecurso:
   813                           	callstack 0
   814  000175                     	ds	6
   815  00017B                     _powerControl_st:
   816                           	callstack 0
   817  00017B                     	ds	6
   818  000181                     readRFButtons@serial:
   819                           	callstack 0
   820  000181                     	ds	4
   821  000185                     eusartparser@buffer:
   822                           	callstack 0
   823  000185                     	ds	2
   824  000187                     readRFButtons@rollingCode:
   825                           	callstack 0
   826  000187                     	ds	2
   827  000189                     _BufferRF_12BIT:
   828                           	callstack 0
   829  000189                     	ds	2
   830  00018B                     _erroranterior:
   831                           	callstack 0
   832  00018B                     	ds	2
   833  00018D                     eusartparser@save_f:
   834                           	callstack 0
   835  00018D                     	ds	1
   836  00018E                     _done_changes:
   837                           	callstack 0
   838  00018E                     	ds	1
   839  00018F                     _aux_in_auto_close:
   840                           	callstack 0
   841  00018F                     	ds	1
   842  000190                     _aux_i:
   843                           	callstack 0
   844  000190                     	ds	1
   845  000191                     _Abertura_pedonal:
   846                           	callstack 0
   847  000191                     	ds	1
   848  000192                     _temppower:
   849                           	callstack 0
   850  000192                     	ds	1
   851  000193                     _difTime:
   852                           	callstack 0
   853  000193                     	ds	1
   854  000194                     _StateTRIAC:
   855                           	callstack 0
   856  000194                     	ds	1
   857  000195                     _waitZeroPeak:
   858                           	callstack 0
   859  000195                     	ds	1
   860  000196                     _zeroCrossing:
   861                           	callstack 0
   862  000196                     	ds	1
   863  000197                     _zeroCrossingLength:
   864                           	callstack 0
   865  000197                     	ds	1
   866  000198                     _lastKey:
   867                           	callstack 0
   868  000198                     	ds	1
   869  000199                     _F2Chance:
   870                           	callstack 0
   871  000199                     	ds	1
   872  00019A                     readbutton@key2:
   873                           	callstack 0
   874  00019A                     	ds	1
   875  00019B                     readRFButtons@typeRemote:
   876                           	callstack 0
   877  00019B                     	ds	1
   878  00019C                     _RFstate:
   879                           	callstack 0
   880  00019C                     	ds	1
   881  00019D                     _eusart1RxLastError:
   882                           	callstack 0
   883  00019D                     	ds	1
   884  00019E                     _ts_system:
   885                           	callstack 0
   886  00019E                     	ds	72
   887  0001E6                     _controlGate_stateMachine:
   888                           	callstack 0
   889  0001E6                     	ds	11
   890  0001F1                     _main_stateMachine:
   891                           	callstack 0
   892  0001F1                     	ds	11
   893  0001FC                     setValueToEdit@value:
   894                           	callstack 0
   895  0001FC                     	ds	1
   896                           
   897                           	psect	dataBANK1
   898  0001FE                     __pdataBANK1:
   899                           	callstack 0
   900  0001FE                     _firstselectflag:
   901                           	callstack 0
   902  0001FE                     	ds	1
   903                           
   904                           	psect	bssBANK2
   905  000200                     __pbssBANK2:
   906                           	callstack 0
   907  000200                     _ADC_array:
   908                           	callstack 0
   909  000200                     	ds	60
   910  00023C                     _I2C1_Status:
   911                           	callstack 0
   912  00023C                     	ds	36
   913  000260                     _SumEnergyADCHist_array:
   914                           	callstack 0
   915  000260                     	ds	20
   916  000274                     _eusart1RxStatusBuffer:
   917                           	callstack 0
   918  000274                     	ds	8
   919  00027C                     _eusart1RxBuffer:
   920                           	callstack 0
   921  00027C                     	ds	8
   922  000284                     _eusart1TxBuffer:
   923                           	callstack 0
   924  000284                     	ds	8
   925  00028C                     _EHop:
   926                           	callstack 0
   927  00028C                     	ds	2
   928  00028E                     _NextHop:
   929                           	callstack 0
   930  00028E                     	ds	2
   931  000290                     _timer0ReloadVal16bit:
   932                           	callstack 0
   933  000290                     	ds	2
   934  000292                     _classic_data:
   935                           	callstack 0
   936  000292                     	ds	16
   937  0002A2                     _memoryTEMP:
   938                           	callstack 0
   939  0002A2                     	ds	16
   940  0002B2                     _controlLearning_stateMachine:
   941                           	callstack 0
   942  0002B2                     	ds	11
   943  0002BD                     _menuConfiguration_stateMachine:
   944                           	callstack 0
   945  0002BD                     	ds	11
   946  0002C8                     _BufferRF:
   947                           	callstack 0
   948  0002C8                     	ds	9
   949  0002D1                     _DKEY:
   950                           	callstack 0
   951  0002D1                     	ds	8
   952  0002D9                     NormalKeyGen@SEED:
   953                           	callstack 0
   954  0002D9                     	ds	4
   955                           
   956                           	psect	dataBANK2
   957  0002F6                     __pdataBANK2:
   958                           	callstack 0
   959  0002F6                     _tempCounter:
   960                           	callstack 0
   961  0002F6                     	ds	4
   962  0002FA                     _zeroCrossingWaitTime:
   963                           	callstack 0
   964  0002FA                     	ds	2
   965                           
   966                           	psect	bssBANK3
   967  000300                     __pbssBANK3:
   968                           	callstack 0
   969  000300                     _listSyncValues:
   970                           	callstack 0
   971  000300                     	ds	150
   972  000396                     _ADC_zero_array:
   973                           	callstack 0
   974  000396                     	ds	60
   975                           
   976                           	psect	dataBANK3
   977  0003D2                     __pdataBANK3:
   978                           	callstack 0
   979  0003D2                     _DispTable:
   980                           	callstack 0
   981  0003D2                     	ds	37
   982                           
   983                           	psect	cstackBANK2
   984  0002EF                     __pcstackBANK2:
   985                           	callstack 0
   986  0002EF                     main@package:
   987                           	callstack 0
   988                           
   989                           ; 7 bytes @ 0x0
   990  0002EF                     	ds	7
   991                           
   992                           	psect	cstackBANK0
   993  0000D8                     __pcstackBANK0:
   994                           	callstack 0
   995  0000D8                     ??_keeloq_classic_decrypt_packet:
   996  0000D8                     ??_setPositionInvertionInClosing:
   997  0000D8                     ??_validateRemoteSerialNumber:
   998  0000D8                     ??_RemoveSerial:
   999  0000D8                     SaveNVM_VarSystem@page:
  1000                           	callstack 0
  1001  0000D8                     getStateOpenPosition@state:
  1002                           	callstack 0
  1003  0000D8                     saveNewSerial@tempSerial:
  1004                           	callstack 0
  1005                           
  1006                           ; 4 bytes @ 0x0
  1007  0000D8                     	ds	1
  1008  0000D9                     getStateOpenPosition@stateMotor:
  1009                           	callstack 0
  1010  0000D9                     SaveNVM_VarSystem@tempAdd:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x1
  1014  0000D9                     	ds	1
  1015  0000DA                     ??_controlVelocity:
  1016  0000DA                     RemoveSerial@cmdType:
  1017                           	callstack 0
  1018                           
  1019                           ; 1 bytes @ 0x2
  1020  0000DA                     	ds	1
  1021  0000DB                     SaveNVM_VarSystem@point:
  1022                           	callstack 0
  1023  0000DB                     RemoveSerial@tempSerial:
  1024                           	callstack 0
  1025                           
  1026                           ; 4 bytes @ 0x3
  1027  0000DB                     	ds	1
  1028  0000DC                     ??_setValueToEdit:
  1029  0000DC                     saveNewSerial@position:
  1030                           	callstack 0
  1031  0000DC                     sm_execute_ControlLearning@psm:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x4
  1035  0000DC                     	ds	1
  1036  0000DD                     ??_saveNewSerial:
  1037                           
  1038                           ; 1 bytes @ 0x5
  1039  0000DD                     	ds	1
  1040  0000DE                     ??_sm_execute_ControlLearning:
  1041  0000DE                     setValueToEdit@menuType:
  1042                           	callstack 0
  1043                           
  1044                           ; 1 bytes @ 0x6
  1045  0000DE                     	ds	1
  1046  0000DF                     setValueToEdit@posindex:
  1047                           	callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x7
  1050  0000DF                     	ds	1
  1051  0000E0                     ??_controlSelectRemote:
  1052  0000E0                     setValueToEdit@posindex_6980:
  1053                           	callstack 0
  1054  0000E0                     keeloqDecryptPacket@data:
  1055                           	callstack 0
  1056  0000E0                     DecryptPacket_12BIT@data:
  1057                           	callstack 0
  1058  0000E0                     eusartparser@package:
  1059                           	callstack 0
  1060                           
  1061                           ; 2 bytes @ 0x8
  1062  0000E0                     	ds	1
  1063  0000E1                     setValueToEdit@haveValueToEdit:
  1064                           	callstack 0
  1065  0000E1                     controlSelectRemote@validSerial:
  1066                           	callstack 0
  1067                           
  1068                           ; 1 bytes @ 0x9
  1069  0000E1                     	ds	1
  1070  0000E2                     ??_eusartparser:
  1071  0000E2                     controlSelectRemote@pos:
  1072                           	callstack 0
  1073  0000E2                     keeloqDecryptPacket@classic_data:
  1074                           	callstack 0
  1075  0000E2                     DecryptPacket_12BIT@classic_data:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0xA
  1079  0000E2                     	ds	1
  1080  0000E3                     controlSelectRemote@typeRemote:
  1081                           	callstack 0
  1082                           
  1083                           ; 1 bytes @ 0xB
  1084  0000E3                     	ds	1
  1085  0000E4                     ??_keeloqDecryptPacket:
  1086  0000E4                     DecryptPacket_12BIT@commandType:
  1087                           	callstack 0
  1088  0000E4                     actionZone_Opening@securityClosing:
  1089                           	callstack 0
  1090  0000E4                     controlSelectRemote@tempSerial:
  1091                           	callstack 0
  1092                           
  1093                           ; 4 bytes @ 0xC
  1094  0000E4                     	ds	1
  1095  0000E5                     actionZone_Opening@securityOpening:
  1096                           	callstack 0
  1097                           
  1098                           ; 1 bytes @ 0xD
  1099  0000E5                     	ds	1
  1100  0000E6                     actionZone_Opening@typeOpenOrder:
  1101                           	callstack 0
  1102                           
  1103                           ; 1 bytes @ 0xE
  1104  0000E6                     	ds	1
  1105  0000E7                     sm_execute_ControlGate@psm:
  1106                           	callstack 0
  1107                           
  1108                           ; 2 bytes @ 0xF
  1109  0000E7                     	ds	1
  1110  0000E8                     keeloqDecryptPacket@hop_error:
  1111                           	callstack 0
  1112  0000E8                     controlSelectRemote@temp:
  1113                           	callstack 0
  1114  0000E8                     eusartparser@i:
  1115                           	callstack 0
  1116                           
  1117                           ; 1 bytes @ 0x10
  1118  0000E8                     	ds	1
  1119  0000E9                     ??_sm_execute_ControlGate:
  1120  0000E9                     keeloqDecryptPacket@commandType:
  1121                           	callstack 0
  1122  0000E9                     eusartparser@i_7381:
  1123                           	callstack 0
  1124  0000E9                     sm_execute_menuConfiguration@psm:
  1125                           	callstack 0
  1126                           
  1127                           ; 2 bytes @ 0x11
  1128  0000E9                     	ds	1
  1129  0000EA                     eusartparser@i_7388:
  1130                           	callstack 0
  1131                           
  1132                           ; 1 bytes @ 0x12
  1133  0000EA                     	ds	1
  1134  0000EB                     ??_sm_execute_menuConfiguration:
  1135  0000EB                     sm_execute_ControlGate@typeOpenOrder:
  1136                           	callstack 0
  1137  0000EB                     eusartparser@i_7389:
  1138                           	callstack 0
  1139                           
  1140                           ; 1 bytes @ 0x13
  1141  0000EB                     	ds	1
  1142  0000EC                     eusartparser@pos:
  1143                           	callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x14
  1146  0000EC                     	ds	1
  1147  0000ED                     eusartparser@i_7382:
  1148                           	callstack 0
  1149  0000ED                     sm_execute_main@psm:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x15
  1153  0000ED                     	ds	1
  1154  0000EE                     eusartparser@i_7383:
  1155                           	callstack 0
  1156                           
  1157                           ; 1 bytes @ 0x16
  1158  0000EE                     	ds	1
  1159  0000EF                     ??_sm_execute_main:
  1160  0000EF                     eusartparser@i_7390:
  1161                           	callstack 0
  1162                           
  1163                           ; 1 bytes @ 0x17
  1164  0000EF                     	ds	1
  1165  0000F0                     eusartparser@i_7391:
  1166                           	callstack 0
  1167                           
  1168                           ; 1 bytes @ 0x18
  1169  0000F0                     	ds	1
  1170  0000F1                     eusartparser@i_7384:
  1171                           	callstack 0
  1172                           
  1173                           ; 1 bytes @ 0x19
  1174  0000F1                     	ds	1
  1175  0000F2                     eusartparser@i_7385:
  1176                           	callstack 0
  1177                           
  1178                           ; 1 bytes @ 0x1A
  1179  0000F2                     	ds	1
  1180  0000F3                     eusartparser@i_7386:
  1181                           	callstack 0
  1182                           
  1183                           ; 1 bytes @ 0x1B
  1184  0000F3                     	ds	1
  1185  0000F4                     eusartparser@i_7392:
  1186                           	callstack 0
  1187                           
  1188                           ; 1 bytes @ 0x1C
  1189  0000F4                     	ds	1
  1190  0000F5                     eusartparser@i_7393:
  1191                           	callstack 0
  1192                           
  1193                           ; 1 bytes @ 0x1D
  1194  0000F5                     	ds	1
  1195  0000F6                     eusartparser@i_7394:
  1196                           	callstack 0
  1197                           
  1198                           ; 1 bytes @ 0x1E
  1199  0000F6                     	ds	1
  1200  0000F7                     eusartparser@relcounter:
  1201                           	callstack 0
  1202                           
  1203                           ; 1 bytes @ 0x1F
  1204  0000F7                     	ds	1
  1205  0000F8                     eusartparser@serial:
  1206                           	callstack 0
  1207                           
  1208                           ; 4 bytes @ 0x20
  1209  0000F8                     	ds	4
  1210                           
  1211                           	psect	cstackCOMRAM
  1212  000001                     __pcstackCOMRAM:
  1213                           	callstack 0
  1214  000001                     ??_rxi:
  1215  000001                     ??i2_GetMotorPower:
  1216  000001                     ADCC_GetSingleConversion@channel:
  1217                           	callstack 0
  1218  000001                     Segments_Set@value:
  1219                           	callstack 0
  1220  000001                     i2VerifyElectricalBrake@tempState:
  1221                           	callstack 0
  1222  000001                     TMR1_WriteTimer@timerVal:
  1223                           	callstack 0
  1224  000001                     decrementTimeslot@ts:
  1225                           	callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x0
  1228  000001                     	ds	1
  1229  000002                     ??_ReadADC:
  1230  000002                     i2VerifyElectricalBrake@actualState:
  1231                           	callstack 0
  1232                           
  1233                           ; 1 bytes @ 0x1
  1234  000002                     	ds	1
  1235  000003                     
  1236                           ; 1 bytes @ 0x2
  1237  000003                     	ds	1
  1238  000004                     i2GetMotorPower@defineatraso:
  1239                           	callstack 0
  1240                           
  1241                           ; 1 bytes @ 0x3
  1242  000004                     	ds	1
  1243  000005                     ??_controlMotorForce:
  1244  000005                     
  1245                           ; 1 bytes @ 0x4
  1246  000005                     	ds	5
  1247  00000A                     ??_INTERRUPT_InterruptManager:
  1248                           
  1249                           ; 1 bytes @ 0x9
  1250  00000A                     	ds	6
  1251  000010                     ??_GetMotorPower:
  1252  000010                     ??_SetSegmentValueLearn:
  1253  000010                     ?_sumEnergyADC:
  1254                           	callstack 0
  1255  000010                     ?_sm_get_current_state:
  1256                           	callstack 0
  1257  000010                     ?___wmul:
  1258                           	callstack 0
  1259  000010                     ?___lwdiv:
  1260                           	callstack 0
  1261  000010                     ?_calculateMean:
  1262                           	callstack 0
  1263  000010                     ?_sumHIST:
  1264                           	callstack 0
  1265  000010                     ?___lldiv:
  1266                           	callstack 0
  1267  000010                     EUSART1_Read@readValue:
  1268                           	callstack 0
  1269  000010                     EUSART1_Write@txData:
  1270                           	callstack 0
  1271  000010                     I2C1_Open@address:
  1272                           	callstack 0
  1273  000010                     I2C1_Close@returnValue:
  1274                           	callstack 0
  1275  000010                     I2C1_MasterSendTxData@data:
  1276                           	callstack 0
  1277  000010                     WWDT_TimerClear@state:
  1278                           	callstack 0
  1279  000010                     getKeyPressed@temp:
  1280                           	callstack 0
  1281  000010                     RGB_Set@value:
  1282                           	callstack 0
  1283  000010                     SetSegmentValueIntermitent@d2:
  1284                           	callstack 0
  1285  000010                     VerifyElectricalBrake@tempState:
  1286                           	callstack 0
  1287  000010                     VerifyFollowMe@securityClose:
  1288                           	callstack 0
  1289  000010                     ___lbdiv@divisor:
  1290                           	callstack 0
  1291  000010                     ___lbmod@divisor:
  1292                           	callstack 0
  1293  000010                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1294                           	callstack 0
  1295  000010                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1296                           	callstack 0
  1297  000010                     EUSART1_SetErrorHandler@interruptHandler:
  1298                           	callstack 0
  1299  000010                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1300                           	callstack 0
  1301  000010                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1302                           	callstack 0
  1303  000010                     I2C1_SetBuffer@buffer:
  1304                           	callstack 0
  1305  000010                     I2C1_SetCallback@cb:
  1306                           	callstack 0
  1307  000010                     TMR0_SetInterruptHandler@InterruptHandler:
  1308                           	callstack 0
  1309  000010                     TMR1_SetInterruptHandler@InterruptHandler:
  1310                           	callstack 0
  1311  000010                     TMR2_SetInterruptHandler@InterruptHandler:
  1312                           	callstack 0
  1313  000010                     saveEnergyADCHist@valueToSave:
  1314                           	callstack 0
  1315  000010                     DecCHK@data:
  1316                           	callstack 0
  1317  000010                     ReqResync@CurrentHop:
  1318                           	callstack 0
  1319  000010                     verifyProgramingMode@classic_data:
  1320                           	callstack 0
  1321  000010                     setFlashLigth_ON@Freq:
  1322                           	callstack 0
  1323  000010                     sm_restart@psm:
  1324                           	callstack 0
  1325  000010                     sm_get_current_state@psm:
  1326                           	callstack 0
  1327  000010                     init_package@package:
  1328                           	callstack 0
  1329  000010                     ___wmul@multiplier:
  1330                           	callstack 0
  1331  000010                     ___lwdiv@dividend:
  1332                           	callstack 0
  1333  000010                     memcpy@d1:
  1334                           	callstack 0
  1335  000010                     calculateMean@meanValue:
  1336                           	callstack 0
  1337  000010                     ___lldiv@dividend:
  1338                           	callstack 0
  1339  000010                     write_eusartparser@package:
  1340                           	callstack 0
  1341                           
  1342                           ; 7 bytes @ 0xF
  1343  000010                     	ds	1
  1344  000011                     ?_read_package:
  1345                           	callstack 0
  1346  000011                     I2C1_Open@returnValue:
  1347                           	callstack 0
  1348  000011                     VerifyElectricalBrake@actualState:
  1349                           	callstack 0
  1350  000011                     ___lbdiv@dividend:
  1351                           	callstack 0
  1352  000011                     ___lbmod@dividend:
  1353                           	callstack 0
  1354  000011                     SetSegmentValueIntermitent@time:
  1355                           	callstack 0
  1356  000011                     setRGB_ON@Freq:
  1357                           	callstack 0
  1358  000011                     write_package@package:
  1359                           	callstack 0
  1360                           
  1361                           ; 7 bytes @ 0x10
  1362  000011                     	ds	1
  1363  000012                     ??_TMR1_Initialize:
  1364  000012                     ??_ControlMotor:
  1365  000012                     ??_sumEnergyADC:
  1366  000012                     ??_DecCHK:
  1367  000012                     SetSegmentValueLearn@direction:
  1368                           	callstack 0
  1369  000012                     ___lbdiv@counter:
  1370                           	callstack 0
  1371  000012                     ___lbmod@counter:
  1372                           	callstack 0
  1373  000012                     I2C1_SetBuffer@bufferSize:
  1374                           	callstack 0
  1375  000012                     I2C1_SetCallback@ptr:
  1376                           	callstack 0
  1377  000012                     sm_init@psm:
  1378                           	callstack 0
  1379  000012                     sm_send_event@psm:
  1380                           	callstack 0
  1381  000012                     confirmpackage@package:
  1382                           	callstack 0
  1383  000012                     ___wmul@multiplicand:
  1384                           	callstack 0
  1385  000012                     ___lwdiv@divisor:
  1386                           	callstack 0
  1387  000012                     memcpy@s1:
  1388                           	callstack 0
  1389                           
  1390                           ; 2 bytes @ 0x11
  1391  000012                     	ds	1
  1392  000013                     ??_setRGB_ON:
  1393  000013                     SetSegmentValueIntermitent@d1:
  1394                           	callstack 0
  1395  000013                     GetMotorPower@defineatraso:
  1396                           	callstack 0
  1397  000013                     ___lbdiv@quotient:
  1398                           	callstack 0
  1399  000013                     ___lbmod@rem:
  1400                           	callstack 0
  1401                           
  1402                           ; 1 bytes @ 0x12
  1403  000013                     	ds	1
  1404  000014                     ??_InitSoftStop:
  1405  000014                     ??_InitSoftStart:
  1406  000014                     ??_sumHIST:
  1407  000014                     ?___awdiv:
  1408                           	callstack 0
  1409  000014                     I2C1_SetCallback@idx:
  1410                           	callstack 0
  1411  000014                     confirmpackage@confirm:
  1412                           	callstack 0
  1413  000014                     ___lwdiv@counter:
  1414                           	callstack 0
  1415  000014                     sumEnergyADC@sumE:
  1416                           	callstack 0
  1417  000014                     sm_init@initial_state:
  1418                           	callstack 0
  1419  000014                     sm_send_event@event:
  1420                           	callstack 0
  1421  000014                     ___wmul@product:
  1422                           	callstack 0
  1423  000014                     ___awdiv@dividend:
  1424                           	callstack 0
  1425  000014                     memcpy@n:
  1426                           	callstack 0
  1427  000014                     calculateMean@newValue:
  1428                           	callstack 0
  1429  000014                     ___lldiv@divisor:
  1430                           	callstack 0
  1431                           
  1432                           ; 4 bytes @ 0x13
  1433  000014                     	ds	1
  1434  000015                     setRGB_ON@RGBLigth:
  1435                           	callstack 0
  1436  000015                     I2C1_SetDataCompleteCallback@cb:
  1437                           	callstack 0
  1438  000015                     I2C1_SetAddressNackCallback@cb:
  1439                           	callstack 0
  1440  000015                     ___lwdiv@quotient:
  1441                           	callstack 0
  1442                           
  1443                           ; 2 bytes @ 0x14
  1444  000015                     	ds	1
  1445  000016                     ?_getHopCode:
  1446                           	callstack 0
  1447  000016                     ?_getCurrentComparator:
  1448                           	callstack 0
  1449  000016                     sm_init@hist_mode:
  1450                           	callstack 0
  1451  000016                     memcpy@tmp:
  1452                           	callstack 0
  1453  000016                     sumEnergyADC@auxValue:
  1454                           	callstack 0
  1455  000016                     getHopCode@data:
  1456                           	callstack 0
  1457  000016                     ___awdiv@divisor:
  1458                           	callstack 0
  1459                           
  1460                           ; 2 bytes @ 0x15
  1461  000016                     	ds	1
  1462  000017                     ??_write_eusartparser:
  1463  000017                     refreshADCZeroOffset@i:
  1464                           	callstack 0
  1465  000017                     I2C1_SetDataCompleteCallback@ptr:
  1466                           	callstack 0
  1467  000017                     I2C1_SetAddressNackCallback@ptr:
  1468                           	callstack 0
  1469  000017                     memcpy@d:
  1470                           	callstack 0
  1471                           
  1472                           ; 2 bytes @ 0x16
  1473  000017                     	ds	1
  1474  000018                     ??_getHopCode:
  1475  000018                     ??_calculateMean:
  1476  000018                     ??_OpenWalkOrder:
  1477  000018                     sumEnergyADC@i:
  1478                           	callstack 0
  1479  000018                     ControlMotor@stateMotor:
  1480                           	callstack 0
  1481  000018                     ___awdiv@counter:
  1482                           	callstack 0
  1483  000018                     refreshADCZeroOffset@media:
  1484                           	callstack 0
  1485  000018                     sumHIST@max:
  1486                           	callstack 0
  1487  000018                     read_eusartparser@package:
  1488                           	callstack 0
  1489  000018                     ___lldiv@quotient:
  1490                           	callstack 0
  1491  000018                     read_package@package:
  1492                           	callstack 0
  1493                           
  1494                           ; 7 bytes @ 0x17
  1495  000018                     	ds	1
  1496  000019                     ___awdiv@sign:
  1497                           	callstack 0
  1498  000019                     wr1RegCompleteHandler@p:
  1499                           	callstack 0
  1500  000019                     rd1RegCompleteHandler@p:
  1501                           	callstack 0
  1502  000019                     rd2RegCompleteHandler@p:
  1503                           	callstack 0
  1504  000019                     wr2RegCompleteHandler@p:
  1505                           	callstack 0
  1506  000019                     rdBlkRegCompleteHandler@p:
  1507                           	callstack 0
  1508  000019                     rd1RegCompleteHandler@i2c1_master_example$F500@ptr:
  1509                           	callstack 0
  1510  000019                     rd2RegCompleteHandler@i2c1_master_example$F511@ptr:
  1511                           	callstack 0
  1512  000019                     wr1RegCompleteHandler@i2c1_master_example$F517@ptr:
  1513                           	callstack 0
  1514  000019                     wr2RegCompleteHandler@i2c1_master_example$F523@ptr:
  1515                           	callstack 0
  1516  000019                     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr:
  1517                           	callstack 0
  1518  000019                     I2C1_CallbackReturnReset@funPtr:
  1519                           	callstack 0
  1520  000019                     memcpy@s:
  1521                           	callstack 0
  1522                           
  1523                           ; 2 bytes @ 0x18
  1524  000019                     	ds	1
  1525  00001A                     ??_getCurrentComparator:
  1526  00001A                     ??_read_eusartparser:
  1527  00001A                     sumHIST@min:
  1528                           	callstack 0
  1529  00001A                     OpenWalkOrder@diffTime:
  1530                           	callstack 0
  1531  00001A                     ___awdiv@quotient:
  1532                           	callstack 0
  1533                           
  1534                           ; 2 bytes @ 0x19
  1535  00001A                     	ds	1
  1536  00001B                     ??_I2C1_DO_TX:
  1537  00001B                     ??_I2C1_DO_RX:
  1538  00001B                     ??_I2C1_DO_TX_EMPTY:
  1539  00001B                     ??_I2C1_DO_ADDRESS_NACK:
  1540  00001B                     getSerialCmd@serial:
  1541                           	callstack 0
  1542  00001B                     Decrypt@packet:
  1543                           	callstack 0
  1544                           
  1545                           ; 2 bytes @ 0x1A
  1546  00001B                     	ds	1
  1547  00001C                     getSerialCmd@temp:
  1548                           	callstack 0
  1549  00001C                     SetSegmentValueMain@d2:
  1550                           	callstack 0
  1551  00001C                     SetSegmentValue@d2:
  1552                           	callstack 0
  1553  00001C                     SetSegmentValueIntermitentMain@d2:
  1554                           	callstack 0
  1555  00001C                     updateChangesToUart@i:
  1556                           	callstack 0
  1557  00001C                     ___lldiv@counter:
  1558                           	callstack 0
  1559  00001C                     sumHIST@sumH:
  1560                           	callstack 0
  1561                           
  1562                           ; 4 bytes @ 0x1B
  1563  00001C                     	ds	1
  1564  00001D                     ??_I2C1_MasterFsm:
  1565  00001D                     ?___lmul:
  1566                           	callstack 0
  1567  00001D                     Decrypt@key:
  1568                           	callstack 0
  1569  00001D                     SetSegmentValueMain@d1:
  1570                           	callstack 0
  1571  00001D                     SetSegmentValue@d1:
  1572                           	callstack 0
  1573  00001D                     SetSegmentValueIntermitentMain@time:
  1574                           	callstack 0
  1575  00001D                     ___lmul@multiplier:
  1576                           	callstack 0
  1577  00001D                     updateChangesToUart@package:
  1578                           	callstack 0
  1579                           
  1580                           ; 7 bytes @ 0x1C
  1581  00001D                     	ds	1
  1582  00001E                     Decrypt@i:
  1583                           	callstack 0
  1584                           
  1585                           ; 1 bytes @ 0x1D
  1586  00001E                     	ds	1
  1587  00001F                     Decrypt@j:
  1588                           	callstack 0
  1589  00001F                     SetSegmentValueIntermitentMain@d1:
  1590                           	callstack 0
  1591  00001F                     write_eusartparser@debug:
  1592                           	callstack 0
  1593                           
  1594                           ; 2 bytes @ 0x1E
  1595  00001F                     	ds	1
  1596  000020                     ??_load_New_Menu:
  1597  000020                     ??_controlSaveRemote:
  1598  000020                     I2C1_MasterOperation@read:
  1599                           	callstack 0
  1600  000020                     sumHIST@i:
  1601                           	callstack 0
  1602  000020                     Decrypt@p:
  1603                           	callstack 0
  1604  000020                     actionZone_Closed@securityOpening:
  1605                           	callstack 0
  1606  000020                     actionZone_Opened@securityClosing:
  1607                           	callstack 0
  1608  000020                     getCurrentComparator@tempOffset:
  1609                           	callstack 0
  1610  000020                     getHopCode@tempHop:
  1611                           	callstack 0
  1612                           
  1613                           ; 2 bytes @ 0x1F
  1614  000020                     	ds	1
  1615  000021                     I2C1_MasterOperation@returnValue:
  1616                           	callstack 0
  1617  000021                     Decrypt@aux:
  1618                           	callstack 0
  1619  000021                     actionZone_Closed@typeOpenOrder:
  1620                           	callstack 0
  1621  000021                     actionZone_Opened@typeOpenOrder:
  1622                           	callstack 0
  1623  000021                     write_eusartparser@debug2:
  1624                           	callstack 0
  1625  000021                     ___lmul@multiplicand:
  1626                           	callstack 0
  1627                           
  1628                           ; 4 bytes @ 0x20
  1629  000021                     	ds	1
  1630  000022                     I2C1_Read1ByteRegister@reg:
  1631                           	callstack 0
  1632  000022                     getCurrentComparator@x:
  1633                           	callstack 0
  1634  000022                     getHopCode@tempPos:
  1635                           	callstack 0
  1636  000022                     load_New_Menu@Menu:
  1637                           	callstack 0
  1638  000022                     i2c_writeNBytes@reg:
  1639                           	callstack 0
  1640  000022                     i2c_readDataBlock@reg:
  1641                           	callstack 0
  1642  000022                     Decrypt@Buffer:
  1643                           	callstack 0
  1644                           
  1645                           ; 4 bytes @ 0x21
  1646  000022                     	ds	1
  1647  000023                     ??_ControlCurrent:
  1648  000023                     I2C1_Read1ByteRegister@address:
  1649                           	callstack 0
  1650  000023                     getHopCode@i:
  1651                           	callstack 0
  1652  000023                     load_New_Menu@i:
  1653                           	callstack 0
  1654                           
  1655                           ; 1 bytes @ 0x22
  1656  000023                     	ds	1
  1657  000024                     i2c_writeNBytes@data:
  1658                           	callstack 0
  1659  000024                     I2C1_Read1ByteRegister@returnValue:
  1660                           	callstack 0
  1661  000024                     i2c_readDataBlock@data:
  1662                           	callstack 0
  1663  000024                     HopCHK@data:
  1664                           	callstack 0
  1665                           
  1666                           ; 2 bytes @ 0x23
  1667  000024                     	ds	1
  1668  000025                     i2c_writeNBytes@len:
  1669                           	callstack 0
  1670  000025                     ___lmul@product:
  1671                           	callstack 0
  1672                           
  1673                           ; 4 bytes @ 0x24
  1674  000025                     	ds	1
  1675  000026                     i2c_readDataBlock@len:
  1676                           	callstack 0
  1677  000026                     NormalKeyGen@serial:
  1678                           	callstack 0
  1679  000026                     HopCHK@hopDiff:
  1680                           	callstack 0
  1681                           
  1682                           ; 2 bytes @ 0x25
  1683  000026                     	ds	1
  1684  000027                     ??_i2c_writeNBytes:
  1685                           
  1686                           ; 1 bytes @ 0x26
  1687  000027                     	ds	1
  1688  000028                     ??_i2c_readDataBlock:
  1689  000028                     NormalKeyGen@HOPtemp:
  1690                           	callstack 0
  1691  000028                     i2c_writeNBytes@dat:
  1692                           	callstack 0
  1693                           
  1694                           ; 17 bytes @ 0x27
  1695  000028                     	ds	1
  1696  000029                     ?_getTimeDecelaration:
  1697                           	callstack 0
  1698  000029                     i2c_readDataBlock@address:
  1699                           	callstack 0
  1700                           
  1701                           ; 1 bytes @ 0x28
  1702  000029                     	ds	1
  1703  00002A                     i2c_readDataBlock@d:
  1704                           	callstack 0
  1705                           
  1706                           ; 4 bytes @ 0x29
  1707  00002A                     	ds	2
  1708  00002C                     NormalKeyGen@SKEYtemp:
  1709                           	callstack 0
  1710                           
  1711                           ; 4 bytes @ 0x2B
  1712  00002C                     	ds	1
  1713  00002D                     ??_getTimeDecelaration:
  1714                           
  1715                           ; 1 bytes @ 0x2C
  1716  00002D                     	ds	1
  1717  00002E                     ReadSerial@tempSerial:
  1718                           	callstack 0
  1719  00002E                     cmdMemoryIsEmpty@position:
  1720                           	callstack 0
  1721  00002E                     validateRemoteSerialNumber@serial:
  1722                           	callstack 0
  1723                           
  1724                           ; 4 bytes @ 0x2D
  1725  00002E                     	ds	1
  1726  00002F                     ??_cmdMemoryIsEmpty:
  1727  00002F                     ReadSerial@position:
  1728                           	callstack 0
  1729                           
  1730                           ; 1 bytes @ 0x2E
  1731  00002F                     	ds	1
  1732  000030                     ??_ReadSerial:
  1733  000030                     NormalKeyGen@Buffer:
  1734                           	callstack 0
  1735                           
  1736                           ; 8 bytes @ 0x2F
  1737  000030                     	ds	1
  1738  000031                     cmdMemoryIsEmpty@cmdType:
  1739                           	callstack 0
  1740  000031                     getTimeDecelaration@state:
  1741                           	callstack 0
  1742                           
  1743                           ; 1 bytes @ 0x30
  1744  000031                     	ds	1
  1745  000032                     ??_setPositionInvertionInOpening:
  1746  000032                     ??_getStateOpenPosition:
  1747  000032                     validateRemoteSerialNumber@VerifyOnlySerial:
  1748                           	callstack 0
  1749  000032                     ReadSerial@cmdType:
  1750                           	callstack 0
  1751  000032                     actionZone_Closing@securityClosing:
  1752                           	callstack 0
  1753  000032                     cmdMemoryIsEmpty@tempSerial:
  1754                           	callstack 0
  1755                           
  1756                           ; 4 bytes @ 0x31
  1757  000032                     	ds	1
  1758  000033                     actionZone_Closing@typeOpenOrder:
  1759                           	callstack 0
  1760  000033                     validateRemoteSerialNumber@position:
  1761                           	callstack 0
  1762                           
  1763                           ; 2 bytes @ 0x32
  1764  000033                     	ds	2
  1765  000035                     validateRemoteSerialNumber@mask:
  1766                           	callstack 0
  1767                           
  1768                           ; 4 bytes @ 0x34
  1769  000035                     	ds	3
  1770  000038                     keeloq_classic_decrypt_packet@data:
  1771                           	callstack 0
  1772                           
  1773                           ; 2 bytes @ 0x37
  1774  000038                     	ds	1
  1775  000039                     i2c_writeNBytes@address:
  1776                           	callstack 0
  1777  000039                     validateRemoteSerialNumber@j:
  1778                           	callstack 0
  1779                           
  1780                           ; 1 bytes @ 0x38
  1781  000039                     	ds	1
  1782  00003A                     validateRemoteSerialNumber@i:
  1783                           	callstack 0
  1784  00003A                     saveNewSerial@cmdType:
  1785                           	callstack 0
  1786  00003A                     RemoveSerial@position:
  1787                           	callstack 0
  1788  00003A                     ResetDefaultMemory@type:
  1789                           	callstack 0
  1790  00003A                     checkNVM_VarSystem@saveParam:
  1791                           	callstack 0
  1792  00003A                     sm_execute_ControlLearning@typeOpenOrder:
  1793                           	callstack 0
  1794  00003A                     setValueToEdit@ParameterSelected:
  1795                           	callstack 0
  1796                           
  1797                           ; 1 bytes @ 0x39
  1798  00003A                     	ds	1
  1799  00003B                     
  1800                           ; 1 bytes @ 0x3A
  1801 ;;
  1802 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1803 ;;
  1804 ;; *************** function _main *****************
  1805 ;; Defined at:
  1806 ;;		line 63 in file "main_MC50.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;		None
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;  package         7    0[BANK2 ] struct package_t
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  1    wreg      void 
  1813 ;; Registers used:
  1814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 3F/1
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1821 ;;      Locals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1823 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1824 ;;Total ram usage:        7 bytes
  1825 ;; Hardware stack levels required when called: 17
  1826 ;; This function calls:
  1827 ;;		_ControlCounterMoves
  1828 ;;		_ControlCurrent
  1829 ;;		_ControlInputs
  1830 ;;		_ControlLights
  1831 ;;		_ControlMotor
  1832 ;;		_EUSART1_is_rx_ready
  1833 ;;		_InitReceiver
  1834 ;;		_SYSTEM_Initialize
  1835 ;;		_SetSegmentValue
  1836 ;;		_ShowVersion
  1837 ;;		_WWDT_SoftEnable
  1838 ;;		_WWDT_TimerClear
  1839 ;;		_controlVelocity
  1840 ;;		_eusartparser
  1841 ;;		_getKeyPressed
  1842 ;;		_loadNVM_VarSystem
  1843 ;;		_readInputs
  1844 ;;		_readRFButtons
  1845 ;;		_read_package
  1846 ;;		_readbutton
  1847 ;;		_sm_execute_ControlGate
  1848 ;;		_sm_execute_main
  1849 ;;		_sm_init
  1850 ;; This function is called by:
  1851 ;;		Startup code after reset
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           	psect	text0
  1856  006A3C                     __ptext0:
  1857                           	callstack 0
  1858  006A3C                     _main:
  1859                           	callstack 14
  1860                           
  1861                           ;main_MC50.c: 70:     dispStruct.display_grp.value_display1=dMinus;
  1862                           
  1863                           ;incstack = 0
  1864  006A3C  0E18               	movlw	24
  1865  006A3E  0100               	movlb	0	; () banked
  1866  006A40  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1867                           
  1868                           ;main_MC50.c: 71:     dispStruct.display_grp.value_display1=dMinus;
  1869  006A42  0E18               	movlw	24
  1870  006A44  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1871                           
  1872                           ;main_MC50.c: 72:     dispStruct.intermitentFreq=0;
  1873  006A46  0E00               	movlw	0
  1874  006A48  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  1875  006A4A  0E00               	movlw	0
  1876  006A4C  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  1877                           
  1878                           ;main_MC50.c: 73:     dispStruct.upFase=1;
  1879  006A4E  0E01               	movlw	1
  1880  006A50  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;main_MC50.c: 76:     SYSTEM_Initialize();
  1884  006A52  EC83  F04C         	call	_SYSTEM_Initialize	;wreg free
  1885                           
  1886                           ; BSR set to: 14
  1887                           ;main_MC50.c: 77:     WWDT_SoftEnable();
  1888  006A56  EC43  F050         	call	_WWDT_SoftEnable	;wreg free
  1889                           
  1890                           ; BSR set to: 14
  1891                           ;main_MC50.c: 80:       (INTCONbits.GIE = 1);
  1892  006A5A  8EF2               	bsf	242,7,c	;volatile
  1893                           
  1894                           ; BSR set to: 14
  1895                           ;main_MC50.c: 83:      (INTCONbits.PEIE = 1);
  1896  006A5C  8CF2               	bsf	242,6,c	;volatile
  1897                           
  1898                           ; BSR set to: 14
  1899                           ;main_MC50.c: 86:     IOCBP3=1;
  1900  006A5E  010F               	movlb	15	; () banked
  1901  006A60  8714               	bsf	20,3,b	;volatile
  1902                           
  1903                           ; BSR set to: 15
  1904                           ;main_MC50.c: 87:     IOCBN3=1;
  1905  006A62  8713               	bsf	19,3,b	;volatile
  1906                           
  1907                           ; BSR set to: 15
  1908                           ;main_MC50.c: 94:     InitReceiver();
  1909  006A64  ECCD  F04E         	call	_InitReceiver	;wreg free
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;main_MC50.c: 95:     loadNVM_VarSystem();
  1913  006A68  ECDA  F037         	call	_loadNVM_VarSystem	;wreg free
  1914                           
  1915                           ;main_MC50.c: 97:     WWDT_TimerClear();
  1916  006A6C  ECA3  F04E         	call	_WWDT_TimerClear	;wreg free
  1917                           
  1918                           ;main_MC50.c: 99:     SetSegmentValue(dMinus,dMinus);
  1919  006A70  0E18               	movlw	24
  1920  006A72  6E1C               	movwf	SetSegmentValue@d2^0,c
  1921  006A74  0E18               	movlw	24
  1922  006A76  ECF4  F04E         	call	_SetSegmentValue
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;main_MC50.c: 100:     ts_system.ts_TimeSlot1ms = ( 100/50);
  1926  006A7A  0E02               	movlw	2
  1927  006A7C  0101               	movlb	1	; () banked
  1928  006A7E  6FA0               	movwf	(_ts_system+2)& (0+255),b	;volatile
  1929                           
  1930                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1931  006A80  D00B               	goto	l28117
  1932  006A82                     l28107:
  1933                           
  1934                           ; BSR set to: 1
  1935                           ;main_MC50.c: 102:     {;main_MC50.c: 103:         if ( ts_system.ts_TimeSlotMain<=0 )
  1936  006A82  51A1               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  1937  006A84  A4D8               	btfss	status,2,c
  1938  006A86  D008               	goto	l28117
  1939                           
  1940                           ; BSR set to: 1
  1941                           ;main_MC50.c: 104:         {;main_MC50.c: 105:             WWDT_TimerClear();
  1942  006A88  ECA3  F04E         	call	_WWDT_TimerClear	;wreg free
  1943                           
  1944                           ;main_MC50.c: 106:             ts_system.ts_TimeSlotMain = 50;
  1945  006A8C  0E32               	movlw	50
  1946  006A8E  0101               	movlb	1	; () banked
  1947  006A90  6FA1               	movwf	(_ts_system+3)& (0+255),b	;volatile
  1948                           
  1949                           ; BSR set to: 1
  1950                           ;main_MC50.c: 108:             ts_system.ts_TimeSlot1ms--;
  1951  006A92  07A0               	decf	(_ts_system+2)& (0+255),f,b	;volatile
  1952                           
  1953                           ; BSR set to: 1
  1954                           ;main_MC50.c: 109:             readInputs();
  1955  006A94  ECA6  F03A         	call	_readInputs	;wreg free
  1956  006A98                     l28117:
  1957                           
  1958                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1959  006A98  0101               	movlb	1	; () banked
  1960  006A9A  51A0               	movf	(_ts_system+2)& (0+255),w,b	;volatile
  1961  006A9C  A4D8               	btfss	status,2,c
  1962  006A9E  D7F1               	goto	l28107
  1963                           
  1964                           ; BSR set to: 1
  1965                           ;main_MC50.c: 117:     sm_init(&menuConfiguration_stateMachine,st_MainMenu,HIST_NONE);
  1966  006AA0  0EBD               	movlw	low _menuConfiguration_stateMachine
  1967  006AA2  6E12               	movwf	sm_init@psm^0,c
  1968  006AA4  0E02               	movlw	high _menuConfiguration_stateMachine
  1969  006AA6  6E13               	movwf	(sm_init@psm+1)^0,c
  1970  006AA8  0E00               	movlw	0
  1971  006AAA  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1972  006AAC  0E00               	movlw	0
  1973  006AAE  6E14               	movwf	sm_init@initial_state^0,c
  1974  006AB0  0E00               	movlw	0
  1975  006AB2  6E16               	movwf	sm_init@hist_mode^0,c
  1976  006AB4  ECEC  F048         	call	_sm_init	;wreg free
  1977                           
  1978                           ;main_MC50.c: 118:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
  1979  006AB8  0EF1               	movlw	low _main_stateMachine
  1980  006ABA  6E12               	movwf	sm_init@psm^0,c
  1981  006ABC  0E01               	movlw	high _main_stateMachine
  1982  006ABE  6E13               	movwf	(sm_init@psm+1)^0,c
  1983  006AC0  0E00               	movlw	0
  1984  006AC2  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1985  006AC4  0E00               	movlw	0
  1986  006AC6  6E14               	movwf	sm_init@initial_state^0,c
  1987  006AC8  0E00               	movlw	0
  1988  006ACA  6E16               	movwf	sm_init@hist_mode^0,c
  1989  006ACC  ECEC  F048         	call	_sm_init	;wreg free
  1990                           
  1991                           ;main_MC50.c: 119:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE);
  1992  006AD0  0EE6               	movlw	low _controlGate_stateMachine
  1993  006AD2  6E12               	movwf	sm_init@psm^0,c
  1994  006AD4  0E01               	movlw	high _controlGate_stateMachine
  1995  006AD6  6E13               	movwf	(sm_init@psm+1)^0,c
  1996  006AD8  0E00               	movlw	0
  1997  006ADA  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1998  006ADC  0E00               	movlw	0
  1999  006ADE  6E14               	movwf	sm_init@initial_state^0,c
  2000  006AE0  0E00               	movlw	0
  2001  006AE2  6E16               	movwf	sm_init@hist_mode^0,c
  2002  006AE4  ECEC  F048         	call	_sm_init	;wreg free
  2003                           
  2004                           ;main_MC50.c: 120:     sm_init(&controlLearning_stateMachine,st_InitLearning,HIST_NONE);
  2005  006AE8  0EB2               	movlw	low _controlLearning_stateMachine
  2006  006AEA  6E12               	movwf	sm_init@psm^0,c
  2007  006AEC  0E02               	movlw	high _controlLearning_stateMachine
  2008  006AEE  6E13               	movwf	(sm_init@psm+1)^0,c
  2009  006AF0  0E00               	movlw	0
  2010  006AF2  6E15               	movwf	(sm_init@initial_state+1)^0,c
  2011  006AF4  0E00               	movlw	0
  2012  006AF6  6E14               	movwf	sm_init@initial_state^0,c
  2013  006AF8  0E00               	movlw	0
  2014  006AFA  6E16               	movwf	sm_init@hist_mode^0,c
  2015  006AFC  ECEC  F048         	call	_sm_init	;wreg free
  2016                           
  2017                           ;main_MC50.c: 122:     ts_system.Debug_TS=(1000/50);
  2018  006B00  0E00               	movlw	0
  2019  006B02  0101               	movlb	1	; () banked
  2020  006B04  6FA7               	movwf	(_ts_system+9)& (0+255),b	;volatile
  2021  006B06  0E14               	movlw	20
  2022  006B08  6FA6               	movwf	(_ts_system+8)& (0+255),b	;volatile
  2023                           
  2024                           ; BSR set to: 1
  2025                           ;main_MC50.c: 124:     var_sys.ADCZeroOffset = 510;
  2026  006B0A  0E01               	movlw	1
  2027  006B0C  6F4C               	movwf	(_var_sys+76)& (0+255),b	;volatile
  2028  006B0E  0EFE               	movlw	254
  2029  006B10  6F4B               	movwf	(_var_sys+75)& (0+255),b	;volatile
  2030                           
  2031                           ; BSR set to: 1
  2032                           ;main_MC50.c: 125:     ts_system.TimeStopADCZeroOffsetCalc = (5*(1000/50));
  2033  006B12  0E00               	movlw	0
  2034  006B14  6FDD               	movwf	(_ts_system+63)& (0+255),b	;volatile
  2035  006B16  0E64               	movlw	100
  2036  006B18  6FDC               	movwf	(_ts_system+62)& (0+255),b	;volatile
  2037                           
  2038                           ; BSR set to: 1
  2039                           ;main_MC50.c: 126:     ts_system.TimeStopElectricBrake = 0;
  2040  006B1A  0E00               	movlw	0
  2041  006B1C  6FDF               	movwf	(_ts_system+65)& (0+255),b	;volatile
  2042  006B1E  0E00               	movlw	0
  2043  006B20  6FDE               	movwf	(_ts_system+64)& (0+255),b	;volatile
  2044                           
  2045                           ; BSR set to: 1
  2046                           ;main_MC50.c: 129:     var_sys.StateMotor = Stopped;
  2047  006B22  0E00               	movlw	0
  2048  006B24  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2049  006B26                     l28131:
  2050                           
  2051                           ;main_MC50.c: 136:     {;main_MC50.c: 140:         struct package_t package;;main_MC50.c
      +                          : 141:         if(EUSART1_is_rx_ready()){
  2052  006B26  EC93  F04F         	call	_EUSART1_is_rx_ready	;wreg free
  2053  006B2A  0900               	iorlw	0
  2054  006B2C  B4D8               	btfsc	status,2,c
  2055  006B2E  D010               	goto	l28137
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;main_MC50.c: 142:             package=read_package();
  2059  006B30  ECC0  F049         	call	_read_package	;wreg free
  2060  006B34  EE22  F0EF         	lfsr	2,main@package
  2061  006B38  0E06               	movlw	6
  2062  006B3A                     u34411:
  2063  006B3A  CFEB FFDB          	movff	plusw0,plusw2
  2064  006B3E  06E8               	decf	wreg,f,c
  2065  006B40  E2FC               	bc	u34411
  2066                           
  2067                           ; BSR set to: 14
  2068                           ;main_MC50.c: 143:             eusartparser(&package);
  2069  006B42  0EEF               	movlw	low main@package
  2070  006B44  0100               	movlb	0	; () banked
  2071  006B46  6FE0               	movwf	eusartparser@package& (0+255),b
  2072  006B48  0E02               	movlw	high main@package
  2073  006B4A  6FE1               	movwf	(eusartparser@package+1)& (0+255),b
  2074  006B4C  EC91  F007         	call	_eusartparser	;wreg free
  2075  006B50                     l28137:
  2076                           
  2077                           ;main_MC50.c: 147:         if ( ts_system.ts_TimeSlotMain<=0 )
  2078  006B50  0101               	movlb	1	; () banked
  2079  006B52  51A1               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  2080  006B54  A4D8               	btfss	status,2,c
  2081  006B56  D7E7               	goto	l28131
  2082                           
  2083                           ; BSR set to: 1
  2084                           ;main_MC50.c: 148:         {;main_MC50.c: 149:              ts_system.ts_TimeSlotMain = 
      +                          50;
  2085  006B58  0E32               	movlw	50
  2086  006B5A  6FA1               	movwf	(_ts_system+3)& (0+255),b	;volatile
  2087                           
  2088                           ; BSR set to: 1
  2089                           ;main_MC50.c: 150:             WWDT_TimerClear();
  2090  006B5C  ECA3  F04E         	call	_WWDT_TimerClear	;wreg free
  2091                           
  2092                           ;main_MC50.c: 152:             if(var_sys.StateVersion<4)
  2093  006B60  0E04               	movlw	4
  2094  006B62  0101               	movlb	1	; () banked
  2095  006B64  6149               	cpfslt	(_var_sys+73)& (0+255),b	;volatile
  2096  006B66  D003               	goto	l28147
  2097                           
  2098                           ; BSR set to: 1
  2099                           ;main_MC50.c: 154:             {;main_MC50.c: 155:                 ShowVersion();
  2100  006B68  EC49  F047         	call	_ShowVersion	;wreg free
  2101                           
  2102                           ;main_MC50.c: 156:             }
  2103  006B6C  D7DC               	goto	l28131
  2104  006B6E                     l28147:
  2105                           
  2106                           ; BSR set to: 1
  2107                           ;main_MC50.c: 158:             {;main_MC50.c: 160:                 readbutton();
  2108  006B6E  ECDF  F046         	call	_readbutton	;wreg free
  2109                           
  2110                           ; BSR set to: 1
  2111                           ;main_MC50.c: 162:                 readRFButtons();
  2112  006B72  EC8E  F033         	call	_readRFButtons	;wreg free
  2113                           
  2114                           ;main_MC50.c: 163:                lastKey=getKeyPressed();
  2115  006B76  EC26  F04F         	call	_getKeyPressed	;wreg free
  2116  006B7A  0101               	movlb	1	; () banked
  2117  006B7C  6F98               	movwf	_lastKey& (0+255),b
  2118                           
  2119                           ; BSR set to: 1
  2120                           ;main_MC50.c: 165:                 readInputs();
  2121  006B7E  ECA6  F03A         	call	_readInputs	;wreg free
  2122                           
  2123                           ;main_MC50.c: 166:                 ControlInputs();
  2124  006B82  EC05  F039         	call	_ControlInputs	;wreg free
  2125                           
  2126                           ;main_MC50.c: 167:                 ControlCurrent();
  2127  006B86  ECE2  F035         	call	_ControlCurrent	;wreg free
  2128                           
  2129                           ;main_MC50.c: 168:                 controlVelocity();
  2130  006B8A  EC83  F02C         	call	_controlVelocity	;wreg free
  2131                           
  2132                           ;main_MC50.c: 169:                 ControlMotor();
  2133  006B8E  EC4D  F02A         	call	_ControlMotor	;wreg free
  2134                           
  2135                           ;main_MC50.c: 170:                 ControlLights();
  2136  006B92  EC95  F023         	call	_ControlLights	;wreg free
  2137                           
  2138                           ;main_MC50.c: 171:                 ControlCounterMoves();
  2139  006B96  EC93  F048         	call	_ControlCounterMoves	;wreg free
  2140                           
  2141                           ;main_MC50.c: 173:                 sm_execute_main(&main_stateMachine);
  2142  006B9A  0EF1               	movlw	low _main_stateMachine
  2143  006B9C  0100               	movlb	0	; () banked
  2144  006B9E  6FED               	movwf	sm_execute_main@psm& (0+255),b
  2145  006BA0  0E01               	movlw	high _main_stateMachine
  2146  006BA2  6FEE               	movwf	(sm_execute_main@psm+1)& (0+255),b
  2147  006BA4  EC75  F01D         	call	_sm_execute_main	;wreg free
  2148                           
  2149                           ;main_MC50.c: 174:                 sm_execute_ControlGate(&controlGate_stateMachine);
  2150  006BA8  0EE6               	movlw	low _controlGate_stateMachine
  2151  006BAA  0100               	movlb	0	; () banked
  2152  006BAC  6FE7               	movwf	sm_execute_ControlGate@psm& (0+255),b
  2153  006BAE  0E01               	movlw	high _controlGate_stateMachine
  2154  006BB0  6FE8               	movwf	(sm_execute_ControlGate@psm+1)& (0+255),b
  2155  006BB2  ECEF  F021         	call	_sm_execute_ControlGate	;wreg free
  2156                           
  2157                           ;main_MC50.c: 177:                 if(lastKey!=0xff)
  2158  006BB6  0101               	movlb	1	; () banked
  2159  006BB8  2998               	incf	_lastKey& (0+255),w,b
  2160  006BBA  B4D8               	btfsc	status,2,c
  2161  006BBC  D7B4               	goto	l28131
  2162                           
  2163                           ; BSR set to: 1
  2164                           ;main_MC50.c: 178:                 {;main_MC50.c: 180:                       InitReceive
      +                          r();
  2165  006BBE  ECCD  F04E         	call	_InitReceiver	;wreg free
  2166                           
  2167                           ; BSR set to: 1
  2168                           
  2169                           ;main_MC50.c: 185:         }
  2170  006BC2  D7B1               	goto	l28131
  2171  006BC4                     __end_of_main:
  2172                           	callstack 0
  2173                           
  2174 ;; *************** function _sm_execute_main *****************
  2175 ;; Defined at:
  2176 ;;		line 26 in file "sm_Main_MC50.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  psm             2   21[BANK0 ] PTR struct .
  2179 ;;		 -> main_stateMachine(11), 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;		None
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  1    wreg      void 
  2184 ;; Registers used:
  2185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2186 ;; Tracked objects:
  2187 ;;		On entry : 3F/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2191 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2193 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2194 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2195 ;;Total ram usage:        4 bytes
  2196 ;; Hardware stack levels used: 1
  2197 ;; Hardware stack levels required when called: 16
  2198 ;; This function calls:
  2199 ;;		_SetSegmentValueIntermitentMain
  2200 ;;		_SetSegmentValueMain
  2201 ;;		_load_New_Menu
  2202 ;;		_sm_execute_menuConfiguration
  2203 ;;		_sm_send_event
  2204 ;; This function is called by:
  2205 ;;		_main
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text1
  2210  003AEA                     __ptext1:
  2211                           	callstack 0
  2212  003AEA                     _sm_execute_main:
  2213                           	callstack 14
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;sm_Main_MC50.c: 29:     switch((sm_state_Main_t) psm->current_state)
  2217                           
  2218                           ; BSR set to: 1
  2219                           ;incstack = 0
  2220  003AEA  D053               	goto	l25841
  2221  003AEC                     l25817:
  2222                           
  2223                           ; BSR set to: 0
  2224                           ;sm_Main_MC50.c: 32:         {;sm_Main_MC50.c: 33:             if(programmer_enable==0)
  2225  003AEC  5185               	movf	_programmer_enable& (0+255),w,b
  2226  003AEE  A4D8               	btfss	status,2,c
  2227  003AF0  D066               	goto	l25843
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;sm_Main_MC50.c: 34:                 if(psm->last_event==ev_goto_MenuConfig)
  2231  003AF2  EE20 F004          	lfsr	2,4
  2232  003AF6  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2233  003AF8  26D9               	addwf	fsr2l,f,c
  2234  003AFA  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2235  003AFC  22DA               	addwfc	fsr2h,f,c
  2236  003AFE  0E06               	movlw	6
  2237  003B00  18DE               	xorwf	postinc2,w,c
  2238  003B02  10DE               	iorwf	postinc2,w,c
  2239  003B04  A4D8               	btfss	status,2,c
  2240  003B06  D006               	goto	l25823
  2241  003B08                     u32510:
  2242                           
  2243                           ; BSR set to: 0
  2244                           ;sm_Main_MC50.c: 35:                 {;sm_Main_MC50.c: 37:                     psm->curr
      +                          ent_state = st_MenuConfiguration;
  2245  003B08  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2246  003B0C  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2247  003B10  0E01               	movlw	1
  2248  003B12  D01D               	goto	L2
  2249  003B14                     l25823:
  2250                           
  2251                           ; BSR set to: 0
  2252  003B14  EE20 F004          	lfsr	2,4
  2253  003B18  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2254  003B1A  26D9               	addwf	fsr2l,f,c
  2255  003B1C  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2256  003B1E  22DA               	addwfc	fsr2h,f,c
  2257  003B20  0E11               	movlw	17
  2258  003B22  18DE               	xorwf	postinc2,w,c
  2259  003B24  10DE               	iorwf	postinc2,w,c
  2260  003B26  A4D8               	btfss	status,2,c
  2261  003B28  D04A               	goto	l25843
  2262                           
  2263                           ; BSR set to: 0
  2264                           ;sm_Main_MC50.c: 40:                 {;sm_Main_MC50.c: 41:                     psm->curr
      +                          ent_state = st_MotorON;
  2265  003B2A  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2266  003B2E  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2267  003B32  0E02               	movlw	2
  2268  003B34  D00C               	goto	L2
  2269  003B36                     l25827:
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;sm_Main_MC50.c: 46:         {;sm_Main_MC50.c: 47:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2273  003B36  EE20 F004          	lfsr	2,4
  2274  003B3A  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2275  003B3C  26D9               	addwf	fsr2l,f,c
  2276  003B3E  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2277  003B40  22DA               	addwfc	fsr2h,f,c
  2278  003B42  0E07               	movlw	7
  2279  003B44  18DE               	xorwf	postinc2,w,c
  2280  003B46  10DE               	iorwf	postinc2,w,c
  2281  003B48  A4D8               	btfss	status,2,c
  2282  003B4A  D039               	goto	l25843
  2283  003B4C  D00F               	goto	u32540
  2284  003B4E                     L2:
  2285  003B4E  6EDE               	movwf	postinc2,c
  2286  003B50  0E00               	movlw	0
  2287  003B52  6EDD               	movwf	postdec2,c
  2288  003B54  D034               	goto	l25843
  2289  003B56                     l25831:
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;sm_Main_MC50.c: 54:         {;sm_Main_MC50.c: 55:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2293  003B56  EE20 F004          	lfsr	2,4
  2294  003B5A  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2295  003B5C  26D9               	addwf	fsr2l,f,c
  2296  003B5E  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2297  003B60  22DA               	addwfc	fsr2h,f,c
  2298  003B62  0E07               	movlw	7
  2299  003B64  18DE               	xorwf	postinc2,w,c
  2300  003B66  10DE               	iorwf	postinc2,w,c
  2301  003B68  A4D8               	btfss	status,2,c
  2302  003B6A  D006               	goto	l25835
  2303  003B6C                     u32540:
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;sm_Main_MC50.c: 56:             {;sm_Main_MC50.c: 57:                 psm->current_stat
      +                          e = st_standBy;
  2307  003B6C  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2308  003B70  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2309  003B74  0E00               	movlw	0
  2310  003B76  D7EB               	goto	L2
  2311  003B78                     l25835:
  2312                           
  2313                           ; BSR set to: 0
  2314  003B78  EE20 F004          	lfsr	2,4
  2315  003B7C  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2316  003B7E  26D9               	addwf	fsr2l,f,c
  2317  003B80  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2318  003B82  22DA               	addwfc	fsr2h,f,c
  2319  003B84  0E06               	movlw	6
  2320  003B86  18DE               	xorwf	postinc2,w,c
  2321  003B88  10DE               	iorwf	postinc2,w,c
  2322  003B8A  A4D8               	btfss	status,2,c
  2323  003B8C  D018               	goto	l25843
  2324  003B8E  D7BC               	goto	u32510
  2325  003B90                     l3053:
  2326                           
  2327                           ; BSR set to: 0
  2328  003B90  D7FF               	goto	l3053
  2329  003B92                     l25841:
  2330                           
  2331                           ; BSR set to: 0
  2332  003B92  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2333  003B96  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2334  003B9A  50DF               	movf	indf2,w,c
  2335  003B9C  6FEF               	movwf	??_sm_execute_main& (0+255),b
  2336  003B9E  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  2337                           
  2338                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2339                           ; Switch size 1, requested type "simple"
  2340                           ; Number of cases is 1, Range of values is 0 to 0
  2341                           ; switch strategies available:
  2342                           ; Name         Instructions Cycles
  2343                           ; simple_byte            4     3 (average)
  2344                           ;	Chosen strategy is simple_byte
  2345  003BA0  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  2346  003BA2  0A00               	xorlw	0	; case 0
  2347  003BA4  A4D8               	btfss	status,2,c
  2348  003BA6  D7F4               	goto	l3053
  2349                           
  2350                           ; BSR set to: 0
  2351                           ; Switch size 1, requested type "simple"
  2352                           ; Number of cases is 3, Range of values is 0 to 2
  2353                           ; switch strategies available:
  2354                           ; Name         Instructions Cycles
  2355                           ; simple_byte           10     6 (average)
  2356                           ;	Chosen strategy is simple_byte
  2357  003BA8  51EF               	movf	??_sm_execute_main& (0+255),w,b
  2358  003BAA  0A00               	xorlw	0	; case 0
  2359  003BAC  B4D8               	btfsc	status,2,c
  2360  003BAE  D79E               	goto	l25817
  2361  003BB0  0A01               	xorlw	1	; case 1
  2362  003BB2  B4D8               	btfsc	status,2,c
  2363  003BB4  D7C0               	goto	l25827
  2364  003BB6  0A03               	xorlw	3	; case 2
  2365  003BB8  B4D8               	btfsc	status,2,c
  2366  003BBA  D7CD               	goto	l25831
  2367  003BBC  D7E9               	goto	l3053
  2368  003BBE                     l25843:
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;sm_Main_MC50.c: 77:     sm_send_event(&main_stateMachine, ev_NULL);
  2372  003BBE  0EF1               	movlw	low _main_stateMachine
  2373  003BC0  6E12               	movwf	sm_send_event@psm^0,c
  2374  003BC2  0E01               	movlw	high _main_stateMachine
  2375  003BC4  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2376  003BC6  0E00               	movlw	0
  2377  003BC8  6E15               	movwf	(sm_send_event@event+1)^0,c
  2378  003BCA  0E00               	movlw	0
  2379  003BCC  6E14               	movwf	sm_send_event@event^0,c
  2380  003BCE  ECDC  F047         	call	_sm_send_event	;wreg free
  2381                           
  2382                           ;sm_Main_MC50.c: 82:     switch((sm_state_Main_t) psm->current_state)
  2383  003BD2  D1FD               	goto	l26121
  2384  003BD4                     l25845:
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;sm_Main_MC50.c: 85:         {;sm_Main_MC50.c: 86:             if (button_struct.current
      +                          ==0x27 && button_struct.timer>((1000/50)*5))
  2388  003BD4  0E27               	movlw	39
  2389  003BD6  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2390  003BD8  A4D8               	btfss	status,2,c
  2391  003BDA  D016               	goto	l25857
  2392                           
  2393                           ; BSR set to: 0
  2394  003BDC  0E64               	movlw	100
  2395  003BDE  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2396  003BE0  D013               	goto	l25857
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;sm_Main_MC50.c: 87:             {;sm_Main_MC50.c: 88:                 load_New_Menu(E_M
      +                          enu);
  2400  003BE2  0E01               	movlw	1
  2401  003BE4  EC27  F025         	call	_load_New_Menu
  2402  003BE8                     l25851:
  2403                           
  2404                           ;sm_Main_MC50.c: 89:                 sm_send_event(&main_stateMachine, ev_goto_MenuConfi
      +                          g);
  2405  003BE8  0EF1               	movlw	low _main_stateMachine
  2406  003BEA  6E12               	movwf	sm_send_event@psm^0,c
  2407  003BEC  0E01               	movlw	high _main_stateMachine
  2408  003BEE  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2409  003BF0  0E00               	movlw	0
  2410  003BF2  6E15               	movwf	(sm_send_event@event+1)^0,c
  2411  003BF4  0E06               	movlw	6
  2412  003BF6  6E14               	movwf	sm_send_event@event^0,c
  2413  003BF8  ECDC  F047         	call	_sm_send_event	;wreg free
  2414                           
  2415                           ;sm_Main_MC50.c: 90:                 button_struct.processed=1;
  2416  003BFC  0E01               	movlw	1
  2417  003BFE  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2418                           
  2419                           ;sm_Main_MC50.c: 91:                 temp=0;
  2420  003C00  0E00               	movlw	0
  2421  003C02  0100               	movlb	0	; () banked
  2422  003C04  6F80               	movwf	_temp& (0+255),b
  2423                           
  2424                           ;sm_Main_MC50.c: 92:             }
  2425  003C06  0012               	return	
  2426  003C08                     l25857:
  2427                           
  2428                           ; BSR set to: 0
  2429  003C08  0E27               	movlw	39
  2430  003C0A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2431  003C0C  A4D8               	btfss	status,2,c
  2432  003C0E  D00B               	goto	l25865
  2433                           
  2434                           ; BSR set to: 0
  2435  003C10  0E14               	movlw	20
  2436  003C12  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2437  003C14  D008               	goto	l25865
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;sm_Main_MC50.c: 94:             {;sm_Main_MC50.c: 97:                 SetSegmentValueMa
      +                          in(dP,d0);
  2441  003C16  0E00               	movlw	0
  2442  003C18  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2443  003C1A  0E10               	movlw	16
  2444  003C1C  ECDA  F04E         	call	_SetSegmentValueMain
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;sm_Main_MC50.c: 98:                 temp=1;
  2448  003C20  0E01               	movlw	1
  2449  003C22  6F80               	movwf	_temp& (0+255),b
  2450                           
  2451                           ;sm_Main_MC50.c: 99:             }
  2452  003C24  0012               	return	
  2453  003C26                     l25865:
  2454                           
  2455                           ; BSR set to: 0
  2456  003C26  0580               	decf	_temp& (0+255),w,b
  2457  003C28  A4D8               	btfss	status,2,c
  2458  003C2A  D004               	goto	l25875
  2459                           
  2460                           ; BSR set to: 0
  2461                           ;sm_Main_MC50.c: 101:             {;sm_Main_MC50.c: 102:                 load_New_Menu(P
      +                          _Menu);
  2462  003C2C  0E00               	movlw	0
  2463  003C2E  EC27  F025         	call	_load_New_Menu
  2464  003C32  D7DA               	goto	l25851
  2465  003C34                     l25875:
  2466                           
  2467                           ; BSR set to: 0
  2468  003C34  0E07               	movlw	7
  2469  003C36  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2470  003C38  A4D8               	btfss	status,2,c
  2471  003C3A  D007               	goto	l25887
  2472                           
  2473                           ; BSR set to: 0
  2474  003C3C  0E78               	movlw	120
  2475  003C3E  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2476  003C40  D004               	goto	l25887
  2477                           
  2478                           ; BSR set to: 0
  2479                           ;sm_Main_MC50.c: 108:             {;sm_Main_MC50.c: 110:                 load_New_Menu(D
      +                          el_Menu);
  2480  003C42  0E0D               	movlw	13
  2481  003C44  EC27  F025         	call	_load_New_Menu
  2482  003C48  D7CF               	goto	l25851
  2483  003C4A                     l25887:
  2484                           
  2485                           ; BSR set to: 0
  2486  003C4A  0E07               	movlw	7
  2487  003C4C  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2488  003C4E  A4D8               	btfss	status,2,c
  2489  003C50  D00B               	goto	l25895
  2490                           
  2491                           ; BSR set to: 0
  2492  003C52  0E14               	movlw	20
  2493  003C54  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2494  003C56  D008               	goto	l25895
  2495                           
  2496                           ; BSR set to: 0
  2497                           ;sm_Main_MC50.c: 116:             {;sm_Main_MC50.c: 118:                 SetSegmentValue
      +                          Main(d5,dU);
  2498  003C58  0E13               	movlw	19
  2499  003C5A  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2500  003C5C  0E05               	movlw	5
  2501  003C5E  ECDA  F04E         	call	_SetSegmentValueMain
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;sm_Main_MC50.c: 119:                 temp=2;
  2505  003C62  0E02               	movlw	2
  2506  003C64  6F80               	movwf	_temp& (0+255),b
  2507                           
  2508                           ;sm_Main_MC50.c: 120:             }
  2509  003C66  0012               	return	
  2510  003C68                     l25895:
  2511                           
  2512                           ; BSR set to: 0
  2513  003C68  0E02               	movlw	2
  2514  003C6A  1980               	xorwf	_temp& (0+255),w,b
  2515  003C6C  A4D8               	btfss	status,2,c
  2516  003C6E  D004               	goto	l25905
  2517                           
  2518                           ; BSR set to: 0
  2519                           ;sm_Main_MC50.c: 122:             {;sm_Main_MC50.c: 123:                 load_New_Menu(S
      +                          _Menu);
  2520  003C70  0E0C               	movlw	12
  2521  003C72  EC27  F025         	call	_load_New_Menu
  2522  003C76  D7B8               	goto	l25851
  2523  003C78                     l25905:
  2524                           
  2525                           ; BSR set to: 0
  2526  003C78  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2527  003C7A  A4D8               	btfss	status,2,c
  2528  003C7C  D009               	goto	l25911
  2529                           
  2530                           ; BSR set to: 0
  2531  003C7E  0101               	movlb	1	; () banked
  2532  003C80  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
  2533  003C82  A4D8               	btfss	status,2,c
  2534  003C84  D005               	goto	l25911
  2535                           
  2536                           ; BSR set to: 1
  2537                           ;sm_Main_MC50.c: 129:             {;sm_Main_MC50.c: 130:                 var_sys.StartFr
      +                          omButton=YES;
  2538  003C86  0E01               	movlw	1
  2539  003C88  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2540                           
  2541                           ;sm_Main_MC50.c: 131:                 var_sys.StateMotor=InClose;
  2542  003C8A  0E03               	movlw	3
  2543  003C8C  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2544                           
  2545                           ;sm_Main_MC50.c: 132:             }
  2546  003C8E  0012               	return	
  2547  003C90                     l25911:
  2548  003C90  0E17               	movlw	23
  2549  003C92  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2550  003C94  A4D8               	btfss	status,2,c
  2551  003C96  D009               	goto	l25917
  2552  003C98  0101               	movlb	1	; () banked
  2553  003C9A  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
  2554  003C9C  A4D8               	btfss	status,2,c
  2555  003C9E  D005               	goto	l25917
  2556                           
  2557                           ; BSR set to: 1
  2558                           ;sm_Main_MC50.c: 134:             {;sm_Main_MC50.c: 135:                 var_sys.StartFr
      +                          omButton=YES;
  2559  003CA0  0E01               	movlw	1
  2560  003CA2  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2561                           
  2562                           ;sm_Main_MC50.c: 136:                 var_sys.StateMotor=InOpenFull;
  2563  003CA4  0E01               	movlw	1
  2564  003CA6  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2565                           
  2566                           ;sm_Main_MC50.c: 137:             }
  2567  003CA8  0012               	return	
  2568  003CAA                     l25917:
  2569  003CAA  0101               	movlb	1	; () banked
  2570  003CAC  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
  2571  003CAE  A4D8               	btfss	status,2,c
  2572  003CB0  D005               	goto	l25921
  2573                           
  2574                           ; BSR set to: 1
  2575                           ;sm_Main_MC50.c: 139:             {;sm_Main_MC50.c: 140:                 var_sys.StartFr
      +                          omButton=NO;
  2576  003CB2  0E00               	movlw	0
  2577  003CB4  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2578                           
  2579                           ;sm_Main_MC50.c: 141:                 var_sys.StateMotor = Stopped;
  2580  003CB6  0E00               	movlw	0
  2581  003CB8  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2582                           
  2583                           ;sm_Main_MC50.c: 142:             }
  2584  003CBA  0012               	return	
  2585  003CBC                     l25921:
  2586                           
  2587                           ; BSR set to: 1
  2588  003CBC  0E06               	movlw	6
  2589  003CBE  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2590  003CC0  B4D8               	btfsc	status,2,c
  2591  003CC2  D004               	goto	u32720
  2592                           
  2593                           ; BSR set to: 1
  2594  003CC4  0E05               	movlw	5
  2595  003CC6  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2596  003CC8  A4D8               	btfss	status,2,c
  2597  003CCA  D015               	goto	l25935
  2598  003CCC                     u32720:
  2599                           
  2600                           ; BSR set to: 1
  2601  003CCC  0E63               	movlw	99
  2602  003CCE  6444               	cpfsgt	(_rfCMD+9)^0,c	;volatile
  2603  003CD0  D012               	goto	l25935
  2604                           
  2605                           ; BSR set to: 1
  2606                           ;sm_Main_MC50.c: 144:             {;sm_Main_MC50.c: 145:                 load_New_Menu(S
      +                          _Menu);
  2607  003CD2  0E0C               	movlw	12
  2608  003CD4  EC27  F025         	call	_load_New_Menu
  2609                           
  2610                           ;sm_Main_MC50.c: 146:                 sm_send_event(&main_stateMachine, ev_goto_MenuConf
      +                          ig);
  2611  003CD8  0EF1               	movlw	low _main_stateMachine
  2612  003CDA  6E12               	movwf	sm_send_event@psm^0,c
  2613  003CDC  0E01               	movlw	high _main_stateMachine
  2614  003CDE  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2615  003CE0  0E00               	movlw	0
  2616  003CE2  6E15               	movwf	(sm_send_event@event+1)^0,c
  2617  003CE4  0E06               	movlw	6
  2618  003CE6  6E14               	movwf	sm_send_event@event^0,c
  2619  003CE8  ECDC  F047         	call	_sm_send_event	;wreg free
  2620                           
  2621                           ;sm_Main_MC50.c: 147:                 var_sys.ProgrammingDistanceIs=rfCMD.currentType;
  2622  003CEC  C03B  F13B         	movff	_rfCMD,_var_sys+59	;volatile
  2623                           
  2624                           ;sm_Main_MC50.c: 148:                 rfCMD.processed=1;
  2625  003CF0  0E01               	movlw	1
  2626  003CF2  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  2627                           
  2628                           ;sm_Main_MC50.c: 149:             }
  2629  003CF4  0012               	return	
  2630  003CF6                     l25935:
  2631                           
  2632                           ; BSR set to: 1
  2633  003CF6  BFAB               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2634  003CF8  D005               	goto	u32740
  2635  003CFA  51AB               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2636  003CFC  E111               	bnz	l3065
  2637  003CFE  05AA               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2638  003D00  B0D8               	btfsc	status,0,c
  2639  003D02  0012               	return	
  2640  003D04                     u32740:
  2641                           
  2642                           ; BSR set to: 1
  2643                           ;sm_Main_MC50.c: 151:             {;sm_Main_MC50.c: 152:                 if(var_sys.FimC
      +                          urso_CloseIsEnabled == YES)
  2644  003D04  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  2645  003D06  A4D8               	btfss	status,2,c
  2646  003D08  D006               	goto	l25941
  2647                           
  2648                           ; BSR set to: 1
  2649                           ;sm_Main_MC50.c: 154:                     {;sm_Main_MC50.c: 156:                        
      +                           SetSegmentValueMain(dF,dC);
  2650  003D0A  0E0C               	movlw	12
  2651  003D0C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2652  003D0E  0E0F               	movlw	15
  2653  003D10  ECDA  F04E         	call	_SetSegmentValueMain
  2654                           
  2655                           ;sm_Main_MC50.c: 157:                     }
  2656  003D14  0012               	return	
  2657  003D16                     l25941:
  2658                           
  2659                           ; BSR set to: 1
  2660                           ;sm_Main_MC50.c: 160:                 SetSegmentValueMain(dMinus,dMinus);
  2661  003D16  0E18               	movlw	24
  2662  003D18  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2663  003D1A  0E18               	movlw	24
  2664  003D1C  ECDA  F04E         	call	_SetSegmentValueMain
  2665  003D20                     l3065:
  2666                           
  2667                           ; BSR set to: 1
  2668  003D20  0012               	return	
  2669  003D22                     l25943:
  2670                           
  2671                           ; BSR set to: 0
  2672                           ;sm_Main_MC50.c: 167:         {;sm_Main_MC50.c: 168:             sm_execute_menuConfigur
      +                          ation(&menuConfiguration_stateMachine);
  2673  003D22  0EBD               	movlw	low _menuConfiguration_stateMachine
  2674  003D24  6FE9               	movwf	sm_execute_menuConfiguration@psm& (0+255),b
  2675  003D26  0E02               	movlw	high _menuConfiguration_stateMachine
  2676  003D28  6FEA               	movwf	(sm_execute_menuConfiguration@psm+1)& (0+255),b
  2677  003D2A  EC84  F00C         	call	_sm_execute_menuConfiguration	;wreg free
  2678                           
  2679                           ;sm_Main_MC50.c: 169:         };sm_Main_MC50.c: 170:         break;
  2680  003D2E  0012               	return	
  2681  003D30                     l25945:
  2682                           
  2683                           ; BSR set to: 0
  2684                           ;sm_Main_MC50.c: 172:         {;sm_Main_MC50.c: 175:             aux_in_auto_close = NO;
  2685  003D30  0E00               	movlw	0
  2686  003D32  0101               	movlb	1	; () banked
  2687  003D34  6F8F               	movwf	_aux_in_auto_close& (0+255),b
  2688                           
  2689                           ; BSR set to: 1
  2690                           ;sm_Main_MC50.c: 176:             if ( controlGate_stateMachine.current_state == st_Open
      +                          ed )
  2691  003D36  0E04               	movlw	4
  2692  003D38  19E6               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2693  003D3A  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2694  003D3C  A4D8               	btfss	status,2,c
  2695  003D3E  D013               	goto	l3088
  2696                           
  2697                           ; BSR set to: 1
  2698                           ;sm_Main_MC50.c: 177:             {;sm_Main_MC50.c: 179:                 if ( var_sys_NV
      +                          M.operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES )
  2699  003D40  0100               	movlb	0	; () banked
  2700  003D42  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2701  003D44  A4D8               	btfss	status,2,c
  2702  003D46  D007               	goto	l25955
  2703                           
  2704                           ; BSR set to: 0
  2705  003D48  0101               	movlb	1	; () banked
  2706  003D4A  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  2707  003D4C  A4D8               	btfss	status,2,c
  2708  003D4E  D003               	goto	l25955
  2709  003D50                     u32780:
  2710                           
  2711                           ; BSR set to: 1
  2712                           ;sm_Main_MC50.c: 180:                 {;sm_Main_MC50.c: 181:                     aux_in_
      +                          auto_close = YES;
  2713  003D50  0E01               	movlw	1
  2714  003D52  6F8F               	movwf	_aux_in_auto_close& (0+255),b
  2715                           
  2716                           ;sm_Main_MC50.c: 182:                 }
  2717  003D54  D008               	goto	l3088
  2718  003D56                     l25955:
  2719  003D56  0100               	movlb	0	; () banked
  2720  003D58  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2721  003D5A  B4D8               	btfsc	status,2,c
  2722  003D5C  D004               	goto	l3088
  2723                           
  2724                           ; BSR set to: 0
  2725  003D5E  0101               	movlb	1	; () banked
  2726  003D60  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2727  003D62  A4D8               	btfss	status,2,c
  2728  003D64  D7F5               	goto	u32780
  2729  003D66                     l3088:
  2730                           
  2731                           ;sm_Main_MC50.c: 193:             if(var_sys.StateMotor==Stopped && ( (controlGate_state
      +                          Machine.current_state==st_Opened && aux_in_auto_close==NO) || controlGate_stateMachine.c
      +                          urrent_state==st_Closed || controlGate_stateMachine.current_state==st_Idle ) )
  2732  003D66  0101               	movlb	1	; () banked
  2733  003D68  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2734  003D6A  A4D8               	btfss	status,2,c
  2735  003D6C  D06B               	goto	l3102
  2736                           
  2737                           ; BSR set to: 1
  2738  003D6E  0E04               	movlw	4
  2739  003D70  19E6               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2740  003D72  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2741  003D74  A4D8               	btfss	status,2,c
  2742  003D76  D003               	goto	u32830
  2743                           
  2744                           ; BSR set to: 1
  2745  003D78  518F               	movf	_aux_in_auto_close& (0+255),w,b
  2746  003D7A  B4D8               	btfsc	status,2,c
  2747  003D7C  D008               	goto	u32850
  2748  003D7E                     u32830:
  2749                           
  2750                           ; BSR set to: 1
  2751  003D7E  05E6               	decf	_controlGate_stateMachine& (0+255),w,b
  2752  003D80  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2753  003D82  B4D8               	btfsc	status,2,c
  2754  003D84  D004               	goto	u32850
  2755                           
  2756                           ; BSR set to: 1
  2757  003D86  51E6               	movf	_controlGate_stateMachine& (0+255),w,b
  2758  003D88  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2759  003D8A  A4D8               	btfss	status,2,c
  2760  003D8C  D05B               	goto	l3102
  2761  003D8E                     u32850:
  2762                           
  2763                           ; BSR set to: 1
  2764                           ;sm_Main_MC50.c: 194:             {;sm_Main_MC50.c: 195:                 if (button_stru
      +                          ct.current==0x27 && button_struct.timer>((1000/50)*5))
  2765  003D8E  0E27               	movlw	39
  2766  003D90  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2767  003D92  A4D8               	btfss	status,2,c
  2768  003D94  D015               	goto	l25983
  2769                           
  2770                           ; BSR set to: 1
  2771  003D96  0E64               	movlw	100
  2772  003D98  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2773  003D9A  D012               	goto	l25983
  2774                           
  2775                           ; BSR set to: 1
  2776                           ;sm_Main_MC50.c: 196:                 {;sm_Main_MC50.c: 197:                     load_Ne
      +                          w_Menu(E_Menu);
  2777  003D9C  0E01               	movlw	1
  2778  003D9E  EC27  F025         	call	_load_New_Menu
  2779  003DA2                     l25977:
  2780                           
  2781                           ;sm_Main_MC50.c: 198:                     sm_send_event(&main_stateMachine, ev_goto_Menu
      +                          Config);
  2782  003DA2  0EF1               	movlw	low _main_stateMachine
  2783  003DA4  6E12               	movwf	sm_send_event@psm^0,c
  2784  003DA6  0E01               	movlw	high _main_stateMachine
  2785  003DA8  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2786  003DAA  0E00               	movlw	0
  2787  003DAC  6E15               	movwf	(sm_send_event@event+1)^0,c
  2788  003DAE  0E06               	movlw	6
  2789  003DB0  6E14               	movwf	sm_send_event@event^0,c
  2790  003DB2  ECDC  F047         	call	_sm_send_event	;wreg free
  2791                           
  2792                           ;sm_Main_MC50.c: 199:                     button_struct.processed=1;
  2793  003DB6  0E01               	movlw	1
  2794  003DB8  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2795                           
  2796                           ;sm_Main_MC50.c: 200:                     temp=0;
  2797  003DBA  0E00               	movlw	0
  2798  003DBC  0100               	movlb	0	; () banked
  2799  003DBE  D038               	goto	L4
  2800  003DC0                     l25983:
  2801                           
  2802                           ; BSR set to: 1
  2803  003DC0  0E27               	movlw	39
  2804  003DC2  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2805  003DC4  A4D8               	btfss	status,2,c
  2806  003DC6  D00A               	goto	l25991
  2807                           
  2808                           ; BSR set to: 1
  2809  003DC8  0E14               	movlw	20
  2810  003DCA  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2811  003DCC  D007               	goto	l25991
  2812                           
  2813                           ; BSR set to: 1
  2814                           ;sm_Main_MC50.c: 203:                 {;sm_Main_MC50.c: 205:                     SetSegm
      +                          entValueMain(dP,d0);
  2815  003DCE  0E00               	movlw	0
  2816  003DD0  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2817  003DD2  0E10               	movlw	16
  2818  003DD4  ECDA  F04E         	call	_SetSegmentValueMain
  2819                           
  2820                           ; BSR set to: 0
  2821                           ;sm_Main_MC50.c: 206:                     temp=1;
  2822  003DD8  0E01               	movlw	1
  2823  003DDA  D02A               	goto	L4
  2824  003DDC                     l25991:
  2825                           
  2826                           ; BSR set to: 1
  2827  003DDC  0100               	movlb	0	; () banked
  2828  003DDE  0580               	decf	_temp& (0+255),w,b
  2829  003DE0  A4D8               	btfss	status,2,c
  2830  003DE2  D00E               	goto	l26005
  2831                           
  2832                           ; BSR set to: 0
  2833                           ;sm_Main_MC50.c: 209:                 {;sm_Main_MC50.c: 210:                     load_Ne
      +                          w_Menu(P_Menu);
  2834  003DE4  0E00               	movlw	0
  2835  003DE6  EC27  F025         	call	_load_New_Menu
  2836                           
  2837                           ;sm_Main_MC50.c: 212:                     button_struct.processed=1;
  2838  003DEA  0E01               	movlw	1
  2839  003DEC  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2840                           
  2841                           ;sm_Main_MC50.c: 213:                     temp=0;
  2842  003DEE  0E00               	movlw	0
  2843  003DF0  0100               	movlb	0	; () banked
  2844  003DF2  6F80               	movwf	_temp& (0+255),b
  2845                           
  2846                           ; BSR set to: 0
  2847                           ;sm_Main_MC50.c: 214:                     main_stateMachine.current_state = st_MenuConfi
      +                          guration;
  2848  003DF4  0E00               	movlw	0
  2849  003DF6  0101               	movlb	1	; () banked
  2850  003DF8  6FF2               	movwf	(_main_stateMachine+1)& (0+255),b
  2851  003DFA  0E01               	movlw	1
  2852  003DFC  6FF1               	movwf	_main_stateMachine& (0+255),b
  2853  003DFE  0012               	return	
  2854  003E00                     l26005:
  2855                           
  2856                           ; BSR set to: 0
  2857  003E00  0E07               	movlw	7
  2858  003E02  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2859  003E04  A4D8               	btfss	status,2,c
  2860  003E06  D007               	goto	l26017
  2861                           
  2862                           ; BSR set to: 0
  2863  003E08  0E78               	movlw	120
  2864  003E0A  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2865  003E0C  D004               	goto	l26017
  2866                           
  2867                           ; BSR set to: 0
  2868                           ;sm_Main_MC50.c: 218:             {;sm_Main_MC50.c: 220:                 load_New_Menu(D
      +                          el_Menu);
  2869  003E0E  0E0D               	movlw	13
  2870  003E10  EC27  F025         	call	_load_New_Menu
  2871  003E14  D7C6               	goto	l25977
  2872  003E16                     l26017:
  2873                           
  2874                           ; BSR set to: 0
  2875  003E16  0E07               	movlw	7
  2876  003E18  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2877  003E1A  A4D8               	btfss	status,2,c
  2878  003E1C  D00B               	goto	l26025
  2879                           
  2880                           ; BSR set to: 0
  2881  003E1E  0E14               	movlw	20
  2882  003E20  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2883  003E22  D008               	goto	l26025
  2884                           
  2885                           ; BSR set to: 0
  2886                           ;sm_Main_MC50.c: 226:             {;sm_Main_MC50.c: 228:                 SetSegmentValue
      +                          Main(d5,dU);
  2887  003E24  0E13               	movlw	19
  2888  003E26  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2889  003E28  0E05               	movlw	5
  2890  003E2A  ECDA  F04E         	call	_SetSegmentValueMain
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;sm_Main_MC50.c: 229:                 temp=2;
  2894  003E2E  0E02               	movlw	2
  2895  003E30                     L4:
  2896  003E30  6F80               	movwf	_temp& (0+255),b
  2897                           
  2898                           ;sm_Main_MC50.c: 230:             }
  2899  003E32  D008               	goto	l3102
  2900  003E34                     l26025:
  2901                           
  2902                           ; BSR set to: 0
  2903  003E34  0E02               	movlw	2
  2904  003E36  1980               	xorwf	_temp& (0+255),w,b
  2905  003E38  A4D8               	btfss	status,2,c
  2906  003E3A  D004               	goto	l3102
  2907                           
  2908                           ; BSR set to: 0
  2909                           ;sm_Main_MC50.c: 232:             {;sm_Main_MC50.c: 233:                 load_New_Menu(S
      +                          _Menu);
  2910  003E3C  0E0C               	movlw	12
  2911  003E3E  EC27  F025         	call	_load_New_Menu
  2912  003E42  D6D2               	goto	l25851
  2913  003E44                     l3102:
  2914                           
  2915                           ;sm_Main_MC50.c: 243:             if( ts_system.timeSinalizationDigit<=0 && (button_stru
      +                          ct.current!=0x27 && button_struct.current!=0x07) )
  2916                           
  2917                           ; BSR set to: 0
  2918  003E44  0101               	movlb	1	; () banked
  2919  003E46  BFAB               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2920  003E48  D005               	goto	u32960
  2921  003E4A  51AB               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2922  003E4C  E102               	bnz	u32961
  2923  003E4E  05AA               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2924  003E50  B0D8               	btfsc	status,0,c
  2925  003E52                     u32961:
  2926  003E52  0012               	return	
  2927  003E54                     u32960:
  2928                           
  2929                           ; BSR set to: 1
  2930  003E54  0E27               	movlw	39
  2931  003E56  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2932  003E58  B4D8               	btfsc	status,2,c
  2933  003E5A  0012               	return	
  2934                           
  2935                           ; BSR set to: 1
  2936  003E5C  0E07               	movlw	7
  2937  003E5E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2938  003E60  B4D8               	btfsc	status,2,c
  2939  003E62  0012               	return	
  2940                           
  2941                           ; BSR set to: 1
  2942                           ;sm_Main_MC50.c: 244:             {;sm_Main_MC50.c: 245:                 if(var_sys.Stat
      +                          eMotor==InClose )
  2943  003E64  0E03               	movlw	3
  2944  003E66  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2945  003E68  A4D8               	btfss	status,2,c
  2946  003E6A  D011               	goto	l26051
  2947                           
  2948                           ; BSR set to: 1
  2949                           ;sm_Main_MC50.c: 246:                 {;sm_Main_MC50.c: 248:                    SetSegme
      +                          ntValueIntermitentMain(dC,dL,( 500/50));
  2950  003E6C  0E12               	movlw	18
  2951  003E6E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2952  003E70  0E00               	movlw	0
  2953  003E72  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2954  003E74  0E0A               	movlw	10
  2955  003E76  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2956  003E78  0E0C               	movlw	12
  2957  003E7A  EC76  F04F         	call	_SetSegmentValueIntermitentMain
  2958  003E7E                     l26047:
  2959                           
  2960                           ;sm_Main_MC50.c: 249:                    ts_system.timeSinalizationDigit=( 200/50);
  2961  003E7E  0E00               	movlw	0
  2962  003E80  0101               	movlb	1	; () banked
  2963  003E82  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
  2964  003E84  0E04               	movlw	4
  2965  003E86  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
  2966                           
  2967                           ; BSR set to: 1
  2968                           ;sm_Main_MC50.c: 251:                     var_sys.showAP = NO;
  2969  003E88  0E00               	movlw	0
  2970  003E8A  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
  2971                           
  2972                           ;sm_Main_MC50.c: 252:                 }
  2973  003E8C  0012               	return	
  2974  003E8E                     l26051:
  2975                           
  2976                           ; BSR set to: 1
  2977  003E8E  0E02               	movlw	2
  2978  003E90  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2979  003E92  B4D8               	btfsc	status,2,c
  2980  003E94  D003               	goto	u33010
  2981                           
  2982                           ; BSR set to: 1
  2983  003E96  0500               	decf	_var_sys& (0+255),w,b	;volatile
  2984  003E98  A4D8               	btfss	status,2,c
  2985  003E9A  D00A               	goto	l26061
  2986  003E9C                     u33010:
  2987                           
  2988                           ; BSR set to: 1
  2989                           ;sm_Main_MC50.c: 254:                 {;sm_Main_MC50.c: 256:                     SetSegm
      +                          entValueIntermitentMain(d0,dP,( 500/50));
  2990  003E9C  0E10               	movlw	16
  2991  003E9E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2992  003EA0  0E00               	movlw	0
  2993  003EA2  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2994  003EA4  0E0A               	movlw	10
  2995  003EA6  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2996  003EA8  0E00               	movlw	0
  2997  003EAA  EC76  F04F         	call	_SetSegmentValueIntermitentMain
  2998  003EAE  D7E7               	goto	l26047
  2999  003EB0                     l26061:
  3000                           
  3001                           ; BSR set to: 1
  3002  003EB0  5100               	movf	_var_sys& (0+255),w,b	;volatile
  3003  003EB2  A4D8               	btfss	status,2,c
  3004  003EB4  D00F               	goto	l26067
  3005                           
  3006                           ; BSR set to: 1
  3007  003EB6  05E6               	decf	_controlGate_stateMachine& (0+255),w,b
  3008  003EB8  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  3009  003EBA  A4D8               	btfss	status,2,c
  3010  003EBC  D00B               	goto	l26067
  3011                           
  3012                           ; BSR set to: 1
  3013                           ;sm_Main_MC50.c: 262:                 {;sm_Main_MC50.c: 263:                     sm_send
      +                          _event(&main_stateMachine, ev_goto_StandBy);
  3014  003EBE  0EF1               	movlw	low _main_stateMachine
  3015  003EC0  6E12               	movwf	sm_send_event@psm^0,c
  3016  003EC2  0E01               	movlw	high _main_stateMachine
  3017  003EC4  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3018  003EC6  0E00               	movlw	0
  3019  003EC8  6E15               	movwf	(sm_send_event@event+1)^0,c
  3020  003ECA  0E07               	movlw	7
  3021  003ECC  6E14               	movwf	sm_send_event@event^0,c
  3022  003ECE  ECDC  F047         	call	_sm_send_event	;wreg free
  3023                           
  3024                           ;sm_Main_MC50.c: 264:                 }
  3025  003ED2  0012               	return	
  3026  003ED4                     l26067:
  3027                           
  3028                           ; BSR set to: 1
  3029  003ED4  5100               	movf	_var_sys& (0+255),w,b	;volatile
  3030  003ED6  A4D8               	btfss	status,2,c
  3031  003ED8  D074               	goto	l26117
  3032                           
  3033                           ; BSR set to: 1
  3034  003EDA  0E04               	movlw	4
  3035  003EDC  19E6               	xorwf	_controlGate_stateMachine& (0+255),w,b
  3036  003EDE  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  3037  003EE0  A4D8               	btfss	status,2,c
  3038  003EE2  D06F               	goto	l26117
  3039                           
  3040                           ; BSR set to: 1
  3041                           ;sm_Main_MC50.c: 266:                 {;sm_Main_MC50.c: 268:                     if
  3042  003EE4  0100               	movlb	0	; () banked
  3043  003EE6  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3044  003EE8  B4D8               	btfsc	status,2,c
  3045  003EEA  D00B               	goto	u33090
  3046                           
  3047                           ; BSR set to: 0
  3048  003EEC  0101               	movlb	1	; () banked
  3049  003EEE  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3050  003EF0  B4D8               	btfsc	status,2,c
  3051  003EF2  D007               	goto	u33090
  3052                           
  3053                           ; BSR set to: 1
  3054  003EF4  050B               	decf	(_var_sys+11)& (0+255),w,b	;volatile
  3055  003EF6  B4D8               	btfsc	status,2,c
  3056  003EF8  D013               	goto	u33130
  3057                           
  3058                           ; BSR set to: 1
  3059  003EFA  0E03               	movlw	3
  3060  003EFC  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3061  003EFE  B4D8               	btfsc	status,2,c
  3062  003F00  D00F               	goto	u33130
  3063  003F02                     u33090:
  3064  003F02  0100               	movlb	0	; () banked
  3065  003F04  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3066  003F06  A4D8               	btfss	status,2,c
  3067  003F08  D026               	goto	l26095
  3068                           
  3069                           ; BSR set to: 0
  3070  003F0A  0101               	movlb	1	; () banked
  3071  003F0C  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3072  003F0E  A4D8               	btfss	status,2,c
  3073  003F10  D022               	goto	l26095
  3074                           
  3075                           ; BSR set to: 1
  3076  003F12  0E02               	movlw	2
  3077  003F14  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3078  003F16  B4D8               	btfsc	status,2,c
  3079  003F18  D01E               	goto	l26095
  3080                           
  3081                           ; BSR set to: 1
  3082  003F1A  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3083  003F1C  B4D8               	btfsc	status,2,c
  3084  003F1E  D01B               	goto	l26095
  3085  003F20                     u33130:
  3086                           
  3087                           ; BSR set to: 1
  3088                           ;sm_Main_MC50.c: 273:                     {;sm_Main_MC50.c: 274:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3089  003F20  0E00               	movlw	0
  3090  003F22  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3091  003F24  0E0A               	movlw	10
  3092  003F26  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3093                           
  3094                           ; BSR set to: 1
  3095                           ;sm_Main_MC50.c: 279:                         if ( var_sys.showAP == YES )
  3096  003F28  054F               	decf	(_var_sys+79)& (0+255),w,b	;volatile
  3097  003F2A  A4D8               	btfss	status,2,c
  3098  003F2C  D00A               	goto	l26093
  3099                           
  3100                           ; BSR set to: 1
  3101                           ;sm_Main_MC50.c: 280:                         {;sm_Main_MC50.c: 281:                    
      +                                   SetSegmentValueIntermitentMain(dA,dP,( 500/50));
  3102  003F2E  0E10               	movlw	16
  3103  003F30  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3104  003F32  0E00               	movlw	0
  3105  003F34  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3106  003F36  0E0A               	movlw	10
  3107  003F38  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3108  003F3A  0E0A               	movlw	10
  3109  003F3C  EC76  F04F         	call	_SetSegmentValueIntermitentMain
  3110                           
  3111                           ;sm_Main_MC50.c: 282:                         }
  3112  003F40  0012               	return	
  3113  003F42                     l26093:
  3114                           
  3115                           ; BSR set to: 1
  3116                           ;sm_Main_MC50.c: 284:                         {;sm_Main_MC50.c: 285:                    
      +                                   SetSegmentValueIntermitentMain(dA,dF,( 500/50));
  3117  003F42  0E0F               	movlw	15
  3118  003F44  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3119  003F46  0E00               	movlw	0
  3120  003F48  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3121  003F4A  0E0A               	movlw	10
  3122  003F4C  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3123  003F4E  0E0A               	movlw	10
  3124  003F50  EC76  F04F         	call	_SetSegmentValueIntermitentMain
  3125  003F54  0012               	return	
  3126  003F56                     l26095:
  3127  003F56  0100               	movlb	0	; () banked
  3128  003F58  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3129  003F5A  B4D8               	btfsc	status,2,c
  3130  003F5C  D008               	goto	u33170
  3131                           
  3132                           ; BSR set to: 0
  3133  003F5E  0101               	movlb	1	; () banked
  3134  003F60  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3135  003F62  B4D8               	btfsc	status,2,c
  3136  003F64  D004               	goto	u33170
  3137                           
  3138                           ; BSR set to: 1
  3139  003F66  0E02               	movlw	2
  3140  003F68  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3141  003F6A  B4D8               	btfsc	status,2,c
  3142  003F6C  D00C               	goto	u33200
  3143  003F6E                     u33170:
  3144  003F6E  0100               	movlb	0	; () banked
  3145  003F70  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3146  003F72  A4D8               	btfss	status,2,c
  3147  003F74  D016               	goto	l26111
  3148                           
  3149                           ; BSR set to: 0
  3150  003F76  0101               	movlb	1	; () banked
  3151  003F78  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3152  003F7A  A4D8               	btfss	status,2,c
  3153  003F7C  D012               	goto	l26111
  3154                           
  3155                           ; BSR set to: 1
  3156  003F7E  0E02               	movlw	2
  3157  003F80  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3158  003F82  A4D8               	btfss	status,2,c
  3159  003F84  D00E               	goto	l26111
  3160  003F86                     u33200:
  3161                           
  3162                           ; BSR set to: 1
  3163                           ;sm_Main_MC50.c: 294:                     {;sm_Main_MC50.c: 295:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3164  003F86  0E00               	movlw	0
  3165  003F88  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3166  003F8A  0E0A               	movlw	10
  3167  003F8C  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3168                           
  3169                           ; BSR set to: 1
  3170                           ;sm_Main_MC50.c: 297:                         SetSegmentValueIntermitentMain(dA,dP,( 500
      +                          /50));
  3171  003F8E  0E10               	movlw	16
  3172  003F90  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3173  003F92  0E00               	movlw	0
  3174  003F94  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3175  003F96  0E0A               	movlw	10
  3176  003F98  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3177  003F9A  0E0A               	movlw	10
  3178  003F9C  EC76  F04F         	call	_SetSegmentValueIntermitentMain
  3179                           
  3180                           ;sm_Main_MC50.c: 298:                     }
  3181  003FA0  0012               	return	
  3182  003FA2                     l26111:
  3183  003FA2  0101               	movlb	1	; () banked
  3184  003FA4  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
  3185  003FA6  A4D8               	btfss	status,2,c
  3186  003FA8  D006               	goto	l26115
  3187                           
  3188                           ; BSR set to: 1
  3189                           ;sm_Main_MC50.c: 301:                     {;sm_Main_MC50.c: 303:                        
      +                           SetSegmentValueMain(dF,d0);
  3190  003FAA  0E00               	movlw	0
  3191  003FAC  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3192  003FAE  0E0F               	movlw	15
  3193  003FB0  ECDA  F04E         	call	_SetSegmentValueMain
  3194                           
  3195                           ;sm_Main_MC50.c: 304:                     }
  3196  003FB4  0012               	return	
  3197  003FB6                     l26115:
  3198                           
  3199                           ; BSR set to: 1
  3200                           ;sm_Main_MC50.c: 306:                     {;sm_Main_MC50.c: 307:                       S
      +                          etSegmentValueMain(dMinus,dMinus);
  3201  003FB6  0E18               	movlw	24
  3202  003FB8  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3203  003FBA  0E18               	movlw	24
  3204  003FBC  ECDA  F04E         	call	_SetSegmentValueMain
  3205  003FC0  0012               	return	
  3206  003FC2                     l26117:
  3207                           
  3208                           ; BSR set to: 1
  3209                           ;sm_Main_MC50.c: 311:                 {;sm_Main_MC50.c: 313:                     SetSegm
      +                          entValueMain(dMinus,dMinus);
  3210  003FC2  0E18               	movlw	24
  3211  003FC4  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3212  003FC6  0E18               	movlw	24
  3213  003FC8  ECDA  F04E         	call	_SetSegmentValueMain
  3214  003FCC  0012               	return	
  3215  003FCE                     l26121:
  3216  003FCE  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  3217  003FD2  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  3218  003FD6  50DF               	movf	indf2,w,c
  3219  003FD8  0100               	movlb	0	; () banked
  3220  003FDA  6FEF               	movwf	??_sm_execute_main& (0+255),b
  3221  003FDC  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  3222                           
  3223                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3224                           ; Switch size 1, requested type "simple"
  3225                           ; Number of cases is 1, Range of values is 0 to 0
  3226                           ; switch strategies available:
  3227                           ; Name         Instructions Cycles
  3228                           ; simple_byte            4     3 (average)
  3229                           ;	Chosen strategy is simple_byte
  3230  003FDE  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  3231  003FE0  0A00               	xorlw	0	; case 0
  3232  003FE2  A4D8               	btfss	status,2,c
  3233  003FE4  0012               	return	
  3234                           
  3235                           ; BSR set to: 0
  3236                           ; Switch size 1, requested type "simple"
  3237                           ; Number of cases is 3, Range of values is 0 to 2
  3238                           ; switch strategies available:
  3239                           ; Name         Instructions Cycles
  3240                           ; simple_byte           10     6 (average)
  3241                           ;	Chosen strategy is simple_byte
  3242  003FE6  51EF               	movf	??_sm_execute_main& (0+255),w,b
  3243  003FE8  0A00               	xorlw	0	; case 0
  3244  003FEA  B4D8               	btfsc	status,2,c
  3245  003FEC  D5F3               	goto	l25845
  3246  003FEE  0A01               	xorlw	1	; case 1
  3247  003FF0  B4D8               	btfsc	status,2,c
  3248  003FF2  D697               	goto	l25943
  3249  003FF4  0A03               	xorlw	3	; case 2
  3250  003FF6  A4D8               	btfss	status,2,c
  3251  003FF8  0012               	return	
  3252  003FFA  D69A               	goto	l25945
  3253  003FFC                     __end_of_sm_execute_main:
  3254                           	callstack 0
  3255                           
  3256 ;; *************** function _sm_execute_menuConfiguration *****************
  3257 ;; Defined at:
  3258 ;;		line 33 in file "sm_MenuConfiguration_MC50.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;  psm             2   17[BANK0 ] PTR struct .
  3261 ;;		 -> menuConfiguration_stateMachine(11), 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;		None
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  1    wreg      void 
  3266 ;; Registers used:
  3267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3268 ;; Tracked objects:
  3269 ;;		On entry : 3F/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3273 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3275 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3276 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3277 ;;Total ram usage:        4 bytes
  3278 ;; Hardware stack levels used: 1
  3279 ;; Hardware stack levels required when called: 15
  3280 ;; This function calls:
  3281 ;;		_ClearFlag_rfCMD
  3282 ;;		_ResetDefaultMemory
  3283 ;;		_SaveNVM_VarSystem
  3284 ;;		_SetSegmentValueIntermitentMain
  3285 ;;		_SetSegmentValueMain
  3286 ;;		___lbdiv
  3287 ;;		___lldiv
  3288 ;;		___lmul
  3289 ;;		___lwdiv
  3290 ;;		_controlLearnDigit
  3291 ;;		_controlSaveRemote
  3292 ;;		_controlSelectRemote
  3293 ;;		_load_New_Menu
  3294 ;;		_setValueToEdit
  3295 ;;		_sm_send_event
  3296 ;; This function is called by:
  3297 ;;		_sm_execute_main
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301                           	psect	text2
  3302  001908                     __ptext2:
  3303                           	callstack 0
  3304  001908                     _sm_execute_menuConfiguration:
  3305                           	callstack 14
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;sm_MenuConfiguration_MC50.c: 36:     switch((sm_state_Menu_t) psm->current_state)
  3309                           
  3310                           ;incstack = 0
  3311  001908  D0A2               	goto	l24257
  3312  00190A                     l24199:
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;sm_MenuConfiguration_MC50.c: 39:         {;sm_MenuConfiguration_MC50.c: 40:            
      +                           if(psm->last_event==ev_ParameterIsSelected)
  3316  00190A  EE20 F004          	lfsr	2,4
  3317  00190E  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3318  001910  26D9               	addwf	fsr2l,f,c
  3319  001912  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3320  001914  22DA               	addwfc	fsr2h,f,c
  3321  001916  04DE               	decf	postinc2,w,c
  3322  001918  10DE               	iorwf	postinc2,w,c
  3323  00191A  A4D8               	btfss	status,2,c
  3324  00191C  D006               	goto	l24203
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;sm_MenuConfiguration_MC50.c: 41:             {;sm_MenuConfiguration_MC50.c: 42:        
      +                                   psm->current_state = st_EditParameter;
  3328  00191E  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3329  001922  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3330  001926  0E01               	movlw	1
  3331  001928  D04C               	goto	L9
  3332  00192A                     l24203:
  3333                           
  3334                           ; BSR set to: 0
  3335  00192A  EE20 F004          	lfsr	2,4
  3336  00192E  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3337  001930  26D9               	addwf	fsr2l,f,c
  3338  001932  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3339  001934  22DA               	addwfc	fsr2h,f,c
  3340  001936  0E05               	movlw	5
  3341  001938  18DE               	xorwf	postinc2,w,c
  3342  00193A  10DE               	iorwf	postinc2,w,c
  3343  00193C  A4D8               	btfss	status,2,c
  3344  00193E  D006               	goto	l24207
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;sm_MenuConfiguration_MC50.c: 45:             {;sm_MenuConfiguration_MC50.c: 46:        
      +                                   psm->current_state = st_Counter;
  3348  001940  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3349  001944  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3350  001948  0E03               	movlw	3
  3351  00194A  D03B               	goto	L9
  3352  00194C                     l24207:
  3353                           
  3354                           ; BSR set to: 0
  3355  00194C  EE20 F004          	lfsr	2,4
  3356  001950  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3357  001952  26D9               	addwf	fsr2l,f,c
  3358  001954  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3359  001956  22DA               	addwfc	fsr2h,f,c
  3360  001958  0E08               	movlw	8
  3361  00195A  18DE               	xorwf	postinc2,w,c
  3362  00195C  10DE               	iorwf	postinc2,w,c
  3363  00195E  A4D8               	btfss	status,2,c
  3364  001960  D006               	goto	l24211
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;sm_MenuConfiguration_MC50.c: 49:             {;sm_MenuConfiguration_MC50.c: 50:        
      +                                   psm->current_state = st_SelectRemote;
  3368  001962  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3369  001966  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3370  00196A  0E04               	movlw	4
  3371  00196C  D02A               	goto	L9
  3372  00196E                     l24211:
  3373                           
  3374                           ; BSR set to: 0
  3375  00196E  EE20 F004          	lfsr	2,4
  3376  001972  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3377  001974  26D9               	addwf	fsr2l,f,c
  3378  001976  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3379  001978  22DA               	addwfc	fsr2h,f,c
  3380  00197A  0E14               	movlw	20
  3381  00197C  18DE               	xorwf	postinc2,w,c
  3382  00197E  10DE               	iorwf	postinc2,w,c
  3383  001980  A4D8               	btfss	status,2,c
  3384  001982  D087               	goto	l24259
  3385                           
  3386                           ; BSR set to: 0
  3387                           ;sm_MenuConfiguration_MC50.c: 53:             {;sm_MenuConfiguration_MC50.c: 55:        
      +                                   psm->current_state = st_LearningMode;
  3388  001984  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3389  001988  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3390  00198C  0E06               	movlw	6
  3391  00198E  D019               	goto	L9
  3392  001990                     l24215:
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;sm_MenuConfiguration_MC50.c: 65:         {;sm_MenuConfiguration_MC50.c: 66:            
      +                           if(psm->last_event==ev_ParameterIsEdited)
  3396  001990  EE20 F004          	lfsr	2,4
  3397  001994  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3398  001996  26D9               	addwf	fsr2l,f,c
  3399  001998  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3400  00199A  22DA               	addwfc	fsr2h,f,c
  3401  00199C  0E02               	movlw	2
  3402  00199E  18DE               	xorwf	postinc2,w,c
  3403  0019A0  10DE               	iorwf	postinc2,w,c
  3404  0019A2  A4D8               	btfss	status,2,c
  3405  0019A4  D006               	goto	l24219
  3406                           
  3407                           ; BSR set to: 0
  3408                           ;sm_MenuConfiguration_MC50.c: 67:             {;sm_MenuConfiguration_MC50.c: 68:        
      +                                   psm->current_state = st_SaveParameter;
  3409  0019A6  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3410  0019AA  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3411  0019AE  0E02               	movlw	2
  3412  0019B0  D008               	goto	L9
  3413  0019B2                     l24219:
  3414                           
  3415                           ; BSR set to: 0
  3416  0019B2  EE20 F004          	lfsr	2,4
  3417  0019B6  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3418  0019B8  26D9               	addwf	fsr2l,f,c
  3419  0019BA  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3420  0019BC  22DA               	addwfc	fsr2h,f,c
  3421  0019BE  0E03               	movlw	3
  3422  0019C0  D03B               	goto	L125
  3423  0019C2                     L9:
  3424  0019C2  6EDE               	movwf	postinc2,c
  3425  0019C4  0E00               	movlw	0
  3426  0019C6  6EDD               	movwf	postdec2,c
  3427  0019C8  D064               	goto	l24259
  3428  0019CA                     l24227:
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;sm_MenuConfiguration_MC50.c: 85:         {;sm_MenuConfiguration_MC50.c: 86:            
      +                           if(psm->last_event==ev_ParameterIsSaved)
  3432  0019CA  EE20 F004          	lfsr	2,4
  3433  0019CE  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3434  0019D0  26D9               	addwf	fsr2l,f,c
  3435  0019D2  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3436  0019D4  22DA               	addwfc	fsr2h,f,c
  3437  0019D6  0E04               	movlw	4
  3438  0019D8  18DE               	xorwf	postinc2,w,c
  3439  0019DA  10DE               	iorwf	postinc2,w,c
  3440  0019DC  A4D8               	btfss	status,2,c
  3441  0019DE  D7E9               	goto	l24219
  3442  0019E0  D02F               	goto	u29200
  3443  0019E2                     l24235:
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;sm_MenuConfiguration_MC50.c: 97:         {;sm_MenuConfiguration_MC50.c: 98:            
      +                           if(psm->last_event==ev_addRemotes)
  3447  0019E2  EE20 F004          	lfsr	2,4
  3448  0019E6  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3449  0019E8  26D9               	addwf	fsr2l,f,c
  3450  0019EA  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3451  0019EC  22DA               	addwfc	fsr2h,f,c
  3452  0019EE  0E08               	movlw	8
  3453  0019F0  18DE               	xorwf	postinc2,w,c
  3454  0019F2  10DE               	iorwf	postinc2,w,c
  3455  0019F4  A4D8               	btfss	status,2,c
  3456  0019F6  D7DD               	goto	l24219
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;sm_MenuConfiguration_MC50.c: 99:             {;sm_MenuConfiguration_MC50.c: 100:       
      +                                    psm->current_state = st_SaveRemotes;
  3460  0019F8  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3461  0019FC  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3462  001A00  0E05               	movlw	5
  3463  001A02  D7DF               	goto	L9
  3464  001A04                     l24243:
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;sm_MenuConfiguration_MC50.c: 109:         {;sm_MenuConfiguration_MC50.c: 110:          
      +                             if(psm->last_event==ev_NextRemote)
  3468  001A04  EE20 F004          	lfsr	2,4
  3469  001A08  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3470  001A0A  26D9               	addwf	fsr2l,f,c
  3471  001A0C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3472  001A0E  22DA               	addwfc	fsr2h,f,c
  3473  001A10  0E09               	movlw	9
  3474  001A12  18DE               	xorwf	postinc2,w,c
  3475  001A14  10DE               	iorwf	postinc2,w,c
  3476  001A16  A4D8               	btfss	status,2,c
  3477  001A18  D008               	goto	l24251
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;sm_MenuConfiguration_MC50.c: 111:             {;sm_MenuConfiguration_MC50.c: 112:      
      +                                     psm->current_state = st_SelectRemote;
  3481  001A1A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3482  001A1E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3483  001A22  0E04               	movlw	4
  3484  001A24  6EDE               	movwf	postinc2,c
  3485  001A26  0E00               	movlw	0
  3486  001A28  6EDD               	movwf	postdec2,c
  3487  001A2A                     l24251:
  3488                           
  3489                           ; BSR set to: 0
  3490                           ;sm_MenuConfiguration_MC50.c: 121:         {;sm_MenuConfiguration_MC50.c: 122:          
      +                             if(psm->last_event==ev_ParameterIsSaved)
  3491  001A2A  EE20 F004          	lfsr	2,4
  3492  001A2E  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3493  001A30  26D9               	addwf	fsr2l,f,c
  3494  001A32  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3495  001A34  22DA               	addwfc	fsr2h,f,c
  3496  001A36  0E04               	movlw	4
  3497  001A38                     L125:
  3498  001A38  18DE               	xorwf	postinc2,w,c
  3499  001A3A  10DE               	iorwf	postinc2,w,c
  3500  001A3C  A4D8               	btfss	status,2,c
  3501  001A3E  D029               	goto	l24259
  3502  001A40                     u29200:
  3503                           
  3504                           ; BSR set to: 0
  3505                           ;sm_MenuConfiguration_MC50.c: 123:             {;sm_MenuConfiguration_MC50.c: 124:      
      +                                     psm->current_state = st_MainMenu;
  3506  001A40  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3507  001A44  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3508  001A48  0E00               	movlw	0
  3509  001A4A  D7BB               	goto	L9
  3510  001A4C                     l3233:
  3511                           
  3512                           ; BSR set to: 0
  3513  001A4C  D7FF               	goto	l3233
  3514  001A4E                     l24257:
  3515                           
  3516                           ; BSR set to: 0
  3517  001A4E  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3518  001A52  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3519  001A56  50DF               	movf	indf2,w,c
  3520  001A58  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3521  001A5A  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  3522                           
  3523                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3524                           ; Switch size 1, requested type "simple"
  3525                           ; Number of cases is 1, Range of values is 0 to 0
  3526                           ; switch strategies available:
  3527                           ; Name         Instructions Cycles
  3528                           ; simple_byte            4     3 (average)
  3529                           ;	Chosen strategy is simple_byte
  3530  001A5C  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  3531  001A5E  0A00               	xorlw	0	; case 0
  3532  001A60  A4D8               	btfss	status,2,c
  3533  001A62  D7F4               	goto	l3233
  3534                           
  3535                           ; BSR set to: 0
  3536                           ; Switch size 1, requested type "simple"
  3537                           ; Number of cases is 7, Range of values is 0 to 6
  3538                           ; switch strategies available:
  3539                           ; Name         Instructions Cycles
  3540                           ; simple_byte           22    12 (average)
  3541                           ;	Chosen strategy is simple_byte
  3542  001A64  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3543  001A66  0A00               	xorlw	0	; case 0
  3544  001A68  B4D8               	btfsc	status,2,c
  3545  001A6A  D74F               	goto	l24199
  3546  001A6C  0A01               	xorlw	1	; case 1
  3547  001A6E  B4D8               	btfsc	status,2,c
  3548  001A70  D78F               	goto	l24215
  3549  001A72  0A03               	xorlw	3	; case 2
  3550  001A74  B4D8               	btfsc	status,2,c
  3551  001A76  D7D9               	goto	l24251
  3552  001A78  0A01               	xorlw	1	; case 3
  3553  001A7A  B4D8               	btfsc	status,2,c
  3554  001A7C  D7A6               	goto	l24227
  3555  001A7E  0A07               	xorlw	7	; case 4
  3556  001A80  B4D8               	btfsc	status,2,c
  3557  001A82  D7AF               	goto	l24235
  3558  001A84  0A01               	xorlw	1	; case 5
  3559  001A86  B4D8               	btfsc	status,2,c
  3560  001A88  D7BD               	goto	l24243
  3561  001A8A  0A03               	xorlw	3	; case 6
  3562  001A8C  B4D8               	btfsc	status,2,c
  3563  001A8E  D7CD               	goto	l24251
  3564  001A90  D7DD               	goto	l3233
  3565  001A92                     l24259:
  3566                           
  3567                           ; BSR set to: 0
  3568                           ;sm_MenuConfiguration_MC50.c: 137:     sm_send_event(&menuConfiguration_stateMachine, ev
      +                          _NULL);
  3569  001A92  0EBD               	movlw	low _menuConfiguration_stateMachine
  3570  001A94  6E12               	movwf	sm_send_event@psm^0,c
  3571  001A96  0E02               	movlw	high _menuConfiguration_stateMachine
  3572  001A98  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3573  001A9A  0E00               	movlw	0
  3574  001A9C  6E15               	movwf	(sm_send_event@event+1)^0,c
  3575  001A9E  0E00               	movlw	0
  3576  001AA0  6E14               	movwf	sm_send_event@event^0,c
  3577  001AA2  ECDC  F047         	call	_sm_send_event	;wreg free
  3578                           
  3579                           ;sm_MenuConfiguration_MC50.c: 142:     switch((sm_state_Menu_t) psm->current_state)
  3580  001AA6  D3C1               	goto	l24571
  3581  001AA8                     l24261:
  3582                           
  3583                           ; BSR set to: 0
  3584                           ;sm_MenuConfiguration_MC50.c: 145:         {;sm_MenuConfiguration_MC50.c: 146:          
      +                             if(var_sys.ProgrammingDistanceIs==TypeProgrammingModeFull)
  3585  001AA8  0E06               	movlw	6
  3586  001AAA  0101               	movlb	1	; () banked
  3587  001AAC  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3588  001AAE  A4D8               	btfss	status,2,c
  3589  001AB0  D02F               	goto	l24271
  3590                           
  3591                           ; BSR set to: 1
  3592                           ;sm_MenuConfiguration_MC50.c: 147:             {;sm_MenuConfiguration_MC50.c: 148:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3593  001AB2  0E00               	movlw	0
  3594  001AB4  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3595  001AB6  0EC8               	movlw	200
  3596  001AB8  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3597                           
  3598                           ;sm_MenuConfiguration_MC50.c: 149:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3599  001ABA  0E01               	movlw	1
  3600  001ABC  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3601                           
  3602                           ;sm_MenuConfiguration_MC50.c: 150:                 menu_st.parameterSelected=0;
  3603  001ABE  0E00               	movlw	0
  3604  001AC0  6F68               	movwf	(_menu_st+23)& (0+255),b
  3605                           
  3606                           ; BSR set to: 1
  3607                           ;sm_MenuConfiguration_MC50.c: 151:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3608  001AC2  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3609  001AC6  5166               	movf	(_menu_st+21)& (0+255),w,b
  3610  001AC8  ECDC  F01A         	call	_setValueToEdit
  3611  001ACC  0900               	iorlw	0
  3612  001ACE  B4D8               	btfsc	status,2,c
  3613  001AD0  0012               	return	
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;sm_MenuConfiguration_MC50.c: 153:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3617  001AD2  0EBD               	movlw	low _menuConfiguration_stateMachine
  3618  001AD4  6E12               	movwf	sm_send_event@psm^0,c
  3619  001AD6  0E02               	movlw	high _menuConfiguration_stateMachine
  3620  001AD8  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3621  001ADA  0E00               	movlw	0
  3622  001ADC  6E15               	movwf	(sm_send_event@event+1)^0,c
  3623  001ADE  0E08               	movlw	8
  3624  001AE0  6E14               	movwf	sm_send_event@event^0,c
  3625  001AE2  ECDC  F047         	call	_sm_send_event	;wreg free
  3626                           
  3627                           ;sm_MenuConfiguration_MC50.c: 154:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3628  001AE6  0E0A               	movlw	10
  3629  001AE8  6E10               	movwf	___lbdiv@divisor^0,c
  3630  001AEA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3631  001AEC  ECCD  F04B         	call	___lbdiv
  3632  001AF0  0DF6               	mullw	246
  3633  001AF2  50F3               	movf	243,w,c
  3634  001AF4  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3635  001AF6  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3636  001AF8  0E00               	movlw	0
  3637  001AFA  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3638  001AFC  0E14               	movlw	20
  3639  001AFE  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3640  001B00  0E0A               	movlw	10
  3641  001B02  6E10               	movwf	___lbdiv@divisor^0,c
  3642  001B04  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3643  001B06  ECCD  F04B         	call	___lbdiv
  3644  001B0A  EC76  F04F         	call	_SetSegmentValueIntermitentMain
  3645  001B0E  0012               	return	
  3646  001B10                     l24271:
  3647                           
  3648                           ; BSR set to: 1
  3649  001B10  0E05               	movlw	5
  3650  001B12  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3651  001B14  A4D8               	btfss	status,2,c
  3652  001B16  D02F               	goto	l24281
  3653                           
  3654                           ; BSR set to: 1
  3655                           ;sm_MenuConfiguration_MC50.c: 158:             {;sm_MenuConfiguration_MC50.c: 159:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3656  001B18  0E00               	movlw	0
  3657  001B1A  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3658  001B1C  0EC8               	movlw	200
  3659  001B1E  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3660                           
  3661                           ;sm_MenuConfiguration_MC50.c: 160:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3662  001B20  0E01               	movlw	1
  3663  001B22  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3664                           
  3665                           ;sm_MenuConfiguration_MC50.c: 161:                 menu_st.parameterSelected=1;
  3666  001B24  0E01               	movlw	1
  3667  001B26  6F68               	movwf	(_menu_st+23)& (0+255),b
  3668                           
  3669                           ; BSR set to: 1
  3670                           ;sm_MenuConfiguration_MC50.c: 162:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3671  001B28  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3672  001B2C  5166               	movf	(_menu_st+21)& (0+255),w,b
  3673  001B2E  ECDC  F01A         	call	_setValueToEdit
  3674  001B32  0900               	iorlw	0
  3675  001B34  B4D8               	btfsc	status,2,c
  3676  001B36  0012               	return	
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;sm_MenuConfiguration_MC50.c: 164:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3680  001B38  0EBD               	movlw	low _menuConfiguration_stateMachine
  3681  001B3A  6E12               	movwf	sm_send_event@psm^0,c
  3682  001B3C  0E02               	movlw	high _menuConfiguration_stateMachine
  3683  001B3E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3684  001B40  0E00               	movlw	0
  3685  001B42  6E15               	movwf	(sm_send_event@event+1)^0,c
  3686  001B44  0E08               	movlw	8
  3687  001B46  6E14               	movwf	sm_send_event@event^0,c
  3688  001B48  ECDC  F047         	call	_sm_send_event	;wreg free
  3689                           
  3690                           ;sm_MenuConfiguration_MC50.c: 165:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3691  001B4C  0E0A               	movlw	10
  3692  001B4E  6E10               	movwf	___lbdiv@divisor^0,c
  3693  001B50  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3694  001B52  ECCD  F04B         	call	___lbdiv
  3695  001B56  0DF6               	mullw	246
  3696  001B58  50F3               	movf	243,w,c
  3697  001B5A  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3698  001B5C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3699  001B5E  0E00               	movlw	0
  3700  001B60  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3701  001B62  0E14               	movlw	20
  3702  001B64  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3703  001B66  0E0A               	movlw	10
  3704  001B68  6E10               	movwf	___lbdiv@divisor^0,c
  3705  001B6A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3706  001B6C  ECCD  F04B         	call	___lbdiv
  3707  001B70  EC76  F04F         	call	_SetSegmentValueIntermitentMain
  3708                           
  3709                           ; BSR set to: 1
  3710                           ;sm_MenuConfiguration_MC50.c: 167:             }
  3711                           
  3712                           ;sm_MenuConfiguration_MC50.c: 166:                 }
  3713  001B74  0012               	return	
  3714  001B76                     l24281:
  3715                           
  3716                           ; BSR set to: 1
  3717  001B76  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3718  001B78  A4D8               	btfss	status,2,c
  3719  001B7A  D023               	goto	l24293
  3720                           
  3721                           ; BSR set to: 1
  3722                           ;sm_MenuConfiguration_MC50.c: 169:             {;sm_MenuConfiguration_MC50.c: 170:      
      +                                     ts_system.timeoutMenu= ((1000/50)*5) ;
  3723  001B7C  0E00               	movlw	0
  3724  001B7E  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3725  001B80  0E64               	movlw	100
  3726  001B82  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3727                           
  3728                           ;sm_MenuConfiguration_MC50.c: 171:                 if(menu_st.parameterSelected==0)
  3729  001B84  5168               	movf	(_menu_st+23)& (0+255),w,b
  3730  001B86  A4D8               	btfss	status,2,c
  3731  001B88  D003               	goto	l24287
  3732                           
  3733                           ; BSR set to: 1
  3734                           ;sm_MenuConfiguration_MC50.c: 172:                 {;sm_MenuConfiguration_MC50.c: 173:  
      +                                             menu_st.parameterSelected=menu_st.menuSize-1;
  3735  001B8A  0567               	decf	(_menu_st+22)& (0+255),w,b
  3736  001B8C  6F68               	movwf	(_menu_st+23)& (0+255),b
  3737                           
  3738                           ;sm_MenuConfiguration_MC50.c: 174:                 }
  3739  001B8E  D001               	goto	l24289
  3740  001B90                     l24287:
  3741                           
  3742                           ; BSR set to: 1
  3743                           ;sm_MenuConfiguration_MC50.c: 176:                 {;sm_MenuConfiguration_MC50.c: 177:  
      +                                             menu_st.parameterSelected--;
  3744  001B90  0768               	decf	(_menu_st+23)& (0+255),f,b
  3745  001B92                     l24289:
  3746                           
  3747                           ; BSR set to: 1
  3748                           ;sm_MenuConfiguration_MC50.c: 179:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3749  001B92  5168               	movf	(_menu_st+23)& (0+255),w,b
  3750  001B94  0D02               	mullw	2
  3751  001B96  0E52               	movlw	low (_menu_st+1)
  3752  001B98  24F3               	addwf	243,w,c
  3753  001B9A  6ED9               	movwf	fsr2l,c
  3754  001B9C  0E01               	movlw	high (_menu_st+1)
  3755  001B9E  20F4               	addwfc	prodh,w,c
  3756  001BA0  6EDA               	movwf	fsr2h,c
  3757  001BA2  50DF               	movf	indf2,w,c
  3758  001BA4  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3759  001BA6  5168               	movf	(_menu_st+23)& (0+255),w,b
  3760  001BA8  0D02               	mullw	2
  3761  001BAA  0E51               	movlw	low _menu_st
  3762  001BAC  24F3               	addwf	243,w,c
  3763  001BAE  6ED9               	movwf	fsr2l,c
  3764  001BB0  0E01               	movlw	high _menu_st
  3765  001BB2  20F4               	addwfc	prodh,w,c
  3766  001BB4  6EDA               	movwf	fsr2h,c
  3767  001BB6  50DF               	movf	indf2,w,c
  3768  001BB8  ECDA  F04E         	call	_SetSegmentValueMain
  3769  001BBC                     l24291:
  3770                           
  3771                           ;sm_MenuConfiguration_MC50.c: 180:                 button_struct.processed=1;
  3772  001BBC  0E01               	movlw	1
  3773  001BBE  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3774                           
  3775                           ;sm_MenuConfiguration_MC50.c: 181:             }
  3776  001BC0  0012               	return	
  3777  001BC2                     l24293:
  3778                           
  3779                           ; BSR set to: 1
  3780  001BC2  0E17               	movlw	23
  3781  001BC4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3782  001BC6  A4D8               	btfss	status,2,c
  3783  001BC8  D021               	goto	l24307
  3784                           
  3785                           ; BSR set to: 1
  3786                           ;sm_MenuConfiguration_MC50.c: 183:             {;sm_MenuConfiguration_MC50.c: 184:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  3787  001BCA  0E00               	movlw	0
  3788  001BCC  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3789  001BCE  0E64               	movlw	100
  3790  001BD0  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3791                           
  3792                           ; BSR set to: 1
  3793                           ;sm_MenuConfiguration_MC50.c: 185:                 menu_st.parameterSelected++;
  3794  001BD2  2B68               	incf	(_menu_st+23)& (0+255),f,b
  3795                           
  3796                           ; BSR set to: 1
  3797                           ;sm_MenuConfiguration_MC50.c: 186:                 if(menu_st.parameterSelected>=menu_st
      +                          .menuSize)
  3798  001BD4  5167               	movf	(_menu_st+22)& (0+255),w,b
  3799  001BD6  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  3800  001BD8  A0D8               	btfss	status,0,c
  3801  001BDA  D002               	goto	l24303
  3802                           
  3803                           ; BSR set to: 1
  3804                           ;sm_MenuConfiguration_MC50.c: 187:                 {;sm_MenuConfiguration_MC50.c: 188:  
      +                                             menu_st.parameterSelected=0;
  3805  001BDC  0E00               	movlw	0
  3806  001BDE  6F68               	movwf	(_menu_st+23)& (0+255),b
  3807  001BE0                     l24303:
  3808                           
  3809                           ; BSR set to: 1
  3810                           ;sm_MenuConfiguration_MC50.c: 190:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3811  001BE0  5168               	movf	(_menu_st+23)& (0+255),w,b
  3812  001BE2  0D02               	mullw	2
  3813  001BE4  0E52               	movlw	low (_menu_st+1)
  3814  001BE6  24F3               	addwf	243,w,c
  3815  001BE8  6ED9               	movwf	fsr2l,c
  3816  001BEA  0E01               	movlw	high (_menu_st+1)
  3817  001BEC  20F4               	addwfc	prodh,w,c
  3818  001BEE  6EDA               	movwf	fsr2h,c
  3819  001BF0  50DF               	movf	indf2,w,c
  3820  001BF2  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3821  001BF4  5168               	movf	(_menu_st+23)& (0+255),w,b
  3822  001BF6  0D02               	mullw	2
  3823  001BF8  0E51               	movlw	low _menu_st
  3824  001BFA  24F3               	addwf	243,w,c
  3825  001BFC  6ED9               	movwf	fsr2l,c
  3826  001BFE  0E01               	movlw	high _menu_st
  3827  001C00  20F4               	addwfc	prodh,w,c
  3828  001C02  6EDA               	movwf	fsr2h,c
  3829  001C04  50DF               	movf	indf2,w,c
  3830  001C06  ECDA  F04E         	call	_SetSegmentValueMain
  3831  001C0A  D7D8               	goto	l24291
  3832  001C0C                     l24307:
  3833                           
  3834                           ; BSR set to: 1
  3835  001C0C  0E0C               	movlw	12
  3836  001C0E  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3837  001C10  D09B               	goto	l24363
  3838                           
  3839                           ; BSR set to: 1
  3840                           ;sm_MenuConfiguration_MC50.c: 194:             {;sm_MenuConfiguration_MC50.c: 195:      
      +                                     if (button_struct.current==0x27 && button_struct.timer>(( 500/50)) )
  3841  001C12  0E27               	movlw	39
  3842  001C14  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3843  001C16  A4D8               	btfss	status,2,c
  3844  001C18  D053               	goto	l24329
  3845                           
  3846                           ; BSR set to: 1
  3847  001C1A  0E0A               	movlw	10
  3848  001C1C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  3849  001C1E  D050               	goto	l24329
  3850                           
  3851                           ; BSR set to: 1
  3852                           ;sm_MenuConfiguration_MC50.c: 196:                 {;sm_MenuConfiguration_MC50.c: 197:  
      +                                             ts_system.timeoutMenu=((1000/50)*5) ;
  3853  001C20  0E00               	movlw	0
  3854  001C22  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3855  001C24  0E64               	movlw	100
  3856  001C26  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3857                           
  3858                           ; BSR set to: 1
  3859                           ;sm_MenuConfiguration_MC50.c: 199:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  3860  001C28  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3861  001C2C  5166               	movf	(_menu_st+21)& (0+255),w,b
  3862  001C2E  ECDC  F01A         	call	_setValueToEdit
  3863  001C32  0900               	iorlw	0
  3864  001C34  B4D8               	btfsc	status,2,c
  3865  001C36  D7C2               	goto	l24291
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;sm_MenuConfiguration_MC50.c: 200:                     {;sm_MenuConfiguration_MC50.c: 20
      +                          2:                          sm_send_event(&menuConfiguration_stateMachine, ev_ParameterI
      +                          sSelected);
  3869  001C38  0EBD               	movlw	low _menuConfiguration_stateMachine
  3870  001C3A  6E12               	movwf	sm_send_event@psm^0,c
  3871  001C3C  0E02               	movlw	high _menuConfiguration_stateMachine
  3872  001C3E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3873  001C40  0E00               	movlw	0
  3874  001C42  6E15               	movwf	(sm_send_event@event+1)^0,c
  3875  001C44  0E01               	movlw	1
  3876  001C46  6E14               	movwf	sm_send_event@event^0,c
  3877  001C48  ECDC  F047         	call	_sm_send_event	;wreg free
  3878                           
  3879                           ;sm_MenuConfiguration_MC50.c: 203:                          if((edit_Param.Value==(unsig
      +                          ned char*)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Dir
      +                          ection_motor)){
  3880  001C4C  0E98               	movlw	_var_sys_NVM& (0+255)
  3881  001C4E  0F1C               	addlw	28
  3882  001C50  0100               	movlb	0	; () banked
  3883  001C52  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3884  001C54  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3885  001C56  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3886  001C58  E101               	bnz	u29335
  3887  001C5A  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3888  001C5C                     u29335:
  3889  001C5C  B4D8               	btfsc	status,2,c
  3890  001C5E  D009               	goto	u29340
  3891                           
  3892                           ; BSR set to: 0
  3893  001C60  0E98               	movlw	_var_sys_NVM& (0+255)
  3894  001C62  0F1B               	addlw	27
  3895  001C64  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3896  001C66  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3897  001C68  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3898  001C6A  E101               	bnz	u29345
  3899  001C6C  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3900  001C6E                     u29345:
  3901  001C6E  A4D8               	btfss	status,2,c
  3902  001C70  D016               	goto	l24325
  3903  001C72                     u29340:
  3904                           
  3905                           ; BSR set to: 0
  3906                           ;sm_MenuConfiguration_MC50.c: 204:                            SetSegmentValueMain(menu_s
      +                          t.menuList[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].
      +                          value_display2);
  3907  001C72  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3908  001C74  0D02               	mullw	2
  3909  001C76  0E52               	movlw	low (_menu_st+1)
  3910  001C78  24F3               	addwf	243,w,c
  3911  001C7A  6ED9               	movwf	fsr2l,c
  3912  001C7C  0E01               	movlw	high (_menu_st+1)
  3913  001C7E  20F4               	addwfc	prodh,w,c
  3914  001C80  6EDA               	movwf	fsr2h,c
  3915  001C82  50DF               	movf	indf2,w,c
  3916  001C84  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3917  001C86  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3918  001C88  0D02               	mullw	2
  3919  001C8A  0E51               	movlw	low _menu_st
  3920  001C8C  24F3               	addwf	243,w,c
  3921  001C8E  6ED9               	movwf	fsr2l,c
  3922  001C90  0E01               	movlw	high _menu_st
  3923  001C92  20F4               	addwfc	prodh,w,c
  3924  001C94  6EDA               	movwf	fsr2h,c
  3925  001C96  50DF               	movf	indf2,w,c
  3926  001C98  ECDA  F04E         	call	_SetSegmentValueMain
  3927                           
  3928                           ;sm_MenuConfiguration_MC50.c: 206:                          }
  3929  001C9C  D78F               	goto	l24291
  3930  001C9E                     l24325:
  3931                           
  3932                           ; BSR set to: 0
  3933                           ;sm_MenuConfiguration_MC50.c: 208:                          SetSegmentValueMain(edit_Par
      +                          am.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  3934  001C9E  0E0A               	movlw	10
  3935  001CA0  6E10               	movwf	___lbdiv@divisor^0,c
  3936  001CA2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3937  001CA4  ECCD  F04B         	call	___lbdiv
  3938  001CA8  0DF6               	mullw	246
  3939  001CAA  50F3               	movf	243,w,c
  3940  001CAC  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3941  001CAE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3942  001CB0  0E0A               	movlw	10
  3943  001CB2  6E10               	movwf	___lbdiv@divisor^0,c
  3944  001CB4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3945  001CB6  ECCD  F04B         	call	___lbdiv
  3946  001CBA  ECDA  F04E         	call	_SetSegmentValueMain
  3947  001CBE  D77E               	goto	l24291
  3948  001CC0                     l24329:
  3949                           
  3950                           ; BSR set to: 1
  3951  001CC0  BFAD               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3952  001CC2  D008               	goto	u29360
  3953  001CC4  51AD               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3954  001CC6  E103               	bnz	u29350
  3955  001CC8  05AC               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3956  001CCA  A0D8               	btfss	status,0,c
  3957  001CCC  D003               	goto	u29360
  3958  001CCE                     u29350:
  3959                           
  3960                           ; BSR set to: 1
  3961  001CCE  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3962  001CD0  A4D8               	btfss	status,2,c
  3963  001CD2  D01E               	goto	l24347
  3964  001CD4                     u29360:
  3965                           
  3966                           ; BSR set to: 1
  3967  001CD4  0E02               	movlw	2
  3968  001CD6  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3969  001CD8  D01B               	goto	l24347
  3970                           
  3971                           ; BSR set to: 1
  3972                           ;sm_MenuConfiguration_MC50.c: 216:                 {;sm_MenuConfiguration_MC50.c: 217:  
      +                                             ts_system.timeoutMenu=0;
  3973  001CDA  0E00               	movlw	0
  3974  001CDC  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3975  001CDE  0E00               	movlw	0
  3976  001CE0  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3977                           
  3978                           ; BSR set to: 1
  3979                           ;sm_MenuConfiguration_MC50.c: 218:                     sm_send_event(&main_stateMachine,
      +                           ev_goto_StandBy);
  3980  001CE2  0EF1               	movlw	low _main_stateMachine
  3981  001CE4  6E12               	movwf	sm_send_event@psm^0,c
  3982  001CE6  0E01               	movlw	high _main_stateMachine
  3983  001CE8  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3984  001CEA  0E00               	movlw	0
  3985  001CEC  6E15               	movwf	(sm_send_event@event+1)^0,c
  3986  001CEE  0E07               	movlw	7
  3987  001CF0  6E14               	movwf	sm_send_event@event^0,c
  3988  001CF2  ECDC  F047         	call	_sm_send_event	;wreg free
  3989                           
  3990                           ;sm_MenuConfiguration_MC50.c: 219:                     SetSegmentValueMain(dMinus,dMinus
      +                          );
  3991  001CF6  0E18               	movlw	24
  3992  001CF8  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3993  001CFA  0E18               	movlw	24
  3994  001CFC  ECDA  F04E         	call	_SetSegmentValueMain
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;sm_MenuConfiguration_MC50.c: 220:                     menu_st.lastMainParameterSelected
      +                           = 0;
  3998  001D00  0E00               	movlw	0
  3999  001D02  0101               	movlb	1	; () banked
  4000  001D04  6F69               	movwf	(_menu_st+24)& (0+255),b
  4001                           
  4002                           ; BSR set to: 1
  4003                           ;sm_MenuConfiguration_MC50.c: 221:                     button_struct.processed=1;
  4004  001D06  0E01               	movlw	1
  4005  001D08  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4006                           
  4007                           ; BSR set to: 1
  4008                           ;sm_MenuConfiguration_MC50.c: 222:                     ClearFlag_rfCMD();
  4009  001D0A  EC2E  F050         	call	_ClearFlag_rfCMD	;wreg free
  4010                           
  4011                           ;sm_MenuConfiguration_MC50.c: 224:                 }
  4012  001D0E  0012               	return	
  4013  001D10                     l24347:
  4014                           
  4015                           ; BSR set to: 1
  4016  001D10  BFAD               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4017  001D12  D008               	goto	u29390
  4018  001D14  51AD               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4019  001D16  E103               	bnz	u29380
  4020  001D18  05AC               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4021  001D1A  A0D8               	btfss	status,0,c
  4022  001D1C  D003               	goto	u29390
  4023  001D1E                     u29380:
  4024                           
  4025                           ; BSR set to: 1
  4026  001D1E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4027  001D20  A4D8               	btfss	status,2,c
  4028  001D22  D004               	goto	l24355
  4029  001D24                     u29390:
  4030                           
  4031                           ; BSR set to: 1
  4032                           ;sm_MenuConfiguration_MC50.c: 226:                 {;sm_MenuConfiguration_MC50.c: 228:  
      +                                             load_New_Menu(menu_st.lastMenu);
  4033  001D24  5165               	movf	(_menu_st+20)& (0+255),w,b
  4034  001D26  EC27  F025         	call	_load_New_Menu
  4035  001D2A  D748               	goto	l24291
  4036  001D2C                     l24355:
  4037                           
  4038                           ; BSR set to: 1
  4039  001D2C  BFAD               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4040  001D2E  D005               	goto	u29400
  4041  001D30  51AD               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4042  001D32  E102               	bnz	u29401
  4043  001D34  05AC               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4044  001D36  B0D8               	btfsc	status,0,c
  4045  001D38                     u29401:
  4046  001D38  0012               	return	
  4047  001D3A                     u29400:
  4048                           
  4049                           ; BSR set to: 1
  4050  001D3A  0E01               	movlw	1
  4051  001D3C  6566               	cpfsgt	(_menu_st+21)& (0+255),b
  4052  001D3E  0012               	return	
  4053                           
  4054                           ; BSR set to: 1
  4055                           ;sm_MenuConfiguration_MC50.c: 232:                 {;sm_MenuConfiguration_MC50.c: 234:  
      +                                             load_New_Menu(menu_st.lastMenu);
  4056  001D40  5165               	movf	(_menu_st+20)& (0+255),w,b
  4057  001D42  EC27  F025         	call	_load_New_Menu
  4058  001D46  D73A               	goto	l24291
  4059  001D48                     l24363:
  4060                           
  4061                           ; BSR set to: 1
  4062  001D48  0E07               	movlw	7
  4063  001D4A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4064  001D4C  A4D8               	btfss	status,2,c
  4065  001D4E  D032               	goto	l24379
  4066                           
  4067                           ; BSR set to: 1
  4068  001D50  0E0A               	movlw	10
  4069  001D52  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4070  001D54  D02F               	goto	l24379
  4071                           
  4072                           ; BSR set to: 1
  4073  001D56  0E0D               	movlw	13
  4074  001D58  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4075  001D5A  B4D8               	btfsc	status,2,c
  4076  001D5C  D02B               	goto	l24379
  4077                           
  4078                           ; BSR set to: 1
  4079                           ;sm_MenuConfiguration_MC50.c: 239:             {;sm_MenuConfiguration_MC50.c: 240:      
      +                                         ts_system.timeoutMenu=((1000/50)*5);
  4080  001D5E  0E00               	movlw	0
  4081  001D60  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4082  001D62  0E64               	movlw	100
  4083  001D64  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4084                           
  4085                           ; BSR set to: 1
  4086                           ;sm_MenuConfiguration_MC50.c: 241:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  4087  001D66  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  4088  001D6A  5166               	movf	(_menu_st+21)& (0+255),w,b
  4089  001D6C  ECDC  F01A         	call	_setValueToEdit
  4090  001D70  0900               	iorlw	0
  4091  001D72  B4D8               	btfsc	status,2,c
  4092  001D74  D723               	goto	l24291
  4093                           
  4094                           ; BSR set to: 0
  4095                           ;sm_MenuConfiguration_MC50.c: 243:                     {;sm_MenuConfiguration_MC50.c: 24
      +                          4:                         sm_send_event(&menuConfiguration_stateMachine, ev_addRemotes)
      +                          ;
  4096  001D76  0EBD               	movlw	low _menuConfiguration_stateMachine
  4097  001D78  6E12               	movwf	sm_send_event@psm^0,c
  4098  001D7A  0E02               	movlw	high _menuConfiguration_stateMachine
  4099  001D7C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4100  001D7E  0E00               	movlw	0
  4101  001D80  6E15               	movwf	(sm_send_event@event+1)^0,c
  4102  001D82  0E08               	movlw	8
  4103  001D84  6E14               	movwf	sm_send_event@event^0,c
  4104  001D86  ECDC  F047         	call	_sm_send_event	;wreg free
  4105                           
  4106                           ;sm_MenuConfiguration_MC50.c: 245:                         SetSegmentValueIntermitentMai
      +                          n(edit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50)
      +                          );
  4107  001D8A  0E0A               	movlw	10
  4108  001D8C  6E10               	movwf	___lbdiv@divisor^0,c
  4109  001D8E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4110  001D90  ECCD  F04B         	call	___lbdiv
  4111  001D94  0DF6               	mullw	246
  4112  001D96  50F3               	movf	243,w,c
  4113  001D98  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4114  001D9A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4115  001D9C  0E00               	movlw	0
  4116  001D9E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4117  001DA0  0E14               	movlw	20
  4118  001DA2  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4119  001DA4  0E0A               	movlw	10
  4120  001DA6  6E10               	movwf	___lbdiv@divisor^0,c
  4121  001DA8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4122  001DAA  ECCD  F04B         	call	___lbdiv
  4123  001DAE  EC76  F04F         	call	_SetSegmentValueIntermitentMain
  4124  001DB2  D704               	goto	l24291
  4125  001DB4                     l24379:
  4126                           
  4127                           ; BSR set to: 1
  4128  001DB4  0E0D               	movlw	13
  4129  001DB6  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4130  001DB8  A4D8               	btfss	status,2,c
  4131  001DBA  D027               	goto	l24397
  4132                           
  4133                           ; BSR set to: 1
  4134  001DBC  51AA               	movf	(_ts_system+12)& (0+255),w,b	;volatile
  4135  001DBE  11AB               	iorwf	(_ts_system+13)& (0+255),w,b	;volatile
  4136  001DC0  A4D8               	btfss	status,2,c
  4137  001DC2  D023               	goto	l24397
  4138                           
  4139                           ; BSR set to: 1
  4140                           ;sm_MenuConfiguration_MC50.c: 250:             {;sm_MenuConfiguration_MC50.c: 251:      
      +                                     var_sys_NVM.positionRemotesFull=0;
  4141  001DC4  0E00               	movlw	0
  4142  001DC6  0100               	movlb	0	; () banked
  4143  001DC8  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
  4144                           
  4145                           ;sm_MenuConfiguration_MC50.c: 252:                 var_sys_NVM.positionRemotesWalk=0;
  4146  001DCA  0E00               	movlw	0
  4147  001DCC  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
  4148                           
  4149                           ;sm_MenuConfiguration_MC50.c: 253:                 var_sys_NVM.OnlyRollingCode=NO;
  4150  001DCE  0E00               	movlw	0
  4151  001DD0  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;sm_MenuConfiguration_MC50.c: 254:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4155  001DD2  0E02               	movlw	2
  4156  001DD4  ECEA  F04B         	call	_SaveNVM_VarSystem
  4157                           
  4158                           ;sm_MenuConfiguration_MC50.c: 255:                 sm_send_event(&main_stateMachine, ev_
      +                          goto_StandBy);
  4159  001DD8  0EF1               	movlw	low _main_stateMachine
  4160  001DDA  6E12               	movwf	sm_send_event@psm^0,c
  4161  001DDC  0E01               	movlw	high _main_stateMachine
  4162  001DDE  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4163  001DE0  0E00               	movlw	0
  4164  001DE2  6E15               	movwf	(sm_send_event@event+1)^0,c
  4165  001DE4  0E07               	movlw	7
  4166  001DE6  6E14               	movwf	sm_send_event@event^0,c
  4167  001DE8  ECDC  F047         	call	_sm_send_event	;wreg free
  4168                           
  4169                           ;sm_MenuConfiguration_MC50.c: 256:                 SetSegmentValueMain(dMinus,dMinus);
  4170  001DEC  0E18               	movlw	24
  4171  001DEE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4172  001DF0  0E18               	movlw	24
  4173  001DF2  ECDA  F04E         	call	_SetSegmentValueMain
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;sm_MenuConfiguration_MC50.c: 257:                 button_struct.processed=1;
  4177  001DF6  0E01               	movlw	1
  4178  001DF8  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4179  001DFA                     l24393:
  4180                           
  4181                           ;sm_MenuConfiguration_MC50.c: 258:                 ClearFlag_rfCMD();
  4182  001DFA  EC2E  F050         	call	_ClearFlag_rfCMD	;wreg free
  4183  001DFE                     l24395:
  4184                           
  4185                           ;sm_MenuConfiguration_MC50.c: 259:                  ts_system.timeoutMenu=0;
  4186  001DFE  0E00               	movlw	0
  4187  001E00  0101               	movlb	1	; () banked
  4188  001E02  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4189  001E04  0E00               	movlw	0
  4190  001E06  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4191                           
  4192                           ;sm_MenuConfiguration_MC50.c: 260:             }
  4193  001E08  0012               	return	
  4194  001E0A                     l24397:
  4195                           
  4196                           ; BSR set to: 1
  4197  001E0A  BFAD               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4198  001E0C  D008               	goto	u29490
  4199  001E0E  51AD               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4200  001E10  E103               	bnz	u29480
  4201  001E12  05AC               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4202  001E14  A0D8               	btfss	status,0,c
  4203  001E16  D003               	goto	u29490
  4204  001E18                     u29480:
  4205                           
  4206                           ; BSR set to: 1
  4207  001E18  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4208  001E1A  A4D8               	btfss	status,2,c
  4209  001E1C  0012               	return	
  4210  001E1E                     u29490:
  4211                           
  4212                           ; BSR set to: 1
  4213                           ;sm_MenuConfiguration_MC50.c: 262:             {;sm_MenuConfiguration_MC50.c: 263:      
      +                                      sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4214  001E1E  0EF1               	movlw	low _main_stateMachine
  4215  001E20  6E12               	movwf	sm_send_event@psm^0,c
  4216  001E22  0E01               	movlw	high _main_stateMachine
  4217  001E24  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4218  001E26  0E00               	movlw	0
  4219  001E28  6E15               	movwf	(sm_send_event@event+1)^0,c
  4220  001E2A  0E07               	movlw	7
  4221  001E2C  6E14               	movwf	sm_send_event@event^0,c
  4222  001E2E  ECDC  F047         	call	_sm_send_event	;wreg free
  4223                           
  4224                           ;sm_MenuConfiguration_MC50.c: 264:                  SetSegmentValueMain(dMinus,dMinus);
  4225  001E32  0E18               	movlw	24
  4226  001E34  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4227  001E36  0E18               	movlw	24
  4228  001E38  ECDA  F04E         	call	_SetSegmentValueMain
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;sm_MenuConfiguration_MC50.c: 265:                  ClearFlag_rfCMD();
  4232  001E3C  EC2E  F050         	call	_ClearFlag_rfCMD	;wreg free
  4233                           
  4234                           ;sm_MenuConfiguration_MC50.c: 266:                  button_struct.processed=1;
  4235  001E40  0E01               	movlw	1
  4236  001E42  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4237  001E44  D7DC               	goto	l24395
  4238  001E46                     l24411:
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;sm_MenuConfiguration_MC50.c: 272:         {;sm_MenuConfiguration_MC50.c: 273:          
      +                             if (button_struct.current==0x00)
  4242  001E46  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4243  001E48  A4D8               	btfss	status,2,c
  4244  001E4A  D047               	goto	l24431
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;sm_MenuConfiguration_MC50.c: 274:             {;sm_MenuConfiguration_MC50.c: 275:      
      +                                     ts_system.timeoutMenu=((1000/50)*5);
  4248  001E4C  0E00               	movlw	0
  4249  001E4E  0101               	movlb	1	; () banked
  4250  001E50  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4251  001E52  0E64               	movlw	100
  4252  001E54  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4253                           
  4254                           ; BSR set to: 1
  4255                           ;sm_MenuConfiguration_MC50.c: 276:                 if(edit_Param.tempValue<=edit_Param.M
      +                          in)
  4256  001E56  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4257  001E58  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  4258  001E5A  A0D8               	btfss	status,0,c
  4259  001E5C  D003               	goto	l24419
  4260                           
  4261                           ; BSR set to: 1
  4262                           ;sm_MenuConfiguration_MC50.c: 277:                 {;sm_MenuConfiguration_MC50.c: 278:  
      +                                             edit_Param.tempValue=edit_Param.Max;
  4263  001E5E  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  4264                           
  4265                           ;sm_MenuConfiguration_MC50.c: 279:                 }
  4266  001E62  D001               	goto	l24421
  4267  001E64                     l24419:
  4268                           
  4269                           ; BSR set to: 1
  4270                           ;sm_MenuConfiguration_MC50.c: 281:                 {;sm_MenuConfiguration_MC50.c: 282:  
      +                                             edit_Param.tempValue--;
  4271  001E64  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  4272  001E66                     l24421:
  4273                           
  4274                           ; BSR set to: 1
  4275                           ;sm_MenuConfiguration_MC50.c: 284:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4276  001E66  0E98               	movlw	_var_sys_NVM& (0+255)
  4277  001E68  0F1C               	addlw	28
  4278  001E6A  0100               	movlb	0	; () banked
  4279  001E6C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4280  001E6E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4281  001E70  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4282  001E72  E101               	bnz	u29525
  4283  001E74  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4284  001E76                     u29525:
  4285  001E76  B4D8               	btfsc	status,2,c
  4286  001E78  D009               	goto	u29530
  4287                           
  4288                           ; BSR set to: 0
  4289  001E7A  0E98               	movlw	_var_sys_NVM& (0+255)
  4290  001E7C  0F1B               	addlw	27
  4291  001E7E  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4292  001E80  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4293  001E82  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4294  001E84  E101               	bnz	u29535
  4295  001E86  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4296  001E88                     u29535:
  4297  001E88  A4D8               	btfss	status,2,c
  4298  001E8A  D016               	goto	l24427
  4299  001E8C                     u29530:
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;sm_MenuConfiguration_MC50.c: 285:                 SetSegmentValueMain(menu_st.menuList[
      +                          edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_displ
      +                          ay2);
  4303  001E8C  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4304  001E8E  0D02               	mullw	2
  4305  001E90  0E52               	movlw	low (_menu_st+1)
  4306  001E92  24F3               	addwf	243,w,c
  4307  001E94  6ED9               	movwf	fsr2l,c
  4308  001E96  0E01               	movlw	high (_menu_st+1)
  4309  001E98  20F4               	addwfc	prodh,w,c
  4310  001E9A  6EDA               	movwf	fsr2h,c
  4311  001E9C  50DF               	movf	indf2,w,c
  4312  001E9E  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4313  001EA0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4314  001EA2  0D02               	mullw	2
  4315  001EA4  0E51               	movlw	low _menu_st
  4316  001EA6  24F3               	addwf	243,w,c
  4317  001EA8  6ED9               	movwf	fsr2l,c
  4318  001EAA  0E01               	movlw	high _menu_st
  4319  001EAC  20F4               	addwfc	prodh,w,c
  4320  001EAE  6EDA               	movwf	fsr2h,c
  4321  001EB0  50DF               	movf	indf2,w,c
  4322  001EB2  ECDA  F04E         	call	_SetSegmentValueMain
  4323                           
  4324                           ;sm_MenuConfiguration_MC50.c: 286:                 }
  4325  001EB6  D682               	goto	l24291
  4326  001EB8                     l24427:
  4327                           
  4328                           ; BSR set to: 0
  4329                           ;sm_MenuConfiguration_MC50.c: 289:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4330  001EB8  0E0A               	movlw	10
  4331  001EBA  6E10               	movwf	___lbdiv@divisor^0,c
  4332  001EBC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4333  001EBE  ECCD  F04B         	call	___lbdiv
  4334  001EC2  0DF6               	mullw	246
  4335  001EC4  50F3               	movf	243,w,c
  4336  001EC6  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4337  001EC8  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4338  001ECA  0E0A               	movlw	10
  4339  001ECC  6E10               	movwf	___lbdiv@divisor^0,c
  4340  001ECE  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4341  001ED0  ECCD  F04B         	call	___lbdiv
  4342  001ED4  ECDA  F04E         	call	_SetSegmentValueMain
  4343  001ED8  D671               	goto	l24291
  4344  001EDA                     l24431:
  4345                           
  4346                           ; BSR set to: 0
  4347  001EDA  0E17               	movlw	23
  4348  001EDC  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4349  001EDE  A4D8               	btfss	status,2,c
  4350  001EE0  D045               	goto	l24451
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;sm_MenuConfiguration_MC50.c: 294:             {;sm_MenuConfiguration_MC50.c: 295:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4354  001EE2  0E00               	movlw	0
  4355  001EE4  0101               	movlb	1	; () banked
  4356  001EE6  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4357  001EE8  0E64               	movlw	100
  4358  001EEA  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4359                           
  4360                           ; BSR set to: 1
  4361                           ;sm_MenuConfiguration_MC50.c: 296:                 edit_Param.tempValue++;
  4362  001EEC  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  4363                           
  4364                           ; BSR set to: 1
  4365                           ;sm_MenuConfiguration_MC50.c: 297:                 if(edit_Param.tempValue>edit_Param.Ma
      +                          x)
  4366  001EEE  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4367  001EF0  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  4368  001EF2  A0D8               	btfss	status,0,c
  4369                           
  4370                           ; BSR set to: 1
  4371                           ;sm_MenuConfiguration_MC50.c: 298:                 {;sm_MenuConfiguration_MC50.c: 299:  
      +                                              edit_Param.tempValue=edit_Param.Min;
  4372  001EF4  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  4373                           
  4374                           ; BSR set to: 1
  4375                           ;sm_MenuConfiguration_MC50.c: 301:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4376  001EF8  0E98               	movlw	_var_sys_NVM& (0+255)
  4377  001EFA  0F1C               	addlw	28
  4378  001EFC  0100               	movlb	0	; () banked
  4379  001EFE  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4380  001F00  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4381  001F02  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4382  001F04  E101               	bnz	u29565
  4383  001F06  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4384  001F08                     u29565:
  4385  001F08  B4D8               	btfsc	status,2,c
  4386  001F0A  D009               	goto	u29570
  4387                           
  4388                           ; BSR set to: 0
  4389  001F0C  0E98               	movlw	_var_sys_NVM& (0+255)
  4390  001F0E  0F1B               	addlw	27
  4391  001F10  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4392  001F12  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4393  001F14  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4394  001F16  E101               	bnz	u29575
  4395  001F18  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4396  001F1A                     u29575:
  4397  001F1A  A4D8               	btfss	status,2,c
  4398  001F1C  D016               	goto	l24447
  4399  001F1E                     u29570:
  4400                           
  4401                           ; BSR set to: 0
  4402                           ;sm_MenuConfiguration_MC50.c: 302:                     SetSegmentValueMain(menu_st.menuL
      +                          ist[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_d
      +                          isplay2);
  4403  001F1E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4404  001F20  0D02               	mullw	2
  4405  001F22  0E52               	movlw	low (_menu_st+1)
  4406  001F24  24F3               	addwf	243,w,c
  4407  001F26  6ED9               	movwf	fsr2l,c
  4408  001F28  0E01               	movlw	high (_menu_st+1)
  4409  001F2A  20F4               	addwfc	prodh,w,c
  4410  001F2C  6EDA               	movwf	fsr2h,c
  4411  001F2E  50DF               	movf	indf2,w,c
  4412  001F30  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4413  001F32  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4414  001F34  0D02               	mullw	2
  4415  001F36  0E51               	movlw	low _menu_st
  4416  001F38  24F3               	addwf	243,w,c
  4417  001F3A  6ED9               	movwf	fsr2l,c
  4418  001F3C  0E01               	movlw	high _menu_st
  4419  001F3E  20F4               	addwfc	prodh,w,c
  4420  001F40  6EDA               	movwf	fsr2h,c
  4421  001F42  50DF               	movf	indf2,w,c
  4422  001F44  ECDA  F04E         	call	_SetSegmentValueMain
  4423                           
  4424                           ;sm_MenuConfiguration_MC50.c: 303:                 }
  4425  001F48  D639               	goto	l24291
  4426  001F4A                     l24447:
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;sm_MenuConfiguration_MC50.c: 306:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4430  001F4A  0E0A               	movlw	10
  4431  001F4C  6E10               	movwf	___lbdiv@divisor^0,c
  4432  001F4E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4433  001F50  ECCD  F04B         	call	___lbdiv
  4434  001F54  0DF6               	mullw	246
  4435  001F56  50F3               	movf	243,w,c
  4436  001F58  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4437  001F5A  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4438  001F5C  0E0A               	movlw	10
  4439  001F5E  6E10               	movwf	___lbdiv@divisor^0,c
  4440  001F60  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4441  001F62  ECCD  F04B         	call	___lbdiv
  4442  001F66  ECDA  F04E         	call	_SetSegmentValueMain
  4443  001F6A  D628               	goto	l24291
  4444  001F6C                     l24451:
  4445                           
  4446                           ; BSR set to: 0
  4447  001F6C  0E27               	movlw	39
  4448  001F6E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4449  001F70  A4D8               	btfss	status,2,c
  4450  001F72  D023               	goto	l24467
  4451                           
  4452                           ; BSR set to: 0
  4453  001F74  0E09               	movlw	9
  4454  001F76  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4455  001F78  D020               	goto	l24467
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;sm_MenuConfiguration_MC50.c: 312:             {;sm_MenuConfiguration_MC50.c: 313:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4459  001F7A  0E00               	movlw	0
  4460  001F7C  0101               	movlb	1	; () banked
  4461  001F7E  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4462  001F80  0E64               	movlw	100
  4463  001F82  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4464                           
  4465                           ; BSR set to: 1
  4466                           ;sm_MenuConfiguration_MC50.c: 315:                 edit_Param.Value[0]=edit_Param.tempVa
      +                          lue;
  4467  001F84  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4468  001F88  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4469  001F8C  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  4470                           
  4471                           ; BSR set to: 1
  4472                           ;sm_MenuConfiguration_MC50.c: 316:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsEdited);
  4473  001F90  0EBD               	movlw	low _menuConfiguration_stateMachine
  4474  001F92  6E12               	movwf	sm_send_event@psm^0,c
  4475  001F94  0E02               	movlw	high _menuConfiguration_stateMachine
  4476  001F96  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4477  001F98  0E00               	movlw	0
  4478  001F9A  6E15               	movwf	(sm_send_event@event+1)^0,c
  4479  001F9C  0E02               	movlw	2
  4480  001F9E  6E14               	movwf	sm_send_event@event^0,c
  4481  001FA0  ECDC  F047         	call	_sm_send_event	;wreg free
  4482                           
  4483                           ;sm_MenuConfiguration_MC50.c: 317:                 SetSegmentValueMain(dBar,d1);
  4484  001FA4  0E01               	movlw	1
  4485  001FA6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4486  001FA8  0E19               	movlw	25
  4487  001FAA  ECDA  F04E         	call	_SetSegmentValueMain
  4488                           
  4489                           ; BSR set to: 0
  4490                           ;sm_MenuConfiguration_MC50.c: 318:                 ts_system.timeSinalizationDigit=((100
      +                          0/50)*2);
  4491  001FAE  0E00               	movlw	0
  4492  001FB0  0101               	movlb	1	; () banked
  4493  001FB2  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
  4494  001FB4  0E28               	movlw	40
  4495  001FB6  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
  4496  001FB8  D601               	goto	l24291
  4497  001FBA                     l24467:
  4498                           
  4499                           ; BSR set to: 0
  4500  001FBA  0101               	movlb	1	; () banked
  4501  001FBC  BFAD               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4502  001FBE  D008               	goto	u29610
  4503  001FC0  51AD               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4504  001FC2  E103               	bnz	u29600
  4505  001FC4  05AC               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4506  001FC6  A0D8               	btfss	status,0,c
  4507  001FC8  D003               	goto	u29610
  4508  001FCA                     u29600:
  4509                           
  4510                           ; BSR set to: 1
  4511  001FCA  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4512  001FCC  A4D8               	btfss	status,2,c
  4513  001FCE  0012               	return	
  4514  001FD0                     u29610:
  4515                           
  4516                           ; BSR set to: 1
  4517                           ;sm_MenuConfiguration_MC50.c: 323:             {;sm_MenuConfiguration_MC50.c: 324:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4518  001FD0  0E00               	movlw	0
  4519  001FD2  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4520  001FD4  0E64               	movlw	100
  4521  001FD6  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4522                           
  4523                           ; BSR set to: 1
  4524                           ;sm_MenuConfiguration_MC50.c: 325:                 load_New_Menu(menu_st.actualMenu);
  4525  001FD8  5166               	movf	(_menu_st+21)& (0+255),w,b
  4526  001FDA  EC27  F025         	call	_load_New_Menu
  4527                           
  4528                           ;sm_MenuConfiguration_MC50.c: 326:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_CancelEdition);
  4529  001FDE  0EBD               	movlw	low _menuConfiguration_stateMachine
  4530  001FE0  6E12               	movwf	sm_send_event@psm^0,c
  4531  001FE2  0E02               	movlw	high _menuConfiguration_stateMachine
  4532  001FE4  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4533  001FE6  0E00               	movlw	0
  4534  001FE8  6E15               	movwf	(sm_send_event@event+1)^0,c
  4535  001FEA  0E03               	movlw	3
  4536  001FEC  6E14               	movwf	sm_send_event@event^0,c
  4537  001FEE  ECDC  F047         	call	_sm_send_event	;wreg free
  4538  001FF2  D5E4               	goto	l24291
  4539  001FF4                     l24479:
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;sm_MenuConfiguration_MC50.c: 332:         {;sm_MenuConfiguration_MC50.c: 333:          
      +                             if (ts_system.timeSinalizationDigit<=0)
  4543  001FF4  0101               	movlb	1	; () banked
  4544  001FF6  BFAB               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  4545  001FF8  D005               	goto	u29620
  4546  001FFA  51AB               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  4547  001FFC  E102               	bnz	u29621
  4548  001FFE  05AA               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  4549  002000  B0D8               	btfsc	status,0,c
  4550  002002                     u29621:
  4551  002002  0012               	return	
  4552  002004                     u29620:
  4553                           
  4554                           ; BSR set to: 1
  4555                           ;sm_MenuConfiguration_MC50.c: 334:             {;sm_MenuConfiguration_MC50.c: 335:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4556  002004  0E00               	movlw	0
  4557  002006  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4558  002008  0E64               	movlw	100
  4559  00200A  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4560                           
  4561                           ; BSR set to: 1
  4562                           ;sm_MenuConfiguration_MC50.c: 337:                 if((menu_st.actualMenu==E_Menu && men
      +                          u_st.parameterSelected==8)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.TypeofMotor)
      +                          )
  4563  00200C  0566               	decf	(_menu_st+21)& (0+255),w,b
  4564  00200E  A4D8               	btfss	status,2,c
  4565  002010  D004               	goto	u29640
  4566                           
  4567                           ; BSR set to: 1
  4568  002012  0E08               	movlw	8
  4569  002014  1968               	xorwf	(_menu_st+23)& (0+255),w,b
  4570  002016  B4D8               	btfsc	status,2,c
  4571  002018  D00A               	goto	u29650
  4572  00201A                     u29640:
  4573                           
  4574                           ; BSR set to: 1
  4575  00201A  0E98               	movlw	_var_sys_NVM& (0+255)
  4576  00201C  0F1C               	addlw	28
  4577  00201E  0100               	movlb	0	; () banked
  4578  002020  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4579  002022  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4580  002024  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4581  002026  E101               	bnz	u29655
  4582  002028  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4583  00202A                     u29655:
  4584  00202A  A4D8               	btfss	status,2,c
  4585  00202C  D005               	goto	l24491
  4586  00202E                     u29650:
  4587                           
  4588                           ;sm_MenuConfiguration_MC50.c: 338:                 {;sm_MenuConfiguration_MC50.c: 341:  
      +                                             ResetDefaultMemory(var_sys_NVM.TypeofMotor);
  4589  00202E  0100               	movlb	0	; () banked
  4590  002030  51B4               	movf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
  4591  002032  EC59  F034         	call	_ResetDefaultMemory
  4592                           
  4593                           ;sm_MenuConfiguration_MC50.c: 343:                 }
  4594  002036  D023               	goto	l24509
  4595  002038                     l24491:
  4596                           
  4597                           ; BSR set to: 0
  4598  002038  0101               	movlb	1	; () banked
  4599  00203A  0566               	decf	(_menu_st+21)& (0+255),w,b
  4600  00203C  B4D8               	btfsc	status,2,c
  4601  00203E  D004               	goto	u29670
  4602                           
  4603                           ; BSR set to: 1
  4604  002040  0E0A               	movlw	10
  4605  002042  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4606  002044  A4D8               	btfss	status,2,c
  4607  002046  D004               	goto	l24497
  4608  002048                     u29670:
  4609                           
  4610                           ; BSR set to: 1
  4611                           ;sm_MenuConfiguration_MC50.c: 345:                 {;sm_MenuConfiguration_MC50.c: 346:  
      +                                             SaveNVM_VarSystem(pageMemoryE);
  4612  002048  0E01               	movlw	1
  4613  00204A  ECEA  F04B         	call	_SaveNVM_VarSystem
  4614                           
  4615                           ;sm_MenuConfiguration_MC50.c: 347:                 }
  4616  00204E  D017               	goto	l24509
  4617  002050                     l24497:
  4618                           
  4619                           ; BSR set to: 1
  4620                           ;sm_MenuConfiguration_MC50.c: 349:                 {;sm_MenuConfiguration_MC50.c: 350:  
      +                                             if (menu_st.parameterSelected == 1 && edit_Param.Value[0] >=1 && menu
      +                          _st.actualMenu == P2_SMenu )
  4621  002050  0568               	decf	(_menu_st+23)& (0+255),w,b
  4622  002052  A4D8               	btfss	status,2,c
  4623  002054  D00E               	goto	l24505
  4624                           
  4625                           ; BSR set to: 1
  4626  002056  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4627  00205A  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4628  00205E  50DF               	movf	indf2,w,c
  4629  002060  B4D8               	btfsc	status,2,c
  4630  002062  D007               	goto	l24505
  4631                           
  4632                           ; BSR set to: 1
  4633  002064  0E06               	movlw	6
  4634  002066  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4635  002068  A4D8               	btfss	status,2,c
  4636  00206A  D003               	goto	l24505
  4637                           
  4638                           ; BSR set to: 1
  4639                           ;sm_MenuConfiguration_MC50.c: 351:                     {;sm_MenuConfiguration_MC50.c: 35
      +                          2:                       var_sys_NVM.motorPower = 9;
  4640  00206C  0E09               	movlw	9
  4641  00206E  0100               	movlb	0	; () banked
  4642  002070  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
  4643  002072                     l24505:
  4644                           
  4645                           ;sm_MenuConfiguration_MC50.c: 355:                       SaveNVM_VarSystem(pageMemoryE);
  4646  002072  0E01               	movlw	1
  4647  002074  ECEA  F04B         	call	_SaveNVM_VarSystem
  4648                           
  4649                           ;sm_MenuConfiguration_MC50.c: 356:                       SaveNVM_VarSystem(pageMemoryP);
  4650  002078  0E00               	movlw	0
  4651  00207A  ECEA  F04B         	call	_SaveNVM_VarSystem
  4652  00207E                     l24509:
  4653                           
  4654                           ;sm_MenuConfiguration_MC50.c: 360:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4655  00207E  0EBD               	movlw	low _menuConfiguration_stateMachine
  4656  002080  6E12               	movwf	sm_send_event@psm^0,c
  4657  002082  0E02               	movlw	high _menuConfiguration_stateMachine
  4658  002084  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4659  002086  0E00               	movlw	0
  4660  002088  6E15               	movwf	(sm_send_event@event+1)^0,c
  4661  00208A  0E04               	movlw	4
  4662  00208C  6E14               	movwf	sm_send_event@event^0,c
  4663  00208E  ECDC  F047         	call	_sm_send_event	;wreg free
  4664                           
  4665                           ;sm_MenuConfiguration_MC50.c: 363:                 menu_st.parameterSelected++;
  4666  002092  0101               	movlb	1	; () banked
  4667  002094  2B68               	incf	(_menu_st+23)& (0+255),f,b
  4668                           
  4669                           ; BSR set to: 1
  4670                           ;sm_MenuConfiguration_MC50.c: 364:                 if(menu_st.actualMenu<=E_Menu)
  4671  002096  0E02               	movlw	2
  4672  002098  6166               	cpfslt	(_menu_st+21)& (0+255),b
  4673  00209A  D005               	goto	l24519
  4674                           
  4675                           ; BSR set to: 1
  4676                           ;sm_MenuConfiguration_MC50.c: 365:                 {;sm_MenuConfiguration_MC50.c: 366:  
      +                                             menu_st.lastMainParameterSelected++;
  4677  00209C  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4678                           
  4679                           ; BSR set to: 1
  4680                           ;sm_MenuConfiguration_MC50.c: 367:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4681  00209E  5166               	movf	(_menu_st+21)& (0+255),w,b
  4682  0020A0  EC27  F025         	call	_load_New_Menu
  4683                           
  4684                           ;sm_MenuConfiguration_MC50.c: 368:                 }
  4685  0020A4  0012               	return	
  4686  0020A6                     l24519:
  4687                           
  4688                           ; BSR set to: 1
  4689  0020A6  5167               	movf	(_menu_st+22)& (0+255),w,b
  4690  0020A8  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  4691  0020AA  A0D8               	btfss	status,0,c
  4692  0020AC  D005               	goto	l24525
  4693                           
  4694                           ; BSR set to: 1
  4695                           ;sm_MenuConfiguration_MC50.c: 370:                 {;sm_MenuConfiguration_MC50.c: 371:  
      +                                             menu_st.lastMainParameterSelected++;
  4696  0020AE  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4697                           
  4698                           ; BSR set to: 1
  4699                           ;sm_MenuConfiguration_MC50.c: 372:                     load_New_Menu(menu_st.lastMenu);
  4700  0020B0  5165               	movf	(_menu_st+20)& (0+255),w,b
  4701  0020B2  EC27  F025         	call	_load_New_Menu
  4702                           
  4703                           ;sm_MenuConfiguration_MC50.c: 373:                 }
  4704  0020B6  0012               	return	
  4705  0020B8                     l24525:
  4706                           
  4707                           ; BSR set to: 1
  4708                           ;sm_MenuConfiguration_MC50.c: 375:                 {;sm_MenuConfiguration_MC50.c: 376:  
      +                                             load_New_Menu(menu_st.actualMenu);
  4709  0020B8  5166               	movf	(_menu_st+21)& (0+255),w,b
  4710  0020BA  EC27  F025         	call	_load_New_Menu
  4711  0020BE  0012               	return	
  4712  0020C0                     l24527:
  4713                           
  4714                           ; BSR set to: 0
  4715                           ;sm_MenuConfiguration_MC50.c: 382:         {;sm_MenuConfiguration_MC50.c: 383:          
      +                             if(ts_system.timeoutMenu<=0)
  4716  0020C0  0101               	movlb	1	; () banked
  4717  0020C2  BFAD               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4718  0020C4  D005               	goto	u29730
  4719  0020C6  51AD               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4720  0020C8  E102               	bnz	u29731
  4721  0020CA  05AC               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4722  0020CC  B0D8               	btfsc	status,0,c
  4723  0020CE                     u29731:
  4724  0020CE  0012               	return	
  4725  0020D0                     u29730:
  4726                           
  4727                           ; BSR set to: 1
  4728                           ;sm_MenuConfiguration_MC50.c: 384:             {;sm_MenuConfiguration_MC50.c: 386:      
      +                                     if(auxCounter<=0){
  4729  0020D0  0100               	movlb	0	; () banked
  4730  0020D2  51FC               	movf	_auxCounter& (0+255),w,b
  4731  0020D4  11FD               	iorwf	(_auxCounter+1)& (0+255),w,b
  4732  0020D6  A4D8               	btfss	status,2,c
  4733  0020D8  D010               	goto	l24537
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;sm_MenuConfiguration_MC50.c: 387:                     menu_st.lastMainParameterSelected
      +                          ++;
  4737  0020DA  0101               	movlb	1	; () banked
  4738  0020DC  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4739                           
  4740                           ; BSR set to: 1
  4741                           ;sm_MenuConfiguration_MC50.c: 388:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4742  0020DE  5166               	movf	(_menu_st+21)& (0+255),w,b
  4743  0020E0  EC27  F025         	call	_load_New_Menu
  4744                           
  4745                           ;sm_MenuConfiguration_MC50.c: 389:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_ParameterIsSaved);
  4746  0020E4  0EBD               	movlw	low _menuConfiguration_stateMachine
  4747  0020E6  6E12               	movwf	sm_send_event@psm^0,c
  4748  0020E8  0E02               	movlw	high _menuConfiguration_stateMachine
  4749  0020EA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4750  0020EC  0E00               	movlw	0
  4751  0020EE  6E15               	movwf	(sm_send_event@event+1)^0,c
  4752  0020F0  0E04               	movlw	4
  4753  0020F2  6E14               	movwf	sm_send_event@event^0,c
  4754  0020F4  ECDC  F047         	call	_sm_send_event	;wreg free
  4755                           
  4756                           ;sm_MenuConfiguration_MC50.c: 390:                 }
  4757  0020F8  0012               	return	
  4758  0020FA                     l24537:
  4759                           
  4760                           ; BSR set to: 0
  4761                           ;sm_MenuConfiguration_MC50.c: 392:                 {;sm_MenuConfiguration_MC50.c: 393:  
      +                                             ts_system.timeoutMenu=(1000/50)*3;
  4762  0020FA  0E00               	movlw	0
  4763  0020FC  0101               	movlb	1	; () banked
  4764  0020FE  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4765  002100  0E3C               	movlw	60
  4766  002102  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4767                           
  4768                           ; BSR set to: 1
  4769                           ;sm_MenuConfiguration_MC50.c: 394:                     edit_Param.tempValue=(unsigned ch
      +                          ar)(tempCounter/auxCounter);
  4770  002104  C2F6  F010         	movff	_tempCounter,___lldiv@dividend
  4771  002108  C2F7  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4772  00210C  C2F8  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4773  002110  C2F9  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4774  002114  C0FC  F014         	movff	_auxCounter,___lldiv@divisor
  4775  002118  C0FD  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4776  00211C  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4777  00211E  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4778  002120  EC67  F043         	call	___lldiv	;wreg free
  4779  002124  5010               	movf	?___lldiv^0,w,c
  4780  002126  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4781                           
  4782                           ;sm_MenuConfiguration_MC50.c: 395:                     tempCounter=tempCounter-(tempCoun
      +                          ter/auxCounter*auxCounter);
  4783  002128  C0FC  F014         	movff	_auxCounter,___lldiv@divisor
  4784  00212C  C0FD  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4785  002130  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4786  002132  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4787  002134  C2F6  F010         	movff	_tempCounter,___lldiv@dividend
  4788  002138  C2F7  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4789  00213C  C2F8  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4790  002140  C2F9  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4791  002144  EC67  F043         	call	___lldiv	;wreg free
  4792  002148  C010  F01D         	movff	?___lldiv,___lmul@multiplier
  4793  00214C  C011  F01E         	movff	?___lldiv+1,___lmul@multiplier+1
  4794  002150  C012  F01F         	movff	?___lldiv+2,___lmul@multiplier+2
  4795  002154  C013  F020         	movff	?___lldiv+3,___lmul@multiplier+3
  4796  002158  C0FC  F021         	movff	_auxCounter,___lmul@multiplicand
  4797  00215C  C0FD  F022         	movff	_auxCounter+1,___lmul@multiplicand+1
  4798  002160  6A23               	clrf	(___lmul@multiplicand+2)^0,c
  4799  002162  6A24               	clrf	(___lmul@multiplicand+3)^0,c
  4800  002164  EC17  F049         	call	___lmul	;wreg free
  4801  002168  501D               	movf	?___lmul^0,w,c
  4802  00216A  0102               	movlb	2	; () banked
  4803  00216C  5DF6               	subwf	_tempCounter& (0+255),w,b
  4804  00216E  6FF6               	movwf	_tempCounter& (0+255),b
  4805  002170  501E               	movf	(?___lmul+1)^0,w,c
  4806  002172  59F7               	subwfb	(_tempCounter+1)& (0+255),w,b
  4807  002174  6FF7               	movwf	(_tempCounter+1)& (0+255),b
  4808  002176  501F               	movf	(?___lmul+2)^0,w,c
  4809  002178  59F8               	subwfb	(_tempCounter+2)& (0+255),w,b
  4810  00217A  6FF8               	movwf	(_tempCounter+2)& (0+255),b
  4811  00217C  5020               	movf	(?___lmul+3)^0,w,c
  4812  00217E  59F9               	subwfb	(_tempCounter+3)& (0+255),w,b
  4813  002180  6FF9               	movwf	(_tempCounter+3)& (0+255),b
  4814                           
  4815                           ; BSR set to: 2
  4816                           ;sm_MenuConfiguration_MC50.c: 396:                     auxCounter=auxCounter/100;
  4817  002182  C0FC  F010         	movff	_auxCounter,___lwdiv@dividend
  4818  002186  C0FD  F011         	movff	_auxCounter+1,___lwdiv@dividend+1
  4819  00218A  0E00               	movlw	0
  4820  00218C  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  4821  00218E  0E64               	movlw	100
  4822  002190  6E12               	movwf	___lwdiv@divisor^0,c
  4823  002192  EC97  F049         	call	___lwdiv	;wreg free
  4824  002196  C010  F0FC         	movff	?___lwdiv,_auxCounter
  4825  00219A  C011  F0FD         	movff	?___lwdiv+1,_auxCounter+1
  4826                           
  4827                           ;sm_MenuConfiguration_MC50.c: 397:                     SetSegmentValueIntermitentMain(ed
      +                          it_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),( 500/50));
  4828  00219E  0E0A               	movlw	10
  4829  0021A0  6E10               	movwf	___lbdiv@divisor^0,c
  4830  0021A2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4831  0021A4  ECCD  F04B         	call	___lbdiv
  4832  0021A8  0DF6               	mullw	246
  4833  0021AA  50F3               	movf	243,w,c
  4834  0021AC  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4835  0021AE  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4836  0021B0  0E00               	movlw	0
  4837  0021B2  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4838  0021B4  0E0A               	movlw	10
  4839  0021B6  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4840  0021B8  0E0A               	movlw	10
  4841  0021BA  6E10               	movwf	___lbdiv@divisor^0,c
  4842  0021BC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4843  0021BE  ECCD  F04B         	call	___lbdiv
  4844  0021C2  EC76  F04F         	call	_SetSegmentValueIntermitentMain
  4845  0021C6  0012               	return	
  4846  0021C8                     l24547:
  4847                           
  4848                           ; BSR set to: 0
  4849                           ;sm_MenuConfiguration_MC50.c: 403:         {;sm_MenuConfiguration_MC50.c: 404:          
      +                             if(firstselectflag==1){
  4850  0021C8  0101               	movlb	1	; () banked
  4851  0021CA  05FE               	decf	_firstselectflag& (0+255),w,b
  4852  0021CC  A4D8               	btfss	status,2,c
  4853  0021CE  D004               	goto	l24551
  4854                           
  4855                           ; BSR set to: 1
  4856                           ;sm_MenuConfiguration_MC50.c: 405:                 edit_Param.tempValue=0;
  4857  0021D0  0E00               	movlw	0
  4858  0021D2  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4859                           
  4860                           ;sm_MenuConfiguration_MC50.c: 406:                 firstselectflag=0;
  4861  0021D4  0E00               	movlw	0
  4862  0021D6  6FFE               	movwf	_firstselectflag& (0+255),b
  4863  0021D8                     l24551:
  4864                           
  4865                           ; BSR set to: 1
  4866                           ;sm_MenuConfiguration_MC50.c: 408:             controlSelectRemote();
  4867  0021D8  ECFE  F01F         	call	_controlSelectRemote	;wreg free
  4868                           
  4869                           ;sm_MenuConfiguration_MC50.c: 409:         };sm_MenuConfiguration_MC50.c: 410:         b
      +                          reak;
  4870  0021DC  0012               	return	
  4871  0021DE                     l24553:
  4872                           
  4873                           ; BSR set to: 0
  4874                           ;sm_MenuConfiguration_MC50.c: 412:         {;sm_MenuConfiguration_MC50.c: 413:          
      +                             controlSaveRemote();
  4875  0021DE  ECB2  F03E         	call	_controlSaveRemote	;wreg free
  4876                           
  4877                           ;sm_MenuConfiguration_MC50.c: 414:         };sm_MenuConfiguration_MC50.c: 415:         b
      +                          reak;
  4878  0021E2  0012               	return	
  4879  0021E4                     l24555:
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;sm_MenuConfiguration_MC50.c: 417:         {;sm_MenuConfiguration_MC50.c: 418:          
      +                             controlLearnDigit();
  4883  0021E4  EC6B  F04C         	call	_controlLearnDigit	;wreg free
  4884                           
  4885                           ;sm_MenuConfiguration_MC50.c: 419:             if(var_sys.LearningIsEnabled==NO)
  4886  0021E8  0101               	movlb	1	; () banked
  4887  0021EA  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
  4888  0021EC  A4D8               	btfss	status,2,c
  4889  0021EE  0012               	return	
  4890                           
  4891                           ; BSR set to: 1
  4892                           ;sm_MenuConfiguration_MC50.c: 420:             {;sm_MenuConfiguration_MC50.c: 421:      
      +                                     sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4893  0021F0  0EF1               	movlw	low _main_stateMachine
  4894  0021F2  6E12               	movwf	sm_send_event@psm^0,c
  4895  0021F4  0E01               	movlw	high _main_stateMachine
  4896  0021F6  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4897  0021F8  0E00               	movlw	0
  4898  0021FA  6E15               	movwf	(sm_send_event@event+1)^0,c
  4899  0021FC  0E07               	movlw	7
  4900  0021FE  6E14               	movwf	sm_send_event@event^0,c
  4901  002200  ECDC  F047         	call	_sm_send_event	;wreg free
  4902                           
  4903                           ;sm_MenuConfiguration_MC50.c: 422:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4904  002204  0EBD               	movlw	low _menuConfiguration_stateMachine
  4905  002206  6E12               	movwf	sm_send_event@psm^0,c
  4906  002208  0E02               	movlw	high _menuConfiguration_stateMachine
  4907  00220A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4908  00220C  0E00               	movlw	0
  4909  00220E  6E15               	movwf	(sm_send_event@event+1)^0,c
  4910  002210  0E04               	movlw	4
  4911  002212  6E14               	movwf	sm_send_event@event^0,c
  4912  002214  ECDC  F047         	call	_sm_send_event	;wreg free
  4913                           
  4914                           ;sm_MenuConfiguration_MC50.c: 423:                 SetSegmentValueMain(dMinus,dMinus);
  4915  002218  0E18               	movlw	24
  4916  00221A  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4917  00221C  0E18               	movlw	24
  4918  00221E  ECDA  F04E         	call	_SetSegmentValueMain
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;sm_MenuConfiguration_MC50.c: 424:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4922  002222  0E02               	movlw	2
  4923  002224  ECEA  F04B         	call	_SaveNVM_VarSystem
  4924  002228  D5E8               	goto	l24393
  4925  00222A                     l24571:
  4926  00222A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  4927  00222E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  4928  002232  50DF               	movf	indf2,w,c
  4929  002234  0100               	movlb	0	; () banked
  4930  002236  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4931  002238  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  4932                           
  4933                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4934                           ; Switch size 1, requested type "simple"
  4935                           ; Number of cases is 1, Range of values is 0 to 0
  4936                           ; switch strategies available:
  4937                           ; Name         Instructions Cycles
  4938                           ; simple_byte            4     3 (average)
  4939                           ;	Chosen strategy is simple_byte
  4940  00223A  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  4941  00223C  0A00               	xorlw	0	; case 0
  4942  00223E  A4D8               	btfss	status,2,c
  4943  002240  0012               	return	
  4944                           
  4945                           ; BSR set to: 0
  4946                           ; Switch size 1, requested type "simple"
  4947                           ; Number of cases is 7, Range of values is 0 to 6
  4948                           ; switch strategies available:
  4949                           ; Name         Instructions Cycles
  4950                           ; simple_byte           22    12 (average)
  4951                           ;	Chosen strategy is simple_byte
  4952  002242  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4953  002244  0A00               	xorlw	0	; case 0
  4954  002246  B4D8               	btfsc	status,2,c
  4955  002248  D42F               	goto	l24261
  4956  00224A  0A01               	xorlw	1	; case 1
  4957  00224C  B4D8               	btfsc	status,2,c
  4958  00224E  D5FB               	goto	l24411
  4959  002250  0A03               	xorlw	3	; case 2
  4960  002252  B4D8               	btfsc	status,2,c
  4961  002254  D6CF               	goto	l24479
  4962  002256  0A01               	xorlw	1	; case 3
  4963  002258  B4D8               	btfsc	status,2,c
  4964  00225A  D732               	goto	l24527
  4965  00225C  0A07               	xorlw	7	; case 4
  4966  00225E  B4D8               	btfsc	status,2,c
  4967  002260  D7B3               	goto	l24547
  4968  002262  0A01               	xorlw	1	; case 5
  4969  002264  B4D8               	btfsc	status,2,c
  4970  002266  D7BB               	goto	l24553
  4971  002268  0A03               	xorlw	3	; case 6
  4972  00226A  A4D8               	btfss	status,2,c
  4973  00226C  0012               	return	
  4974  00226E  D7BA               	goto	l24555
  4975  002270                     __end_of_sm_execute_menuConfiguration:
  4976                           	callstack 0
  4977                           
  4978 ;; *************** function _setValueToEdit *****************
  4979 ;; Defined at:
  4980 ;;		line 648 in file "sm_MenuConfiguration_MC50.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;  menuType        1    wreg     enum E10813
  4983 ;;  ParameterSel    1   57[COMRAM] unsigned char 
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;  menuType        1    6[BANK0 ] enum E10813
  4986 ;;  posindex        1    8[BANK0 ] unsigned char 
  4987 ;;  posindex        1    7[BANK0 ] unsigned char 
  4988 ;;  haveValueToE    1    9[BANK0 ] unsigned char 
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  1    wreg      unsigned char 
  4991 ;; Registers used:
  4992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4993 ;; Tracked objects:
  4994 ;;		On entry : 3F/1
  4995 ;;		On exit  : 3F/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4998 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4999 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5000 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5001 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5002 ;;Total ram usage:        7 bytes
  5003 ;; Hardware stack levels used: 1
  5004 ;; Hardware stack levels required when called: 14
  5005 ;; This function calls:
  5006 ;;		_InitReceiver
  5007 ;;		_SaveNVM_VarSystem
  5008 ;;		_cmdMemoryIsEmpty
  5009 ;;		_load_New_Menu
  5010 ;;		_sm_send_event
  5011 ;; This function is called by:
  5012 ;;		_sm_execute_menuConfiguration
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016                           	psect	text3
  5017  0035B8                     __ptext3:
  5018                           	callstack 0
  5019  0035B8                     _setValueToEdit:
  5020                           	callstack 14
  5021                           
  5022                           ;incstack = 0
  5023                           ;setValueToEdit@menuType stored from wreg
  5024  0035B8  0100               	movlb	0	; () banked
  5025  0035BA  6FDE               	movwf	setValueToEdit@menuType& (0+255),b
  5026                           
  5027                           ;sm_MenuConfiguration_MC50.c: 649:     char haveValueToEdit=0;
  5028  0035BC  0E00               	movlw	0
  5029  0035BE  0100               	movlb	0	; () banked
  5030  0035C0  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5031                           
  5032                           ;sm_MenuConfiguration_MC50.c: 652:     switch (menuType)
  5033  0035C2  D267               	goto	l22273
  5034  0035C4                     l3358:
  5035                           
  5036                           ; BSR set to: 0
  5037                           ;sm_MenuConfiguration_MC50.c: 655:         {;sm_MenuConfiguration_MC50.c: 656:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  5038  0035C4  C168  F169         	movff	_menu_st+23,_menu_st+24
  5039                           
  5040                           ; BSR set to: 0
  5041                           ;sm_MenuConfiguration_MC50.c: 657:             edit_Param.Min=0;
  5042  0035C8  0E00               	movlw	0
  5043  0035CA  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5044                           
  5045                           ;sm_MenuConfiguration_MC50.c: 658:             switch (ParameterSelected)
  5046  0035CC  D034               	goto	l22021
  5047  0035CE                     l21975:
  5048                           
  5049                           ; BSR set to: 0
  5050                           ;sm_MenuConfiguration_MC50.c: 661:                 {;sm_MenuConfiguration_MC50.c: 662:  
      +                                             load_New_Menu(P0_SMenu);
  5051  0035CE  0E04               	movlw	4
  5052  0035D0  EC27  F025         	call	_load_New_Menu
  5053                           
  5054                           ;sm_MenuConfiguration_MC50.c: 664:                 };sm_MenuConfiguration_MC50.c: 665:  
      +                                         break;
  5055  0035D4  D287               	goto	l22275
  5056  0035D6                     l21977:
  5057                           
  5058                           ; BSR set to: 0
  5059                           ;sm_MenuConfiguration_MC50.c: 667:                 {;sm_MenuConfiguration_MC50.c: 668:  
      +                                             load_New_Menu(P1_SMenu);
  5060  0035D6  0E05               	movlw	5
  5061  0035D8  EC27  F025         	call	_load_New_Menu
  5062                           
  5063                           ;sm_MenuConfiguration_MC50.c: 669:                 };sm_MenuConfiguration_MC50.c: 670:  
      +                                         break;
  5064  0035DC  D283               	goto	l22275
  5065  0035DE                     l21979:
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;sm_MenuConfiguration_MC50.c: 672:                 {;sm_MenuConfiguration_MC50.c: 673:  
      +                                             load_New_Menu(P2_SMenu);
  5069  0035DE  0E06               	movlw	6
  5070  0035E0  EC27  F025         	call	_load_New_Menu
  5071                           
  5072                           ;sm_MenuConfiguration_MC50.c: 674:                 };sm_MenuConfiguration_MC50.c: 675:  
      +                                         break;
  5073  0035E4  D27F               	goto	l22275
  5074  0035E6                     l21981:
  5075                           
  5076                           ; BSR set to: 0
  5077                           ;sm_MenuConfiguration_MC50.c: 677:                 {;sm_MenuConfiguration_MC50.c: 678:  
      +                                             edit_Param.Max=99;
  5078  0035E6  0E63               	movlw	99
  5079  0035E8  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5080                           
  5081                           ; BSR set to: 0
  5082                           ;sm_MenuConfiguration_MC50.c: 680:                     edit_Param.tempValue=var_sys_NVM.
      +                          walkTime;
  5083  0035EA  C09C  F049         	movff	_var_sys_NVM+4,_edit_Param+3	;volatile
  5084                           
  5085                           ; BSR set to: 0
  5086                           ;sm_MenuConfiguration_MC50.c: 681:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.walkTime;
  5087  0035EE  0E9C               	movlw	low (_var_sys_NVM+4)
  5088  0035F0                     L13:
  5089  0035F0  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5090  0035F2  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5091                           
  5092                           ; BSR set to: 0
  5093                           ;sm_MenuConfiguration_MC50.c: 682:                     haveValueToEdit=1;
  5094  0035F4  0E01               	movlw	1
  5095  0035F6  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5096                           
  5097                           ;sm_MenuConfiguration_MC50.c: 683:                 };sm_MenuConfiguration_MC50.c: 684:  
      +                                         break;
  5098  0035F8  D275               	goto	l22275
  5099  0035FA                     l21989:
  5100                           
  5101                           ; BSR set to: 0
  5102                           ;sm_MenuConfiguration_MC50.c: 686:                 {;sm_MenuConfiguration_MC50.c: 687:  
      +                                             load_New_Menu(P4_SMenu);
  5103  0035FA  0E07               	movlw	7
  5104  0035FC  EC27  F025         	call	_load_New_Menu
  5105                           
  5106                           ;sm_MenuConfiguration_MC50.c: 688:                 };sm_MenuConfiguration_MC50.c: 689:  
      +                                         break;
  5107  003600  D271               	goto	l22275
  5108  003602                     l21991:
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;sm_MenuConfiguration_MC50.c: 691:                 {;sm_MenuConfiguration_MC50.c: 692:  
      +                                             load_New_Menu(P5_SMenu);
  5112  003602  0E08               	movlw	8
  5113  003604  EC27  F025         	call	_load_New_Menu
  5114                           
  5115                           ;sm_MenuConfiguration_MC50.c: 693:                 };sm_MenuConfiguration_MC50.c: 694:  
      +                                         break;
  5116  003608  D26D               	goto	l22275
  5117  00360A                     l21993:
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;sm_MenuConfiguration_MC50.c: 696:                 {;sm_MenuConfiguration_MC50.c: 697:  
      +                                             load_New_Menu(P6_SMenu);
  5121  00360A  0E09               	movlw	9
  5122  00360C  EC27  F025         	call	_load_New_Menu
  5123                           
  5124                           ;sm_MenuConfiguration_MC50.c: 698:                 };sm_MenuConfiguration_MC50.c: 699:  
      +                                         break;
  5125  003610  D269               	goto	l22275
  5126  003612                     l21995:
  5127                           
  5128                           ; BSR set to: 0
  5129                           ;sm_MenuConfiguration_MC50.c: 701:                 {;sm_MenuConfiguration_MC50.c: 702:  
      +                                             edit_Param.Max=2;
  5130  003612  0E02               	movlw	2
  5131  003614  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5132                           
  5133                           ; BSR set to: 0
  5134                           ;sm_MenuConfiguration_MC50.c: 704:                     edit_Param.tempValue=var_sys_NVM.
      +                          operationMode;
  5135  003616  C0A4  F049         	movff	_var_sys_NVM+12,_edit_Param+3	;volatile
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;sm_MenuConfiguration_MC50.c: 705:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.operationMode;
  5139  00361A  0EA4               	movlw	low (_var_sys_NVM+12)
  5140  00361C  D7E9               	goto	L13
  5141  00361E                     l22003:
  5142                           
  5143                           ; BSR set to: 0
  5144                           ;sm_MenuConfiguration_MC50.c: 710:                 {;sm_MenuConfiguration_MC50.c: 711:  
      +                                             edit_Param.Max=3;
  5145  00361E  0E03               	movlw	3
  5146  003620  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5147                           
  5148                           ; BSR set to: 0
  5149                           ;sm_MenuConfiguration_MC50.c: 713:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashLightMode;
  5150  003622  C0A5  F049         	movff	_var_sys_NVM+13,_edit_Param+3	;volatile
  5151                           
  5152                           ; BSR set to: 0
  5153                           ;sm_MenuConfiguration_MC50.c: 714:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashLightMode;
  5154  003626  0EA5               	movlw	low (_var_sys_NVM+13)
  5155  003628  D7E3               	goto	L13
  5156  00362A                     l22011:
  5157                           
  5158                           ; BSR set to: 0
  5159                           ;sm_MenuConfiguration_MC50.c: 719:                 {;sm_MenuConfiguration_MC50.c: 720:  
      +                                             edit_Param.Max=1;
  5160  00362A  0E01               	movlw	1
  5161  00362C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;sm_MenuConfiguration_MC50.c: 722:                     edit_Param.tempValue=var_sys_NVM.
      +                          programmingDistance;
  5165  00362E  C0A6  F049         	movff	_var_sys_NVM+14,_edit_Param+3	;volatile
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;sm_MenuConfiguration_MC50.c: 723:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.programmingDistance;
  5169  003632  0EA6               	movlw	low (_var_sys_NVM+14)
  5170  003634  D7DD               	goto	L13
  5171  003636                     l22021:
  5172                           
  5173                           ; BSR set to: 0
  5174  003636  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5175  003638  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5176  00363A  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5177                           
  5178                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5179                           ; Switch size 1, requested type "simple"
  5180                           ; Number of cases is 1, Range of values is 0 to 0
  5181                           ; switch strategies available:
  5182                           ; Name         Instructions Cycles
  5183                           ; simple_byte            4     3 (average)
  5184                           ;	Chosen strategy is simple_byte
  5185  00363C  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5186  00363E  0A00               	xorlw	0	; case 0
  5187  003640  A4D8               	btfss	status,2,c
  5188  003642  D250               	goto	l22275
  5189                           
  5190                           ; BSR set to: 0
  5191                           ; Switch size 1, requested type "simple"
  5192                           ; Number of cases is 10, Range of values is 0 to 9
  5193                           ; switch strategies available:
  5194                           ; Name         Instructions Cycles
  5195                           ; simple_byte           31    16 (average)
  5196                           ;	Chosen strategy is simple_byte
  5197  003644  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5198  003646  0A00               	xorlw	0	; case 0
  5199  003648  B4D8               	btfsc	status,2,c
  5200  00364A  D7C1               	goto	l21975
  5201  00364C  0A01               	xorlw	1	; case 1
  5202  00364E  B4D8               	btfsc	status,2,c
  5203  003650  D7C2               	goto	l21977
  5204  003652  0A03               	xorlw	3	; case 2
  5205  003654  B4D8               	btfsc	status,2,c
  5206  003656  D7C3               	goto	l21979
  5207  003658  0A01               	xorlw	1	; case 3
  5208  00365A  B4D8               	btfsc	status,2,c
  5209  00365C  D7C4               	goto	l21981
  5210  00365E  0A07               	xorlw	7	; case 4
  5211  003660  B4D8               	btfsc	status,2,c
  5212  003662  D7CB               	goto	l21989
  5213  003664  0A01               	xorlw	1	; case 5
  5214  003666  B4D8               	btfsc	status,2,c
  5215  003668  D7CC               	goto	l21991
  5216  00366A  0A03               	xorlw	3	; case 6
  5217  00366C  B4D8               	btfsc	status,2,c
  5218  00366E  D7CD               	goto	l21993
  5219  003670  0A01               	xorlw	1	; case 7
  5220  003672  B4D8               	btfsc	status,2,c
  5221  003674  D7CE               	goto	l21995
  5222  003676  0A0F               	xorlw	15	; case 8
  5223  003678  B4D8               	btfsc	status,2,c
  5224  00367A  D7D1               	goto	l22003
  5225  00367C  0A01               	xorlw	1	; case 9
  5226  00367E  B4D8               	btfsc	status,2,c
  5227  003680  D7D4               	goto	l22011
  5228  003682  D230               	goto	l22275
  5229  003684                     l3372:
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;sm_MenuConfiguration_MC50.c: 733:         {;sm_MenuConfiguration_MC50.c: 734:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  5233  003684  C168  F169         	movff	_menu_st+23,_menu_st+24
  5234                           
  5235                           ; BSR set to: 0
  5236                           ;sm_MenuConfiguration_MC50.c: 735:             edit_Param.Max=1;
  5237  003688  0E01               	movlw	1
  5238  00368A  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5239                           
  5240                           ;sm_MenuConfiguration_MC50.c: 736:             edit_Param.Min=0;
  5241  00368C  0E00               	movlw	0
  5242  00368E  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5243                           
  5244                           ;sm_MenuConfiguration_MC50.c: 737:             switch (ParameterSelected)
  5245  003690  D057               	goto	l22077
  5246  003692                     l22025:
  5247                           
  5248                           ; BSR set to: 0
  5249                           ;sm_MenuConfiguration_MC50.c: 740:                 {;sm_MenuConfiguration_MC50.c: 741:  
      +                                             load_New_Menu(E0_SMenu);
  5250  003692  0E0A               	movlw	10
  5251  003694  EC27  F025         	call	_load_New_Menu
  5252                           
  5253                           ;sm_MenuConfiguration_MC50.c: 742:                 };sm_MenuConfiguration_MC50.c: 743:  
      +                                         break;
  5254  003698  D225               	goto	l22275
  5255  00369A                     l22027:
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;sm_MenuConfiguration_MC50.c: 745:                 {;sm_MenuConfiguration_MC50.c: 748:  
      +                                             load_New_Menu(E1_SMenu);
  5259  00369A  0E0B               	movlw	11
  5260  00369C  EC27  F025         	call	_load_New_Menu
  5261                           
  5262                           ;sm_MenuConfiguration_MC50.c: 750:                 };sm_MenuConfiguration_MC50.c: 751:  
      +                                         break;
  5263  0036A0  D221               	goto	l22275
  5264  0036A2                     l22029:
  5265                           
  5266                           ; BSR set to: 0
  5267                           ;sm_MenuConfiguration_MC50.c: 753:                 {;sm_MenuConfiguration_MC50.c: 754:  
      +                                             edit_Param.Max=99;
  5268  0036A2  0E63               	movlw	99
  5269  0036A4  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5270                           
  5271                           ; BSR set to: 0
  5272                           ;sm_MenuConfiguration_MC50.c: 756:                     edit_Param.tempValue=var_sys_NVM.
      +                          ligthTime;
  5273  0036A6  C0AC  F049         	movff	_var_sys_NVM+20,_edit_Param+3	;volatile
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;sm_MenuConfiguration_MC50.c: 757:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.ligthTime;
  5277  0036AA  0EAC               	movlw	low (_var_sys_NVM+20)
  5278  0036AC  D7A1               	goto	L13
  5279  0036AE                     l22037:
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;sm_MenuConfiguration_MC50.c: 762:                 {;sm_MenuConfiguration_MC50.c: 763:  
      +                                            edit_Param.Max=9;
  5283  0036AE  0E09               	movlw	9
  5284  0036B0  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5285                           
  5286                           ;sm_MenuConfiguration_MC50.c: 764:                    edit_Param.Min=1;
  5287  0036B2  0E01               	movlw	1
  5288  0036B4  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;sm_MenuConfiguration_MC50.c: 765:                    edit_Param.tempValue=var_sys_NVM.f
      +                          olow_me;
  5292  0036B6  C0AD  F049         	movff	_var_sys_NVM+21,_edit_Param+3	;volatile
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;sm_MenuConfiguration_MC50.c: 766:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.folow_me;
  5296  0036BA  0EAD               	movlw	low (_var_sys_NVM+21)
  5297  0036BC  D799               	goto	L13
  5298  0036BE                     l3380:
  5299                           
  5300                           ; BSR set to: 0
  5301                           ;sm_MenuConfiguration_MC50.c: 778:                 {;sm_MenuConfiguration_MC50.c: 779:  
      +                                            edit_Param.tempValue=var_sys_NVM.electricBrake;
  5302  0036BE  C0AF  F049         	movff	_var_sys_NVM+23,_edit_Param+3	;volatile
  5303                           
  5304                           ; BSR set to: 0
  5305                           ;sm_MenuConfiguration_MC50.c: 780:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.electricBrake;
  5306  0036C2  0EAF               	movlw	low (_var_sys_NVM+23)
  5307  0036C4  D795               	goto	L13
  5308  0036C6                     l22049:
  5309                           
  5310                           ; BSR set to: 0
  5311                           ;sm_MenuConfiguration_MC50.c: 785:                 {;sm_MenuConfiguration_MC50.c: 786:  
      +                                             edit_Param.Max=9;
  5312  0036C6  0E09               	movlw	9
  5313  0036C8  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5314                           
  5315                           ;sm_MenuConfiguration_MC50.c: 787:                     edit_Param.Min=1;
  5316  0036CA  0E01               	movlw	1
  5317  0036CC  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5318                           
  5319                           ; BSR set to: 0
  5320                           ;sm_MenuConfiguration_MC50.c: 788:                     edit_Param.tempValue=var_sys_NVM.
      +                          velocityDecelaration;
  5321  0036CE  C0B0  F049         	movff	_var_sys_NVM+24,_edit_Param+3	;volatile
  5322                           
  5323                           ; BSR set to: 0
  5324                           ;sm_MenuConfiguration_MC50.c: 789:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.velocityDecelaration;
  5325  0036D2  0EB0               	movlw	low (_var_sys_NVM+24)
  5326  0036D4  D78D               	goto	L13
  5327  0036D6                     l22057:
  5328                           
  5329                           ; BSR set to: 0
  5330                           ;sm_MenuConfiguration_MC50.c: 794:                 {;sm_MenuConfiguration_MC50.c: 795:  
      +                                             edit_Param.tempValue=0;
  5331  0036D6  0E00               	movlw	0
  5332  0036D8  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5333                           
  5334                           ;sm_MenuConfiguration_MC50.c: 796:                     ts_system.timeoutMenu=0;
  5335  0036DA  0E00               	movlw	0
  5336  0036DC  0101               	movlb	1	; () banked
  5337  0036DE  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  5338  0036E0  0E00               	movlw	0
  5339  0036E2  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  5340                           
  5341                           ;sm_MenuConfiguration_MC50.c: 798:                     auxCounter=10000;
  5342  0036E4  0E27               	movlw	39
  5343  0036E6  0100               	movlb	0	; () banked
  5344  0036E8  6FFD               	movwf	(_auxCounter+1)& (0+255),b
  5345  0036EA  0E10               	movlw	16
  5346  0036EC  6FFC               	movwf	_auxCounter& (0+255),b
  5347                           
  5348                           ;sm_MenuConfiguration_MC50.c: 799:                     ts_system.timeBetweenSaveCounters
      +                          =0;
  5349  0036EE  0E00               	movlw	0
  5350  0036F0  0101               	movlb	1	; () banked
  5351  0036F2  6FC5               	movwf	(_ts_system+39)& (0+255),b	;volatile
  5352  0036F4  0E00               	movlw	0
  5353  0036F6  6FC4               	movwf	(_ts_system+38)& (0+255),b	;volatile
  5354                           
  5355                           ; BSR set to: 1
  5356                           ;sm_MenuConfiguration_MC50.c: 800:                     tempCounter=var_sys.actualCounter
      +                          Moves;
  5357  0036F8  C13C  F2F6         	movff	_var_sys+60,_tempCounter	;volatile
  5358  0036FC  C13D  F2F7         	movff	_var_sys+61,_tempCounter+1	;volatile
  5359  003700  C13E  F2F8         	movff	_var_sys+62,_tempCounter+2	;volatile
  5360  003704  C13F  F2F9         	movff	_var_sys+63,_tempCounter+3	;volatile
  5361                           
  5362                           ; BSR set to: 1
  5363                           ;sm_MenuConfiguration_MC50.c: 801:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_showCounter);
  5364  003708  0EBD               	movlw	low _menuConfiguration_stateMachine
  5365  00370A  6E12               	movwf	sm_send_event@psm^0,c
  5366  00370C  0E02               	movlw	high _menuConfiguration_stateMachine
  5367  00370E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5368  003710  0E00               	movlw	0
  5369  003712  6E15               	movwf	(sm_send_event@event+1)^0,c
  5370  003714  0E05               	movlw	5
  5371  003716  6E14               	movwf	sm_send_event@event^0,c
  5372  003718  ECDC  F047         	call	_sm_send_event	;wreg free
  5373                           
  5374                           ;sm_MenuConfiguration_MC50.c: 802:                 };sm_MenuConfiguration_MC50.c: 803:  
      +                                         break;
  5375  00371C  D1E3               	goto	l22275
  5376  00371E                     l22063:
  5377                           
  5378                           ; BSR set to: 0
  5379                           ;sm_MenuConfiguration_MC50.c: 805:                 {;sm_MenuConfiguration_MC50.c: 806:  
      +                                             edit_Param.tempValue=0;
  5380  00371E  0E00               	movlw	0
  5381  003720  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5382                           
  5383                           ;sm_MenuConfiguration_MC50.c: 807:                     haveValueToEdit=1;
  5384  003722  0E01               	movlw	1
  5385  003724  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5386                           
  5387                           ; BSR set to: 0
  5388                           ;sm_MenuConfiguration_MC50.c: 808:                     edit_Param.Value = 0;
  5389  003726  0E00               	movlw	0
  5390  003728  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5391  00372A  0E00               	movlw	0
  5392  00372C  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  5393                           
  5394                           ;sm_MenuConfiguration_MC50.c: 809:                 };sm_MenuConfiguration_MC50.c: 810:  
      +                                         break;
  5395  00372E  D1DA               	goto	l22275
  5396  003730                     l22067:
  5397                           
  5398                           ; BSR set to: 0
  5399                           ;sm_MenuConfiguration_MC50.c: 812:                 {;sm_MenuConfiguration_MC50.c: 813:  
      +                                             edit_Param.Max=3;
  5400  003730  0E03               	movlw	3
  5401  003732  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5402                           
  5403                           ;sm_MenuConfiguration_MC50.c: 814:                     edit_Param.Min=0;
  5404  003734  0E00               	movlw	0
  5405  003736  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5406                           
  5407                           ; BSR set to: 0
  5408                           ;sm_MenuConfiguration_MC50.c: 815:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashRGBMode;
  5409  003738  C0B1  F049         	movff	_var_sys_NVM+25,_edit_Param+3	;volatile
  5410                           
  5411                           ; BSR set to: 0
  5412                           ;sm_MenuConfiguration_MC50.c: 816:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashRGBMode;
  5413  00373C  0EB1               	movlw	low (_var_sys_NVM+25)
  5414  00373E  D758               	goto	L13
  5415  003740                     l22077:
  5416                           
  5417                           ; BSR set to: 0
  5418  003740  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5419  003742  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5420  003744  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5421                           
  5422                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5423                           ; Switch size 1, requested type "simple"
  5424                           ; Number of cases is 1, Range of values is 0 to 0
  5425                           ; switch strategies available:
  5426                           ; Name         Instructions Cycles
  5427                           ; simple_byte            4     3 (average)
  5428                           ;	Chosen strategy is simple_byte
  5429  003746  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5430  003748  0A00               	xorlw	0	; case 0
  5431  00374A  A4D8               	btfss	status,2,c
  5432  00374C  D1CB               	goto	l22275
  5433                           
  5434                           ; BSR set to: 0
  5435                           ; Switch size 1, requested type "simple"
  5436                           ; Number of cases is 10, Range of values is 0 to 9
  5437                           ; switch strategies available:
  5438                           ; Name         Instructions Cycles
  5439                           ; simple_byte           31    16 (average)
  5440                           ;	Chosen strategy is simple_byte
  5441  00374E  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5442  003750  0A00               	xorlw	0	; case 0
  5443  003752  B4D8               	btfsc	status,2,c
  5444  003754  D79E               	goto	l22025
  5445  003756  0A01               	xorlw	1	; case 1
  5446  003758  B4D8               	btfsc	status,2,c
  5447  00375A  D79F               	goto	l22027
  5448  00375C  0A03               	xorlw	3	; case 2
  5449  00375E  B4D8               	btfsc	status,2,c
  5450  003760  D7A0               	goto	l22029
  5451  003762  0A01               	xorlw	1	; case 3
  5452  003764  B4D8               	btfsc	status,2,c
  5453  003766  D7A3               	goto	l22037
  5454  003768  0A07               	xorlw	7	; case 4
  5455  00376A  B4D8               	btfsc	status,2,c
  5456  00376C  D1BB               	goto	l22275
  5457  00376E  0A01               	xorlw	1	; case 5
  5458  003770  B4D8               	btfsc	status,2,c
  5459  003772  D7A5               	goto	l3380
  5460  003774  0A03               	xorlw	3	; case 6
  5461  003776  B4D8               	btfsc	status,2,c
  5462  003778  D7A6               	goto	l22049
  5463  00377A  0A01               	xorlw	1	; case 7
  5464  00377C  B4D8               	btfsc	status,2,c
  5465  00377E  D7AB               	goto	l22057
  5466  003780  0A0F               	xorlw	15	; case 8
  5467  003782  B4D8               	btfsc	status,2,c
  5468  003784  D7CC               	goto	l22063
  5469  003786  0A01               	xorlw	1	; case 9
  5470  003788  B4D8               	btfsc	status,2,c
  5471  00378A  D7D2               	goto	l22067
  5472  00378C  D1AB               	goto	l22275
  5473  00378E                     l22079:
  5474                           
  5475                           ; BSR set to: 0
  5476                           ;sm_MenuConfiguration_MC50.c: 829:                 {;sm_MenuConfiguration_MC50.c: 830:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5477  00378E  0EBD               	movlw	low _menuConfiguration_stateMachine
  5478  003790  6E12               	movwf	sm_send_event@psm^0,c
  5479  003792  0E02               	movlw	high _menuConfiguration_stateMachine
  5480  003794  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5481  003796  0E00               	movlw	0
  5482  003798  6E15               	movwf	(sm_send_event@event+1)^0,c
  5483  00379A  0E14               	movlw	20
  5484  00379C  6E14               	movwf	sm_send_event@event^0,c
  5485  00379E  ECDC  F047         	call	_sm_send_event	;wreg free
  5486                           
  5487                           ;sm_MenuConfiguration_MC50.c: 831:                  sm_send_event(&controlGate_stateMach
      +                          ine,ev_SartLearning );
  5488  0037A2  0EE6               	movlw	low _controlGate_stateMachine
  5489  0037A4  6E12               	movwf	sm_send_event@psm^0,c
  5490  0037A6  0E01               	movlw	high _controlGate_stateMachine
  5491  0037A8  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5492  0037AA  0E00               	movlw	0
  5493  0037AC  6E15               	movwf	(sm_send_event@event+1)^0,c
  5494  0037AE  0E14               	movlw	20
  5495  0037B0  6E14               	movwf	sm_send_event@event^0,c
  5496  0037B2  ECDC  F047         	call	_sm_send_event	;wreg free
  5497                           
  5498                           ;sm_MenuConfiguration_MC50.c: 832:                  var_sys.LearningIsEnabled=YES;
  5499  0037B6  0E01               	movlw	1
  5500  0037B8  0101               	movlb	1	; () banked
  5501  0037BA  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5502                           
  5503                           ; BSR set to: 1
  5504                           ;sm_MenuConfiguration_MC50.c: 833:                  var_sys.programinAutomatic = Automat
      +                          ic;
  5505  0037BC  0E00               	movlw	0
  5506  0037BE  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5507                           
  5508                           ; BSR set to: 1
  5509                           ;sm_MenuConfiguration_MC50.c: 834:                  SaveNVM_VarSystem(pageMemoryE);
  5510  0037C0  0E01               	movlw	1
  5511  0037C2  ECEA  F04B         	call	_SaveNVM_VarSystem
  5512                           
  5513                           ;sm_MenuConfiguration_MC50.c: 837:                 };sm_MenuConfiguration_MC50.c: 838:  
      +                                         break;
  5514  0037C6  D18E               	goto	l22275
  5515  0037C8                     l22087:
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;sm_MenuConfiguration_MC50.c: 840:                 {;sm_MenuConfiguration_MC50.c: 841:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5519  0037C8  0EBD               	movlw	low _menuConfiguration_stateMachine
  5520  0037CA  6E12               	movwf	sm_send_event@psm^0,c
  5521  0037CC  0E02               	movlw	high _menuConfiguration_stateMachine
  5522  0037CE  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5523  0037D0  0E00               	movlw	0
  5524  0037D2  6E15               	movwf	(sm_send_event@event+1)^0,c
  5525  0037D4  0E14               	movlw	20
  5526  0037D6  6E14               	movwf	sm_send_event@event^0,c
  5527  0037D8  ECDC  F047         	call	_sm_send_event	;wreg free
  5528                           
  5529                           ;sm_MenuConfiguration_MC50.c: 842:                  sm_send_event(&controlGate_stateMach
      +                          ine, ev_SartLearning);
  5530  0037DC  0EE6               	movlw	low _controlGate_stateMachine
  5531  0037DE  6E12               	movwf	sm_send_event@psm^0,c
  5532  0037E0  0E01               	movlw	high _controlGate_stateMachine
  5533  0037E2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5534  0037E4  0E00               	movlw	0
  5535  0037E6  6E15               	movwf	(sm_send_event@event+1)^0,c
  5536  0037E8  0E14               	movlw	20
  5537  0037EA  6E14               	movwf	sm_send_event@event^0,c
  5538  0037EC  ECDC  F047         	call	_sm_send_event	;wreg free
  5539                           
  5540                           ;sm_MenuConfiguration_MC50.c: 843:                  var_sys.LearningIsEnabled=YES;
  5541  0037F0  0E01               	movlw	1
  5542  0037F2  0101               	movlb	1	; () banked
  5543  0037F4  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5544                           
  5545                           ; BSR set to: 1
  5546                           ;sm_MenuConfiguration_MC50.c: 844:                  var_sys.programinAutomatic = Manual;
  5547  0037F6  0E01               	movlw	1
  5548  0037F8  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5549                           
  5550                           ; BSR set to: 1
  5551                           ;sm_MenuConfiguration_MC50.c: 845:                  SaveNVM_VarSystem(pageMemoryE);
  5552  0037FA  0E01               	movlw	1
  5553  0037FC  ECEA  F04B         	call	_SaveNVM_VarSystem
  5554                           
  5555                           ;sm_MenuConfiguration_MC50.c: 848:                 };sm_MenuConfiguration_MC50.c: 849:  
      +                                         break;
  5556  003800  D171               	goto	l22275
  5557  003802                     l3390:
  5558                           
  5559                           ; BSR set to: 0
  5560                           ;sm_MenuConfiguration_MC50.c: 851:                 {;sm_MenuConfiguration_MC50.c: 852:  
      +                                          edit_Param.tempValue=var_sys_NVM.TypeofMotor;
  5561  003802  C0B4  F049         	movff	_var_sys_NVM+28,_edit_Param+3	;volatile
  5562                           
  5563                           ; BSR set to: 0
  5564                           ;sm_MenuConfiguration_MC50.c: 853:                  load_New_Menu(TypeMotor_Menu);
  5565  003806  0E03               	movlw	3
  5566  003808  EC27  F025         	call	_load_New_Menu
  5567                           
  5568                           ;sm_MenuConfiguration_MC50.c: 854:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.TypeofMotor;
  5569  00380C  0EB4               	movlw	low (_var_sys_NVM+28)
  5570  00380E  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5571  003810  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5572                           
  5573                           ;sm_MenuConfiguration_MC50.c: 855:                  haveValueToEdit=1;
  5574  003812  0E01               	movlw	1
  5575  003814  0100               	movlb	0	; () banked
  5576  003816  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;sm_MenuConfiguration_MC50.c: 856:                  edit_Param.Max=2;
  5580  003818  0E02               	movlw	2
  5581  00381A  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5582                           
  5583                           ; BSR set to: 0
  5584                           ;sm_MenuConfiguration_MC50.c: 857:                  edit_Param.Min=0;
  5585  00381C  0E00               	movlw	0
  5586  00381E  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5587                           
  5588                           ;sm_MenuConfiguration_MC50.c: 859:                 };sm_MenuConfiguration_MC50.c: 860:  
      +                                         break;
  5589  003820  D161               	goto	l22275
  5590  003822                     l3391:
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;sm_MenuConfiguration_MC50.c: 862:                 {;sm_MenuConfiguration_MC50.c: 863:  
      +                                          edit_Param.tempValue=var_sys_NVM.Direction_motor;
  5594  003822  C0B3  F049         	movff	_var_sys_NVM+27,_edit_Param+3	;volatile
  5595                           
  5596                           ; BSR set to: 0
  5597                           ;sm_MenuConfiguration_MC50.c: 864:                  load_New_Menu(Direction_Menu);
  5598  003826  0E02               	movlw	2
  5599  003828  EC27  F025         	call	_load_New_Menu
  5600                           
  5601                           ;sm_MenuConfiguration_MC50.c: 865:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.Direction_motor;
  5602  00382C  0EB3               	movlw	low (_var_sys_NVM+27)
  5603  00382E  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5604  003830  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5605                           
  5606                           ;sm_MenuConfiguration_MC50.c: 866:                  haveValueToEdit=1;
  5607  003832  0E01               	movlw	1
  5608  003834  0100               	movlb	0	; () banked
  5609  003836  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5610                           
  5611                           ; BSR set to: 0
  5612                           ;sm_MenuConfiguration_MC50.c: 867:                  edit_Param.Max=1;
  5613  003838  0E01               	movlw	1
  5614  00383A  D7EF               	goto	L14
  5615  00383C                     l22117:
  5616                           
  5617                           ; BSR set to: 0
  5618  00383C  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5619  00383E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5620  003840  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5621                           
  5622                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5623                           ; Switch size 1, requested type "simple"
  5624                           ; Number of cases is 1, Range of values is 0 to 0
  5625                           ; switch strategies available:
  5626                           ; Name         Instructions Cycles
  5627                           ; simple_byte            4     3 (average)
  5628                           ;	Chosen strategy is simple_byte
  5629  003842  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5630  003844  0A00               	xorlw	0	; case 0
  5631  003846  A4D8               	btfss	status,2,c
  5632  003848  D14D               	goto	l22275
  5633                           
  5634                           ; BSR set to: 0
  5635                           ; Switch size 1, requested type "simple"
  5636                           ; Number of cases is 4, Range of values is 0 to 3
  5637                           ; switch strategies available:
  5638                           ; Name         Instructions Cycles
  5639                           ; simple_byte           13     7 (average)
  5640                           ;	Chosen strategy is simple_byte
  5641  00384A  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5642  00384C  0A00               	xorlw	0	; case 0
  5643  00384E  B4D8               	btfsc	status,2,c
  5644  003850  D79E               	goto	l22079
  5645  003852  0A01               	xorlw	1	; case 1
  5646  003854  B4D8               	btfsc	status,2,c
  5647  003856  D7B8               	goto	l22087
  5648  003858  0A03               	xorlw	3	; case 2
  5649  00385A  B4D8               	btfsc	status,2,c
  5650  00385C  D7D2               	goto	l3390
  5651  00385E  0A01               	xorlw	1	; case 3
  5652  003860  B4D8               	btfsc	status,2,c
  5653  003862  D7DF               	goto	l3391
  5654  003864  D13F               	goto	l22275
  5655  003866                     l22119:
  5656                           
  5657                           ; BSR set to: 0
  5658                           ;sm_MenuConfiguration_MC50.c: 883:                 {;sm_MenuConfiguration_MC50.c: 884:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationOpen;
  5659  003866  0E98               	movlw	low _var_sys_NVM
  5660  003868  D001               	goto	L15
  5661  00386A                     l22121:
  5662                           
  5663                           ; BSR set to: 0
  5664                           ;sm_MenuConfiguration_MC50.c: 888:                 {;sm_MenuConfiguration_MC50.c: 889:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationClose;
  5665  00386A  0E99               	movlw	low (_var_sys_NVM+1)
  5666  00386C                     L15:
  5667  00386C  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5668  00386E  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5669                           
  5670                           ;sm_MenuConfiguration_MC50.c: 890:                 };sm_MenuConfiguration_MC50.c: 891:  
      +                                         break;
  5671  003870  D00E               	goto	l22127
  5672  003872                     l22125:
  5673                           
  5674                           ; BSR set to: 0
  5675  003872  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5676  003874  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5677  003876  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5678                           
  5679                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5680                           ; Switch size 1, requested type "simple"
  5681                           ; Number of cases is 1, Range of values is 0 to 0
  5682                           ; switch strategies available:
  5683                           ; Name         Instructions Cycles
  5684                           ; simple_byte            4     3 (average)
  5685                           ;	Chosen strategy is simple_byte
  5686  003878  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5687  00387A  0A00               	xorlw	0	; case 0
  5688  00387C  A4D8               	btfss	status,2,c
  5689  00387E  D007               	goto	l22127
  5690                           
  5691                           ; BSR set to: 0
  5692                           ; Switch size 1, requested type "simple"
  5693                           ; Number of cases is 2, Range of values is 0 to 1
  5694                           ; switch strategies available:
  5695                           ; Name         Instructions Cycles
  5696                           ; simple_byte            7     4 (average)
  5697                           ;	Chosen strategy is simple_byte
  5698  003880  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5699  003882  0A00               	xorlw	0	; case 0
  5700  003884  B4D8               	btfsc	status,2,c
  5701  003886  D7EF               	goto	l22119
  5702  003888  0A01               	xorlw	1	; case 1
  5703  00388A  B4D8               	btfsc	status,2,c
  5704  00388C  D7EE               	goto	l22121
  5705  00388E                     l22127:
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;sm_MenuConfiguration_MC50.c: 895:                 edit_Param.Max=45;
  5709  00388E  0E2D               	movlw	45
  5710  003890                     L29:
  5711  003890  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5712                           
  5713                           ;sm_MenuConfiguration_MC50.c: 896:                 edit_Param.Min=0;
  5714  003892  0E00               	movlw	0
  5715  003894  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5716  003896                     L19:
  5717                           
  5718                           ;sm_MenuConfiguration_MC50.c: 899:             haveValueToEdit=1;
  5719  003896  0E01               	movlw	1
  5720  003898  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5721                           
  5722                           ; BSR set to: 0
  5723                           ;sm_MenuConfiguration_MC50.c: 900:             edit_Param.tempValue= edit_Param.Value[0]
      +                          ;
  5724  00389A  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  5725  00389E  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  5726  0038A2  50DF               	movf	indf2,w,c
  5727  0038A4  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5728                           
  5729                           ;sm_MenuConfiguration_MC50.c: 901:         };sm_MenuConfiguration_MC50.c: 902:         b
      +                          reak;
  5730  0038A6  D11E               	goto	l22275
  5731  0038A8                     l22131:
  5732                           
  5733                           ; BSR set to: 0
  5734                           ;sm_MenuConfiguration_MC50.c: 904:         {;sm_MenuConfiguration_MC50.c: 905:          
      +                             edit_Param.Max=9;
  5735  0038A8  0E09               	movlw	9
  5736  0038AA  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5737                           
  5738                           ;sm_MenuConfiguration_MC50.c: 906:             edit_Param.Min=0;
  5739  0038AC  0E00               	movlw	0
  5740  0038AE  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5741                           
  5742                           ;sm_MenuConfiguration_MC50.c: 907:             switch (ParameterSelected)
  5743  0038B0  D00F               	goto	l22147
  5744  0038B2                     l22133:
  5745                           
  5746                           ; BSR set to: 0
  5747                           ;sm_MenuConfiguration_MC50.c: 910:                 {;sm_MenuConfiguration_MC50.c: 911:  
      +                                               if (var_sys_NVM.motorSensitivity <2)
  5748  0038B2  0E02               	movlw	2
  5749  0038B4  619B               	cpfslt	(_var_sys_NVM+3)& (0+255),b	;volatile
  5750  0038B6  D002               	goto	l22137
  5751                           
  5752                           ; BSR set to: 0
  5753                           ;sm_MenuConfiguration_MC50.c: 912:                       {;sm_MenuConfiguration_MC50.c: 
      +                          913:                         edit_Param.Min=0;
  5754  0038B8  0E00               	movlw	0
  5755  0038BA  D001               	goto	L16
  5756  0038BC                     l22137:
  5757                           
  5758                           ; BSR set to: 0
  5759                           ;sm_MenuConfiguration_MC50.c: 916:                       {;sm_MenuConfiguration_MC50.c: 
      +                          917:                         edit_Param.Min=9;
  5760  0038BC  0E09               	movlw	9
  5761  0038BE                     L16:
  5762  0038BE  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5763                           
  5764                           ; BSR set to: 0
  5765                           ;sm_MenuConfiguration_MC50.c: 919:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.motorPower;
  5766  0038C0  0E9A               	movlw	low (_var_sys_NVM+2)
  5767  0038C2  D003               	goto	L18
  5768  0038C4                     l22141:
  5769                           
  5770                           ; BSR set to: 0
  5771                           ;sm_MenuConfiguration_MC50.c: 923:                 {;sm_MenuConfiguration_MC50.c: 924:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.motorSensitivity;
  5772  0038C4  0E9B               	movlw	low (_var_sys_NVM+3)
  5773  0038C6  D001               	goto	L18
  5774  0038C8                     l22143:
  5775                           
  5776                           ; BSR set to: 0
  5777                           ;sm_MenuConfiguration_MC50.c: 928:                 {;sm_MenuConfiguration_MC50.c: 929:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationSensivity;
  5778  0038C8  0EA7               	movlw	low (_var_sys_NVM+15)
  5779  0038CA                     L18:
  5780  0038CA  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5781  0038CC  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5782                           
  5783                           ;sm_MenuConfiguration_MC50.c: 930:                 };sm_MenuConfiguration_MC50.c: 931:  
      +                                         break;
  5784  0038CE  D7E3               	goto	L19
  5785  0038D0                     l22147:
  5786                           
  5787                           ; BSR set to: 0
  5788  0038D0  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5789  0038D2  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5790  0038D4  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5791                           
  5792                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5793                           ; Switch size 1, requested type "simple"
  5794                           ; Number of cases is 1, Range of values is 0 to 0
  5795                           ; switch strategies available:
  5796                           ; Name         Instructions Cycles
  5797                           ; simple_byte            4     3 (average)
  5798                           ;	Chosen strategy is simple_byte
  5799  0038D6  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5800  0038D8  0A00               	xorlw	0	; case 0
  5801  0038DA  A4D8               	btfss	status,2,c
  5802  0038DC  D7DC               	goto	L19
  5803                           
  5804                           ; BSR set to: 0
  5805                           ; Switch size 1, requested type "simple"
  5806                           ; Number of cases is 3, Range of values is 0 to 2
  5807                           ; switch strategies available:
  5808                           ; Name         Instructions Cycles
  5809                           ; simple_byte           10     6 (average)
  5810                           ;	Chosen strategy is simple_byte
  5811  0038DE  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5812  0038E0  0A00               	xorlw	0	; case 0
  5813  0038E2  B4D8               	btfsc	status,2,c
  5814  0038E4  D7E6               	goto	l22133
  5815  0038E6  0A01               	xorlw	1	; case 1
  5816  0038E8  B4D8               	btfsc	status,2,c
  5817  0038EA  D7EC               	goto	l22141
  5818  0038EC  0A03               	xorlw	3	; case 2
  5819  0038EE  B4D8               	btfsc	status,2,c
  5820  0038F0  D7EB               	goto	l22143
  5821  0038F2  D7D1               	goto	L19
  5822  0038F4                     l22153:
  5823                           
  5824                           ; BSR set to: 0
  5825                           ;sm_MenuConfiguration_MC50.c: 942:                 {;sm_MenuConfiguration_MC50.c: 943:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeFullClose;
  5826  0038F4  0E9D               	movlw	low (_var_sys_NVM+5)
  5827  0038F6  D001               	goto	L20
  5828  0038F8                     l22155:
  5829                           
  5830                           ; BSR set to: 0
  5831                           ;sm_MenuConfiguration_MC50.c: 947:                 {;sm_MenuConfiguration_MC50.c: 948:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeWalkClose;
  5832  0038F8  0E9E               	movlw	low (_var_sys_NVM+6)
  5833  0038FA                     L20:
  5834  0038FA  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5835  0038FC  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5836                           
  5837                           ;sm_MenuConfiguration_MC50.c: 949:                 };sm_MenuConfiguration_MC50.c: 950:  
      +                                         break;
  5838  0038FE  D00E               	goto	l22161
  5839  003900                     l22159:
  5840                           
  5841                           ; BSR set to: 0
  5842  003900  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5843  003902  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5844  003904  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5845                           
  5846                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5847                           ; Switch size 1, requested type "simple"
  5848                           ; Number of cases is 1, Range of values is 0 to 0
  5849                           ; switch strategies available:
  5850                           ; Name         Instructions Cycles
  5851                           ; simple_byte            4     3 (average)
  5852                           ;	Chosen strategy is simple_byte
  5853  003906  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5854  003908  0A00               	xorlw	0	; case 0
  5855  00390A  A4D8               	btfss	status,2,c
  5856  00390C  D007               	goto	l22161
  5857                           
  5858                           ; BSR set to: 0
  5859                           ; Switch size 1, requested type "simple"
  5860                           ; Number of cases is 2, Range of values is 0 to 1
  5861                           ; switch strategies available:
  5862                           ; Name         Instructions Cycles
  5863                           ; simple_byte            7     4 (average)
  5864                           ;	Chosen strategy is simple_byte
  5865  00390E  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5866  003910  0A00               	xorlw	0	; case 0
  5867  003912  B4D8               	btfsc	status,2,c
  5868  003914  D7EF               	goto	l22153
  5869  003916  0A01               	xorlw	1	; case 1
  5870  003918  B4D8               	btfsc	status,2,c
  5871  00391A  D7EE               	goto	l22155
  5872  00391C                     l22161:
  5873                           
  5874                           ; BSR set to: 0
  5875                           ;sm_MenuConfiguration_MC50.c: 952:             edit_Param.Max=99;
  5876  00391C  0E63               	movlw	99
  5877  00391E  D7B8               	goto	L29
  5878  003920                     l22165:
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;sm_MenuConfiguration_MC50.c: 963:                 {;sm_MenuConfiguration_MC50.c: 964:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellIsON;
  5882  003920  0E9F               	movlw	low (_var_sys_NVM+7)
  5883  003922  D034               	goto	L127
  5884  003924                     l22167:
  5885                           
  5886                           ; BSR set to: 0
  5887                           ;sm_MenuConfiguration_MC50.c: 968:                 {;sm_MenuConfiguration_MC50.c: 969:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellInOpen;
  5888  003924  0EA0               	movlw	low (_var_sys_NVM+8)
  5889  003926  D032               	goto	L127
  5890  003928                     l22171:
  5891                           
  5892                           ; BSR set to: 0
  5893  003928  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5894  00392A  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5895  00392C  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5896                           
  5897                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5898                           ; Switch size 1, requested type "simple"
  5899                           ; Number of cases is 1, Range of values is 0 to 0
  5900                           ; switch strategies available:
  5901                           ; Name         Instructions Cycles
  5902                           ; simple_byte            4     3 (average)
  5903                           ;	Chosen strategy is simple_byte
  5904  00392E  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5905  003930  0A00               	xorlw	0	; case 0
  5906  003932  A4D8               	btfss	status,2,c
  5907  003934  D02D               	goto	L126
  5908                           
  5909                           ; BSR set to: 0
  5910                           ; Switch size 1, requested type "simple"
  5911                           ; Number of cases is 2, Range of values is 0 to 1
  5912                           ; switch strategies available:
  5913                           ; Name         Instructions Cycles
  5914                           ; simple_byte            7     4 (average)
  5915                           ;	Chosen strategy is simple_byte
  5916  003936  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5917  003938  0A00               	xorlw	0	; case 0
  5918  00393A  B4D8               	btfsc	status,2,c
  5919  00393C  D7F1               	goto	l22165
  5920  00393E  0A01               	xorlw	1	; case 1
  5921  003940  B4D8               	btfsc	status,2,c
  5922  003942  D7F0               	goto	l22167
  5923  003944  D025               	goto	L126
  5924  003946                     l22177:
  5925                           
  5926                           ; BSR set to: 0
  5927                           ;sm_MenuConfiguration_MC50.c: 984:                 {;sm_MenuConfiguration_MC50.c: 985:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandIsON;
  5928  003946  0EA1               	movlw	low (_var_sys_NVM+9)
  5929  003948  D021               	goto	L127
  5930  00394A                     l22179:
  5931                           
  5932                           ; BSR set to: 0
  5933                           ;sm_MenuConfiguration_MC50.c: 989:                 {;sm_MenuConfiguration_MC50.c: 990:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandType;
  5934  00394A  0EA2               	movlw	low (_var_sys_NVM+10)
  5935  00394C  D01F               	goto	L127
  5936  00394E                     l22181:
  5937                           
  5938                           ; BSR set to: 0
  5939                           ;sm_MenuConfiguration_MC50.c: 994:                 {;sm_MenuConfiguration_MC50.c: 995:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandInOpen;
  5940  00394E  0EA3               	movlw	low (_var_sys_NVM+11)
  5941  003950  D01D               	goto	L127
  5942  003952                     l22183:
  5943                           
  5944                           ; BSR set to: 0
  5945                           ;sm_MenuConfiguration_MC50.c: 999:                 {;sm_MenuConfiguration_MC50.c: 1000: 
      +                                              edit_Param.Value=(unsigned char*)&var_sys_NVM.Stopboton;
  5946  003952  0EAE               	movlw	low (_var_sys_NVM+22)
  5947  003954  D01B               	goto	L127
  5948  003956                     l22187:
  5949                           
  5950                           ; BSR set to: 0
  5951  003956  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5952  003958  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5953  00395A  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5954                           
  5955                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5956                           ; Switch size 1, requested type "simple"
  5957                           ; Number of cases is 1, Range of values is 0 to 0
  5958                           ; switch strategies available:
  5959                           ; Name         Instructions Cycles
  5960                           ; simple_byte            4     3 (average)
  5961                           ;	Chosen strategy is simple_byte
  5962  00395C  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5963  00395E  0A00               	xorlw	0	; case 0
  5964  003960  A4D8               	btfss	status,2,c
  5965  003962  D016               	goto	L126
  5966                           
  5967                           ; BSR set to: 0
  5968                           ; Switch size 1, requested type "simple"
  5969                           ; Number of cases is 4, Range of values is 0 to 3
  5970                           ; switch strategies available:
  5971                           ; Name         Instructions Cycles
  5972                           ; simple_byte           13     7 (average)
  5973                           ;	Chosen strategy is simple_byte
  5974  003964  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5975  003966  0A00               	xorlw	0	; case 0
  5976  003968  B4D8               	btfsc	status,2,c
  5977  00396A  D7ED               	goto	l22177
  5978  00396C  0A01               	xorlw	1	; case 1
  5979  00396E  B4D8               	btfsc	status,2,c
  5980  003970  D7EC               	goto	l22179
  5981  003972  0A03               	xorlw	3	; case 2
  5982  003974  B4D8               	btfsc	status,2,c
  5983  003976  D7EB               	goto	l22181
  5984  003978  0A01               	xorlw	1	; case 3
  5985  00397A  B4D8               	btfsc	status,2,c
  5986  00397C  D7EA               	goto	l22183
  5987  00397E  D008               	goto	L126
  5988  003980                     l22193:
  5989                           
  5990                           ; BSR set to: 0
  5991                           ;sm_MenuConfiguration_MC50.c: 1018:                 {;sm_MenuConfiguration_MC50.c: 1019:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.homemPresente;
  5992  003980  0EA8               	movlw	low (_var_sys_NVM+16)
  5993  003982  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5994  003984  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5995                           
  5996                           ; BSR set to: 0
  5997                           ;sm_MenuConfiguration_MC50.c: 1020:                       edit_Param.Max=2;
  5998  003986  0E02               	movlw	2
  5999  003988  D783               	goto	L29
  6000  00398A                     l22199:
  6001                           
  6002                           ; BSR set to: 0
  6003                           ;sm_MenuConfiguration_MC50.c: 1025:                 {;sm_MenuConfiguration_MC50.c: 1026:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.logicDigital;
  6004  00398A  0EA9               	movlw	low (_var_sys_NVM+17)
  6005  00398C                     L127:
  6006  00398C  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6007  00398E  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  6008  003990                     L126:
  6009                           
  6010                           ; BSR set to: 0
  6011                           ;sm_MenuConfiguration_MC50.c: 1027:                     edit_Param.Max=1;
  6012  003990  0E01               	movlw	1
  6013  003992  D77E               	goto	L29
  6014  003994                     l22207:
  6015                           
  6016                           ; BSR set to: 0
  6017  003994  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6018  003996  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6019  003998  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6020                           
  6021                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6022                           ; Switch size 1, requested type "simple"
  6023                           ; Number of cases is 1, Range of values is 0 to 0
  6024                           ; switch strategies available:
  6025                           ; Name         Instructions Cycles
  6026                           ; simple_byte            4     3 (average)
  6027                           ;	Chosen strategy is simple_byte
  6028  00399A  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6029  00399C  0A00               	xorlw	0	; case 0
  6030  00399E  A4D8               	btfss	status,2,c
  6031  0039A0  D77A               	goto	L19
  6032                           
  6033                           ; BSR set to: 0
  6034                           ; Switch size 1, requested type "simple"
  6035                           ; Number of cases is 2, Range of values is 0 to 1
  6036                           ; switch strategies available:
  6037                           ; Name         Instructions Cycles
  6038                           ; simple_byte            7     4 (average)
  6039                           ;	Chosen strategy is simple_byte
  6040  0039A2  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6041  0039A4  0A00               	xorlw	0	; case 0
  6042  0039A6  B4D8               	btfsc	status,2,c
  6043  0039A8  D7EB               	goto	l22193
  6044  0039AA  0A01               	xorlw	1	; case 1
  6045  0039AC  B4D8               	btfsc	status,2,c
  6046  0039AE  D7ED               	goto	l22199
  6047  0039B0  D772               	goto	L19
  6048  0039B2                     l22213:
  6049                           
  6050                           ; BSR set to: 0
  6051                           ;sm_MenuConfiguration_MC50.c: 1042:                 {;sm_MenuConfiguration_MC50.c: 1043:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softStart;
  6052  0039B2  0EAA               	movlw	low (_var_sys_NVM+18)
  6053  0039B4  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6054  0039B6  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  6055                           
  6056                           ; BSR set to: 0
  6057                           ;sm_MenuConfiguration_MC50.c: 1044:                      edit_Param.Max=9;
  6058  0039B8  0E09               	movlw	9
  6059  0039BA  D76A               	goto	L29
  6060  0039BC                     l22219:
  6061                           
  6062                           ; BSR set to: 0
  6063                           ;sm_MenuConfiguration_MC50.c: 1049:                 {;sm_MenuConfiguration_MC50.c: 1050:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softstop;
  6064  0039BC  0EAB               	movlw	low (_var_sys_NVM+19)
  6065  0039BE  D7FA               	goto	L27
  6066  0039C0                     l22227:
  6067                           
  6068                           ; BSR set to: 0
  6069  0039C0  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6070  0039C2  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6071  0039C4  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6072                           
  6073                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6074                           ; Switch size 1, requested type "simple"
  6075                           ; Number of cases is 1, Range of values is 0 to 0
  6076                           ; switch strategies available:
  6077                           ; Name         Instructions Cycles
  6078                           ; simple_byte            4     3 (average)
  6079                           ;	Chosen strategy is simple_byte
  6080  0039C6  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6081  0039C8  0A00               	xorlw	0	; case 0
  6082  0039CA  A4D8               	btfss	status,2,c
  6083  0039CC  D764               	goto	L19
  6084                           
  6085                           ; BSR set to: 0
  6086                           ; Switch size 1, requested type "simple"
  6087                           ; Number of cases is 2, Range of values is 0 to 1
  6088                           ; switch strategies available:
  6089                           ; Name         Instructions Cycles
  6090                           ; simple_byte            7     4 (average)
  6091                           ;	Chosen strategy is simple_byte
  6092  0039CE  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6093  0039D0  0A00               	xorlw	0	; case 0
  6094  0039D2  B4D8               	btfsc	status,2,c
  6095  0039D4  D7EE               	goto	l22213
  6096  0039D6  0A01               	xorlw	1	; case 1
  6097  0039D8  B4D8               	btfsc	status,2,c
  6098  0039DA  D7F0               	goto	l22219
  6099  0039DC  D75C               	goto	L19
  6100  0039DE                     l22233:
  6101                           
  6102                           ; BSR set to: 0
  6103                           ;sm_MenuConfiguration_MC50.c: 1068:                 {;sm_MenuConfiguration_MC50.c: 1069:
      +                                 edit_Param.Value=&value;
  6104  0039DE  0EFC               	movlw	low setValueToEdit@value
  6105  0039E0  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6106  0039E2  0E01               	movlw	high setValueToEdit@value
  6107  0039E4  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  6108                           
  6109                           ; BSR set to: 0
  6110                           ;sm_MenuConfiguration_MC50.c: 1070:                     for(unsigned char posindex=0; po
      +                          sindex <= *(unsigned char*)&var_sys_NVM.positionRemotesFull; posindex++)
  6111  0039E6  0E00               	movlw	0
  6112  0039E8  6FDF               	movwf	setValueToEdit@posindex& (0+255),b
  6113  0039EA  D00D               	goto	l22243
  6114  0039EC                     l3438:
  6115                           
  6116                           ; BSR set to: 0
  6117                           ;sm_MenuConfiguration_MC50.c: 1071:                     {;sm_MenuConfiguration_MC50.c: 1
      +                          072:                         value=posindex;
  6118  0039EC  C0DF  F1FC         	movff	setValueToEdit@posindex,setValueToEdit@value
  6119                           
  6120                           ; BSR set to: 0
  6121                           ;sm_MenuConfiguration_MC50.c: 1073:                         if(cmdMemoryIsEmpty(menu_st.
      +                          parameterSelected, posindex))
  6122  0039F0  C0DF  F02E         	movff	setValueToEdit@posindex,cmdMemoryIsEmpty@position
  6123  0039F4  0101               	movlb	1	; () banked
  6124  0039F6  5168               	movf	(_menu_st+23)& (0+255),w,b
  6125  0039F8  ECF8  F040         	call	_cmdMemoryIsEmpty
  6126  0039FC  0900               	iorlw	0
  6127  0039FE  A4D8               	btfss	status,2,c
  6128  003A00  D008               	goto	u25670
  6129                           
  6130                           ;sm_MenuConfiguration_MC50.c: 1075:                     }
  6131  003A02  0100               	movlb	0	; () banked
  6132  003A04  2BDF               	incf	setValueToEdit@posindex& (0+255),f,b
  6133  003A06                     l22243:
  6134                           
  6135                           ; BSR set to: 0
  6136  003A06  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6137  003A0A  51DF               	movf	setValueToEdit@posindex& (0+255),w,b
  6138  003A0C  5CDE               	subwf	postinc2,w,c
  6139  003A0E  B0D8               	btfsc	status,0,c
  6140  003A10  D7ED               	goto	l3438
  6141  003A12                     u25670:
  6142                           
  6143                           ;sm_MenuConfiguration_MC50.c: 1076:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesFull;
  6144  003A12  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6145  003A16  D018               	goto	L28
  6146  003A18                     l22247:
  6147                           
  6148                           ; BSR set to: 0
  6149                           ;sm_MenuConfiguration_MC50.c: 1080:                 {;sm_MenuConfiguration_MC50.c: 1081:
      +                                               for(unsigned char posindex=0; posindex <= *(unsigned char*)&var_sys
      +                          _NVM.positionRemotesWalk; posindex++)
  6150  003A18  0E00               	movlw	0
  6151  003A1A  6FE0               	movwf	setValueToEdit@posindex_6980& (0+255),b
  6152  003A1C  D00D               	goto	l22255
  6153  003A1E                     l3444:
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;sm_MenuConfiguration_MC50.c: 1082:                     {;sm_MenuConfiguration_MC50.c: 1
      +                          083:                         value=posindex;
  6157  003A1E  C0E0  F1FC         	movff	setValueToEdit@posindex_6980,setValueToEdit@value
  6158                           
  6159                           ; BSR set to: 0
  6160                           ;sm_MenuConfiguration_MC50.c: 1084:                         if(cmdMemoryIsEmpty(menu_st.
      +                          parameterSelected, posindex))
  6161  003A22  C0E0  F02E         	movff	setValueToEdit@posindex_6980,cmdMemoryIsEmpty@position
  6162  003A26  0101               	movlb	1	; () banked
  6163  003A28  5168               	movf	(_menu_st+23)& (0+255),w,b
  6164  003A2A  ECF8  F040         	call	_cmdMemoryIsEmpty
  6165  003A2E  0900               	iorlw	0
  6166  003A30  A4D8               	btfss	status,2,c
  6167  003A32  D008               	goto	u25690
  6168                           
  6169                           ;sm_MenuConfiguration_MC50.c: 1086:                     }
  6170  003A34  0100               	movlb	0	; () banked
  6171  003A36  2BE0               	incf	setValueToEdit@posindex_6980& (0+255),f,b
  6172  003A38                     l22255:
  6173                           
  6174                           ; BSR set to: 0
  6175  003A38  EE20  F0B9         	lfsr	2,_var_sys_NVM+33
  6176  003A3C  51E0               	movf	setValueToEdit@posindex_6980& (0+255),w,b
  6177  003A3E  5CDE               	subwf	postinc2,w,c
  6178  003A40  B0D8               	btfsc	status,0,c
  6179  003A42  D7ED               	goto	l3444
  6180  003A44                     u25690:
  6181                           
  6182                           ;sm_MenuConfiguration_MC50.c: 1087:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesWalk;
  6183  003A44  EE20  F0B9         	lfsr	2,_var_sys_NVM+33
  6184  003A48                     L28:
  6185  003A48  50DF               	movf	indf2,w,c
  6186  003A4A  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  6187                           
  6188                           ;sm_MenuConfiguration_MC50.c: 1088:                 };sm_MenuConfiguration_MC50.c: 1089:
      +                                           break;
  6189  003A4C  D00E               	goto	l22263
  6190  003A4E                     l22261:
  6191                           
  6192                           ; BSR set to: 0
  6193  003A4E  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6194  003A50  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6195  003A52  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6196                           
  6197                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6198                           ; Switch size 1, requested type "simple"
  6199                           ; Number of cases is 1, Range of values is 0 to 0
  6200                           ; switch strategies available:
  6201                           ; Name         Instructions Cycles
  6202                           ; simple_byte            4     3 (average)
  6203                           ;	Chosen strategy is simple_byte
  6204  003A54  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6205  003A56  0A00               	xorlw	0	; case 0
  6206  003A58  A4D8               	btfss	status,2,c
  6207  003A5A  D007               	goto	l22263
  6208                           
  6209                           ; BSR set to: 0
  6210                           ; Switch size 1, requested type "simple"
  6211                           ; Number of cases is 2, Range of values is 0 to 1
  6212                           ; switch strategies available:
  6213                           ; Name         Instructions Cycles
  6214                           ; simple_byte            7     4 (average)
  6215                           ;	Chosen strategy is simple_byte
  6216  003A5C  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6217  003A5E  0A00               	xorlw	0	; case 0
  6218  003A60  B4D8               	btfsc	status,2,c
  6219  003A62  D7BD               	goto	l22233
  6220  003A64  0A01               	xorlw	1	; case 1
  6221  003A66  B4D8               	btfsc	status,2,c
  6222  003A68  D7D7               	goto	l22247
  6223  003A6A                     l22263:
  6224                           
  6225                           ;sm_MenuConfiguration_MC50.c: 1091:             edit_Param.position=*edit_Param.Value;
  6226  003A6A  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6227  003A6E  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6228  003A72  50DF               	movf	indf2,w,c
  6229  003A74  6E46               	movwf	_edit_Param^0,c	;volatile
  6230                           
  6231                           ;sm_MenuConfiguration_MC50.c: 1092:             edit_Param.Min=0;
  6232  003A76  0E00               	movlw	0
  6233  003A78  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  6234                           
  6235                           ;sm_MenuConfiguration_MC50.c: 1093:             haveValueToEdit=1;
  6236  003A7A  0E01               	movlw	1
  6237  003A7C  0100               	movlb	0	; () banked
  6238  003A7E  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  6239                           
  6240                           ;sm_MenuConfiguration_MC50.c: 1094:             edit_Param.tempValue=*edit_Param.Value;
  6241  003A80  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6242  003A84  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6243  003A88  50DF               	movf	indf2,w,c
  6244  003A8A  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  6245                           
  6246                           ; BSR set to: 0
  6247                           ;sm_MenuConfiguration_MC50.c: 1095:             InitReceiver();
  6248  003A8C  ECCD  F04E         	call	_InitReceiver	;wreg free
  6249                           
  6250                           ;sm_MenuConfiguration_MC50.c: 1096:         };sm_MenuConfiguration_MC50.c: 1097:        
      +                           break;
  6251  003A90  D029               	goto	l22275
  6252  003A92                     l22273:
  6253                           
  6254                           ; BSR set to: 0
  6255  003A92  51DE               	movf	setValueToEdit@menuType& (0+255),w,b
  6256  003A94  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6257  003A96  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6258                           
  6259                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6260                           ; Switch size 1, requested type "simple"
  6261                           ; Number of cases is 1, Range of values is 0 to 0
  6262                           ; switch strategies available:
  6263                           ; Name         Instructions Cycles
  6264                           ; simple_byte            4     3 (average)
  6265                           ;	Chosen strategy is simple_byte
  6266  003A98  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6267  003A9A  0A00               	xorlw	0	; case 0
  6268  003A9C  A4D8               	btfss	status,2,c
  6269  003A9E  D022               	goto	l22275
  6270                           
  6271                           ; BSR set to: 0
  6272                           ; Switch size 1, requested type "simple"
  6273                           ; Number of cases is 11, Range of values is 0 to 12
  6274                           ; switch strategies available:
  6275                           ; Name         Instructions Cycles
  6276                           ; simple_byte           34    18 (average)
  6277                           ;	Chosen strategy is simple_byte
  6278  003AA0  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6279  003AA2  0A00               	xorlw	0	; case 0
  6280  003AA4  B4D8               	btfsc	status,2,c
  6281  003AA6  D58E               	goto	l3358
  6282  003AA8  0A01               	xorlw	1	; case 1
  6283  003AAA  B4D8               	btfsc	status,2,c
  6284  003AAC  D5EB               	goto	l3372
  6285  003AAE  0A05               	xorlw	5	; case 4
  6286  003AB0  B4D8               	btfsc	status,2,c
  6287  003AB2  D6C4               	goto	l22117
  6288  003AB4  0A01               	xorlw	1	; case 5
  6289  003AB6  B4D8               	btfsc	status,2,c
  6290  003AB8  D6DC               	goto	l22125
  6291  003ABA  0A03               	xorlw	3	; case 6
  6292  003ABC  B4D8               	btfsc	status,2,c
  6293  003ABE  D6F4               	goto	l22131
  6294  003AC0  0A01               	xorlw	1	; case 7
  6295  003AC2  B4D8               	btfsc	status,2,c
  6296  003AC4  D71D               	goto	l22159
  6297  003AC6  0A0F               	xorlw	15	; case 8
  6298  003AC8  B4D8               	btfsc	status,2,c
  6299  003ACA  D72E               	goto	l22171
  6300  003ACC  0A01               	xorlw	1	; case 9
  6301  003ACE  B4D8               	btfsc	status,2,c
  6302  003AD0  D742               	goto	l22187
  6303  003AD2  0A03               	xorlw	3	; case 10
  6304  003AD4  B4D8               	btfsc	status,2,c
  6305  003AD6  D75E               	goto	l22207
  6306  003AD8  0A01               	xorlw	1	; case 11
  6307  003ADA  B4D8               	btfsc	status,2,c
  6308  003ADC  D771               	goto	l22227
  6309  003ADE  0A07               	xorlw	7	; case 12
  6310  003AE0  B4D8               	btfsc	status,2,c
  6311  003AE2  D7B5               	goto	l22261
  6312  003AE4                     l22275:
  6313                           
  6314                           ;sm_MenuConfiguration_MC50.c: 1100:     return haveValueToEdit;
  6315  003AE4  0100               	movlb	0	; () banked
  6316  003AE6  51E1               	movf	setValueToEdit@haveValueToEdit& (0+255),w,b
  6317                           
  6318                           ; BSR set to: 0
  6319  003AE8  0012               	return		;funcret
  6320  003AEA                     __end_of_setValueToEdit:
  6321                           	callstack 0
  6322                           
  6323 ;; *************** function _load_New_Menu *****************
  6324 ;; Defined at:
  6325 ;;		line 434 in file "sm_MenuConfiguration_MC50.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;  Menu            1    wreg     enum E10813
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;  Menu            1   33[COMRAM] enum E10813
  6330 ;;  i               1   34[COMRAM] unsigned char 
  6331 ;; Return value:  Size  Location     Type
  6332 ;;                  1    wreg      void 
  6333 ;; Registers used:
  6334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6335 ;; Tracked objects:
  6336 ;;		On entry : 0/0
  6337 ;;		On exit  : 0/0
  6338 ;;		Unchanged: 0/0
  6339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6341 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6342 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6343 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6344 ;;Total ram usage:        4 bytes
  6345 ;; Hardware stack levels used: 1
  6346 ;; Hardware stack levels required when called: 5
  6347 ;; This function calls:
  6348 ;;		_SetSegmentValueIntermitentMain
  6349 ;;		_SetSegmentValueMain
  6350 ;; This function is called by:
  6351 ;;		_sm_execute_main
  6352 ;;		_sm_execute_menuConfiguration
  6353 ;;		_setValueToEdit
  6354 ;; This function uses a non-reentrant model
  6355 ;;
  6356                           
  6357                           	psect	text4
  6358  004A4E                     __ptext4:
  6359                           	callstack 0
  6360  004A4E                     _load_New_Menu:
  6361                           	callstack 22
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;incstack = 0
  6365                           ;load_New_Menu@Menu stored from wreg
  6366  004A4E  6E22               	movwf	load_New_Menu@Menu^0,c
  6367                           
  6368                           ;sm_MenuConfiguration_MC50.c: 435:     ts_system.timeoutMenu=((1000/50)*5) ;
  6369  004A50  0E00               	movlw	0
  6370  004A52  0101               	movlb	1	; () banked
  6371  004A54  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  6372  004A56  0E64               	movlw	100
  6373  004A58  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  6374                           
  6375                           ; BSR set to: 1
  6376                           ;sm_MenuConfiguration_MC50.c: 439:     if(menu_st.actualMenu!=Menu && Menu>E_Menu)
  6377  004A5A  5022               	movf	load_New_Menu@Menu^0,w,c
  6378  004A5C  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  6379  004A5E  B4D8               	btfsc	status,2,c
  6380  004A60  D006               	goto	l21135
  6381                           
  6382                           ; BSR set to: 1
  6383  004A62  0E01               	movlw	1
  6384  004A64  6422               	cpfsgt	load_New_Menu@Menu^0,c
  6385  004A66  D003               	goto	l21135
  6386                           
  6387                           ; BSR set to: 1
  6388                           ;sm_MenuConfiguration_MC50.c: 440:     {;sm_MenuConfiguration_MC50.c: 441:         menu_
      +                          st.parameterSelected=0;
  6389  004A68  0E00               	movlw	0
  6390  004A6A  6F68               	movwf	(_menu_st+23)& (0+255),b
  6391                           
  6392                           ;sm_MenuConfiguration_MC50.c: 442:     }
  6393  004A6C  D005               	goto	l21139
  6394  004A6E                     l21135:
  6395                           
  6396                           ; BSR set to: 1
  6397  004A6E  0E02               	movlw	2
  6398  004A70  6022               	cpfslt	load_New_Menu@Menu^0,c
  6399  004A72  D002               	goto	l21139
  6400                           
  6401                           ; BSR set to: 1
  6402                           ;sm_MenuConfiguration_MC50.c: 444:     {;sm_MenuConfiguration_MC50.c: 445:        menu_s
      +                          t.parameterSelected = menu_st.lastMainParameterSelected;
  6403  004A74  C169  F168         	movff	_menu_st+24,_menu_st+23
  6404  004A78                     l21139:
  6405                           
  6406                           ; BSR set to: 1
  6407                           ;sm_MenuConfiguration_MC50.c: 449:     menu_st.lastMenu=((void*)0);
  6408  004A78  0E00               	movlw	0
  6409  004A7A  6F65               	movwf	(_menu_st+20)& (0+255),b
  6410                           
  6411                           ;sm_MenuConfiguration_MC50.c: 450:     switch (Menu)
  6412  004A7C  D0F6               	goto	l21191
  6413  004A7E                     l21141:
  6414                           
  6415                           ; BSR set to: 1
  6416                           ;sm_MenuConfiguration_MC50.c: 453:         {;sm_MenuConfiguration_MC50.c: 455:          
      +                             menu_st.actualMenu=P_Menu;
  6417  004A7E  0E00               	movlw	0
  6418  004A80  6F66               	movwf	(_menu_st+21)& (0+255),b
  6419                           
  6420                           ;sm_MenuConfiguration_MC50.c: 456:             menu_st.menuSize=10;
  6421  004A82  0E0A               	movlw	10
  6422  004A84  6F67               	movwf	(_menu_st+22)& (0+255),b
  6423                           
  6424                           ;sm_MenuConfiguration_MC50.c: 457:             menu_st.lastMainParameterSelected=0;
  6425  004A86  0E00               	movlw	0
  6426  004A88  6F69               	movwf	(_menu_st+24)& (0+255),b
  6427                           
  6428                           ;sm_MenuConfiguration_MC50.c: 458:             for (i=0;i<(10);i++)
  6429  004A8A  0E00               	movlw	0
  6430  004A8C  6E23               	movwf	load_New_Menu@i^0,c
  6431  004A8E                     l21147:
  6432                           
  6433                           ;sm_MenuConfiguration_MC50.c: 459:             {;sm_MenuConfiguration_MC50.c: 460:      
      +                                    menu_st.menuList[i].value_display1=dP;
  6434  004A8E  5023               	movf	load_New_Menu@i^0,w,c
  6435  004A90  0D02               	mullw	2
  6436  004A92  0E51               	movlw	low _menu_st
  6437  004A94  24F3               	addwf	243,w,c
  6438  004A96  6ED9               	movwf	fsr2l,c
  6439  004A98  0E01               	movlw	high _menu_st
  6440  004A9A  20F4               	addwfc	prodh,w,c
  6441  004A9C  6EDA               	movwf	fsr2h,c
  6442  004A9E  0E10               	movlw	16
  6443  004AA0  6EDF               	movwf	indf2,c
  6444                           
  6445                           ;sm_MenuConfiguration_MC50.c: 461:                menu_st.menuList[i].value_display2=i;
  6446  004AA2  5023               	movf	load_New_Menu@i^0,w,c
  6447  004AA4  0D02               	mullw	2
  6448  004AA6  0E52               	movlw	low (_menu_st+1)
  6449  004AA8  24F3               	addwf	243,w,c
  6450  004AAA  6ED9               	movwf	fsr2l,c
  6451  004AAC  0E01               	movlw	high (_menu_st+1)
  6452  004AAE  20F4               	addwfc	prodh,w,c
  6453  004AB0  6EDA               	movwf	fsr2h,c
  6454  004AB2  C023  FFDF         	movff	load_New_Menu@i,indf2
  6455                           
  6456                           ;sm_MenuConfiguration_MC50.c: 462:             }
  6457  004AB6  2A23               	incf	load_New_Menu@i^0,f,c
  6458  004AB8  0E09               	movlw	9
  6459  004ABA  6423               	cpfsgt	load_New_Menu@i^0,c
  6460  004ABC  D7E8               	goto	l21147
  6461  004ABE  D107               	goto	l21193
  6462  004AC0                     l21153:
  6463                           
  6464                           ; BSR set to: 1
  6465                           ;sm_MenuConfiguration_MC50.c: 466:         {;sm_MenuConfiguration_MC50.c: 468:          
      +                             menu_st.actualMenu=E_Menu;
  6466  004AC0  0E01               	movlw	1
  6467  004AC2  6F66               	movwf	(_menu_st+21)& (0+255),b
  6468                           
  6469                           ;sm_MenuConfiguration_MC50.c: 469:             menu_st.menuSize=10;
  6470  004AC4  0E0A               	movlw	10
  6471  004AC6  6F67               	movwf	(_menu_st+22)& (0+255),b
  6472                           
  6473                           ;sm_MenuConfiguration_MC50.c: 470:             menu_st.lastMainParameterSelected=0;
  6474  004AC8  0E00               	movlw	0
  6475  004ACA  6F69               	movwf	(_menu_st+24)& (0+255),b
  6476                           
  6477                           ;sm_MenuConfiguration_MC50.c: 471:             for (i=0;i<(10);i++)
  6478  004ACC  0E00               	movlw	0
  6479  004ACE  6E23               	movwf	load_New_Menu@i^0,c
  6480  004AD0                     l21159:
  6481                           
  6482                           ;sm_MenuConfiguration_MC50.c: 472:             {;sm_MenuConfiguration_MC50.c: 473:      
      +                                    menu_st.menuList[i].value_display1=dE;
  6483  004AD0  5023               	movf	load_New_Menu@i^0,w,c
  6484  004AD2  0D02               	mullw	2
  6485  004AD4  0E51               	movlw	low _menu_st
  6486  004AD6  24F3               	addwf	243,w,c
  6487  004AD8  6ED9               	movwf	fsr2l,c
  6488  004ADA  0E01               	movlw	high _menu_st
  6489  004ADC  20F4               	addwfc	prodh,w,c
  6490  004ADE  6EDA               	movwf	fsr2h,c
  6491  004AE0  0E0E               	movlw	14
  6492  004AE2  6EDF               	movwf	indf2,c
  6493                           
  6494                           ;sm_MenuConfiguration_MC50.c: 474:                menu_st.menuList[i].value_display2=i;
  6495  004AE4  5023               	movf	load_New_Menu@i^0,w,c
  6496  004AE6  0D02               	mullw	2
  6497  004AE8  0E52               	movlw	low (_menu_st+1)
  6498  004AEA  24F3               	addwf	243,w,c
  6499  004AEC  6ED9               	movwf	fsr2l,c
  6500  004AEE  0E01               	movlw	high (_menu_st+1)
  6501  004AF0  20F4               	addwfc	prodh,w,c
  6502  004AF2  6EDA               	movwf	fsr2h,c
  6503  004AF4  C023  FFDF         	movff	load_New_Menu@i,indf2
  6504                           
  6505                           ;sm_MenuConfiguration_MC50.c: 475:             }
  6506  004AF8  2A23               	incf	load_New_Menu@i^0,f,c
  6507  004AFA  0E09               	movlw	9
  6508  004AFC  6423               	cpfsgt	load_New_Menu@i^0,c
  6509  004AFE  D7E8               	goto	l21159
  6510  004B00  D0E6               	goto	l21193
  6511  004B02                     l21165:
  6512                           
  6513                           ; BSR set to: 1
  6514                           ;sm_MenuConfiguration_MC50.c: 479:         {;sm_MenuConfiguration_MC50.c: 480:          
      +                             menu_st.lastMenu=P_Menu;
  6515  004B02  0E00               	movlw	0
  6516  004B04  6F65               	movwf	(_menu_st+20)& (0+255),b
  6517                           
  6518                           ;sm_MenuConfiguration_MC50.c: 481:             menu_st.actualMenu=P0_SMenu;
  6519  004B06  0E04               	movlw	4
  6520  004B08  6F66               	movwf	(_menu_st+21)& (0+255),b
  6521                           
  6522                           ;sm_MenuConfiguration_MC50.c: 482:             menu_st.menuSize=4;
  6523  004B0A  0E04               	movlw	4
  6524  004B0C  6F67               	movwf	(_menu_st+22)& (0+255),b
  6525                           
  6526                           ;sm_MenuConfiguration_MC50.c: 483:             menu_st.menuList[0].value_display1=dA;
  6527  004B0E  0E0A               	movlw	10
  6528  004B10  6F51               	movwf	_menu_st& (0+255),b
  6529                           
  6530                           ;sm_MenuConfiguration_MC50.c: 484:             menu_st.menuList[0].value_display2=dU;
  6531  004B12  0E13               	movlw	19
  6532  004B14  6F52               	movwf	(_menu_st+1)& (0+255),b
  6533                           
  6534                           ;sm_MenuConfiguration_MC50.c: 485:             menu_st.menuList[1].value_display1=dM;
  6535  004B16  0E17               	movlw	23
  6536  004B18  6F53               	movwf	(_menu_st+2)& (0+255),b
  6537                           
  6538                           ;sm_MenuConfiguration_MC50.c: 486:             menu_st.menuList[1].value_display2=dA;
  6539  004B1A  0E0A               	movlw	10
  6540  004B1C  6F54               	movwf	(_menu_st+3)& (0+255),b
  6541                           
  6542                           ;sm_MenuConfiguration_MC50.c: 487:             menu_st.menuList[2].value_display1=d5;
  6543  004B1E  0E05               	movlw	5
  6544  004B20  6F55               	movwf	(_menu_st+4)& (0+255),b
  6545                           
  6546                           ;sm_MenuConfiguration_MC50.c: 488:             menu_st.menuList[2].value_display2=dy;
  6547  004B22  0E21               	movlw	33
  6548  004B24  6F56               	movwf	(_menu_st+5)& (0+255),b
  6549                           
  6550                           ;sm_MenuConfiguration_MC50.c: 489:             menu_st.menuList[3].value_display1=dd;
  6551  004B26  0E0D               	movlw	13
  6552  004B28  6F57               	movwf	(_menu_st+6)& (0+255),b
  6553                           
  6554                           ;sm_MenuConfiguration_MC50.c: 490:             menu_st.menuList[3].value_display2=d1;
  6555  004B2A  0E01               	movlw	1
  6556  004B2C  D051               	goto	L31
  6557  004B2E                     l21167:
  6558                           
  6559                           ; BSR set to: 1
  6560                           ;sm_MenuConfiguration_MC50.c: 494:         {;sm_MenuConfiguration_MC50.c: 495:          
      +                             menu_st.lastMenu=P_Menu;
  6561  004B2E  0E00               	movlw	0
  6562  004B30  6F65               	movwf	(_menu_st+20)& (0+255),b
  6563                           
  6564                           ;sm_MenuConfiguration_MC50.c: 496:             menu_st.actualMenu=P1_SMenu;
  6565  004B32  0E05               	movlw	5
  6566  004B34  6F66               	movwf	(_menu_st+21)& (0+255),b
  6567                           
  6568                           ;sm_MenuConfiguration_MC50.c: 497:             menu_st.menuSize=2;
  6569  004B36  0E02               	movlw	2
  6570  004B38  6F67               	movwf	(_menu_st+22)& (0+255),b
  6571                           
  6572                           ;sm_MenuConfiguration_MC50.c: 498:             menu_st.menuList[0].value_display1=dd;
  6573  004B3A  0E0D               	movlw	13
  6574  004B3C  6F51               	movwf	_menu_st& (0+255),b
  6575                           
  6576                           ;sm_MenuConfiguration_MC50.c: 499:             menu_st.menuList[0].value_display2=dA;
  6577  004B3E  0E0A               	movlw	10
  6578  004B40  6F52               	movwf	(_menu_st+1)& (0+255),b
  6579                           
  6580                           ;sm_MenuConfiguration_MC50.c: 500:             menu_st.menuList[1].value_display1=dd;
  6581  004B42  0E0D               	movlw	13
  6582  004B44  6F53               	movwf	(_menu_st+2)& (0+255),b
  6583                           
  6584                           ;sm_MenuConfiguration_MC50.c: 501:             menu_st.menuList[1].value_display2=dF;
  6585  004B46  0E0F               	movlw	15
  6586  004B48  D08E               	goto	L38
  6587  004B4A                     l21169:
  6588                           
  6589                           ; BSR set to: 1
  6590                           ;sm_MenuConfiguration_MC50.c: 508:         {;sm_MenuConfiguration_MC50.c: 509:          
      +                             menu_st.lastMenu=P_Menu;
  6591  004B4A  0E00               	movlw	0
  6592  004B4C  6F65               	movwf	(_menu_st+20)& (0+255),b
  6593                           
  6594                           ;sm_MenuConfiguration_MC50.c: 510:             menu_st.actualMenu=P2_SMenu;
  6595  004B4E  0E06               	movlw	6
  6596  004B50  6F66               	movwf	(_menu_st+21)& (0+255),b
  6597                           
  6598                           ;sm_MenuConfiguration_MC50.c: 511:             menu_st.menuSize=3;
  6599  004B52  0E03               	movlw	3
  6600  004B54  6F67               	movwf	(_menu_st+22)& (0+255),b
  6601                           
  6602                           ;sm_MenuConfiguration_MC50.c: 512:             menu_st.menuList[0].value_display1=dF;
  6603  004B56  0E0F               	movlw	15
  6604  004B58  6F51               	movwf	_menu_st& (0+255),b
  6605                           
  6606                           ;sm_MenuConfiguration_MC50.c: 513:             menu_st.menuList[0].value_display2=d0;
  6607  004B5A  0E00               	movlw	0
  6608  004B5C  6F52               	movwf	(_menu_st+1)& (0+255),b
  6609                           
  6610                           ;sm_MenuConfiguration_MC50.c: 514:             menu_st.menuList[1].value_display1=dF;
  6611  004B5E  0E0F               	movlw	15
  6612  004B60  6F53               	movwf	(_menu_st+2)& (0+255),b
  6613                           
  6614                           ;sm_MenuConfiguration_MC50.c: 515:             menu_st.menuList[1].value_display2=d5;
  6615  004B62  0E05               	movlw	5
  6616  004B64  6F54               	movwf	(_menu_st+3)& (0+255),b
  6617                           
  6618                           ;sm_MenuConfiguration_MC50.c: 516:             menu_st.menuList[2].value_display1=dF;
  6619  004B66  0E0F               	movlw	15
  6620  004B68  6F55               	movwf	(_menu_st+4)& (0+255),b
  6621                           
  6622                           ;sm_MenuConfiguration_MC50.c: 517:             menu_st.menuList[2].value_display2=dd;
  6623  004B6A  0E0D               	movlw	13
  6624  004B6C  D073               	goto	L33
  6625  004B6E                     l21171:
  6626                           
  6627                           ; BSR set to: 1
  6628                           ;sm_MenuConfiguration_MC50.c: 521:         {;sm_MenuConfiguration_MC50.c: 522:          
      +                             menu_st.lastMenu=P_Menu;
  6629  004B6E  0E00               	movlw	0
  6630  004B70  6F65               	movwf	(_menu_st+20)& (0+255),b
  6631                           
  6632                           ;sm_MenuConfiguration_MC50.c: 523:             menu_st.actualMenu=P4_SMenu;
  6633  004B72  0E07               	movlw	7
  6634  004B74  6F66               	movwf	(_menu_st+21)& (0+255),b
  6635                           
  6636                           ;sm_MenuConfiguration_MC50.c: 524:             menu_st.menuSize=2;
  6637  004B76  0E02               	movlw	2
  6638  004B78  6F67               	movwf	(_menu_st+22)& (0+255),b
  6639                           
  6640                           ;sm_MenuConfiguration_MC50.c: 525:             menu_st.menuList[0].value_display1=dA;
  6641  004B7A  0E0A               	movlw	10
  6642  004B7C  6F51               	movwf	_menu_st& (0+255),b
  6643                           
  6644                           ;sm_MenuConfiguration_MC50.c: 526:             menu_st.menuList[0].value_display2=dF;
  6645  004B7E  0E0F               	movlw	15
  6646  004B80  6F52               	movwf	(_menu_st+1)& (0+255),b
  6647                           
  6648                           ;sm_MenuConfiguration_MC50.c: 527:             menu_st.menuList[1].value_display1=dA;
  6649  004B82  0E0A               	movlw	10
  6650  004B84  6F53               	movwf	(_menu_st+2)& (0+255),b
  6651                           
  6652                           ;sm_MenuConfiguration_MC50.c: 528:             menu_st.menuList[1].value_display2=dP;
  6653  004B86  0E10               	movlw	16
  6654  004B88  D06E               	goto	L38
  6655  004B8A                     l21173:
  6656                           
  6657                           ; BSR set to: 1
  6658                           ;sm_MenuConfiguration_MC50.c: 532:         {;sm_MenuConfiguration_MC50.c: 533:          
      +                             menu_st.lastMenu=P_Menu;
  6659  004B8A  0E00               	movlw	0
  6660  004B8C  6F65               	movwf	(_menu_st+20)& (0+255),b
  6661                           
  6662                           ;sm_MenuConfiguration_MC50.c: 534:             menu_st.actualMenu=P5_SMenu;
  6663  004B8E  0E08               	movlw	8
  6664  004B90  6F66               	movwf	(_menu_st+21)& (0+255),b
  6665                           
  6666                           ;sm_MenuConfiguration_MC50.c: 535:             menu_st.menuSize=2;
  6667  004B92  0E02               	movlw	2
  6668  004B94  6F67               	movwf	(_menu_st+22)& (0+255),b
  6669                           
  6670                           ;sm_MenuConfiguration_MC50.c: 536:             menu_st.menuList[0].value_display1=dL;
  6671  004B96  0E12               	movlw	18
  6672  004B98  6F51               	movwf	_menu_st& (0+255),b
  6673                           
  6674                           ;sm_MenuConfiguration_MC50.c: 537:             menu_st.menuList[0].value_display2=dE;
  6675  004B9A  0E0E               	movlw	14
  6676  004B9C  6F52               	movwf	(_menu_st+1)& (0+255),b
  6677                           
  6678                           ;sm_MenuConfiguration_MC50.c: 538:             menu_st.menuList[1].value_display1=dH;
  6679  004B9E  0E11               	movlw	17
  6680  004BA0  6F53               	movwf	(_menu_st+2)& (0+255),b
  6681                           
  6682                           ;sm_MenuConfiguration_MC50.c: 539:             menu_st.menuList[1].value_display2=dC;
  6683  004BA2  0E0C               	movlw	12
  6684  004BA4  D060               	goto	L38
  6685  004BA6                     l21175:
  6686                           
  6687                           ; BSR set to: 1
  6688                           ;sm_MenuConfiguration_MC50.c: 543:         {;sm_MenuConfiguration_MC50.c: 544:          
      +                             menu_st.lastMenu=P_Menu;
  6689  004BA6  0E00               	movlw	0
  6690  004BA8  6F65               	movwf	(_menu_st+20)& (0+255),b
  6691                           
  6692                           ;sm_MenuConfiguration_MC50.c: 545:             menu_st.actualMenu=P6_SMenu;
  6693  004BAA  0E09               	movlw	9
  6694  004BAC  6F66               	movwf	(_menu_st+21)& (0+255),b
  6695                           
  6696                           ;sm_MenuConfiguration_MC50.c: 546:             menu_st.menuSize=4;
  6697  004BAE  0E04               	movlw	4
  6698  004BB0  6F67               	movwf	(_menu_st+22)& (0+255),b
  6699                           
  6700                           ;sm_MenuConfiguration_MC50.c: 547:             menu_st.menuList[0].value_display1=dL;
  6701  004BB2  0E12               	movlw	18
  6702  004BB4  6F51               	movwf	_menu_st& (0+255),b
  6703                           
  6704                           ;sm_MenuConfiguration_MC50.c: 548:             menu_st.menuList[0].value_display2=dA;
  6705  004BB6  0E0A               	movlw	10
  6706  004BB8  6F52               	movwf	(_menu_st+1)& (0+255),b
  6707                           
  6708                           ;sm_MenuConfiguration_MC50.c: 549:             menu_st.menuList[1].value_display1=dH;
  6709  004BBA  0E11               	movlw	17
  6710  004BBC  6F53               	movwf	(_menu_st+2)& (0+255),b
  6711                           
  6712                           ;sm_MenuConfiguration_MC50.c: 550:             menu_st.menuList[1].value_display2=dA;
  6713  004BBE  0E0A               	movlw	10
  6714  004BC0  6F54               	movwf	(_menu_st+3)& (0+255),b
  6715                           
  6716                           ;sm_MenuConfiguration_MC50.c: 551:             menu_st.menuList[2].value_display1=dH;
  6717  004BC2  0E11               	movlw	17
  6718  004BC4  6F55               	movwf	(_menu_st+4)& (0+255),b
  6719                           
  6720                           ;sm_MenuConfiguration_MC50.c: 552:             menu_st.menuList[2].value_display2=dL;
  6721  004BC6  0E12               	movlw	18
  6722  004BC8  6F56               	movwf	(_menu_st+5)& (0+255),b
  6723                           
  6724                           ;sm_MenuConfiguration_MC50.c: 553:             menu_st.menuList[3].value_display1=d5;
  6725  004BCA  0E05               	movlw	5
  6726  004BCC  6F57               	movwf	(_menu_st+6)& (0+255),b
  6727                           
  6728                           ;sm_MenuConfiguration_MC50.c: 554:             menu_st.menuList[3].value_display2=dt;
  6729  004BCE  0E15               	movlw	21
  6730  004BD0                     L31:
  6731  004BD0  6F58               	movwf	(_menu_st+7)& (0+255),b
  6732                           
  6733                           ;sm_MenuConfiguration_MC50.c: 556:         };sm_MenuConfiguration_MC50.c: 557:         b
      +                          reak;
  6734  004BD2  D07D               	goto	l21193
  6735  004BD4                     l21177:
  6736                           
  6737                           ; BSR set to: 1
  6738                           ;sm_MenuConfiguration_MC50.c: 559:         {;sm_MenuConfiguration_MC50.c: 560:          
      +                             menu_st.lastMenu=E_Menu;
  6739  004BD4  0E01               	movlw	1
  6740  004BD6  6F65               	movwf	(_menu_st+20)& (0+255),b
  6741                           
  6742                           ;sm_MenuConfiguration_MC50.c: 561:             menu_st.actualMenu=E0_SMenu;
  6743  004BD8  0E0A               	movlw	10
  6744  004BDA  6F66               	movwf	(_menu_st+21)& (0+255),b
  6745                           
  6746                           ;sm_MenuConfiguration_MC50.c: 562:             menu_st.menuSize=2;
  6747  004BDC  0E02               	movlw	2
  6748  004BDE  6F67               	movwf	(_menu_st+22)& (0+255),b
  6749                           
  6750                           ;sm_MenuConfiguration_MC50.c: 563:             menu_st.menuList[0].value_display1=dH;
  6751  004BE0  0E11               	movlw	17
  6752  004BE2  6F51               	movwf	_menu_st& (0+255),b
  6753                           
  6754                           ;sm_MenuConfiguration_MC50.c: 564:             menu_st.menuList[0].value_display2=dP;
  6755  004BE4  0E10               	movlw	16
  6756  004BE6  6F52               	movwf	(_menu_st+1)& (0+255),b
  6757                           
  6758                           ;sm_MenuConfiguration_MC50.c: 565:             menu_st.menuList[1].value_display1=dP;
  6759  004BE8  0E10               	movlw	16
  6760  004BEA  6F53               	movwf	(_menu_st+2)& (0+255),b
  6761                           
  6762                           ;sm_MenuConfiguration_MC50.c: 566:             menu_st.menuList[1].value_display2=dL;
  6763  004BEC  0E12               	movlw	18
  6764  004BEE  D03B               	goto	L38
  6765  004BF0                     l21179:
  6766                           
  6767                           ; BSR set to: 1
  6768                           ;sm_MenuConfiguration_MC50.c: 570:         {;sm_MenuConfiguration_MC50.c: 571:          
      +                             menu_st.lastMenu=E_Menu;
  6769  004BF0  0E01               	movlw	1
  6770  004BF2  6F65               	movwf	(_menu_st+20)& (0+255),b
  6771                           
  6772                           ;sm_MenuConfiguration_MC50.c: 572:             menu_st.actualMenu=E1_SMenu;
  6773  004BF4  0E0B               	movlw	11
  6774  004BF6  6F66               	movwf	(_menu_st+21)& (0+255),b
  6775                           
  6776                           ;sm_MenuConfiguration_MC50.c: 573:             menu_st.menuSize=2;
  6777  004BF8  0E02               	movlw	2
  6778  004BFA  6F67               	movwf	(_menu_st+22)& (0+255),b
  6779                           
  6780                           ;sm_MenuConfiguration_MC50.c: 574:             menu_st.menuList[0].value_display1=dr;
  6781  004BFC  0E14               	movlw	20
  6782  004BFE  6F51               	movwf	_menu_st& (0+255),b
  6783                           
  6784                           ;sm_MenuConfiguration_MC50.c: 575:             menu_st.menuList[0].value_display2=dq;
  6785  004C00  0E24               	movlw	36
  6786  004C02  6F52               	movwf	(_menu_st+1)& (0+255),b
  6787                           
  6788                           ;sm_MenuConfiguration_MC50.c: 576:             menu_st.menuList[1].value_display1=dr;
  6789  004C04  0E14               	movlw	20
  6790  004C06  6F53               	movwf	(_menu_st+2)& (0+255),b
  6791                           
  6792                           ;sm_MenuConfiguration_MC50.c: 577:             menu_st.menuList[1].value_display2=dc;
  6793  004C08  0E23               	movlw	35
  6794  004C0A  D02D               	goto	L38
  6795  004C0C                     l21181:
  6796                           
  6797                           ; BSR set to: 1
  6798                           ;sm_MenuConfiguration_MC50.c: 581:         {;sm_MenuConfiguration_MC50.c: 583:          
      +                             menu_st.actualMenu=S_Menu;
  6799  004C0C  0E0C               	movlw	12
  6800  004C0E  6F66               	movwf	(_menu_st+21)& (0+255),b
  6801                           
  6802                           ;sm_MenuConfiguration_MC50.c: 584:             menu_st.parameterSelected=0;
  6803  004C10  0E00               	movlw	0
  6804  004C12  6F68               	movwf	(_menu_st+23)& (0+255),b
  6805                           
  6806                           ;sm_MenuConfiguration_MC50.c: 585:             menu_st.menuSize=2;
  6807  004C14  0E02               	movlw	2
  6808  004C16  6F67               	movwf	(_menu_st+22)& (0+255),b
  6809                           
  6810                           ;sm_MenuConfiguration_MC50.c: 586:             menu_st.menuList[0].value_display1=d5;
  6811  004C18  0E05               	movlw	5
  6812  004C1A  6F51               	movwf	_menu_st& (0+255),b
  6813                           
  6814                           ;sm_MenuConfiguration_MC50.c: 587:             menu_st.menuList[0].value_display2=dU;
  6815  004C1C  0E13               	movlw	19
  6816  004C1E  6F52               	movwf	(_menu_st+1)& (0+255),b
  6817                           
  6818                           ;sm_MenuConfiguration_MC50.c: 588:             menu_st.menuList[1].value_display1=d5;
  6819  004C20  0E05               	movlw	5
  6820  004C22  D7B0               	goto	L39
  6821  004C24                     l21183:
  6822                           
  6823                           ; BSR set to: 1
  6824                           ;sm_MenuConfiguration_MC50.c: 593:         {;sm_MenuConfiguration_MC50.c: 595:          
      +                             menu_st.actualMenu=Del_Menu;
  6825  004C24  0E0D               	movlw	13
  6826  004C26  6F66               	movwf	(_menu_st+21)& (0+255),b
  6827                           
  6828                           ;sm_MenuConfiguration_MC50.c: 596:             menu_st.menuSize=1;
  6829  004C28  0E01               	movlw	1
  6830  004C2A  6F67               	movwf	(_menu_st+22)& (0+255),b
  6831                           
  6832                           ;sm_MenuConfiguration_MC50.c: 597:             menu_st.menuList[0].value_display1=dd;
  6833  004C2C  0E0D               	movlw	13
  6834  004C2E  6F51               	movwf	_menu_st& (0+255),b
  6835                           
  6836                           ;sm_MenuConfiguration_MC50.c: 598:             menu_st.menuList[0].value_display2=dL;
  6837  004C30  0E12               	movlw	18
  6838  004C32  6F52               	movwf	(_menu_st+1)& (0+255),b
  6839                           
  6840                           ;sm_MenuConfiguration_MC50.c: 599:             ts_system.timeSinalizationDigit=(1000/50)
      +                          *3;
  6841  004C34  0E00               	movlw	0
  6842  004C36  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
  6843  004C38  0E3C               	movlw	60
  6844  004C3A  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
  6845                           
  6846                           ;sm_MenuConfiguration_MC50.c: 600:         };sm_MenuConfiguration_MC50.c: 601:         b
      +                          reak;
  6847  004C3C  D048               	goto	l21193
  6848  004C3E                     l21185:
  6849                           
  6850                           ; BSR set to: 1
  6851                           ;sm_MenuConfiguration_MC50.c: 604:         {;sm_MenuConfiguration_MC50.c: 608:          
      +                             menu_st.menuList[0].value_display1=d5;
  6852  004C3E  0E05               	movlw	5
  6853  004C40  6F51               	movwf	_menu_st& (0+255),b
  6854                           
  6855                           ;sm_MenuConfiguration_MC50.c: 609:             menu_st.menuList[0].value_display2=dC;
  6856  004C42  0E0C               	movlw	12
  6857  004C44  6F52               	movwf	(_menu_st+1)& (0+255),b
  6858                           
  6859                           ;sm_MenuConfiguration_MC50.c: 610:             menu_st.menuList[1].value_display1=d5;
  6860  004C46  0E05               	movlw	5
  6861  004C48  6F53               	movwf	(_menu_st+2)& (0+255),b
  6862                           
  6863                           ;sm_MenuConfiguration_MC50.c: 611:             menu_st.menuList[1].value_display2=dE;
  6864  004C4A  0E0E               	movlw	14
  6865  004C4C  6F54               	movwf	(_menu_st+3)& (0+255),b
  6866                           
  6867                           ;sm_MenuConfiguration_MC50.c: 612:             menu_st.menuList[2].value_display1=db;
  6868  004C4E  0E22               	movlw	34
  6869  004C50  6F55               	movwf	(_menu_st+4)& (0+255),b
  6870                           
  6871                           ;sm_MenuConfiguration_MC50.c: 613:             menu_st.menuList[2].value_display2=dr;
  6872  004C52  0E14               	movlw	20
  6873  004C54                     L33:
  6874  004C54  6F56               	movwf	(_menu_st+5)& (0+255),b
  6875                           
  6876                           ;sm_MenuConfiguration_MC50.c: 614:         };sm_MenuConfiguration_MC50.c: 615:         b
      +                          reak;
  6877  004C56  D03B               	goto	l21193
  6878  004C58                     l21187:
  6879                           
  6880                           ; BSR set to: 1
  6881                           ;sm_MenuConfiguration_MC50.c: 617:         {;sm_MenuConfiguration_MC50.c: 621:          
      +                             menu_st.menuList[0].value_display1=dL;
  6882  004C58  0E12               	movlw	18
  6883  004C5A  6F51               	movwf	_menu_st& (0+255),b
  6884                           
  6885                           ;sm_MenuConfiguration_MC50.c: 622:             menu_st.menuList[0].value_display2=dE;
  6886  004C5C  0E0E               	movlw	14
  6887  004C5E  6F52               	movwf	(_menu_st+1)& (0+255),b
  6888                           
  6889                           ;sm_MenuConfiguration_MC50.c: 623:             menu_st.menuList[1].value_display1=dr;
  6890  004C60  0E14               	movlw	20
  6891  004C62  6F53               	movwf	(_menu_st+2)& (0+255),b
  6892                           
  6893                           ;sm_MenuConfiguration_MC50.c: 624:             menu_st.menuList[1].value_display2=dt;
  6894  004C64  0E15               	movlw	21
  6895  004C66                     L38:
  6896  004C66  6F54               	movwf	(_menu_st+3)& (0+255),b
  6897                           
  6898                           ;sm_MenuConfiguration_MC50.c: 626:         };sm_MenuConfiguration_MC50.c: 627:         b
      +                          reak;
  6899  004C68  D032               	goto	l21193
  6900  004C6A                     l21191:
  6901                           
  6902                           ; BSR set to: 1
  6903  004C6A  5022               	movf	load_New_Menu@Menu^0,w,c
  6904  004C6C  6E20               	movwf	??_load_New_Menu^0,c
  6905  004C6E  6A21               	clrf	(??_load_New_Menu+1)^0,c
  6906                           
  6907                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6908                           ; Switch size 1, requested type "simple"
  6909                           ; Number of cases is 1, Range of values is 0 to 0
  6910                           ; switch strategies available:
  6911                           ; Name         Instructions Cycles
  6912                           ; simple_byte            4     3 (average)
  6913                           ;	Chosen strategy is simple_byte
  6914  004C70  5021               	movf	(??_load_New_Menu+1)^0,w,c
  6915  004C72  0A00               	xorlw	0	; case 0
  6916  004C74  A4D8               	btfss	status,2,c
  6917  004C76  D02B               	goto	l21193
  6918                           
  6919                           ; BSR set to: 1
  6920                           ; Switch size 1, requested type "simple"
  6921                           ; Number of cases is 14, Range of values is 0 to 13
  6922                           ; switch strategies available:
  6923                           ; Name         Instructions Cycles
  6924                           ; simple_byte           43    22 (average)
  6925                           ;	Chosen strategy is simple_byte
  6926  004C78  5020               	movf	??_load_New_Menu^0,w,c
  6927  004C7A  0A00               	xorlw	0	; case 0
  6928  004C7C  B4D8               	btfsc	status,2,c
  6929  004C7E  D6FF               	goto	l21141
  6930  004C80  0A01               	xorlw	1	; case 1
  6931  004C82  B4D8               	btfsc	status,2,c
  6932  004C84  D71D               	goto	l21153
  6933  004C86  0A03               	xorlw	3	; case 2
  6934  004C88  B4D8               	btfsc	status,2,c
  6935  004C8A  D7E6               	goto	l21187
  6936  004C8C  0A01               	xorlw	1	; case 3
  6937  004C8E  B4D8               	btfsc	status,2,c
  6938  004C90  D7D6               	goto	l21185
  6939  004C92  0A07               	xorlw	7	; case 4
  6940  004C94  B4D8               	btfsc	status,2,c
  6941  004C96  D735               	goto	l21165
  6942  004C98  0A01               	xorlw	1	; case 5
  6943  004C9A  B4D8               	btfsc	status,2,c
  6944  004C9C  D748               	goto	l21167
  6945  004C9E  0A03               	xorlw	3	; case 6
  6946  004CA0  B4D8               	btfsc	status,2,c
  6947  004CA2  D753               	goto	l21169
  6948  004CA4  0A01               	xorlw	1	; case 7
  6949  004CA6  B4D8               	btfsc	status,2,c
  6950  004CA8  D762               	goto	l21171
  6951  004CAA  0A0F               	xorlw	15	; case 8
  6952  004CAC  B4D8               	btfsc	status,2,c
  6953  004CAE  D76D               	goto	l21173
  6954  004CB0  0A01               	xorlw	1	; case 9
  6955  004CB2  B4D8               	btfsc	status,2,c
  6956  004CB4  D778               	goto	l21175
  6957  004CB6  0A03               	xorlw	3	; case 10
  6958  004CB8  B4D8               	btfsc	status,2,c
  6959  004CBA  D78C               	goto	l21177
  6960  004CBC  0A01               	xorlw	1	; case 11
  6961  004CBE  B4D8               	btfsc	status,2,c
  6962  004CC0  D797               	goto	l21179
  6963  004CC2  0A07               	xorlw	7	; case 12
  6964  004CC4  B4D8               	btfsc	status,2,c
  6965  004CC6  D7A2               	goto	l21181
  6966  004CC8  0A01               	xorlw	1	; case 13
  6967  004CCA  B4D8               	btfsc	status,2,c
  6968  004CCC  D7AB               	goto	l21183
  6969  004CCE                     l21193:
  6970                           
  6971                           ;sm_MenuConfiguration_MC50.c: 632:     if(menu_st.parameterSelected>=menu_st.menuSize)
  6972  004CCE  0101               	movlb	1	; () banked
  6973  004CD0  5167               	movf	(_menu_st+22)& (0+255),w,b
  6974  004CD2  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  6975  004CD4  A0D8               	btfss	status,0,c
  6976  004CD6  D002               	goto	l21197
  6977                           
  6978                           ; BSR set to: 1
  6979                           ;sm_MenuConfiguration_MC50.c: 633:     {;sm_MenuConfiguration_MC50.c: 634:         menu_
      +                          st.parameterSelected=0;
  6980  004CD8  0E00               	movlw	0
  6981  004CDA  6F68               	movwf	(_menu_st+23)& (0+255),b
  6982  004CDC                     l21197:
  6983                           
  6984                           ; BSR set to: 1
  6985                           ;sm_MenuConfiguration_MC50.c: 637:     if(Menu==Del_Menu)
  6986  004CDC  0E0D               	movlw	13
  6987  004CDE  1822               	xorwf	load_New_Menu@Menu^0,w,c
  6988  004CE0  A4D8               	btfss	status,2,c
  6989  004CE2  D01A               	goto	l21201
  6990                           
  6991                           ; BSR set to: 1
  6992                           ;sm_MenuConfiguration_MC50.c: 638:     {;sm_MenuConfiguration_MC50.c: 639:         SetSe
      +                          gmentValueIntermitentMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, m
      +                          enu_st.menuList[ menu_st.parameterSelected].value_display2,( 500/50));
  6993  004CE4  5168               	movf	(_menu_st+23)& (0+255),w,b
  6994  004CE6  0D02               	mullw	2
  6995  004CE8  0E52               	movlw	low (_menu_st+1)
  6996  004CEA  24F3               	addwf	243,w,c
  6997  004CEC  6ED9               	movwf	fsr2l,c
  6998  004CEE  0E01               	movlw	high (_menu_st+1)
  6999  004CF0  20F4               	addwfc	prodh,w,c
  7000  004CF2  6EDA               	movwf	fsr2h,c
  7001  004CF4  50DF               	movf	indf2,w,c
  7002  004CF6  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7003  004CF8  0E00               	movlw	0
  7004  004CFA  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7005  004CFC  0E0A               	movlw	10
  7006  004CFE  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7007  004D00  5168               	movf	(_menu_st+23)& (0+255),w,b
  7008  004D02  0D02               	mullw	2
  7009  004D04  0E51               	movlw	low _menu_st
  7010  004D06  24F3               	addwf	243,w,c
  7011  004D08  6ED9               	movwf	fsr2l,c
  7012  004D0A  0E01               	movlw	high _menu_st
  7013  004D0C  20F4               	addwfc	prodh,w,c
  7014  004D0E  6EDA               	movwf	fsr2h,c
  7015  004D10  50DF               	movf	indf2,w,c
  7016  004D12  EC76  F04F         	call	_SetSegmentValueIntermitentMain
  7017                           
  7018                           ;sm_MenuConfiguration_MC50.c: 640:     }
  7019  004D16  0012               	return	
  7020  004D18                     l21201:
  7021                           
  7022                           ; BSR set to: 1
  7023                           ;sm_MenuConfiguration_MC50.c: 642:     {;sm_MenuConfiguration_MC50.c: 643:         SetSe
      +                          gmentValueMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, menu_st.menu
      +                          List[ menu_st.parameterSelected].value_display2);
  7024  004D18  5168               	movf	(_menu_st+23)& (0+255),w,b
  7025  004D1A  0D02               	mullw	2
  7026  004D1C  0E52               	movlw	low (_menu_st+1)
  7027  004D1E  24F3               	addwf	243,w,c
  7028  004D20  6ED9               	movwf	fsr2l,c
  7029  004D22  0E01               	movlw	high (_menu_st+1)
  7030  004D24  20F4               	addwfc	prodh,w,c
  7031  004D26  6EDA               	movwf	fsr2h,c
  7032  004D28  50DF               	movf	indf2,w,c
  7033  004D2A  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7034  004D2C  5168               	movf	(_menu_st+23)& (0+255),w,b
  7035  004D2E  0D02               	mullw	2
  7036  004D30  0E51               	movlw	low _menu_st
  7037  004D32  24F3               	addwf	243,w,c
  7038  004D34  6ED9               	movwf	fsr2l,c
  7039  004D36  0E01               	movlw	high _menu_st
  7040  004D38  20F4               	addwfc	prodh,w,c
  7041  004D3A  6EDA               	movwf	fsr2h,c
  7042  004D3C  50DF               	movf	indf2,w,c
  7043  004D3E  ECDA  F04E         	call	_SetSegmentValueMain
  7044  004D42  0012               	return		;funcret
  7045  004D44                     __end_of_load_New_Menu:
  7046                           	callstack 0
  7047                           
  7048 ;; *************** function _InitReceiver *****************
  7049 ;; Defined at:
  7050 ;;		line 207 in file "inputs_MC50.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;		None
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;		None
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  1    wreg      void 
  7057 ;; Registers used:
  7058 ;;		wreg, status,2
  7059 ;; Tracked objects:
  7060 ;;		On entry : 30/F
  7061 ;;		On exit  : 3F/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7068 ;;Total ram usage:        0 bytes
  7069 ;; Hardware stack levels used: 1
  7070 ;; Hardware stack levels required when called: 4
  7071 ;; This function calls:
  7072 ;;		Nothing
  7073 ;; This function is called by:
  7074 ;;		_main
  7075 ;;		_setValueToEdit
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           	psect	text5
  7080  009D9A                     __ptext5:
  7081                           	callstack 0
  7082  009D9A                     _InitReceiver:
  7083                           	callstack 23
  7084                           
  7085                           ;inputs_MC50.c: 208:     TMR0IF = 0;
  7086                           
  7087                           ;incstack = 0
  7088  009D9A  010E               	movlb	14	; () banked
  7089  009D9C  9BCA               	bcf	202,5,b	;volatile
  7090                           
  7091                           ;inputs_MC50.c: 209:     TMR0IE = 1;
  7092  009D9E  8BC2               	bsf	194,5,b	;volatile
  7093                           
  7094                           ;inputs_MC50.c: 210:     GIE = 1;
  7095  009DA0  8EF2               	bsf	4082,7,c	;volatile
  7096                           
  7097                           ; BSR set to: 14
  7098                           ;inputs_MC50.c: 211:     RFstate = 0;
  7099  009DA2  0E00               	movlw	0
  7100  009DA4  0101               	movlb	1	; () banked
  7101  009DA6  6F9C               	movwf	_RFstate& (0+255),b
  7102                           
  7103                           ;inputs_MC50.c: 212:     RFFull_12BIT=0;
  7104  009DA8  0E00               	movlw	0
  7105  009DAA  0100               	movlb	0	; () banked
  7106  009DAC  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
  7107                           
  7108                           ;inputs_MC50.c: 213:     RFFull = 0;
  7109  009DAE  0E00               	movlw	0
  7110  009DB0  6F8B               	movwf	_RFFull& (0+255),b	;volatile
  7111                           
  7112                           ; BSR set to: 0
  7113  009DB2  0012               	return		;funcret
  7114  009DB4                     __end_of_InitReceiver:
  7115                           	callstack 0
  7116                           
  7117 ;; *************** function _controlSelectRemote *****************
  7118 ;; Defined at:
  7119 ;;		line 1103 in file "sm_MenuConfiguration_MC50.c"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;		None
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;  typeRemote      1   11[BANK0 ] enum E10392
  7124 ;;  pos             1   10[BANK0 ] unsigned char 
  7125 ;;  tempSerial      4   12[BANK0 ] unsigned long 
  7126 ;;  temp            1   16[BANK0 ] unsigned char 
  7127 ;;  validSerial     1    9[BANK0 ] unsigned char 
  7128 ;; Return value:  Size  Location     Type
  7129 ;;                  1    wreg      void 
  7130 ;; Registers used:
  7131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7132 ;; Tracked objects:
  7133 ;;		On entry : 3F/1
  7134 ;;		On exit  : 0/0
  7135 ;;		Unchanged: 0/0
  7136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7138 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7139 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7140 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7141 ;;Total ram usage:        9 bytes
  7142 ;; Hardware stack levels used: 1
  7143 ;; Hardware stack levels required when called: 14
  7144 ;; This function calls:
  7145 ;;		_ClearFlag_rfCMD
  7146 ;;		_RemoveSerial
  7147 ;;		_SaveNVM_VarSystem
  7148 ;;		_SetSegmentValue
  7149 ;;		_SetSegmentValueIntermitentMain
  7150 ;;		_SetSegmentValueMain
  7151 ;;		___awdiv
  7152 ;;		___lbmod
  7153 ;;		_cmdMemoryIsEmpty
  7154 ;;		_getSerialCmd
  7155 ;;		_getTypeRemote
  7156 ;;		_saveNewSerial
  7157 ;;		_sm_send_event
  7158 ;;		_validateRemoteSerialNumber
  7159 ;; This function is called by:
  7160 ;;		_sm_execute_menuConfiguration
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           	psect	text6
  7165  003FFC                     __ptext6:
  7166                           	callstack 0
  7167  003FFC                     _controlSelectRemote:
  7168                           	callstack 14
  7169                           
  7170                           ; BSR set to: 1
  7171                           ;sm_MenuConfiguration_MC50.c: 1104:     unsigned long tempSerial;;sm_MenuConfiguration_M
      +                          C50.c: 1105:     char temp=getSerialCmd(&tempSerial);
  7172                           
  7173                           ; BSR set to: 0
  7174                           ;incstack = 0
  7175  003FFC  0EE4               	movlw	low controlSelectRemote@tempSerial
  7176  003FFE  6E1B               	movwf	getSerialCmd@serial^0,c
  7177  004000  EC10  F04A         	call	_getSerialCmd	;wreg free
  7178  004004  0100               	movlb	0	; () banked
  7179  004006  6FE8               	movwf	controlSelectRemote@temp& (0+255),b
  7180                           
  7181                           ; BSR set to: 0
  7182                           ;sm_MenuConfiguration_MC50.c: 1106:     char validSerial;;sm_MenuConfiguration_MC50.c: 1
      +                          107:     if(ts_system.timeoutMenu<=0 || button_struct.current==0x00)
  7183  004008  0101               	movlb	1	; () banked
  7184  00400A  BFAD               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  7185  00400C  D008               	goto	u25710
  7186  00400E  51AD               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  7187  004010  E103               	bnz	u25700
  7188  004012  05AC               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  7189  004014  A0D8               	btfss	status,0,c
  7190  004016  D003               	goto	u25710
  7191  004018                     u25700:
  7192                           
  7193                           ; BSR set to: 1
  7194  004018  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7195  00401A  A4D8               	btfss	status,2,c
  7196  00401C  D028               	goto	l22419
  7197  00401E                     u25710:
  7198                           
  7199                           ; BSR set to: 1
  7200                           ;sm_MenuConfiguration_MC50.c: 1108:     {;sm_MenuConfiguration_MC50.c: 1109:         sm_
      +                          send_event(&main_stateMachine, ev_goto_StandBy);
  7201  00401E  0EF1               	movlw	low _main_stateMachine
  7202  004020  6E12               	movwf	sm_send_event@psm^0,c
  7203  004022  0E01               	movlw	high _main_stateMachine
  7204  004024  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7205  004026  0E00               	movlw	0
  7206  004028  6E15               	movwf	(sm_send_event@event+1)^0,c
  7207  00402A  0E07               	movlw	7
  7208  00402C  6E14               	movwf	sm_send_event@event^0,c
  7209  00402E  ECDC  F047         	call	_sm_send_event	;wreg free
  7210                           
  7211                           ;sm_MenuConfiguration_MC50.c: 1110:         sm_send_event(&menuConfiguration_stateMachin
      +                          e, ev_CancelEdition);
  7212  004032  0EBD               	movlw	low _menuConfiguration_stateMachine
  7213  004034  6E12               	movwf	sm_send_event@psm^0,c
  7214  004036  0E02               	movlw	high _menuConfiguration_stateMachine
  7215  004038  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7216  00403A  0E00               	movlw	0
  7217  00403C  6E15               	movwf	(sm_send_event@event+1)^0,c
  7218  00403E  0E03               	movlw	3
  7219  004040  6E14               	movwf	sm_send_event@event^0,c
  7220  004042  ECDC  F047         	call	_sm_send_event	;wreg free
  7221                           
  7222                           ;sm_MenuConfiguration_MC50.c: 1111:         var_sys.DistanceProgrammingActive=NO;
  7223  004046  0E00               	movlw	0
  7224  004048  0101               	movlb	1	; () banked
  7225  00404A  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7226                           
  7227                           ; BSR set to: 1
  7228                           ;sm_MenuConfiguration_MC50.c: 1112:         var_sys.ProgrammingDistanceIs=NoCMD;
  7229  00404C  0E00               	movlw	0
  7230  00404E  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7231                           
  7232                           ; BSR set to: 1
  7233                           ;sm_MenuConfiguration_MC50.c: 1113:         SetSegmentValueMain(dMinus,dMinus);
  7234  004050  0E18               	movlw	24
  7235  004052  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7236  004054  0E18               	movlw	24
  7237  004056  ECDA  F04E         	call	_SetSegmentValueMain
  7238                           
  7239                           ; BSR set to: 0
  7240                           ;sm_MenuConfiguration_MC50.c: 1114:         ClearFlag_rfCMD();
  7241  00405A  EC2E  F050         	call	_ClearFlag_rfCMD	;wreg free
  7242                           
  7243                           ;sm_MenuConfiguration_MC50.c: 1115:         button_struct.processed=1;
  7244  00405E  0E01               	movlw	1
  7245  004060  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7246                           
  7247                           ;sm_MenuConfiguration_MC50.c: 1116:         ts_system.timeoutMenu = 0;
  7248  004062  0E00               	movlw	0
  7249  004064  0101               	movlb	1	; () banked
  7250  004066  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7251  004068  0E00               	movlw	0
  7252  00406A  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7253                           
  7254                           ;sm_MenuConfiguration_MC50.c: 1118:     }
  7255  00406C  0012               	return	
  7256  00406E                     l22419:
  7257                           
  7258                           ; BSR set to: 1
  7259  00406E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7260  004070  A4D8               	btfss	status,2,c
  7261  004072  D05B               	goto	l22441
  7262                           
  7263                           ; BSR set to: 1
  7264  004074  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7265  004076  B4D8               	btfsc	status,2,c
  7266  004078  D058               	goto	l22441
  7267                           
  7268                           ; BSR set to: 1
  7269                           ;sm_MenuConfiguration_MC50.c: 1120:     {;sm_MenuConfiguration_MC50.c: 1121:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7270  00407A  0E00               	movlw	0
  7271  00407C  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7272  00407E  0E64               	movlw	100
  7273  004080  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7274                           
  7275                           ; BSR set to: 1
  7276                           ;sm_MenuConfiguration_MC50.c: 1122:         if(edit_Param.tempValue<=edit_Param.Min)
  7277  004082  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7278  004084  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  7279  004086  A0D8               	btfss	status,0,c
  7280  004088  D003               	goto	l22429
  7281                           
  7282                           ; BSR set to: 1
  7283                           ;sm_MenuConfiguration_MC50.c: 1123:         {;sm_MenuConfiguration_MC50.c: 1124:        
      +                               edit_Param.tempValue=edit_Param.Max;
  7284  00408A  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  7285                           
  7286                           ;sm_MenuConfiguration_MC50.c: 1125:         }
  7287  00408E  D001               	goto	l22431
  7288  004090                     l22429:
  7289                           
  7290                           ; BSR set to: 1
  7291                           ;sm_MenuConfiguration_MC50.c: 1127:         {;sm_MenuConfiguration_MC50.c: 1128:        
      +                               edit_Param.tempValue--;
  7292  004090  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  7293  004092                     l22431:
  7294                           
  7295                           ; BSR set to: 1
  7296                           ;sm_MenuConfiguration_MC50.c: 1130:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1 || edit_Param.tempValue==edit_Param.Max)
  7297  004092  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7298  004096  5168               	movf	(_menu_st+23)& (0+255),w,b
  7299  004098  ECF8  F040         	call	_cmdMemoryIsEmpty
  7300  00409C  06E8               	decf	wreg,f,c
  7301  00409E  B4D8               	btfsc	status,2,c
  7302  0040A0  D004               	goto	u25760
  7303  0040A2  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7304  0040A4  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7305  0040A6  A4D8               	btfss	status,2,c
  7306  0040A8  D021               	goto	l22437
  7307  0040AA                     u25760:
  7308                           
  7309                           ;sm_MenuConfiguration_MC50.c: 1131:         {;sm_MenuConfiguration_MC50.c: 1132:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7310  0040AA  0E0A               	movlw	10
  7311  0040AC  6E10               	movwf	___lbmod@divisor^0,c
  7312  0040AE  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7313  0040B0  ECA2  F04D         	call	___lbmod
  7314  0040B4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7315  0040B6  0E00               	movlw	0
  7316  0040B8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7317  0040BA  0E14               	movlw	20
  7318  0040BC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7319  0040BE  0E0A               	movlw	10
  7320  0040C0  6E10               	movwf	___lbmod@divisor^0,c
  7321  0040C2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7322  0040C4  ECA2  F04D         	call	___lbmod
  7323  0040C8  0100               	movlb	0	; () banked
  7324  0040CA  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7325  0040CC  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7326  0040CE  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7327  0040D0  6E14               	movwf	___awdiv@dividend^0,c
  7328  0040D2  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7329  0040D4  A0D8               	btfss	status,0,c
  7330  0040D6  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7331  0040D8  0E00               	movlw	0
  7332  0040DA  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7333  0040DC  0E0A               	movlw	10
  7334  0040DE  6E16               	movwf	___awdiv@divisor^0,c
  7335  0040E0  ECE3  F042         	call	___awdiv	;wreg free
  7336  0040E4  5014               	movf	?___awdiv^0,w,c
  7337  0040E6  EC76  F04F         	call	_SetSegmentValueIntermitentMain
  7338                           
  7339                           ;sm_MenuConfiguration_MC50.c: 1133:         }
  7340  0040EA  D01C               	goto	l22439
  7341  0040EC                     l22437:
  7342                           
  7343                           ;sm_MenuConfiguration_MC50.c: 1135:         {;sm_MenuConfiguration_MC50.c: 1136:        
      +                               SetSegmentValueMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.t
      +                          empValue%10);
  7344  0040EC  0E0A               	movlw	10
  7345  0040EE  6E10               	movwf	___lbmod@divisor^0,c
  7346  0040F0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7347  0040F2  ECA2  F04D         	call	___lbmod
  7348  0040F6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7349  0040F8  0E0A               	movlw	10
  7350  0040FA  6E10               	movwf	___lbmod@divisor^0,c
  7351  0040FC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7352  0040FE  ECA2  F04D         	call	___lbmod
  7353  004102  0100               	movlb	0	; () banked
  7354  004104  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7355  004106  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7356  004108  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7357  00410A  6E14               	movwf	___awdiv@dividend^0,c
  7358  00410C  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7359  00410E  A0D8               	btfss	status,0,c
  7360  004110  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7361  004112  0E00               	movlw	0
  7362  004114  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7363  004116  0E0A               	movlw	10
  7364  004118  6E16               	movwf	___awdiv@divisor^0,c
  7365  00411A  ECE3  F042         	call	___awdiv	;wreg free
  7366  00411E  5014               	movf	?___awdiv^0,w,c
  7367  004120  ECDA  F04E         	call	_SetSegmentValueMain
  7368  004124                     l22439:
  7369                           
  7370                           ;sm_MenuConfiguration_MC50.c: 1138:         button_struct.processed=1;
  7371  004124  0E01               	movlw	1
  7372  004126  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7373                           
  7374                           ;sm_MenuConfiguration_MC50.c: 1139:     }
  7375  004128  0012               	return	
  7376  00412A                     l22441:
  7377                           
  7378                           ; BSR set to: 1
  7379  00412A  0E17               	movlw	23
  7380  00412C  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7381  00412E  A4D8               	btfss	status,2,c
  7382  004130  D057               	goto	l22463
  7383                           
  7384                           ; BSR set to: 1
  7385  004132  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7386  004134  B4D8               	btfsc	status,2,c
  7387  004136  D054               	goto	l22463
  7388                           
  7389                           ; BSR set to: 1
  7390                           ;sm_MenuConfiguration_MC50.c: 1141:     {;sm_MenuConfiguration_MC50.c: 1142:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7391  004138  0E00               	movlw	0
  7392  00413A  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7393  00413C  0E64               	movlw	100
  7394  00413E  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7395                           
  7396                           ; BSR set to: 1
  7397                           ;sm_MenuConfiguration_MC50.c: 1143:         edit_Param.tempValue++;
  7398  004140  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7399                           
  7400                           ; BSR set to: 1
  7401                           ;sm_MenuConfiguration_MC50.c: 1144:         if(edit_Param.tempValue>edit_Param.Max)
  7402  004142  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7403  004144  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  7404  004146  A0D8               	btfss	status,0,c
  7405                           
  7406                           ; BSR set to: 1
  7407                           ;sm_MenuConfiguration_MC50.c: 1145:         {;sm_MenuConfiguration_MC50.c: 1146:        
      +                                edit_Param.tempValue=edit_Param.Min;
  7408  004148  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  7409                           
  7410                           ; BSR set to: 1
  7411                           ;sm_MenuConfiguration_MC50.c: 1148:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1|| edit_Param.tempValue==edit_Param.Max)
  7412  00414C  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7413  004150  5168               	movf	(_menu_st+23)& (0+255),w,b
  7414  004152  ECF8  F040         	call	_cmdMemoryIsEmpty
  7415  004156  06E8               	decf	wreg,f,c
  7416  004158  B4D8               	btfsc	status,2,c
  7417  00415A  D004               	goto	u25810
  7418  00415C  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7419  00415E  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7420  004160  A4D8               	btfss	status,2,c
  7421  004162  D021               	goto	l22459
  7422  004164                     u25810:
  7423                           
  7424                           ;sm_MenuConfiguration_MC50.c: 1149:         {;sm_MenuConfiguration_MC50.c: 1150:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7425  004164  0E0A               	movlw	10
  7426  004166  6E10               	movwf	___lbmod@divisor^0,c
  7427  004168  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7428  00416A  ECA2  F04D         	call	___lbmod
  7429  00416E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7430  004170  0E00               	movlw	0
  7431  004172  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7432  004174  0E14               	movlw	20
  7433  004176  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7434  004178  0E0A               	movlw	10
  7435  00417A  6E10               	movwf	___lbmod@divisor^0,c
  7436  00417C  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7437  00417E  ECA2  F04D         	call	___lbmod
  7438  004182  0100               	movlb	0	; () banked
  7439  004184  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7440  004186  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7441  004188  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7442  00418A  6E14               	movwf	___awdiv@dividend^0,c
  7443  00418C  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7444  00418E  A0D8               	btfss	status,0,c
  7445  004190  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7446  004192  0E00               	movlw	0
  7447  004194  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7448  004196  0E0A               	movlw	10
  7449  004198  6E16               	movwf	___awdiv@divisor^0,c
  7450  00419A  ECE3  F042         	call	___awdiv	;wreg free
  7451  00419E  5014               	movf	?___awdiv^0,w,c
  7452  0041A0  EC76  F04F         	call	_SetSegmentValueIntermitentMain
  7453                           
  7454                           ;sm_MenuConfiguration_MC50.c: 1151:         }
  7455  0041A4  D7BF               	goto	l22439
  7456  0041A6                     l22459:
  7457                           
  7458                           ;sm_MenuConfiguration_MC50.c: 1153:         {;sm_MenuConfiguration_MC50.c: 1154:        
      +                               SetSegmentValue((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempV
      +                          alue%10);
  7459  0041A6  0E0A               	movlw	10
  7460  0041A8  6E10               	movwf	___lbmod@divisor^0,c
  7461  0041AA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7462  0041AC  ECA2  F04D         	call	___lbmod
  7463  0041B0  6E1C               	movwf	SetSegmentValue@d2^0,c
  7464  0041B2  0E0A               	movlw	10
  7465  0041B4  6E10               	movwf	___lbmod@divisor^0,c
  7466  0041B6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7467  0041B8  ECA2  F04D         	call	___lbmod
  7468  0041BC  0100               	movlb	0	; () banked
  7469  0041BE  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7470  0041C0  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7471  0041C2  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7472  0041C4  6E14               	movwf	___awdiv@dividend^0,c
  7473  0041C6  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7474  0041C8  A0D8               	btfss	status,0,c
  7475  0041CA  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7476  0041CC  0E00               	movlw	0
  7477  0041CE  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7478  0041D0  0E0A               	movlw	10
  7479  0041D2  6E16               	movwf	___awdiv@divisor^0,c
  7480  0041D4  ECE3  F042         	call	___awdiv	;wreg free
  7481  0041D8  5014               	movf	?___awdiv^0,w,c
  7482  0041DA  ECF4  F04E         	call	_SetSegmentValue
  7483  0041DE  D7A2               	goto	l22439
  7484  0041E0                     l22463:
  7485                           
  7486                           ; BSR set to: 1
  7487  0041E0  0E63               	movlw	99
  7488  0041E2  644A               	cpfsgt	(_edit_Param+4)^0,c	;volatile
  7489  0041E4  D01A               	goto	l22473
  7490                           
  7491                           ; BSR set to: 1
  7492  0041E6  0E63               	movlw	99
  7493  0041E8  6449               	cpfsgt	(_edit_Param+3)^0,c	;volatile
  7494  0041EA  D017               	goto	l22473
  7495                           
  7496                           ; BSR set to: 1
  7497                           ;sm_MenuConfiguration_MC50.c: 1159:     {;sm_MenuConfiguration_MC50.c: 1160:         if(
      +                          menu_st.parameterSelected==0)
  7498  0041EC  5168               	movf	(_menu_st+23)& (0+255),w,b
  7499  0041EE  A4D8               	btfss	status,2,c
  7500  0041F0  D00A               	goto	l22471
  7501                           
  7502                           ; BSR set to: 1
  7503                           ;sm_MenuConfiguration_MC50.c: 1161:         {;sm_MenuConfiguration_MC50.c: 1162:        
      +                               SetSegmentValueIntermitentMain(dL, dU,( 500/50));
  7504  0041F2  0E13               	movlw	19
  7505  0041F4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7506  0041F6  0E00               	movlw	0
  7507  0041F8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7508  0041FA  0E0A               	movlw	10
  7509  0041FC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7510  0041FE  0E12               	movlw	18
  7511  004200  EC76  F04F         	call	_SetSegmentValueIntermitentMain
  7512                           
  7513                           ;sm_MenuConfiguration_MC50.c: 1163:         }
  7514  004204  0012               	return	
  7515  004206                     l22471:
  7516                           
  7517                           ; BSR set to: 1
  7518                           ;sm_MenuConfiguration_MC50.c: 1165:         {;sm_MenuConfiguration_MC50.c: 1166:        
      +                               SetSegmentValueIntermitentMain(dL, dP,( 500/50));
  7519  004206  0E10               	movlw	16
  7520  004208  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7521  00420A  0E00               	movlw	0
  7522  00420C  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7523  00420E  0E0A               	movlw	10
  7524  004210  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7525  004212  0E12               	movlw	18
  7526  004214  EC76  F04F         	call	_SetSegmentValueIntermitentMain
  7527  004218  0012               	return	
  7528  00421A                     l22473:
  7529                           
  7530                           ; BSR set to: 1
  7531  00421A  0100               	movlb	0	; () banked
  7532  00421C  29E8               	incf	controlSelectRemote@temp& (0+255),w,b
  7533  00421E  B4D8               	btfsc	status,2,c
  7534  004220  D0A8               	goto	l22541
  7535                           
  7536                           ; BSR set to: 0
  7537  004222  51E8               	movf	controlSelectRemote@temp& (0+255),w,b
  7538  004224  B4D8               	btfsc	status,2,c
  7539  004226  D00F               	goto	u25900
  7540                           
  7541                           ; BSR set to: 0
  7542  004228  05E8               	decf	controlSelectRemote@temp& (0+255),w,b
  7543  00422A  B4D8               	btfsc	status,2,c
  7544  00422C  D00C               	goto	u25900
  7545                           
  7546                           ; BSR set to: 0
  7547  00422E  0E02               	movlw	2
  7548  004230  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7549  004232  B4D8               	btfsc	status,2,c
  7550  004234  D008               	goto	u25900
  7551                           
  7552                           ; BSR set to: 0
  7553  004236  0E04               	movlw	4
  7554  004238  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7555  00423A  B4D8               	btfsc	status,2,c
  7556  00423C  D004               	goto	u25900
  7557                           
  7558                           ; BSR set to: 0
  7559  00423E  0E08               	movlw	8
  7560  004240  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7561  004242  A4D8               	btfss	status,2,c
  7562  004244  D096               	goto	l22541
  7563  004246                     u25900:
  7564                           
  7565                           ; BSR set to: 0
  7566                           ;sm_MenuConfiguration_MC50.c: 1170:     {;sm_MenuConfiguration_MC50.c: 1171:         cha
      +                          r pos;;sm_MenuConfiguration_MC50.c: 1172:         validSerial=validateRemoteSerialNumber
      +                          (tempSerial,NO,&pos);
  7567  004246  C0E4  F02E         	movff	controlSelectRemote@tempSerial,validateRemoteSerialNumber@serial
  7568  00424A  C0E5  F02F         	movff	controlSelectRemote@tempSerial+1,validateRemoteSerialNumber@serial+1
  7569  00424E  C0E6  F030         	movff	controlSelectRemote@tempSerial+2,validateRemoteSerialNumber@serial+2
  7570  004252  C0E7  F031         	movff	controlSelectRemote@tempSerial+3,validateRemoteSerialNumber@serial+3
  7571  004256  0E00               	movlw	0
  7572  004258  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
  7573  00425A  0EE2               	movlw	low controlSelectRemote@pos
  7574  00425C  6E33               	movwf	validateRemoteSerialNumber@position^0,c
  7575  00425E  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
  7576  004260  EC26  F031         	call	_validateRemoteSerialNumber	;wreg free
  7577  004264  6FE1               	movwf	controlSelectRemote@validSerial& (0+255),b
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;sm_MenuConfiguration_MC50.c: 1174:         TypeRemote_st typeRemote = getTypeRemote();
  7581  004266  EC2B  F050         	call	_getTypeRemote	;wreg free
  7582  00426A  0100               	movlb	0	; () banked
  7583  00426C  6FE3               	movwf	controlSelectRemote@typeRemote& (0+255),b
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;sm_MenuConfiguration_MC50.c: 1175:         if(validSerial==0&&(typeRemote==Keeloq_Rolli
      +                          ngCode || (var_sys_NVM.OnlyRollingCode==NO)))
  7587  00426E  51E1               	movf	controlSelectRemote@validSerial& (0+255),w,b
  7588  004270  A4D8               	btfss	status,2,c
  7589  004272  0012               	return	
  7590                           
  7591                           ; BSR set to: 0
  7592  004274  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7593  004276  B4D8               	btfsc	status,2,c
  7594  004278  D003               	goto	u25930
  7595                           
  7596                           ; BSR set to: 0
  7597  00427A  51BE               	movf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
  7598  00427C  A4D8               	btfss	status,2,c
  7599  00427E  0012               	return	
  7600  004280                     u25930:
  7601                           
  7602                           ; BSR set to: 0
  7603                           ;sm_MenuConfiguration_MC50.c: 1176:         {;sm_MenuConfiguration_MC50.c: 1177:        
      +                               saveNewSerial(menu_st.parameterSelected,tempSerial,edit_Param.tempValue);
  7604  004280  C0E4  F0D8         	movff	controlSelectRemote@tempSerial,saveNewSerial@tempSerial
  7605  004284  C0E5  F0D9         	movff	controlSelectRemote@tempSerial+1,saveNewSerial@tempSerial+1
  7606  004288  C0E6  F0DA         	movff	controlSelectRemote@tempSerial+2,saveNewSerial@tempSerial+2
  7607  00428C  C0E7  F0DB         	movff	controlSelectRemote@tempSerial+3,saveNewSerial@tempSerial+3
  7608  004290  C049  F0DC         	movff	_edit_Param+3,saveNewSerial@position	;volatile
  7609  004294  0101               	movlb	1	; () banked
  7610  004296  5168               	movf	(_menu_st+23)& (0+255),w,b
  7611  004298  EC01  F046         	call	_saveNewSerial
  7612                           
  7613                           ;sm_MenuConfiguration_MC50.c: 1178:             if(menu_st.parameterSelected==0&&edit_Pa
      +                          ram.tempValue==var_sys_NVM.positionRemotesFull&&var_sys_NVM.positionRemotesFull<99)
  7614  00429C  0101               	movlb	1	; () banked
  7615  00429E  5168               	movf	(_menu_st+23)& (0+255),w,b
  7616  0042A0  A4D8               	btfss	status,2,c
  7617  0042A2  D009               	goto	l22505
  7618                           
  7619                           ; BSR set to: 1
  7620  0042A4  0100               	movlb	0	; () banked
  7621  0042A6  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7622  0042A8  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7623  0042AA  A4D8               	btfss	status,2,c
  7624  0042AC  D004               	goto	l22505
  7625                           
  7626                           ; BSR set to: 0
  7627  0042AE  0E63               	movlw	99
  7628  0042B0  61B8               	cpfslt	(_var_sys_NVM+32)& (0+255),b	;volatile
  7629  0042B2  D001               	goto	l22505
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;sm_MenuConfiguration_MC50.c: 1179:                 var_sys_NVM.positionRemotesFull++;
  7633  0042B4  2BB8               	incf	(_var_sys_NVM+32)& (0+255),f,b	;volatile
  7634  0042B6                     l22505:
  7635                           
  7636                           ;sm_MenuConfiguration_MC50.c: 1180:             if(menu_st.parameterSelected==1&&edit_Pa
      +                          ram.tempValue==var_sys_NVM.positionRemotesWalk&&var_sys_NVM.positionRemotesWalk<99)
  7637  0042B6  0101               	movlb	1	; () banked
  7638  0042B8  0568               	decf	(_menu_st+23)& (0+255),w,b
  7639  0042BA  A4D8               	btfss	status,2,c
  7640  0042BC  D009               	goto	l22513
  7641                           
  7642                           ; BSR set to: 1
  7643  0042BE  0100               	movlb	0	; () banked
  7644  0042C0  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
  7645  0042C2  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7646  0042C4  A4D8               	btfss	status,2,c
  7647  0042C6  D004               	goto	l22513
  7648                           
  7649                           ; BSR set to: 0
  7650  0042C8  0E63               	movlw	99
  7651  0042CA  61B9               	cpfslt	(_var_sys_NVM+33)& (0+255),b	;volatile
  7652  0042CC  D001               	goto	l22513
  7653                           
  7654                           ; BSR set to: 0
  7655                           ;sm_MenuConfiguration_MC50.c: 1181:                 var_sys_NVM.positionRemotesWalk++;
  7656  0042CE  2BB9               	incf	(_var_sys_NVM+33)& (0+255),f,b	;volatile
  7657  0042D0                     l22513:
  7658                           
  7659                           ;sm_MenuConfiguration_MC50.c: 1182:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_addRemotes);
  7660  0042D0  0EBD               	movlw	low _menuConfiguration_stateMachine
  7661  0042D2  6E12               	movwf	sm_send_event@psm^0,c
  7662  0042D4  0E02               	movlw	high _menuConfiguration_stateMachine
  7663  0042D6  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7664  0042D8  0E00               	movlw	0
  7665  0042DA  6E15               	movwf	(sm_send_event@event+1)^0,c
  7666  0042DC  0E08               	movlw	8
  7667  0042DE  6E14               	movwf	sm_send_event@event^0,c
  7668  0042E0  ECDC  F047         	call	_sm_send_event	;wreg free
  7669                           
  7670                           ;sm_MenuConfiguration_MC50.c: 1183:             var_sys.DistanceProgrammingActive=NO;
  7671  0042E4  0E00               	movlw	0
  7672  0042E6  0101               	movlb	1	; () banked
  7673  0042E8  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7674                           
  7675                           ; BSR set to: 1
  7676                           ;sm_MenuConfiguration_MC50.c: 1184:             var_sys.ProgrammingDistanceIs=NoCMD;
  7677  0042EA  0E00               	movlw	0
  7678  0042EC  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7679                           
  7680                           ; BSR set to: 1
  7681                           ;sm_MenuConfiguration_MC50.c: 1185:             ts_system.timeSinalizationDigit=(1000/50
      +                          )*2;
  7682  0042EE  0E00               	movlw	0
  7683  0042F0  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
  7684  0042F2  0E28               	movlw	40
  7685  0042F4  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
  7686                           
  7687                           ; BSR set to: 1
  7688                           ;sm_MenuConfiguration_MC50.c: 1186:             SetSegmentValueIntermitentMain((edit_Par
      +                          am.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,( 200/50));
  7689  0042F6  0E0A               	movlw	10
  7690  0042F8  6E10               	movwf	___lbmod@divisor^0,c
  7691  0042FA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7692  0042FC  ECA2  F04D         	call	___lbmod
  7693  004300  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7694  004302  0E00               	movlw	0
  7695  004304  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7696  004306  0E04               	movlw	4
  7697  004308  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7698  00430A  0E0A               	movlw	10
  7699  00430C  6E10               	movwf	___lbmod@divisor^0,c
  7700  00430E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7701  004310  ECA2  F04D         	call	___lbmod
  7702  004314  0100               	movlb	0	; () banked
  7703  004316  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7704  004318  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7705  00431A  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7706  00431C  6E14               	movwf	___awdiv@dividend^0,c
  7707  00431E  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7708  004320  A0D8               	btfss	status,0,c
  7709  004322  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7710  004324  0E00               	movlw	0
  7711  004326  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7712  004328  0E0A               	movlw	10
  7713  00432A  6E16               	movwf	___awdiv@divisor^0,c
  7714  00432C  ECE3  F042         	call	___awdiv	;wreg free
  7715  004330  5014               	movf	?___awdiv^0,w,c
  7716  004332  EC76  F04F         	call	_SetSegmentValueIntermitentMain
  7717                           
  7718                           ;sm_MenuConfiguration_MC50.c: 1187:             if(edit_Param.Max==edit_Param.tempValue 
      +                          || edit_Param.Max==0 )
  7719  004336  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7720  004338  184A               	xorwf	(_edit_Param+4)^0,w,c	;volatile
  7721  00433A  B4D8               	btfsc	status,2,c
  7722  00433C  D003               	goto	u26010
  7723  00433E  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7724  004340  A4D8               	btfss	status,2,c
  7725  004342  0012               	return	
  7726  004344                     u26010:
  7727                           
  7728                           ;sm_MenuConfiguration_MC50.c: 1188:             {;sm_MenuConfiguration_MC50.c: 1192:    
      +                                       if(var_sys_NVM.positionRemotesFull==0 && var_sys_NVM.positionRemotesWalk==0
      +                           && typeRemote==Keeloq_RollingCode)
  7729  004344  0100               	movlb	0	; () banked
  7730  004346  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7731  004348  A4D8               	btfss	status,2,c
  7732  00434A  D008               	goto	l22535
  7733                           
  7734                           ; BSR set to: 0
  7735  00434C  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
  7736  00434E  A4D8               	btfss	status,2,c
  7737  004350  D005               	goto	l22535
  7738                           
  7739                           ; BSR set to: 0
  7740  004352  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7741  004354  A4D8               	btfss	status,2,c
  7742  004356  D002               	goto	l22535
  7743                           
  7744                           ; BSR set to: 0
  7745                           ;sm_MenuConfiguration_MC50.c: 1193:                 {;sm_MenuConfiguration_MC50.c: 1195:
      +                                               var_sys_NVM.OnlyRollingCode=YES;
  7746  004358  0E01               	movlw	1
  7747  00435A  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  7748  00435C                     l22535:
  7749                           
  7750                           ; BSR set to: 0
  7751                           ;sm_MenuConfiguration_MC50.c: 1199:                 edit_Param.tempValue++;
  7752  00435C  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7753                           
  7754                           ; BSR set to: 0
  7755                           ;sm_MenuConfiguration_MC50.c: 1200:                 edit_Param.Value[0]=edit_Param.tempV
      +                          alue;
  7756  00435E  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  7757  004362  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  7758  004366  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  7759                           
  7760                           ; BSR set to: 0
  7761                           ;sm_MenuConfiguration_MC50.c: 1201:                 SaveNVM_VarSystem(pageMemoryCounters
      +                          );
  7762  00436A  0E02               	movlw	2
  7763  00436C  ECEA  F04B         	call	_SaveNVM_VarSystem
  7764  004370  0012               	return	
  7765  004372                     l22541:
  7766                           
  7767                           ; BSR set to: 0
  7768  004372  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7769  004374  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7770  004376  B4D8               	btfsc	status,2,c
  7771  004378  0012               	return	
  7772                           
  7773                           ; BSR set to: 0
  7774  00437A  0E07               	movlw	7
  7775  00437C  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7776  00437E  A4D8               	btfss	status,2,c
  7777  004380  0012               	return	
  7778                           
  7779                           ; BSR set to: 0
  7780  004382  0E27               	movlw	39
  7781  004384  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  7782  004386  0012               	return	
  7783                           
  7784                           ; BSR set to: 0
  7785                           ;sm_MenuConfiguration_MC50.c: 1208:     {;sm_MenuConfiguration_MC50.c: 1209:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7786  004388  0E00               	movlw	0
  7787  00438A  0101               	movlb	1	; () banked
  7788  00438C  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7789  00438E  0E64               	movlw	100
  7790  004390  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7791                           
  7792                           ; BSR set to: 1
  7793                           ;sm_MenuConfiguration_MC50.c: 1210:         RemoveSerial(menu_st.parameterSelected,edit_
      +                          Param.tempValue);
  7794  004392  C049  F03A         	movff	_edit_Param+3,RemoveSerial@position	;volatile
  7795  004396  5168               	movf	(_menu_st+23)& (0+255),w,b
  7796  004398  ECA8  F043         	call	_RemoveSerial
  7797                           
  7798                           ;sm_MenuConfiguration_MC50.c: 1211:         SetSegmentValueIntermitentMain((edit_Param.t
      +                          empValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  7799  00439C  0E0A               	movlw	10
  7800  00439E  6E10               	movwf	___lbmod@divisor^0,c
  7801  0043A0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7802  0043A2  ECA2  F04D         	call	___lbmod
  7803  0043A6  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7804  0043A8  0E00               	movlw	0
  7805  0043AA  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7806  0043AC  0E14               	movlw	20
  7807  0043AE  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7808  0043B0  0E0A               	movlw	10
  7809  0043B2  6E10               	movwf	___lbmod@divisor^0,c
  7810  0043B4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7811  0043B6  ECA2  F04D         	call	___lbmod
  7812  0043BA  0100               	movlb	0	; () banked
  7813  0043BC  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7814  0043BE  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7815  0043C0  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7816  0043C2  6E14               	movwf	___awdiv@dividend^0,c
  7817  0043C4  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7818  0043C6  A0D8               	btfss	status,0,c
  7819  0043C8  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7820  0043CA  0E00               	movlw	0
  7821  0043CC  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7822  0043CE  0E0A               	movlw	10
  7823  0043D0  6E16               	movwf	___awdiv@divisor^0,c
  7824  0043D2  ECE3  F042         	call	___awdiv	;wreg free
  7825  0043D6  5014               	movf	?___awdiv^0,w,c
  7826  0043D8  EC76  F04F         	call	_SetSegmentValueIntermitentMain
  7827  0043DC  0012               	return	
  7828  0043DE                     __end_of_controlSelectRemote:
  7829                           	callstack 0
  7830                           
  7831 ;; *************** function _getTypeRemote *****************
  7832 ;; Defined at:
  7833 ;;		line 459 in file "inputs_MC50.c"
  7834 ;; Parameters:    Size  Location     Type
  7835 ;;		None
  7836 ;; Auto vars:     Size  Location     Type
  7837 ;;		None
  7838 ;; Return value:  Size  Location     Type
  7839 ;;                  1    wreg      enum E10559
  7840 ;; Registers used:
  7841 ;;		wreg, status,2
  7842 ;; Tracked objects:
  7843 ;;		On entry : 3F/0
  7844 ;;		On exit  : 3F/2
  7845 ;;		Unchanged: 0/0
  7846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7851 ;;Total ram usage:        0 bytes
  7852 ;; Hardware stack levels used: 1
  7853 ;; Hardware stack levels required when called: 4
  7854 ;; This function calls:
  7855 ;;		Nothing
  7856 ;; This function is called by:
  7857 ;;		_controlSelectRemote
  7858 ;; This function uses a non-reentrant model
  7859 ;;
  7860                           
  7861                           	psect	text7
  7862  00A056                     __ptext7:
  7863                           	callstack 0
  7864  00A056                     _getTypeRemote:
  7865                           	callstack 23
  7866                           
  7867                           ; BSR set to: 0
  7868                           ;inputs_MC50.c: 460:     return classic_data.type;
  7869                           
  7870                           ;incstack = 0
  7871  00A056  0102               	movlb	2	; () banked
  7872  00A058  51A0               	movf	(_classic_data+14)& (0+255),w,b
  7873                           
  7874                           ; BSR set to: 2
  7875  00A05A  0012               	return		;funcret
  7876  00A05C                     __end_of_getTypeRemote:
  7877                           	callstack 0
  7878                           
  7879 ;; *************** function _getSerialCmd *****************
  7880 ;; Defined at:
  7881 ;;		line 442 in file "inputs_MC50.c"
  7882 ;; Parameters:    Size  Location     Type
  7883 ;;  serial          1   26[COMRAM] PTR unsigned long 
  7884 ;;		 -> controlSelectRemote@tempSerial(4), 
  7885 ;; Auto vars:     Size  Location     Type
  7886 ;;  temp            1   27[COMRAM] char 
  7887 ;; Return value:  Size  Location     Type
  7888 ;;                  1    wreg      char 
  7889 ;; Registers used:
  7890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7891 ;; Tracked objects:
  7892 ;;		On entry : 3F/1
  7893 ;;		On exit  : 0/0
  7894 ;;		Unchanged: 0/0
  7895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7896 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7897 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7899 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7900 ;;Total ram usage:        2 bytes
  7901 ;; Hardware stack levels used: 1
  7902 ;; Hardware stack levels required when called: 5
  7903 ;; This function calls:
  7904 ;;		_memcpy
  7905 ;; This function is called by:
  7906 ;;		_controlSelectRemote
  7907 ;; This function uses a non-reentrant model
  7908 ;;
  7909                           
  7910                           	psect	text8
  7911  009420                     __ptext8:
  7912                           	callstack 0
  7913  009420                     _getSerialCmd:
  7914                           	callstack 22
  7915                           
  7916                           ; BSR set to: 1
  7917                           ;inputs_MC50.c: 443:     signed char temp=-1;
  7918                           
  7919                           ; BSR set to: 2
  7920                           ;incstack = 0
  7921  009420  681C               	setf	getSerialCmd@temp^0,c
  7922                           
  7923                           ; BSR set to: 1
  7924                           ;inputs_MC50.c: 444:     if(RFFull)
  7925  009422  0100               	movlb	0	; () banked
  7926  009424  518B               	movf	_RFFull& (0+255),w,b	;volatile
  7927  009426  B4D8               	btfsc	status,2,c
  7928  009428  D020               	goto	l20895
  7929                           
  7930                           ; BSR set to: 0
  7931                           ;inputs_MC50.c: 445:     {;inputs_MC50.c: 446:         if(RFFull_12BIT)
  7932  00942A  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
  7933  00942C  B4D8               	btfsc	status,2,c
  7934  00942E  D00E               	goto	l20891
  7935                           
  7936                           ; BSR set to: 0
  7937                           ;inputs_MC50.c: 447:         {;inputs_MC50.c: 448:             memcpy((char*)serial,&cla
      +                          ssic_data.serialnumber,4);
  7938  009430  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7939  009434  6A11               	clrf	(memcpy@d1+1)^0,c
  7940  009436  0E96               	movlw	low (_classic_data+4)
  7941  009438  6E12               	movwf	memcpy@s1^0,c
  7942  00943A  0E02               	movlw	high (_classic_data+4)
  7943  00943C  6E13               	movwf	(memcpy@s1+1)^0,c
  7944  00943E  0E00               	movlw	0
  7945  009440  6E15               	movwf	(memcpy@n+1)^0,c
  7946  009442  0E04               	movlw	4
  7947  009444  6E14               	movwf	memcpy@n^0,c
  7948  009446  ECEC  F04A         	call	_memcpy	;wreg free
  7949                           
  7950                           ;inputs_MC50.c: 449:         }
  7951  00944A  D00D               	goto	l20893
  7952  00944C                     l20891:
  7953                           
  7954                           ; BSR set to: 0
  7955                           ;inputs_MC50.c: 451:         {;inputs_MC50.c: 452:             memcpy((char*)serial,(cha
      +                          r*)BufferRF+4,4);
  7956  00944C  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7957  009450  6A11               	clrf	(memcpy@d1+1)^0,c
  7958  009452  0ECC               	movlw	low (_BufferRF+4)
  7959  009454  6E12               	movwf	memcpy@s1^0,c
  7960  009456  0E02               	movlw	high (_BufferRF+4)
  7961  009458  6E13               	movwf	(memcpy@s1+1)^0,c
  7962  00945A  0E00               	movlw	0
  7963  00945C  6E15               	movwf	(memcpy@n+1)^0,c
  7964  00945E  0E04               	movlw	4
  7965  009460  6E14               	movwf	memcpy@n^0,c
  7966  009462  ECEC  F04A         	call	_memcpy	;wreg free
  7967  009466                     l20893:
  7968                           
  7969                           ;inputs_MC50.c: 454:         temp=classic_data.fcode1;
  7970  009466  C29E  F01C         	movff	_classic_data+12,getSerialCmd@temp
  7971  00946A                     l20895:
  7972                           
  7973                           ;inputs_MC50.c: 456:     return temp;
  7974  00946A  501C               	movf	getSerialCmd@temp^0,w,c
  7975  00946C  0012               	return		;funcret
  7976  00946E                     __end_of_getSerialCmd:
  7977                           	callstack 0
  7978                           
  7979 ;; *************** function _controlSaveRemote *****************
  7980 ;; Defined at:
  7981 ;;		line 1216 in file "sm_MenuConfiguration_MC50.c"
  7982 ;; Parameters:    Size  Location     Type
  7983 ;;		None
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;		None
  7986 ;; Return value:  Size  Location     Type
  7987 ;;                  1    wreg      void 
  7988 ;; Registers used:
  7989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7990 ;; Tracked objects:
  7991 ;;		On entry : 3F/0
  7992 ;;		On exit  : 0/0
  7993 ;;		Unchanged: 0/0
  7994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7997 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7998 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7999 ;;Total ram usage:        1 bytes
  8000 ;; Hardware stack levels used: 1
  8001 ;; Hardware stack levels required when called: 6
  8002 ;; This function calls:
  8003 ;;		_ClearFlag_rfCMD
  8004 ;;		_SetSegmentValueIntermitentMain
  8005 ;;		_SetSegmentValueMain
  8006 ;;		___awdiv
  8007 ;;		___lbmod
  8008 ;;		_sm_send_event
  8009 ;; This function is called by:
  8010 ;;		_sm_execute_menuConfiguration
  8011 ;; This function uses a non-reentrant model
  8012 ;;
  8013                           
  8014                           	psect	text9
  8015  007D64                     __ptext9:
  8016                           	callstack 0
  8017  007D64                     _controlSaveRemote:
  8018                           	callstack 22
  8019                           
  8020                           ; BSR set to: 0
  8021                           ;sm_MenuConfiguration_MC50.c: 1217:      if (ts_system.timeSinalizationDigit<=0)
  8022                           
  8023                           ;incstack = 0
  8024  007D64  0101               	movlb	1	; () banked
  8025  007D66  BFAB               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8026  007D68  D005               	goto	u26080
  8027  007D6A  51AB               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8028  007D6C  E154               	bnz	l3493
  8029  007D6E  05AA               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8030  007D70  B0D8               	btfsc	status,0,c
  8031  007D72  0012               	return	
  8032  007D74                     u26080:
  8033                           
  8034                           ; BSR set to: 1
  8035                           ;sm_MenuConfiguration_MC50.c: 1218:      {;sm_MenuConfiguration_MC50.c: 1219:          i
      +                          f(edit_Param.Max==0)
  8036  007D74  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  8037  007D76  A4D8               	btfss	status,2,c
  8038  007D78  D02E               	goto	l22563
  8039                           
  8040                           ; BSR set to: 1
  8041                           ;sm_MenuConfiguration_MC50.c: 1220:          {;sm_MenuConfiguration_MC50.c: 1221:       
      +                                 ts_system.timeoutMenu=10*(1000/50);
  8042  007D7A  0E00               	movlw	0
  8043  007D7C  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8044  007D7E  0EC8               	movlw	200
  8045  007D80  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8046                           
  8047                           ; BSR set to: 1
  8048                           ;sm_MenuConfiguration_MC50.c: 1222:              sm_send_event(&menuConfiguration_stateM
      +                          achine, ev_NextRemote);
  8049  007D82  0EBD               	movlw	low _menuConfiguration_stateMachine
  8050  007D84  6E12               	movwf	sm_send_event@psm^0,c
  8051  007D86  0E02               	movlw	high _menuConfiguration_stateMachine
  8052  007D88  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8053  007D8A  0E00               	movlw	0
  8054  007D8C  6E15               	movwf	(sm_send_event@event+1)^0,c
  8055  007D8E  0E09               	movlw	9
  8056  007D90  6E14               	movwf	sm_send_event@event^0,c
  8057  007D92  ECDC  F047         	call	_sm_send_event	;wreg free
  8058                           
  8059                           ;sm_MenuConfiguration_MC50.c: 1223:              SetSegmentValueIntermitentMain((edit_Pa
      +                          ram.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  8060  007D96  0E0A               	movlw	10
  8061  007D98  6E10               	movwf	___lbmod@divisor^0,c
  8062  007D9A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8063  007D9C  ECA2  F04D         	call	___lbmod
  8064  007DA0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  8065  007DA2  0E00               	movlw	0
  8066  007DA4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  8067  007DA6  0E14               	movlw	20
  8068  007DA8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  8069  007DAA  0E0A               	movlw	10
  8070  007DAC  6E10               	movwf	___lbmod@divisor^0,c
  8071  007DAE  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8072  007DB0  ECA2  F04D         	call	___lbmod
  8073  007DB4  6E20               	movwf	??_controlSaveRemote^0,c
  8074  007DB6  5020               	movf	??_controlSaveRemote^0,w,c
  8075  007DB8  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  8076  007DBA  6E14               	movwf	___awdiv@dividend^0,c
  8077  007DBC  6A15               	clrf	(___awdiv@dividend+1)^0,c
  8078  007DBE  A0D8               	btfss	status,0,c
  8079  007DC0  0615               	decf	(___awdiv@dividend+1)^0,f,c
  8080  007DC2  0E00               	movlw	0
  8081  007DC4  6E17               	movwf	(___awdiv@divisor+1)^0,c
  8082  007DC6  0E0A               	movlw	10
  8083  007DC8  6E16               	movwf	___awdiv@divisor^0,c
  8084  007DCA  ECE3  F042         	call	___awdiv	;wreg free
  8085  007DCE  5014               	movf	?___awdiv^0,w,c
  8086  007DD0  EC76  F04F         	call	_SetSegmentValueIntermitentMain
  8087                           
  8088                           ;sm_MenuConfiguration_MC50.c: 1224:          }
  8089  007DD4  0012               	return	
  8090  007DD6                     l22563:
  8091                           
  8092                           ; BSR set to: 1
  8093                           ;sm_MenuConfiguration_MC50.c: 1226:          {;sm_MenuConfiguration_MC50.c: 1227:       
      +                                sm_send_event(&main_stateMachine, ev_goto_StandBy);
  8094  007DD6  0EF1               	movlw	low _main_stateMachine
  8095  007DD8  6E12               	movwf	sm_send_event@psm^0,c
  8096  007DDA  0E01               	movlw	high _main_stateMachine
  8097  007DDC  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8098  007DDE  0E00               	movlw	0
  8099  007DE0  6E15               	movwf	(sm_send_event@event+1)^0,c
  8100  007DE2  0E07               	movlw	7
  8101  007DE4  6E14               	movwf	sm_send_event@event^0,c
  8102  007DE6  ECDC  F047         	call	_sm_send_event	;wreg free
  8103                           
  8104                           ;sm_MenuConfiguration_MC50.c: 1228:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_ParameterIsSaved);
  8105  007DEA  0EBD               	movlw	low _menuConfiguration_stateMachine
  8106  007DEC  6E12               	movwf	sm_send_event@psm^0,c
  8107  007DEE  0E02               	movlw	high _menuConfiguration_stateMachine
  8108  007DF0  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8109  007DF2  0E00               	movlw	0
  8110  007DF4  6E15               	movwf	(sm_send_event@event+1)^0,c
  8111  007DF6  0E04               	movlw	4
  8112  007DF8  6E14               	movwf	sm_send_event@event^0,c
  8113  007DFA  ECDC  F047         	call	_sm_send_event	;wreg free
  8114                           
  8115                           ;sm_MenuConfiguration_MC50.c: 1229:             SetSegmentValueMain(dMinus,dMinus);
  8116  007DFE  0E18               	movlw	24
  8117  007E00  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  8118  007E02  0E18               	movlw	24
  8119  007E04  ECDA  F04E         	call	_SetSegmentValueMain
  8120                           
  8121                           ; BSR set to: 0
  8122                           ;sm_MenuConfiguration_MC50.c: 1230:             ClearFlag_rfCMD();
  8123  007E08  EC2E  F050         	call	_ClearFlag_rfCMD	;wreg free
  8124                           
  8125                           ;sm_MenuConfiguration_MC50.c: 1231:             ts_system.timeoutMenu = 0;
  8126  007E0C  0E00               	movlw	0
  8127  007E0E  0101               	movlb	1	; () banked
  8128  007E10  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8129  007E12  0E00               	movlw	0
  8130  007E14  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8131  007E16                     l3493:
  8132  007E16  0012               	return		;funcret
  8133  007E18                     __end_of_controlSaveRemote:
  8134                           	callstack 0
  8135                           
  8136 ;; *************** function ___lbmod *****************
  8137 ;; Defined at:
  8138 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbmod.c"
  8139 ;; Parameters:    Size  Location     Type
  8140 ;;  dividend        1    wreg     unsigned char 
  8141 ;;  divisor         1   15[COMRAM] unsigned char 
  8142 ;; Auto vars:     Size  Location     Type
  8143 ;;  dividend        1   16[COMRAM] unsigned char 
  8144 ;;  rem             1   18[COMRAM] unsigned char 
  8145 ;;  counter         1   17[COMRAM] unsigned char 
  8146 ;; Return value:  Size  Location     Type
  8147 ;;                  1    wreg      unsigned char 
  8148 ;; Registers used:
  8149 ;;		wreg, status,2, status,0
  8150 ;; Tracked objects:
  8151 ;;		On entry : 0/1
  8152 ;;		On exit  : 0/0
  8153 ;;		Unchanged: 0/0
  8154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8155 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8156 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8158 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8159 ;;Total ram usage:        4 bytes
  8160 ;; Hardware stack levels used: 1
  8161 ;; Hardware stack levels required when called: 4
  8162 ;; This function calls:
  8163 ;;		Nothing
  8164 ;; This function is called by:
  8165 ;;		_controlSelectRemote
  8166 ;;		_controlSaveRemote
  8167 ;; This function uses a non-reentrant model
  8168 ;;
  8169                           
  8170                           	psect	text10
  8171  009B44                     __ptext10:
  8172                           	callstack 0
  8173  009B44                     ___lbmod:
  8174                           	callstack 23
  8175                           
  8176                           ;incstack = 0
  8177                           ;___lbmod@dividend stored from wreg
  8178  009B44  6E11               	movwf	___lbmod@dividend^0,c
  8179  009B46  0E08               	movlw	8
  8180  009B48  6E12               	movwf	___lbmod@counter^0,c
  8181  009B4A  0E00               	movlw	0
  8182  009B4C  6E13               	movwf	___lbmod@rem^0,c
  8183  009B4E                     l21289:
  8184  009B4E  90D8               	bcf	status,0,c
  8185  009B50  3411               	rlcf	___lbmod@dividend^0,w,c
  8186  009B52  3413               	rlcf	___lbmod@rem^0,w,c
  8187  009B54  6E13               	movwf	___lbmod@rem^0,c
  8188  009B56  90D8               	bcf	status,0,c
  8189  009B58  3611               	rlcf	___lbmod@dividend^0,f,c
  8190  009B5A  5010               	movf	___lbmod@divisor^0,w,c
  8191  009B5C  5C13               	subwf	___lbmod@rem^0,w,c
  8192  009B5E  A0D8               	btfss	status,0,c
  8193  009B60  D002               	goto	l21297
  8194  009B62  5010               	movf	___lbmod@divisor^0,w,c
  8195  009B64  5E13               	subwf	___lbmod@rem^0,f,c
  8196  009B66                     l21297:
  8197  009B66  2E12               	decfsz	___lbmod@counter^0,f,c
  8198  009B68  D7F2               	goto	l21289
  8199  009B6A  5013               	movf	___lbmod@rem^0,w,c
  8200  009B6C  0012               	return		;funcret
  8201  009B6E                     __end_of___lbmod:
  8202                           	callstack 0
  8203                           
  8204 ;; *************** function ___awdiv *****************
  8205 ;; Defined at:
  8206 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  8207 ;; Parameters:    Size  Location     Type
  8208 ;;  dividend        2   19[COMRAM] int 
  8209 ;;  divisor         2   21[COMRAM] int 
  8210 ;; Auto vars:     Size  Location     Type
  8211 ;;  quotient        2   25[COMRAM] int 
  8212 ;;  sign            1   24[COMRAM] unsigned char 
  8213 ;;  counter         1   23[COMRAM] unsigned char 
  8214 ;; Return value:  Size  Location     Type
  8215 ;;                  2   19[COMRAM] int 
  8216 ;; Registers used:
  8217 ;;		wreg, status,2, status,0
  8218 ;; Tracked objects:
  8219 ;;		On entry : 0/0
  8220 ;;		On exit  : 0/0
  8221 ;;		Unchanged: 0/0
  8222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8223 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8224 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8226 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8227 ;;Total ram usage:        8 bytes
  8228 ;; Hardware stack levels used: 1
  8229 ;; Hardware stack levels required when called: 4
  8230 ;; This function calls:
  8231 ;;		Nothing
  8232 ;; This function is called by:
  8233 ;;		_controlSelectRemote
  8234 ;;		_controlSaveRemote
  8235 ;; This function uses a non-reentrant model
  8236 ;;
  8237                           
  8238                           	psect	text11
  8239  0085C6                     __ptext11:
  8240                           	callstack 0
  8241  0085C6                     ___awdiv:
  8242                           	callstack 23
  8243                           
  8244                           ;incstack = 0
  8245  0085C6  0E00               	movlw	0
  8246  0085C8  6E19               	movwf	___awdiv@sign^0,c
  8247  0085CA  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8248  0085CC  D006               	goto	l21225
  8249  0085CE  6C16               	negf	___awdiv@divisor^0,c
  8250  0085D0  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  8251  0085D2  B0D8               	btfsc	status,0,c
  8252  0085D4  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  8253  0085D6  0E01               	movlw	1
  8254  0085D8  6E19               	movwf	___awdiv@sign^0,c
  8255  0085DA                     l21225:
  8256  0085DA  AE15               	btfss	(___awdiv@dividend+1)^0,7,c
  8257  0085DC  D006               	goto	l21231
  8258  0085DE  6C14               	negf	___awdiv@dividend^0,c
  8259  0085E0  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  8260  0085E2  B0D8               	btfsc	status,0,c
  8261  0085E4  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  8262  0085E6  0E01               	movlw	1
  8263  0085E8  1A19               	xorwf	___awdiv@sign^0,f,c
  8264  0085EA                     l21231:
  8265  0085EA  0E00               	movlw	0
  8266  0085EC  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  8267  0085EE  0E00               	movlw	0
  8268  0085F0  6E1A               	movwf	___awdiv@quotient^0,c
  8269  0085F2  5016               	movf	___awdiv@divisor^0,w,c
  8270  0085F4  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  8271  0085F6  B4D8               	btfsc	status,2,c
  8272  0085F8  D01C               	goto	l21253
  8273  0085FA  0E01               	movlw	1
  8274  0085FC  6E18               	movwf	___awdiv@counter^0,c
  8275  0085FE  D004               	goto	l21239
  8276  008600                     l21237:
  8277  008600  90D8               	bcf	status,0,c
  8278  008602  3616               	rlcf	___awdiv@divisor^0,f,c
  8279  008604  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  8280  008606  2A18               	incf	___awdiv@counter^0,f,c
  8281  008608                     l21239:
  8282  008608  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8283  00860A  D7FA               	goto	l21237
  8284  00860C                     u24500:
  8285  00860C  90D8               	bcf	status,0,c
  8286  00860E  361A               	rlcf	___awdiv@quotient^0,f,c
  8287  008610  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  8288  008612  5016               	movf	___awdiv@divisor^0,w,c
  8289  008614  5C14               	subwf	___awdiv@dividend^0,w,c
  8290  008616  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8291  008618  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  8292  00861A  A0D8               	btfss	status,0,c
  8293  00861C  D005               	goto	l21249
  8294  00861E  5016               	movf	___awdiv@divisor^0,w,c
  8295  008620  5E14               	subwf	___awdiv@dividend^0,f,c
  8296  008622  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8297  008624  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  8298  008626  801A               	bsf	___awdiv@quotient^0,0,c
  8299  008628                     l21249:
  8300  008628  90D8               	bcf	status,0,c
  8301  00862A  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  8302  00862C  3216               	rrcf	___awdiv@divisor^0,f,c
  8303  00862E  2E18               	decfsz	___awdiv@counter^0,f,c
  8304  008630  D7ED               	goto	u24500
  8305  008632                     l21253:
  8306  008632  5019               	movf	___awdiv@sign^0,w,c
  8307  008634  B4D8               	btfsc	status,2,c
  8308  008636  D004               	goto	l21257
  8309  008638  6C1A               	negf	___awdiv@quotient^0,c
  8310  00863A  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  8311  00863C  B0D8               	btfsc	status,0,c
  8312  00863E  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  8313  008640                     l21257:
  8314  008640  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  8315  008644  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  8316  008648  0012               	return		;funcret
  8317  00864A                     __end_of___awdiv:
  8318                           	callstack 0
  8319                           
  8320 ;; *************** function _SetSegmentValueMain *****************
  8321 ;; Defined at:
  8322 ;;		line 104 in file "outputs_MC50.c"
  8323 ;; Parameters:    Size  Location     Type
  8324 ;;  d1              1    wreg     unsigned char 
  8325 ;;  d2              1   27[COMRAM] unsigned char 
  8326 ;; Auto vars:     Size  Location     Type
  8327 ;;  d1              1   28[COMRAM] unsigned char 
  8328 ;; Return value:  Size  Location     Type
  8329 ;;                  1    wreg      void 
  8330 ;; Registers used:
  8331 ;;		wreg, status,2
  8332 ;; Tracked objects:
  8333 ;;		On entry : 0/0
  8334 ;;		On exit  : 3F/0
  8335 ;;		Unchanged: 0/0
  8336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8337 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8338 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8340 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8341 ;;Total ram usage:        2 bytes
  8342 ;; Hardware stack levels used: 1
  8343 ;; Hardware stack levels required when called: 4
  8344 ;; This function calls:
  8345 ;;		Nothing
  8346 ;; This function is called by:
  8347 ;;		_sm_execute_main
  8348 ;;		_sm_execute_menuConfiguration
  8349 ;;		_load_New_Menu
  8350 ;;		_controlSelectRemote
  8351 ;;		_controlSaveRemote
  8352 ;; This function uses a non-reentrant model
  8353 ;;
  8354                           
  8355                           	psect	text12
  8356  009DB4                     __ptext12:
  8357                           	callstack 0
  8358  009DB4                     _SetSegmentValueMain:
  8359                           	callstack 22
  8360                           
  8361                           ;incstack = 0
  8362                           ;SetSegmentValueMain@d1 stored from wreg
  8363  009DB4  6E1D               	movwf	SetSegmentValueMain@d1^0,c
  8364                           
  8365                           ;outputs_MC50.c: 104: void SetSegmentValueMain(char d1, char d2);outputs_MC50.c: 105: {;
      +                          outputs_MC50.c: 106:     dispStruct.display_grp.value_display1=d1;
  8366  009DB6  C01D  F072         	movff	SetSegmentValueMain@d1,_dispStruct	;volatile
  8367                           
  8368                           ;outputs_MC50.c: 107:     dispStruct.display_grp.value_display2=d2;
  8369  009DBA  C01C  F073         	movff	SetSegmentValueMain@d2,_dispStruct+1	;volatile
  8370                           
  8371                           ;outputs_MC50.c: 108:     dispStruct.intermitentFreq=0;
  8372  009DBE  0E00               	movlw	0
  8373  009DC0  0100               	movlb	0	; () banked
  8374  009DC2  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8375  009DC4  0E00               	movlw	0
  8376  009DC6  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8377                           
  8378                           ; BSR set to: 0
  8379                           ;outputs_MC50.c: 109:     dispStruct.upFase=0;
  8380  009DC8  0E00               	movlw	0
  8381  009DCA  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8382                           
  8383                           ; BSR set to: 0
  8384  009DCC  0012               	return		;funcret
  8385  009DCE                     __end_of_SetSegmentValueMain:
  8386                           	callstack 0
  8387                           
  8388 ;; *************** function _ClearFlag_rfCMD *****************
  8389 ;; Defined at:
  8390 ;;		line 463 in file "inputs_MC50.c"
  8391 ;; Parameters:    Size  Location     Type
  8392 ;;		None
  8393 ;; Auto vars:     Size  Location     Type
  8394 ;;		None
  8395 ;; Return value:  Size  Location     Type
  8396 ;;                  1    wreg      void 
  8397 ;; Registers used:
  8398 ;;		wreg, status,2
  8399 ;; Tracked objects:
  8400 ;;		On entry : 0/1
  8401 ;;		On exit  : 0/0
  8402 ;;		Unchanged: 0/0
  8403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8408 ;;Total ram usage:        0 bytes
  8409 ;; Hardware stack levels used: 1
  8410 ;; Hardware stack levels required when called: 4
  8411 ;; This function calls:
  8412 ;;		Nothing
  8413 ;; This function is called by:
  8414 ;;		_sm_execute_menuConfiguration
  8415 ;;		_controlSelectRemote
  8416 ;;		_controlSaveRemote
  8417 ;; This function uses a non-reentrant model
  8418 ;;
  8419                           
  8420                           	psect	text13
  8421  00A05C                     __ptext13:
  8422                           	callstack 0
  8423  00A05C                     _ClearFlag_rfCMD:
  8424                           	callstack 23
  8425                           
  8426                           ;inputs_MC50.c: 464:     rfCMD.processed=1;
  8427                           
  8428                           ; BSR set to: 0
  8429                           ;incstack = 0
  8430  00A05C  0E01               	movlw	1
  8431  00A05E  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  8432  00A060  0012               	return		;funcret
  8433  00A062                     __end_of_ClearFlag_rfCMD:
  8434                           	callstack 0
  8435                           
  8436 ;; *************** function _controlLearnDigit *****************
  8437 ;; Defined at:
  8438 ;;		line 1237 in file "sm_MenuConfiguration_MC50.c"
  8439 ;; Parameters:    Size  Location     Type
  8440 ;;		None
  8441 ;; Auto vars:     Size  Location     Type
  8442 ;;		None
  8443 ;; Return value:  Size  Location     Type
  8444 ;;                  1    wreg      void 
  8445 ;; Registers used:
  8446 ;;		wreg, status,2, status,0, cstack
  8447 ;; Tracked objects:
  8448 ;;		On entry : 3F/0
  8449 ;;		On exit  : 3E/0
  8450 ;;		Unchanged: 0/0
  8451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8456 ;;Total ram usage:        0 bytes
  8457 ;; Hardware stack levels used: 1
  8458 ;; Hardware stack levels required when called: 5
  8459 ;; This function calls:
  8460 ;;		_SetSegmentValueLearn
  8461 ;; This function is called by:
  8462 ;;		_sm_execute_menuConfiguration
  8463 ;; This function uses a non-reentrant model
  8464 ;;
  8465                           
  8466                           	psect	text14
  8467  0098D6                     __ptext14:
  8468                           	callstack 0
  8469  0098D6                     _controlLearnDigit:
  8470                           	callstack 23
  8471                           
  8472                           ; BSR set to: 0
  8473                           ;sm_MenuConfiguration_MC50.c: 1239:     if(ts_system.timeSinalizationDigit<=0 )
  8474                           
  8475                           ;incstack = 0
  8476  0098D6  0101               	movlb	1	; () banked
  8477  0098D8  BFAB               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8478  0098DA  D005               	goto	u26100
  8479  0098DC  51AB               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8480  0098DE  E112               	bnz	l3499
  8481  0098E0  05AA               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8482  0098E2  B0D8               	btfsc	status,0,c
  8483  0098E4  0012               	return	
  8484  0098E6                     u26100:
  8485                           
  8486                           ; BSR set to: 1
  8487                           ;sm_MenuConfiguration_MC50.c: 1240:     {;sm_MenuConfiguration_MC50.c: 1241:         ts_
      +                          system.timeSinalizationDigit=( 100/50);
  8488  0098E6  0E00               	movlw	0
  8489  0098E8  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
  8490  0098EA  0E02               	movlw	2
  8491  0098EC  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
  8492                           
  8493                           ; BSR set to: 1
  8494                           ;sm_MenuConfiguration_MC50.c: 1242:         if(var_sys.StateMotor==InClose)
  8495  0098EE  0E03               	movlw	3
  8496  0098F0  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  8497  0098F2  A4D8               	btfss	status,2,c
  8498  0098F4  D004               	goto	l22579
  8499                           
  8500                           ; BSR set to: 1
  8501                           ;sm_MenuConfiguration_MC50.c: 1243:         {;sm_MenuConfiguration_MC50.c: 1244:        
      +                               SetSegmentValueLearn(Left);
  8502  0098F6  0E00               	movlw	0
  8503  0098F8  ECA9  F03B         	call	_SetSegmentValueLearn
  8504                           
  8505                           ;sm_MenuConfiguration_MC50.c: 1245:         }
  8506  0098FC  0012               	return	
  8507  0098FE                     l22579:
  8508                           
  8509                           ; BSR set to: 1
  8510                           ;sm_MenuConfiguration_MC50.c: 1247:         {;sm_MenuConfiguration_MC50.c: 1248:        
      +                               SetSegmentValueLearn(Rigth);
  8511  0098FE  0E01               	movlw	1
  8512  009900  ECA9  F03B         	call	_SetSegmentValueLearn
  8513  009904                     l3499:
  8514  009904  0012               	return		;funcret
  8515  009906                     __end_of_controlLearnDigit:
  8516                           	callstack 0
  8517                           
  8518 ;; *************** function _SetSegmentValueLearn *****************
  8519 ;; Defined at:
  8520 ;;		line 124 in file "outputs_MC50.c"
  8521 ;; Parameters:    Size  Location     Type
  8522 ;;  direction       1    wreg     enum E10602
  8523 ;; Auto vars:     Size  Location     Type
  8524 ;;  direction       1   17[COMRAM] enum E10602
  8525 ;; Return value:  Size  Location     Type
  8526 ;;                  1    wreg      void 
  8527 ;; Registers used:
  8528 ;;		wreg, status,2, status,0
  8529 ;; Tracked objects:
  8530 ;;		On entry : 3F/1
  8531 ;;		On exit  : 3F/0
  8532 ;;		Unchanged: 0/0
  8533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8535 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8536 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8537 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8538 ;;Total ram usage:        3 bytes
  8539 ;; Hardware stack levels used: 1
  8540 ;; Hardware stack levels required when called: 4
  8541 ;; This function calls:
  8542 ;;		Nothing
  8543 ;; This function is called by:
  8544 ;;		_controlLearnDigit
  8545 ;; This function uses a non-reentrant model
  8546 ;;
  8547                           
  8548                           	psect	text15
  8549  007752                     __ptext15:
  8550                           	callstack 0
  8551  007752                     _SetSegmentValueLearn:
  8552                           	callstack 23
  8553                           
  8554                           ;incstack = 0
  8555                           ;SetSegmentValueLearn@direction stored from wreg
  8556  007752  6E12               	movwf	SetSegmentValueLearn@direction^0,c
  8557                           
  8558                           ;outputs_MC50.c: 124: void SetSegmentValueLearn(Direction_en direction);outputs_MC50.c: 
      +                          125: {;outputs_MC50.c: 126:     dispStruct.intermitentFreq=0;
  8559  007754  0E00               	movlw	0
  8560  007756  0100               	movlb	0	; () banked
  8561  007758  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8562  00775A  0E00               	movlw	0
  8563  00775C  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8564                           
  8565                           ;outputs_MC50.c: 127:     dispStruct.upFase=0;
  8566  00775E  0E00               	movlw	0
  8567  007760  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8568                           
  8569                           ;outputs_MC50.c: 128:     switch (direction)
  8570  007762  D066               	goto	l21053
  8571  007764                     l20999:
  8572                           
  8573                           ; BSR set to: 0
  8574                           ;outputs_MC50.c: 131:             if(dispStruct.display_grp.value_display1==sA && dispSt
      +                          ruct.display_grp.value_display2==dBlank)
  8575  007764  0E1A               	movlw	26
  8576  007766  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8577  007768  A4D8               	btfss	status,2,c
  8578  00776A  D009               	goto	l21005
  8579                           
  8580                           ; BSR set to: 0
  8581  00776C  0E20               	movlw	32
  8582  00776E  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8583  007770  A4D8               	btfss	status,2,c
  8584  007772  D005               	goto	l21005
  8585                           
  8586                           ; BSR set to: 0
  8587                           ;outputs_MC50.c: 132:             {;outputs_MC50.c: 133:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8588  007774  0E20               	movlw	32
  8589  007776  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8590                           
  8591                           ;outputs_MC50.c: 134:                dispStruct.display_grp.value_display2=sA;
  8592  007778  0E1A               	movlw	26
  8593  00777A  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8594                           
  8595                           ;outputs_MC50.c: 135:             }
  8596  00777C  0012               	return	
  8597  00777E                     l21005:
  8598                           
  8599                           ; BSR set to: 0
  8600  00777E  0E20               	movlw	32
  8601  007780  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8602  007782  A4D8               	btfss	status,2,c
  8603  007784  D009               	goto	l21011
  8604                           
  8605                           ; BSR set to: 0
  8606  007786  0E1D               	movlw	29
  8607  007788  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8608  00778A  A4D8               	btfss	status,2,c
  8609  00778C  D005               	goto	l21011
  8610                           
  8611                           ; BSR set to: 0
  8612                           ;outputs_MC50.c: 137:             {;outputs_MC50.c: 138:                dispStruct.displ
      +                          ay_grp.value_display1=sD;
  8613  00778E  0E1D               	movlw	29
  8614  007790  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8615                           
  8616                           ;outputs_MC50.c: 139:                dispStruct.display_grp.value_display2=dBlank;
  8617  007792  0E20               	movlw	32
  8618  007794  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8619                           
  8620                           ;outputs_MC50.c: 140:             }
  8621  007796  0012               	return	
  8622  007798                     l21011:
  8623                           
  8624                           ; BSR set to: 0
  8625  007798  0E1F               	movlw	31
  8626  00779A  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8627  00779C  A4D8               	btfss	status,2,c
  8628  00779E  D005               	goto	l21015
  8629                           
  8630                           ; BSR set to: 0
  8631                           ;outputs_MC50.c: 142:             {;outputs_MC50.c: 143:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8632  0077A0  0E1A               	movlw	26
  8633  0077A2  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8634                           
  8635                           ;outputs_MC50.c: 144:                dispStruct.display_grp.value_display2=dBlank;
  8636  0077A4  0E20               	movlw	32
  8637  0077A6  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8638                           
  8639                           ;outputs_MC50.c: 145:             }
  8640  0077A8  0012               	return	
  8641  0077AA                     l21015:
  8642                           
  8643                           ; BSR set to: 0
  8644  0077AA  0E20               	movlw	32
  8645  0077AC  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8646  0077AE  A4D8               	btfss	status,2,c
  8647  0077B0  D002               	goto	l21019
  8648                           
  8649                           ; BSR set to: 0
  8650                           ;outputs_MC50.c: 147:             {;outputs_MC50.c: 148:                dispStruct.displ
      +                          ay_grp.value_display2++;
  8651  0077B2  2B73               	incf	(_dispStruct+1)& (0+255),f,b	;volatile
  8652                           
  8653                           ;outputs_MC50.c: 149:             }
  8654  0077B4  0012               	return	
  8655  0077B6                     l21019:
  8656                           
  8657                           ; BSR set to: 0
  8658  0077B6  0E20               	movlw	32
  8659  0077B8  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8660  0077BA  A4D8               	btfss	status,2,c
  8661  0077BC  D002               	goto	l21023
  8662                           
  8663                           ; BSR set to: 0
  8664                           ;outputs_MC50.c: 151:             {;outputs_MC50.c: 152:                dispStruct.displ
      +                          ay_grp.value_display1++;
  8665  0077BE  2B72               	incf	_dispStruct& (0+255),f,b	;volatile
  8666                           
  8667                           ;outputs_MC50.c: 153:             }
  8668  0077C0  0012               	return	
  8669  0077C2                     l21023:
  8670                           
  8671                           ; BSR set to: 0
  8672                           ;outputs_MC50.c: 155:             {;outputs_MC50.c: 156:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8673  0077C2  0E1A               	movlw	26
  8674  0077C4  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8675                           
  8676                           ;outputs_MC50.c: 157:                dispStruct.display_grp.value_display2=dBlank;
  8677  0077C6  0E20               	movlw	32
  8678  0077C8  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8679  0077CA  0012               	return	
  8680  0077CC                     l21025:
  8681                           
  8682                           ; BSR set to: 0
  8683                           ;outputs_MC50.c: 161:             if(dispStruct.display_grp.value_display2==sA && dispSt
      +                          ruct.display_grp.value_display1==dBlank)
  8684  0077CC  0E1A               	movlw	26
  8685  0077CE  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8686  0077D0  A4D8               	btfss	status,2,c
  8687  0077D2  D009               	goto	l21031
  8688                           
  8689                           ; BSR set to: 0
  8690  0077D4  0E20               	movlw	32
  8691  0077D6  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8692  0077D8  A4D8               	btfss	status,2,c
  8693  0077DA  D005               	goto	l21031
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;outputs_MC50.c: 162:             {;outputs_MC50.c: 163:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8697  0077DC  0E1A               	movlw	26
  8698  0077DE  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8699                           
  8700                           ;outputs_MC50.c: 164:                dispStruct.display_grp.value_display2=dBlank;
  8701  0077E0  0E20               	movlw	32
  8702  0077E2  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8703                           
  8704                           ;outputs_MC50.c: 165:             }
  8705  0077E4  0012               	return	
  8706  0077E6                     l21031:
  8707                           
  8708                           ; BSR set to: 0
  8709  0077E6  0E20               	movlw	32
  8710  0077E8  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8711  0077EA  A4D8               	btfss	status,2,c
  8712  0077EC  D009               	goto	l21037
  8713                           
  8714                           ; BSR set to: 0
  8715  0077EE  0E1D               	movlw	29
  8716  0077F0  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8717  0077F2  A4D8               	btfss	status,2,c
  8718  0077F4  D005               	goto	l21037
  8719                           
  8720                           ; BSR set to: 0
  8721                           ;outputs_MC50.c: 167:             {;outputs_MC50.c: 168:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8722  0077F6  0E20               	movlw	32
  8723  0077F8  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8724                           
  8725                           ;outputs_MC50.c: 169:                dispStruct.display_grp.value_display2=sD;
  8726  0077FA  0E1D               	movlw	29
  8727  0077FC  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8728                           
  8729                           ;outputs_MC50.c: 170:             }
  8730  0077FE  0012               	return	
  8731  007800                     l21037:
  8732                           
  8733                           ; BSR set to: 0
  8734  007800  0E1A               	movlw	26
  8735  007802  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8736  007804  A4D8               	btfss	status,2,c
  8737  007806  D003               	goto	l21041
  8738                           
  8739                           ; BSR set to: 0
  8740                           ;outputs_MC50.c: 172:             {;outputs_MC50.c: 173:                dispStruct.displ
      +                          ay_grp.value_display1=sF;
  8741  007808  0E1F               	movlw	31
  8742  00780A  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8743                           
  8744                           ;outputs_MC50.c: 174:             }
  8745  00780C  0012               	return	
  8746  00780E                     l21041:
  8747                           
  8748                           ; BSR set to: 0
  8749  00780E  0E20               	movlw	32
  8750  007810  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8751  007812  A4D8               	btfss	status,2,c
  8752  007814  D002               	goto	l21045
  8753                           
  8754                           ; BSR set to: 0
  8755                           ;outputs_MC50.c: 176:             {;outputs_MC50.c: 177:                dispStruct.displ
      +                          ay_grp.value_display2--;
  8756  007816  0773               	decf	(_dispStruct+1)& (0+255),f,b	;volatile
  8757                           
  8758                           ;outputs_MC50.c: 178:             }
  8759  007818  0012               	return	
  8760  00781A                     l21045:
  8761                           
  8762                           ; BSR set to: 0
  8763  00781A  0E20               	movlw	32
  8764  00781C  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8765  00781E  A4D8               	btfss	status,2,c
  8766  007820  D002               	goto	l21049
  8767                           
  8768                           ; BSR set to: 0
  8769                           ;outputs_MC50.c: 180:             {;outputs_MC50.c: 181:                dispStruct.displ
      +                          ay_grp.value_display1--;
  8770  007822  0772               	decf	_dispStruct& (0+255),f,b	;volatile
  8771                           
  8772                           ;outputs_MC50.c: 182:             }
  8773  007824  0012               	return	
  8774  007826                     l21049:
  8775                           
  8776                           ; BSR set to: 0
  8777                           ;outputs_MC50.c: 184:             {;outputs_MC50.c: 185:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8778  007826  0E1A               	movlw	26
  8779  007828  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8780                           
  8781                           ;outputs_MC50.c: 186:                dispStruct.display_grp.value_display2=dBlank;
  8782  00782A  0E20               	movlw	32
  8783  00782C  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8784  00782E  0012               	return	
  8785  007830                     l21053:
  8786                           
  8787                           ; BSR set to: 0
  8788  007830  5012               	movf	SetSegmentValueLearn@direction^0,w,c
  8789  007832  6E10               	movwf	??_SetSegmentValueLearn^0,c
  8790  007834  6A11               	clrf	(??_SetSegmentValueLearn+1)^0,c
  8791                           
  8792                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8793                           ; Switch size 1, requested type "simple"
  8794                           ; Number of cases is 1, Range of values is 0 to 0
  8795                           ; switch strategies available:
  8796                           ; Name         Instructions Cycles
  8797                           ; simple_byte            4     3 (average)
  8798                           ;	Chosen strategy is simple_byte
  8799  007836  5011               	movf	(??_SetSegmentValueLearn+1)^0,w,c
  8800  007838  0A00               	xorlw	0	; case 0
  8801  00783A  A4D8               	btfss	status,2,c
  8802  00783C  0012               	return	
  8803                           
  8804                           ; BSR set to: 0
  8805                           ; Switch size 1, requested type "simple"
  8806                           ; Number of cases is 2, Range of values is 0 to 1
  8807                           ; switch strategies available:
  8808                           ; Name         Instructions Cycles
  8809                           ; simple_byte            7     4 (average)
  8810                           ;	Chosen strategy is simple_byte
  8811  00783E  5010               	movf	??_SetSegmentValueLearn^0,w,c
  8812  007840  0A00               	xorlw	0	; case 0
  8813  007842  B4D8               	btfsc	status,2,c
  8814  007844  D7C3               	goto	l21025
  8815  007846  0A01               	xorlw	1	; case 1
  8816  007848  A4D8               	btfss	status,2,c
  8817  00784A  0012               	return	
  8818  00784C  D78B               	goto	l20999
  8819  00784E                     __end_of_SetSegmentValueLearn:
  8820                           	callstack 0
  8821                           
  8822 ;; *************** function ___lldiv *****************
  8823 ;; Defined at:
  8824 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  8825 ;; Parameters:    Size  Location     Type
  8826 ;;  dividend        4   15[COMRAM] unsigned long 
  8827 ;;  divisor         4   19[COMRAM] unsigned long 
  8828 ;; Auto vars:     Size  Location     Type
  8829 ;;  quotient        4   23[COMRAM] unsigned long 
  8830 ;;  counter         1   27[COMRAM] unsigned char 
  8831 ;; Return value:  Size  Location     Type
  8832 ;;                  4   15[COMRAM] unsigned long 
  8833 ;; Registers used:
  8834 ;;		wreg, status,2, status,0
  8835 ;; Tracked objects:
  8836 ;;		On entry : 0/1
  8837 ;;		On exit  : 0/0
  8838 ;;		Unchanged: 0/0
  8839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8840 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8841 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8843 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8844 ;;Total ram usage:       13 bytes
  8845 ;; Hardware stack levels used: 1
  8846 ;; Hardware stack levels required when called: 4
  8847 ;; This function calls:
  8848 ;;		Nothing
  8849 ;; This function is called by:
  8850 ;;		_sm_execute_menuConfiguration
  8851 ;; This function uses a non-reentrant model
  8852 ;;
  8853                           
  8854                           	psect	text16
  8855  0086CE                     __ptext16:
  8856                           	callstack 0
  8857  0086CE                     ___lldiv:
  8858                           	callstack 24
  8859                           
  8860                           ; BSR set to: 0
  8861                           ;incstack = 0
  8862  0086CE  0E00               	movlw	0
  8863  0086D0  6E18               	movwf	___lldiv@quotient^0,c
  8864  0086D2  0E00               	movlw	0
  8865  0086D4  6E19               	movwf	(___lldiv@quotient+1)^0,c
  8866  0086D6  0E00               	movlw	0
  8867  0086D8  6E1A               	movwf	(___lldiv@quotient+2)^0,c
  8868  0086DA  0E00               	movlw	0
  8869  0086DC  6E1B               	movwf	(___lldiv@quotient+3)^0,c
  8870  0086DE  5014               	movf	___lldiv@divisor^0,w,c
  8871  0086E0  1015               	iorwf	(___lldiv@divisor+1)^0,w,c
  8872  0086E2  1016               	iorwf	(___lldiv@divisor+2)^0,w,c
  8873  0086E4  1017               	iorwf	(___lldiv@divisor+3)^0,w,c
  8874  0086E6  B4D8               	btfsc	status,2,c
  8875  0086E8  D02A               	goto	l3833
  8876  0086EA  0E01               	movlw	1
  8877  0086EC  6E1C               	movwf	___lldiv@counter^0,c
  8878  0086EE  D006               	goto	l22773
  8879  0086F0                     l22771:
  8880  0086F0  90D8               	bcf	status,0,c
  8881  0086F2  3614               	rlcf	___lldiv@divisor^0,f,c
  8882  0086F4  3615               	rlcf	(___lldiv@divisor+1)^0,f,c
  8883  0086F6  3616               	rlcf	(___lldiv@divisor+2)^0,f,c
  8884  0086F8  3617               	rlcf	(___lldiv@divisor+3)^0,f,c
  8885  0086FA  2A1C               	incf	___lldiv@counter^0,f,c
  8886  0086FC                     l22773:
  8887  0086FC  AE17               	btfss	(___lldiv@divisor+3)^0,7,c
  8888  0086FE  D7F8               	goto	l22771
  8889  008700                     u26270:
  8890  008700  90D8               	bcf	status,0,c
  8891  008702  3618               	rlcf	___lldiv@quotient^0,f,c
  8892  008704  3619               	rlcf	(___lldiv@quotient+1)^0,f,c
  8893  008706  361A               	rlcf	(___lldiv@quotient+2)^0,f,c
  8894  008708  361B               	rlcf	(___lldiv@quotient+3)^0,f,c
  8895  00870A  5014               	movf	___lldiv@divisor^0,w,c
  8896  00870C  5C10               	subwf	___lldiv@dividend^0,w,c
  8897  00870E  5015               	movf	(___lldiv@divisor+1)^0,w,c
  8898  008710  5811               	subwfb	(___lldiv@dividend+1)^0,w,c
  8899  008712  5016               	movf	(___lldiv@divisor+2)^0,w,c
  8900  008714  5812               	subwfb	(___lldiv@dividend+2)^0,w,c
  8901  008716  5017               	movf	(___lldiv@divisor+3)^0,w,c
  8902  008718  5813               	subwfb	(___lldiv@dividend+3)^0,w,c
  8903  00871A  A0D8               	btfss	status,0,c
  8904  00871C  D009               	goto	l22783
  8905  00871E  5014               	movf	___lldiv@divisor^0,w,c
  8906  008720  5E10               	subwf	___lldiv@dividend^0,f,c
  8907  008722  5015               	movf	(___lldiv@divisor+1)^0,w,c
  8908  008724  5A11               	subwfb	(___lldiv@dividend+1)^0,f,c
  8909  008726  5016               	movf	(___lldiv@divisor+2)^0,w,c
  8910  008728  5A12               	subwfb	(___lldiv@dividend+2)^0,f,c
  8911  00872A  5017               	movf	(___lldiv@divisor+3)^0,w,c
  8912  00872C  5A13               	subwfb	(___lldiv@dividend+3)^0,f,c
  8913  00872E  8018               	bsf	___lldiv@quotient^0,0,c
  8914  008730                     l22783:
  8915  008730  90D8               	bcf	status,0,c
  8916  008732  3217               	rrcf	(___lldiv@divisor+3)^0,f,c
  8917  008734  3216               	rrcf	(___lldiv@divisor+2)^0,f,c
  8918  008736  3215               	rrcf	(___lldiv@divisor+1)^0,f,c
  8919  008738  3214               	rrcf	___lldiv@divisor^0,f,c
  8920  00873A  2E1C               	decfsz	___lldiv@counter^0,f,c
  8921  00873C  D7E1               	goto	u26270
  8922  00873E                     l3833:
  8923  00873E  C018  F010         	movff	___lldiv@quotient,?___lldiv
  8924  008742  C019  F011         	movff	___lldiv@quotient+1,?___lldiv+1
  8925  008746  C01A  F012         	movff	___lldiv@quotient+2,?___lldiv+2
  8926  00874A  C01B  F013         	movff	___lldiv@quotient+3,?___lldiv+3
  8927  00874E  0012               	return		;funcret
  8928  008750                     __end_of___lldiv:
  8929                           	callstack 0
  8930                           
  8931 ;; *************** function _sm_execute_ControlGate *****************
  8932 ;; Defined at:
  8933 ;;		line 128 in file "sm_ControlGate_MC50.c"
  8934 ;; Parameters:    Size  Location     Type
  8935 ;;  psm             2   15[BANK0 ] PTR struct .
  8936 ;;		 -> controlGate_stateMachine(11), 
  8937 ;; Auto vars:     Size  Location     Type
  8938 ;;  typeOpenOrde    1   19[BANK0 ] enum E10372
  8939 ;; Return value:  Size  Location     Type
  8940 ;;                  1    wreg      void 
  8941 ;; Registers used:
  8942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  8943 ;; Tracked objects:
  8944 ;;		On entry : 3F/0
  8945 ;;		On exit  : 0/0
  8946 ;;		Unchanged: 0/0
  8947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8948 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8949 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8950 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8951 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8952 ;;Total ram usage:        5 bytes
  8953 ;; Hardware stack levels used: 1
  8954 ;; Hardware stack levels required when called: 15
  8955 ;; This function calls:
  8956 ;;		_GetOpenOrder
  8957 ;;		_SetSegmentValueIntermitent
  8958 ;;		_WaitPreFlash
  8959 ;;		_actionZone_Closed
  8960 ;;		_actionZone_Closing
  8961 ;;		_actionZone_Opened
  8962 ;;		_actionZone_Opening
  8963 ;;		_sm_execute_ControlLearning
  8964 ;;		_sm_send_event
  8965 ;; This function is called by:
  8966 ;;		_main
  8967 ;; This function uses a non-reentrant model
  8968 ;;
  8969                           
  8970                           	psect	text17
  8971  0043DE                     __ptext17:
  8972                           	callstack 0
  8973  0043DE                     _sm_execute_ControlGate:
  8974                           	callstack 15
  8975                           
  8976                           ; BSR set to: 0
  8977                           ;sm_ControlGate_MC50.c: 129:     TypeCMD typeOpenOrder;;sm_ControlGate_MC50.c: 133:     
      +                          if ( (main_stateMachine.current_state == st_MenuConfiguration) && (menuConfiguration_sta
      +                          teMachine.current_state != st_LearningMode) )
  8978                           
  8979                           ;incstack = 0
  8980  0043DE  0101               	movlb	1	; () banked
  8981  0043E0  05F1               	decf	_main_stateMachine& (0+255),w,b
  8982  0043E2  11F2               	iorwf	(_main_stateMachine+1)& (0+255),w,b
  8983  0043E4  A4D8               	btfss	status,2,c
  8984  0043E6  D006               	goto	l26137
  8985                           
  8986                           ; BSR set to: 1
  8987  0043E8  0E06               	movlw	6
  8988  0043EA  0102               	movlb	2	; () banked
  8989  0043EC  19BD               	xorwf	_menuConfiguration_stateMachine& (0+255),w,b
  8990  0043EE  11BE               	iorwf	(_menuConfiguration_stateMachine+1)& (0+255),w,b
  8991  0043F0  A4D8               	btfss	status,2,c
  8992  0043F2  0012               	return	
  8993  0043F4                     l26137:
  8994                           
  8995                           ;sm_ControlGate_MC50.c: 137:         if (var_sys.preflashingcontrol == YES){
  8996  0043F4  0101               	movlb	1	; () banked
  8997  0043F6  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
  8998  0043F8  A4D8               	btfss	status,2,c
  8999  0043FA  D0CE               	goto	l26211
  9000                           
  9001                           ; BSR set to: 1
  9002                           ;sm_ControlGate_MC50.c: 139:         WaitPreFlash();
  9003  0043FC  ECC9  F045         	call	_WaitPreFlash	;wreg free
  9004  004400  D0CB               	goto	l26211
  9005  004402                     l26141:
  9006                           
  9007                           ; BSR set to: 0
  9008                           ;sm_ControlGate_MC50.c: 145:         {;sm_ControlGate_MC50.c: 148:             if (psm->
      +                          last_event == ev_GateClosed) {
  9009  004402  EE20 F004          	lfsr	2,4
  9010  004406  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9011  004408  26D9               	addwf	fsr2l,f,c
  9012  00440A  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9013  00440C  22DA               	addwfc	fsr2h,f,c
  9014  00440E  0E0A               	movlw	10
  9015  004410  18DE               	xorwf	postinc2,w,c
  9016  004412  10DE               	iorwf	postinc2,w,c
  9017  004414  A4D8               	btfss	status,2,c
  9018  004416  D006               	goto	l26145
  9019  004418                     u33250:
  9020                           
  9021                           ; BSR set to: 0
  9022                           ;sm_ControlGate_MC50.c: 149:                 psm->current_state = st_Closed;
  9023  004418  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9024  00441C  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9025  004420  0E01               	movlw	1
  9026  004422  D0B5               	goto	L55
  9027  004424                     l26145:
  9028                           
  9029                           ; BSR set to: 0
  9030  004424  EE20 F004          	lfsr	2,4
  9031  004428  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9032  00442A  26D9               	addwf	fsr2l,f,c
  9033  00442C  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9034  00442E  22DA               	addwfc	fsr2h,f,c
  9035  004430  0E0B               	movlw	11
  9036  004432  18DE               	xorwf	postinc2,w,c
  9037  004434  10DE               	iorwf	postinc2,w,c
  9038  004436  A4D8               	btfss	status,2,c
  9039  004438  D0CF               	goto	l26213
  9040  00443A  D038               	goto	u33320
  9041  00443C                     l26149:
  9042                           
  9043                           ; BSR set to: 0
  9044                           ;sm_ControlGate_MC50.c: 160:         {;sm_ControlGate_MC50.c: 161:             if (psm->
      +                          last_event == ev_OpenGate) {
  9045  00443C  EE20 F004          	lfsr	2,4
  9046  004440  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9047  004442  26D9               	addwf	fsr2l,f,c
  9048  004444  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9049  004446  22DA               	addwfc	fsr2h,f,c
  9050  004448  0E0C               	movlw	12
  9051  00444A  18DE               	xorwf	postinc2,w,c
  9052  00444C  10DE               	iorwf	postinc2,w,c
  9053  00444E  A4D8               	btfss	status,2,c
  9054  004450  D072               	goto	l26197
  9055  004452                     u33270:
  9056                           
  9057                           ; BSR set to: 0
  9058                           ;sm_ControlGate_MC50.c: 162:                 psm->current_state = st_Opening;
  9059  004452  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9060  004456  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9061  00445A  0E02               	movlw	2
  9062  00445C  D098               	goto	L55
  9063  00445E                     l26157:
  9064                           
  9065                           ; BSR set to: 0
  9066                           ;sm_ControlGate_MC50.c: 169:         {;sm_ControlGate_MC50.c: 170:             if (psm->
      +                          last_event == ev_StopGate) {
  9067  00445E  EE20 F004          	lfsr	2,4
  9068  004462  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9069  004464  26D9               	addwf	fsr2l,f,c
  9070  004466  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9071  004468  22DA               	addwfc	fsr2h,f,c
  9072  00446A  0E0D               	movlw	13
  9073  00446C  18DE               	xorwf	postinc2,w,c
  9074  00446E  10DE               	iorwf	postinc2,w,c
  9075  004470  B4D8               	btfsc	status,2,c
  9076  004472  D01C               	goto	u33320
  9077                           
  9078                           ; BSR set to: 0
  9079                           
  9080                           ;sm_ControlGate_MC50.c: 172:             } else if (psm->last_event == ev_CloseGate) {
  9081                           
  9082                           ; BSR set to: 0
  9083                           ;sm_ControlGate_MC50.c: 171:                 psm->current_state = st_Opened;
  9084  004474  EE20 F004          	lfsr	2,4
  9085  004478  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9086  00447A  26D9               	addwf	fsr2l,f,c
  9087  00447C  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9088  00447E  22DA               	addwfc	fsr2h,f,c
  9089  004480  0E0E               	movlw	14
  9090  004482  18DE               	xorwf	postinc2,w,c
  9091  004484  10DE               	iorwf	postinc2,w,c
  9092  004486  A4D8               	btfss	status,2,c
  9093  004488  D02D               	goto	L131
  9094  00448A                     u33300:
  9095                           
  9096                           ; BSR set to: 0
  9097                           ;sm_ControlGate_MC50.c: 173:                 psm->current_state = st_Closing;
  9098  00448A  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9099  00448E  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9100  004492  0E03               	movlw	3
  9101  004494  D07C               	goto	L55
  9102  004496                     l26169:
  9103                           
  9104                           ; BSR set to: 0
  9105                           ;sm_ControlGate_MC50.c: 180:         {;sm_ControlGate_MC50.c: 181:             if (psm->
      +                          last_event == ev_StopGate) {
  9106  004496  EE20 F004          	lfsr	2,4
  9107  00449A  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9108  00449C  26D9               	addwf	fsr2l,f,c
  9109  00449E  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9110  0044A0  22DA               	addwfc	fsr2h,f,c
  9111  0044A2  0E0D               	movlw	13
  9112  0044A4  18DE               	xorwf	postinc2,w,c
  9113  0044A6  10DE               	iorwf	postinc2,w,c
  9114  0044A8  A4D8               	btfss	status,2,c
  9115  0044AA  D006               	goto	l26173
  9116  0044AC                     u33320:
  9117                           
  9118                           ; BSR set to: 0
  9119                           ;sm_ControlGate_MC50.c: 182:                 psm->current_state = st_Opened;
  9120  0044AC  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9121  0044B0  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9122  0044B4  0E04               	movlw	4
  9123  0044B6  D06B               	goto	L55
  9124  0044B8                     l26173:
  9125                           
  9126                           ; BSR set to: 0
  9127  0044B8  EE20 F004          	lfsr	2,4
  9128  0044BC  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9129  0044BE  26D9               	addwf	fsr2l,f,c
  9130  0044C0  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9131  0044C2  22DA               	addwfc	fsr2h,f,c
  9132  0044C4  0E0F               	movlw	15
  9133  0044C6  18DE               	xorwf	postinc2,w,c
  9134  0044C8  10DE               	iorwf	postinc2,w,c
  9135  0044CA  B4D8               	btfsc	status,2,c
  9136  0044CC  D7A5               	goto	u33250
  9137                           
  9138                           ; BSR set to: 0
  9139                           
  9140                           ;sm_ControlGate_MC50.c: 185:             } else if (psm->last_event == ev_OpenGate) {
  9141                           
  9142                           ; BSR set to: 0
  9143                           ;sm_ControlGate_MC50.c: 184:                 psm->current_state = st_Closed;
  9144  0044CE  EE20 F004          	lfsr	2,4
  9145  0044D2  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9146  0044D4  26D9               	addwf	fsr2l,f,c
  9147  0044D6  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9148  0044D8  22DA               	addwfc	fsr2h,f,c
  9149  0044DA  0E0C               	movlw	12
  9150  0044DC  18DE               	xorwf	postinc2,w,c
  9151  0044DE  10DE               	iorwf	postinc2,w,c
  9152  0044E0  B4D8               	btfsc	status,2,c
  9153  0044E2  D7B7               	goto	u33270
  9154  0044E4                     L131:
  9155                           
  9156                           ; BSR set to: 0
  9157                           
  9158                           ;sm_ControlGate_MC50.c: 187:             } else if (psm->last_event == ev_ErrorGate) {
  9159                           
  9160                           ; BSR set to: 0
  9161                           ;sm_ControlGate_MC50.c: 186:                 psm->current_state = st_Opening;
  9162  0044E4  EE20 F004          	lfsr	2,4
  9163  0044E8  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9164  0044EA  26D9               	addwf	fsr2l,f,c
  9165  0044EC  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9166  0044EE  22DA               	addwfc	fsr2h,f,c
  9167  0044F0  0E10               	movlw	16
  9168  0044F2  D044               	goto	L128
  9169  0044F4                     l26185:
  9170                           
  9171                           ; BSR set to: 0
  9172                           ;sm_ControlGate_MC50.c: 193:         {;sm_ControlGate_MC50.c: 194:             if (psm->
      +                          last_event == ev_CloseGate) {
  9173  0044F4  EE20 F004          	lfsr	2,4
  9174  0044F8  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9175  0044FA  26D9               	addwf	fsr2l,f,c
  9176  0044FC  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9177  0044FE  22DA               	addwfc	fsr2h,f,c
  9178  004500  0E0E               	movlw	14
  9179  004502  18DE               	xorwf	postinc2,w,c
  9180  004504  10DE               	iorwf	postinc2,w,c
  9181  004506  B4D8               	btfsc	status,2,c
  9182  004508  D7C0               	goto	u33300
  9183                           
  9184                           ; BSR set to: 0
  9185                           
  9186                           ;sm_ControlGate_MC50.c: 196:             } else if (psm->last_event == ev_OpenGate) {
  9187                           
  9188                           ; BSR set to: 0
  9189                           ;sm_ControlGate_MC50.c: 195:                 psm->current_state = st_Closing;
  9190  00450A  EE20 F004          	lfsr	2,4
  9191  00450E  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9192  004510  26D9               	addwf	fsr2l,f,c
  9193  004512  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9194  004514  22DA               	addwfc	fsr2h,f,c
  9195  004516  0E0C               	movlw	12
  9196  004518  18DE               	xorwf	postinc2,w,c
  9197  00451A  10DE               	iorwf	postinc2,w,c
  9198  00451C  B4D8               	btfsc	status,2,c
  9199  00451E  D799               	goto	u33270
  9200                           
  9201                           ; BSR set to: 0
  9202                           
  9203                           ;sm_ControlGate_MC50.c: 198:             } else if (psm->last_event == ev_ErrorGate) {
  9204                           
  9205                           ; BSR set to: 0
  9206                           ;sm_ControlGate_MC50.c: 197:                 psm->current_state = st_Opening;
  9207  004520  EE20 F004          	lfsr	2,4
  9208  004524  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9209  004526  26D9               	addwf	fsr2l,f,c
  9210  004528  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9211  00452A  22DA               	addwfc	fsr2h,f,c
  9212  00452C  0E10               	movlw	16
  9213  00452E  18DE               	xorwf	postinc2,w,c
  9214  004530  10DE               	iorwf	postinc2,w,c
  9215  004532  B4D8               	btfsc	status,2,c
  9216  004534  D027               	goto	L129
  9217  004536                     l26197:
  9218                           
  9219                           ; BSR set to: 0
  9220  004536  EE20 F004          	lfsr	2,4
  9221  00453A  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9222  00453C  26D9               	addwf	fsr2l,f,c
  9223  00453E  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9224  004540  22DA               	addwfc	fsr2h,f,c
  9225  004542  0E14               	movlw	20
  9226  004544  18DE               	xorwf	postinc2,w,c
  9227  004546  10DE               	iorwf	postinc2,w,c
  9228  004548  A4D8               	btfss	status,2,c
  9229  00454A  D046               	goto	l26213
  9230                           
  9231                           ; BSR set to: 0
  9232                           ;sm_ControlGate_MC50.c: 205:                 psm->current_state = st_Learning;
  9233  00454C  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9234  004550  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9235  004554  0E05               	movlw	5
  9236  004556  D01B               	goto	L55
  9237  004558                     l26201:
  9238                           
  9239                           ; BSR set to: 0
  9240                           ;sm_ControlGate_MC50.c: 217:         {;sm_ControlGate_MC50.c: 218:             if (psm->
      +                          last_event == ev_LearningComplete) {
  9241  004558  EE20 F004          	lfsr	2,4
  9242  00455C  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9243  00455E  26D9               	addwf	fsr2l,f,c
  9244  004560  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9245  004562  22DA               	addwfc	fsr2h,f,c
  9246  004564  0E13               	movlw	19
  9247  004566  18DE               	xorwf	postinc2,w,c
  9248  004568  10DE               	iorwf	postinc2,w,c
  9249  00456A  B4D8               	btfsc	status,2,c
  9250  00456C  D755               	goto	u33250
  9251                           
  9252                           ; BSR set to: 0
  9253                           
  9254                           ;sm_ControlGate_MC50.c: 220:             } else if (psm->last_event == ev_ErrorLearning)
      +                           {
  9255                           
  9256                           ; BSR set to: 0
  9257                           ;sm_ControlGate_MC50.c: 219:                 psm->current_state = st_Closed;
  9258  00456E  EE20 F004          	lfsr	2,4
  9259  004572  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9260  004574  26D9               	addwf	fsr2l,f,c
  9261  004576  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9262  004578  22DA               	addwfc	fsr2h,f,c
  9263  00457A  0E12               	movlw	18
  9264  00457C                     L128:
  9265  00457C  18DE               	xorwf	postinc2,w,c
  9266  00457E  10DE               	iorwf	postinc2,w,c
  9267  004580  A4D8               	btfss	status,2,c
  9268  004582  D02A               	goto	l26213
  9269  004584                     L129:
  9270                           
  9271                           ; BSR set to: 0
  9272                           ;sm_ControlGate_MC50.c: 221:                 psm->current_state = st_Idle;
  9273  004584  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9274  004588  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9275  00458C  0E00               	movlw	0
  9276  00458E                     L55:
  9277  00458E  6EDE               	movwf	postinc2,c
  9278  004590  0E00               	movlw	0
  9279  004592  6EDD               	movwf	postdec2,c
  9280  004594  D021               	goto	l26213
  9281  004596                     l2653:
  9282                           
  9283                           ; BSR set to: 0
  9284  004596  D7FF               	goto	l2653
  9285  004598                     l26211:
  9286                           
  9287                           ; BSR set to: 1
  9288  004598  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9289  00459C  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9290  0045A0  50DF               	movf	indf2,w,c
  9291  0045A2  0100               	movlb	0	; () banked
  9292  0045A4  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9293  0045A6  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9294                           
  9295                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9296                           ; Switch size 1, requested type "simple"
  9297                           ; Number of cases is 1, Range of values is 0 to 0
  9298                           ; switch strategies available:
  9299                           ; Name         Instructions Cycles
  9300                           ; simple_byte            4     3 (average)
  9301                           ;	Chosen strategy is simple_byte
  9302  0045A8  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9303  0045AA  0A00               	xorlw	0	; case 0
  9304  0045AC  A4D8               	btfss	status,2,c
  9305  0045AE  D7F3               	goto	l2653
  9306                           
  9307                           ; BSR set to: 0
  9308                           ; Switch size 1, requested type "simple"
  9309                           ; Number of cases is 6, Range of values is 0 to 5
  9310                           ; switch strategies available:
  9311                           ; Name         Instructions Cycles
  9312                           ; simple_byte           19    10 (average)
  9313                           ;	Chosen strategy is simple_byte
  9314  0045B0  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9315  0045B2  0A00               	xorlw	0	; case 0
  9316  0045B4  B4D8               	btfsc	status,2,c
  9317  0045B6  D725               	goto	l26141
  9318  0045B8  0A01               	xorlw	1	; case 1
  9319  0045BA  B4D8               	btfsc	status,2,c
  9320  0045BC  D73F               	goto	l26149
  9321  0045BE  0A03               	xorlw	3	; case 2
  9322  0045C0  B4D8               	btfsc	status,2,c
  9323  0045C2  D74D               	goto	l26157
  9324  0045C4  0A01               	xorlw	1	; case 3
  9325  0045C6  B4D8               	btfsc	status,2,c
  9326  0045C8  D766               	goto	l26169
  9327  0045CA  0A07               	xorlw	7	; case 4
  9328  0045CC  B4D8               	btfsc	status,2,c
  9329  0045CE  D792               	goto	l26185
  9330  0045D0  0A01               	xorlw	1	; case 5
  9331  0045D2  B4D8               	btfsc	status,2,c
  9332  0045D4  D7C1               	goto	l26201
  9333  0045D6  D7DF               	goto	l2653
  9334  0045D8                     l26213:
  9335                           
  9336                           ; BSR set to: 0
  9337                           ;sm_ControlGate_MC50.c: 234:     sm_send_event(&controlGate_stateMachine, ev_NULL);
  9338  0045D8  0EE6               	movlw	low _controlGate_stateMachine
  9339  0045DA  6E12               	movwf	sm_send_event@psm^0,c
  9340  0045DC  0E01               	movlw	high _controlGate_stateMachine
  9341  0045DE  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9342  0045E0  0E00               	movlw	0
  9343  0045E2  6E15               	movwf	(sm_send_event@event+1)^0,c
  9344  0045E4  0E00               	movlw	0
  9345  0045E6  6E14               	movwf	sm_send_event@event^0,c
  9346  0045E8  ECDC  F047         	call	_sm_send_event	;wreg free
  9347                           
  9348                           ;sm_ControlGate_MC50.c: 239:     switch ((sm_state_ControlGate_t) psm->current_state) {
  9349  0045EC  D07E               	goto	l26277
  9350  0045EE                     l26215:
  9351                           
  9352                           ; BSR set to: 0
  9353                           ;sm_ControlGate_MC50.c: 241:         {;sm_ControlGate_MC50.c: 244:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (5 * (1000/50));
  9354  0045EE  0E00               	movlw	0
  9355  0045F0  0101               	movlb	1	; () banked
  9356  0045F2  6FDD               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9357  0045F4  0E64               	movlw	100
  9358  0045F6  6FDC               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9359                           
  9360                           ;sm_ControlGate_MC50.c: 247:             var_sys.PositionIsLost = YES;
  9361  0045F8  0E01               	movlw	1
  9362  0045FA  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9363                           
  9364                           ; BSR set to: 1
  9365                           ;sm_ControlGate_MC50.c: 248:             if (var_sys.WorkTimeMaxAlarmState == EmAlarme |
      +                          | var_sys.NumberOffErrors > 3)
  9366  0045FC  0E02               	movlw	2
  9367  0045FE  1942               	xorwf	(_var_sys+66)& (0+255),w,b	;volatile
  9368  004600  B4D8               	btfsc	status,2,c
  9369  004602  D003               	goto	u33430
  9370                           
  9371                           ; BSR set to: 1
  9372  004604  0E03               	movlw	3
  9373  004606  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
  9374  004608  D028               	goto	l26237
  9375  00460A                     u33430:
  9376                           
  9377                           ; BSR set to: 1
  9378                           ;sm_ControlGate_MC50.c: 249:             {;sm_ControlGate_MC50.c: 252:                 t
      +                          ypeOpenOrder = GetOpenOrder();
  9379  00460A  EC72  F02F         	call	_GetOpenOrder	;wreg free
  9380  00460E  0100               	movlb	0	; () banked
  9381  004610  6FEB               	movwf	sm_execute_ControlGate@typeOpenOrder& (0+255),b
  9382                           
  9383                           ; BSR set to: 0
  9384                           ;sm_ControlGate_MC50.c: 253:                 SetSegmentValueIntermitent(dE,dr, (1000/50)
      +                          );
  9385  004612  0E14               	movlw	20
  9386  004614  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9387  004616  0E00               	movlw	0
  9388  004618  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9389  00461A  0E14               	movlw	20
  9390  00461C  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9391  00461E  0E0E               	movlw	14
  9392  004620  EC9A  F04C         	call	_SetSegmentValueIntermitent
  9393                           
  9394                           ; BSR set to: 1
  9395                           ;sm_ControlGate_MC50.c: 254:                 ts_system.timeSinalizationDigit = ( 500/50)
      +                          ;
  9396  004624  0E00               	movlw	0
  9397  004626  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9398  004628  0E0A               	movlw	10
  9399  00462A  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9400                           
  9401                           ; BSR set to: 1
  9402                           ;sm_ControlGate_MC50.c: 255:                 if ((typeOpenOrder != NoCMD) ||(button_stru
      +                          ct.current==0x27 || button_struct.current==0x00 ||button_struct.current==0x17 ))
  9403  00462C  0100               	movlb	0	; () banked
  9404  00462E  51EB               	movf	sm_execute_ControlGate@typeOpenOrder& (0+255),w,b
  9405  004630  A4D8               	btfss	status,2,c
  9406  004632  D00B               	goto	u33470
  9407                           
  9408                           ; BSR set to: 0
  9409  004634  0E27               	movlw	39
  9410  004636  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  9411  004638  B4D8               	btfsc	status,2,c
  9412  00463A  D007               	goto	u33470
  9413                           
  9414                           ; BSR set to: 0
  9415  00463C  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9416  00463E  B4D8               	btfsc	status,2,c
  9417  004640  D004               	goto	u33470
  9418                           
  9419                           ; BSR set to: 0
  9420  004642  0E17               	movlw	23
  9421  004644  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  9422  004646  A4D8               	btfss	status,2,c
  9423  004648  0012               	return	
  9424  00464A                     u33470:
  9425                           
  9426                           ; BSR set to: 0
  9427                           ;sm_ControlGate_MC50.c: 256:                 {;sm_ControlGate_MC50.c: 257:              
      +                                 var_sys.WorkTimeMaxAlarmState = Clear;
  9428  00464A  0E00               	movlw	0
  9429  00464C  0101               	movlb	1	; () banked
  9430  00464E  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
  9431                           
  9432                           ;sm_ControlGate_MC50.c: 258:                     var_sys.NumberOffErrors = 0;
  9433  004650  0E00               	movlw	0
  9434  004652  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9435                           
  9436                           ;sm_ControlGate_MC50.c: 259:                     button_struct.processed=1;
  9437  004654  0E01               	movlw	1
  9438  004656  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  9439  004658  0012               	return	
  9440  00465A                     l26237:
  9441                           
  9442                           ; BSR set to: 1
  9443                           ;sm_ControlGate_MC50.c: 264:             {;sm_ControlGate_MC50.c: 267:                  
      +                             var_sys.Statedoorcontrol = st_Closed;
  9444  00465A  0E01               	movlw	1
  9445  00465C  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
  9446                           
  9447                           ; BSR set to: 1
  9448                           ;sm_ControlGate_MC50.c: 268:                     var_sys.actualCounterMoves++;
  9449  00465E  0E01               	movlw	1
  9450  004660  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
  9451  004662  0E00               	movlw	0
  9452  004664  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
  9453  004666  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
  9454  004668  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
  9455                           
  9456                           ; BSR set to: 1
  9457                           ;sm_ControlGate_MC50.c: 269:                     var_sys.Timewalkisactived = 0;
  9458  00466A  0E00               	movlw	0
  9459  00466C  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
  9460                           
  9461                           ; BSR set to: 1
  9462                           ;sm_ControlGate_MC50.c: 270:                     var_sys.PositionActual = 0;
  9463  00466E  0E00               	movlw	0
  9464  004670  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
  9465  004672  0E00               	movlw	0
  9466  004674  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
  9467  004676  0E00               	movlw	0
  9468  004678  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
  9469  00467A  0E00               	movlw	0
  9470  00467C  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
  9471                           
  9472                           ; BSR set to: 1
  9473                           ;sm_ControlGate_MC50.c: 272:                     var_sys.PositionIsLost = NO;
  9474  00467E  0E00               	movlw	0
  9475  004680  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9476                           
  9477                           ; BSR set to: 1
  9478                           ;sm_ControlGate_MC50.c: 273:                     var_sys.NumberOffErrors = 0;
  9479  004682  0E00               	movlw	0
  9480  004684  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9481                           
  9482                           ; BSR set to: 1
  9483                           ;sm_ControlGate_MC50.c: 274:                     var_sys.StateMotor = Stopped;
  9484  004686  0E00               	movlw	0
  9485  004688  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9486                           
  9487                           ; BSR set to: 1
  9488                           ;sm_ControlGate_MC50.c: 276:                     ts_system.timeSinalizationDigit = (1000
      +                          /50) * 2;
  9489  00468A  0E00               	movlw	0
  9490  00468C  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9491  00468E  0E28               	movlw	40
  9492  004690  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9493                           
  9494                           ; BSR set to: 1
  9495                           ;sm_ControlGate_MC50.c: 277:                     SetSegmentValueIntermitent(dF, dC, ( 20
      +                          0/50));
  9496  004692  0E0C               	movlw	12
  9497  004694  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9498  004696  0E00               	movlw	0
  9499  004698  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9500  00469A  0E04               	movlw	4
  9501  00469C  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9502  00469E  0E0F               	movlw	15
  9503  0046A0  EC9A  F04C         	call	_SetSegmentValueIntermitent
  9504                           
  9505                           ; BSR set to: 1
  9506                           ;sm_ControlGate_MC50.c: 278:                     sm_send_event(&controlGate_stateMachine
      +                          , ev_GateClosed);
  9507  0046A4  0EE6               	movlw	low _controlGate_stateMachine
  9508  0046A6  6E12               	movwf	sm_send_event@psm^0,c
  9509  0046A8  0E01               	movlw	high _controlGate_stateMachine
  9510  0046AA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9511  0046AC  0E00               	movlw	0
  9512  0046AE  6E15               	movwf	(sm_send_event@event+1)^0,c
  9513  0046B0  0E0A               	movlw	10
  9514  0046B2  6E14               	movwf	sm_send_event@event^0,c
  9515  0046B4  ECDC  F047         	call	_sm_send_event	;wreg free
  9516  0046B8  0012               	return	
  9517  0046BA                     l26257:
  9518                           
  9519                           ; BSR set to: 0
  9520                           ;sm_ControlGate_MC50.c: 285:         {;sm_ControlGate_MC50.c: 287:             actionZon
      +                          e_Closed();
  9521  0046BA  EC64  F03F         	call	_actionZone_Closed	;wreg free
  9522                           
  9523                           ;sm_ControlGate_MC50.c: 288:         };sm_ControlGate_MC50.c: 289:             break;
  9524  0046BE  0012               	return	
  9525  0046C0                     l26259:
  9526                           
  9527                           ; BSR set to: 0
  9528                           ;sm_ControlGate_MC50.c: 291:         {;sm_ControlGate_MC50.c: 293:             actionZon
      +                          e_Opening();
  9529  0046C0  EC23  F029         	call	_actionZone_Opening	;wreg free
  9530  0046C4                     l26261:
  9531                           
  9532                           ;sm_ControlGate_MC50.c: 295:             ts_system.TimeStopADCZeroOffsetCalc = (5 * (100
      +                          0/50));
  9533  0046C4  0E00               	movlw	0
  9534  0046C6  0101               	movlb	1	; () banked
  9535  0046C8  6FDD               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9536  0046CA  0E64               	movlw	100
  9537  0046CC  6FDC               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9538                           
  9539                           ;sm_ControlGate_MC50.c: 296:         };sm_ControlGate_MC50.c: 297:             break;
  9540  0046CE  0012               	return	
  9541  0046D0                     l26263:
  9542                           
  9543                           ; BSR set to: 0
  9544                           ;sm_ControlGate_MC50.c: 299:         {;sm_ControlGate_MC50.c: 301:             actionZon
      +                          e_Opened();
  9545  0046D0  EC92  F02D         	call	_actionZone_Opened	;wreg free
  9546  0046D4  D7F7               	goto	l26261
  9547  0046D6                     l26267:
  9548                           
  9549                           ; BSR set to: 0
  9550                           ;sm_ControlGate_MC50.c: 307:         {;sm_ControlGate_MC50.c: 309:             actionZon
      +                          e_Closing();
  9551  0046D6  ECA2  F026         	call	_actionZone_Closing	;wreg free
  9552  0046DA  D7F4               	goto	l26261
  9553  0046DC                     l26271:
  9554                           
  9555                           ; BSR set to: 0
  9556                           ;sm_ControlGate_MC50.c: 315:         {;sm_ControlGate_MC50.c: 316:             sm_execut
      +                          e_ControlLearning(&controlLearning_stateMachine);
  9557  0046DC  0EB2               	movlw	low _controlLearning_stateMachine
  9558  0046DE  6FDC               	movwf	sm_execute_ControlLearning@psm& (0+255),b
  9559  0046E0  0E02               	movlw	high _controlLearning_stateMachine
  9560  0046E2  6FDD               	movwf	(sm_execute_ControlLearning@psm+1)& (0+255),b
  9561  0046E4  EC38  F011         	call	_sm_execute_ControlLearning	;wreg free
  9562  0046E8  D7ED               	goto	l26261
  9563  0046EA                     l26277:
  9564  0046EA  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9565  0046EE  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9566  0046F2  50DF               	movf	indf2,w,c
  9567  0046F4  0100               	movlb	0	; () banked
  9568  0046F6  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9569  0046F8  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9570                           
  9571                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9572                           ; Switch size 1, requested type "simple"
  9573                           ; Number of cases is 1, Range of values is 0 to 0
  9574                           ; switch strategies available:
  9575                           ; Name         Instructions Cycles
  9576                           ; simple_byte            4     3 (average)
  9577                           ;	Chosen strategy is simple_byte
  9578  0046FA  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9579  0046FC  0A00               	xorlw	0	; case 0
  9580  0046FE  A4D8               	btfss	status,2,c
  9581  004700  0012               	return	
  9582                           
  9583                           ; BSR set to: 0
  9584                           ; Switch size 1, requested type "simple"
  9585                           ; Number of cases is 6, Range of values is 0 to 5
  9586                           ; switch strategies available:
  9587                           ; Name         Instructions Cycles
  9588                           ; simple_byte           19    10 (average)
  9589                           ;	Chosen strategy is simple_byte
  9590  004702  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9591  004704  0A00               	xorlw	0	; case 0
  9592  004706  B4D8               	btfsc	status,2,c
  9593  004708  D772               	goto	l26215
  9594  00470A  0A01               	xorlw	1	; case 1
  9595  00470C  B4D8               	btfsc	status,2,c
  9596  00470E  D7D5               	goto	l26257
  9597  004710  0A03               	xorlw	3	; case 2
  9598  004712  B4D8               	btfsc	status,2,c
  9599  004714  D7D5               	goto	l26259
  9600  004716  0A01               	xorlw	1	; case 3
  9601  004718  B4D8               	btfsc	status,2,c
  9602  00471A  D7DD               	goto	l26267
  9603  00471C  0A07               	xorlw	7	; case 4
  9604  00471E  B4D8               	btfsc	status,2,c
  9605  004720  D7D7               	goto	l26263
  9606  004722  0A01               	xorlw	1	; case 5
  9607  004724  A4D8               	btfss	status,2,c
  9608  004726  0012               	return	
  9609  004728  D7D9               	goto	l26271
  9610  00472A                     __end_of_sm_execute_ControlGate:
  9611                           	callstack 0
  9612                           
  9613 ;; *************** function _sm_execute_ControlLearning *****************
  9614 ;; Defined at:
  9615 ;;		line 29 in file "sm_ControlLearning_MC50.c"
  9616 ;; Parameters:    Size  Location     Type
  9617 ;;  psm             2    4[BANK0 ] PTR struct .
  9618 ;;		 -> controlLearning_stateMachine(11), 
  9619 ;; Auto vars:     Size  Location     Type
  9620 ;;  typeOpenOrde    1   57[COMRAM] enum E10372
  9621 ;; Return value:  Size  Location     Type
  9622 ;;                  1    wreg      void 
  9623 ;; Registers used:
  9624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9625 ;; Tracked objects:
  9626 ;;		On entry : 3F/0
  9627 ;;		On exit  : 0/0
  9628 ;;		Unchanged: 0/0
  9629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9630 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9631 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9632 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9633 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9634 ;;Total ram usage:        5 bytes
  9635 ;; Hardware stack levels used: 1
  9636 ;; Hardware stack levels required when called: 14
  9637 ;; This function calls:
  9638 ;;		_GetOpenOrder
  9639 ;;		_SaveNVM_VarSystem
  9640 ;;		_calculateMean
  9641 ;;		_clearLearningValue
  9642 ;;		_generateErrorLearnig
  9643 ;;		_sm_send_event
  9644 ;; This function is called by:
  9645 ;;		_sm_execute_ControlGate
  9646 ;; This function uses a non-reentrant model
  9647 ;;
  9648                           
  9649                           	psect	text18
  9650  002270                     __ptext18:
  9651                           	callstack 0
  9652  002270                     _sm_execute_ControlLearning:
  9653                           	callstack 15
  9654                           
  9655                           ; BSR set to: 0
  9656                           ;sm_ControlLearning_MC50.c: 31:    TypeCMD typeOpenOrder = GetOpenOrder();
  9657                           
  9658                           ;incstack = 0
  9659  002270  EC72  F02F         	call	_GetOpenOrder	;wreg free
  9660  002274  6E3A               	movwf	sm_execute_ControlLearning@typeOpenOrder^0,c
  9661                           
  9662                           ;sm_ControlLearning_MC50.c: 33:     switch((sm_state_ControlLearning_t) psm->current_sta
      +                          te)
  9663  002276  D0B8               	goto	l23925
  9664  002278                     l23851:
  9665                           
  9666                           ; BSR set to: 0
  9667                           ;sm_ControlLearning_MC50.c: 36:         {;sm_ControlLearning_MC50.c: 37:              if
      +                          ((psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0)&& (var_sys.p
      +                          rograminAutomatic == 0))
  9668  002278  EE20 F004          	lfsr	2,4
  9669  00227C  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9670  00227E  26D9               	addwf	fsr2l,f,c
  9671  002280  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9672  002282  22DA               	addwfc	fsr2h,f,c
  9673  002284  0E0A               	movlw	10
  9674  002286  18DE               	xorwf	postinc2,w,c
  9675  002288  10DE               	iorwf	postinc2,w,c
  9676  00228A  A4D8               	btfss	status,2,c
  9677  00228C  D00D               	goto	l23859
  9678                           
  9679                           ; BSR set to: 0
  9680  00228E  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9681  002290  B4D8               	btfsc	status,2,c
  9682  002292  D00A               	goto	l23859
  9683                           
  9684                           ; BSR set to: 0
  9685  002294  0101               	movlb	1	; () banked
  9686  002296  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9687  002298  A4D8               	btfss	status,2,c
  9688  00229A  D006               	goto	l23859
  9689  00229C                     u28320:
  9690                           
  9691                           ; BSR set to: 1
  9692                           ;sm_ControlLearning_MC50.c: 38:             {;sm_ControlLearning_MC50.c: 39:            
      +                               psm->current_state = st_WaitLearnigOpen;
  9693  00229C  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9694  0022A0  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9695  0022A4  0E02               	movlw	2
  9696  0022A6  D08A               	goto	L66
  9697  0022A8                     l23859:
  9698  0022A8  0100               	movlb	0	; () banked
  9699  0022AA  EE20 F004          	lfsr	2,4
  9700  0022AE  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9701  0022B0  26D9               	addwf	fsr2l,f,c
  9702  0022B2  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9703  0022B4  22DA               	addwfc	fsr2h,f,c
  9704  0022B6  0E0A               	movlw	10
  9705  0022B8  18DE               	xorwf	postinc2,w,c
  9706  0022BA  10DE               	iorwf	postinc2,w,c
  9707  0022BC  A4D8               	btfss	status,2,c
  9708  0022BE  D00D               	goto	l23867
  9709                           
  9710                           ; BSR set to: 0
  9711  0022C0  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9712  0022C2  B4D8               	btfsc	status,2,c
  9713  0022C4  D004               	goto	u28350
  9714                           
  9715                           ; BSR set to: 0
  9716  0022C6  0101               	movlb	1	; () banked
  9717  0022C8  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9718  0022CA  A4D8               	btfss	status,2,c
  9719  0022CC  D006               	goto	l23867
  9720  0022CE                     u28350:
  9721                           
  9722                           ;sm_ControlLearning_MC50.c: 43:             {;sm_ControlLearning_MC50.c: 44:            
      +                               psm->current_state = st_WaitForOpened;
  9723  0022CE  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9724  0022D2  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9725  0022D6  0E04               	movlw	4
  9726  0022D8  D071               	goto	L66
  9727  0022DA                     l23867:
  9728  0022DA  0100               	movlb	0	; () banked
  9729  0022DC  EE20 F004          	lfsr	2,4
  9730  0022E0  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9731  0022E2  26D9               	addwf	fsr2l,f,c
  9732  0022E4  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9733  0022E6  22DA               	addwfc	fsr2h,f,c
  9734  0022E8  0E0B               	movlw	11
  9735  0022EA  18DE               	xorwf	postinc2,w,c
  9736  0022EC  10DE               	iorwf	postinc2,w,c
  9737  0022EE  A4D8               	btfss	status,2,c
  9738  0022F0  D09B               	goto	l23927
  9739                           
  9740                           ; BSR set to: 0
  9741                           ;sm_ControlLearning_MC50.c: 47:             {;sm_ControlLearning_MC50.c: 48:            
      +                               psm->current_state = st_WaitForClosed;
  9742  0022F2  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9743  0022F6  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9744  0022FA  0E01               	movlw	1
  9745  0022FC  D05F               	goto	L66
  9746  0022FE                     l23871:
  9747                           
  9748                           ; BSR set to: 0
  9749                           ;sm_ControlLearning_MC50.c: 53:         {;sm_ControlLearning_MC50.c: 54:             if(
      +                          (psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0) && (var_sys.p
      +                          rograminAutomatic == 0))
  9750  0022FE  EE20 F004          	lfsr	2,4
  9751  002302  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9752  002304  26D9               	addwf	fsr2l,f,c
  9753  002306  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9754  002308  22DA               	addwfc	fsr2h,f,c
  9755  00230A  0E0A               	movlw	10
  9756  00230C  18DE               	xorwf	postinc2,w,c
  9757  00230E  10DE               	iorwf	postinc2,w,c
  9758  002310  A4D8               	btfss	status,2,c
  9759  002312  D007               	goto	l23879
  9760                           
  9761                           ; BSR set to: 0
  9762  002314  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9763  002316  B4D8               	btfsc	status,2,c
  9764  002318  D004               	goto	l23879
  9765                           
  9766                           ; BSR set to: 0
  9767  00231A  0101               	movlb	1	; () banked
  9768  00231C  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9769  00231E  B4D8               	btfsc	status,2,c
  9770  002320  D7BD               	goto	u28320
  9771  002322                     l23879:
  9772  002322  0100               	movlb	0	; () banked
  9773  002324  EE20 F004          	lfsr	2,4
  9774  002328  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9775  00232A  26D9               	addwf	fsr2l,f,c
  9776  00232C  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9777  00232E  22DA               	addwfc	fsr2h,f,c
  9778  002330  0E0A               	movlw	10
  9779  002332  18DE               	xorwf	postinc2,w,c
  9780  002334  10DE               	iorwf	postinc2,w,c
  9781  002336  A4D8               	btfss	status,2,c
  9782  002338  D007               	goto	l23887
  9783                           
  9784                           ; BSR set to: 0
  9785  00233A  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9786  00233C  B4D8               	btfsc	status,2,c
  9787  00233E  D7C7               	goto	u28350
  9788                           
  9789                           ; BSR set to: 0
  9790  002340  0101               	movlb	1	; () banked
  9791  002342  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9792  002344  B4D8               	btfsc	status,2,c
  9793  002346  D7C3               	goto	u28350
  9794  002348                     l23887:
  9795  002348  0100               	movlb	0	; () banked
  9796  00234A                     L68:
  9797  00234A  EE20 F004          	lfsr	2,4
  9798  00234E  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9799  002350  26D9               	addwf	fsr2l,f,c
  9800  002352  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9801  002354  22DA               	addwfc	fsr2h,f,c
  9802  002356  0E10               	movlw	16
  9803  002358  18DE               	xorwf	postinc2,w,c
  9804  00235A  10DE               	iorwf	postinc2,w,c
  9805  00235C  A4D8               	btfss	status,2,c
  9806  00235E  D064               	goto	l23927
  9807  002360  D03C               	goto	L130
  9808  002362                     l23891:
  9809                           
  9810                           ; BSR set to: 0
  9811                           ;sm_ControlLearning_MC50.c: 70:         {;sm_ControlLearning_MC50.c: 71:             if(
      +                          psm->last_event==ev_GateOpened)
  9812  002362  EE20 F004          	lfsr	2,4
  9813  002366  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9814  002368  26D9               	addwf	fsr2l,f,c
  9815  00236A  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9816  00236C  22DA               	addwfc	fsr2h,f,c
  9817  00236E  0E0B               	movlw	11
  9818  002370  18DE               	xorwf	postinc2,w,c
  9819  002372  10DE               	iorwf	postinc2,w,c
  9820  002374  A4D8               	btfss	status,2,c
  9821  002376  D7E9               	goto	L68
  9822                           
  9823                           ; BSR set to: 0
  9824                           ;sm_ControlLearning_MC50.c: 72:             {;sm_ControlLearning_MC50.c: 73:            
      +                               psm->current_state = st_WaitLearnigClose;
  9825  002378  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9826  00237C  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9827  002380  0E03               	movlw	3
  9828  002382  D01C               	goto	L66
  9829  002384                     l23899:
  9830                           
  9831                           ; BSR set to: 0
  9832                           ;sm_ControlLearning_MC50.c: 82:         {;sm_ControlLearning_MC50.c: 83:             if(
      +                          psm->last_event==ev_GateClosed)
  9833  002384  EE20 F004          	lfsr	2,4
  9834  002388  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9835  00238A  26D9               	addwf	fsr2l,f,c
  9836  00238C  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9837  00238E  22DA               	addwfc	fsr2h,f,c
  9838  002390  0E0A               	movlw	10
  9839  002392  18DE               	xorwf	postinc2,w,c
  9840  002394  10DE               	iorwf	postinc2,w,c
  9841  002396  A4D8               	btfss	status,2,c
  9842  002398  D7D8               	goto	L68
  9843  00239A  D799               	goto	u28350
  9844  00239C                     l23907:
  9845                           
  9846                           ; BSR set to: 0
  9847                           ;sm_ControlLearning_MC50.c: 94:         {;sm_ControlLearning_MC50.c: 95:             if(
      +                          psm->last_event==ev_GateOpened)
  9848  00239C  EE20 F004          	lfsr	2,4
  9849  0023A0  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9850  0023A2  26D9               	addwf	fsr2l,f,c
  9851  0023A4  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9852  0023A6  22DA               	addwfc	fsr2h,f,c
  9853  0023A8  0E0B               	movlw	11
  9854  0023AA  18DE               	xorwf	postinc2,w,c
  9855  0023AC  10DE               	iorwf	postinc2,w,c
  9856  0023AE  A4D8               	btfss	status,2,c
  9857  0023B0  D7CC               	goto	L68
  9858                           
  9859                           ; BSR set to: 0
  9860                           ;sm_ControlLearning_MC50.c: 96:             {;sm_ControlLearning_MC50.c: 97:            
      +                               psm->current_state = st_WaitForEndLearn;
  9861  0023B2  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9862  0023B6  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9863  0023BA  0E05               	movlw	5
  9864  0023BC                     L66:
  9865  0023BC  6EDE               	movwf	postinc2,c
  9866  0023BE  0E00               	movlw	0
  9867  0023C0  6EDD               	movwf	postdec2,c
  9868  0023C2  D032               	goto	l23927
  9869  0023C4                     l23915:
  9870                           
  9871                           ; BSR set to: 0
  9872                           ;sm_ControlLearning_MC50.c: 106:         {;sm_ControlLearning_MC50.c: 107:             i
      +                          f(psm->last_event==ev_GateClosed)
  9873  0023C4  EE20 F004          	lfsr	2,4
  9874  0023C8  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9875  0023CA  26D9               	addwf	fsr2l,f,c
  9876  0023CC  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9877  0023CE  22DA               	addwfc	fsr2h,f,c
  9878  0023D0  0E0A               	movlw	10
  9879  0023D2  18DE               	xorwf	postinc2,w,c
  9880  0023D4  10DE               	iorwf	postinc2,w,c
  9881  0023D6  A4D8               	btfss	status,2,c
  9882  0023D8  D7B8               	goto	L68
  9883  0023DA                     L130:
  9884                           
  9885                           ; BSR set to: 0
  9886                           ;sm_ControlLearning_MC50.c: 112:             {;sm_ControlLearning_MC50.c: 113:          
      +                                 psm->current_state = st_InitLearning;
  9887  0023DA  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9888  0023DE  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9889  0023E2  0E00               	movlw	0
  9890  0023E4  D7EB               	goto	L66
  9891  0023E6                     l2912:
  9892                           
  9893                           ; BSR set to: 0
  9894  0023E6  D7FF               	goto	l2912
  9895  0023E8                     l23925:
  9896  0023E8  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9897  0023EC  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9898  0023F0  50DF               	movf	indf2,w,c
  9899  0023F2  0100               	movlb	0	; () banked
  9900  0023F4  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
  9901  0023F6  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
  9902                           
  9903                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9904                           ; Switch size 1, requested type "simple"
  9905                           ; Number of cases is 1, Range of values is 0 to 0
  9906                           ; switch strategies available:
  9907                           ; Name         Instructions Cycles
  9908                           ; simple_byte            4     3 (average)
  9909                           ;	Chosen strategy is simple_byte
  9910  0023F8  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
  9911  0023FA  0A00               	xorlw	0	; case 0
  9912  0023FC  A4D8               	btfss	status,2,c
  9913  0023FE  D7F3               	goto	l2912
  9914                           
  9915                           ; BSR set to: 0
  9916                           ; Switch size 1, requested type "simple"
  9917                           ; Number of cases is 6, Range of values is 0 to 5
  9918                           ; switch strategies available:
  9919                           ; Name         Instructions Cycles
  9920                           ; simple_byte           19    10 (average)
  9921                           ;	Chosen strategy is simple_byte
  9922  002400  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
  9923  002402  0A00               	xorlw	0	; case 0
  9924  002404  B4D8               	btfsc	status,2,c
  9925  002406  D738               	goto	l23851
  9926  002408  0A01               	xorlw	1	; case 1
  9927  00240A  B4D8               	btfsc	status,2,c
  9928  00240C  D778               	goto	l23871
  9929  00240E  0A03               	xorlw	3	; case 2
  9930  002410  B4D8               	btfsc	status,2,c
  9931  002412  D7A7               	goto	l23891
  9932  002414  0A01               	xorlw	1	; case 3
  9933  002416  B4D8               	btfsc	status,2,c
  9934  002418  D7B5               	goto	l23899
  9935  00241A  0A07               	xorlw	7	; case 4
  9936  00241C  B4D8               	btfsc	status,2,c
  9937  00241E  D7BE               	goto	l23907
  9938  002420  0A01               	xorlw	1	; case 5
  9939  002422  B4D8               	btfsc	status,2,c
  9940  002424  D7CF               	goto	l23915
  9941  002426  D7DF               	goto	l2912
  9942  002428                     l23927:
  9943                           
  9944                           ;sm_ControlLearning_MC50.c: 126:     sm_send_event(&controlLearning_stateMachine, ev_NUL
      +                          L);
  9945  002428  0EB2               	movlw	low _controlLearning_stateMachine
  9946  00242A  6E12               	movwf	sm_send_event@psm^0,c
  9947  00242C  0E02               	movlw	high _controlLearning_stateMachine
  9948  00242E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9949  002430  0E00               	movlw	0
  9950  002432  6E15               	movwf	(sm_send_event@event+1)^0,c
  9951  002434  0E00               	movlw	0
  9952  002436  6E14               	movwf	sm_send_event@event^0,c
  9953  002438  ECDC  F047         	call	_sm_send_event	;wreg free
  9954                           
  9955                           ;sm_ControlLearning_MC50.c: 131:     switch((sm_state_ControlGate_t) psm->current_state)
  9956  00243C  D285               	goto	l24183
  9957  00243E                     l23929:
  9958                           
  9959                           ; BSR set to: 0
  9960                           ;sm_ControlLearning_MC50.c: 134:         {;sm_ControlLearning_MC50.c: 135:             i
      +                          f(var_sys.FimCurso_CloseIsEnabled==YES)
  9961  00243E  0101               	movlb	1	; () banked
  9962  002440  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  9963  002442  A4D8               	btfss	status,2,c
  9964  002444  D03A               	goto	l23947
  9965                           
  9966                           ; BSR set to: 1
  9967                           ;sm_ControlLearning_MC50.c: 136:             {;sm_ControlLearning_MC50.c: 137:          
      +                                 control_limit_switch = 1;
  9968  002446  0E01               	movlw	1
  9969  002448  0100               	movlb	0	; () banked
  9970  00244A  6F81               	movwf	_control_limit_switch& (0+255),b
  9971                           
  9972                           ; BSR set to: 0
  9973                           ;sm_ControlLearning_MC50.c: 138:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
  9974  00244C  0EB2               	movlw	low _controlLearning_stateMachine
  9975  00244E  6E12               	movwf	sm_send_event@psm^0,c
  9976  002450  0E02               	movlw	high _controlLearning_stateMachine
  9977  002452  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9978  002454  0E00               	movlw	0
  9979  002456  6E15               	movwf	(sm_send_event@event+1)^0,c
  9980  002458  0E0A               	movlw	10
  9981  00245A  6E14               	movwf	sm_send_event@event^0,c
  9982  00245C  ECDC  F047         	call	_sm_send_event	;wreg free
  9983                           
  9984                           ;sm_ControlLearning_MC50.c: 139:                 var_sys.StateMotor=InOpenFull;
  9985  002460  0E01               	movlw	1
  9986  002462  0101               	movlb	1	; () banked
  9987  002464  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9988                           
  9989                           ; BSR set to: 1
  9990                           ;sm_ControlLearning_MC50.c: 140:                 clearLearningValue();
  9991  002466  EC27  F044         	call	_clearLearningValue	;wreg free
  9992                           
  9993                           ; BSR set to: 0
  9994                           ;sm_ControlLearning_MC50.c: 141:                  if ((var_sys_NVM.decelarationSensivity
      +                           != 0) && (var_sys.programinAutomatic == 0))
  9995  00246A  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9996  00246C  B4D8               	btfsc	status,2,c
  9997  00246E  D016               	goto	l23945
  9998                           
  9999                           ; BSR set to: 0
 10000  002470  0101               	movlb	1	; () banked
 10001  002472  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10002  002474  A4D8               	btfss	status,2,c
 10003  002476  D012               	goto	l23945
 10004  002478                     u28540:
 10005                           
 10006                           ; BSR set to: 1
 10007                           ;sm_ControlLearning_MC50.c: 142:                          {;sm_ControlLearning_MC50.c: 1
      +                          43:                 ts_system.TimeLearningDecelaration=(1000/50)*15;
 10008  002478  0E01               	movlw	1
 10009  00247A  6FD5               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10010  00247C  0E2C               	movlw	44
 10011  00247E  6FD4               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10012                           
 10013                           ;sm_ControlLearning_MC50.c: 144:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*6;
 10014  002480  0E00               	movlw	0
 10015  002482  6FD3               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10016  002484  0E78               	movlw	120
 10017  002486  6FD2               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10018                           
 10019                           ;sm_ControlLearning_MC50.c: 145:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10020  002488  0E00               	movlw	0
 10021  00248A  6FE3               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10022  00248C  0E14               	movlw	20
 10023  00248E  6FE2               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10024                           
 10025                           ;sm_ControlLearning_MC50.c: 146:                 var_sys.LearningDecelaration=YES;
 10026  002490  0E01               	movlw	1
 10027  002492  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10028                           
 10029                           ;sm_ControlLearning_MC50.c: 147:                 control_limit_switch = 0;
 10030  002494  0E00               	movlw	0
 10031  002496  0100               	movlb	0	; () banked
 10032  002498  6F81               	movwf	_control_limit_switch& (0+255),b
 10033                           
 10034                           ;sm_ControlLearning_MC50.c: 148:                  }
 10035  00249A  0012               	return	
 10036  00249C                     l23945:
 10037                           
 10038                           ;sm_ControlLearning_MC50.c: 150:                 {;sm_ControlLearning_MC50.c: 151:      
      +                                     var_sys.LearningDecelaration=NO;
 10039  00249C  0E00               	movlw	0
 10040  00249E  0101               	movlb	1	; () banked
 10041  0024A0  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10042                           
 10043                           ;sm_ControlLearning_MC50.c: 152:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10044  0024A2  0E00               	movlw	0
 10045  0024A4  6FD3               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10046  0024A6  0E50               	movlw	80
 10047  0024A8  6FD2               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10048                           
 10049                           ;sm_ControlLearning_MC50.c: 153:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10050  0024AA  0E00               	movlw	0
 10051  0024AC  6FE3               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10052  0024AE  0E14               	movlw	20
 10053  0024B0  6FE2               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10054                           
 10055                           ;sm_ControlLearning_MC50.c: 154:                 control_limit_switch = 0;
 10056  0024B2  0E00               	movlw	0
 10057  0024B4  0100               	movlb	0	; () banked
 10058  0024B6  6F81               	movwf	_control_limit_switch& (0+255),b
 10059  0024B8  0012               	return	
 10060  0024BA                     l23947:
 10061                           
 10062                           ; BSR set to: 1
 10063                           ;sm_ControlLearning_MC50.c: 159:             {;sm_ControlLearning_MC50.c: 160:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10064  0024BA  0EB2               	movlw	low _controlLearning_stateMachine
 10065  0024BC  6E12               	movwf	sm_send_event@psm^0,c
 10066  0024BE  0E02               	movlw	high _controlLearning_stateMachine
 10067  0024C0  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10068  0024C2  0E00               	movlw	0
 10069  0024C4  6E15               	movwf	(sm_send_event@event+1)^0,c
 10070  0024C6  0E0B               	movlw	11
 10071  0024C8  6E14               	movwf	sm_send_event@event^0,c
 10072  0024CA  ECDC  F047         	call	_sm_send_event	;wreg free
 10073                           
 10074                           ;sm_ControlLearning_MC50.c: 161:                 var_sys.StateMotor = InClose;
 10075  0024CE  0E03               	movlw	3
 10076  0024D0  0101               	movlb	1	; () banked
 10077  0024D2  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10078                           
 10079                           ; BSR set to: 1
 10080                           ;sm_ControlLearning_MC50.c: 162:                 var_sys.LearningDecelaration= YES;
 10081  0024D4  0E01               	movlw	1
 10082  0024D6  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10083                           
 10084                           ; BSR set to: 1
 10085                           ;sm_ControlLearning_MC50.c: 164:         };sm_ControlLearning_MC50.c: 165:         break
      +                          ;
 10086                           
 10087                           ;sm_ControlLearning_MC50.c: 163:             }
 10088  0024D8  0012               	return	
 10089  0024DA                     l23953:
 10090                           
 10091                           ; BSR set to: 0
 10092                           ;sm_ControlLearning_MC50.c: 167:         {;sm_ControlLearning_MC50.c: 168:             i
      +                          f(((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1)) || ((button_stru
      +                          ct.current == 0x27 ||typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
 10093  0024DA  0101               	movlb	1	; () banked
 10094  0024DC  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10095  0024DE  B4D8               	btfsc	status,2,c
 10096  0024E0  D00F               	goto	u28590
 10097                           
 10098                           ; BSR set to: 1
 10099  0024E2  0100               	movlb	0	; () banked
 10100  0024E4  0581               	decf	_control_limit_switch& (0+255),w,b
 10101  0024E6  B4D8               	btfsc	status,2,c
 10102  0024E8  D00B               	goto	u28590
 10103                           
 10104                           ; BSR set to: 0
 10105  0024EA  0E27               	movlw	39
 10106  0024EC  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 10107  0024EE  B4D8               	btfsc	status,2,c
 10108  0024F0  D003               	goto	u28580
 10109                           
 10110                           ; BSR set to: 0
 10111  0024F2  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10112  0024F4  A4D8               	btfss	status,2,c
 10113  0024F6  D028               	goto	l23981
 10114  0024F8                     u28580:
 10115                           
 10116                           ; BSR set to: 0
 10117  0024F8  0101               	movlb	1	; () banked
 10118  0024FA  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10119  0024FC  A4D8               	btfss	status,2,c
 10120  0024FE  D024               	goto	l23981
 10121  002500                     u28590:
 10122                           
 10123                           ;sm_ControlLearning_MC50.c: 169:             {;sm_ControlLearning_MC50.c: 171:          
      +                                 control_limit_switch = 1;
 10124  002500  0E01               	movlw	1
 10125  002502  0100               	movlb	0	; () banked
 10126  002504  6F81               	movwf	_control_limit_switch& (0+255),b
 10127                           
 10128                           ;sm_ControlLearning_MC50.c: 172:                 var_sys.StateMotor=Stopped;
 10129  002506  0E00               	movlw	0
 10130  002508  0101               	movlb	1	; () banked
 10131  00250A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10132                           
 10133                           ; BSR set to: 1
 10134                           ;sm_ControlLearning_MC50.c: 173:                 if(ts_system.TimeWaitToNextState<=0)
 10135  00250C  BFC3               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10136  00250E  D005               	goto	u28600
 10137  002510  51C3               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10138  002512  E102               	bnz	u28601
 10139  002514  05C2               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10140  002516  B0D8               	btfsc	status,0,c
 10141  002518                     u28601:
 10142  002518  0012               	return	
 10143  00251A                     u28600:
 10144                           
 10145                           ; BSR set to: 1
 10146                           ;sm_ControlLearning_MC50.c: 174:                 {;sm_ControlLearning_MC50.c: 175:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10147  00251A  0EB2               	movlw	low _controlLearning_stateMachine
 10148  00251C  6E12               	movwf	sm_send_event@psm^0,c
 10149  00251E  0E02               	movlw	high _controlLearning_stateMachine
 10150  002520  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10151  002522  0E00               	movlw	0
 10152  002524  6E15               	movwf	(sm_send_event@event+1)^0,c
 10153  002526  0E0A               	movlw	10
 10154  002528  6E14               	movwf	sm_send_event@event^0,c
 10155  00252A  ECDC  F047         	call	_sm_send_event	;wreg free
 10156                           
 10157                           ;sm_ControlLearning_MC50.c: 176:                     var_sys.StateMotor=InOpenFull;
 10158  00252E  0E01               	movlw	1
 10159  002530  0101               	movlb	1	; () banked
 10160  002532  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10161                           
 10162                           ; BSR set to: 1
 10163                           ;sm_ControlLearning_MC50.c: 177:                     clearLearningValue();
 10164  002534  EC27  F044         	call	_clearLearningValue	;wreg free
 10165                           
 10166                           ; BSR set to: 0
 10167                           ;sm_ControlLearning_MC50.c: 178:                         if ((var_sys_NVM.decelarationSe
      +                          nsivity != 0) && (var_sys.programinAutomatic == 0))
 10168  002538  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10169  00253A  B4D8               	btfsc	status,2,c
 10170  00253C  D7AF               	goto	l23945
 10171                           
 10172                           ; BSR set to: 0
 10173  00253E  0101               	movlb	1	; () banked
 10174  002540  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10175  002542  B4D8               	btfsc	status,2,c
 10176  002544  D799               	goto	u28540
 10177  002546  D7AA               	goto	l23945
 10178  002548                     l23981:
 10179  002548  0101               	movlb	1	; () banked
 10180  00254A  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10181  00254C  A4D8               	btfss	status,2,c
 10182  00254E  D003               	goto	l23985
 10183  002550                     u28630:
 10184                           
 10185                           ; BSR set to: 1
 10186                           ;sm_ControlLearning_MC50.c: 196:             {;sm_ControlLearning_MC50.c: 197:          
      +                                 generateErrorLearnig();
 10187  002550  EC15  F047         	call	_generateErrorLearnig	;wreg free
 10188                           
 10189                           ;sm_ControlLearning_MC50.c: 198:             }
 10190  002554  0012               	return	
 10191  002556                     l23985:
 10192                           
 10193                           ; BSR set to: 1
 10194                           ;sm_ControlLearning_MC50.c: 200:             {;sm_ControlLearning_MC50.c: 201:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10195  002556  0E00               	movlw	0
 10196  002558  6FC3               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10197  00255A  0E28               	movlw	40
 10198  00255C  6FC2               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10199  00255E  0012               	return	
 10200  002560                     l23987:
 10201                           
 10202                           ; BSR set to: 0
 10203                           ;sm_ControlLearning_MC50.c: 206:         {;sm_ControlLearning_MC50.c: 207:             i
      +                          f((var_sys.FimCurso_OpenIsEnabled==YES) || (ts_system.TimeLearningDecelaration<=0)||(con
      +                          trol_limit_switch == 1))
 10204  002560  0101               	movlb	1	; () banked
 10205  002562  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10206  002564  A4D8               	btfss	status,2,c
 10207                           
 10208                           ; BSR set to: 1
 10209  002566  BFD5               	btfsc	(_ts_system+55)& (0+255),7,b	;volatile
 10210  002568  D009               	goto	u28660
 10211  00256A  51D5               	movf	(_ts_system+55)& (0+255),w,b	;volatile
 10212  00256C  E103               	bnz	u28650
 10213  00256E  05D4               	decf	(_ts_system+54)& (0+255),w,b	;volatile
 10214  002570  A0D8               	btfss	status,0,c
 10215  002572  D004               	goto	u28660
 10216  002574                     u28650:
 10217                           
 10218                           ; BSR set to: 1
 10219  002574  0100               	movlb	0	; () banked
 10220  002576  0581               	decf	_control_limit_switch& (0+255),w,b
 10221  002578  A4D8               	btfss	status,2,c
 10222  00257A  D02A               	goto	l24009
 10223  00257C                     u28660:
 10224                           
 10225                           ;sm_ControlLearning_MC50.c: 209:             {;sm_ControlLearning_MC50.c: 210:          
      +                                  control_limit_switch = 1;
 10226  00257C  0E01               	movlw	1
 10227  00257E  0100               	movlb	0	; () banked
 10228  002580  6F81               	movwf	_control_limit_switch& (0+255),b
 10229                           
 10230                           ;sm_ControlLearning_MC50.c: 211:                 var_sys.StateMotor=Stopped;
 10231  002582  0E00               	movlw	0
 10232  002584  0101               	movlb	1	; () banked
 10233  002586  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10234                           
 10235                           ; BSR set to: 1
 10236                           ;sm_ControlLearning_MC50.c: 212:             if(ts_system.TimeWaitToNextState<=0)
 10237  002588  BFC3               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10238  00258A  D005               	goto	u28670
 10239  00258C  51C3               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10240  00258E  E102               	bnz	u28671
 10241  002590  05C2               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10242  002592  B0D8               	btfsc	status,0,c
 10243  002594                     u28671:
 10244  002594  0012               	return	
 10245  002596                     u28670:
 10246                           
 10247                           ; BSR set to: 1
 10248                           ;sm_ControlLearning_MC50.c: 213:             {;sm_ControlLearning_MC50.c: 215:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10249  002596  0EB2               	movlw	low _controlLearning_stateMachine
 10250  002598  6E12               	movwf	sm_send_event@psm^0,c
 10251  00259A  0E02               	movlw	high _controlLearning_stateMachine
 10252  00259C  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10253  00259E  0E00               	movlw	0
 10254  0025A0  6E15               	movwf	(sm_send_event@event+1)^0,c
 10255  0025A2  0E0B               	movlw	11
 10256  0025A4  6E14               	movwf	sm_send_event@event^0,c
 10257  0025A6  ECDC  F047         	call	_sm_send_event	;wreg free
 10258                           
 10259                           ;sm_ControlLearning_MC50.c: 216:                 var_sys.StateMotor=InClose;
 10260  0025AA  0E03               	movlw	3
 10261  0025AC  0101               	movlb	1	; () banked
 10262  0025AE  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10263                           
 10264                           ; BSR set to: 1
 10265                           ;sm_ControlLearning_MC50.c: 217:                 ts_system.TimeLearningDecelaration=(100
      +                          0/50)*5;
 10266  0025B0  0E00               	movlw	0
 10267  0025B2  6FD5               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10268  0025B4  0E64               	movlw	100
 10269  0025B6  6FD4               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10270                           
 10271                           ; BSR set to: 1
 10272                           ;sm_ControlLearning_MC50.c: 218:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*5;
 10273  0025B8  0E00               	movlw	0
 10274  0025BA  6FD3               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10275  0025BC  0E64               	movlw	100
 10276  0025BE                     L67:
 10277  0025BE  6FD2               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10278                           
 10279                           ; BSR set to: 1
 10280                           ;sm_ControlLearning_MC50.c: 219:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10281  0025C0  0E00               	movlw	0
 10282  0025C2  6FE3               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10283  0025C4  0E14               	movlw	20
 10284  0025C6  6FE2               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10285                           
 10286                           ; BSR set to: 1
 10287                           ;sm_ControlLearning_MC50.c: 220:                 control_limit_switch = 0;
 10288  0025C8  0E00               	movlw	0
 10289  0025CA  0100               	movlb	0	; () banked
 10290  0025CC  6F81               	movwf	_control_limit_switch& (0+255),b
 10291  0025CE  0012               	return	
 10292  0025D0                     l24009:
 10293                           
 10294                           ; BSR set to: 0
 10295  0025D0  0101               	movlb	1	; () banked
 10296  0025D2  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10297  0025D4  B4D8               	btfsc	status,2,c
 10298  0025D6  D7BC               	goto	u28630
 10299                           
 10300                           ; BSR set to: 1
 10301                           ;sm_ControlLearning_MC50.c: 230:             {;sm_ControlLearning_MC50.c: 231:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10302  0025D8  0E00               	movlw	0
 10303  0025DA  6FC3               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10304  0025DC  0E28               	movlw	40
 10305  0025DE  6FC2               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10306                           
 10307                           ; BSR set to: 1
 10308                           ;sm_ControlLearning_MC50.c: 232:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10309  0025E0  BFE3               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10310  0025E2  D005               	goto	u28690
 10311  0025E4  51E3               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10312  0025E6  E102               	bnz	u28691
 10313  0025E8  05E2               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10314  0025EA  B0D8               	btfsc	status,0,c
 10315  0025EC                     u28691:
 10316  0025EC  0012               	return	
 10317  0025EE                     u28690:
 10318                           
 10319                           ; BSR set to: 1
 10320                           ;sm_ControlLearning_MC50.c: 233:                 {;sm_ControlLearning_MC50.c: 234:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10321  0025EE  BFD3               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10322  0025F0  0012               	return	
 10323  0025F2  51D3               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10324  0025F4  E103               	bnz	u28700
 10325  0025F6  05D2               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10326  0025F8  A0D8               	btfss	status,0,c
 10327  0025FA  0012               	return	
 10328  0025FC                     u28700:
 10329                           
 10330                           ; BSR set to: 1
 10331                           ;sm_ControlLearning_MC50.c: 235:                 {;sm_ControlLearning_MC50.c: 236:      
      +                                         learn_st.openHistCurrent=calculateMean(learn_st.openHistCurrent,var_sys.A
      +                          ctualHistCurrent);
 10332  0025FC  C06E  F010         	movff	_learn_st+14,calculateMean@meanValue	;volatile
 10333  002600  C06F  F011         	movff	_learn_st+15,calculateMean@meanValue+1	;volatile
 10334  002604  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10335  002606  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10336  002608  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10337  00260C  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10338  002610  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10339  002614  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10340  002618  EC7C  F047         	call	_calculateMean	;wreg free
 10341  00261C  C010  F06E         	movff	?_calculateMean,_learn_st+14	;volatile
 10342  002620  C011  F06F         	movff	?_calculateMean+1,_learn_st+15	;volatile
 10343  002624  0012               	return	
 10344  002626                     l24021:
 10345                           
 10346                           ; BSR set to: 0
 10347                           ;sm_ControlLearning_MC50.c: 243:         {;sm_ControlLearning_MC50.c: 244:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1))
 10348  002626  0101               	movlb	1	; () banked
 10349  002628  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10350  00262A  B4D8               	btfsc	status,2,c
 10351  00262C  D004               	goto	u28720
 10352                           
 10353                           ; BSR set to: 1
 10354  00262E  0100               	movlb	0	; () banked
 10355  002630  0581               	decf	_control_limit_switch& (0+255),w,b
 10356  002632  A4D8               	btfss	status,2,c
 10357  002634  D020               	goto	l24041
 10358  002636                     u28720:
 10359                           
 10360                           ;sm_ControlLearning_MC50.c: 245:             {;sm_ControlLearning_MC50.c: 246:          
      +                                 control_limit_switch = 1;
 10361  002636  0E01               	movlw	1
 10362  002638  0100               	movlb	0	; () banked
 10363  00263A  6F81               	movwf	_control_limit_switch& (0+255),b
 10364                           
 10365                           ;sm_ControlLearning_MC50.c: 247:                 var_sys.StateMotor=Stopped;
 10366  00263C  0E00               	movlw	0
 10367  00263E  0101               	movlb	1	; () banked
 10368  002640  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10369                           
 10370                           ; BSR set to: 1
 10371                           ;sm_ControlLearning_MC50.c: 248:                 if(ts_system.TimeWaitToNextState<=0)
 10372  002642  BFC3               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10373  002644  D005               	goto	u28730
 10374  002646  51C3               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10375  002648  E102               	bnz	u28731
 10376  00264A  05C2               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10377  00264C  B0D8               	btfsc	status,0,c
 10378  00264E                     u28731:
 10379  00264E  0012               	return	
 10380  002650                     u28730:
 10381                           
 10382                           ; BSR set to: 1
 10383                           ;sm_ControlLearning_MC50.c: 249:                 {;sm_ControlLearning_MC50.c: 250:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10384  002650  0EB2               	movlw	low _controlLearning_stateMachine
 10385  002652  6E12               	movwf	sm_send_event@psm^0,c
 10386  002654  0E02               	movlw	high _controlLearning_stateMachine
 10387  002656  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10388  002658  0E00               	movlw	0
 10389  00265A  6E15               	movwf	(sm_send_event@event+1)^0,c
 10390  00265C  0E0A               	movlw	10
 10391  00265E  6E14               	movwf	sm_send_event@event^0,c
 10392  002660  ECDC  F047         	call	_sm_send_event	;wreg free
 10393                           
 10394                           ;sm_ControlLearning_MC50.c: 251:                     var_sys.StateMotor=InOpenFull;
 10395  002664  0E01               	movlw	1
 10396  002666  0101               	movlb	1	; () banked
 10397  002668  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10398                           
 10399                           ; BSR set to: 1
 10400                           ;sm_ControlLearning_MC50.c: 252:                     var_sys.LearningDecelaration=NO;
 10401  00266A  0E00               	movlw	0
 10402  00266C  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10403                           
 10404                           ; BSR set to: 1
 10405                           ;sm_ControlLearning_MC50.c: 253:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*3;
 10406  00266E  0E00               	movlw	0
 10407  002670  6FD3               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10408  002672  0E3C               	movlw	60
 10409  002674  D7A4               	goto	L67
 10410  002676                     l24041:
 10411                           
 10412                           ; BSR set to: 0
 10413  002676  0101               	movlb	1	; () banked
 10414  002678  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10415  00267A  B4D8               	btfsc	status,2,c
 10416  00267C  D769               	goto	u28630
 10417                           
 10418                           ; BSR set to: 1
 10419                           ;sm_ControlLearning_MC50.c: 265:             {;sm_ControlLearning_MC50.c: 266:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10420  00267E  0E00               	movlw	0
 10421  002680  6FC3               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10422  002682  0E28               	movlw	40
 10423  002684  6FC2               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10424                           
 10425                           ; BSR set to: 1
 10426                           ;sm_ControlLearning_MC50.c: 267:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10427  002686  BFE3               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10428  002688  D005               	goto	u28750
 10429  00268A  51E3               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10430  00268C  E102               	bnz	u28751
 10431  00268E  05E2               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10432  002690  B0D8               	btfsc	status,0,c
 10433  002692                     u28751:
 10434  002692  0012               	return	
 10435  002694                     u28750:
 10436                           
 10437                           ; BSR set to: 1
 10438                           ;sm_ControlLearning_MC50.c: 268:                 {;sm_ControlLearning_MC50.c: 269:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10439  002694  BFD3               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10440  002696  0012               	return	
 10441  002698  51D3               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10442  00269A  E103               	bnz	u28760
 10443  00269C  05D2               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10444  00269E  A0D8               	btfss	status,0,c
 10445  0026A0  0012               	return	
 10446  0026A2                     u28760:
 10447                           
 10448                           ; BSR set to: 1
 10449                           ;sm_ControlLearning_MC50.c: 270:                 {;sm_ControlLearning_MC50.c: 271:      
      +                                         learn_st.closeHistCurrent=calculateMean(learn_st.closeHistCurrent,var_sys
      +                          .ActualHistCurrent);
 10450  0026A2  C070  F010         	movff	_learn_st+16,calculateMean@meanValue	;volatile
 10451  0026A6  C071  F011         	movff	_learn_st+17,calculateMean@meanValue+1	;volatile
 10452  0026AA  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10453  0026AC  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10454  0026AE  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10455  0026B2  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10456  0026B6  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10457  0026BA  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10458  0026BE  EC7C  F047         	call	_calculateMean	;wreg free
 10459  0026C2  C010  F070         	movff	?_calculateMean,_learn_st+16	;volatile
 10460  0026C6  C011  F071         	movff	?_calculateMean+1,_learn_st+17	;volatile
 10461  0026CA  0012               	return	
 10462  0026CC                     l24053:
 10463                           
 10464                           ; BSR set to: 0
 10465                           ;sm_ControlLearning_MC50.c: 278:         {;sm_ControlLearning_MC50.c: 279:             i
      +                          f(((var_sys.FimCurso_OpenIsEnabled==YES)||control_limit_switch == 1)||(var_sys.LearningD
      +                          ecelaration==YES && (button_struct.current == 0x27 ||typeOpenOrder == TypeFull) && var_s
      +                          ys.programinAutomatic == 1))
 10466  0026CC  0101               	movlb	1	; () banked
 10467  0026CE  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10468  0026D0  B4D8               	btfsc	status,2,c
 10469  0026D2  D012               	goto	u28820
 10470                           
 10471                           ; BSR set to: 1
 10472  0026D4  0100               	movlb	0	; () banked
 10473  0026D6  0581               	decf	_control_limit_switch& (0+255),w,b
 10474  0026D8  B4D8               	btfsc	status,2,c
 10475  0026DA  D00E               	goto	u28820
 10476                           
 10477                           ; BSR set to: 0
 10478  0026DC  0101               	movlb	1	; () banked
 10479  0026DE  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10480  0026E0  A4D8               	btfss	status,2,c
 10481  0026E2  D02D               	goto	l24079
 10482                           
 10483                           ; BSR set to: 1
 10484  0026E4  0E27               	movlw	39
 10485  0026E6  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 10486  0026E8  B4D8               	btfsc	status,2,c
 10487  0026EA  D003               	goto	u28810
 10488                           
 10489                           ; BSR set to: 1
 10490  0026EC  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10491  0026EE  A4D8               	btfss	status,2,c
 10492  0026F0  D026               	goto	l24079
 10493  0026F2                     u28810:
 10494                           
 10495                           ; BSR set to: 1
 10496  0026F2  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10497  0026F4  A4D8               	btfss	status,2,c
 10498  0026F6  D023               	goto	l24079
 10499  0026F8                     u28820:
 10500                           
 10501                           ;sm_ControlLearning_MC50.c: 280:             {;sm_ControlLearning_MC50.c: 282:          
      +                                 var_sys.Counter_Learning = 0;
 10502  0026F8  0E00               	movlw	0
 10503  0026FA  0101               	movlb	1	; () banked
 10504  0026FC  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10505                           
 10506                           ;sm_ControlLearning_MC50.c: 283:                 var_sys.LearningDecelaration = NO;
 10507  0026FE  0E00               	movlw	0
 10508  002700  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10509                           
 10510                           ;sm_ControlLearning_MC50.c: 284:                 control_limit_switch = 1;
 10511  002702  0E01               	movlw	1
 10512  002704  0100               	movlb	0	; () banked
 10513  002706  6F81               	movwf	_control_limit_switch& (0+255),b
 10514                           
 10515                           ;sm_ControlLearning_MC50.c: 285:                 var_sys.StateMotor=Stopped;
 10516  002708  0E00               	movlw	0
 10517  00270A  0101               	movlb	1	; () banked
 10518  00270C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10519                           
 10520                           ; BSR set to: 1
 10521                           ;sm_ControlLearning_MC50.c: 286:                 if(ts_system.TimeWaitToNextState<=0)
 10522  00270E  BFC3               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10523  002710  D005               	goto	u28830
 10524  002712  51C3               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10525  002714  E102               	bnz	u28831
 10526  002716  05C2               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10527  002718  B0D8               	btfsc	status,0,c
 10528  00271A                     u28831:
 10529  00271A  0012               	return	
 10530  00271C                     u28830:
 10531                           
 10532                           ; BSR set to: 1
 10533                           ;sm_ControlLearning_MC50.c: 287:                 {;sm_ControlLearning_MC50.c: 288:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10534  00271C  0EB2               	movlw	low _controlLearning_stateMachine
 10535  00271E  6E12               	movwf	sm_send_event@psm^0,c
 10536  002720  0E02               	movlw	high _controlLearning_stateMachine
 10537  002722  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10538  002724  0E00               	movlw	0
 10539  002726  6E15               	movwf	(sm_send_event@event+1)^0,c
 10540  002728  0E0B               	movlw	11
 10541  00272A  6E14               	movwf	sm_send_event@event^0,c
 10542  00272C  ECDC  F047         	call	_sm_send_event	;wreg free
 10543                           
 10544                           ;sm_ControlLearning_MC50.c: 289:                     var_sys.StateMotor=InClose;
 10545  002730  0E03               	movlw	3
 10546  002732  0101               	movlb	1	; () banked
 10547  002734  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10548                           
 10549                           ; BSR set to: 1
 10550                           ;sm_ControlLearning_MC50.c: 290:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*4;
 10551  002736  0E00               	movlw	0
 10552  002738  6FD3               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10553  00273A  0E50               	movlw	80
 10554  00273C  D740               	goto	L67
 10555  00273E                     l24079:
 10556                           
 10557                           ; BSR set to: 1
 10558  00273E  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10559  002740  B4D8               	btfsc	status,2,c
 10560  002742  D706               	goto	u28630
 10561                           
 10562                           ; BSR set to: 1
 10563  002744  0E27               	movlw	39
 10564  002746  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 10565  002748  B4D8               	btfsc	status,2,c
 10566  00274A  D003               	goto	u28860
 10567                           
 10568                           ; BSR set to: 1
 10569  00274C  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10570  00274E  A4D8               	btfss	status,2,c
 10571  002750  D00F               	goto	l24093
 10572  002752                     u28860:
 10573                           
 10574                           ; BSR set to: 1
 10575  002752  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10576  002754  A4D8               	btfss	status,2,c
 10577  002756  D00C               	goto	l24093
 10578                           
 10579                           ; BSR set to: 1
 10580  002758  5147               	movf	(_var_sys+71)& (0+255),w,b	;volatile
 10581  00275A  A4D8               	btfss	status,2,c
 10582  00275C  D009               	goto	l24093
 10583  00275E                     u28880:
 10584                           
 10585                           ; BSR set to: 1
 10586                           ;sm_ControlLearning_MC50.c: 303:                 var_sys.LearningDecelaration=YES;
 10587  00275E  0E01               	movlw	1
 10588  002760  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10589                           
 10590                           ;sm_ControlLearning_MC50.c: 306:                 button_struct.processed = 1;
 10591  002762  0E01               	movlw	1
 10592  002764  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 10593                           
 10594                           ;sm_ControlLearning_MC50.c: 307:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10595  002766  0E00               	movlw	0
 10596  002768  6FD3               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10597  00276A  0E50               	movlw	80
 10598  00276C  6FD2               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10599                           
 10600                           ;sm_ControlLearning_MC50.c: 309:             }
 10601  00276E  0012               	return	
 10602  002770                     l24093:
 10603                           
 10604                           ; BSR set to: 1
 10605  002770  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10606  002772  A4D8               	btfss	status,2,c
 10607  002774  D00C               	goto	l24101
 10608                           
 10609                           ; BSR set to: 1
 10610                           ;sm_ControlLearning_MC50.c: 313:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10611  002776  0E00               	movlw	0
 10612  002778  6FC3               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10613  00277A  0E28               	movlw	40
 10614  00277C  6FC2               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10615                           
 10616                           ; BSR set to: 1
 10617                           ;sm_ControlLearning_MC50.c: 315:                 if(ts_system.TimeWaitToGetCurrent>0)
 10618  00277E  BFD3               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10619  002780  0012               	return	
 10620  002782  51D3               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10621  002784  E103               	bnz	u28900
 10622  002786  05D2               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10623  002788  A0D8               	btfss	status,0,c
 10624  00278A  0012               	return	
 10625  00278C                     u28900:
 10626  00278C  D737               	goto	u28700
 10627  00278E                     l24101:
 10628                           
 10629                           ; BSR set to: 1
 10630                           ;sm_ControlLearning_MC50.c: 322:             {;sm_ControlLearning_MC50.c: 323:          
      +                                 var_sys.Counter_Learning = 1;
 10631  00278E  0E01               	movlw	1
 10632  002790  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10633                           
 10634                           ;sm_ControlLearning_MC50.c: 324:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10635  002792  0E00               	movlw	0
 10636  002794  6FC3               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10637  002796  0E28               	movlw	40
 10638  002798  6FC2               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10639                           
 10640                           ; BSR set to: 1
 10641                           ;sm_ControlLearning_MC50.c: 326:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10642  00279A  BFE3               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10643  00279C  D005               	goto	u28910
 10644  00279E  51E3               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10645  0027A0  E102               	bnz	u28911
 10646  0027A2  05E2               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10647  0027A4  B0D8               	btfsc	status,0,c
 10648  0027A6                     u28911:
 10649  0027A6  0012               	return	
 10650  0027A8                     u28910:
 10651                           
 10652                           ; BSR set to: 1
 10653                           ;sm_ControlLearning_MC50.c: 327:                 {;sm_ControlLearning_MC50.c: 328:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10654  0027A8  BFD3               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10655  0027AA  0012               	return	
 10656  0027AC  51D3               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10657  0027AE  E103               	bnz	u28920
 10658  0027B0  05D2               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10659  0027B2  A0D8               	btfss	status,0,c
 10660  0027B4  0012               	return	
 10661  0027B6                     u28920:
 10662                           
 10663                           ; BSR set to: 1
 10664                           ;sm_ControlLearning_MC50.c: 329:                 {;sm_ControlLearning_MC50.c: 330:      
      +                                         learn_st.openCurrent=calculateMean(learn_st.openCurrent,var_sys.ActualCur
      +                          rent);
 10665  0027B6  C06A  F010         	movff	_learn_st+10,calculateMean@meanValue	;volatile
 10666  0027BA  C06B  F011         	movff	_learn_st+11,calculateMean@meanValue+1	;volatile
 10667  0027BE  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10668  0027C0  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10669  0027C2  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 10670  0027C6  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 10671  0027CA  6A16               	clrf	(calculateMean@newValue+2)^0,c
 10672  0027CC  6A17               	clrf	(calculateMean@newValue+3)^0,c
 10673  0027CE  EC7C  F047         	call	_calculateMean	;wreg free
 10674  0027D2  C010  F06A         	movff	?_calculateMean,_learn_st+10	;volatile
 10675  0027D6  C011  F06B         	movff	?_calculateMean+1,_learn_st+11	;volatile
 10676  0027DA  0012               	return	
 10677  0027DC                     l24109:
 10678                           
 10679                           ; BSR set to: 0
 10680                           ;sm_ControlLearning_MC50.c: 337:         {;sm_ControlLearning_MC50.c: 338:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||( var_sys.LearningDecelaration==YES && (button
      +                          _struct.current == 0x27 || typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1
      +                          ))
 10681  0027DC  0101               	movlb	1	; () banked
 10682  0027DE  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10683  0027E0  B4D8               	btfsc	status,2,c
 10684  0027E2  D00D               	goto	u28970
 10685                           
 10686                           ; BSR set to: 1
 10687  0027E4  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10688  0027E6  A4D8               	btfss	status,2,c
 10689  0027E8  D070               	goto	l24155
 10690                           
 10691                           ; BSR set to: 1
 10692  0027EA  0E27               	movlw	39
 10693  0027EC  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 10694  0027EE  B4D8               	btfsc	status,2,c
 10695  0027F0  D003               	goto	u28960
 10696                           
 10697                           ; BSR set to: 1
 10698  0027F2  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10699  0027F4  A4D8               	btfss	status,2,c
 10700  0027F6  D069               	goto	l24155
 10701  0027F8                     u28960:
 10702                           
 10703                           ; BSR set to: 1
 10704  0027F8  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10705  0027FA  A4D8               	btfss	status,2,c
 10706  0027FC  D066               	goto	l24155
 10707  0027FE                     u28970:
 10708                           
 10709                           ; BSR set to: 1
 10710                           ;sm_ControlLearning_MC50.c: 339:             {;sm_ControlLearning_MC50.c: 342:          
      +                                 var_sys.Statedoorcontrol = st_Closed;
 10711  0027FE  0E01               	movlw	1
 10712  002800  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 10713                           
 10714                           ;sm_ControlLearning_MC50.c: 343:                 var_sys.Counter_Learning = 0;
 10715  002802  0E00               	movlw	0
 10716  002804  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10717                           
 10718                           ;sm_ControlLearning_MC50.c: 344:                 var_sys.LearningDecelaration = NO;
 10719  002806  0E00               	movlw	0
 10720  002808  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10721                           
 10722                           ;sm_ControlLearning_MC50.c: 345:                 var_sys.StateMotor=Stopped;
 10723  00280A  0E00               	movlw	0
 10724  00280C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10725                           
 10726                           ; BSR set to: 1
 10727                           ;sm_ControlLearning_MC50.c: 346:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
 10728  00280E  0EB2               	movlw	low _controlLearning_stateMachine
 10729  002810  6E12               	movwf	sm_send_event@psm^0,c
 10730  002812  0E02               	movlw	high _controlLearning_stateMachine
 10731  002814  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10732  002816  0E00               	movlw	0
 10733  002818  6E15               	movwf	(sm_send_event@event+1)^0,c
 10734  00281A  0E0A               	movlw	10
 10735  00281C  6E14               	movwf	sm_send_event@event^0,c
 10736  00281E  ECDC  F047         	call	_sm_send_event	;wreg free
 10737                           
 10738                           ;sm_ControlLearning_MC50.c: 347:                 sm_send_event(&controlGate_stateMachine
      +                          , ev_LearningComplete);
 10739  002822  0EE6               	movlw	low _controlGate_stateMachine
 10740  002824  6E12               	movwf	sm_send_event@psm^0,c
 10741  002826  0E01               	movlw	high _controlGate_stateMachine
 10742  002828  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10743  00282A  0E00               	movlw	0
 10744  00282C  6E15               	movwf	(sm_send_event@event+1)^0,c
 10745  00282E  0E13               	movlw	19
 10746  002830  6E14               	movwf	sm_send_event@event^0,c
 10747  002832  ECDC  F047         	call	_sm_send_event	;wreg free
 10748                           
 10749                           ;sm_ControlLearning_MC50.c: 348:                 var_sys_NVM.learningTimeToClose=learn_s
      +                          t.timeClose;
 10750  002836  C060  F0D0         	movff	_learn_st,_var_sys_NVM+56	;volatile
 10751  00283A  C061  F0D1         	movff	_learn_st+1,_var_sys_NVM+57	;volatile
 10752  00283E  C062  F0D2         	movff	_learn_st+2,_var_sys_NVM+58	;volatile
 10753  002842  C063  F0D3         	movff	_learn_st+3,_var_sys_NVM+59	;volatile
 10754                           
 10755                           ;sm_ControlLearning_MC50.c: 349:                 var_sys_NVM.learningTimeToOpen=learn_st
      +                          .timeOpen;
 10756  002846  C064  F0CC         	movff	_learn_st+4,_var_sys_NVM+52	;volatile
 10757  00284A  C065  F0CD         	movff	_learn_st+5,_var_sys_NVM+53	;volatile
 10758  00284E  C066  F0CE         	movff	_learn_st+6,_var_sys_NVM+54	;volatile
 10759  002852  C067  F0CF         	movff	_learn_st+7,_var_sys_NVM+55	;volatile
 10760                           
 10761                           ;sm_ControlLearning_MC50.c: 350:                 if (var_sys.programinAutomatic == 1){
 10762  002856  0101               	movlb	1	; () banked
 10763  002858  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10764  00285A  A4D8               	btfss	status,2,c
 10765  00285C  D005               	goto	l24133
 10766                           
 10767                           ; BSR set to: 1
 10768                           ;sm_ControlLearning_MC50.c: 351:                     var_sys_NVM.decelarationClose=learn
      +                          _st.timeDecelerationClose ;
 10769  00285E  C068  F099         	movff	_learn_st+8,_var_sys_NVM+1	;volatile
 10770                           
 10771                           ;sm_ControlLearning_MC50.c: 352:                     var_sys_NVM.decelarationOpen=learn_
      +                          st.timeDecelerationOpen ;
 10772  002862  C069  F098         	movff	_learn_st+9,_var_sys_NVM	;volatile
 10773                           
 10774                           ;sm_ControlLearning_MC50.c: 353:                                 }
 10775  002866  D005               	goto	l24135
 10776  002868                     l24133:
 10777                           
 10778                           ; BSR set to: 1
 10779                           ;sm_ControlLearning_MC50.c: 355:                     var_sys_NVM.decelarationClose=4 ;
 10780  002868  0E04               	movlw	4
 10781  00286A  0100               	movlb	0	; () banked
 10782  00286C  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 10783                           
 10784                           ;sm_ControlLearning_MC50.c: 356:                     var_sys_NVM.decelarationOpen=4 ;
 10785  00286E  0E04               	movlw	4
 10786  002870  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 10787  002872                     l24135:
 10788                           
 10789                           ;sm_ControlLearning_MC50.c: 358:                 var_sys_NVM.learningCurrentNormalClose=
      +                          learn_st.closeCurrent;
 10790  002872  C06C  F0C8         	movff	_learn_st+12,_var_sys_NVM+48	;volatile
 10791  002876  C06D  F0C9         	movff	_learn_st+13,_var_sys_NVM+49	;volatile
 10792                           
 10793                           ;sm_ControlLearning_MC50.c: 359:                 var_sys_NVM.learningCurrentNormalOpen=l
      +                          earn_st.openCurrent;
 10794  00287A  C06A  F0CA         	movff	_learn_st+10,_var_sys_NVM+50	;volatile
 10795  00287E  C06B  F0CB         	movff	_learn_st+11,_var_sys_NVM+51	;volatile
 10796                           
 10797                           ;sm_ControlLearning_MC50.c: 360:                 var_sys_NVM.learningCurrentDecelaration
      +                          Open=learn_st.openHistCurrent;
 10798  002882  C06E  F0C4         	movff	_learn_st+14,_var_sys_NVM+44	;volatile
 10799  002886  C06F  F0C5         	movff	_learn_st+15,_var_sys_NVM+45	;volatile
 10800  00288A  0100               	movlb	0	; () banked
 10801  00288C  6BC6               	clrf	(_var_sys_NVM+46)& (0+255),b	;volatile
 10802  00288E  6BC7               	clrf	(_var_sys_NVM+47)& (0+255),b	;volatile
 10803                           
 10804                           ; BSR set to: 0
 10805                           ;sm_ControlLearning_MC50.c: 361:                 var_sys_NVM.learningCurrentDecelaration
      +                          Close=learn_st.closeHistCurrent;
 10806  002890  C070  F0C0         	movff	_learn_st+16,_var_sys_NVM+40	;volatile
 10807  002894  C071  F0C1         	movff	_learn_st+17,_var_sys_NVM+41	;volatile
 10808  002898  6BC2               	clrf	(_var_sys_NVM+42)& (0+255),b	;volatile
 10809  00289A  6BC3               	clrf	(_var_sys_NVM+43)& (0+255),b	;volatile
 10810                           
 10811                           ; BSR set to: 0
 10812                           ;sm_ControlLearning_MC50.c: 362:                 SaveNVM_VarSystem(pageMemoryP);
 10813  00289C  0E00               	movlw	0
 10814  00289E  ECEA  F04B         	call	_SaveNVM_VarSystem
 10815                           
 10816                           ;sm_ControlLearning_MC50.c: 363:                 SaveNVM_VarSystem(pageMemoryLearningVar
      +                          s);
 10817  0028A2  0E03               	movlw	3
 10818  0028A4  ECEA  F04B         	call	_SaveNVM_VarSystem
 10819                           
 10820                           ;sm_ControlLearning_MC50.c: 364:                 SaveNVM_VarSystem(pageMemoryCounters);
 10821  0028A8  0E02               	movlw	2
 10822  0028AA  ECEA  F04B         	call	_SaveNVM_VarSystem
 10823                           
 10824                           ;sm_ControlLearning_MC50.c: 365:                 var_sys.LearningIsEnabled=NO;
 10825  0028AE  0E00               	movlw	0
 10826  0028B0  0101               	movlb	1	; () banked
 10827  0028B2  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 10828                           
 10829                           ; BSR set to: 1
 10830                           ;sm_ControlLearning_MC50.c: 366:                 var_sys.PositionActual=0;
 10831  0028B4  0E00               	movlw	0
 10832  0028B6  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 10833  0028B8  0E00               	movlw	0
 10834  0028BA  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 10835  0028BC  0E00               	movlw	0
 10836  0028BE  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 10837  0028C0  0E00               	movlw	0
 10838  0028C2  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 10839                           
 10840                           ; BSR set to: 1
 10841                           ;sm_ControlLearning_MC50.c: 367:                 var_sys.PositionIsLost = NO;
 10842  0028C4  0E00               	movlw	0
 10843  0028C6  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 10844                           
 10845                           ;sm_ControlLearning_MC50.c: 369:             }
 10846  0028C8  0012               	return	
 10847  0028CA                     l24155:
 10848                           
 10849                           ; BSR set to: 1
 10850  0028CA  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10851  0028CC  B4D8               	btfsc	status,2,c
 10852  0028CE  D640               	goto	u28630
 10853                           
 10854                           ; BSR set to: 1
 10855  0028D0  0E27               	movlw	39
 10856  0028D2  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 10857  0028D4  B4D8               	btfsc	status,2,c
 10858  0028D6  D003               	goto	u29010
 10859                           
 10860                           ; BSR set to: 1
 10861  0028D8  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10862  0028DA  A4D8               	btfss	status,2,c
 10863  0028DC  D003               	goto	l24167
 10864  0028DE                     u29010:
 10865                           
 10866                           ; BSR set to: 1
 10867  0028DE  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10868  0028E0  B4D8               	btfsc	status,2,c
 10869  0028E2  D73D               	goto	u28880
 10870  0028E4                     l24167:
 10871                           
 10872                           ; BSR set to: 1
 10873  0028E4  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10874  0028E6  A4D8               	btfss	status,2,c
 10875  0028E8  D008               	goto	l24173
 10876                           
 10877                           ; BSR set to: 1
 10878                           ;sm_ControlLearning_MC50.c: 384:                  if(ts_system.TimeWaitToGetCurrent>0)
 10879  0028EA  BFD3               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10880  0028EC  0012               	return	
 10881  0028EE  51D3               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10882  0028F0  E103               	bnz	u29040
 10883  0028F2  05D2               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10884  0028F4  A0D8               	btfss	status,0,c
 10885  0028F6  0012               	return	
 10886  0028F8                     u29040:
 10887  0028F8  D6D4               	goto	u28760
 10888  0028FA                     l24173:
 10889                           
 10890                           ; BSR set to: 1
 10891                           ;sm_ControlLearning_MC50.c: 390:             {;sm_ControlLearning_MC50.c: 391:          
      +                                 var_sys.Counter_Learning = 1;
 10892  0028FA  0E01               	movlw	1
 10893  0028FC  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10894                           
 10895                           ;sm_ControlLearning_MC50.c: 392:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10896  0028FE  0E00               	movlw	0
 10897  002900  6FC3               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10898  002902  0E28               	movlw	40
 10899  002904  6FC2               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10900                           
 10901                           ; BSR set to: 1
 10902                           ;sm_ControlLearning_MC50.c: 395:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10903  002906  BFE3               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10904  002908  D005               	goto	u29050
 10905  00290A  51E3               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10906  00290C  E102               	bnz	u29051
 10907  00290E  05E2               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10908  002910  B0D8               	btfsc	status,0,c
 10909  002912                     u29051:
 10910  002912  0012               	return	
 10911  002914                     u29050:
 10912                           
 10913                           ; BSR set to: 1
 10914                           ;sm_ControlLearning_MC50.c: 396:                 {;sm_ControlLearning_MC50.c: 397:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10915  002914  BFD3               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10916  002916  0012               	return	
 10917  002918  51D3               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10918  00291A  E103               	bnz	u29060
 10919  00291C  05D2               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10920  00291E  A0D8               	btfss	status,0,c
 10921  002920  0012               	return	
 10922  002922                     u29060:
 10923                           
 10924                           ; BSR set to: 1
 10925                           ;sm_ControlLearning_MC50.c: 398:                 {;sm_ControlLearning_MC50.c: 399:      
      +                                         learn_st.closeCurrent=calculateMean(learn_st.closeCurrent,var_sys.ActualC
      +                          urrent);
 10926  002922  C06C  F010         	movff	_learn_st+12,calculateMean@meanValue	;volatile
 10927  002926  C06D  F011         	movff	_learn_st+13,calculateMean@meanValue+1	;volatile
 10928  00292A  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10929  00292C  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10930  00292E  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 10931  002932  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 10932  002936  6A16               	clrf	(calculateMean@newValue+2)^0,c
 10933  002938  6A17               	clrf	(calculateMean@newValue+3)^0,c
 10934  00293A  EC7C  F047         	call	_calculateMean	;wreg free
 10935  00293E  C010  F06C         	movff	?_calculateMean,_learn_st+12	;volatile
 10936  002942  C011  F06D         	movff	?_calculateMean+1,_learn_st+13	;volatile
 10937  002946  0012               	return	
 10938  002948                     l24183:
 10939  002948  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10940  00294C  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10941  002950  50DF               	movf	indf2,w,c
 10942  002952  0100               	movlb	0	; () banked
 10943  002954  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
 10944  002956  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
 10945                           
 10946                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10947                           ; Switch size 1, requested type "simple"
 10948                           ; Number of cases is 1, Range of values is 0 to 0
 10949                           ; switch strategies available:
 10950                           ; Name         Instructions Cycles
 10951                           ; simple_byte            4     3 (average)
 10952                           ;	Chosen strategy is simple_byte
 10953  002958  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
 10954  00295A  0A00               	xorlw	0	; case 0
 10955  00295C  A4D8               	btfss	status,2,c
 10956  00295E  0012               	return	
 10957                           
 10958                           ; BSR set to: 0
 10959                           ; Switch size 1, requested type "simple"
 10960                           ; Number of cases is 6, Range of values is 0 to 5
 10961                           ; switch strategies available:
 10962                           ; Name         Instructions Cycles
 10963                           ; simple_byte           19    10 (average)
 10964                           ;	Chosen strategy is simple_byte
 10965  002960  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
 10966  002962  0A00               	xorlw	0	; case 0
 10967  002964  B4D8               	btfsc	status,2,c
 10968  002966  D56B               	goto	l23929
 10969  002968  0A01               	xorlw	1	; case 1
 10970  00296A  B4D8               	btfsc	status,2,c
 10971  00296C  D5B6               	goto	l23953
 10972  00296E  0A03               	xorlw	3	; case 2
 10973  002970  B4D8               	btfsc	status,2,c
 10974  002972  D5F6               	goto	l23987
 10975  002974  0A01               	xorlw	1	; case 3
 10976  002976  B4D8               	btfsc	status,2,c
 10977  002978  D656               	goto	l24021
 10978  00297A  0A07               	xorlw	7	; case 4
 10979  00297C  B4D8               	btfsc	status,2,c
 10980  00297E  D6A6               	goto	l24053
 10981  002980  0A01               	xorlw	1	; case 5
 10982  002982  A4D8               	btfss	status,2,c
 10983  002984  0012               	return	
 10984  002986  D72A               	goto	l24109
 10985  002988                     __end_of_sm_execute_ControlLearning:
 10986                           	callstack 0
 10987                           
 10988 ;; *************** function _generateErrorLearnig *****************
 10989 ;; Defined at:
 10990 ;;		line 424 in file "sm_ControlLearning_MC50.c"
 10991 ;; Parameters:    Size  Location     Type
 10992 ;;		None
 10993 ;; Auto vars:     Size  Location     Type
 10994 ;;		None
 10995 ;; Return value:  Size  Location     Type
 10996 ;;                  1    wreg      void 
 10997 ;; Registers used:
 10998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10999 ;; Tracked objects:
 11000 ;;		On entry : 3E/1
 11001 ;;		On exit  : 0/0
 11002 ;;		Unchanged: 0/0
 11003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11008 ;;Total ram usage:        0 bytes
 11009 ;; Hardware stack levels used: 1
 11010 ;; Hardware stack levels required when called: 6
 11011 ;; This function calls:
 11012 ;;		_sm_init
 11013 ;; This function is called by:
 11014 ;;		_sm_execute_ControlLearning
 11015 ;; This function uses a non-reentrant model
 11016 ;;
 11017                           
 11018                           	psect	text19
 11019  008E2A                     __ptext19:
 11020                           	callstack 0
 11021  008E2A                     _generateErrorLearnig:
 11022                           	callstack 22
 11023                           
 11024                           ;sm_ControlLearning_MC50.c: 428:     var_sys.LearningIsEnabled=NO;
 11025                           
 11026                           ;incstack = 0
 11027  008E2A  0E00               	movlw	0
 11028  008E2C  0101               	movlb	1	; () banked
 11029  008E2E  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 11030                           
 11031                           ; BSR set to: 1
 11032                           ;sm_ControlLearning_MC50.c: 430:     sm_init(&menuConfiguration_stateMachine,st_MainMenu
      +                          ,HIST_NONE);
 11033  008E30  0EBD               	movlw	low _menuConfiguration_stateMachine
 11034  008E32  6E12               	movwf	sm_init@psm^0,c
 11035  008E34  0E02               	movlw	high _menuConfiguration_stateMachine
 11036  008E36  6E13               	movwf	(sm_init@psm+1)^0,c
 11037  008E38  0E00               	movlw	0
 11038  008E3A  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11039  008E3C  0E00               	movlw	0
 11040  008E3E  6E14               	movwf	sm_init@initial_state^0,c
 11041  008E40  0E00               	movlw	0
 11042  008E42  6E16               	movwf	sm_init@hist_mode^0,c
 11043  008E44  ECEC  F048         	call	_sm_init	;wreg free
 11044                           
 11045                           ;sm_ControlLearning_MC50.c: 431:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
 11046  008E48  0EF1               	movlw	low _main_stateMachine
 11047  008E4A  6E12               	movwf	sm_init@psm^0,c
 11048  008E4C  0E01               	movlw	high _main_stateMachine
 11049  008E4E  6E13               	movwf	(sm_init@psm+1)^0,c
 11050  008E50  0E00               	movlw	0
 11051  008E52  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11052  008E54  0E00               	movlw	0
 11053  008E56  6E14               	movwf	sm_init@initial_state^0,c
 11054  008E58  0E00               	movlw	0
 11055  008E5A  6E16               	movwf	sm_init@hist_mode^0,c
 11056  008E5C  ECEC  F048         	call	_sm_init	;wreg free
 11057                           
 11058                           ;sm_ControlLearning_MC50.c: 432:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE
      +                          );
 11059  008E60  0EE6               	movlw	low _controlGate_stateMachine
 11060  008E62  6E12               	movwf	sm_init@psm^0,c
 11061  008E64  0E01               	movlw	high _controlGate_stateMachine
 11062  008E66  6E13               	movwf	(sm_init@psm+1)^0,c
 11063  008E68  0E00               	movlw	0
 11064  008E6A  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11065  008E6C  0E00               	movlw	0
 11066  008E6E  6E14               	movwf	sm_init@initial_state^0,c
 11067  008E70  0E00               	movlw	0
 11068  008E72  6E16               	movwf	sm_init@hist_mode^0,c
 11069  008E74  ECEC  F048         	call	_sm_init	;wreg free
 11070                           
 11071                           ;sm_ControlLearning_MC50.c: 433:     sm_init(&controlLearning_stateMachine,st_InitLearni
      +                          ng,HIST_NONE);
 11072  008E78  0EB2               	movlw	low _controlLearning_stateMachine
 11073  008E7A  6E12               	movwf	sm_init@psm^0,c
 11074  008E7C  0E02               	movlw	high _controlLearning_stateMachine
 11075  008E7E  6E13               	movwf	(sm_init@psm+1)^0,c
 11076  008E80  0E00               	movlw	0
 11077  008E82  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11078  008E84  0E00               	movlw	0
 11079  008E86  6E14               	movwf	sm_init@initial_state^0,c
 11080  008E88  0E00               	movlw	0
 11081  008E8A  6E16               	movwf	sm_init@hist_mode^0,c
 11082  008E8C  ECEC  F048         	call	_sm_init	;wreg free
 11083  008E90  0012               	return		;funcret
 11084  008E92                     __end_of_generateErrorLearnig:
 11085                           	callstack 0
 11086                           
 11087 ;; *************** function _sm_init *****************
 11088 ;; Defined at:
 11089 ;;		line 12 in file "sm_common_MC50.c"
 11090 ;; Parameters:    Size  Location     Type
 11091 ;;  psm             2   17[COMRAM] PTR struct .
 11092 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11093 ;;  initial_stat    2   19[COMRAM] int 
 11094 ;;  hist_mode       1   21[COMRAM] enum E348
 11095 ;; Auto vars:     Size  Location     Type
 11096 ;;		None
 11097 ;; Return value:  Size  Location     Type
 11098 ;;                  1    wreg      void 
 11099 ;; Registers used:
 11100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11101 ;; Tracked objects:
 11102 ;;		On entry : 0/1
 11103 ;;		On exit  : 0/0
 11104 ;;		Unchanged: 0/0
 11105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11106 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11109 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11110 ;;Total ram usage:        5 bytes
 11111 ;; Hardware stack levels used: 1
 11112 ;; Hardware stack levels required when called: 5
 11113 ;; This function calls:
 11114 ;;		_sm_restart
 11115 ;; This function is called by:
 11116 ;;		_main
 11117 ;;		_generateErrorLearnig
 11118 ;; This function uses a non-reentrant model
 11119 ;;
 11120                           
 11121                           	psect	text20
 11122  0091D8                     __ptext20:
 11123                           	callstack 0
 11124  0091D8                     _sm_init:
 11125                           	callstack 25
 11126                           
 11127                           ;sm_common_MC50.c: 12: void sm_init(sm_t *psm, int initial_state, sm_history_t hist_mode
      +                          );sm_common_MC50.c: 13: {;sm_common_MC50.c: 14:  psm->initial_state = initial_state;
 11128                           
 11129                           ;incstack = 0
 11130  0091D8  EE20 F002          	lfsr	2,2
 11131  0091DC  5012               	movf	sm_init@psm^0,w,c
 11132  0091DE  26D9               	addwf	fsr2l,f,c
 11133  0091E0  5013               	movf	(sm_init@psm+1)^0,w,c
 11134  0091E2  22DA               	addwfc	fsr2h,f,c
 11135  0091E4  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11136  0091E8  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11137                           
 11138                           ;sm_common_MC50.c: 15:  psm->history = hist_mode;
 11139  0091EC  EE20 F006          	lfsr	2,6
 11140  0091F0  5012               	movf	sm_init@psm^0,w,c
 11141  0091F2  26D9               	addwf	fsr2l,f,c
 11142  0091F4  5013               	movf	(sm_init@psm+1)^0,w,c
 11143  0091F6  22DA               	addwfc	fsr2h,f,c
 11144  0091F8  C016  FFDF         	movff	sm_init@hist_mode,indf2
 11145                           
 11146                           ;sm_common_MC50.c: 16:  psm->current_state = initial_state;
 11147  0091FC  C012  FFD9         	movff	sm_init@psm,fsr2l
 11148  009200  C013  FFDA         	movff	sm_init@psm+1,fsr2h
 11149  009204  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11150  009208  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11151                           
 11152                           ;sm_common_MC50.c: 19:  psm->parent_machine = ((void*)0);
 11153  00920C  EE20 F007          	lfsr	2,7
 11154  009210  5012               	movf	sm_init@psm^0,w,c
 11155  009212  26D9               	addwf	fsr2l,f,c
 11156  009214  5013               	movf	(sm_init@psm+1)^0,w,c
 11157  009216  22DA               	addwfc	fsr2h,f,c
 11158  009218  0E00               	movlw	0
 11159  00921A  6EDE               	movwf	postinc2,c
 11160  00921C  0E00               	movlw	0
 11161  00921E  6EDD               	movwf	postdec2,c
 11162                           
 11163                           ;sm_common_MC50.c: 20:  sm_restart(psm);
 11164  009220  C012  F010         	movff	sm_init@psm,sm_restart@psm
 11165  009224  C013  F011         	movff	sm_init@psm+1,sm_restart@psm+1
 11166  009228  ECCA  F04A         	call	_sm_restart	;wreg free
 11167  00922C  0012               	return		;funcret
 11168  00922E                     __end_of_sm_init:
 11169                           	callstack 0
 11170                           
 11171 ;; *************** function _sm_restart *****************
 11172 ;; Defined at:
 11173 ;;		line 23 in file "sm_common_MC50.c"
 11174 ;; Parameters:    Size  Location     Type
 11175 ;;  psm             2   15[COMRAM] PTR struct .
 11176 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11177 ;; Auto vars:     Size  Location     Type
 11178 ;;		None
 11179 ;; Return value:  Size  Location     Type
 11180 ;;                  1    wreg      void 
 11181 ;; Registers used:
 11182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11183 ;; Tracked objects:
 11184 ;;		On entry : 0/1
 11185 ;;		On exit  : 0/0
 11186 ;;		Unchanged: 0/0
 11187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11188 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11191 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11192 ;;Total ram usage:        2 bytes
 11193 ;; Hardware stack levels used: 1
 11194 ;; Hardware stack levels required when called: 4
 11195 ;; This function calls:
 11196 ;;		Nothing
 11197 ;; This function is called by:
 11198 ;;		_sm_init
 11199 ;; This function uses a non-reentrant model
 11200 ;;
 11201                           
 11202                           	psect	text21
 11203  009594                     __ptext21:
 11204                           	callstack 0
 11205  009594                     _sm_restart:
 11206                           	callstack 25
 11207                           
 11208                           ;sm_common_MC50.c: 24:  if(psm->history == HIST_NONE){
 11209                           
 11210                           ;incstack = 0
 11211  009594  EE20 F006          	lfsr	2,6
 11212  009598  5010               	movf	sm_restart@psm^0,w,c
 11213  00959A  26D9               	addwf	fsr2l,f,c
 11214  00959C  5011               	movf	(sm_restart@psm+1)^0,w,c
 11215  00959E  22DA               	addwfc	fsr2h,f,c
 11216  0095A0  50DF               	movf	indf2,w,c
 11217  0095A2  A4D8               	btfss	status,2,c
 11218  0095A4  D00E               	goto	l20779
 11219                           
 11220                           ;sm_common_MC50.c: 25:   psm->current_state = psm->initial_state;
 11221  0095A6  EE20 F002          	lfsr	2,2
 11222  0095AA  5010               	movf	sm_restart@psm^0,w,c
 11223  0095AC  26D9               	addwf	fsr2l,f,c
 11224  0095AE  5011               	movf	(sm_restart@psm+1)^0,w,c
 11225  0095B0  22DA               	addwfc	fsr2h,f,c
 11226  0095B2  C010  FFE1         	movff	sm_restart@psm,fsr1l
 11227  0095B6  C011  FFE2         	movff	sm_restart@psm+1,fsr1h
 11228  0095BA  CFDE FFE6          	movff	postinc2,postinc1
 11229  0095BE  CFDD FFE5          	movff	postdec2,postdec1
 11230  0095C2                     l20779:
 11231                           
 11232                           ;sm_common_MC50.c: 27:  psm->last_event = 0;
 11233  0095C2  EE20 F004          	lfsr	2,4
 11234  0095C6  5010               	movf	sm_restart@psm^0,w,c
 11235  0095C8  26D9               	addwf	fsr2l,f,c
 11236  0095CA  5011               	movf	(sm_restart@psm+1)^0,w,c
 11237  0095CC  22DA               	addwfc	fsr2h,f,c
 11238  0095CE  0E00               	movlw	0
 11239  0095D0  6EDE               	movwf	postinc2,c
 11240  0095D2  0E00               	movlw	0
 11241  0095D4  6EDD               	movwf	postdec2,c
 11242  0095D6  0012               	return		;funcret
 11243  0095D8                     __end_of_sm_restart:
 11244                           	callstack 0
 11245                           
 11246 ;; *************** function _clearLearningValue *****************
 11247 ;; Defined at:
 11248 ;;		line 436 in file "sm_ControlLearning_MC50.c"
 11249 ;; Parameters:    Size  Location     Type
 11250 ;;		None
 11251 ;; Auto vars:     Size  Location     Type
 11252 ;;		None
 11253 ;; Return value:  Size  Location     Type
 11254 ;;                  1    wreg      void 
 11255 ;; Registers used:
 11256 ;;		wreg, status,2
 11257 ;; Tracked objects:
 11258 ;;		On entry : 3F/1
 11259 ;;		On exit  : 3F/0
 11260 ;;		Unchanged: 0/0
 11261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11266 ;;Total ram usage:        0 bytes
 11267 ;; Hardware stack levels used: 1
 11268 ;; Hardware stack levels required when called: 4
 11269 ;; This function calls:
 11270 ;;		Nothing
 11271 ;; This function is called by:
 11272 ;;		_sm_execute_ControlLearning
 11273 ;; This function uses a non-reentrant model
 11274 ;;
 11275                           
 11276                           	psect	text22
 11277  00884E                     __ptext22:
 11278                           	callstack 0
 11279  00884E                     _clearLearningValue:
 11280                           	callstack 24
 11281                           
 11282                           ; BSR set to: 1
 11283                           ;sm_ControlLearning_MC50.c: 438:     learn_st.timeOpen=0;
 11284                           
 11285                           ;incstack = 0
 11286  00884E  0E00               	movlw	0
 11287  008850  0100               	movlb	0	; () banked
 11288  008852  6F64               	movwf	(_learn_st+4)& (0+255),b	;volatile
 11289  008854  0E00               	movlw	0
 11290  008856  6F65               	movwf	(_learn_st+5)& (0+255),b	;volatile
 11291  008858  0E00               	movlw	0
 11292  00885A  6F66               	movwf	(_learn_st+6)& (0+255),b	;volatile
 11293  00885C  0E00               	movlw	0
 11294  00885E  6F67               	movwf	(_learn_st+7)& (0+255),b	;volatile
 11295                           
 11296                           ;sm_ControlLearning_MC50.c: 439:     learn_st.timeClose=0;
 11297  008860  0E00               	movlw	0
 11298  008862  6F60               	movwf	_learn_st& (0+255),b	;volatile
 11299  008864  0E00               	movlw	0
 11300  008866  6F61               	movwf	(_learn_st+1)& (0+255),b	;volatile
 11301  008868  0E00               	movlw	0
 11302  00886A  6F62               	movwf	(_learn_st+2)& (0+255),b	;volatile
 11303  00886C  0E00               	movlw	0
 11304  00886E  6F63               	movwf	(_learn_st+3)& (0+255),b	;volatile
 11305                           
 11306                           ;sm_ControlLearning_MC50.c: 440:     learn_st.timeDecelerationOpen=0;
 11307  008870  0E00               	movlw	0
 11308  008872  6F69               	movwf	(_learn_st+9)& (0+255),b	;volatile
 11309                           
 11310                           ;sm_ControlLearning_MC50.c: 441:     learn_st.timeDecelerationClose=0;
 11311  008874  0E00               	movlw	0
 11312  008876  6F68               	movwf	(_learn_st+8)& (0+255),b	;volatile
 11313                           
 11314                           ;sm_ControlLearning_MC50.c: 442:     learn_st.openCurrent=0;
 11315  008878  0E00               	movlw	0
 11316  00887A  6F6B               	movwf	(_learn_st+11)& (0+255),b	;volatile
 11317  00887C  0E00               	movlw	0
 11318  00887E  6F6A               	movwf	(_learn_st+10)& (0+255),b	;volatile
 11319                           
 11320                           ;sm_ControlLearning_MC50.c: 443:     learn_st.closeCurrent=0;
 11321  008880  0E00               	movlw	0
 11322  008882  6F6D               	movwf	(_learn_st+13)& (0+255),b	;volatile
 11323  008884  0E00               	movlw	0
 11324  008886  6F6C               	movwf	(_learn_st+12)& (0+255),b	;volatile
 11325                           
 11326                           ;sm_ControlLearning_MC50.c: 444:     learn_st.openHistCurrent=0;
 11327  008888  0E00               	movlw	0
 11328  00888A  6F6F               	movwf	(_learn_st+15)& (0+255),b	;volatile
 11329  00888C  0E00               	movlw	0
 11330  00888E  6F6E               	movwf	(_learn_st+14)& (0+255),b	;volatile
 11331                           
 11332                           ;sm_ControlLearning_MC50.c: 445:     learn_st.closeHistCurrent=0;
 11333  008890  0E00               	movlw	0
 11334  008892  6F71               	movwf	(_learn_st+17)& (0+255),b	;volatile
 11335  008894  0E00               	movlw	0
 11336  008896  6F70               	movwf	(_learn_st+16)& (0+255),b	;volatile
 11337                           
 11338                           ;sm_ControlLearning_MC50.c: 446:     var_sys_NVM.learningCurrentNormalClose=0;
 11339  008898  0E00               	movlw	0
 11340  00889A  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 11341  00889C  0E00               	movlw	0
 11342  00889E  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 11343                           
 11344                           ;sm_ControlLearning_MC50.c: 447:     var_sys_NVM.learningCurrentNormalOpen=0;
 11345  0088A0  0E00               	movlw	0
 11346  0088A2  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 11347  0088A4  0E00               	movlw	0
 11348  0088A6  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 11349                           
 11350                           ;sm_ControlLearning_MC50.c: 448:     var_sys_NVM.learningCurrentDecelarationClose=0;
 11351  0088A8  0E00               	movlw	0
 11352  0088AA  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 11353  0088AC  0E00               	movlw	0
 11354  0088AE  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 11355  0088B0  0E00               	movlw	0
 11356  0088B2  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 11357  0088B4  0E00               	movlw	0
 11358  0088B6  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 11359                           
 11360                           ;sm_ControlLearning_MC50.c: 449:     var_sys_NVM.learningCurrentDecelarationOpen=0;
 11361  0088B8  0E00               	movlw	0
 11362  0088BA  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 11363  0088BC  0E00               	movlw	0
 11364  0088BE  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 11365  0088C0  0E00               	movlw	0
 11366  0088C2  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 11367  0088C4  0E00               	movlw	0
 11368  0088C6  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 11369                           
 11370                           ; BSR set to: 0
 11371  0088C8  0012               	return		;funcret
 11372  0088CA                     __end_of_clearLearningValue:
 11373                           	callstack 0
 11374                           
 11375 ;; *************** function _calculateMean *****************
 11376 ;; Defined at:
 11377 ;;		line 411 in file "sm_ControlLearning_MC50.c"
 11378 ;; Parameters:    Size  Location     Type
 11379 ;;  meanValue       4   15[COMRAM] unsigned long 
 11380 ;;  newValue        4   19[COMRAM] unsigned long 
 11381 ;; Auto vars:     Size  Location     Type
 11382 ;;		None
 11383 ;; Return value:  Size  Location     Type
 11384 ;;                  4   15[COMRAM] unsigned long 
 11385 ;; Registers used:
 11386 ;;		wreg, status,2, status,0
 11387 ;; Tracked objects:
 11388 ;;		On entry : 3E/1
 11389 ;;		On exit  : 3E/0
 11390 ;;		Unchanged: 3E/0
 11391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11392 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11394 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11395 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11396 ;;Total ram usage:       12 bytes
 11397 ;; Hardware stack levels used: 1
 11398 ;; Hardware stack levels required when called: 4
 11399 ;; This function calls:
 11400 ;;		Nothing
 11401 ;; This function is called by:
 11402 ;;		_sm_execute_ControlLearning
 11403 ;; This function uses a non-reentrant model
 11404 ;;
 11405                           
 11406                           	psect	text23
 11407  008EF8                     __ptext23:
 11408                           	callstack 0
 11409  008EF8                     _calculateMean:
 11410                           	callstack 24
 11411                           
 11412                           ;sm_ControlLearning_MC50.c: 411: unsigned long calculateMean(unsigned long meanValue,uns
      +                          igned long newValue);sm_ControlLearning_MC50.c: 412: {;sm_ControlLearning_MC50.c: 413:  
      +                             if(meanValue==0)
 11413                           
 11414                           ; BSR set to: 0
 11415                           ;incstack = 0
 11416  008EF8  5010               	movf	calculateMean@meanValue^0,w,c
 11417  008EFA  1011               	iorwf	(calculateMean@meanValue+1)^0,w,c
 11418  008EFC  1012               	iorwf	(calculateMean@meanValue+2)^0,w,c
 11419  008EFE  1013               	iorwf	(calculateMean@meanValue+3)^0,w,c
 11420  008F00  A4D8               	btfss	status,2,c
 11421  008F02  D009               	goto	l21965
 11422                           
 11423                           ;sm_ControlLearning_MC50.c: 414:     {;sm_ControlLearning_MC50.c: 415:         meanValue
      +                          =newValue;
 11424  008F04  C014  F010         	movff	calculateMean@newValue,calculateMean@meanValue
 11425  008F08  C015  F011         	movff	calculateMean@newValue+1,calculateMean@meanValue+1
 11426  008F0C  C016  F012         	movff	calculateMean@newValue+2,calculateMean@meanValue+2
 11427  008F10  C017  F013         	movff	calculateMean@newValue+3,calculateMean@meanValue+3
 11428                           
 11429                           ;sm_ControlLearning_MC50.c: 416:     }
 11430  008F14  D019               	goto	l21967
 11431  008F16                     l21965:
 11432                           
 11433                           ;sm_ControlLearning_MC50.c: 418:     {;sm_ControlLearning_MC50.c: 419:         meanValue
      +                          =(meanValue+newValue)/2;
 11434  008F16  5014               	movf	calculateMean@newValue^0,w,c
 11435  008F18  2410               	addwf	calculateMean@meanValue^0,w,c
 11436  008F1A  6E18               	movwf	??_calculateMean^0,c
 11437  008F1C  5015               	movf	(calculateMean@newValue+1)^0,w,c
 11438  008F1E  2011               	addwfc	(calculateMean@meanValue+1)^0,w,c
 11439  008F20  6E19               	movwf	(??_calculateMean+1)^0,c
 11440  008F22  5016               	movf	(calculateMean@newValue+2)^0,w,c
 11441  008F24  2012               	addwfc	(calculateMean@meanValue+2)^0,w,c
 11442  008F26  6E1A               	movwf	(??_calculateMean+2)^0,c
 11443  008F28  5017               	movf	(calculateMean@newValue+3)^0,w,c
 11444  008F2A  2013               	addwfc	(calculateMean@meanValue+3)^0,w,c
 11445  008F2C  6E1B               	movwf	(??_calculateMean+3)^0,c
 11446  008F2E  90D8               	bcf	status,0,c
 11447  008F30  321B               	rrcf	(??_calculateMean+3)^0,f,c
 11448  008F32  321A               	rrcf	(??_calculateMean+2)^0,f,c
 11449  008F34  3219               	rrcf	(??_calculateMean+1)^0,f,c
 11450  008F36  3218               	rrcf	??_calculateMean^0,f,c
 11451  008F38  C018  F010         	movff	??_calculateMean,calculateMean@meanValue
 11452  008F3C  C019  F011         	movff	??_calculateMean+1,calculateMean@meanValue+1
 11453  008F40  C01A  F012         	movff	??_calculateMean+2,calculateMean@meanValue+2
 11454  008F44  C01B  F013         	movff	??_calculateMean+3,calculateMean@meanValue+3
 11455  008F48                     l21967:
 11456                           
 11457                           ;sm_ControlLearning_MC50.c: 421:     return meanValue;
 11458  008F48  C010  F010         	movff	calculateMean@meanValue,?_calculateMean
 11459  008F4C  C011  F011         	movff	calculateMean@meanValue+1,?_calculateMean+1
 11460  008F50  C012  F012         	movff	calculateMean@meanValue+2,?_calculateMean+2
 11461  008F54  C013  F013         	movff	calculateMean@meanValue+3,?_calculateMean+3
 11462  008F58  0012               	return		;funcret
 11463  008F5A                     __end_of_calculateMean:
 11464                           	callstack 0
 11465                           
 11466 ;; *************** function _actionZone_Opening *****************
 11467 ;; Defined at:
 11468 ;;		line 374 in file "sm_ControlGate_MC50.c"
 11469 ;; Parameters:    Size  Location     Type
 11470 ;;		None
 11471 ;; Auto vars:     Size  Location     Type
 11472 ;;  typeOpenOrde    1   14[BANK0 ] enum E10372
 11473 ;;  securityOpen    1   13[BANK0 ] enum E10397
 11474 ;;  securityClos    1   12[BANK0 ] enum E10397
 11475 ;; Return value:  Size  Location     Type
 11476 ;;                  1    wreg      void 
 11477 ;; Registers used:
 11478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11479 ;; Tracked objects:
 11480 ;;		On entry : 3F/0
 11481 ;;		On exit  : 0/0
 11482 ;;		Unchanged: 0/0
 11483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11485 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11487 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11488 ;;Total ram usage:        3 bytes
 11489 ;; Hardware stack levels used: 1
 11490 ;; Hardware stack levels required when called: 8
 11491 ;; This function calls:
 11492 ;;		_CloseOrder
 11493 ;;		_GetOpenOrder
 11494 ;;		_GetSecurityStateInClosing
 11495 ;;		_GetSecurityStateInOpening
 11496 ;;		_InitFullAutoTime
 11497 ;;		_InitWalkAutoTime
 11498 ;;		_SetSegmentValueIntermitent
 11499 ;;		_StopOrder
 11500 ;;		_VerifyFollowMe
 11501 ;;		_controlVelocity
 11502 ;;		_setPositionInvertionInClosing
 11503 ;;		_setPositionInvertionInOpening
 11504 ;;		_sm_send_event
 11505 ;; This function is called by:
 11506 ;;		_sm_execute_ControlGate
 11507 ;; This function uses a non-reentrant model
 11508 ;;
 11509                           
 11510                           	psect	text24
 11511  005246                     __ptext24:
 11512                           	callstack 0
 11513  005246                     _actionZone_Opening:
 11514                           	callstack 21
 11515                           
 11516                           ; BSR set to: 0
 11517                           ;sm_ControlGate_MC50.c: 375:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 11518                           
 11519                           ;incstack = 0
 11520  005246  ECB9  F03F         	call	_GetSecurityStateInClosing	;wreg free
 11521  00524A  0100               	movlb	0	; () banked
 11522  00524C  6FE4               	movwf	actionZone_Opening@securityClosing& (0+255),b
 11523                           
 11524                           ;sm_ControlGate_MC50.c: 376:     StateEnum securityOpening = GetSecurityStateInOpening()
      +                          ;
 11525  00524E  EC0C  F040         	call	_GetSecurityStateInOpening	;wreg free
 11526  005252  0100               	movlb	0	; () banked
 11527  005254  6FE5               	movwf	actionZone_Opening@securityOpening& (0+255),b
 11528                           
 11529                           ; BSR set to: 0
 11530                           ;sm_ControlGate_MC50.c: 377:     TypeCMD typeOpenOrder = GetOpenOrder();
 11531  005256  EC72  F02F         	call	_GetOpenOrder	;wreg free
 11532  00525A  0100               	movlb	0	; () banked
 11533  00525C  6FE6               	movwf	actionZone_Opening@typeOpenOrder& (0+255),b
 11534                           
 11535                           ; BSR set to: 0
 11536                           ;sm_ControlGate_MC50.c: 380:     controlVelocity();
 11537  00525E  EC83  F02C         	call	_controlVelocity	;wreg free
 11538                           
 11539                           ;sm_ControlGate_MC50.c: 381:     InitFullAutoTime();
 11540  005262  ECE7  F04E         	call	_InitFullAutoTime	;wreg free
 11541                           
 11542                           ; BSR set to: 0
 11543                           ;sm_ControlGate_MC50.c: 383:     var_sys.passoAPassoAutoClose = NO;
 11544  005266  0E00               	movlw	0
 11545  005268  0101               	movlb	1	; () banked
 11546  00526A  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11547                           
 11548                           ; BSR set to: 1
 11549                           ;sm_ControlGate_MC50.c: 385:     VerifyFollowMe(securityClosing);
 11550  00526C  0100               	movlb	0	; () banked
 11551  00526E  51E4               	movf	actionZone_Opening@securityClosing& (0+255),w,b
 11552  005270  EC3F  F04E         	call	_VerifyFollowMe
 11553                           
 11554                           ;sm_ControlGate_MC50.c: 386:     if (var_sys.NumberOffErrors > 3) {
 11555  005274  0E03               	movlw	3
 11556  005276  0101               	movlb	1	; () banked
 11557  005278  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 11558  00527A  D00D               	goto	l23385
 11559                           
 11560                           ; BSR set to: 1
 11561                           ;sm_ControlGate_MC50.c: 388:         var_sys.StateMotor = Stopped;
 11562  00527C  0E00               	movlw	0
 11563  00527E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11564  005280                     l23383:
 11565                           
 11566                           ; BSR set to: 1
 11567                           ;sm_ControlGate_MC50.c: 389:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 11568  005280  0EE6               	movlw	low _controlGate_stateMachine
 11569  005282  6E12               	movwf	sm_send_event@psm^0,c
 11570  005284  0E01               	movlw	high _controlGate_stateMachine
 11571  005286  6E13               	movwf	(sm_send_event@psm+1)^0,c
 11572  005288  0E00               	movlw	0
 11573  00528A  6E15               	movwf	(sm_send_event@event+1)^0,c
 11574  00528C  0E10               	movlw	16
 11575  00528E  6E14               	movwf	sm_send_event@event^0,c
 11576  005290  ECDC  F047         	call	_sm_send_event	;wreg free
 11577                           
 11578                           ;sm_ControlGate_MC50.c: 390:     } else if (var_sys.StateMotor == InOpenWalk && ts_syste
      +                          m.timeOpenWalk <= 0)
 11579  005294  0012               	return	
 11580  005296                     l23385:
 11581                           
 11582                           ; BSR set to: 1
 11583  005296  0E02               	movlw	2
 11584  005298  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 11585  00529A  A4D8               	btfss	status,2,c
 11586  00529C  D013               	goto	l23399
 11587                           
 11588                           ; BSR set to: 1
 11589  00529E  BFAF               	btfsc	(_ts_system+17)& (0+255),7,b	;volatile
 11590  0052A0  D005               	goto	u27250
 11591  0052A2  51AF               	movf	(_ts_system+17)& (0+255),w,b	;volatile
 11592  0052A4  E10F               	bnz	l23399
 11593  0052A6  05AE               	decf	(_ts_system+16)& (0+255),w,b	;volatile
 11594  0052A8  B0D8               	btfsc	status,0,c
 11595  0052AA  D00C               	goto	l23399
 11596  0052AC                     u27250:
 11597                           
 11598                           ; BSR set to: 1
 11599                           ;sm_ControlGate_MC50.c: 391:     {;sm_ControlGate_MC50.c: 396:         setPositionInvert
      +                          ionInOpening();
 11600  0052AC  EC18  F03D         	call	_setPositionInvertionInOpening	;wreg free
 11601                           
 11602                           ; BSR set to: 1
 11603                           ;sm_ControlGate_MC50.c: 397:         StopOrder();
 11604  0052B0  EC95  F04E         	call	_StopOrder	;wreg free
 11605                           
 11606                           ;sm_ControlGate_MC50.c: 398:         InitWalkAutoTime();
 11607  0052B4  EC6C  F04F         	call	_InitWalkAutoTime	;wreg free
 11608                           
 11609                           ; BSR set to: 0
 11610                           ;sm_ControlGate_MC50.c: 399:         var_sys.passoAPassoAutoClose = YES;
 11611  0052B8  0E01               	movlw	1
 11612  0052BA  0101               	movlb	1	; () banked
 11613  0052BC  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11614                           
 11615                           ; BSR set to: 1
 11616                           ;sm_ControlGate_MC50.c: 400:         Abertura_pedonal = 1;
 11617  0052BE  0E01               	movlw	1
 11618  0052C0  6F91               	movwf	_Abertura_pedonal& (0+255),b
 11619                           
 11620                           ;sm_ControlGate_MC50.c: 402:     } else if ((var_sys.FimCurso_OpenIsEnabled == YES)||(va
      +                          r_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost
      +                          ==NO) && (var_sys.Statedoorcontrol == st_Opening))
 11621  0052C2  0012               	return	
 11622  0052C4                     l23399:
 11623                           
 11624                           ; BSR set to: 1
 11625  0052C4  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 11626  0052C6  B4D8               	btfsc	status,2,c
 11627  0052C8  D010               	goto	u27300
 11628                           
 11629                           ; BSR set to: 1
 11630  0052CA  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 11631  0052CC  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 11632  0052CE  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 11633  0052D0  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 11634  0052D2  A4D8               	btfss	status,2,c
 11635  0052D4  D02F               	goto	l23419
 11636                           
 11637                           ; BSR set to: 1
 11638  0052D6  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 11639  0052D8  A4D8               	btfss	status,2,c
 11640  0052DA  D02C               	goto	l23419
 11641                           
 11642                           ; BSR set to: 1
 11643  0052DC  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 11644  0052DE  A4D8               	btfss	status,2,c
 11645  0052E0  D029               	goto	l23419
 11646                           
 11647                           ; BSR set to: 1
 11648  0052E2  0E02               	movlw	2
 11649  0052E4  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 11650  0052E6  A4D8               	btfss	status,2,c
 11651  0052E8  D025               	goto	l23419
 11652  0052EA                     u27300:
 11653                           
 11654                           ; BSR set to: 1
 11655                           ;sm_ControlGate_MC50.c: 403:     {;sm_ControlGate_MC50.c: 408:         var_sys.Statedoor
      +                          control = st_Opened;
 11656  0052EA  0E04               	movlw	4
 11657  0052EC  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 11658                           
 11659                           ; BSR set to: 1
 11660                           ;sm_ControlGate_MC50.c: 409:         var_sys.PositionActual = var_sys_NVM.learningTimeTo
      +                          Close;
 11661  0052EE  C0D0  F11E         	movff	_var_sys_NVM+56,_var_sys+30	;volatile
 11662  0052F2  C0D1  F11F         	movff	_var_sys_NVM+57,_var_sys+31	;volatile
 11663  0052F6  C0D2  F120         	movff	_var_sys_NVM+58,_var_sys+32	;volatile
 11664  0052FA  C0D3  F121         	movff	_var_sys_NVM+59,_var_sys+33	;volatile
 11665                           
 11666                           ;sm_ControlGate_MC50.c: 410:         var_sys.AutoInversionActiveStop = NO;
 11667  0052FE  0E00               	movlw	0
 11668  005300  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 11669                           
 11670                           ;sm_ControlGate_MC50.c: 411:         var_sys.PositionIsLost = NO;
 11671  005302  0E00               	movlw	0
 11672  005304  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 11673                           
 11674                           ;sm_ControlGate_MC50.c: 412:         var_sys.DigitSinalizedTemp = 1;
 11675  005306  0E01               	movlw	1
 11676  005308  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 11677                           
 11678                           ;sm_ControlGate_MC50.c: 413:         var_sys.NumberOffErrors = 0;
 11679  00530A  0E00               	movlw	0
 11680  00530C  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 11681                           
 11682                           ;sm_ControlGate_MC50.c: 414:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 11683  00530E  0E00               	movlw	0
 11684  005310  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 11685  005312  0E28               	movlw	40
 11686  005314  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 11687                           
 11688                           ; BSR set to: 1
 11689                           ;sm_ControlGate_MC50.c: 415:         SetSegmentValueIntermitent(dF, d0, ( 200/50));
 11690  005316  0E00               	movlw	0
 11691  005318  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 11692  00531A  0E00               	movlw	0
 11693  00531C  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 11694  00531E  0E04               	movlw	4
 11695  005320  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 11696  005322  0E0F               	movlw	15
 11697  005324  EC9A  F04C         	call	_SetSegmentValueIntermitent
 11698                           
 11699                           ; BSR set to: 1
 11700                           ;sm_ControlGate_MC50.c: 416:         StopOrder();
 11701  005328  EC95  F04E         	call	_StopOrder	;wreg free
 11702                           
 11703                           ;sm_ControlGate_MC50.c: 417:         var_sys.passoAPassoAutoClose = YES;
 11704  00532C  0E01               	movlw	1
 11705  00532E  0101               	movlb	1	; () banked
 11706  005330  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11707                           
 11708                           ;sm_ControlGate_MC50.c: 419:     }
 11709  005332  0012               	return	
 11710  005334                     l23419:
 11711                           
 11712                           ; BSR set to: 1
 11713  005334  0100               	movlb	0	; () banked
 11714  005336  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11715  005338  B4D8               	btfsc	status,2,c
 11716  00533A  D012               	goto	u27340
 11717                           
 11718                           ; BSR set to: 0
 11719  00533C  0101               	movlb	1	; () banked
 11720  00533E  BFC9               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11721  005340  D025               	goto	l23439
 11722  005342  51C9               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11723  005344  E103               	bnz	u27320
 11724  005346  05C8               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11725  005348  A0D8               	btfss	status,0,c
 11726  00534A  D020               	goto	l23439
 11727  00534C                     u27320:
 11728                           
 11729                           ; BSR set to: 1
 11730  00534C  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 11731  00534E  A4D8               	btfss	status,2,c
 11732  005350  D01D               	goto	l23439
 11733                           
 11734                           ; BSR set to: 1
 11735  005352  BFCF               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 11736  005354  D005               	goto	u27340
 11737  005356  51CF               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 11738  005358  E119               	bnz	l23439
 11739  00535A  05CE               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 11740  00535C  B0D8               	btfsc	status,0,c
 11741  00535E  D016               	goto	l23439
 11742  005360                     u27340:
 11743  005360  0101               	movlb	1	; () banked
 11744  005362  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 11745  005364  A4D8               	btfss	status,2,c
 11746  005366  D012               	goto	l23439
 11747                           
 11748                           ; BSR set to: 1
 11749                           ;sm_ControlGate_MC50.c: 422:         if (securityOpening != YES){
 11750  005368  0100               	movlb	0	; () banked
 11751  00536A  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11752  00536C  B4D8               	btfsc	status,2,c
 11753  00536E  D002               	goto	l23433
 11754                           
 11755                           ; BSR set to: 0
 11756                           ;sm_ControlGate_MC50.c: 423:              var_sys.NumberOffErrors++;
 11757  005370  0101               	movlb	1	; () banked
 11758  005372  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 11759  005374                     l23433:
 11760                           
 11761                           ;sm_ControlGate_MC50.c: 426:         var_sys.AutoInversionActive = YES;
 11762  005374  0E01               	movlw	1
 11763  005376  0101               	movlb	1	; () banked
 11764  005378  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11765                           
 11766                           ; BSR set to: 1
 11767                           ;sm_ControlGate_MC50.c: 427:         ts_system.TimeWaitToNextState = ( 500/50);
 11768  00537A  0E00               	movlw	0
 11769  00537C  6FC3               	movwf	(_ts_system+37)& (0+255),b	;volatile
 11770  00537E  0E0A               	movlw	10
 11771  005380  6FC2               	movwf	(_ts_system+36)& (0+255),b	;volatile
 11772                           
 11773                           ; BSR set to: 1
 11774                           ;sm_ControlGate_MC50.c: 428:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 11775  005382  0E00               	movlw	0
 11776  005384  6FDF               	movwf	(_ts_system+65)& (0+255),b	;volatile
 11777  005386  0E1E               	movlw	30
 11778  005388  6FDE               	movwf	(_ts_system+64)& (0+255),b	;volatile
 11779                           
 11780                           ;sm_ControlGate_MC50.c: 430:     }
 11781  00538A  0012               	return	
 11782  00538C                     l23439:
 11783                           
 11784                           ; BSR set to: 1
 11785  00538C  BFC9               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11786  00538E  D02D               	goto	l23469
 11787  005390  51C9               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11788  005392  E103               	bnz	u27370
 11789  005394  05C8               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11790  005396  A0D8               	btfss	status,0,c
 11791  005398  D028               	goto	l23469
 11792  00539A                     u27370:
 11793                           
 11794                           ; BSR set to: 1
 11795  00539A  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11796  00539C  A4D8               	btfss	status,2,c
 11797  00539E  D025               	goto	l23469
 11798                           
 11799                           ; BSR set to: 1
 11800                           ;sm_ControlGate_MC50.c: 432:         if (var_sys.InvertionCurrentClosing == YES) {
 11801  0053A0  0544               	decf	(_var_sys+68)& (0+255),w,b	;volatile
 11802  0053A2  A4D8               	btfss	status,2,c
 11803  0053A4  D005               	goto	l23451
 11804                           
 11805                           ; BSR set to: 1
 11806                           ;sm_ControlGate_MC50.c: 434:             var_sys.StateMotor = Stopped;
 11807  0053A6  0E00               	movlw	0
 11808  0053A8  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11809                           
 11810                           ; BSR set to: 1
 11811                           ;sm_ControlGate_MC50.c: 435:             setPositionInvertionInClosing();
 11812  0053AA  EC71  F038         	call	_setPositionInvertionInClosing	;wreg free
 11813  0053AE  D768               	goto	l23383
 11814  0053B0                     l23451:
 11815                           
 11816                           ; BSR set to: 1
 11817  0053B0  BFC3               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11818  0053B2  D005               	goto	u27400
 11819  0053B4  51C3               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11820  0053B6  E116               	bnz	l23467
 11821  0053B8  05C2               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11822  0053BA  B0D8               	btfsc	status,0,c
 11823  0053BC  D013               	goto	l23467
 11824  0053BE                     u27400:
 11825                           
 11826                           ; BSR set to: 1
 11827                           ;sm_ControlGate_MC50.c: 438:             CloseOrder();
 11828  0053BE  ECE0  F04D         	call	_CloseOrder	;wreg free
 11829                           
 11830                           ;sm_ControlGate_MC50.c: 440:             setPositionInvertionInOpening();
 11831  0053C2  EC18  F03D         	call	_setPositionInvertionInOpening	;wreg free
 11832                           
 11833                           ; BSR set to: 1
 11834                           ;sm_ControlGate_MC50.c: 441:             var_sys.AutoInversionActive = NO;
 11835  0053C6  0E00               	movlw	0
 11836  0053C8  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11837                           
 11838                           ; BSR set to: 1
 11839                           ;sm_ControlGate_MC50.c: 442:             var_sys.InvertionCurrentOpening = YES;
 11840  0053CA  0E01               	movlw	1
 11841  0053CC  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 11842                           
 11843                           ; BSR set to: 1
 11844                           ;sm_ControlGate_MC50.c: 443:             ts_system.TimeInversionStart = (1000/50);
 11845  0053CE  0E00               	movlw	0
 11846  0053D0  6FCF               	movwf	(_ts_system+49)& (0+255),b	;volatile
 11847  0053D2  0E14               	movlw	20
 11848  0053D4  6FCE               	movwf	(_ts_system+48)& (0+255),b	;volatile
 11849                           
 11850                           ; BSR set to: 1
 11851                           ;sm_ControlGate_MC50.c: 444:             ts_system.InvertionTimeClosingFromOpen = (1000/
      +                          50) * 2;
 11852  0053D6  0E00               	movlw	0
 11853  0053D8  6FD1               	movwf	(_ts_system+51)& (0+255),b	;volatile
 11854  0053DA  0E28               	movlw	40
 11855  0053DC  6FD0               	movwf	(_ts_system+50)& (0+255),b	;volatile
 11856                           
 11857                           ; BSR set to: 1
 11858                           ;sm_ControlGate_MC50.c: 445:             var_sys.InvertionClosingFromOpen = YES;
 11859  0053DE  0E01               	movlw	1
 11860  0053E0  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 11861                           
 11862                           ;sm_ControlGate_MC50.c: 449:         } else
 11863  0053E2  0012               	return	
 11864  0053E4                     l23467:
 11865                           
 11866                           ; BSR set to: 1
 11867                           ;sm_ControlGate_MC50.c: 450:         {;sm_ControlGate_MC50.c: 451:             var_sys.S
      +                          tateMotor = Stopped;
 11868  0053E4  0E00               	movlw	0
 11869  0053E6  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11870  0053E8  0012               	return	
 11871  0053EA                     l23469:
 11872                           
 11873                           ; BSR set to: 1
 11874  0053EA  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11875  0053EC  A4D8               	btfss	status,2,c
 11876  0053EE  D00A               	goto	l23489
 11877                           
 11878                           ; BSR set to: 1
 11879                           ;sm_ControlGate_MC50.c: 457:                 var_sys.StateMotor = Stopped;
 11880  0053F0  0E00               	movlw	0
 11881  0053F2  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11882                           
 11883                           ; BSR set to: 1
 11884                           ;sm_ControlGate_MC50.c: 460:         if (ts_system.TimeWaitToNextState <= 0) {
 11885  0053F4  BFC3               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11886  0053F6  D7E3               	goto	u27400
 11887  0053F8  51C3               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11888  0053FA  E14E               	bnz	l2723
 11889  0053FC  05C2               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11890  0053FE  B0D8               	btfsc	status,0,c
 11891  005400  0012               	return	
 11892  005402  D7DD               	goto	u27400
 11893  005404                     l23489:
 11894                           
 11895                           ; BSR set to: 1
 11896  005404  5100               	movf	_var_sys& (0+255),w,b	;volatile
 11897  005406  A4D8               	btfss	status,2,c
 11898  005408  D018               	goto	l23507
 11899                           
 11900                           ; BSR set to: 1
 11901  00540A  BFC3               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11902  00540C  D005               	goto	u27440
 11903  00540E  51C3               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11904  005410  E114               	bnz	l23507
 11905  005412  05C2               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11906  005414  B0D8               	btfsc	status,0,c
 11907  005416  D011               	goto	l23507
 11908  005418                     u27440:
 11909                           
 11910                           ; BSR set to: 1
 11911                           ;sm_ControlGate_MC50.c: 479:       if(securityOpening != ST){
 11912  005418  0E02               	movlw	2
 11913  00541A  0100               	movlb	0	; () banked
 11914  00541C  19E5               	xorwf	actionZone_Opening@securityOpening& (0+255),w,b
 11915  00541E  B4D8               	btfsc	status,2,c
 11916  005420  D007               	goto	l23503
 11917                           
 11918                           ; BSR set to: 0
 11919                           ;sm_ControlGate_MC50.c: 480:         var_sys.NumberOffErrors++;
 11920  005422  0101               	movlb	1	; () banked
 11921  005424  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 11922                           
 11923                           ; BSR set to: 1
 11924                           ;sm_ControlGate_MC50.c: 482:         var_sys.StateMotor = Stopped;
 11925  005426  0E00               	movlw	0
 11926  005428  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11927                           
 11928                           ; BSR set to: 1
 11929                           ;sm_ControlGate_MC50.c: 483:         setPositionInvertionInOpening();
 11930  00542A  EC18  F03D         	call	_setPositionInvertionInOpening	;wreg free
 11931  00542E  D728               	goto	l23383
 11932  005430                     l23503:
 11933                           
 11934                           ; BSR set to: 0
 11935                           ;sm_ControlGate_MC50.c: 486:           setPositionInvertionInOpening();
 11936  005430  EC18  F03D         	call	_setPositionInvertionInOpening	;wreg free
 11937  005434                     l23505:
 11938                           
 11939                           ;sm_ControlGate_MC50.c: 487:           StopOrder();
 11940  005434  EC95  F04E         	call	_StopOrder	;wreg free
 11941  005438  0012               	return	
 11942  00543A                     l23507:
 11943                           
 11944                           ; BSR set to: 1
 11945  00543A  0100               	movlb	0	; () banked
 11946  00543C  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 11947  00543E  A4D8               	btfss	status,2,c
 11948  005440  D005               	goto	l23513
 11949                           
 11950                           ; BSR set to: 0
 11951                           ;sm_ControlGate_MC50.c: 492:         if (typeOpenOrder != TypeFullOpen) {
 11952  005442  0E03               	movlw	3
 11953  005444  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11954  005446  B4D8               	btfsc	status,2,c
 11955  005448  0012               	return	
 11956  00544A  D7F4               	goto	l23505
 11957  00544C                     l23513:
 11958                           
 11959                           ; BSR set to: 0
 11960  00544C  0E02               	movlw	2
 11961  00544E  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11962  005450  A4D8               	btfss	status,2,c
 11963  005452  D011               	goto	l23525
 11964                           
 11965                           ; BSR set to: 0
 11966  005454  0E02               	movlw	2
 11967  005456  0101               	movlb	1	; () banked
 11968  005458  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 11969  00545A  A4D8               	btfss	status,2,c
 11970  00545C  D00C               	goto	l23525
 11971                           
 11972                           ; BSR set to: 1
 11973  00545E  0E02               	movlw	2
 11974  005460  0100               	movlb	0	; () banked
 11975  005462  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 11976  005464  B4D8               	btfsc	status,2,c
 11977  005466  D007               	goto	l23525
 11978                           
 11979                           ; BSR set to: 0
 11980                           ;sm_ControlGate_MC50.c: 502:         setPositionInvertionInOpening();
 11981  005468  EC18  F03D         	call	_setPositionInvertionInOpening	;wreg free
 11982                           
 11983                           ; BSR set to: 1
 11984                           ;sm_ControlGate_MC50.c: 503:         StopOrder();
 11985  00546C  EC95  F04E         	call	_StopOrder	;wreg free
 11986                           
 11987                           ;sm_ControlGate_MC50.c: 504:         InitWalkAutoTime();
 11988  005470  EC6C  F04F         	call	_InitWalkAutoTime	;wreg free
 11989                           
 11990                           ;sm_ControlGate_MC50.c: 505:     } else if ((typeOpenOrder == TypeFull || typeOpenOrder 
      +                          == TypeFullOpen || typeOpenOrder == TypeFullClose) && var_sys_NVM.operationMode != ModoC
      +                          ondominio) {
 11991  005474  0012               	return	
 11992  005476                     l23525:
 11993  005476  0100               	movlb	0	; () banked
 11994  005478  05E6               	decf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11995  00547A  B4D8               	btfsc	status,2,c
 11996  00547C  D008               	goto	u27530
 11997                           
 11998                           ; BSR set to: 0
 11999  00547E  0E03               	movlw	3
 12000  005480  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12001  005482  B4D8               	btfsc	status,2,c
 12002  005484  D004               	goto	u27530
 12003                           
 12004                           ; BSR set to: 0
 12005  005486  0E04               	movlw	4
 12006  005488  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12007  00548A  A4D8               	btfss	status,2,c
 12008  00548C  0012               	return	
 12009  00548E                     u27530:
 12010                           
 12011                           ; BSR set to: 0
 12012  00548E  0E02               	movlw	2
 12013  005490  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 12014  005492  B4D8               	btfsc	status,2,c
 12015  005494  0012               	return	
 12016  005496  D7CC               	goto	l23503
 12017  005498                     l2723:
 12018  005498  0012               	return		;funcret
 12019  00549A                     __end_of_actionZone_Opening:
 12020                           	callstack 0
 12021                           
 12022 ;; *************** function _setPositionInvertionInOpening *****************
 12023 ;; Defined at:
 12024 ;;		line 894 in file "sm_ControlGate_MC50.c"
 12025 ;; Parameters:    Size  Location     Type
 12026 ;;		None
 12027 ;; Auto vars:     Size  Location     Type
 12028 ;;		None
 12029 ;; Return value:  Size  Location     Type
 12030 ;;                  1    wreg      void 
 12031 ;; Registers used:
 12032 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12033 ;; Tracked objects:
 12034 ;;		On entry : 3E/1
 12035 ;;		On exit  : 3F/1
 12036 ;;		Unchanged: 0/0
 12037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12040 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12041 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12042 ;;Total ram usage:        8 bytes
 12043 ;; Hardware stack levels used: 1
 12044 ;; Hardware stack levels required when called: 6
 12045 ;; This function calls:
 12046 ;;		_getTimeDecelaration
 12047 ;; This function is called by:
 12048 ;;		_actionZone_Opening
 12049 ;; This function uses a non-reentrant model
 12050 ;;
 12051                           
 12052                           	psect	text25
 12053  007A30                     __ptext25:
 12054                           	callstack 0
 12055  007A30                     _setPositionInvertionInOpening:
 12056                           	callstack 22
 12057                           
 12058                           ;sm_ControlGate_MC50.c: 896:     if(var_sys_NVM.TypeofMotor != 2){
 12059                           
 12060                           ;incstack = 0
 12061  007A30  0E02               	movlw	2
 12062  007A32  0100               	movlb	0	; () banked
 12063  007A34  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 12064  007A36  B4D8               	btfsc	status,2,c
 12065  007A38  D009               	goto	l21917
 12066                           
 12067                           ; BSR set to: 0
 12068                           ;sm_ControlGate_MC50.c: 897:        var_sys.PositionActual -= ( 100/50);
 12069  007A3A  0EFE               	movlw	254
 12070  007A3C  0101               	movlb	1	; () banked
 12071  007A3E  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12072  007A40  0EFF               	movlw	255
 12073  007A42  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12074  007A44  0EFF               	movlw	255
 12075  007A46  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12076  007A48  0EFF               	movlw	255
 12077  007A4A  D006               	goto	L69
 12078  007A4C                     l21917:
 12079                           
 12080                           ; BSR set to: 0
 12081                           ;sm_ControlGate_MC50.c: 901:          var_sys.PositionActual += ( 50/50);
 12082  007A4C  0E01               	movlw	1
 12083  007A4E  0101               	movlb	1	; () banked
 12084  007A50  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12085  007A52  0E00               	movlw	0
 12086  007A54  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12087  007A56  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12088  007A58                     L69:
 12089  007A58  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 12090                           
 12091                           ; BSR set to: 1
 12092                           ;sm_ControlGate_MC50.c: 906:     if (var_sys.PositionActual < getTimeDecelaration(InClos
      +                          e)) {
 12093  007A5A  0E03               	movlw	3
 12094  007A5C  ECA4  F03C         	call	_getTimeDecelaration
 12095  007A60  5029               	movf	?_getTimeDecelaration^0,w,c
 12096  007A62  0101               	movlb	1	; () banked
 12097  007A64  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12098  007A66  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12099  007A68  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12100  007A6A  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12101  007A6C  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12102  007A6E  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12103  007A70  0A80               	xorlw	128
 12104  007A72  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12105  007A74  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12106  007A76  0A80               	xorlw	128
 12107  007A78  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12108  007A7A  B0D8               	btfsc	status,0,c
 12109  007A7C  D004               	goto	l21923
 12110                           
 12111                           ; BSR set to: 1
 12112                           ;sm_ControlGate_MC50.c: 907:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 12113  007A7E  0E03               	movlw	3
 12114  007A80  ECA4  F03C         	call	_getTimeDecelaration
 12115  007A84  D015               	goto	L70
 12116  007A86                     l21923:
 12117                           
 12118                           ; BSR set to: 1
 12119  007A86  0E01               	movlw	1
 12120  007A88  ECA4  F03C         	call	_getTimeDecelaration
 12121  007A8C  0101               	movlb	1	; () banked
 12122  007A8E  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12123  007A90  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12124  007A92  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12125  007A94  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12126  007A96  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12127  007A98  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12128  007A9A  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12129  007A9C  0A80               	xorlw	128
 12130  007A9E  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12131  007AA0  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12132  007AA2  0A80               	xorlw	128
 12133  007AA4  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12134  007AA6  B0D8               	btfsc	status,0,c
 12135  007AA8  D00B               	goto	l21927
 12136                           
 12137                           ; BSR set to: 1
 12138                           ;sm_ControlGate_MC50.c: 909:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 12139  007AAA  0E01               	movlw	1
 12140  007AAC  ECA4  F03C         	call	_getTimeDecelaration
 12141  007AB0                     L70:
 12142  007AB0  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 12143  007AB4  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 12144  007AB8  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 12145  007ABC  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 12146  007AC0                     l21927:
 12147                           
 12148                           ;sm_ControlGate_MC50.c: 911:     var_sys.TimeMaxMotorIsON = var_sys.PositionActual + var
      +                          _sys_NVM.decelarationClose*( 500/50) + (1000/50)*10;
 12149  007AC0  0100               	movlb	0	; () banked
 12150  007AC2  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12151  007AC4  0D0A               	mullw	10
 12152  007AC6  CFF3 F032          	movff	prodl,??_setPositionInvertionInOpening
 12153  007ACA  CFF4 F033          	movff	prodh,??_setPositionInvertionInOpening+1
 12154  007ACE  0E00               	movlw	0
 12155  007AD0  BE33               	btfsc	(??_setPositionInvertionInOpening+1)^0,7,c
 12156  007AD2  0EFF               	movlw	255
 12157  007AD4  6E34               	movwf	(??_setPositionInvertionInOpening+2)^0,c
 12158  007AD6  6E35               	movwf	(??_setPositionInvertionInOpening+3)^0,c
 12159  007AD8  0101               	movlb	1	; () banked
 12160  007ADA  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12161  007ADC  2432               	addwf	??_setPositionInvertionInOpening^0,w,c
 12162  007ADE  6E36               	movwf	(??_setPositionInvertionInOpening+4)^0,c
 12163  007AE0  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12164  007AE2  2033               	addwfc	(??_setPositionInvertionInOpening+1)^0,w,c
 12165  007AE4  6E37               	movwf	(??_setPositionInvertionInOpening+5)^0,c
 12166  007AE6  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12167  007AE8  2034               	addwfc	(??_setPositionInvertionInOpening+2)^0,w,c
 12168  007AEA  6E38               	movwf	(??_setPositionInvertionInOpening+6)^0,c
 12169  007AEC  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12170  007AEE  2035               	addwfc	(??_setPositionInvertionInOpening+3)^0,w,c
 12171  007AF0  6E39               	movwf	(??_setPositionInvertionInOpening+7)^0,c
 12172  007AF2  0EC8               	movlw	200
 12173  007AF4  2436               	addwf	(??_setPositionInvertionInOpening+4)^0,w,c
 12174  007AF6  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 12175  007AF8  0E00               	movlw	0
 12176  007AFA  2037               	addwfc	(??_setPositionInvertionInOpening+5)^0,w,c
 12177  007AFC  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 12178  007AFE  0E00               	movlw	0
 12179  007B00  2038               	addwfc	(??_setPositionInvertionInOpening+6)^0,w,c
 12180  007B02  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 12181  007B04  0E00               	movlw	0
 12182  007B06  2039               	addwfc	(??_setPositionInvertionInOpening+7)^0,w,c
 12183  007B08  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 12184                           
 12185                           ; BSR set to: 1
 12186  007B0A  0012               	return		;funcret
 12187  007B0C                     __end_of_setPositionInvertionInOpening:
 12188                           	callstack 0
 12189                           
 12190 ;; *************** function _controlVelocity *****************
 12191 ;; Defined at:
 12192 ;;		line 527 in file "outputs_MC50.c"
 12193 ;; Parameters:    Size  Location     Type
 12194 ;;		None
 12195 ;; Auto vars:     Size  Location     Type
 12196 ;;		None
 12197 ;; Return value:  Size  Location     Type
 12198 ;;                  1    wreg      void 
 12199 ;; Registers used:
 12200 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12201 ;; Tracked objects:
 12202 ;;		On entry : 3E/1
 12203 ;;		On exit  : 3E/0
 12204 ;;		Unchanged: 0/0
 12205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12208 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12209 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12210 ;;Total ram usage:        1 bytes
 12211 ;; Hardware stack levels used: 1
 12212 ;; Hardware stack levels required when called: 7
 12213 ;; This function calls:
 12214 ;;		_ControlDecelarationFactor
 12215 ;;		_InitSoftStop
 12216 ;;		_getStateOpenPosition
 12217 ;;		_getTimeDecelaration
 12218 ;; This function is called by:
 12219 ;;		_main
 12220 ;;		_actionZone_Opening
 12221 ;; This function uses a non-reentrant model
 12222 ;;
 12223                           
 12224                           	psect	text26
 12225  005906                     __ptext26:
 12226                           	callstack 0
 12227  005906                     _controlVelocity:
 12228                           	callstack 21
 12229                           
 12230                           ;outputs_MC50.c: 531:     if(var_sys.LearningIsEnabled==YES && var_sys.LearningDecelarat
      +                          ion==YES)
 12231                           
 12232                           ; BSR set to: 1
 12233                           ;incstack = 0
 12234  005906  0101               	movlb	1	; () banked
 12235  005908  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12236  00590A  A4D8               	btfss	status,2,c
 12237  00590C  D017               	goto	l21725
 12238                           
 12239                           ; BSR set to: 1
 12240  00590E  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 12241  005910  A4D8               	btfss	status,2,c
 12242  005912  D014               	goto	l21725
 12243                           
 12244                           ; BSR set to: 1
 12245                           ;outputs_MC50.c: 532:     {;outputs_MC50.c: 533:         if(powerControl_st.decelaration
      +                          Active==NO)
 12246  005914  517B               	movf	_powerControl_st& (0+255),w,b
 12247  005916  A4D8               	btfss	status,2,c
 12248  005918  D008               	goto	l21719
 12249                           
 12250                           ; BSR set to: 1
 12251                           ;outputs_MC50.c: 534:         {;outputs_MC50.c: 535:             ts_system.TimeStopedBef
      +                          oreDecelaration=( 500/50);
 12252  00591A  0E00               	movlw	0
 12253  00591C  6FCB               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12254  00591E  0E0A               	movlw	10
 12255  005920  6FCA               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12256                           
 12257                           ;outputs_MC50.c: 536:             ts_system.TimeCurrentWaitForAlarm=(1000/50);
 12258  005922  0E00               	movlw	0
 12259  005924  6FCD               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12260  005926  0E14               	movlw	20
 12261  005928  6FCC               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12262  00592A                     l21719:
 12263                           
 12264                           ; BSR set to: 1
 12265                           ;outputs_MC50.c: 538:         ControlDecelarationFactor();
 12266  00592A  EC0E  F04F         	call	_ControlDecelarationFactor	;wreg free
 12267                           
 12268                           ; BSR set to: 1
 12269                           ;outputs_MC50.c: 539:         powerControl_st.decelarationActive=YES;
 12270  00592E  0E01               	movlw	1
 12271  005930  6F7B               	movwf	_powerControl_st& (0+255),b
 12272                           
 12273                           ; BSR set to: 1
 12274                           ;outputs_MC50.c: 540:         var_sys.velocityFactor=0;
 12275  005932  0E00               	movlw	0
 12276  005934  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12277  005936  0E00               	movlw	0
 12278  005938  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12279                           
 12280                           ;outputs_MC50.c: 541:     }
 12281  00593A  0012               	return	
 12282  00593C                     l21725:
 12283                           
 12284                           ; BSR set to: 1
 12285  00593C  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12286  00593E  B4D8               	btfsc	status,2,c
 12287  005940  D003               	goto	u25150
 12288                           
 12289                           ; BSR set to: 1
 12290  005942  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
 12291  005944  A4D8               	btfss	status,2,c
 12292  005946  D007               	goto	l21731
 12293  005948                     u25150:
 12294                           
 12295                           ; BSR set to: 1
 12296                           ;outputs_MC50.c: 544:     {;outputs_MC50.c: 545:         var_sys.velocityFactor=0;
 12297  005948  0E00               	movlw	0
 12298  00594A  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12299  00594C  0E00               	movlw	0
 12300  00594E  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12301                           
 12302                           ;outputs_MC50.c: 546:         powerControl_st.decelarationActive=NO;
 12303  005950  0E00               	movlw	0
 12304  005952  6F7B               	movwf	_powerControl_st& (0+255),b
 12305                           
 12306                           ;outputs_MC50.c: 547:     }
 12307  005954  0012               	return	
 12308  005956                     l21731:
 12309                           
 12310                           ; BSR set to: 1
 12311  005956  0E03               	movlw	3
 12312  005958  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 12313  00595A  A4D8               	btfss	status,2,c
 12314  00595C  D068               	goto	l21779
 12315                           
 12316                           ; BSR set to: 1
 12317  00595E  0E03               	movlw	3
 12318  005960  ECA4  F03C         	call	_getTimeDecelaration
 12319  005964  5029               	movf	?_getTimeDecelaration^0,w,c
 12320  005966  0101               	movlb	1	; () banked
 12321  005968  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12322  00596A  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12323  00596C  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12324  00596E  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12325  005970  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12326  005972  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12327  005974  0A80               	xorlw	128
 12328  005976  0100               	movlb	0	; () banked
 12329  005978  6FDA               	movwf	??_controlVelocity& (0+255),b
 12330  00597A  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12331  00597C  0A80               	xorlw	128
 12332  00597E  59DA               	subwfb	??_controlVelocity& (0+255),w,b
 12333  005980  A0D8               	btfss	status,0,c
 12334  005982  D004               	goto	u25180
 12335                           
 12336                           ; BSR set to: 0
 12337  005984  0101               	movlb	1	; () banked
 12338  005986  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12339  005988  A4D8               	btfss	status,2,c
 12340  00598A  D051               	goto	l21779
 12341  00598C                     u25180:
 12342  00598C  0100               	movlb	0	; () banked
 12343  00598E  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12344  005990  B4D8               	btfsc	status,2,c
 12345  005992  D004               	goto	u25200
 12346                           
 12347                           ; BSR set to: 0
 12348  005994  0101               	movlb	1	; () banked
 12349  005996  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12350  005998  B4D8               	btfsc	status,2,c
 12351  00599A  D00C               	goto	u25220
 12352  00599C                     u25200:
 12353  00599C  0101               	movlb	1	; () banked
 12354  00599E  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12355  0059A0  D005               	goto	u25210
 12356  0059A2  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12357  0059A4  E144               	bnz	l21779
 12358  0059A6  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12359  0059A8  B0D8               	btfsc	status,0,c
 12360  0059AA  D041               	goto	l21779
 12361  0059AC                     u25210:
 12362                           
 12363                           ; BSR set to: 1
 12364  0059AC  0100               	movlb	0	; () banked
 12365  0059AE  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12366  0059B0  B4D8               	btfsc	status,2,c
 12367  0059B2  D03D               	goto	l21779
 12368  0059B4                     u25220:
 12369                           
 12370                           ;outputs_MC50.c: 550:     {;outputs_MC50.c: 552:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12371  0059B4  0101               	movlb	1	; () banked
 12372  0059B6  517B               	movf	_powerControl_st& (0+255),w,b
 12373  0059B8  A4D8               	btfss	status,2,c
 12374  0059BA  D022               	goto	l21765
 12375                           
 12376                           ; BSR set to: 1
 12377  0059BC  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12378  0059BE  A4D8               	btfss	status,2,c
 12379  0059C0  D01F               	goto	l21765
 12380                           
 12381                           ; BSR set to: 1
 12382                           ;outputs_MC50.c: 553:                 {;outputs_MC50.c: 556:                     ts_syst
      +                          em.TimeCurrentWaitForAlarm=(1000/50);
 12383  0059C2  0E00               	movlw	0
 12384  0059C4  6FCD               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12385  0059C6  0E14               	movlw	20
 12386  0059C8  6FCC               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12387                           
 12388                           ;outputs_MC50.c: 558:                     if (var_sys_NVM.softstop > 0){
 12389  0059CA  0100               	movlb	0	; () banked
 12390  0059CC  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12391  0059CE  B4D8               	btfsc	status,2,c
 12392  0059D0  D008               	goto	l21755
 12393                           
 12394                           ; BSR set to: 0
 12395                           ;outputs_MC50.c: 559:                         var_sys.AutoInversionActive = NO;
 12396  0059D2  0E00               	movlw	0
 12397  0059D4  0101               	movlb	1	; () banked
 12398  0059D6  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12399                           
 12400                           ;outputs_MC50.c: 560:                         var_sys.AutoInversionActiveStop = YES;
 12401  0059D8  0E01               	movlw	1
 12402  0059DA  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12403                           
 12404                           ; BSR set to: 1
 12405                           ;outputs_MC50.c: 561:                         InitSoftStop();
 12406  0059DC  EC5E  F04A         	call	_InitSoftStop	;wreg free
 12407                           
 12408                           ;outputs_MC50.c: 563:                     }
 12409  0059E0  D00F               	goto	l21765
 12410  0059E2                     l21755:
 12411                           
 12412                           ; BSR set to: 0
 12413                           ;outputs_MC50.c: 565:                     {;outputs_MC50.c: 566:                        
      +                           ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12414  0059E2  0E00               	movlw	0
 12415  0059E4  0101               	movlb	1	; () banked
 12416  0059E6  6FCB               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12417  0059E8  0E0A               	movlw	10
 12418  0059EA  6FCA               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12419                           
 12420                           ; BSR set to: 1
 12421                           ;outputs_MC50.c: 567:                         ControlDecelarationFactor();
 12422  0059EC  EC0E  F04F         	call	_ControlDecelarationFactor	;wreg free
 12423                           
 12424                           ; BSR set to: 1
 12425                           ;outputs_MC50.c: 568:                         powerControl_st.decelarationActive=YES;
 12426  0059F0  0E01               	movlw	1
 12427  0059F2  6F7B               	movwf	_powerControl_st& (0+255),b
 12428                           
 12429                           ; BSR set to: 1
 12430                           ;outputs_MC50.c: 569:                         var_sys.velocityFactor=0;
 12431  0059F4  0E00               	movlw	0
 12432  0059F6  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12433  0059F8  0E00               	movlw	0
 12434  0059FA  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12435                           
 12436                           ; BSR set to: 1
 12437                           ;outputs_MC50.c: 570:                          var_sys.AutoInversionActiveStop = NO;
 12438  0059FC  0E00               	movlw	0
 12439  0059FE  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12440  005A00                     l21765:
 12441                           
 12442                           ;outputs_MC50.c: 574:                 if ((var_sys.velocityFactorstop <= 0)&&(var_sys.Au
      +                          toInversionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12443  005A00  0101               	movlb	1	; () banked
 12444  005A02  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12445  005A04  D005               	goto	u25260
 12446  005A06  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12447  005A08  E102               	bnz	u25261
 12448  005A0A  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12449  005A0C  B0D8               	btfsc	status,0,c
 12450  005A0E                     u25261:
 12451  005A0E  0012               	return	
 12452  005A10                     u25260:
 12453                           
 12454                           ; BSR set to: 1
 12455  005A10  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12456  005A12  A4D8               	btfss	status,2,c
 12457  005A14  0012               	return	
 12458                           
 12459                           ; BSR set to: 1
 12460  005A16  0100               	movlb	0	; () banked
 12461  005A18  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12462  005A1A  B4D8               	btfsc	status,2,c
 12463  005A1C  0012               	return	
 12464                           
 12465                           ; BSR set to: 0
 12466                           ;outputs_MC50.c: 575:                 {;outputs_MC50.c: 576:                 ts_system.T
      +                          imeStopedBeforeDecelaration=( 100/50);
 12467  005A1E  0E00               	movlw	0
 12468  005A20  0101               	movlb	1	; () banked
 12469  005A22  6FCB               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12470  005A24  0E02               	movlw	2
 12471  005A26  6FCA               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12472                           
 12473                           ;outputs_MC50.c: 577:                 var_sys.AutoInversionActiveStop = NO;
 12474  005A28  0E00               	movlw	0
 12475  005A2A  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12476  005A2C  D77E               	goto	l21719
 12477  005A2E                     l21779:
 12478  005A2E  0101               	movlb	1	; () banked
 12479  005A30  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12480  005A32  EC97  F039         	call	_getStateOpenPosition
 12481  005A36  06E8               	decf	wreg,f,c
 12482  005A38  A4D8               	btfss	status,2,c
 12483  005A3A  D042               	goto	l21821
 12484                           
 12485                           ; BSR set to: 0
 12486  005A3C  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12487  005A3E  B4D8               	btfsc	status,2,c
 12488  005A40  D004               	goto	u25310
 12489                           
 12490                           ; BSR set to: 0
 12491  005A42  0101               	movlb	1	; () banked
 12492  005A44  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12493  005A46  B4D8               	btfsc	status,2,c
 12494  005A48  D00C               	goto	u25330
 12495  005A4A                     u25310:
 12496  005A4A  0101               	movlb	1	; () banked
 12497  005A4C  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12498  005A4E  D005               	goto	u25320
 12499  005A50  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12500  005A52  E136               	bnz	l21821
 12501  005A54  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12502  005A56  B0D8               	btfsc	status,0,c
 12503  005A58  D033               	goto	l21821
 12504  005A5A                     u25320:
 12505                           
 12506                           ; BSR set to: 1
 12507  005A5A  0100               	movlb	0	; () banked
 12508  005A5C  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12509  005A5E  B4D8               	btfsc	status,2,c
 12510  005A60  D02F               	goto	l21821
 12511  005A62                     u25330:
 12512                           
 12513                           ;outputs_MC50.c: 586:     {;outputs_MC50.c: 588:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12514  005A62  0101               	movlb	1	; () banked
 12515  005A64  517B               	movf	_powerControl_st& (0+255),w,b
 12516  005A66  A4D8               	btfss	status,2,c
 12517  005A68  D022               	goto	l21807
 12518                           
 12519                           ; BSR set to: 1
 12520  005A6A  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12521  005A6C  A4D8               	btfss	status,2,c
 12522  005A6E  D01F               	goto	l21807
 12523                           
 12524                           ; BSR set to: 1
 12525                           ;outputs_MC50.c: 589:         {;outputs_MC50.c: 592:             ts_system.TimeCurrentWa
      +                          itForAlarm=(1000/50);
 12526  005A70  0E00               	movlw	0
 12527  005A72  6FCD               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12528  005A74  0E14               	movlw	20
 12529  005A76  6FCC               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12530                           
 12531                           ;outputs_MC50.c: 594:             if (var_sys_NVM.softstop > 0){
 12532  005A78  0100               	movlb	0	; () banked
 12533  005A7A  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12534  005A7C  B4D8               	btfsc	status,2,c
 12535  005A7E  D008               	goto	l21799
 12536                           
 12537                           ; BSR set to: 0
 12538                           ;outputs_MC50.c: 595:                 var_sys.AutoInversionActive = NO;
 12539  005A80  0E00               	movlw	0
 12540  005A82  0101               	movlb	1	; () banked
 12541  005A84  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12542                           
 12543                           ;outputs_MC50.c: 596:                 var_sys.AutoInversionActiveStop = YES;
 12544  005A86  0E01               	movlw	1
 12545  005A88  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12546                           
 12547                           ; BSR set to: 1
 12548                           ;outputs_MC50.c: 597:                 InitSoftStop();
 12549  005A8A  EC5E  F04A         	call	_InitSoftStop	;wreg free
 12550                           
 12551                           ;outputs_MC50.c: 598:             }else{
 12552  005A8E  D00F               	goto	l21807
 12553  005A90                     l21799:
 12554                           
 12555                           ; BSR set to: 0
 12556                           ;outputs_MC50.c: 599:                 ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12557  005A90  0E00               	movlw	0
 12558  005A92  0101               	movlb	1	; () banked
 12559  005A94  6FCB               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12560  005A96  0E0A               	movlw	10
 12561  005A98  6FCA               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12562                           
 12563                           ;outputs_MC50.c: 600:                  var_sys.AutoInversionActiveStop = NO;
 12564  005A9A  0E00               	movlw	0
 12565  005A9C  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12566                           
 12567                           ; BSR set to: 1
 12568                           ;outputs_MC50.c: 601:                 ControlDecelarationFactor();
 12569  005A9E  EC0E  F04F         	call	_ControlDecelarationFactor	;wreg free
 12570                           
 12571                           ; BSR set to: 1
 12572                           ;outputs_MC50.c: 602:                 powerControl_st.decelarationActive=YES;
 12573  005AA2  0E01               	movlw	1
 12574  005AA4  6F7B               	movwf	_powerControl_st& (0+255),b
 12575                           
 12576                           ; BSR set to: 1
 12577                           ;outputs_MC50.c: 603:                 var_sys.velocityFactor=0;
 12578  005AA6  0E00               	movlw	0
 12579  005AA8  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12580  005AAA  0E00               	movlw	0
 12581  005AAC  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12582  005AAE                     l21807:
 12583                           
 12584                           ;outputs_MC50.c: 607:         if ((var_sys.velocityFactorstop <= 0)&&(var_sys.AutoInvers
      +                          ionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12585  005AAE  0101               	movlb	1	; () banked
 12586  005AB0  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12587  005AB2  D7AE               	goto	u25260
 12588  005AB4  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12589  005AB6  E135               	bnz	l2311
 12590  005AB8  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12591  005ABA  B0D8               	btfsc	status,0,c
 12592  005ABC  0012               	return	
 12593  005ABE  D7A8               	goto	u25260
 12594  005AC0                     l21821:
 12595  005AC0  0101               	movlb	1	; () banked
 12596  005AC2  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12597  005AC4  D012               	goto	l21829
 12598  005AC6  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12599  005AC8  E103               	bnz	u25400
 12600  005ACA  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12601  005ACC  A0D8               	btfss	status,0,c
 12602  005ACE  D00D               	goto	l21829
 12603  005AD0                     u25400:
 12604                           
 12605                           ; BSR set to: 1
 12606  005AD0  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12607  005AD2  B4D8               	btfsc	status,2,c
 12608  005AD4  D00A               	goto	l21829
 12609                           
 12610                           ; BSR set to: 1
 12611                           ;outputs_MC50.c: 618:     {;outputs_MC50.c: 619:         var_sys.velocityFactorstop=(var
      +                          _sys.velocityFactorstop)- var_sys.SoftStopDecrementControl;
 12612  005AD6  5113               	movf	(_var_sys+19)& (0+255),w,b	;volatile
 12613  005AD8  5D10               	subwf	(_var_sys+16)& (0+255),w,b	;volatile
 12614  005ADA  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12615  005ADC  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12616  005ADE  A0D8               	btfss	status,0,c
 12617  005AE0  0511               	decf	(_var_sys+17)& (0+255),w,b	;volatile
 12618  005AE2  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12619  005AE4                     l21827:
 12620                           
 12621                           ; BSR set to: 1
 12622                           ;outputs_MC50.c: 620:         powerControl_st.decelarationActive=NO;
 12623  005AE4  0E00               	movlw	0
 12624  005AE6  6F7B               	movwf	_powerControl_st& (0+255),b
 12625                           
 12626                           ;outputs_MC50.c: 623:     }
 12627  005AE8  0012               	return	
 12628  005AEA                     l21829:
 12629                           
 12630                           ; BSR set to: 1
 12631  005AEA  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 12632  005AEC  D010               	goto	l21837
 12633  005AEE  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12634  005AF0  E103               	bnz	u25420
 12635  005AF2  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 12636  005AF4  A0D8               	btfss	status,0,c
 12637  005AF6  D00B               	goto	l21837
 12638  005AF8                     u25420:
 12639                           
 12640                           ; BSR set to: 1
 12641  005AF8  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12642  005AFA  B4D8               	btfsc	status,2,c
 12643  005AFC  D008               	goto	l21837
 12644                           
 12645                           ; BSR set to: 1
 12646                           ;outputs_MC50.c: 626:     {;outputs_MC50.c: 627:         var_sys.velocityFactor=(var_sys
      +                          .velocityFactor)-var_sys.SoftStartDecrementControl;
 12647  005AFE  5114               	movf	(_var_sys+20)& (0+255),w,b	;volatile
 12648  005B00  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 12649  005B02  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12650  005B04  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12651  005B06  A0D8               	btfss	status,0,c
 12652  005B08  050F               	decf	(_var_sys+15)& (0+255),w,b	;volatile
 12653  005B0A  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12654  005B0C  D7EB               	goto	l21827
 12655  005B0E                     l21837:
 12656                           
 12657                           ; BSR set to: 1
 12658                           ;outputs_MC50.c: 634:     {;outputs_MC50.c: 635:          var_sys.velocityFactorstop = 0
      +                          ;
 12659  005B0E  0E00               	movlw	0
 12660  005B10  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12661  005B12  0E00               	movlw	0
 12662  005B14  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12663                           
 12664                           ;outputs_MC50.c: 636:          var_sys.velocityFactor=0;
 12665  005B16  0E00               	movlw	0
 12666  005B18  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12667  005B1A  0E00               	movlw	0
 12668  005B1C  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12669                           
 12670                           ;outputs_MC50.c: 637:          powerControl_st.decelarationActive=NO;
 12671  005B1E  0E00               	movlw	0
 12672  005B20  6F7B               	movwf	_powerControl_st& (0+255),b
 12673  005B22                     l2311:
 12674  005B22  0012               	return		;funcret
 12675  005B24                     __end_of_controlVelocity:
 12676                           	callstack 0
 12677                           
 12678 ;; *************** function _getStateOpenPosition *****************
 12679 ;; Defined at:
 12680 ;;		line 470 in file "outputs_MC50.c"
 12681 ;; Parameters:    Size  Location     Type
 12682 ;;  stateMotor      1    wreg     enum E10381
 12683 ;; Auto vars:     Size  Location     Type
 12684 ;;  stateMotor      1    1[BANK0 ] enum E10381
 12685 ;;  state           1    0[BANK0 ] _Bool 
 12686 ;; Return value:  Size  Location     Type
 12687 ;;                  1    wreg      _Bool 
 12688 ;; Registers used:
 12689 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12690 ;; Tracked objects:
 12691 ;;		On entry : 3F/1
 12692 ;;		On exit  : 3F/0
 12693 ;;		Unchanged: 0/0
 12694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12696 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12697 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12698 ;;      Totals:         9       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12699 ;;Total ram usage:       11 bytes
 12700 ;; Hardware stack levels used: 1
 12701 ;; Hardware stack levels required when called: 6
 12702 ;; This function calls:
 12703 ;;		___lmul
 12704 ;;		_getTimeDecelaration
 12705 ;; This function is called by:
 12706 ;;		_controlVelocity
 12707 ;; This function uses a non-reentrant model
 12708 ;;
 12709                           
 12710                           	psect	text27
 12711  00732E                     __ptext27:
 12712                           	callstack 0
 12713  00732E                     _getStateOpenPosition:
 12714                           	callstack 21
 12715                           
 12716                           ;incstack = 0
 12717                           ;getStateOpenPosition@stateMotor stored from wreg
 12718  00732E  0100               	movlb	0	; () banked
 12719  007330  6FD9               	movwf	getStateOpenPosition@stateMotor& (0+255),b
 12720                           
 12721                           ;outputs_MC50.c: 470: _Bool getStateOpenPosition(stateMotor_enum stateMotor);outputs_MC5
      +                          0.c: 471: {;outputs_MC50.c: 472:     _Bool state=0;
 12722  007332  0E00               	movlw	0
 12723  007334  0100               	movlb	0	; () banked
 12724  007336  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12725                           
 12726                           ; BSR set to: 0
 12727                           ;outputs_MC50.c: 473:     if(var_sys.PositionIsLost==YES)
 12728  007338  0101               	movlb	1	; () banked
 12729  00733A  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12730  00733C  A4D8               	btfss	status,2,c
 12731  00733E  D002               	goto	l21069
 12732  007340                     u24260:
 12733                           
 12734                           ;outputs_MC50.c: 474:     {;outputs_MC50.c: 475:         state=1;
 12735  007340  0E01               	movlw	1
 12736  007342  D046               	goto	L71
 12737  007344                     l21069:
 12738                           
 12739                           ; BSR set to: 1
 12740  007344  0100               	movlb	0	; () banked
 12741  007346  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12742  007348  0D14               	mullw	20
 12743  00734A  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12744  00734E  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12745  007352  0E00               	movlw	0
 12746  007354  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12747  007356  0EFF               	movlw	255
 12748  007358  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12749  00735A  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12750  00735C  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12751  00735E  5C32               	subwf	??_getStateOpenPosition^0,w,c
 12752  007360  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12753  007362  5833               	subwfb	(??_getStateOpenPosition+1)^0,w,c
 12754  007364  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12755  007366  5834               	subwfb	(??_getStateOpenPosition+2)^0,w,c
 12756  007368  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12757  00736A  5835               	subwfb	(??_getStateOpenPosition+3)^0,w,c
 12758  00736C  B0D8               	btfsc	status,0,c
 12759  00736E  D033               	goto	l21083
 12760                           
 12761                           ; BSR set to: 0
 12762  007370  0E02               	movlw	2
 12763  007372  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12764  007374  A4D8               	btfss	status,2,c
 12765  007376  D02F               	goto	l21083
 12766                           
 12767                           ; BSR set to: 0
 12768                           ;outputs_MC50.c: 478:     {;outputs_MC50.c: 479:         if(var_sys_NVM.walkTime<(var_sy
      +                          s_NVM.decelarationOpen/2))
 12769  007378  90D8               	bcf	status,0,c
 12770  00737A  3198               	rrcf	_var_sys_NVM& (0+255),w,b	;volatile
 12771  00737C  619C               	cpfslt	(_var_sys_NVM+4)& (0+255),b	;volatile
 12772  00737E  D001               	goto	l21077
 12773  007380  D7DF               	goto	u24260
 12774  007382                     l21077:
 12775                           
 12776                           ; BSR set to: 0
 12777  007382  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12778  007384  0D14               	mullw	20
 12779  007386  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12780  00738A  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12781  00738E  0E00               	movlw	0
 12782  007390  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12783  007392  0EFF               	movlw	255
 12784  007394  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12785  007396  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12786  007398  0ED8               	movlw	216
 12787  00739A  2432               	addwf	??_getStateOpenPosition^0,w,c
 12788  00739C  6E36               	movwf	(??_getStateOpenPosition+4)^0,c
 12789  00739E  0EFF               	movlw	255
 12790  0073A0  2033               	addwfc	(??_getStateOpenPosition+1)^0,w,c
 12791  0073A2  6E37               	movwf	(??_getStateOpenPosition+5)^0,c
 12792  0073A4  0EFF               	movlw	255
 12793  0073A6  2034               	addwfc	(??_getStateOpenPosition+2)^0,w,c
 12794  0073A8  6E38               	movwf	(??_getStateOpenPosition+6)^0,c
 12795  0073AA  0EFF               	movlw	255
 12796  0073AC  2035               	addwfc	(??_getStateOpenPosition+3)^0,w,c
 12797  0073AE  6E39               	movwf	(??_getStateOpenPosition+7)^0,c
 12798  0073B0  0101               	movlb	1	; () banked
 12799  0073B2  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12800  0073B4  5C36               	subwf	(??_getStateOpenPosition+4)^0,w,c
 12801  0073B6  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12802  0073B8  5837               	subwfb	(??_getStateOpenPosition+5)^0,w,c
 12803  0073BA  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12804  0073BC  5838               	subwfb	(??_getStateOpenPosition+6)^0,w,c
 12805  0073BE  5039               	movf	(??_getStateOpenPosition+7)^0,w,c
 12806  0073C0  0A80               	xorlw	128
 12807  0073C2  6E3A               	movwf	(??_getStateOpenPosition+8)^0,c
 12808  0073C4  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12809  0073C6  0A80               	xorlw	128
 12810  0073C8  583A               	subwfb	(??_getStateOpenPosition+8)^0,w,c
 12811  0073CA  A0D8               	btfss	status,0,c
 12812  0073CC  D7B9               	goto	u24260
 12813                           
 12814                           ; BSR set to: 1
 12815                           ;outputs_MC50.c: 488:         {;outputs_MC50.c: 489:             state= 0;
 12816  0073CE  0E00               	movlw	0
 12817  0073D0                     L71:
 12818  0073D0  0100               	movlb	0	; () banked
 12819  0073D2  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12820  0073D4  D032               	goto	l2254
 12821  0073D6                     l21083:
 12822                           
 12823                           ; BSR set to: 0
 12824  0073D6  0E02               	movlw	2
 12825  0073D8  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12826  0073DA  B4D8               	btfsc	status,2,c
 12827  0073DC  D003               	goto	u24320
 12828                           
 12829                           ; BSR set to: 0
 12830  0073DE  05D9               	decf	getStateOpenPosition@stateMotor& (0+255),w,b
 12831  0073E0  A4D8               	btfss	status,2,c
 12832  0073E2  D02B               	goto	l2254
 12833  0073E4                     u24320:
 12834                           
 12835                           ; BSR set to: 0
 12836                           ;outputs_MC50.c: 493:     {;outputs_MC50.c: 494:          if((var_sys_NVM.learningTimeTo
      +                          Open)<(((unsigned long)var_sys_NVM.decelarationOpen*( 500/50))))
 12837  0073E4  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12838  0073E6  6E1D               	movwf	___lmul@multiplier^0,c
 12839  0073E8  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 12840  0073EA  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 12841  0073EC  6A20               	clrf	(___lmul@multiplier+3)^0,c
 12842  0073EE  0E0A               	movlw	10
 12843  0073F0  6E21               	movwf	___lmul@multiplicand^0,c
 12844  0073F2  0E00               	movlw	0
 12845  0073F4  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 12846  0073F6  0E00               	movlw	0
 12847  0073F8  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 12848  0073FA  0E00               	movlw	0
 12849  0073FC  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 12850  0073FE  EC17  F049         	call	___lmul	;wreg free
 12851  007402  501D               	movf	?___lmul^0,w,c
 12852  007404  0100               	movlb	0	; () banked
 12853  007406  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12854  007408  501E               	movf	(?___lmul+1)^0,w,c
 12855  00740A  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12856  00740C  501F               	movf	(?___lmul+2)^0,w,c
 12857  00740E  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12858  007410  5020               	movf	(?___lmul+3)^0,w,c
 12859  007412  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12860  007414  A0D8               	btfss	status,0,c
 12861  007416  D794               	goto	u24260
 12862                           
 12863                           ; BSR set to: 0
 12864  007418  51D9               	movf	getStateOpenPosition@stateMotor& (0+255),w,b
 12865  00741A  ECA4  F03C         	call	_getTimeDecelaration
 12866  00741E  0101               	movlb	1	; () banked
 12867  007420  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12868  007422  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12869  007424  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12870  007426  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12871  007428  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12872  00742A  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12873  00742C  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12874  00742E  0A80               	xorlw	128
 12875  007430  6E32               	movwf	??_getStateOpenPosition^0,c
 12876  007432  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12877  007434  0A80               	xorlw	128
 12878  007436  5832               	subwfb	??_getStateOpenPosition^0,w,c
 12879  007438  D7C8               	goto	L72
 12880  00743A                     l2254:
 12881                           
 12882                           ; BSR set to: 0
 12883                           ;outputs_MC50.c: 507:     return state;
 12884  00743A  51D8               	movf	getStateOpenPosition@state& (0+255),w,b
 12885                           
 12886                           ; BSR set to: 0
 12887  00743C  0012               	return		;funcret
 12888  00743E                     __end_of_getStateOpenPosition:
 12889                           	callstack 0
 12890                           
 12891 ;; *************** function _InitSoftStop *****************
 12892 ;; Defined at:
 12893 ;;		line 849 in file "sm_ControlGate_MC50.c"
 12894 ;; Parameters:    Size  Location     Type
 12895 ;;		None
 12896 ;; Auto vars:     Size  Location     Type
 12897 ;;		None
 12898 ;; Return value:  Size  Location     Type
 12899 ;;                  1    wreg      void 
 12900 ;; Registers used:
 12901 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12902 ;; Tracked objects:
 12903 ;;		On entry : 3F/1
 12904 ;;		On exit  : 3E/0
 12905 ;;		Unchanged: 0/0
 12906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12909 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12910 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12911 ;;Total ram usage:        1 bytes
 12912 ;; Hardware stack levels used: 1
 12913 ;; Hardware stack levels required when called: 5
 12914 ;; This function calls:
 12915 ;;		_GetMotorPower
 12916 ;; This function is called by:
 12917 ;;		_controlVelocity
 12918 ;; This function uses a non-reentrant model
 12919 ;;
 12920                           
 12921                           	psect	text28
 12922  0094BC                     __ptext28:
 12923                           	callstack 0
 12924  0094BC                     _InitSoftStop:
 12925                           	callstack 22
 12926                           
 12927                           ; BSR set to: 1
 12928                           ;sm_ControlGate_MC50.c: 850:     if (((var_sys.AutoInversionActiveStop == YES)|| (var_sy
      +                          s.AutoInversionActive == YES))&&(var_sys_NVM.softstop >0)) {
 12929                           
 12930                           ; BSR set to: 0
 12931                           ;incstack = 0
 12932  0094BC  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12933  0094BE  B4D8               	btfsc	status,2,c
 12934  0094C0  D003               	goto	u24360
 12935                           
 12936                           ; BSR set to: 1
 12937  0094C2  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 12938  0094C4  A4D8               	btfss	status,2,c
 12939  0094C6  0012               	return	
 12940  0094C8                     u24360:
 12941                           
 12942                           ; BSR set to: 1
 12943  0094C8  0100               	movlb	0	; () banked
 12944  0094CA  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12945  0094CC  B4D8               	btfsc	status,2,c
 12946  0094CE  0012               	return	
 12947                           
 12948                           ; BSR set to: 0
 12949                           ;sm_ControlGate_MC50.c: 853:         var_sys.velocityFactor = 0;
 12950  0094D0  0E00               	movlw	0
 12951  0094D2  0101               	movlb	1	; () banked
 12952  0094D4  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12953  0094D6  0E00               	movlw	0
 12954  0094D8  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12955                           
 12956                           ;sm_ControlGate_MC50.c: 854:         var_sys.velocityFactorstop = 0;
 12957  0094DA  0E00               	movlw	0
 12958  0094DC  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12959  0094DE  0E00               	movlw	0
 12960  0094E0  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12961                           
 12962                           ; BSR set to: 1
 12963                           ;sm_ControlGate_MC50.c: 855:         var_sys.velocityFactorstop = GetMotorPower();
 12964  0094E2  ECEC  F03D         	call	_GetMotorPower	;wreg free
 12965  0094E6  6E14               	movwf	??_InitSoftStop^0,c
 12966  0094E8  5014               	movf	??_InitSoftStop^0,w,c
 12967  0094EA  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12968  0094EC  6B11               	clrf	(_var_sys+17)& (0+255),b	;volatile
 12969                           
 12970                           ; BSR set to: 1
 12971                           ;sm_ControlGate_MC50.c: 859:         ts_system.timeSoftStop = var_sys.velocityFactorstop
      +                           + 1;
 12972  0094EE  0E01               	movlw	1
 12973  0094F0  2510               	addwf	(_var_sys+16)& (0+255),w,b	;volatile
 12974  0094F2  6FB6               	movwf	(_ts_system+24)& (0+255),b	;volatile
 12975  0094F4  0E00               	movlw	0
 12976  0094F6  2111               	addwfc	(_var_sys+17)& (0+255),w,b	;volatile
 12977  0094F8  6FB7               	movwf	(_ts_system+25)& (0+255),b	;volatile
 12978                           
 12979                           ; BSR set to: 1
 12980                           ;sm_ControlGate_MC50.c: 861:         var_sys.SoftStopDecrementControl = 10 - var_sys_NVM
      +                          .softstop;
 12981  0094FA  0100               	movlb	0	; () banked
 12982  0094FC  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12983  0094FE  080A               	sublw	10
 12984  009500  0101               	movlb	1	; () banked
 12985  009502  6F13               	movwf	(_var_sys+19)& (0+255),b	;volatile
 12986  009504  0012               	return		;funcret
 12987  009506                     __end_of_InitSoftStop:
 12988                           	callstack 0
 12989                           
 12990 ;; *************** function _ControlDecelarationFactor *****************
 12991 ;; Defined at:
 12992 ;;		line 463 in file "outputs_MC50.c"
 12993 ;; Parameters:    Size  Location     Type
 12994 ;;		None
 12995 ;; Auto vars:     Size  Location     Type
 12996 ;;		None
 12997 ;; Return value:  Size  Location     Type
 12998 ;;                  1    wreg      void 
 12999 ;; Registers used:
 13000 ;;		wreg, status,2, status,0, prodl, prodh
 13001 ;; Tracked objects:
 13002 ;;		On entry : 3E/1
 13003 ;;		On exit  : 3F/1
 13004 ;;		Unchanged: 0/0
 13005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13010 ;;Total ram usage:        0 bytes
 13011 ;; Hardware stack levels used: 1
 13012 ;; Hardware stack levels required when called: 4
 13013 ;; This function calls:
 13014 ;;		Nothing
 13015 ;; This function is called by:
 13016 ;;		_controlVelocity
 13017 ;; This function uses a non-reentrant model
 13018 ;;
 13019                           
 13020                           	psect	text29
 13021  009E1C                     __ptext29:
 13022                           	callstack 0
 13023  009E1C                     _ControlDecelarationFactor:
 13024                           	callstack 23
 13025                           
 13026                           ;outputs_MC50.c: 465:     powerControl_st.decelarationCyclesOn=1;
 13027                           
 13028                           ;incstack = 0
 13029  009E1C  0E01               	movlw	1
 13030  009E1E  0101               	movlb	1	; () banked
 13031  009E20  6F7C               	movwf	(_powerControl_st+1)& (0+255),b
 13032                           
 13033                           ;outputs_MC50.c: 466:     powerControl_st.decelarationCyclesOff=2;
 13034  009E22  0E02               	movlw	2
 13035  009E24  6F7D               	movwf	(_powerControl_st+2)& (0+255),b
 13036                           
 13037                           ; BSR set to: 1
 13038                           ;outputs_MC50.c: 467:     powerControl_st.decelarationPower=var_sys_NVM.velocityDecelara
      +                          tion*var_sys.Torquerelanty;
 13039  009E26  0100               	movlb	0	; () banked
 13040  009E28  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 13041  009E2A  0101               	movlb	1	; () banked
 13042  009E2C  0315               	mulwf	(_var_sys+21)& (0+255),b	;volatile
 13043  009E2E  CFF3 F17E          	movff	prodl,_powerControl_st+3
 13044                           
 13045                           ; BSR set to: 1
 13046  009E32  0012               	return		;funcret
 13047  009E34                     __end_of_ControlDecelarationFactor:
 13048                           	callstack 0
 13049                           
 13050 ;; *************** function _actionZone_Opened *****************
 13051 ;; Defined at:
 13052 ;;		line 514 in file "sm_ControlGate_MC50.c"
 13053 ;; Parameters:    Size  Location     Type
 13054 ;;		None
 13055 ;; Auto vars:     Size  Location     Type
 13056 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 13057 ;;  securityClos    1   31[COMRAM] enum E10397
 13058 ;; Return value:  Size  Location     Type
 13059 ;;                  1    wreg      void 
 13060 ;; Registers used:
 13061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13062 ;; Tracked objects:
 13063 ;;		On entry : 3F/0
 13064 ;;		On exit  : 3E/0
 13065 ;;		Unchanged: 0/0
 13066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13068 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13070 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13071 ;;Total ram usage:        2 bytes
 13072 ;; Hardware stack levels used: 1
 13073 ;; Hardware stack levels required when called: 7
 13074 ;; This function calls:
 13075 ;;		_CloseOrder
 13076 ;;		_GetOpenOrder
 13077 ;;		_GetSecurityStateInClosing
 13078 ;;		_InitFullAutoTime
 13079 ;;		_InitWalkAutoTime
 13080 ;;		_OpenFullOrder
 13081 ;;		_OpenWalkOrder
 13082 ;;		_VerifyFollowMe
 13083 ;; This function is called by:
 13084 ;;		_sm_execute_ControlGate
 13085 ;; This function uses a non-reentrant model
 13086 ;;
 13087                           
 13088                           	psect	text30
 13089  005B24                     __ptext30:
 13090                           	callstack 0
 13091  005B24                     _actionZone_Opened:
 13092                           	callstack 22
 13093                           
 13094                           ; BSR set to: 0
 13095                           ;sm_ControlGate_MC50.c: 515:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13096                           
 13097                           ; BSR set to: 1
 13098                           ;incstack = 0
 13099  005B24  ECB9  F03F         	call	_GetSecurityStateInClosing	;wreg free
 13100  005B28  6E20               	movwf	actionZone_Opened@securityClosing^0,c
 13101                           
 13102                           ;sm_ControlGate_MC50.c: 517:     if ((securityClosing != NO) && (Abertura_pedonal == 0))
      +                           {
 13103  005B2A  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13104  005B2C  B4D8               	btfsc	status,2,c
 13105  005B2E  D007               	goto	l23545
 13106  005B30  0101               	movlb	1	; () banked
 13107  005B32  5191               	movf	_Abertura_pedonal& (0+255),w,b
 13108  005B34  A4D8               	btfss	status,2,c
 13109  005B36  D003               	goto	l23545
 13110                           
 13111                           ; BSR set to: 1
 13112                           ;sm_ControlGate_MC50.c: 518:         InitFullAutoTime();
 13113  005B38  ECE7  F04E         	call	_InitFullAutoTime	;wreg free
 13114                           
 13115                           ;sm_ControlGate_MC50.c: 519:     }
 13116  005B3C  D008               	goto	l2727
 13117  005B3E                     l23545:
 13118  005B3E  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13119  005B40  B4D8               	btfsc	status,2,c
 13120  005B42  D005               	goto	l2727
 13121  005B44  0101               	movlb	1	; () banked
 13122  005B46  0591               	decf	_Abertura_pedonal& (0+255),w,b
 13123  005B48  B4D8               	btfsc	status,2,c
 13124                           
 13125                           ; BSR set to: 1
 13126                           ;sm_ControlGate_MC50.c: 521:          InitWalkAutoTime();
 13127  005B4A  EC6C  F04F         	call	_InitWalkAutoTime	;wreg free
 13128  005B4E                     l2727:
 13129                           
 13130                           ;sm_ControlGate_MC50.c: 524:     TypeCMD typeOpenOrder = GetOpenOrder();
 13131  005B4E  EC72  F02F         	call	_GetOpenOrder	;wreg free
 13132  005B52  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13133                           
 13134                           ;sm_ControlGate_MC50.c: 526:     VerifyFollowMe(securityClosing);
 13135  005B54  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13136  005B56  EC3F  F04E         	call	_VerifyFollowMe
 13137                           
 13138                           ;sm_ControlGate_MC50.c: 530:     if ((PORTBbits.RB1==0) && (var_sys_NVM.autoTimeFullClos
      +                          e != 0)&&(var_sys.AutoCloseActive != 0) && (button_struct.current != 0x35)&& (var_sys_NV
      +                          M.operationMode == ModoCondominio)){
 13139  005B5A  B28E               	btfsc	142,1,c	;volatile
 13140  005B5C  D013               	goto	l2729
 13141  005B5E  0100               	movlb	0	; () banked
 13142  005B60  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13143  005B62  B4D8               	btfsc	status,2,c
 13144  005B64  D00F               	goto	l2729
 13145                           
 13146                           ; BSR set to: 0
 13147  005B66  0101               	movlb	1	; () banked
 13148  005B68  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13149  005B6A  B4D8               	btfsc	status,2,c
 13150  005B6C  D00B               	goto	l2729
 13151                           
 13152                           ; BSR set to: 1
 13153  005B6E  0E35               	movlw	53
 13154  005B70  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 13155  005B72  B4D8               	btfsc	status,2,c
 13156  005B74  D007               	goto	l2729
 13157                           
 13158                           ; BSR set to: 1
 13159  005B76  0E02               	movlw	2
 13160  005B78  0100               	movlb	0	; () banked
 13161  005B7A  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13162  005B7C  A4D8               	btfss	status,2,c
 13163  005B7E  D002               	goto	l2729
 13164                           
 13165                           ; BSR set to: 0
 13166                           ;sm_ControlGate_MC50.c: 531:       typeOpenOrder = NoCMD;
 13167  005B80  0E00               	movlw	0
 13168  005B82  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13169  005B84                     l2729:
 13170                           
 13171                           ;sm_ControlGate_MC50.c: 535:      if (typeOpenOrder != NoCMD)
 13172  005B84  5021               	movf	actionZone_Opened@typeOpenOrder^0,w,c
 13173  005B86  B4D8               	btfsc	status,2,c
 13174  005B88  D05D               	goto	l2730
 13175                           
 13176                           ;sm_ControlGate_MC50.c: 536:      {;sm_ControlGate_MC50.c: 539:         ts_system.timeSi
      +                          nalizationDigit = (1000/50) * 3;
 13177  005B8A  0E00               	movlw	0
 13178  005B8C  0101               	movlb	1	; () banked
 13179  005B8E  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13180  005B90  0E3C               	movlw	60
 13181  005B92  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13182                           
 13183                           ; BSR set to: 1
 13184                           ;sm_ControlGate_MC50.c: 541:        if ( var_sys_NVM.operationMode == ModoCondominio && 
      +                          var_sys_NVM.autoTimeFullClose == 0 && (typeOpenOrder == TypeFull|| typeOpenOrder == Type
      +                          FullClose ))
 13185  005B94  0E02               	movlw	2
 13186  005B96  0100               	movlb	0	; () banked
 13187  005B98  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13188  005B9A  A4D8               	btfss	status,2,c
 13189  005B9C  D00D               	goto	l23577
 13190                           
 13191                           ; BSR set to: 0
 13192  005B9E  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13193  005BA0  A4D8               	btfss	status,2,c
 13194  005BA2  D00A               	goto	l23577
 13195                           
 13196                           ; BSR set to: 0
 13197  005BA4  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13198  005BA6  B4D8               	btfsc	status,2,c
 13199  005BA8  D004               	goto	u27680
 13200                           
 13201                           ; BSR set to: 0
 13202  005BAA  0E04               	movlw	4
 13203  005BAC  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13204  005BAE  A4D8               	btfss	status,2,c
 13205  005BB0  D003               	goto	l23577
 13206  005BB2                     u27680:
 13207                           
 13208                           ;sm_ControlGate_MC50.c: 542:         {;sm_ControlGate_MC50.c: 544:             CloseOrde
      +                          r();
 13209  005BB2  ECE0  F04D         	call	_CloseOrder	;wreg free
 13210                           
 13211                           ;sm_ControlGate_MC50.c: 546:         }
 13212  005BB6  0012               	return	
 13213  005BB8                     l23577:
 13214                           
 13215                           ; BSR set to: 0
 13216  005BB8  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 13217  005BBA  B4D8               	btfsc	status,2,c
 13218  005BBC  D014               	goto	l23591
 13219                           
 13220                           ; BSR set to: 0
 13221                           ;sm_ControlGate_MC50.c: 553:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && var_sys.Statedoorcontrol != st_Opened) {
 13222  005BBE  0E03               	movlw	3
 13223  005BC0  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13224  005BC2  A4D8               	btfss	status,2,c
 13225  005BC4  D00B               	goto	l23587
 13226                           
 13227                           ; BSR set to: 0
 13228  005BC6  0101               	movlb	1	; () banked
 13229  005BC8  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 13230  005BCA  A4D8               	btfss	status,2,c
 13231  005BCC  D007               	goto	l23587
 13232                           
 13233                           ; BSR set to: 1
 13234  005BCE  0E04               	movlw	4
 13235  005BD0  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13236  005BD2  B4D8               	btfsc	status,2,c
 13237  005BD4  D003               	goto	l23587
 13238  005BD6                     u27720:
 13239                           
 13240                           ; BSR set to: 1
 13241                           ;sm_ControlGate_MC50.c: 555:                 OpenFullOrder();
 13242  005BD6  ECF3  F04D         	call	_OpenFullOrder	;wreg free
 13243                           
 13244                           ;sm_ControlGate_MC50.c: 556:             } else if (typeOpenOrder == TypeFullClose) {
 13245  005BDA  0012               	return	
 13246  005BDC                     l23587:
 13247  005BDC  0E04               	movlw	4
 13248  005BDE  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13249  005BE0  A4D8               	btfss	status,2,c
 13250  005BE2  0012               	return	
 13251  005BE4  D7E6               	goto	u27680
 13252  005BE6                     l23591:
 13253                           
 13254                           ; BSR set to: 0
 13255  005BE6  0E03               	movlw	3
 13256  005BE8  0101               	movlb	1	; () banked
 13257  005BEA  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13258  005BEC  A4D8               	btfss	status,2,c
 13259  005BEE  D009               	goto	l23599
 13260                           
 13261                           ; BSR set to: 1
 13262  005BF0  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13263  005BF2  A4D8               	btfss	status,2,c
 13264  005BF4  D006               	goto	l23599
 13265  005BF6                     u27750:
 13266                           
 13267                           ; BSR set to: 1
 13268                           ;sm_ControlGate_MC50.c: 563:             OpenFullOrder();
 13269  005BF6  ECF3  F04D         	call	_OpenFullOrder	;wreg free
 13270  005BFA                     l23597:
 13271                           
 13272                           ;sm_ControlGate_MC50.c: 565:             var_sys.AutoInversionActive = NO;
 13273  005BFA  0E00               	movlw	0
 13274  005BFC  0101               	movlb	1	; () banked
 13275  005BFE  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13276                           
 13277                           ;sm_ControlGate_MC50.c: 567:         } else if (var_sys.LastState == InClose && typeOpen
      +                          Order == TypeWalk) {
 13278  005C00  0012               	return	
 13279  005C02                     l23599:
 13280                           
 13281                           ; BSR set to: 1
 13282  005C02  0E03               	movlw	3
 13283  005C04  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13284  005C06  A4D8               	btfss	status,2,c
 13285  005C08  D007               	goto	l23607
 13286                           
 13287                           ; BSR set to: 1
 13288  005C0A  0E02               	movlw	2
 13289  005C0C  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13290  005C0E  A4D8               	btfss	status,2,c
 13291  005C10  D003               	goto	l23607
 13292                           
 13293                           ; BSR set to: 1
 13294                           ;sm_ControlGate_MC50.c: 569:             OpenWalkOrder();
 13295  005C12  EC71  F046         	call	_OpenWalkOrder	;wreg free
 13296  005C16  D7F1               	goto	l23597
 13297  005C18                     l23607:
 13298                           
 13299                           ; BSR set to: 1
 13300  005C18  0E03               	movlw	3
 13301  005C1A  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13302  005C1C  A4D8               	btfss	status,2,c
 13303  005C1E  D005               	goto	l23617
 13304                           
 13305                           ; BSR set to: 1
 13306                           ;sm_ControlGate_MC50.c: 574:             if (var_sys.Statedoorcontrol == st_Opened){
 13307  005C20  0E04               	movlw	4
 13308  005C22  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13309  005C24  B4D8               	btfsc	status,2,c
 13310  005C26  0012               	return	
 13311  005C28  D7E6               	goto	u27750
 13312  005C2A                     l23617:
 13313                           
 13314                           ; BSR set to: 1
 13315  005C2A  0100               	movlb	0	; () banked
 13316  005C2C  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13317  005C2E  B4D8               	btfsc	status,2,c
 13318  005C30  D007               	goto	l23623
 13319                           
 13320                           ; BSR set to: 0
 13321  005C32  0E02               	movlw	2
 13322  005C34  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13323  005C36  A4D8               	btfss	status,2,c
 13324  005C38  D003               	goto	l23623
 13325                           
 13326                           ; BSR set to: 0
 13327                           ;sm_ControlGate_MC50.c: 582:         {;sm_ControlGate_MC50.c: 584:             InitFullA
      +                          utoTime();
 13328  005C3A  ECE7  F04E         	call	_InitFullAutoTime	;wreg free
 13329                           
 13330                           ;sm_ControlGate_MC50.c: 586:         }
 13331  005C3E  0012               	return	
 13332  005C40                     l23623:
 13333                           
 13334                           ; BSR set to: 0
 13335  005C40  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13336  005C42  D7CE               	goto	L73
 13337  005C44                     l2730:
 13338  005C44  B28E               	btfsc	142,1,c	;volatile
 13339  005C46  D00B               	goto	l23631
 13340  005C48  0100               	movlb	0	; () banked
 13341  005C4A  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13342  005C4C  B4D8               	btfsc	status,2,c
 13343  005C4E  D007               	goto	l23631
 13344                           
 13345                           ; BSR set to: 0
 13346                           ;sm_ControlGate_MC50.c: 597:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 13347  005C50  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13348  005C52  0D14               	mullw	20
 13349  005C54  CFF3 F1B0          	movff	prodl,_ts_system+18	;volatile
 13350  005C58  CFF4 F1B1          	movff	prodh,_ts_system+19	;volatile
 13351                           
 13352                           ;sm_ControlGate_MC50.c: 599:     }
 13353  005C5C  0012               	return	
 13354  005C5E                     l23631:
 13355  005C5E  0101               	movlb	1	; () banked
 13356  005C60  053A               	decf	(_var_sys+58)& (0+255),w,b	;volatile
 13357  005C62  A4D8               	btfss	status,2,c
 13358  005C64  D00F               	goto	l23641
 13359                           
 13360                           ; BSR set to: 1
 13361  005C66  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13362  005C68  A4D8               	btfss	status,2,c
 13363  005C6A  D00C               	goto	l23641
 13364                           
 13365                           ; BSR set to: 1
 13366                           ;sm_ControlGate_MC50.c: 603:         var_sys.StateFollowIsOn = NO;
 13367  005C6C  0E00               	movlw	0
 13368  005C6E  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13369                           
 13370                           ; BSR set to: 1
 13371                           ;sm_ControlGate_MC50.c: 610:         var_sys.AutoCloseActive = var_sys_NVM.folow_me;
 13372  005C70  C0AD  F123         	movff	_var_sys_NVM+21,_var_sys+35	;volatile
 13373                           
 13374                           ; BSR set to: 1
 13375                           ;sm_ControlGate_MC50.c: 611:         ts_system.timeWaitToClose = var_sys_NVM.folow_me * 
      +                          (1000/50);
 13376  005C74  0100               	movlb	0	; () banked
 13377  005C76  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13378  005C78  0D14               	mullw	20
 13379  005C7A  CFF3 F1B0          	movff	prodl,_ts_system+18	;volatile
 13380  005C7E  CFF4 F1B1          	movff	prodh,_ts_system+19	;volatile
 13381                           
 13382                           ;sm_ControlGate_MC50.c: 613:     }else if (ts_system.timeWaitToClose <= 0 && var_sys_NVM
      +                          .operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES && var_sys.AutoC
      +                          loseActive != 0) {
 13383  005C82  0012               	return	
 13384  005C84                     l23641:
 13385                           
 13386                           ; BSR set to: 1
 13387  005C84  BFB1               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13388  005C86  D005               	goto	u27870
 13389  005C88  51B1               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13390  005C8A  E113               	bnz	l23653
 13391  005C8C  05B0               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13392  005C8E  B0D8               	btfsc	status,0,c
 13393  005C90  D010               	goto	l23653
 13394  005C92                     u27870:
 13395                           
 13396                           ; BSR set to: 1
 13397  005C92  0100               	movlb	0	; () banked
 13398  005C94  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13399  005C96  A4D8               	btfss	status,2,c
 13400  005C98  D00C               	goto	l23653
 13401                           
 13402                           ; BSR set to: 0
 13403  005C9A  0101               	movlb	1	; () banked
 13404  005C9C  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
 13405  005C9E  A4D8               	btfss	status,2,c
 13406  005CA0  D008               	goto	l23653
 13407                           
 13408                           ; BSR set to: 1
 13409  005CA2  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13410  005CA4  B4D8               	btfsc	status,2,c
 13411  005CA6  D005               	goto	l23653
 13412                           
 13413                           ; BSR set to: 1
 13414                           ;sm_ControlGate_MC50.c: 615:         var_sys.AutoCloseActive = 0;
 13415  005CA8  0E00               	movlw	0
 13416  005CAA  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13417                           
 13418                           ;sm_ControlGate_MC50.c: 617:         var_sys.passoAPassoAutoClose = NO;
 13419  005CAC  0E00               	movlw	0
 13420  005CAE  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13421  005CB0  D780               	goto	u27680
 13422  005CB2                     l23653:
 13423  005CB2  0101               	movlb	1	; () banked
 13424  005CB4  BFB1               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13425  005CB6  D005               	goto	u27910
 13426  005CB8  51B1               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13427  005CBA  E119               	bnz	l23671
 13428  005CBC  05B0               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13429  005CBE  B0D8               	btfsc	status,0,c
 13430  005CC0  D016               	goto	l23671
 13431  005CC2                     u27910:
 13432                           
 13433                           ; BSR set to: 1
 13434  005CC2  0100               	movlb	0	; () banked
 13435  005CC4  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13436  005CC6  B4D8               	btfsc	status,2,c
 13437  005CC8  D012               	goto	l23671
 13438                           
 13439                           ; BSR set to: 0
 13440  005CCA  0101               	movlb	1	; () banked
 13441  005CCC  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13442  005CCE  B4D8               	btfsc	status,2,c
 13443  005CD0  D00E               	goto	l23671
 13444                           
 13445                           ; BSR set to: 1
 13446                           ;sm_ControlGate_MC50.c: 621:         var_sys.AutoCloseActive = 0;
 13447  005CD2  0E00               	movlw	0
 13448  005CD4  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13449                           
 13450                           ; BSR set to: 1
 13451                           ;sm_ControlGate_MC50.c: 627:         if ( var_sys.AutoInversionActive == YES )
 13452  005CD6  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13453  005CD8  A4D8               	btfss	status,2,c
 13454  005CDA  D003               	goto	l23667
 13455                           
 13456                           ; BSR set to: 1
 13457                           ;sm_ControlGate_MC50.c: 628:         {;sm_ControlGate_MC50.c: 629:             var_sys.A
      +                          utoInversionActive = NO;
 13458  005CDC  0E00               	movlw	0
 13459  005CDE  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13460  005CE0  D77A               	goto	u27720
 13461  005CE2                     l23667:
 13462                           
 13463                           ; BSR set to: 1
 13464                           ;sm_ControlGate_MC50.c: 633:         {;sm_ControlGate_MC50.c: 634:             CloseOrde
      +                          r();
 13465  005CE2  ECE0  F04D         	call	_CloseOrder	;wreg free
 13466                           
 13467                           ;sm_ControlGate_MC50.c: 635:             var_sys.PositionIsLost = 0;
 13468  005CE6  0E00               	movlw	0
 13469  005CE8  0101               	movlb	1	; () banked
 13470  005CEA  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13471  005CEC  0012               	return	
 13472  005CEE                     l23671:
 13473  005CEE  0101               	movlb	1	; () banked
 13474  005CF0  0522               	decf	(_var_sys+34)& (0+255),w,b	;volatile
 13475  005CF2  A4D8               	btfss	status,2,c
 13476  005CF4  0012               	return	
 13477                           
 13478                           ; BSR set to: 1
 13479  005CF6  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13480  005CF8  A4D8               	btfss	status,2,c
 13481  005CFA  0012               	return	
 13482                           
 13483                           ; BSR set to: 1
 13484                           ;sm_ControlGate_MC50.c: 638:     {;sm_ControlGate_MC50.c: 639:         if (ts_system.tim
      +                          eSinalizationDigit <= 1) {
 13485  005CFC  BFAB               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
 13486  005CFE  D006               	goto	u27970
 13487  005D00  51AB               	movf	(_ts_system+13)& (0+255),w,b	;volatile
 13488  005D02  E103               	bnz	u27971
 13489  005D04  0E02               	movlw	2
 13490  005D06  5DAA               	subwf	(_ts_system+12)& (0+255),w,b	;volatile
 13491  005D08  B0D8               	btfsc	status,0,c
 13492  005D0A                     u27971:
 13493  005D0A  0012               	return	
 13494  005D0C                     u27970:
 13495                           
 13496                           ; BSR set to: 1
 13497                           ;sm_ControlGate_MC50.c: 640:             var_sys.DigitSinalizedTemp = NO;
 13498  005D0C  0E00               	movlw	0
 13499  005D0E  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 13500  005D10  0012               	return		;funcret
 13501  005D12                     __end_of_actionZone_Opened:
 13502                           	callstack 0
 13503                           
 13504 ;; *************** function _VerifyFollowMe *****************
 13505 ;; Defined at:
 13506 ;;		line 117 in file "sm_ControlGate_MC50.c"
 13507 ;; Parameters:    Size  Location     Type
 13508 ;;  securityClos    1    wreg     enum E10397
 13509 ;; Auto vars:     Size  Location     Type
 13510 ;;  securityClos    1   15[COMRAM] enum E10397
 13511 ;; Return value:  Size  Location     Type
 13512 ;;                  1    wreg      void 
 13513 ;; Registers used:
 13514 ;;		wreg, status,2, status,0
 13515 ;; Tracked objects:
 13516 ;;		On entry : 0/0
 13517 ;;		On exit  : 3E/0
 13518 ;;		Unchanged: 0/0
 13519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13523 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13524 ;;Total ram usage:        1 bytes
 13525 ;; Hardware stack levels used: 1
 13526 ;; Hardware stack levels required when called: 4
 13527 ;; This function calls:
 13528 ;;		Nothing
 13529 ;; This function is called by:
 13530 ;;		_actionZone_Opening
 13531 ;;		_actionZone_Opened
 13532 ;; This function uses a non-reentrant model
 13533 ;;
 13534                           
 13535                           	psect	text31
 13536  009C7E                     __ptext31:
 13537                           	callstack 0
 13538  009C7E                     _VerifyFollowMe:
 13539                           	callstack 24
 13540                           
 13541                           ;incstack = 0
 13542                           ;VerifyFollowMe@securityClose stored from wreg
 13543  009C7E  6E10               	movwf	VerifyFollowMe@securityClose^0,c
 13544                           
 13545                           ;sm_ControlGate_MC50.c: 120:     if (var_sys_NVM.folow_me != 0 && var_sys_NVM.photoCellI
      +                          nOpen == 0)
 13546  009C80  0100               	movlb	0	; () banked
 13547  009C82  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13548  009C84  B4D8               	btfsc	status,2,c
 13549  009C86  0012               	return	
 13550                           
 13551                           ; BSR set to: 0
 13552  009C88  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 13553  009C8A  A4D8               	btfss	status,2,c
 13554  009C8C  0012               	return	
 13555                           
 13556                           ; BSR set to: 0
 13557                           ;sm_ControlGate_MC50.c: 121:     {;sm_ControlGate_MC50.c: 122:         if (securityClose
      +                           == YES && var_sys.StateFollowIsOn == NO) {
 13558  009C8E  0410               	decf	VerifyFollowMe@securityClose^0,w,c
 13559  009C90  A4D8               	btfss	status,2,c
 13560  009C92  0012               	return	
 13561                           
 13562                           ; BSR set to: 0
 13563  009C94  0101               	movlb	1	; () banked
 13564  009C96  513A               	movf	(_var_sys+58)& (0+255),w,b	;volatile
 13565  009C98  A4D8               	btfss	status,2,c
 13566  009C9A  0012               	return	
 13567                           
 13568                           ; BSR set to: 1
 13569                           ;sm_ControlGate_MC50.c: 123:             var_sys.StateFollowIsOn = YES;
 13570  009C9C  0E01               	movlw	1
 13571  009C9E  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13572  009CA0  0012               	return		;funcret
 13573  009CA2                     __end_of_VerifyFollowMe:
 13574                           	callstack 0
 13575                           
 13576 ;; *************** function _CloseOrder *****************
 13577 ;; Defined at:
 13578 ;;		line 63 in file "sm_ControlGate_MC50.c"
 13579 ;; Parameters:    Size  Location     Type
 13580 ;;		None
 13581 ;; Auto vars:     Size  Location     Type
 13582 ;;		None
 13583 ;; Return value:  Size  Location     Type
 13584 ;;                  1    wreg      void 
 13585 ;; Registers used:
 13586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13587 ;; Tracked objects:
 13588 ;;		On entry : 3E/1
 13589 ;;		On exit  : 3E/0
 13590 ;;		Unchanged: 0/0
 13591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13596 ;;Total ram usage:        0 bytes
 13597 ;; Hardware stack levels used: 1
 13598 ;; Hardware stack levels required when called: 6
 13599 ;; This function calls:
 13600 ;;		_InitSoftStart
 13601 ;;		_sm_send_event
 13602 ;; This function is called by:
 13603 ;;		_actionZone_Opening
 13604 ;;		_actionZone_Opened
 13605 ;; This function uses a non-reentrant model
 13606 ;;
 13607                           
 13608                           	psect	text32
 13609  009BC0                     __ptext32:
 13610                           	callstack 0
 13611  009BC0                     _CloseOrder:
 13612                           	callstack 22
 13613                           
 13614                           ;sm_ControlGate_MC50.c: 65:     var_sys.StateMotor = InClose;
 13615                           
 13616                           ;incstack = 0
 13617  009BC0  0E03               	movlw	3
 13618  009BC2  0101               	movlb	1	; () banked
 13619  009BC4  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13620                           
 13621                           ; BSR set to: 1
 13622                           ;sm_ControlGate_MC50.c: 66:     sm_send_event(&controlGate_stateMachine, ev_CloseGate);
 13623  009BC6  0EE6               	movlw	low _controlGate_stateMachine
 13624  009BC8  6E12               	movwf	sm_send_event@psm^0,c
 13625  009BCA  0E01               	movlw	high _controlGate_stateMachine
 13626  009BCC  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13627  009BCE  0E00               	movlw	0
 13628  009BD0  6E15               	movwf	(sm_send_event@event+1)^0,c
 13629  009BD2  0E0E               	movlw	14
 13630  009BD4  6E14               	movwf	sm_send_event@event^0,c
 13631  009BD6  ECDC  F047         	call	_sm_send_event	;wreg free
 13632                           
 13633                           ;sm_ControlGate_MC50.c: 67:     var_sys.LastState = InClose;
 13634  009BDA  0E03               	movlw	3
 13635  009BDC  0101               	movlb	1	; () banked
 13636  009BDE  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 13637                           
 13638                           ; BSR set to: 1
 13639                           ;sm_ControlGate_MC50.c: 68:     InitSoftStart();
 13640  009BE0  EC0A  F048         	call	_InitSoftStart	;wreg free
 13641  009BE4  0012               	return		;funcret
 13642  009BE6                     __end_of_CloseOrder:
 13643                           	callstack 0
 13644                           
 13645 ;; *************** function _actionZone_Closing *****************
 13646 ;; Defined at:
 13647 ;;		line 649 in file "sm_ControlGate_MC50.c"
 13648 ;; Parameters:    Size  Location     Type
 13649 ;;		None
 13650 ;; Auto vars:     Size  Location     Type
 13651 ;;  typeOpenOrde    1   50[COMRAM] enum E10372
 13652 ;;  securityClos    1   49[COMRAM] enum E10397
 13653 ;; Return value:  Size  Location     Type
 13654 ;;                  1    wreg      void 
 13655 ;; Registers used:
 13656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13657 ;; Tracked objects:
 13658 ;;		On entry : 3F/0
 13659 ;;		On exit  : 0/0
 13660 ;;		Unchanged: 0/0
 13661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13663 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13665 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13666 ;;Total ram usage:        2 bytes
 13667 ;; Hardware stack levels used: 1
 13668 ;; Hardware stack levels required when called: 7
 13669 ;; This function calls:
 13670 ;;		_GetOpenOrder
 13671 ;;		_GetSecurityStateInClosing
 13672 ;;		_InitFullAutoTime
 13673 ;;		_InitWalkAutoTime
 13674 ;;		_OpenFullOrder
 13675 ;;		_OpenWalkOrder
 13676 ;;		_SetSegmentValueIntermitent
 13677 ;;		_StopOrder
 13678 ;;		___lmul
 13679 ;;		_setPositionInvertionInClosing
 13680 ;;		_sm_send_event
 13681 ;; This function is called by:
 13682 ;;		_sm_execute_ControlGate
 13683 ;; This function uses a non-reentrant model
 13684 ;;
 13685                           
 13686                           	psect	text33
 13687  004D44                     __ptext33:
 13688                           	callstack 0
 13689  004D44                     _actionZone_Closing:
 13690                           	callstack 22
 13691                           
 13692                           ; BSR set to: 0
 13693                           ;sm_ControlGate_MC50.c: 651:     TypeCMD typeOpenOrder = GetOpenOrder();
 13694                           
 13695                           ;incstack = 0
 13696  004D44  EC72  F02F         	call	_GetOpenOrder	;wreg free
 13697  004D48  6E33               	movwf	actionZone_Closing@typeOpenOrder^0,c
 13698                           
 13699                           ;sm_ControlGate_MC50.c: 653:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13700  004D4A  ECB9  F03F         	call	_GetSecurityStateInClosing	;wreg free
 13701  004D4E  6E32               	movwf	actionZone_Closing@securityClosing^0,c
 13702                           
 13703                           ;sm_ControlGate_MC50.c: 654:     Abertura_pedonal = 0;
 13704  004D50  0E00               	movlw	0
 13705  004D52  0101               	movlb	1	; () banked
 13706  004D54  6F91               	movwf	_Abertura_pedonal& (0+255),b
 13707                           
 13708                           ; BSR set to: 1
 13709                           ;sm_ControlGate_MC50.c: 656:     InitFullAutoTime();
 13710  004D56  ECE7  F04E         	call	_InitFullAutoTime	;wreg free
 13711                           
 13712                           ; BSR set to: 0
 13713                           ;sm_ControlGate_MC50.c: 658:     var_sys.passoAPassoAutoClose = NO;
 13714  004D5A  0E00               	movlw	0
 13715  004D5C  0101               	movlb	1	; () banked
 13716  004D5E  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13717                           
 13718                           ; BSR set to: 1
 13719                           ;sm_ControlGate_MC50.c: 660:     if (var_sys.NumberOffErrors > 3) {
 13720  004D60  0E03               	movlw	3
 13721  004D62  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 13722  004D64  D00D               	goto	l23695
 13723                           
 13724                           ; BSR set to: 1
 13725                           ;sm_ControlGate_MC50.c: 662:         var_sys.StateMotor = Stopped;
 13726  004D66  0E00               	movlw	0
 13727  004D68  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13728  004D6A                     l23693:
 13729                           
 13730                           ; BSR set to: 1
 13731                           ;sm_ControlGate_MC50.c: 663:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 13732  004D6A  0EE6               	movlw	low _controlGate_stateMachine
 13733  004D6C  6E12               	movwf	sm_send_event@psm^0,c
 13734  004D6E  0E01               	movlw	high _controlGate_stateMachine
 13735  004D70  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13736  004D72  0E00               	movlw	0
 13737  004D74  6E15               	movwf	(sm_send_event@event+1)^0,c
 13738  004D76  0E10               	movlw	16
 13739  004D78  6E14               	movwf	sm_send_event@event^0,c
 13740  004D7A  ECDC  F047         	call	_sm_send_event	;wreg free
 13741                           
 13742                           ;sm_ControlGate_MC50.c: 664:     } else if ((var_sys.FimCurso_CloseIsEnabled == YES)||(v
      +                          ar_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLos
      +                          t==NO)) {
 13743  004D7E  0012               	return	
 13744  004D80                     l23695:
 13745                           
 13746                           ; BSR set to: 1
 13747  004D80  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 13748  004D82  B4D8               	btfsc	status,2,c
 13749  004D84  D00C               	goto	u28020
 13750                           
 13751                           ; BSR set to: 1
 13752  004D86  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 13753  004D88  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 13754  004D8A  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 13755  004D8C  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 13756  004D8E  A4D8               	btfss	status,2,c
 13757  004D90  D05F               	goto	l23727
 13758                           
 13759                           ; BSR set to: 1
 13760  004D92  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 13761  004D94  A4D8               	btfss	status,2,c
 13762  004D96  D05C               	goto	l23727
 13763                           
 13764                           ; BSR set to: 1
 13765  004D98  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 13766  004D9A  A4D8               	btfss	status,2,c
 13767  004D9C  D059               	goto	l23727
 13768  004D9E                     u28020:
 13769                           
 13770                           ; BSR set to: 1
 13771                           ;sm_ControlGate_MC50.c: 666:         if (var_sys_NVM.flashLightMode == 2) {
 13772  004D9E  0E02               	movlw	2
 13773  004DA0  0100               	movlb	0	; () banked
 13774  004DA2  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 13775  004DA4  A4D8               	btfss	status,2,c
 13776  004DA6  D018               	goto	l23707
 13777                           
 13778                           ; BSR set to: 0
 13779                           ;sm_ControlGate_MC50.c: 667:             ts_system.TimeOnFlashLigth = (long) ((long) var
      +                          _sys_NVM.ligthTime * ((1000/50)*60));
 13780  004DA8  51AC               	movf	(_var_sys_NVM+20)& (0+255),w,b	;volatile
 13781  004DAA  6E1D               	movwf	___lmul@multiplier^0,c
 13782  004DAC  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 13783  004DAE  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 13784  004DB0  6A20               	clrf	(___lmul@multiplier+3)^0,c
 13785  004DB2  0EB0               	movlw	176
 13786  004DB4  6E21               	movwf	___lmul@multiplicand^0,c
 13787  004DB6  0E04               	movlw	4
 13788  004DB8  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 13789  004DBA  0E00               	movlw	0
 13790  004DBC  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 13791  004DBE  0E00               	movlw	0
 13792  004DC0  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 13793  004DC2  EC17  F049         	call	___lmul	;wreg free
 13794  004DC6  C01D  F1BE         	movff	?___lmul,_ts_system+32	;volatile
 13795  004DCA  C01E  F1BF         	movff	?___lmul+1,_ts_system+33	;volatile
 13796  004DCE  C01F  F1C0         	movff	?___lmul+2,_ts_system+34	;volatile
 13797  004DD2  C020  F1C1         	movff	?___lmul+3,_ts_system+35	;volatile
 13798                           
 13799                           ;sm_ControlGate_MC50.c: 668:         }
 13800  004DD6  D009               	goto	l2773
 13801  004DD8                     l23707:
 13802                           
 13803                           ; BSR set to: 0
 13804                           ;sm_ControlGate_MC50.c: 670:             ts_system.TimeOnFlashLigth = 0;
 13805  004DD8  0E00               	movlw	0
 13806  004DDA  0101               	movlb	1	; () banked
 13807  004DDC  6FBE               	movwf	(_ts_system+32)& (0+255),b	;volatile
 13808  004DDE  0E00               	movlw	0
 13809  004DE0  6FBF               	movwf	(_ts_system+33)& (0+255),b	;volatile
 13810  004DE2  0E00               	movlw	0
 13811  004DE4  6FC0               	movwf	(_ts_system+34)& (0+255),b	;volatile
 13812  004DE6  0E00               	movlw	0
 13813  004DE8  6FC1               	movwf	(_ts_system+35)& (0+255),b	;volatile
 13814  004DEA                     l2773:
 13815                           
 13816                           ;sm_ControlGate_MC50.c: 672:         var_sys.AutoInversionActiveStop = NO;
 13817  004DEA  0E00               	movlw	0
 13818  004DEC  0101               	movlb	1	; () banked
 13819  004DEE  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 13820                           
 13821                           ;sm_ControlGate_MC50.c: 674:         var_sys.Statedoorcontrol = st_Closed;
 13822  004DF0  0E01               	movlw	1
 13823  004DF2  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 13824                           
 13825                           ; BSR set to: 1
 13826                           ;sm_ControlGate_MC50.c: 675:         var_sys.actualCounterMoves++;
 13827  004DF4  0E01               	movlw	1
 13828  004DF6  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
 13829  004DF8  0E00               	movlw	0
 13830  004DFA  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
 13831  004DFC  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
 13832  004DFE  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
 13833                           
 13834                           ; BSR set to: 1
 13835                           ;sm_ControlGate_MC50.c: 676:         var_sys.Timewalkisactived = 0;
 13836  004E00  0E00               	movlw	0
 13837  004E02  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 13838                           
 13839                           ; BSR set to: 1
 13840                           ;sm_ControlGate_MC50.c: 677:         var_sys.PositionActual = 0;
 13841  004E04  0E00               	movlw	0
 13842  004E06  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 13843  004E08  0E00               	movlw	0
 13844  004E0A  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 13845  004E0C  0E00               	movlw	0
 13846  004E0E  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 13847  004E10  0E00               	movlw	0
 13848  004E12  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 13849                           
 13850                           ; BSR set to: 1
 13851                           ;sm_ControlGate_MC50.c: 679:         var_sys.PositionIsLost = NO;
 13852  004E14  0E00               	movlw	0
 13853  004E16  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13854                           
 13855                           ; BSR set to: 1
 13856                           ;sm_ControlGate_MC50.c: 680:         var_sys.NumberOffErrors = 0;
 13857  004E18  0E00               	movlw	0
 13858  004E1A  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 13859                           
 13860                           ; BSR set to: 1
 13861                           ;sm_ControlGate_MC50.c: 681:         var_sys.StateMotor = Stopped;
 13862  004E1C  0E00               	movlw	0
 13863  004E1E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13864                           
 13865                           ; BSR set to: 1
 13866                           ;sm_ControlGate_MC50.c: 683:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 13867  004E20  0E00               	movlw	0
 13868  004E22  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13869  004E24  0E28               	movlw	40
 13870  004E26  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13871                           
 13872                           ; BSR set to: 1
 13873                           ;sm_ControlGate_MC50.c: 684:         SetSegmentValueIntermitent(dF, dC, ( 200/50));
 13874  004E28  0E0C               	movlw	12
 13875  004E2A  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 13876  004E2C  0E00               	movlw	0
 13877  004E2E  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 13878  004E30  0E04               	movlw	4
 13879  004E32  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 13880  004E34  0E0F               	movlw	15
 13881  004E36  EC9A  F04C         	call	_SetSegmentValueIntermitent
 13882                           
 13883                           ; BSR set to: 1
 13884                           ;sm_ControlGate_MC50.c: 687:          sm_send_event(&controlGate_stateMachine, ev_Closed
      +                          Gate);
 13885  004E3A  0EE6               	movlw	low _controlGate_stateMachine
 13886  004E3C  6E12               	movwf	sm_send_event@psm^0,c
 13887  004E3E  0E01               	movlw	high _controlGate_stateMachine
 13888  004E40  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13889  004E42  0E00               	movlw	0
 13890  004E44  6E15               	movwf	(sm_send_event@event+1)^0,c
 13891  004E46  0E0F               	movlw	15
 13892  004E48  6E14               	movwf	sm_send_event@event^0,c
 13893  004E4A  ECDC  F047         	call	_sm_send_event	;wreg free
 13894                           
 13895                           ;sm_ControlGate_MC50.c: 691:     }
 13896  004E4E  0012               	return	
 13897  004E50                     l23727:
 13898                           
 13899                           ; BSR set to: 1
 13900  004E50  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 13901  004E52  B4D8               	btfsc	status,2,c
 13902  004E54  D011               	goto	u28070
 13903                           
 13904                           ; BSR set to: 1
 13905  004E56  BFC9               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 13906  004E58  D021               	goto	l23747
 13907  004E5A  51C9               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 13908  004E5C  E103               	bnz	u28050
 13909  004E5E  05C8               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 13910  004E60  A0D8               	btfss	status,0,c
 13911  004E62  D01C               	goto	l23747
 13912  004E64                     u28050:
 13913                           
 13914                           ; BSR set to: 1
 13915  004E64  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 13916  004E66  A4D8               	btfss	status,2,c
 13917  004E68  D019               	goto	l23747
 13918                           
 13919                           ; BSR set to: 1
 13920  004E6A  BFCF               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 13921  004E6C  D005               	goto	u28070
 13922  004E6E  51CF               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 13923  004E70  E115               	bnz	l23747
 13924  004E72  05CE               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 13925  004E74  B0D8               	btfsc	status,0,c
 13926  004E76  D012               	goto	l23747
 13927  004E78                     u28070:
 13928                           
 13929                           ; BSR set to: 1
 13930  004E78  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 13931  004E7A  A4D8               	btfss	status,2,c
 13932  004E7C  D00F               	goto	l23747
 13933                           
 13934                           ; BSR set to: 1
 13935                           ;sm_ControlGate_MC50.c: 694:          if (securityClosing != YES){
 13936  004E7E  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 13937  004E80  A4D8               	btfss	status,2,c
 13938                           
 13939                           ; BSR set to: 1
 13940                           ;sm_ControlGate_MC50.c: 695:             var_sys.NumberOffErrors++;
 13941  004E82  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 13942                           
 13943                           ; BSR set to: 1
 13944                           ;sm_ControlGate_MC50.c: 697:         var_sys.NumberOffErrors++;
 13945                           
 13946                           ;sm_ControlGate_MC50.c: 696:         }
 13947  004E84  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 13948                           
 13949                           ; BSR set to: 1
 13950                           ;sm_ControlGate_MC50.c: 698:         var_sys.AutoInversionActive = YES;
 13951  004E86  0E01               	movlw	1
 13952  004E88  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13953                           
 13954                           ; BSR set to: 1
 13955                           ;sm_ControlGate_MC50.c: 699:         ts_system.TimeWaitToNextState = ( 500/50);
 13956  004E8A  0E00               	movlw	0
 13957  004E8C  6FC3               	movwf	(_ts_system+37)& (0+255),b	;volatile
 13958  004E8E  0E0A               	movlw	10
 13959  004E90  6FC2               	movwf	(_ts_system+36)& (0+255),b	;volatile
 13960                           
 13961                           ; BSR set to: 1
 13962                           ;sm_ControlGate_MC50.c: 700:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 13963  004E92  0E00               	movlw	0
 13964  004E94  6FDF               	movwf	(_ts_system+65)& (0+255),b	;volatile
 13965  004E96  0E1E               	movlw	30
 13966  004E98  6FDE               	movwf	(_ts_system+64)& (0+255),b	;volatile
 13967                           
 13968                           ;sm_ControlGate_MC50.c: 702:     }
 13969  004E9A  0012               	return	
 13970  004E9C                     l23747:
 13971                           
 13972                           ; BSR set to: 1
 13973  004E9C  BFC9               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 13974  004E9E  D02E               	goto	l23777
 13975  004EA0  51C9               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 13976  004EA2  E103               	bnz	u28100
 13977  004EA4  05C8               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 13978  004EA6  A0D8               	btfss	status,0,c
 13979  004EA8  D029               	goto	l23777
 13980  004EAA                     u28100:
 13981                           
 13982                           ; BSR set to: 1
 13983  004EAA  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13984  004EAC  A4D8               	btfss	status,2,c
 13985  004EAE  D026               	goto	l23777
 13986                           
 13987                           ; BSR set to: 1
 13988                           ;sm_ControlGate_MC50.c: 704:         if (var_sys.InvertionCurrentOpening == YES) {
 13989  004EB0  0545               	decf	(_var_sys+69)& (0+255),w,b	;volatile
 13990  004EB2  A4D8               	btfss	status,2,c
 13991  004EB4  D005               	goto	l23759
 13992  004EB6                     u28120:
 13993                           
 13994                           ; BSR set to: 1
 13995                           ;sm_ControlGate_MC50.c: 706:             var_sys.StateMotor = Stopped;
 13996  004EB6  0E00               	movlw	0
 13997  004EB8  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13998                           
 13999                           ; BSR set to: 1
 14000                           ;sm_ControlGate_MC50.c: 707:             setPositionInvertionInClosing();
 14001  004EBA  EC71  F038         	call	_setPositionInvertionInClosing	;wreg free
 14002  004EBE  D755               	goto	l23693
 14003  004EC0                     l23759:
 14004                           
 14005                           ; BSR set to: 1
 14006  004EC0  BFC3               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 14007  004EC2  D005               	goto	u28130
 14008  004EC4  51C3               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 14009  004EC6  E117               	bnz	l23775
 14010  004EC8  05C2               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 14011  004ECA  B0D8               	btfsc	status,0,c
 14012  004ECC  D014               	goto	l23775
 14013  004ECE                     u28130:
 14014                           
 14015                           ; BSR set to: 1
 14016                           ;sm_ControlGate_MC50.c: 710:          if(var_sys.Timewalkisactived == YES){
 14017  004ECE  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 14018  004ED0  A4D8               	btfss	status,2,c
 14019  004ED2  D003               	goto	l23765
 14020                           
 14021                           ; BSR set to: 1
 14022                           ;sm_ControlGate_MC50.c: 711:                 OpenWalkOrder();
 14023  004ED4  EC71  F046         	call	_OpenWalkOrder	;wreg free
 14024                           
 14025                           ;sm_ControlGate_MC50.c: 713:             }
 14026  004ED8  D004               	goto	l23769
 14027  004EDA                     l23765:
 14028                           
 14029                           ; BSR set to: 1
 14030                           ;sm_ControlGate_MC50.c: 716:             OpenFullOrder();
 14031  004EDA  ECF3  F04D         	call	_OpenFullOrder	;wreg free
 14032                           
 14033                           ;sm_ControlGate_MC50.c: 718:             setPositionInvertionInClosing();
 14034  004EDE  EC71  F038         	call	_setPositionInvertionInClosing	;wreg free
 14035  004EE2                     l23769:
 14036                           
 14037                           ;sm_ControlGate_MC50.c: 720:             var_sys.AutoInversionActive = NO;
 14038  004EE2  0E00               	movlw	0
 14039  004EE4  0101               	movlb	1	; () banked
 14040  004EE6  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14041                           
 14042                           ; BSR set to: 1
 14043                           ;sm_ControlGate_MC50.c: 721:             var_sys.InvertionCurrentClosing = YES;
 14044  004EE8  0E01               	movlw	1
 14045  004EEA  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 14046                           
 14047                           ; BSR set to: 1
 14048                           ;sm_ControlGate_MC50.c: 722:             ts_system.TimeInversionStart = (1000/50);
 14049  004EEC  0E00               	movlw	0
 14050  004EEE  6FCF               	movwf	(_ts_system+49)& (0+255),b	;volatile
 14051  004EF0  0E14               	movlw	20
 14052  004EF2  6FCE               	movwf	(_ts_system+48)& (0+255),b	;volatile
 14053                           
 14054                           ;sm_ControlGate_MC50.c: 726:         } else
 14055  004EF4  0012               	return	
 14056  004EF6                     l23775:
 14057                           
 14058                           ; BSR set to: 1
 14059                           ;sm_ControlGate_MC50.c: 727:         {;sm_ControlGate_MC50.c: 728:             var_sys.S
      +                          tateMotor = Stopped;
 14060  004EF6  0E00               	movlw	0
 14061  004EF8  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14062  004EFA  0012               	return	
 14063  004EFC                     l23777:
 14064                           
 14065                           ; BSR set to: 1
 14066  004EFC  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 14067  004EFE  A4D8               	btfss	status,2,c
 14068  004F00  D017               	goto	l23793
 14069                           
 14070                           ; BSR set to: 1
 14071                           ;sm_ControlGate_MC50.c: 732:                 var_sys.StateMotor = Stopped;
 14072  004F02  0E00               	movlw	0
 14073  004F04  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14074                           
 14075                           ; BSR set to: 1
 14076                           ;sm_ControlGate_MC50.c: 737:         if (ts_system.TimeWaitToNextState <= 0) {
 14077  004F06  BFC3               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 14078  004F08  D005               	goto	u28160
 14079  004F0A  51C3               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 14080  004F0C  E160               	bnz	l2810
 14081  004F0E  05C2               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 14082  004F10  B0D8               	btfsc	status,0,c
 14083  004F12  0012               	return	
 14084  004F14                     u28160:
 14085                           
 14086                           ; BSR set to: 1
 14087                           ;sm_ControlGate_MC50.c: 738:             if(var_sys.Timewalkisactived == YES){
 14088  004F14  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 14089  004F16  A4D8               	btfss	status,2,c
 14090  004F18  D003               	goto	l23787
 14091                           
 14092                           ; BSR set to: 1
 14093                           ;sm_ControlGate_MC50.c: 739:                 OpenWalkOrder();
 14094  004F1A  EC71  F046         	call	_OpenWalkOrder	;wreg free
 14095                           
 14096                           ;sm_ControlGate_MC50.c: 741:             }
 14097  004F1E  D004               	goto	l23791
 14098  004F20                     l23787:
 14099                           
 14100                           ; BSR set to: 1
 14101                           ;sm_ControlGate_MC50.c: 744:                  OpenFullOrder();
 14102  004F20  ECF3  F04D         	call	_OpenFullOrder	;wreg free
 14103                           
 14104                           ;sm_ControlGate_MC50.c: 746:             setPositionInvertionInClosing();
 14105  004F24  EC71  F038         	call	_setPositionInvertionInClosing	;wreg free
 14106  004F28                     l23791:
 14107                           
 14108                           ;sm_ControlGate_MC50.c: 748:             var_sys.AutoInversionActive = NO;
 14109  004F28  0E00               	movlw	0
 14110  004F2A  0101               	movlb	1	; () banked
 14111  004F2C  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14112  004F2E  0012               	return	
 14113  004F30                     l23793:
 14114                           
 14115                           ; BSR set to: 1
 14116  004F30  5100               	movf	_var_sys& (0+255),w,b	;volatile
 14117  004F32  A4D8               	btfss	status,2,c
 14118  004F34  D00B               	goto	l23809
 14119                           
 14120                           ; BSR set to: 1
 14121                           ;sm_ControlGate_MC50.c: 755:         if(securityClosing != ST){
 14122  004F36  0E02               	movlw	2
 14123  004F38  1832               	xorwf	actionZone_Closing@securityClosing^0,w,c
 14124  004F3A  B4D8               	btfsc	status,2,c
 14125  004F3C  D002               	goto	l23805
 14126                           
 14127                           ; BSR set to: 1
 14128                           ;sm_ControlGate_MC50.c: 756:            var_sys.NumberOffErrors++;
 14129  004F3E  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14130  004F40  D7BA               	goto	u28120
 14131  004F42                     l23805:
 14132                           
 14133                           ; BSR set to: 1
 14134                           ;sm_ControlGate_MC50.c: 761:         {;sm_ControlGate_MC50.c: 762:             setPositi
      +                          onInvertionInClosing();
 14135  004F42  EC71  F038         	call	_setPositionInvertionInClosing	;wreg free
 14136  004F46                     l23807:
 14137                           
 14138                           ;sm_ControlGate_MC50.c: 763:             StopOrder();
 14139  004F46  EC95  F04E         	call	_StopOrder	;wreg free
 14140  004F4A  0012               	return	
 14141  004F4C                     l23809:
 14142                           
 14143                           ; BSR set to: 1
 14144  004F4C  BFD1               	btfsc	(_ts_system+51)& (0+255),7,b	;volatile
 14145  004F4E  D005               	goto	u28200
 14146  004F50  51D1               	movf	(_ts_system+51)& (0+255),w,b	;volatile
 14147  004F52  E10B               	bnz	l23819
 14148  004F54  05D0               	decf	(_ts_system+50)& (0+255),w,b	;volatile
 14149  004F56  B0D8               	btfsc	status,0,c
 14150  004F58  D008               	goto	l23819
 14151  004F5A                     u28200:
 14152                           
 14153                           ; BSR set to: 1
 14154  004F5A  0546               	decf	(_var_sys+70)& (0+255),w,b	;volatile
 14155  004F5C  A4D8               	btfss	status,2,c
 14156  004F5E  D005               	goto	l23819
 14157                           
 14158                           ; BSR set to: 1
 14159                           ;sm_ControlGate_MC50.c: 768:         setPositionInvertionInClosing();
 14160  004F60  EC71  F038         	call	_setPositionInvertionInClosing	;wreg free
 14161                           
 14162                           ; BSR set to: 1
 14163                           ;sm_ControlGate_MC50.c: 769:         var_sys.InvertionClosingFromOpen = NO;
 14164  004F64  0E00               	movlw	0
 14165  004F66  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 14166  004F68  D7EE               	goto	l23807
 14167  004F6A                     l23819:
 14168                           
 14169                           ; BSR set to: 1
 14170  004F6A  0100               	movlb	0	; () banked
 14171  004F6C  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14172  004F6E  B4D8               	btfsc	status,2,c
 14173  004F70  D004               	goto	u28230
 14174                           
 14175                           ; BSR set to: 0
 14176  004F72  0E02               	movlw	2
 14177  004F74  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14178  004F76  A4D8               	btfss	status,2,c
 14179  004F78  D005               	goto	l23827
 14180  004F7A                     u28230:
 14181                           
 14182                           ; BSR set to: 0
 14183                           ;sm_ControlGate_MC50.c: 773:         if (typeOpenOrder != TypeFullClose) {
 14184  004F7A  0E04               	movlw	4
 14185  004F7C  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14186  004F7E  B4D8               	btfsc	status,2,c
 14187  004F80  0012               	return	
 14188  004F82  D7E1               	goto	l23807
 14189  004F84                     l23827:
 14190                           
 14191                           ; BSR set to: 0
 14192  004F84  5033               	movf	actionZone_Closing@typeOpenOrder^0,w,c
 14193  004F86  B4D8               	btfsc	status,2,c
 14194  004F88  0012               	return	
 14195                           
 14196                           ; BSR set to: 0
 14197                           ;sm_ControlGate_MC50.c: 788:         if ( var_sys_NVM.operationMode == ModoPassoPasso )
 14198  004F8A  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14199  004F8C  A4D8               	btfss	status,2,c
 14200  004F8E  D013               	goto	l23843
 14201                           
 14202                           ; BSR set to: 0
 14203                           ;sm_ControlGate_MC50.c: 789:         {;sm_ControlGate_MC50.c: 790:             setPositi
      +                          onInvertionInClosing();
 14204  004F90  EC71  F038         	call	_setPositionInvertionInClosing	;wreg free
 14205                           
 14206                           ; BSR set to: 1
 14207                           ;sm_ControlGate_MC50.c: 791:             StopOrder();
 14208  004F94  EC95  F04E         	call	_StopOrder	;wreg free
 14209                           
 14210                           ;sm_ControlGate_MC50.c: 793:             if (typeOpenOrder == TypeWalk && var_sys_NVM.op
      +                          erationMode != ModoCondominio)
 14211  004F98  0E02               	movlw	2
 14212  004F9A  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14213  004F9C  A4D8               	btfss	status,2,c
 14214  004F9E  0012               	return	
 14215  004FA0  0E02               	movlw	2
 14216  004FA2  0100               	movlb	0	; () banked
 14217  004FA4  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14218  004FA6  B4D8               	btfsc	status,2,c
 14219  004FA8  0012               	return	
 14220                           
 14221                           ; BSR set to: 0
 14222                           ;sm_ControlGate_MC50.c: 794:             {;sm_ControlGate_MC50.c: 795:                 I
      +                          nitWalkAutoTime();
 14223  004FAA  EC6C  F04F         	call	_InitWalkAutoTime	;wreg free
 14224                           
 14225                           ; BSR set to: 0
 14226                           ;sm_ControlGate_MC50.c: 796:                 var_sys.showAP = YES;
 14227  004FAE  0E01               	movlw	1
 14228  004FB0  0101               	movlb	1	; () banked
 14229  004FB2  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
 14230  004FB4  0012               	return	
 14231  004FB6                     l23843:
 14232                           
 14233                           ; BSR set to: 0
 14234                           ;sm_ControlGate_MC50.c: 801:         {;sm_ControlGate_MC50.c: 802:             if (typeO
      +                          penOrder != TypeFullClose){
 14235  004FB6  0E04               	movlw	4
 14236  004FB8  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14237  004FBA  B4D8               	btfsc	status,2,c
 14238  004FBC  D7C4               	goto	l23807
 14239                           
 14240                           ; BSR set to: 0
 14241                           ;sm_ControlGate_MC50.c: 803:                 var_sys.AutoInversionActive = YES;
 14242  004FBE  0E01               	movlw	1
 14243  004FC0  0101               	movlb	1	; () banked
 14244  004FC2  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14245                           
 14246                           ;sm_ControlGate_MC50.c: 804:                 ts_system.TimeWaitToNextState = ( 500/50);
 14247  004FC4  0E00               	movlw	0
 14248  004FC6  6FC3               	movwf	(_ts_system+37)& (0+255),b	;volatile
 14249  004FC8  0E0A               	movlw	10
 14250  004FCA  6FC2               	movwf	(_ts_system+36)& (0+255),b	;volatile
 14251                           
 14252                           ;sm_ControlGate_MC50.c: 806:             }
 14253  004FCC  0012               	return	
 14254  004FCE                     l2810:
 14255  004FCE  0012               	return		;funcret
 14256  004FD0                     __end_of_actionZone_Closing:
 14257                           	callstack 0
 14258                           
 14259 ;; *************** function _setPositionInvertionInClosing *****************
 14260 ;; Defined at:
 14261 ;;		line 867 in file "sm_ControlGate_MC50.c"
 14262 ;; Parameters:    Size  Location     Type
 14263 ;;		None
 14264 ;; Auto vars:     Size  Location     Type
 14265 ;;		None
 14266 ;; Return value:  Size  Location     Type
 14267 ;;                  1    wreg      void 
 14268 ;; Registers used:
 14269 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14270 ;; Tracked objects:
 14271 ;;		On entry : 3E/1
 14272 ;;		On exit  : 3F/1
 14273 ;;		Unchanged: 0/0
 14274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14277 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14278 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14279 ;;Total ram usage:       12 bytes
 14280 ;; Hardware stack levels used: 1
 14281 ;; Hardware stack levels required when called: 6
 14282 ;; This function calls:
 14283 ;;		_getTimeDecelaration
 14284 ;; This function is called by:
 14285 ;;		_actionZone_Opening
 14286 ;;		_actionZone_Closing
 14287 ;; This function uses a non-reentrant model
 14288 ;;
 14289                           
 14290                           	psect	text34
 14291  0070E2                     __ptext34:
 14292                           	callstack 0
 14293  0070E2                     _setPositionInvertionInClosing:
 14294                           	callstack 22
 14295                           
 14296                           ;sm_ControlGate_MC50.c: 872:     if(var_sys_NVM.TypeofMotor != 2){
 14297                           
 14298                           ;incstack = 0
 14299  0070E2  0E02               	movlw	2
 14300  0070E4  0100               	movlb	0	; () banked
 14301  0070E6  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14302  0070E8  B4D8               	btfsc	status,2,c
 14303  0070EA  D007               	goto	l21933
 14304                           
 14305                           ; BSR set to: 0
 14306                           ;sm_ControlGate_MC50.c: 874:        var_sys.PositionActual += ( 100/50);
 14307  0070EC  0E02               	movlw	2
 14308  0070EE  0101               	movlb	1	; () banked
 14309  0070F0  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14310  0070F2  0E00               	movlw	0
 14311  0070F4  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14312  0070F6  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14313  0070F8  D008               	goto	L74
 14314  0070FA                     l21933:
 14315                           
 14316                           ; BSR set to: 0
 14317                           ;sm_ControlGate_MC50.c: 878:     {;sm_ControlGate_MC50.c: 879:        var_sys.PositionAc
      +                          tual -= ( 50/50);
 14318  0070FA  0EFF               	movlw	255
 14319  0070FC  0101               	movlb	1	; () banked
 14320  0070FE  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14321  007100  0EFF               	movlw	255
 14322  007102  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14323  007104  0EFF               	movlw	255
 14324  007106  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14325  007108  0EFF               	movlw	255
 14326  00710A                     L74:
 14327  00710A  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 14328                           
 14329                           ; BSR set to: 1
 14330                           ;sm_ControlGate_MC50.c: 882:     if (var_sys.PositionActual > getTimeDecelaration(InOpen
      +                          Full)&& var_sys_NVM.TypeofMotor != 2) {
 14331  00710C  0E01               	movlw	1
 14332  00710E  ECA4  F03C         	call	_getTimeDecelaration
 14333  007112  0101               	movlb	1	; () banked
 14334  007114  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14335  007116  5C29               	subwf	?_getTimeDecelaration^0,w,c
 14336  007118  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14337  00711A  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 14338  00711C  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14339  00711E  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 14340  007120  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14341  007122  0A80               	xorlw	128
 14342  007124  0100               	movlb	0	; () banked
 14343  007126  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14344  007128  0101               	movlb	1	; () banked
 14345  00712A  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14346  00712C  0A80               	xorlw	128
 14347  00712E  0100               	movlb	0	; () banked
 14348  007130  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14349  007132  B0D8               	btfsc	status,0,c
 14350  007134  D008               	goto	l21941
 14351                           
 14352                           ; BSR set to: 0
 14353  007136  0E02               	movlw	2
 14354  007138  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14355  00713A  B4D8               	btfsc	status,2,c
 14356  00713C  D004               	goto	l21941
 14357                           
 14358                           ; BSR set to: 0
 14359                           ;sm_ControlGate_MC50.c: 883:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 14360  00713E  0E01               	movlw	1
 14361  007140  ECA4  F03C         	call	_getTimeDecelaration
 14362  007144  D01A               	goto	L75
 14363  007146                     l21941:
 14364                           
 14365                           ; BSR set to: 0
 14366  007146  0E03               	movlw	3
 14367  007148  ECA4  F03C         	call	_getTimeDecelaration
 14368  00714C  5029               	movf	?_getTimeDecelaration^0,w,c
 14369  00714E  0101               	movlb	1	; () banked
 14370  007150  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 14371  007152  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 14372  007154  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 14373  007156  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 14374  007158  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 14375  00715A  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14376  00715C  0A80               	xorlw	128
 14377  00715E  0100               	movlb	0	; () banked
 14378  007160  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14379  007162  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14380  007164  0A80               	xorlw	128
 14381  007166  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14382  007168  B0D8               	btfsc	status,0,c
 14383  00716A  D00F               	goto	l21947
 14384                           
 14385                           ; BSR set to: 0
 14386  00716C  0E02               	movlw	2
 14387  00716E  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14388  007170  B4D8               	btfsc	status,2,c
 14389  007172  D00B               	goto	l21947
 14390                           
 14391                           ; BSR set to: 0
 14392                           ;sm_ControlGate_MC50.c: 887:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 14393  007174  0E03               	movlw	3
 14394  007176  ECA4  F03C         	call	_getTimeDecelaration
 14395  00717A                     L75:
 14396  00717A  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 14397  00717E  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 14398  007182  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 14399  007186  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 14400  00718A                     l21947:
 14401                           
 14402                           ;sm_ControlGate_MC50.c: 890:     var_sys.TimeMaxMotorIsON = ((signed long)var_sys_NVM.le
      +                          arningTimeToOpen - var_sys.PositionActual) + (var_sys_NVM.decelarationOpen*( 500/50))+ (
      +                          1000/50)*10;
 14403  00718A  0100               	movlb	0	; () banked
 14404  00718C  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14405  00718E  0D0A               	mullw	10
 14406  007190  CFF3 F0D8          	movff	prodl,??_setPositionInvertionInClosing
 14407  007194  CFF4 F0D9          	movff	prodh,??_setPositionInvertionInClosing+1
 14408  007198  0E00               	movlw	0
 14409  00719A  BFD9               	btfsc	(??_setPositionInvertionInClosing+1)& (0+255),7,b
 14410  00719C  0EFF               	movlw	255
 14411  00719E  6FDA               	movwf	(??_setPositionInvertionInClosing+2)& (0+255),b
 14412  0071A0  6FDB               	movwf	(??_setPositionInvertionInClosing+3)& (0+255),b
 14413  0071A2  0101               	movlb	1	; () banked
 14414  0071A4  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14415  0071A6  0100               	movlb	0	; () banked
 14416  0071A8  5DD8               	subwf	??_setPositionInvertionInClosing& (0+255),w,b
 14417  0071AA  6FDC               	movwf	(??_setPositionInvertionInClosing+4)& (0+255),b
 14418  0071AC  0101               	movlb	1	; () banked
 14419  0071AE  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14420  0071B0  0100               	movlb	0	; () banked
 14421  0071B2  59D9               	subwfb	(??_setPositionInvertionInClosing+1)& (0+255),w,b
 14422  0071B4  6FDD               	movwf	(??_setPositionInvertionInClosing+5)& (0+255),b
 14423  0071B6  0101               	movlb	1	; () banked
 14424  0071B8  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14425  0071BA  0100               	movlb	0	; () banked
 14426  0071BC  59DA               	subwfb	(??_setPositionInvertionInClosing+2)& (0+255),w,b
 14427  0071BE  6FDE               	movwf	(??_setPositionInvertionInClosing+6)& (0+255),b
 14428  0071C0  0101               	movlb	1	; () banked
 14429  0071C2  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14430  0071C4  0100               	movlb	0	; () banked
 14431  0071C6  59DB               	subwfb	(??_setPositionInvertionInClosing+3)& (0+255),w,b
 14432  0071C8  6FDF               	movwf	(??_setPositionInvertionInClosing+7)& (0+255),b
 14433  0071CA  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14434  0071CC  25DC               	addwf	(??_setPositionInvertionInClosing+4)& (0+255),w,b
 14435  0071CE  6FE0               	movwf	(??_setPositionInvertionInClosing+8)& (0+255),b
 14436  0071D0  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14437  0071D2  21DD               	addwfc	(??_setPositionInvertionInClosing+5)& (0+255),w,b
 14438  0071D4  6FE1               	movwf	(??_setPositionInvertionInClosing+9)& (0+255),b
 14439  0071D6  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14440  0071D8  21DE               	addwfc	(??_setPositionInvertionInClosing+6)& (0+255),w,b
 14441  0071DA  6FE2               	movwf	(??_setPositionInvertionInClosing+10)& (0+255),b
 14442  0071DC  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14443  0071DE  21DF               	addwfc	(??_setPositionInvertionInClosing+7)& (0+255),w,b
 14444  0071E0  6FE3               	movwf	(??_setPositionInvertionInClosing+11)& (0+255),b
 14445  0071E2  0EC8               	movlw	200
 14446  0071E4  25E0               	addwf	(??_setPositionInvertionInClosing+8)& (0+255),w,b
 14447  0071E6  0101               	movlb	1	; () banked
 14448  0071E8  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 14449  0071EA  0E00               	movlw	0
 14450  0071EC  0100               	movlb	0	; () banked
 14451  0071EE  21E1               	addwfc	(??_setPositionInvertionInClosing+9)& (0+255),w,b
 14452  0071F0  0101               	movlb	1	; () banked
 14453  0071F2  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 14454  0071F4  0E00               	movlw	0
 14455  0071F6  0100               	movlb	0	; () banked
 14456  0071F8  21E2               	addwfc	(??_setPositionInvertionInClosing+10)& (0+255),w,b
 14457  0071FA  0101               	movlb	1	; () banked
 14458  0071FC  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 14459  0071FE  0E00               	movlw	0
 14460  007200  0100               	movlb	0	; () banked
 14461  007202  21E3               	addwfc	(??_setPositionInvertionInClosing+11)& (0+255),w,b
 14462  007204  0101               	movlb	1	; () banked
 14463  007206  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 14464                           
 14465                           ; BSR set to: 1
 14466  007208  0012               	return		;funcret
 14467  00720A                     __end_of_setPositionInvertionInClosing:
 14468                           	callstack 0
 14469                           
 14470 ;; *************** function _getTimeDecelaration *****************
 14471 ;; Defined at:
 14472 ;;		line 641 in file "outputs_MC50.c"
 14473 ;; Parameters:    Size  Location     Type
 14474 ;;  state           1    wreg     enum E10381
 14475 ;; Auto vars:     Size  Location     Type
 14476 ;;  state           1   48[COMRAM] enum E10381
 14477 ;; Return value:  Size  Location     Type
 14478 ;;                  4   40[COMRAM] long 
 14479 ;; Registers used:
 14480 ;;		wreg, status,2, status,0, cstack
 14481 ;; Tracked objects:
 14482 ;;		On entry : 3E/1
 14483 ;;		On exit  : 0/0
 14484 ;;		Unchanged: 0/0
 14485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14486 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14487 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14488 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14489 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14490 ;;Total ram usage:        9 bytes
 14491 ;; Hardware stack levels used: 1
 14492 ;; Hardware stack levels required when called: 5
 14493 ;; This function calls:
 14494 ;;		___lmul
 14495 ;; This function is called by:
 14496 ;;		_getStateOpenPosition
 14497 ;;		_controlVelocity
 14498 ;;		_setPositionInvertionInClosing
 14499 ;;		_setPositionInvertionInOpening
 14500 ;; This function uses a non-reentrant model
 14501 ;;
 14502                           
 14503                           	psect	text35
 14504  007948                     __ptext35:
 14505                           	callstack 0
 14506  007948                     _getTimeDecelaration:
 14507                           	callstack 22
 14508                           
 14509                           ; BSR set to: 1
 14510                           ;incstack = 0
 14511                           ;getTimeDecelaration@state stored from wreg
 14512  007948  6E31               	movwf	getTimeDecelaration@state^0,c
 14513                           
 14514                           ;outputs_MC50.c: 641: signed long getTimeDecelaration(stateMotor_enum state);outputs_MC5
      +                          0.c: 642: {;outputs_MC50.c: 644:     if(state==InClose)
 14515  00794A  0E03               	movlw	3
 14516  00794C  1831               	xorwf	getTimeDecelaration@state^0,w,c
 14517  00794E  A4D8               	btfss	status,2,c
 14518  007950  D033               	goto	l20743
 14519                           
 14520                           ;outputs_MC50.c: 645:     {;outputs_MC50.c: 646:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14521  007952  0E02               	movlw	2
 14522  007954  0100               	movlb	0	; () banked
 14523  007956  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14524  007958  B4D8               	btfsc	status,2,c
 14525  00795A  D018               	goto	l20739
 14526                           
 14527                           ; BSR set to: 0
 14528                           ;outputs_MC50.c: 647:         {return (signed long)((signed long)var_sys_NVM.decelaratio
      +                          nClose*( 500/50));}
 14529  00795C  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 14530  00795E  6E1D               	movwf	___lmul@multiplier^0,c
 14531  007960  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14532  007962  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14533  007964  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14534  007966  0E0A               	movlw	10
 14535  007968  6E21               	movwf	___lmul@multiplicand^0,c
 14536  00796A  0E00               	movlw	0
 14537  00796C  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14538  00796E  0E00               	movlw	0
 14539  007970  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14540  007972  0E00               	movlw	0
 14541  007974  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14542  007976  EC17  F049         	call	___lmul	;wreg free
 14543  00797A  C01D  F029         	movff	?___lmul,?_getTimeDecelaration
 14544  00797E  C01E  F02A         	movff	?___lmul+1,?_getTimeDecelaration+1
 14545  007982  C01F  F02B         	movff	?___lmul+2,?_getTimeDecelaration+2
 14546  007986  C020  F02C         	movff	?___lmul+3,?_getTimeDecelaration+3
 14547  00798A  0012               	return	
 14548  00798C                     l20739:
 14549                           
 14550                           ; BSR set to: 0
 14551  00798C  C099  F02D         	movff	_var_sys_NVM+1,??_getTimeDecelaration	;volatile
 14552  007990  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14553  007992  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14554  007994  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14555  007996  0E02               	movlw	2
 14556  007998                     u23835:
 14557  007998  90D8               	bcf	status,0,c
 14558  00799A  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14559  00799C  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14560  00799E  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14561  0079A0  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14562  0079A2  2EE8               	decfsz	wreg,f,c
 14563  0079A4  D7F9               	goto	u23835
 14564  0079A6  C02D  F029         	movff	??_getTimeDecelaration,?_getTimeDecelaration
 14565  0079AA  C02E  F02A         	movff	??_getTimeDecelaration+1,?_getTimeDecelaration+1
 14566  0079AE  C02F  F02B         	movff	??_getTimeDecelaration+2,?_getTimeDecelaration+2
 14567  0079B2  C030  F02C         	movff	??_getTimeDecelaration+3,?_getTimeDecelaration+3
 14568  0079B6  0012               	return	
 14569  0079B8                     l20743:
 14570                           
 14571                           ;outputs_MC50.c: 651:     {;outputs_MC50.c: 652:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14572  0079B8  0E02               	movlw	2
 14573  0079BA  0100               	movlb	0	; () banked
 14574  0079BC  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14575  0079BE  B4D8               	btfsc	status,2,c
 14576  0079C0  D01D               	goto	l20751
 14577                           
 14578                           ; BSR set to: 0
 14579                           ;outputs_MC50.c: 653:         {return (signed long)((signed long)var_sys_NVM.learningTim
      +                          eToOpen-(((signed long)var_sys_NVM.decelarationOpen*( 500/50))));}
 14580  0079C2  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14581  0079C4  6E1D               	movwf	___lmul@multiplier^0,c
 14582  0079C6  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14583  0079C8  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14584  0079CA  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14585  0079CC  0EF6               	movlw	246
 14586  0079CE  6E21               	movwf	___lmul@multiplicand^0,c
 14587  0079D0  0EFF               	movlw	255
 14588  0079D2  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14589  0079D4  0EFF               	movlw	255
 14590  0079D6  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14591  0079D8  0EFF               	movlw	255
 14592  0079DA  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14593  0079DC  EC17  F049         	call	___lmul	;wreg free
 14594  0079E0  0100               	movlb	0	; () banked
 14595  0079E2  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14596  0079E4  241D               	addwf	?___lmul^0,w,c
 14597  0079E6  6E29               	movwf	?_getTimeDecelaration^0,c
 14598  0079E8  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14599  0079EA  201E               	addwfc	(?___lmul+1)^0,w,c
 14600  0079EC  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14601  0079EE  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14602  0079F0  201F               	addwfc	(?___lmul+2)^0,w,c
 14603  0079F2  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14604  0079F4  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14605  0079F6  2020               	addwfc	(?___lmul+3)^0,w,c
 14606  0079F8  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14607  0079FA  0012               	return	
 14608  0079FC                     l20751:
 14609                           
 14610                           ; BSR set to: 0
 14611  0079FC  C098  F02D         	movff	_var_sys_NVM,??_getTimeDecelaration	;volatile
 14612  007A00  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14613  007A02  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14614  007A04  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14615  007A06  0E02               	movlw	2
 14616  007A08                     u23855:
 14617  007A08  90D8               	bcf	status,0,c
 14618  007A0A  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14619  007A0C  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14620  007A0E  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14621  007A10  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14622  007A12  2EE8               	decfsz	wreg,f,c
 14623  007A14  D7F9               	goto	u23855
 14624  007A16  502D               	movf	??_getTimeDecelaration^0,w,c
 14625  007A18  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14626  007A1A  6E29               	movwf	?_getTimeDecelaration^0,c
 14627  007A1C  502E               	movf	(??_getTimeDecelaration+1)^0,w,c
 14628  007A1E  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14629  007A20  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14630  007A22  502F               	movf	(??_getTimeDecelaration+2)^0,w,c
 14631  007A24  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14632  007A26  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14633  007A28  5030               	movf	(??_getTimeDecelaration+3)^0,w,c
 14634  007A2A  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14635  007A2C  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14636  007A2E  0012               	return		;funcret
 14637  007A30                     __end_of_getTimeDecelaration:
 14638                           	callstack 0
 14639                           
 14640 ;; *************** function ___lmul *****************
 14641 ;; Defined at:
 14642 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
 14643 ;; Parameters:    Size  Location     Type
 14644 ;;  multiplier      4   28[COMRAM] unsigned long 
 14645 ;;  multiplicand    4   32[COMRAM] unsigned long 
 14646 ;; Auto vars:     Size  Location     Type
 14647 ;;  product         4   36[COMRAM] unsigned long 
 14648 ;; Return value:  Size  Location     Type
 14649 ;;                  4   28[COMRAM] unsigned long 
 14650 ;; Registers used:
 14651 ;;		wreg, status,2, status,0
 14652 ;; Tracked objects:
 14653 ;;		On entry : 0/1
 14654 ;;		On exit  : 0/0
 14655 ;;		Unchanged: 0/0
 14656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14657 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14658 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14660 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14661 ;;Total ram usage:       12 bytes
 14662 ;; Hardware stack levels used: 1
 14663 ;; Hardware stack levels required when called: 4
 14664 ;; This function calls:
 14665 ;;		Nothing
 14666 ;; This function is called by:
 14667 ;;		_getStateOpenPosition
 14668 ;;		_getTimeDecelaration
 14669 ;;		_actionZone_Closing
 14670 ;;		_sm_execute_menuConfiguration
 14671 ;; This function uses a non-reentrant model
 14672 ;;
 14673                           
 14674                           	psect	text36
 14675  00922E                     __ptext36:
 14676                           	callstack 0
 14677  00922E                     ___lmul:
 14678                           	callstack 24
 14679                           
 14680                           ;incstack = 0
 14681  00922E  0E00               	movlw	0
 14682  009230  6E25               	movwf	___lmul@product^0,c
 14683  009232  0E00               	movlw	0
 14684  009234  6E26               	movwf	(___lmul@product+1)^0,c
 14685  009236  0E00               	movlw	0
 14686  009238  6E27               	movwf	(___lmul@product+2)^0,c
 14687  00923A  0E00               	movlw	0
 14688  00923C  6E28               	movwf	(___lmul@product+3)^0,c
 14689  00923E                     l20591:
 14690  00923E  A01D               	btfss	___lmul@multiplier^0,0,c
 14691  009240  D008               	goto	l20595
 14692  009242  5021               	movf	___lmul@multiplicand^0,w,c
 14693  009244  2625               	addwf	___lmul@product^0,f,c
 14694  009246  5022               	movf	(___lmul@multiplicand+1)^0,w,c
 14695  009248  2226               	addwfc	(___lmul@product+1)^0,f,c
 14696  00924A  5023               	movf	(___lmul@multiplicand+2)^0,w,c
 14697  00924C  2227               	addwfc	(___lmul@product+2)^0,f,c
 14698  00924E  5024               	movf	(___lmul@multiplicand+3)^0,w,c
 14699  009250  2228               	addwfc	(___lmul@product+3)^0,f,c
 14700  009252                     l20595:
 14701  009252  90D8               	bcf	status,0,c
 14702  009254  3621               	rlcf	___lmul@multiplicand^0,f,c
 14703  009256  3622               	rlcf	(___lmul@multiplicand+1)^0,f,c
 14704  009258  3623               	rlcf	(___lmul@multiplicand+2)^0,f,c
 14705  00925A  3624               	rlcf	(___lmul@multiplicand+3)^0,f,c
 14706  00925C  90D8               	bcf	status,0,c
 14707  00925E  3220               	rrcf	(___lmul@multiplier+3)^0,f,c
 14708  009260  321F               	rrcf	(___lmul@multiplier+2)^0,f,c
 14709  009262  321E               	rrcf	(___lmul@multiplier+1)^0,f,c
 14710  009264  321D               	rrcf	___lmul@multiplier^0,f,c
 14711  009266  501D               	movf	___lmul@multiplier^0,w,c
 14712  009268  101E               	iorwf	(___lmul@multiplier+1)^0,w,c
 14713  00926A  101F               	iorwf	(___lmul@multiplier+2)^0,w,c
 14714  00926C  1020               	iorwf	(___lmul@multiplier+3)^0,w,c
 14715  00926E  A4D8               	btfss	status,2,c
 14716  009270  D7E6               	goto	l20591
 14717  009272  C025  F01D         	movff	___lmul@product,?___lmul
 14718  009276  C026  F01E         	movff	___lmul@product+1,?___lmul+1
 14719  00927A  C027  F01F         	movff	___lmul@product+2,?___lmul+2
 14720  00927E  C028  F020         	movff	___lmul@product+3,?___lmul+3
 14721  009282  0012               	return		;funcret
 14722  009284                     __end_of___lmul:
 14723                           	callstack 0
 14724                           
 14725 ;; *************** function _StopOrder *****************
 14726 ;; Defined at:
 14727 ;;		line 96 in file "sm_ControlGate_MC50.c"
 14728 ;; Parameters:    Size  Location     Type
 14729 ;;		None
 14730 ;; Auto vars:     Size  Location     Type
 14731 ;;		None
 14732 ;; Return value:  Size  Location     Type
 14733 ;;                  1    wreg      void 
 14734 ;; Registers used:
 14735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14736 ;; Tracked objects:
 14737 ;;		On entry : 3E/1
 14738 ;;		On exit  : 0/0
 14739 ;;		Unchanged: 0/0
 14740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14745 ;;Total ram usage:        0 bytes
 14746 ;; Hardware stack levels used: 1
 14747 ;; Hardware stack levels required when called: 6
 14748 ;; This function calls:
 14749 ;;		_sm_send_event
 14750 ;; This function is called by:
 14751 ;;		_actionZone_Opening
 14752 ;;		_actionZone_Closing
 14753 ;; This function uses a non-reentrant model
 14754 ;;
 14755                           
 14756                           	psect	text37
 14757  009D2A                     __ptext37:
 14758                           	callstack 0
 14759  009D2A                     _StopOrder:
 14760                           	callstack 22
 14761                           
 14762                           ;sm_ControlGate_MC50.c: 99:    var_sys.StateMotor = Stopped;
 14763                           
 14764                           ;incstack = 0
 14765  009D2A  0E00               	movlw	0
 14766  009D2C  0101               	movlb	1	; () banked
 14767  009D2E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14768                           
 14769                           ; BSR set to: 1
 14770                           ;sm_ControlGate_MC50.c: 100:    sm_send_event(&controlGate_stateMachine, ev_StopGate);
 14771  009D30  0EE6               	movlw	low _controlGate_stateMachine
 14772  009D32  6E12               	movwf	sm_send_event@psm^0,c
 14773  009D34  0E01               	movlw	high _controlGate_stateMachine
 14774  009D36  6E13               	movwf	(sm_send_event@psm+1)^0,c
 14775  009D38  0E00               	movlw	0
 14776  009D3A  6E15               	movwf	(sm_send_event@event+1)^0,c
 14777  009D3C  0E0D               	movlw	13
 14778  009D3E  6E14               	movwf	sm_send_event@event^0,c
 14779  009D40  ECDC  F047         	call	_sm_send_event	;wreg free
 14780  009D44  0012               	return		;funcret
 14781  009D46                     __end_of_StopOrder:
 14782                           	callstack 0
 14783                           
 14784 ;; *************** function _GetSecurityStateInClosing *****************
 14785 ;; Defined at:
 14786 ;;		line 776 in file "inputs_MC50.c"
 14787 ;; Parameters:    Size  Location     Type
 14788 ;;		None
 14789 ;; Auto vars:     Size  Location     Type
 14790 ;;		None
 14791 ;; Return value:  Size  Location     Type
 14792 ;;                  1    wreg      enum E10564
 14793 ;; Registers used:
 14794 ;;		wreg, status,2, status,0, cstack
 14795 ;; Tracked objects:
 14796 ;;		On entry : 0/0
 14797 ;;		On exit  : 3E/0
 14798 ;;		Unchanged: 0/0
 14799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14804 ;;Total ram usage:        0 bytes
 14805 ;; Hardware stack levels used: 1
 14806 ;; Hardware stack levels required when called: 5
 14807 ;; This function calls:
 14808 ;;		_SetSegmentValueIntermitent
 14809 ;; This function is called by:
 14810 ;;		_actionZone_Opening
 14811 ;;		_actionZone_Opened
 14812 ;;		_actionZone_Closing
 14813 ;; This function uses a non-reentrant model
 14814 ;;
 14815                           
 14816                           	psect	text38
 14817  007F72                     __ptext38:
 14818                           	callstack 0
 14819  007F72                     _GetSecurityStateInClosing:
 14820                           	callstack 23
 14821                           
 14822                           ;inputs_MC50.c: 786:      if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBar
      +                          IsObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 0)&& (var_sys_NVM.Stopboton == 
      +                          0))
 14823                           
 14824                           ;incstack = 0
 14825  007F72  0100               	movlb	0	; () banked
 14826  007F74  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 14827  007F76  A4D8               	btfss	status,2,c
 14828  007F78  D01B               	goto	l21609
 14829                           
 14830                           ; BSR set to: 0
 14831  007F7A  0101               	movlb	1	; () banked
 14832  007F7C  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 14833  007F7E  A4D8               	btfss	status,2,c
 14834  007F80  D017               	goto	l21609
 14835                           
 14836                           ; BSR set to: 1
 14837  007F82  0100               	movlb	0	; () banked
 14838  007F84  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 14839  007F86  A4D8               	btfss	status,2,c
 14840  007F88  D013               	goto	l21609
 14841                           
 14842                           ; BSR set to: 0
 14843  007F8A  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 14844  007F8C  A4D8               	btfss	status,2,c
 14845  007F8E  D010               	goto	l21609
 14846                           
 14847                           ; BSR set to: 0
 14848                           ;inputs_MC50.c: 787:     {;inputs_MC50.c: 790:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14849  007F90  0E00               	movlw	0
 14850  007F92  0101               	movlb	1	; () banked
 14851  007F94  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14852  007F96  0E04               	movlw	4
 14853  007F98  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14854                           
 14855                           ; BSR set to: 1
 14856                           ;inputs_MC50.c: 791:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 14857  007F9A  0E0A               	movlw	10
 14858  007F9C  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14859  007F9E  0E00               	movlw	0
 14860  007FA0  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14861  007FA2  0E14               	movlw	20
 14862  007FA4  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14863  007FA6  0E12               	movlw	18
 14864  007FA8  EC9A  F04C         	call	_SetSegmentValueIntermitent
 14865  007FAC                     l21603:
 14866                           
 14867                           ; BSR set to: 1
 14868                           ;inputs_MC50.c: 792:         return YES;
 14869  007FAC  0E01               	movlw	1
 14870  007FAE  0012               	return	
 14871  007FB0                     l21609:
 14872  007FB0  0100               	movlb	0	; () banked
 14873  007FB2  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 14874  007FB4  A4D8               	btfss	status,2,c
 14875  007FB6  D013               	goto	l21623
 14876                           
 14877                           ; BSR set to: 0
 14878  007FB8  0101               	movlb	1	; () banked
 14879  007FBA  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 14880  007FBC  A4D8               	btfss	status,2,c
 14881  007FBE  D00F               	goto	l21623
 14882                           
 14883                           ; BSR set to: 1
 14884                           ;inputs_MC50.c: 795:     {;inputs_MC50.c: 797:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14885  007FC0  0E00               	movlw	0
 14886  007FC2  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14887  007FC4  0E04               	movlw	4
 14888  007FC6  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14889                           
 14890                           ; BSR set to: 1
 14891                           ;inputs_MC50.c: 798:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 14892  007FC8  0E15               	movlw	21
 14893  007FCA  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14894  007FCC  0E00               	movlw	0
 14895  007FCE  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14896  007FD0  0E14               	movlw	20
 14897  007FD2  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14898  007FD4  0E05               	movlw	5
 14899  007FD6  EC9A  F04C         	call	_SetSegmentValueIntermitent
 14900                           
 14901                           ; BSR set to: 1
 14902                           ;inputs_MC50.c: 799:         return ST;
 14903  007FDA  0E02               	movlw	2
 14904  007FDC  0012               	return	
 14905  007FDE                     l21623:
 14906  007FDE  0100               	movlb	0	; () banked
 14907  007FE0  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 14908  007FE2  A4D8               	btfss	status,2,c
 14909  007FE4  D017               	goto	l21639
 14910                           
 14911                           ; BSR set to: 0
 14912  007FE6  0101               	movlb	1	; () banked
 14913  007FE8  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 14914  007FEA  A4D8               	btfss	status,2,c
 14915  007FEC  D013               	goto	l21639
 14916                           
 14917                           ; BSR set to: 1
 14918  007FEE  0100               	movlb	0	; () banked
 14919  007FF0  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 14920  007FF2  A4D8               	btfss	status,2,c
 14921  007FF4  D00F               	goto	l21639
 14922                           
 14923                           ; BSR set to: 0
 14924                           ;inputs_MC50.c: 803:     {;inputs_MC50.c: 805:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14925  007FF6  0E00               	movlw	0
 14926  007FF8  0101               	movlb	1	; () banked
 14927  007FFA  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14928  007FFC  0E04               	movlw	4
 14929  007FFE  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14930                           
 14931                           ; BSR set to: 1
 14932                           ;inputs_MC50.c: 806:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 14933  008000  0E0E               	movlw	14
 14934  008002  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14935  008004  0E00               	movlw	0
 14936  008006  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14937  008008  0E14               	movlw	20
 14938  00800A  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14939  00800C  0E12               	movlw	18
 14940  00800E  EC9A  F04C         	call	_SetSegmentValueIntermitent
 14941  008012  D7CC               	goto	l21603
 14942  008014                     l21639:
 14943                           
 14944                           ;inputs_MC50.c: 811:     {;inputs_MC50.c: 812:         return NO;
 14945  008014  0E00               	movlw	0
 14946  008016  0012               	return		;funcret
 14947  008018                     __end_of_GetSecurityStateInClosing:
 14948                           	callstack 0
 14949                           
 14950 ;; *************** function _actionZone_Closed *****************
 14951 ;; Defined at:
 14952 ;;		line 327 in file "sm_ControlGate_MC50.c"
 14953 ;; Parameters:    Size  Location     Type
 14954 ;;		None
 14955 ;; Auto vars:     Size  Location     Type
 14956 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 14957 ;;  securityOpen    1   31[COMRAM] enum E10397
 14958 ;; Return value:  Size  Location     Type
 14959 ;;                  1    wreg      void 
 14960 ;; Registers used:
 14961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14962 ;; Tracked objects:
 14963 ;;		On entry : 3F/0
 14964 ;;		On exit  : 0/0
 14965 ;;		Unchanged: 0/0
 14966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14968 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14970 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14971 ;;Total ram usage:        2 bytes
 14972 ;; Hardware stack levels used: 1
 14973 ;; Hardware stack levels required when called: 8
 14974 ;; This function calls:
 14975 ;;		_GetOpenOrder
 14976 ;;		_GetSecurityStateInOpening
 14977 ;;		_InitFullAutoTime
 14978 ;;		_InitWalkAutoTime
 14979 ;;		_OpenFullOrder
 14980 ;;		_OpenWalkOrder
 14981 ;;		_WaitPreFlash
 14982 ;;		_sm_send_event
 14983 ;; This function is called by:
 14984 ;;		_sm_execute_ControlGate
 14985 ;; This function uses a non-reentrant model
 14986 ;;
 14987                           
 14988                           	psect	text39
 14989  007EC8                     __ptext39:
 14990                           	callstack 0
 14991  007EC8                     _actionZone_Closed:
 14992                           	callstack 21
 14993                           
 14994                           ; BSR set to: 0
 14995                           ;sm_ControlGate_MC50.c: 331:     if (main_stateMachine.current_state != st_MenuConfigura
      +                          tion) {
 14996                           
 14997                           ;incstack = 0
 14998  007EC8  0101               	movlb	1	; () banked
 14999  007ECA  05F1               	decf	_main_stateMachine& (0+255),w,b
 15000  007ECC  11F2               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 15001  007ECE  B4D8               	btfsc	status,2,c
 15002  007ED0  0012               	return	
 15003                           
 15004                           ; BSR set to: 1
 15005                           ;sm_ControlGate_MC50.c: 334:         TypeCMD typeOpenOrder = GetOpenOrder();
 15006  007ED2  EC72  F02F         	call	_GetOpenOrder	;wreg free
 15007  007ED6  6E21               	movwf	actionZone_Closed@typeOpenOrder^0,c
 15008                           
 15009                           ;sm_ControlGate_MC50.c: 336:         StateEnum securityOpening = GetSecurityStateInOpeni
      +                          ng();
 15010  007ED8  EC0C  F040         	call	_GetSecurityStateInOpening	;wreg free
 15011  007EDC  6E20               	movwf	actionZone_Closed@securityOpening^0,c
 15012                           
 15013                           ;sm_ControlGate_MC50.c: 338:         if (var_sys_NVM.homemPresente == 1) {
 15014  007EDE  0100               	movlb	0	; () banked
 15015  007EE0  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15016  007EE2  A4D8               	btfss	status,2,c
 15017  007EE4  D018               	goto	l23335
 15018                           
 15019                           ; BSR set to: 0
 15020                           ;sm_ControlGate_MC50.c: 344:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && securityOpening == NO) {
 15021  007EE6  0E03               	movlw	3
 15022  007EE8  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15023  007EEA  A4D8               	btfss	status,2,c
 15024  007EEC  0012               	return	
 15025                           
 15026                           ; BSR set to: 0
 15027  007EEE  0101               	movlb	1	; () banked
 15028  007EF0  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 15029  007EF2  A4D8               	btfss	status,2,c
 15030  007EF4  0012               	return	
 15031                           
 15032                           ; BSR set to: 1
 15033  007EF6  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15034  007EF8  A4D8               	btfss	status,2,c
 15035  007EFA  0012               	return	
 15036                           
 15037                           ; BSR set to: 1
 15038                           ;sm_ControlGate_MC50.c: 346:                 OpenFullOrder();
 15039  007EFC  ECF3  F04D         	call	_OpenFullOrder	;wreg free
 15040  007F00                     l23333:
 15041                           
 15042                           ;sm_ControlGate_MC50.c: 347:                 sm_send_event(&main_stateMachine, ev_MotorI
      +                          sOpen);
 15043  007F00  0EF1               	movlw	low _main_stateMachine
 15044  007F02  6E12               	movwf	sm_send_event@psm^0,c
 15045  007F04  0E01               	movlw	high _main_stateMachine
 15046  007F06  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15047  007F08  0E00               	movlw	0
 15048  007F0A  6E15               	movwf	(sm_send_event@event+1)^0,c
 15049  007F0C  0E11               	movlw	17
 15050  007F0E  6E14               	movwf	sm_send_event@event^0,c
 15051  007F10  ECDC  F047         	call	_sm_send_event	;wreg free
 15052  007F14  0012               	return	
 15053  007F16                     l23335:
 15054                           
 15055                           ; BSR set to: 0
 15056  007F16  0421               	decf	actionZone_Closed@typeOpenOrder^0,w,c
 15057  007F18  B4D8               	btfsc	status,2,c
 15058  007F1A  D004               	goto	u27160
 15059                           
 15060                           ; BSR set to: 0
 15061  007F1C  0E03               	movlw	3
 15062  007F1E  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15063  007F20  A4D8               	btfss	status,2,c
 15064  007F22  D017               	goto	l23355
 15065  007F24                     u27160:
 15066                           
 15067                           ; BSR set to: 0
 15068  007F24  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15069  007F26  A4D8               	btfss	status,2,c
 15070  007F28  D014               	goto	l23355
 15071                           
 15072                           ; BSR set to: 0
 15073  007F2A  0101               	movlb	1	; () banked
 15074  007F2C  511D               	movf	(_var_sys+29)& (0+255),w,b	;volatile
 15075  007F2E  A4D8               	btfss	status,2,c
 15076  007F30  D010               	goto	l23355
 15077                           
 15078                           ; BSR set to: 1
 15079                           ;sm_ControlGate_MC50.c: 353:             if (var_sys_NVM.flashRGBMode == rgb_pre){
 15080  007F32  0E02               	movlw	2
 15081  007F34  0100               	movlb	0	; () banked
 15082  007F36  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15083  007F38  A4D8               	btfss	status,2,c
 15084  007F3A  D006               	goto	l23349
 15085                           
 15086                           ; BSR set to: 0
 15087                           ;sm_ControlGate_MC50.c: 354:                 var_sys.preflashingcontrol = YES;
 15088  007F3C  0E01               	movlw	1
 15089  007F3E  0101               	movlb	1	; () banked
 15090  007F40  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15091                           
 15092                           ; BSR set to: 1
 15093                           ;sm_ControlGate_MC50.c: 355:                 WaitPreFlash();
 15094  007F42  ECC9  F045         	call	_WaitPreFlash	;wreg free
 15095                           
 15096                           ;sm_ControlGate_MC50.c: 356:             }
 15097  007F46  0012               	return	
 15098  007F48                     l23349:
 15099                           
 15100                           ; BSR set to: 0
 15101                           ;sm_ControlGate_MC50.c: 358:                 OpenFullOrder();
 15102  007F48  ECF3  F04D         	call	_OpenFullOrder	;wreg free
 15103                           
 15104                           ;sm_ControlGate_MC50.c: 359:                InitFullAutoTime();
 15105  007F4C  ECE7  F04E         	call	_InitFullAutoTime	;wreg free
 15106  007F50  D7D7               	goto	l23333
 15107  007F52                     l23355:
 15108  007F52  0E02               	movlw	2
 15109  007F54  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15110  007F56  A4D8               	btfss	status,2,c
 15111  007F58  0012               	return	
 15112  007F5A  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15113  007F5C  A4D8               	btfss	status,2,c
 15114  007F5E  0012               	return	
 15115  007F60  0100               	movlb	0	; () banked
 15116  007F62  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15117  007F64  B4D8               	btfsc	status,2,c
 15118  007F66  0012               	return	
 15119                           
 15120                           ; BSR set to: 0
 15121                           ;sm_ControlGate_MC50.c: 367:             OpenWalkOrder();
 15122  007F68  EC71  F046         	call	_OpenWalkOrder	;wreg free
 15123                           
 15124                           ;sm_ControlGate_MC50.c: 368:             InitWalkAutoTime();
 15125  007F6C  EC6C  F04F         	call	_InitWalkAutoTime	;wreg free
 15126  007F70  D7C7               	goto	l23333
 15127  007F72                     __end_of_actionZone_Closed:
 15128                           	callstack 0
 15129                           
 15130 ;; *************** function _WaitPreFlash *****************
 15131 ;; Defined at:
 15132 ;;		line 41 in file "sm_ControlGate_MC50.c"
 15133 ;; Parameters:    Size  Location     Type
 15134 ;;		None
 15135 ;; Auto vars:     Size  Location     Type
 15136 ;;		None
 15137 ;; Return value:  Size  Location     Type
 15138 ;;                  1    wreg      void 
 15139 ;; Registers used:
 15140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15141 ;; Tracked objects:
 15142 ;;		On entry : 3F/1
 15143 ;;		On exit  : 3F/1
 15144 ;;		Unchanged: 0/0
 15145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15150 ;;Total ram usage:        0 bytes
 15151 ;; Hardware stack levels used: 1
 15152 ;; Hardware stack levels required when called: 7
 15153 ;; This function calls:
 15154 ;;		_InitFullAutoTime
 15155 ;;		_OpenFullOrder
 15156 ;;		_sm_send_event
 15157 ;; This function is called by:
 15158 ;;		_sm_execute_ControlGate
 15159 ;;		_actionZone_Closed
 15160 ;; This function uses a non-reentrant model
 15161 ;;
 15162                           
 15163                           	psect	text40
 15164  008B92                     __ptext40:
 15165                           	callstack 0
 15166  008B92                     _WaitPreFlash:
 15167                           	callstack 21
 15168                           
 15169                           ; BSR set to: 1
 15170                           ;sm_ControlGate_MC50.c: 44:     if ((var_sys_NVM.flashRGBMode == rgb_pre) && (var_sys.pr
      +                          eflashingcontrol == YES) && (ts_system.timewaitFlashRGB <=0) && (aux_i == 0))
 15171                           
 15172                           ;incstack = 0
 15173  008B92  0E02               	movlw	2
 15174  008B94  0100               	movlb	0	; () banked
 15175  008B96  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15176  008B98  A4D8               	btfss	status,2,c
 15177  008B9A  D014               	goto	l21853
 15178                           
 15179                           ; BSR set to: 0
 15180  008B9C  0101               	movlb	1	; () banked
 15181  008B9E  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 15182  008BA0  A4D8               	btfss	status,2,c
 15183  008BA2  D010               	goto	l21853
 15184                           
 15185                           ; BSR set to: 1
 15186  008BA4  BFE5               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15187  008BA6  D005               	goto	u25460
 15188  008BA8  51E5               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15189  008BAA  E10C               	bnz	l21853
 15190  008BAC  05E4               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15191  008BAE  B0D8               	btfsc	status,0,c
 15192  008BB0  D009               	goto	l21853
 15193  008BB2                     u25460:
 15194                           
 15195                           ; BSR set to: 1
 15196  008BB2  5190               	movf	_aux_i& (0+255),w,b
 15197  008BB4  A4D8               	btfss	status,2,c
 15198  008BB6  D006               	goto	l21853
 15199                           
 15200                           ; BSR set to: 1
 15201                           ;sm_ControlGate_MC50.c: 45:         {;sm_ControlGate_MC50.c: 46:             ts_system.t
      +                          imewaitFlashRGB = (1000/50) *3;
 15202  008BB8  0E00               	movlw	0
 15203  008BBA  6FE5               	movwf	(_ts_system+71)& (0+255),b	;volatile
 15204  008BBC  0E3C               	movlw	60
 15205  008BBE  6FE4               	movwf	(_ts_system+70)& (0+255),b	;volatile
 15206                           
 15207                           ;sm_ControlGate_MC50.c: 47:             aux_i=1;
 15208  008BC0  0E01               	movlw	1
 15209  008BC2  6F90               	movwf	_aux_i& (0+255),b
 15210  008BC4                     l21853:
 15211                           
 15212                           ;sm_ControlGate_MC50.c: 50:     if ((ts_system.timewaitFlashRGB <= 0) && (aux_i==1 ))
 15213  008BC4  0101               	movlb	1	; () banked
 15214  008BC6  BFE5               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15215  008BC8  D005               	goto	u25480
 15216  008BCA  51E5               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15217  008BCC  E119               	bnz	l2585
 15218  008BCE  05E4               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15219  008BD0  B0D8               	btfsc	status,0,c
 15220  008BD2  0012               	return	
 15221  008BD4                     u25480:
 15222                           
 15223                           ; BSR set to: 1
 15224  008BD4  0590               	decf	_aux_i& (0+255),w,b
 15225  008BD6  A4D8               	btfss	status,2,c
 15226  008BD8  0012               	return	
 15227                           
 15228                           ; BSR set to: 1
 15229                           ;sm_ControlGate_MC50.c: 51:         {;sm_ControlGate_MC50.c: 54:                 var_sys
      +                          .preflashingcontrol = NO;
 15230  008BDA  0E00               	movlw	0
 15231  008BDC  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15232                           
 15233                           ; BSR set to: 1
 15234                           ;sm_ControlGate_MC50.c: 55:                 OpenFullOrder();
 15235  008BDE  ECF3  F04D         	call	_OpenFullOrder	;wreg free
 15236                           
 15237                           ;sm_ControlGate_MC50.c: 56:                 InitFullAutoTime();
 15238  008BE2  ECE7  F04E         	call	_InitFullAutoTime	;wreg free
 15239                           
 15240                           ; BSR set to: 0
 15241                           ;sm_ControlGate_MC50.c: 57:                 sm_send_event(&main_stateMachine, ev_MotorIs
      +                          Open);
 15242  008BE6  0EF1               	movlw	low _main_stateMachine
 15243  008BE8  6E12               	movwf	sm_send_event@psm^0,c
 15244  008BEA  0E01               	movlw	high _main_stateMachine
 15245  008BEC  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15246  008BEE  0E00               	movlw	0
 15247  008BF0  6E15               	movwf	(sm_send_event@event+1)^0,c
 15248  008BF2  0E11               	movlw	17
 15249  008BF4  6E14               	movwf	sm_send_event@event^0,c
 15250  008BF6  ECDC  F047         	call	_sm_send_event	;wreg free
 15251                           
 15252                           ;sm_ControlGate_MC50.c: 58:                 aux_i=0;
 15253  008BFA  0E00               	movlw	0
 15254  008BFC  0101               	movlb	1	; () banked
 15255  008BFE  6F90               	movwf	_aux_i& (0+255),b
 15256  008C00                     l2585:
 15257                           
 15258                           ; BSR set to: 1
 15259  008C00  0012               	return		;funcret
 15260  008C02                     __end_of_WaitPreFlash:
 15261                           	callstack 0
 15262                           
 15263 ;; *************** function _OpenFullOrder *****************
 15264 ;; Defined at:
 15265 ;;		line 29 in file "sm_ControlGate_MC50.c"
 15266 ;; Parameters:    Size  Location     Type
 15267 ;;		None
 15268 ;; Auto vars:     Size  Location     Type
 15269 ;;		None
 15270 ;; Return value:  Size  Location     Type
 15271 ;;                  1    wreg      void 
 15272 ;; Registers used:
 15273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15274 ;; Tracked objects:
 15275 ;;		On entry : 3E/1
 15276 ;;		On exit  : 3E/0
 15277 ;;		Unchanged: 0/0
 15278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15283 ;;Total ram usage:        0 bytes
 15284 ;; Hardware stack levels used: 1
 15285 ;; Hardware stack levels required when called: 6
 15286 ;; This function calls:
 15287 ;;		_InitSoftStart
 15288 ;;		_sm_send_event
 15289 ;; This function is called by:
 15290 ;;		_WaitPreFlash
 15291 ;;		_actionZone_Closed
 15292 ;;		_actionZone_Opened
 15293 ;;		_actionZone_Closing
 15294 ;; This function uses a non-reentrant model
 15295 ;;
 15296                           
 15297                           	psect	text41
 15298  009BE6                     __ptext41:
 15299                           	callstack 0
 15300  009BE6                     _OpenFullOrder:
 15301                           	callstack 22
 15302                           
 15303                           ;sm_ControlGate_MC50.c: 32:     var_sys.StateMotor = InOpenFull;
 15304                           
 15305                           ; BSR set to: 1
 15306                           ;incstack = 0
 15307  009BE6  0E01               	movlw	1
 15308  009BE8  0101               	movlb	1	; () banked
 15309  009BEA  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15310                           
 15311                           ; BSR set to: 1
 15312                           ;sm_ControlGate_MC50.c: 33:     sm_send_event(&controlGate_stateMachine, ev_OpenGate);
 15313  009BEC  0EE6               	movlw	low _controlGate_stateMachine
 15314  009BEE  6E12               	movwf	sm_send_event@psm^0,c
 15315  009BF0  0E01               	movlw	high _controlGate_stateMachine
 15316  009BF2  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15317  009BF4  0E00               	movlw	0
 15318  009BF6  6E15               	movwf	(sm_send_event@event+1)^0,c
 15319  009BF8  0E0C               	movlw	12
 15320  009BFA  6E14               	movwf	sm_send_event@event^0,c
 15321  009BFC  ECDC  F047         	call	_sm_send_event	;wreg free
 15322                           
 15323                           ;sm_ControlGate_MC50.c: 34:     var_sys.LastState = InOpenFull;
 15324  009C00  0E01               	movlw	1
 15325  009C02  0101               	movlb	1	; () banked
 15326  009C04  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15327                           
 15328                           ; BSR set to: 1
 15329                           ;sm_ControlGate_MC50.c: 35:     InitSoftStart();
 15330  009C06  EC0A  F048         	call	_InitSoftStart	;wreg free
 15331  009C0A  0012               	return		;funcret
 15332  009C0C                     __end_of_OpenFullOrder:
 15333                           	callstack 0
 15334                           
 15335 ;; *************** function _InitFullAutoTime *****************
 15336 ;; Defined at:
 15337 ;;		line 109 in file "sm_ControlGate_MC50.c"
 15338 ;; Parameters:    Size  Location     Type
 15339 ;;		None
 15340 ;; Auto vars:     Size  Location     Type
 15341 ;;		None
 15342 ;; Return value:  Size  Location     Type
 15343 ;;                  1    wreg      void 
 15344 ;; Registers used:
 15345 ;;		wreg, status,2, status,0, prodl, prodh
 15346 ;; Tracked objects:
 15347 ;;		On entry : 3E/0
 15348 ;;		On exit  : 3F/0
 15349 ;;		Unchanged: 0/0
 15350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15355 ;;Total ram usage:        0 bytes
 15356 ;; Hardware stack levels used: 1
 15357 ;; Hardware stack levels required when called: 4
 15358 ;; This function calls:
 15359 ;;		Nothing
 15360 ;; This function is called by:
 15361 ;;		_WaitPreFlash
 15362 ;;		_actionZone_Closed
 15363 ;;		_actionZone_Opening
 15364 ;;		_actionZone_Opened
 15365 ;;		_actionZone_Closing
 15366 ;; This function uses a non-reentrant model
 15367 ;;
 15368                           
 15369                           	psect	text42
 15370  009DCE                     __ptext42:
 15371                           	callstack 0
 15372  009DCE                     _InitFullAutoTime:
 15373                           	callstack 24
 15374                           
 15375                           ;sm_ControlGate_MC50.c: 111:     if (var_sys_NVM.homemPresente == 0) {
 15376                           
 15377                           ;incstack = 0
 15378  009DCE  0100               	movlb	0	; () banked
 15379  009DD0  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15380  009DD2  A4D8               	btfss	status,2,c
 15381  009DD4  0012               	return	
 15382                           
 15383                           ; BSR set to: 0
 15384                           ;sm_ControlGate_MC50.c: 112:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 15385  009DD6  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 15386  009DD8  0D14               	mullw	20
 15387  009DDA  CFF3 F1B0          	movff	prodl,_ts_system+18	;volatile
 15388  009DDE  CFF4 F1B1          	movff	prodh,_ts_system+19	;volatile
 15389                           
 15390                           ; BSR set to: 0
 15391                           ;sm_ControlGate_MC50.c: 113:         var_sys.AutoCloseActive = var_sys_NVM.autoTimeFullC
      +                          lose;
 15392  009DE2  C09D  F123         	movff	_var_sys_NVM+5,_var_sys+35	;volatile
 15393                           
 15394                           ; BSR set to: 0
 15395  009DE6  0012               	return		;funcret
 15396  009DE8                     __end_of_InitFullAutoTime:
 15397                           	callstack 0
 15398                           
 15399 ;; *************** function _OpenWalkOrder *****************
 15400 ;; Defined at:
 15401 ;;		line 71 in file "sm_ControlGate_MC50.c"
 15402 ;; Parameters:    Size  Location     Type
 15403 ;;		None
 15404 ;; Auto vars:     Size  Location     Type
 15405 ;;  diffTime        2   25[COMRAM] int 
 15406 ;; Return value:  Size  Location     Type
 15407 ;;                  1    wreg      void 
 15408 ;; Registers used:
 15409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15410 ;; Tracked objects:
 15411 ;;		On entry : 3E/1
 15412 ;;		On exit  : 3E/0
 15413 ;;		Unchanged: 0/0
 15414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15416 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15417 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15418 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15419 ;;Total ram usage:        4 bytes
 15420 ;; Hardware stack levels used: 1
 15421 ;; Hardware stack levels required when called: 6
 15422 ;; This function calls:
 15423 ;;		_InitSoftStart
 15424 ;;		_sm_send_event
 15425 ;; This function is called by:
 15426 ;;		_actionZone_Closed
 15427 ;;		_actionZone_Opened
 15428 ;;		_actionZone_Closing
 15429 ;; This function uses a non-reentrant model
 15430 ;;
 15431                           
 15432                           	psect	text43
 15433  008CE2                     __ptext43:
 15434                           	callstack 0
 15435  008CE2                     _OpenWalkOrder:
 15436                           	callstack 22
 15437                           
 15438                           ;sm_ControlGate_MC50.c: 72:     int diffTime = ((int) var_sys_NVM.walkTime * (1000/50)) 
      +                          - var_sys.PositionActual ;
 15439                           
 15440                           ; BSR set to: 0
 15441                           ;incstack = 0
 15442  008CE2  0100               	movlb	0	; () banked
 15443  008CE4  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15444  008CE6  0D14               	mullw	20
 15445  008CE8  CFF3 F018          	movff	prodl,??_OpenWalkOrder
 15446  008CEC  CFF4 F019          	movff	prodh,??_OpenWalkOrder+1
 15447  008CF0  0101               	movlb	1	; () banked
 15448  008CF2  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 15449  008CF4  5C18               	subwf	??_OpenWalkOrder^0,w,c
 15450  008CF6  6E1A               	movwf	OpenWalkOrder@diffTime^0,c
 15451  008CF8  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 15452  008CFA  5819               	subwfb	(??_OpenWalkOrder+1)^0,w,c
 15453  008CFC  6E1B               	movwf	(OpenWalkOrder@diffTime+1)^0,c
 15454                           
 15455                           ; BSR set to: 1
 15456                           ;sm_ControlGate_MC50.c: 74:     if (diffTime > 0) {
 15457  008CFE  BE1B               	btfsc	(OpenWalkOrder@diffTime+1)^0,7,c
 15458  008D00  D022               	goto	l21891
 15459  008D02  501B               	movf	(OpenWalkOrder@diffTime+1)^0,w,c
 15460  008D04  E103               	bnz	u25500
 15461  008D06  041A               	decf	OpenWalkOrder@diffTime^0,w,c
 15462  008D08  A0D8               	btfss	status,0,c
 15463  008D0A  D01D               	goto	l21891
 15464  008D0C                     u25500:
 15465                           
 15466                           ; BSR set to: 1
 15467                           ;sm_ControlGate_MC50.c: 76:         sm_send_event(&controlGate_stateMachine, ev_OpenGate
      +                          );
 15468  008D0C  0EE6               	movlw	low _controlGate_stateMachine
 15469  008D0E  6E12               	movwf	sm_send_event@psm^0,c
 15470  008D10  0E01               	movlw	high _controlGate_stateMachine
 15471  008D12  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15472  008D14  0E00               	movlw	0
 15473  008D16  6E15               	movwf	(sm_send_event@event+1)^0,c
 15474  008D18  0E0C               	movlw	12
 15475  008D1A  6E14               	movwf	sm_send_event@event^0,c
 15476  008D1C  ECDC  F047         	call	_sm_send_event	;wreg free
 15477                           
 15478                           ;sm_ControlGate_MC50.c: 77:         if (var_sys.Statedoorcontrol == st_Closed){
 15479  008D20  0101               	movlb	1	; () banked
 15480  008D22  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 15481  008D24  A4D8               	btfss	status,2,c
 15482  008D26  D005               	goto	l21885
 15483                           
 15484                           ; BSR set to: 1
 15485                           ;sm_ControlGate_MC50.c: 78:            ts_system.timeOpenWalk = diffTime;
 15486  008D28  C01A  F1AE         	movff	OpenWalkOrder@diffTime,_ts_system+16	;volatile
 15487  008D2C  C01B  F1AF         	movff	OpenWalkOrder@diffTime+1,_ts_system+17	;volatile
 15488                           
 15489                           ;sm_ControlGate_MC50.c: 79:         }
 15490  008D30  D006               	goto	l21887
 15491  008D32                     l21885:
 15492                           
 15493                           ; BSR set to: 1
 15494                           ;sm_ControlGate_MC50.c: 81:             ts_system.timeOpenWalk = diffTime + (1000/50);
 15495  008D32  0E14               	movlw	20
 15496  008D34  241A               	addwf	OpenWalkOrder@diffTime^0,w,c
 15497  008D36  6FAE               	movwf	(_ts_system+16)& (0+255),b	;volatile
 15498  008D38  0E00               	movlw	0
 15499  008D3A  201B               	addwfc	(OpenWalkOrder@diffTime+1)^0,w,c
 15500  008D3C  6FAF               	movwf	(_ts_system+17)& (0+255),b	;volatile
 15501  008D3E                     l21887:
 15502                           
 15503                           ; BSR set to: 1
 15504                           ;sm_ControlGate_MC50.c: 83:         var_sys.StateMotor = InOpenWalk;
 15505  008D3E  0E02               	movlw	2
 15506  008D40  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15507                           
 15508                           ; BSR set to: 1
 15509                           ;sm_ControlGate_MC50.c: 84:         var_sys.Timewalkisactived = YES;
 15510  008D42  0E01               	movlw	1
 15511  008D44  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 15512  008D46                     l21891:
 15513                           
 15514                           ; BSR set to: 1
 15515                           ;sm_ControlGate_MC50.c: 92:     var_sys.LastState = InOpenWalk;
 15516  008D46  0E02               	movlw	2
 15517  008D48  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15518                           
 15519                           ; BSR set to: 1
 15520                           ;sm_ControlGate_MC50.c: 93:     InitSoftStart();
 15521  008D4A  EC0A  F048         	call	_InitSoftStart	;wreg free
 15522  008D4E  0012               	return		;funcret
 15523  008D50                     __end_of_OpenWalkOrder:
 15524                           	callstack 0
 15525                           
 15526 ;; *************** function _sm_send_event *****************
 15527 ;; Defined at:
 15528 ;;		line 34 in file "sm_common_MC50.c"
 15529 ;; Parameters:    Size  Location     Type
 15530 ;;  psm             2   17[COMRAM] PTR struct .
 15531 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 15532 ;;  event           2   19[COMRAM] int 
 15533 ;; Auto vars:     Size  Location     Type
 15534 ;;		None
 15535 ;; Return value:  Size  Location     Type
 15536 ;;                  1    wreg      void 
 15537 ;; Registers used:
 15538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15539 ;; Tracked objects:
 15540 ;;		On entry : 0/0
 15541 ;;		On exit  : 0/0
 15542 ;;		Unchanged: 0/0
 15543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15544 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15546 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15547 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15548 ;;Total ram usage:        6 bytes
 15549 ;; Hardware stack levels used: 1
 15550 ;; Hardware stack levels required when called: 5
 15551 ;; This function calls:
 15552 ;;		_sm_get_current_state
 15553 ;; This function is called by:
 15554 ;;		_OpenFullOrder
 15555 ;;		_WaitPreFlash
 15556 ;;		_CloseOrder
 15557 ;;		_OpenWalkOrder
 15558 ;;		_StopOrder
 15559 ;;		_sm_execute_ControlGate
 15560 ;;		_actionZone_Closed
 15561 ;;		_actionZone_Opening
 15562 ;;		_actionZone_Closing
 15563 ;;		_sm_execute_ControlLearning
 15564 ;;		_sm_execute_main
 15565 ;;		_sm_execute_menuConfiguration
 15566 ;;		_setValueToEdit
 15567 ;;		_controlSelectRemote
 15568 ;;		_controlSaveRemote
 15569 ;; This function uses a non-reentrant model
 15570 ;;
 15571                           
 15572                           	psect	text44
 15573  008FB8                     __ptext44:
 15574                           	callstack 0
 15575  008FB8                     _sm_send_event:
 15576                           	callstack 24
 15577                           
 15578                           ;sm_common_MC50.c: 34: void sm_send_event(sm_t *psm, int event);sm_common_MC50.c: 35: {;
      +                          sm_common_MC50.c: 36:  if(( psm->parent_machine == ((void*)0)) || (sm_get_current_state(
      +                          psm->parent_machine)==psm->parent_state))
 15579                           
 15580                           ;incstack = 0
 15581  008FB8  EE20 F007          	lfsr	2,7
 15582  008FBC  5012               	movf	sm_send_event@psm^0,w,c
 15583  008FBE  26D9               	addwf	fsr2l,f,c
 15584  008FC0  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15585  008FC2  22DA               	addwfc	fsr2h,f,c
 15586  008FC4  50DE               	movf	postinc2,w,c
 15587  008FC6  10DE               	iorwf	postinc2,w,c
 15588  008FC8  B4D8               	btfsc	status,2,c
 15589  008FCA  D019               	goto	u23870
 15590  008FCC  EE20 F007          	lfsr	2,7
 15591  008FD0  5012               	movf	sm_send_event@psm^0,w,c
 15592  008FD2  26D9               	addwf	fsr2l,f,c
 15593  008FD4  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15594  008FD6  22DA               	addwfc	fsr2h,f,c
 15595  008FD8  CFDE F010          	movff	postinc2,sm_get_current_state@psm
 15596  008FDC  CFDD F011          	movff	postdec2,sm_get_current_state@psm+1
 15597  008FE0  EC8A  F04F         	call	_sm_get_current_state	;wreg free
 15598  008FE4  EE20 F009          	lfsr	2,9
 15599  008FE8  5012               	movf	sm_send_event@psm^0,w,c
 15600  008FEA  26D9               	addwf	fsr2l,f,c
 15601  008FEC  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15602  008FEE  22DA               	addwfc	fsr2h,f,c
 15603  008FF0  50DE               	movf	postinc2,w,c
 15604  008FF2  1810               	xorwf	?_sm_get_current_state^0,w,c
 15605  008FF4  E10E               	bnz	l3517
 15606  008FF6  50DE               	movf	postinc2,w,c
 15607  008FF8  1811               	xorwf	(?_sm_get_current_state+1)^0,w,c
 15608  008FFA  A4D8               	btfss	status,2,c
 15609  008FFC  0012               	return	
 15610  008FFE                     u23870:
 15611                           
 15612                           ;sm_common_MC50.c: 38:  {;sm_common_MC50.c: 39:   psm->last_event = event;
 15613  008FFE  EE20 F004          	lfsr	2,4
 15614  009002  5012               	movf	sm_send_event@psm^0,w,c
 15615  009004  26D9               	addwf	fsr2l,f,c
 15616  009006  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15617  009008  22DA               	addwfc	fsr2h,f,c
 15618  00900A  C014  FFDE         	movff	sm_send_event@event,postinc2
 15619  00900E  C015  FFDD         	movff	sm_send_event@event+1,postdec2
 15620  009012                     l3517:
 15621  009012  0012               	return		;funcret
 15622  009014                     __end_of_sm_send_event:
 15623                           	callstack 0
 15624                           
 15625 ;; *************** function _sm_get_current_state *****************
 15626 ;; Defined at:
 15627 ;;		line 30 in file "sm_common_MC50.c"
 15628 ;; Parameters:    Size  Location     Type
 15629 ;;  psm             2   15[COMRAM] PTR struct .
 15630 ;;		 -> NULL(0), 
 15631 ;; Auto vars:     Size  Location     Type
 15632 ;;		None
 15633 ;; Return value:  Size  Location     Type
 15634 ;;                  2   15[COMRAM] int 
 15635 ;; Registers used:
 15636 ;;		fsr2l, fsr2h
 15637 ;; Tracked objects:
 15638 ;;		On entry : 0/0
 15639 ;;		On exit  : 0/0
 15640 ;;		Unchanged: 0/0
 15641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15645 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15646 ;;Total ram usage:        2 bytes
 15647 ;; Hardware stack levels used: 1
 15648 ;; Hardware stack levels required when called: 4
 15649 ;; This function calls:
 15650 ;;		Nothing
 15651 ;; This function is called by:
 15652 ;;		_sm_send_event
 15653 ;; This function uses a non-reentrant model
 15654 ;;
 15655                           
 15656                           	psect	text45
 15657  009F14                     __ptext45:
 15658                           	callstack 0
 15659  009F14                     _sm_get_current_state:
 15660                           	callstack 24
 15661                           
 15662                           ;sm_common_MC50.c: 31:  return psm->current_state;
 15663                           
 15664                           ;incstack = 0
 15665  009F14  C010  FFD9         	movff	sm_get_current_state@psm,fsr2l
 15666  009F18  C011  FFDA         	movff	sm_get_current_state@psm+1,fsr2h
 15667  009F1C  CFDE F010          	movff	postinc2,?_sm_get_current_state
 15668  009F20  CFDD F011          	movff	postdec2,?_sm_get_current_state+1
 15669  009F24  0012               	return		;funcret
 15670  009F26                     __end_of_sm_get_current_state:
 15671                           	callstack 0
 15672                           
 15673 ;; *************** function _InitSoftStart *****************
 15674 ;; Defined at:
 15675 ;;		line 816 in file "sm_ControlGate_MC50.c"
 15676 ;; Parameters:    Size  Location     Type
 15677 ;;		None
 15678 ;; Auto vars:     Size  Location     Type
 15679 ;;		None
 15680 ;; Return value:  Size  Location     Type
 15681 ;;                  1    wreg      void 
 15682 ;; Registers used:
 15683 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15684 ;; Tracked objects:
 15685 ;;		On entry : 3F/1
 15686 ;;		On exit  : 3E/0
 15687 ;;		Unchanged: 0/0
 15688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15691 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15692 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15693 ;;Total ram usage:        1 bytes
 15694 ;; Hardware stack levels used: 1
 15695 ;; Hardware stack levels required when called: 5
 15696 ;; This function calls:
 15697 ;;		_GetMotorPower
 15698 ;; This function is called by:
 15699 ;;		_OpenFullOrder
 15700 ;;		_CloseOrder
 15701 ;;		_OpenWalkOrder
 15702 ;; This function uses a non-reentrant model
 15703 ;;
 15704                           
 15705                           	psect	text46
 15706  009014                     __ptext46:
 15707                           	callstack 0
 15708  009014                     _InitSoftStart:
 15709                           	callstack 22
 15710                           
 15711                           ; BSR set to: 1
 15712                           ;sm_ControlGate_MC50.c: 817:     if (var_sys_NVM.softStart != 0 && var_sys.AutoInversion
      +                          Active == NO) {
 15713                           
 15714                           ;incstack = 0
 15715  009014  0100               	movlb	0	; () banked
 15716  009016  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15717  009018  B4D8               	btfsc	status,2,c
 15718  00901A  0012               	return	
 15719                           
 15720                           ; BSR set to: 0
 15721  00901C  0101               	movlb	1	; () banked
 15722  00901E  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 15723  009020  A4D8               	btfss	status,2,c
 15724  009022  0012               	return	
 15725                           
 15726                           ; BSR set to: 1
 15727                           ;sm_ControlGate_MC50.c: 824:         var_sys.velocityFactorstop = 0;
 15728  009024  0E00               	movlw	0
 15729  009026  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 15730  009028  0E00               	movlw	0
 15731  00902A  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 15732                           
 15733                           ;sm_ControlGate_MC50.c: 825:         var_sys.velocityFactor = 0;
 15734  00902C  0E00               	movlw	0
 15735  00902E  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15736  009030  0E00               	movlw	0
 15737  009032  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15738                           
 15739                           ; BSR set to: 1
 15740                           ;sm_ControlGate_MC50.c: 826:         var_sys.velocityFactor = GetMotorPower();
 15741  009034  ECEC  F03D         	call	_GetMotorPower	;wreg free
 15742  009038  6E14               	movwf	??_InitSoftStart^0,c
 15743  00903A  5014               	movf	??_InitSoftStart^0,w,c
 15744  00903C  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15745  00903E  6B0F               	clrf	(_var_sys+15)& (0+255),b	;volatile
 15746                           
 15747                           ; BSR set to: 1
 15748                           ;sm_ControlGate_MC50.c: 827:         if ( var_sys.velocityFactor > (81) )
 15749  009040  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 15750  009042  D00A               	goto	l20773
 15751  009044  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 15752  009046  E104               	bnz	u23900
 15753  009048  0E52               	movlw	82
 15754  00904A  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 15755  00904C  A0D8               	btfss	status,0,c
 15756  00904E  D004               	goto	l20773
 15757  009050                     u23900:
 15758                           
 15759                           ; BSR set to: 1
 15760                           ;sm_ControlGate_MC50.c: 828:         {;sm_ControlGate_MC50.c: 829:             var_sys.v
      +                          elocityFactor = (81);
 15761  009050  0E00               	movlw	0
 15762  009052  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15763  009054  0E51               	movlw	81
 15764  009056  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15765  009058                     l20773:
 15766                           
 15767                           ; BSR set to: 1
 15768                           ;sm_ControlGate_MC50.c: 840:         ts_system.timeSoftStart = var_sys.velocityFactor + 
      +                          1;
 15769  009058  0E01               	movlw	1
 15770  00905A  250E               	addwf	(_var_sys+14)& (0+255),w,b	;volatile
 15771  00905C  6FB4               	movwf	(_ts_system+22)& (0+255),b	;volatile
 15772  00905E  0E00               	movlw	0
 15773  009060  210F               	addwfc	(_var_sys+15)& (0+255),w,b	;volatile
 15774  009062  6FB5               	movwf	(_ts_system+23)& (0+255),b	;volatile
 15775                           
 15776                           ;sm_ControlGate_MC50.c: 842:         var_sys.SoftStartDecrementControl = 10 - var_sys_NV
      +                          M.softStart;
 15777  009064  0100               	movlb	0	; () banked
 15778  009066  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15779  009068  080A               	sublw	10
 15780  00906A  0101               	movlb	1	; () banked
 15781  00906C  6F14               	movwf	(_var_sys+20)& (0+255),b	;volatile
 15782  00906E  0012               	return		;funcret
 15783  009070                     __end_of_InitSoftStart:
 15784                           	callstack 0
 15785                           
 15786 ;; *************** function _InitWalkAutoTime *****************
 15787 ;; Defined at:
 15788 ;;		line 103 in file "sm_ControlGate_MC50.c"
 15789 ;; Parameters:    Size  Location     Type
 15790 ;;		None
 15791 ;; Auto vars:     Size  Location     Type
 15792 ;;		None
 15793 ;; Return value:  Size  Location     Type
 15794 ;;                  1    wreg      void 
 15795 ;; Registers used:
 15796 ;;		wreg, status,2, status,0, prodl, prodh
 15797 ;; Tracked objects:
 15798 ;;		On entry : 0/1
 15799 ;;		On exit  : 3F/0
 15800 ;;		Unchanged: 0/0
 15801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15806 ;;Total ram usage:        0 bytes
 15807 ;; Hardware stack levels used: 1
 15808 ;; Hardware stack levels required when called: 4
 15809 ;; This function calls:
 15810 ;;		Nothing
 15811 ;; This function is called by:
 15812 ;;		_actionZone_Closed
 15813 ;;		_actionZone_Opening
 15814 ;;		_actionZone_Opened
 15815 ;;		_actionZone_Closing
 15816 ;; This function uses a non-reentrant model
 15817 ;;
 15818                           
 15819                           	psect	text47
 15820  009ED8                     __ptext47:
 15821                           	callstack 0
 15822  009ED8                     _InitWalkAutoTime:
 15823                           	callstack 24
 15824                           
 15825                           ;sm_ControlGate_MC50.c: 105:     ts_system.timeWaitToClose = ((int) var_sys_NVM.autoTime
      +                          WalkClose * (1000/50));
 15826                           
 15827                           ;incstack = 0
 15828  009ED8  0100               	movlb	0	; () banked
 15829  009EDA  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 15830  009EDC  0D14               	mullw	20
 15831  009EDE  CFF3 F1B0          	movff	prodl,_ts_system+18	;volatile
 15832  009EE2  CFF4 F1B1          	movff	prodh,_ts_system+19	;volatile
 15833                           
 15834                           ; BSR set to: 0
 15835                           ;sm_ControlGate_MC50.c: 106:     var_sys.AutoCloseActive = var_sys_NVM.autoTimeWalkClose
      +                          ;
 15836  009EE6  C09E  F123         	movff	_var_sys_NVM+6,_var_sys+35	;volatile
 15837                           
 15838                           ; BSR set to: 0
 15839  009EEA  0012               	return		;funcret
 15840  009EEC                     __end_of_InitWalkAutoTime:
 15841                           	callstack 0
 15842                           
 15843 ;; *************** function _GetSecurityStateInOpening *****************
 15844 ;; Defined at:
 15845 ;;		line 738 in file "inputs_MC50.c"
 15846 ;; Parameters:    Size  Location     Type
 15847 ;;		None
 15848 ;; Auto vars:     Size  Location     Type
 15849 ;;		None
 15850 ;; Return value:  Size  Location     Type
 15851 ;;                  1    wreg      enum E10564
 15852 ;; Registers used:
 15853 ;;		wreg, status,2, status,0, cstack
 15854 ;; Tracked objects:
 15855 ;;		On entry : 0/0
 15856 ;;		On exit  : 3E/0
 15857 ;;		Unchanged: 0/0
 15858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15863 ;;Total ram usage:        0 bytes
 15864 ;; Hardware stack levels used: 1
 15865 ;; Hardware stack levels required when called: 5
 15866 ;; This function calls:
 15867 ;;		_SetSegmentValueIntermitent
 15868 ;; This function is called by:
 15869 ;;		_actionZone_Closed
 15870 ;;		_actionZone_Opening
 15871 ;; This function uses a non-reentrant model
 15872 ;;
 15873                           
 15874                           	psect	text48
 15875  008018                     __ptext48:
 15876                           	callstack 0
 15877  008018                     _GetSecurityStateInOpening:
 15878                           	callstack 23
 15879                           
 15880                           ;inputs_MC50.c: 747:     if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBarI
      +                          sObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 1)&& (var_sys_NVM.Stopboton == 0
      +                          ))
 15881                           
 15882                           ; BSR set to: 0
 15883                           ;incstack = 0
 15884  008018  0100               	movlb	0	; () banked
 15885  00801A  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 15886  00801C  A4D8               	btfss	status,2,c
 15887  00801E  D01B               	goto	l21557
 15888                           
 15889                           ; BSR set to: 0
 15890  008020  0101               	movlb	1	; () banked
 15891  008022  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15892  008024  A4D8               	btfss	status,2,c
 15893  008026  D017               	goto	l21557
 15894                           
 15895                           ; BSR set to: 1
 15896  008028  0100               	movlb	0	; () banked
 15897  00802A  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 15898  00802C  A4D8               	btfss	status,2,c
 15899  00802E  D013               	goto	l21557
 15900                           
 15901                           ; BSR set to: 0
 15902  008030  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15903  008032  A4D8               	btfss	status,2,c
 15904  008034  D010               	goto	l21557
 15905                           
 15906                           ; BSR set to: 0
 15907                           ;inputs_MC50.c: 748:     {;inputs_MC50.c: 750:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15908  008036  0E00               	movlw	0
 15909  008038  0101               	movlb	1	; () banked
 15910  00803A  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15911  00803C  0E04               	movlw	4
 15912  00803E  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15913                           
 15914                           ; BSR set to: 1
 15915                           ;inputs_MC50.c: 751:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 15916  008040  0E0A               	movlw	10
 15917  008042  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15918  008044  0E00               	movlw	0
 15919  008046  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15920  008048  0E14               	movlw	20
 15921  00804A  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15922  00804C  0E12               	movlw	18
 15923  00804E  EC9A  F04C         	call	_SetSegmentValueIntermitent
 15924  008052                     l21551:
 15925                           
 15926                           ; BSR set to: 1
 15927                           ;inputs_MC50.c: 752:         return YES;
 15928  008052  0E01               	movlw	1
 15929  008054  0012               	return	
 15930  008056                     l21557:
 15931  008056  0100               	movlb	0	; () banked
 15932  008058  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15933  00805A  A4D8               	btfss	status,2,c
 15934  00805C  D013               	goto	l21571
 15935                           
 15936                           ; BSR set to: 0
 15937  00805E  0101               	movlb	1	; () banked
 15938  008060  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15939  008062  A4D8               	btfss	status,2,c
 15940  008064  D00F               	goto	l21571
 15941                           
 15942                           ; BSR set to: 1
 15943                           ;inputs_MC50.c: 756:     {;inputs_MC50.c: 758:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15944  008066  0E00               	movlw	0
 15945  008068  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15946  00806A  0E04               	movlw	4
 15947  00806C  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15948                           
 15949                           ; BSR set to: 1
 15950                           ;inputs_MC50.c: 759:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 15951  00806E  0E15               	movlw	21
 15952  008070  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15953  008072  0E00               	movlw	0
 15954  008074  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15955  008076  0E14               	movlw	20
 15956  008078  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15957  00807A  0E05               	movlw	5
 15958  00807C  EC9A  F04C         	call	_SetSegmentValueIntermitent
 15959                           
 15960                           ; BSR set to: 1
 15961                           ;inputs_MC50.c: 760:         return ST;
 15962  008080  0E02               	movlw	2
 15963  008082  0012               	return	
 15964  008084                     l21571:
 15965  008084  0100               	movlb	0	; () banked
 15966  008086  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 15967  008088  A4D8               	btfss	status,2,c
 15968  00808A  D017               	goto	l21587
 15969                           
 15970                           ; BSR set to: 0
 15971  00808C  0101               	movlb	1	; () banked
 15972  00808E  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 15973  008090  A4D8               	btfss	status,2,c
 15974  008092  D013               	goto	l21587
 15975                           
 15976                           ; BSR set to: 1
 15977  008094  0100               	movlb	0	; () banked
 15978  008096  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 15979  008098  A4D8               	btfss	status,2,c
 15980  00809A  D00F               	goto	l21587
 15981                           
 15982                           ; BSR set to: 0
 15983                           ;inputs_MC50.c: 764:     {;inputs_MC50.c: 766:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15984  00809C  0E00               	movlw	0
 15985  00809E  0101               	movlb	1	; () banked
 15986  0080A0  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15987  0080A2  0E04               	movlw	4
 15988  0080A4  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15989                           
 15990                           ; BSR set to: 1
 15991                           ;inputs_MC50.c: 767:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 15992  0080A6  0E0E               	movlw	14
 15993  0080A8  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15994  0080AA  0E00               	movlw	0
 15995  0080AC  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15996  0080AE  0E14               	movlw	20
 15997  0080B0  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15998  0080B2  0E12               	movlw	18
 15999  0080B4  EC9A  F04C         	call	_SetSegmentValueIntermitent
 16000  0080B8  D7CC               	goto	l21551
 16001  0080BA                     l21587:
 16002                           
 16003                           ;inputs_MC50.c: 771:     {;inputs_MC50.c: 772:         return NO;
 16004  0080BA  0E00               	movlw	0
 16005  0080BC  0012               	return		;funcret
 16006  0080BE                     __end_of_GetSecurityStateInOpening:
 16007                           	callstack 0
 16008                           
 16009 ;; *************** function _SetSegmentValueIntermitent *****************
 16010 ;; Defined at:
 16011 ;;		line 201 in file "outputs_MC50.c"
 16012 ;; Parameters:    Size  Location     Type
 16013 ;;  d1              1    wreg     unsigned char 
 16014 ;;  d2              1   15[COMRAM] unsigned char 
 16015 ;;  time            2   16[COMRAM] int 
 16016 ;; Auto vars:     Size  Location     Type
 16017 ;;  d1              1   18[COMRAM] unsigned char 
 16018 ;; Return value:  Size  Location     Type
 16019 ;;                  1    wreg      void 
 16020 ;; Registers used:
 16021 ;;		wreg, status,2, status,0
 16022 ;; Tracked objects:
 16023 ;;		On entry : 3E/0
 16024 ;;		On exit  : 3F/1
 16025 ;;		Unchanged: 0/0
 16026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16027 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16030 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16031 ;;Total ram usage:        4 bytes
 16032 ;; Hardware stack levels used: 1
 16033 ;; Hardware stack levels required when called: 4
 16034 ;; This function calls:
 16035 ;;		Nothing
 16036 ;; This function is called by:
 16037 ;;		_GetSecurityStateInOpening
 16038 ;;		_GetSecurityStateInClosing
 16039 ;;		_sm_execute_ControlGate
 16040 ;;		_actionZone_Opening
 16041 ;;		_actionZone_Closing
 16042 ;; This function uses a non-reentrant model
 16043 ;;
 16044                           
 16045                           	psect	text49
 16046  009934                     __ptext49:
 16047                           	callstack 0
 16048  009934                     _SetSegmentValueIntermitent:
 16049                           	callstack 24
 16050                           
 16051                           ;incstack = 0
 16052                           ;SetSegmentValueIntermitent@d1 stored from wreg
 16053  009934  6E13               	movwf	SetSegmentValueIntermitent@d1^0,c
 16054                           
 16055                           ;outputs_MC50.c: 201: void SetSegmentValueIntermitent(char d1, char d2,int time);outputs
      +                          _MC50.c: 202: {;outputs_MC50.c: 204:     if ( main_stateMachine.current_state != st_Menu
      +                          Configuration && (ts_system.timeoutMenu == 0 && button_struct.timer < (1000/50)))
 16056  009936  0101               	movlb	1	; () banked
 16057  009938  05F1               	decf	_main_stateMachine& (0+255),w,b
 16058  00993A  11F2               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 16059  00993C  B4D8               	btfsc	status,2,c
 16060  00993E  0012               	return	
 16061                           
 16062                           ; BSR set to: 1
 16063  009940  51AC               	movf	(_ts_system+14)& (0+255),w,b	;volatile
 16064  009942  11AD               	iorwf	(_ts_system+15)& (0+255),w,b	;volatile
 16065  009944  A4D8               	btfss	status,2,c
 16066  009946  0012               	return	
 16067                           
 16068                           ; BSR set to: 1
 16069  009948  0E14               	movlw	20
 16070  00994A  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16071  00994C  0012               	return	
 16072                           
 16073                           ; BSR set to: 1
 16074                           ;outputs_MC50.c: 205:     {;outputs_MC50.c: 206:         dispStruct.display_grp.value_di
      +                          splay1=d1;
 16075  00994E  C013  F072         	movff	SetSegmentValueIntermitent@d1,_dispStruct	;volatile
 16076                           
 16077                           ;outputs_MC50.c: 207:         dispStruct.display_grp.value_display2=d2;
 16078  009952  C010  F073         	movff	SetSegmentValueIntermitent@d2,_dispStruct+1	;volatile
 16079                           
 16080                           ;outputs_MC50.c: 208:         dispStruct.intermitentFreq=time;
 16081  009956  C011  F075         	movff	SetSegmentValueIntermitent@time,_dispStruct+3	;volatile
 16082  00995A  C012  F076         	movff	SetSegmentValueIntermitent@time+1,_dispStruct+4	;volatile
 16083                           
 16084                           ; BSR set to: 1
 16085  00995E  0012               	return		;funcret
 16086  009960                     __end_of_SetSegmentValueIntermitent:
 16087                           	callstack 0
 16088                           
 16089 ;; *************** function _GetOpenOrder *****************
 16090 ;; Defined at:
 16091 ;;		line 330 in file "inputs_MC50.c"
 16092 ;; Parameters:    Size  Location     Type
 16093 ;;		None
 16094 ;; Auto vars:     Size  Location     Type
 16095 ;;		None
 16096 ;; Return value:  Size  Location     Type
 16097 ;;                  1    wreg      enum E10539
 16098 ;; Registers used:
 16099 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16100 ;; Tracked objects:
 16101 ;;		On entry : 3E/1
 16102 ;;		On exit  : 0/0
 16103 ;;		Unchanged: 0/0
 16104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16109 ;;Total ram usage:        0 bytes
 16110 ;; Hardware stack levels used: 1
 16111 ;; Hardware stack levels required when called: 5
 16112 ;; This function calls:
 16113 ;;		_SetSegmentValueIntermitentMain
 16114 ;;		___lbdiv
 16115 ;; This function is called by:
 16116 ;;		_sm_execute_ControlGate
 16117 ;;		_actionZone_Closed
 16118 ;;		_actionZone_Opening
 16119 ;;		_actionZone_Opened
 16120 ;;		_actionZone_Closing
 16121 ;;		_sm_execute_ControlLearning
 16122 ;; This function uses a non-reentrant model
 16123 ;;
 16124                           
 16125                           	psect	text50
 16126  005EE4                     __ptext50:
 16127                           	callstack 0
 16128  005EE4                     _GetOpenOrder:
 16129                           	callstack 23
 16130                           
 16131                           ;inputs_MC50.c: 332:    if (var_sys.LearningIsEnabled == NO){
 16132                           
 16133                           ; BSR set to: 1
 16134                           ;incstack = 0
 16135  005EE4  0101               	movlb	1	; () banked
 16136  005EE6  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 16137  005EE8  A4D8               	btfss	status,2,c
 16138  005EEA  D0C0               	goto	l21527
 16139                           
 16140                           ; BSR set to: 1
 16141                           ;inputs_MC50.c: 334:        if(ts_system.TimeCurrentAlarm>0)
 16142  005EEC  BFC9               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 16143  005EEE  D019               	goto	l21419
 16144  005EF0  51C9               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 16145  005EF2  E103               	bnz	u24710
 16146  005EF4  05C8               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 16147  005EF6  A0D8               	btfss	status,0,c
 16148  005EF8  D014               	goto	l21419
 16149  005EFA                     u24710:
 16150                           
 16151                           ; BSR set to: 1
 16152                           ;inputs_MC50.c: 336:         {;inputs_MC50.c: 337:             SetSegmentValueIntermiten
      +                          tMain(dL,d1,(1000/50));
 16153  005EFA  0E01               	movlw	1
 16154  005EFC  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16155  005EFE  0E00               	movlw	0
 16156  005F00  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16157  005F02  0E14               	movlw	20
 16158  005F04  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16159  005F06  0E12               	movlw	18
 16160  005F08  EC76  F04F         	call	_SetSegmentValueIntermitentMain
 16161                           
 16162                           ;inputs_MC50.c: 338:             ts_system.timeSinalizationDigit=( 500/50);
 16163  005F0C  0E00               	movlw	0
 16164  005F0E  0101               	movlb	1	; () banked
 16165  005F10  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16166  005F12  0E0A               	movlw	10
 16167  005F14  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16168                           
 16169                           ; BSR set to: 1
 16170                           ;inputs_MC50.c: 339:             rfCMD.processed=1;
 16171  005F16  0E01               	movlw	1
 16172  005F18  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16173                           
 16174                           ; BSR set to: 1
 16175                           ;inputs_MC50.c: 340:             button_struct.processed=1;
 16176  005F1A  0E01               	movlw	1
 16177  005F1C  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16178  005F1E                     l21413:
 16179                           
 16180                           ;inputs_MC50.c: 341:             return NoCMD;
 16181  005F1E  0E00               	movlw	0
 16182  005F20  0012               	return	
 16183  005F22                     l21419:
 16184                           
 16185                           ; BSR set to: 1
 16186  005F22  0100               	movlb	0	; () banked
 16187  005F24  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16188  005F26  B4D8               	btfsc	status,2,c
 16189  005F28  D02F               	goto	l21453
 16190                           
 16191                           ; BSR set to: 0
 16192                           ;inputs_MC50.c: 344:         {;inputs_MC50.c: 345:             if(button_struct.current=
      +                          =0x35)
 16193  005F2A  0E35               	movlw	53
 16194  005F2C  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16195  005F2E  A4D8               	btfss	status,2,c
 16196  005F30  D017               	goto	l21437
 16197                           
 16198                           ; BSR set to: 0
 16199                           ;inputs_MC50.c: 346:             {;inputs_MC50.c: 347:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16200  005F32  0E00               	movlw	0
 16201  005F34  0101               	movlb	1	; () banked
 16202  005F36  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16203  005F38  0E0A               	movlw	10
 16204  005F3A  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16205                           
 16206                           ; BSR set to: 1
 16207                           ;inputs_MC50.c: 348:                 SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16208  005F3C  0E00               	movlw	0
 16209  005F3E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16210  005F40  0E00               	movlw	0
 16211  005F42  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16212  005F44  0E04               	movlw	4
 16213  005F46  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16214  005F48  0E12               	movlw	18
 16215  005F4A  EC76  F04F         	call	_SetSegmentValueIntermitentMain
 16216                           
 16217                           ;inputs_MC50.c: 349:                 if (var_sys_NVM.homemPresente == 2){
 16218  005F4E  0E02               	movlw	2
 16219  005F50  0100               	movlb	0	; () banked
 16220  005F52  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16221  005F54  A4D8               	btfss	status,2,c
 16222  005F56  D002               	goto	l21431
 16223  005F58                     u24740:
 16224                           
 16225                           ; BSR set to: 0
 16226                           ;inputs_MC50.c: 350:                    button_struct.processed=1;
 16227  005F58  0E01               	movlw	1
 16228  005F5A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16229  005F5C                     l21431:
 16230                           
 16231                           ; BSR set to: 0
 16232                           ;inputs_MC50.c: 352:                 return TypeFullOpen;
 16233  005F5C  0E03               	movlw	3
 16234  005F5E  0012               	return	
 16235  005F60                     l21437:
 16236                           
 16237                           ; BSR set to: 0
 16238  005F60  0E33               	movlw	51
 16239  005F62  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16240  005F64  A4D8               	btfss	status,2,c
 16241  005F66  D7DB               	goto	l21413
 16242                           
 16243                           ; BSR set to: 0
 16244                           ;inputs_MC50.c: 355:             {;inputs_MC50.c: 356:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16245  005F68  0E00               	movlw	0
 16246  005F6A  0101               	movlb	1	; () banked
 16247  005F6C  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16248  005F6E  0E0A               	movlw	10
 16249  005F70  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16250                           
 16251                           ; BSR set to: 1
 16252                           ;inputs_MC50.c: 357:                 SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16253  005F72  0E05               	movlw	5
 16254  005F74  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16255  005F76  0E00               	movlw	0
 16256  005F78  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16257  005F7A  0E04               	movlw	4
 16258  005F7C  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16259  005F7E  0E12               	movlw	18
 16260  005F80  EC76  F04F         	call	_SetSegmentValueIntermitentMain
 16261  005F84                     l21443:
 16262                           
 16263                           ;inputs_MC50.c: 359:                 return TypeFullClose;
 16264  005F84  0E04               	movlw	4
 16265  005F86  0012               	return	
 16266  005F88                     l21453:
 16267                           
 16268                           ; BSR set to: 0
 16269  005F88  0E35               	movlw	53
 16270  005F8A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16271  005F8C  A4D8               	btfss	status,2,c
 16272  005F8E  D016               	goto	l21475
 16273                           
 16274                           ; BSR set to: 0
 16275                           ;inputs_MC50.c: 371:         {;inputs_MC50.c: 372:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16276  005F90  0E00               	movlw	0
 16277  005F92  0101               	movlb	1	; () banked
 16278  005F94  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16279  005F96  0E28               	movlw	40
 16280  005F98  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16281                           
 16282                           ; BSR set to: 1
 16283                           ;inputs_MC50.c: 373:             SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16284  005F9A  0E00               	movlw	0
 16285  005F9C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16286  005F9E  0E00               	movlw	0
 16287  005FA0  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16288  005FA2  0E04               	movlw	4
 16289  005FA4  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16290  005FA6  0E12               	movlw	18
 16291  005FA8  EC76  F04F         	call	_SetSegmentValueIntermitentMain
 16292                           
 16293                           ;inputs_MC50.c: 374:             if(var_sys_NVM.logicDigital==1)
 16294  005FAC  0100               	movlb	0	; () banked
 16295  005FAE  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16296  005FB0  B4D8               	btfsc	status,2,c
 16297  005FB2  D7D2               	goto	u24740
 16298  005FB4                     l21469:
 16299                           
 16300                           ;inputs_MC50.c: 380:             {;inputs_MC50.c: 381:                 button_struct.pro
      +                          cessed=1;
 16301  005FB4  0E01               	movlw	1
 16302  005FB6  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16303                           
 16304                           ;inputs_MC50.c: 382:                 return TypeFull;
 16305  005FB8  0E01               	movlw	1
 16306  005FBA  0012               	return	
 16307  005FBC                     l21475:
 16308                           
 16309                           ; BSR set to: 0
 16310  005FBC  0E33               	movlw	51
 16311  005FBE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16312  005FC0  A4D8               	btfss	status,2,c
 16313  005FC2  D019               	goto	l21497
 16314                           
 16315                           ; BSR set to: 0
 16316                           ;inputs_MC50.c: 387:         {;inputs_MC50.c: 389:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16317  005FC4  0E00               	movlw	0
 16318  005FC6  0101               	movlb	1	; () banked
 16319  005FC8  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16320  005FCA  0E28               	movlw	40
 16321  005FCC  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16322                           
 16323                           ; BSR set to: 1
 16324                           ;inputs_MC50.c: 390:             SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16325  005FCE  0E05               	movlw	5
 16326  005FD0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16327  005FD2  0E00               	movlw	0
 16328  005FD4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16329  005FD6  0E04               	movlw	4
 16330  005FD8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16331  005FDA  0E12               	movlw	18
 16332  005FDC  EC76  F04F         	call	_SetSegmentValueIntermitentMain
 16333                           
 16334                           ;inputs_MC50.c: 391:             if(var_sys_NVM.logicDigital==1)
 16335  005FE0  0100               	movlb	0	; () banked
 16336  005FE2  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16337  005FE4  A4D8               	btfss	status,2,c
 16338  005FE6  D003               	goto	l21491
 16339                           
 16340                           ; BSR set to: 0
 16341                           ;inputs_MC50.c: 392:             {;inputs_MC50.c: 393:                  button_struct.pr
      +                          ocessed=1;
 16342  005FE8  0E01               	movlw	1
 16343  005FEA  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16344  005FEC  D7CB               	goto	l21443
 16345  005FEE                     l21491:
 16346                           
 16347                           ; BSR set to: 0
 16348                           ;inputs_MC50.c: 399:             {;inputs_MC50.c: 400:                  button_struct.pr
      +                          ocessed=1;
 16349  005FEE  0E01               	movlw	1
 16350  005FF0  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16351                           
 16352                           ; BSR set to: 0
 16353                           ;inputs_MC50.c: 402:                 return TypeWalk;
 16354  005FF2  0E02               	movlw	2
 16355  005FF4  0012               	return	
 16356  005FF6                     l21497:
 16357                           
 16358                           ; BSR set to: 0
 16359  005FF6  0E36               	movlw	54
 16360  005FF8  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16361  005FFA  A4D8               	btfss	status,2,c
 16362  005FFC  D00F               	goto	l21511
 16363                           
 16364                           ; BSR set to: 0
 16365                           ;inputs_MC50.c: 408:         {;inputs_MC50.c: 409:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16366  005FFE  0E00               	movlw	0
 16367  006000  0101               	movlb	1	; () banked
 16368  006002  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16369  006004  0E28               	movlw	40
 16370  006006  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16371                           
 16372                           ; BSR set to: 1
 16373                           ;inputs_MC50.c: 410:             SetSegmentValueIntermitentMain(dP,dU,( 200/50));
 16374  006008  0E13               	movlw	19
 16375  00600A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16376  00600C  0E00               	movlw	0
 16377  00600E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16378  006010  0E04               	movlw	4
 16379  006012  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16380  006014  0E10               	movlw	16
 16381  006016  EC76  F04F         	call	_SetSegmentValueIntermitentMain
 16382  00601A  D7CC               	goto	l21469
 16383  00601C                     l21511:
 16384                           
 16385                           ; BSR set to: 0
 16386                           ;inputs_MC50.c: 417:         {;inputs_MC50.c: 418:             if(rfCMD.currentType!=NoC
      +                          MD && rfCMD.currentType!=TypeProgrammingModeFull && rfCMD.currentType!=TypeProgrammingMo
      +                          deWalk )
 16387  00601C  503B               	movf	_rfCMD^0,w,c	;volatile
 16388  00601E  B4D8               	btfsc	status,2,c
 16389  006020  D023               	goto	l21523
 16390                           
 16391                           ; BSR set to: 0
 16392  006022  0E06               	movlw	6
 16393  006024  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16394  006026  B4D8               	btfsc	status,2,c
 16395  006028  D01F               	goto	l21523
 16396                           
 16397                           ; BSR set to: 0
 16398  00602A  0E05               	movlw	5
 16399  00602C  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16400  00602E  B4D8               	btfsc	status,2,c
 16401  006030  D01B               	goto	l21523
 16402                           
 16403                           ; BSR set to: 0
 16404                           ;inputs_MC50.c: 419:             {;inputs_MC50.c: 420:                 SetSegmentValueIn
      +                          termitentMain(rfCMD.currentPosMem/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),
      +                          ( 200/50));
 16405  006032  0E0A               	movlw	10
 16406  006034  6E10               	movwf	___lbdiv@divisor^0,c
 16407  006036  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16408  006038  ECCD  F04B         	call	___lbdiv
 16409  00603C  0DF6               	mullw	246
 16410  00603E  50F3               	movf	243,w,c
 16411  006040  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16412  006042  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16413  006044  0E00               	movlw	0
 16414  006046  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16415  006048  0E04               	movlw	4
 16416  00604A  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16417  00604C  0E0A               	movlw	10
 16418  00604E  6E10               	movwf	___lbdiv@divisor^0,c
 16419  006050  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16420  006052  ECCD  F04B         	call	___lbdiv
 16421  006056  EC76  F04F         	call	_SetSegmentValueIntermitentMain
 16422                           
 16423                           ;inputs_MC50.c: 421:                 ts_system.timeSinalizationDigit=(1000/50)*2;
 16424  00605A  0E00               	movlw	0
 16425  00605C  0101               	movlb	1	; () banked
 16426  00605E  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16427  006060  0E28               	movlw	40
 16428  006062  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16429                           
 16430                           ; BSR set to: 1
 16431                           ;inputs_MC50.c: 422:                 rfCMD.processed=1;
 16432  006064  0E01               	movlw	1
 16433  006066  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16434  006068                     l21523:
 16435                           
 16436                           ;inputs_MC50.c: 425:             return rfCMD.currentType;
 16437  006068  503B               	movf	_rfCMD^0,w,c	;volatile
 16438  00606A  0012               	return	
 16439  00606C                     l21527:
 16440                           
 16441                           ; BSR set to: 1
 16442                           ;inputs_MC50.c: 428:     {;inputs_MC50.c: 429:        if(rfCMD.currentType!=NoCMD ){
 16443  00606C  503B               	movf	_rfCMD^0,w,c	;volatile
 16444  00606E  B4D8               	btfsc	status,2,c
 16445  006070  D01B               	goto	l21535
 16446                           
 16447                           ; BSR set to: 1
 16448                           ;inputs_MC50.c: 430:                   SetSegmentValueIntermitentMain(rfCMD.currentPosMe
      +                          m/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),( 200/50));
 16449  006072  0E0A               	movlw	10
 16450  006074  6E10               	movwf	___lbdiv@divisor^0,c
 16451  006076  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16452  006078  ECCD  F04B         	call	___lbdiv
 16453  00607C  0DF6               	mullw	246
 16454  00607E  50F3               	movf	243,w,c
 16455  006080  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16456  006082  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16457  006084  0E00               	movlw	0
 16458  006086  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16459  006088  0E04               	movlw	4
 16460  00608A  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16461  00608C  0E0A               	movlw	10
 16462  00608E  6E10               	movwf	___lbdiv@divisor^0,c
 16463  006090  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16464  006092  ECCD  F04B         	call	___lbdiv
 16465  006096  EC76  F04F         	call	_SetSegmentValueIntermitentMain
 16466                           
 16467                           ;inputs_MC50.c: 431:                 ts_system.timeSinalizationDigit=(1000/50)*1;
 16468  00609A  0E00               	movlw	0
 16469  00609C  0101               	movlb	1	; () banked
 16470  00609E  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16471  0060A0  0E14               	movlw	20
 16472  0060A2  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16473                           
 16474                           ; BSR set to: 1
 16475                           ;inputs_MC50.c: 432:                 rfCMD.processed=1;
 16476  0060A4  0E01               	movlw	1
 16477  0060A6  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16478  0060A8                     l21535:
 16479                           
 16480                           ; BSR set to: 1
 16481                           ;inputs_MC50.c: 434:        return rfCMD.currentType;
 16482  0060A8  503B               	movf	_rfCMD^0,w,c	;volatile
 16483  0060AA  0012               	return		;funcret
 16484  0060AC                     __end_of_GetOpenOrder:
 16485                           	callstack 0
 16486                           
 16487 ;; *************** function ___lbdiv *****************
 16488 ;; Defined at:
 16489 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbdiv.c"
 16490 ;; Parameters:    Size  Location     Type
 16491 ;;  dividend        1    wreg     unsigned char 
 16492 ;;  divisor         1   15[COMRAM] unsigned char 
 16493 ;; Auto vars:     Size  Location     Type
 16494 ;;  dividend        1   16[COMRAM] unsigned char 
 16495 ;;  quotient        1   18[COMRAM] unsigned char 
 16496 ;;  counter         1   17[COMRAM] unsigned char 
 16497 ;; Return value:  Size  Location     Type
 16498 ;;                  1    wreg      unsigned char 
 16499 ;; Registers used:
 16500 ;;		wreg, status,2, status,0
 16501 ;; Tracked objects:
 16502 ;;		On entry : 0/0
 16503 ;;		On exit  : 0/0
 16504 ;;		Unchanged: 0/0
 16505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16506 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16507 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16509 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16510 ;;Total ram usage:        4 bytes
 16511 ;; Hardware stack levels used: 1
 16512 ;; Hardware stack levels required when called: 4
 16513 ;; This function calls:
 16514 ;;		Nothing
 16515 ;; This function is called by:
 16516 ;;		_GetOpenOrder
 16517 ;;		_sm_execute_menuConfiguration
 16518 ;; This function uses a non-reentrant model
 16519 ;;
 16520                           
 16521                           	psect	text51
 16522  00979A                     __ptext51:
 16523                           	callstack 0
 16524  00979A                     ___lbdiv:
 16525                           	callstack 24
 16526                           
 16527                           ;incstack = 0
 16528                           ;___lbdiv@dividend stored from wreg
 16529  00979A  6E11               	movwf	___lbdiv@dividend^0,c
 16530  00979C  0E00               	movlw	0
 16531  00979E  6E13               	movwf	___lbdiv@quotient^0,c
 16532  0097A0  5010               	movf	___lbdiv@divisor^0,w,c
 16533  0097A2  B4D8               	btfsc	status,2,c
 16534  0097A4  D015               	goto	l21283
 16535  0097A6  0E01               	movlw	1
 16536  0097A8  6E12               	movwf	___lbdiv@counter^0,c
 16537  0097AA  D003               	goto	l21271
 16538  0097AC                     l21267:
 16539  0097AC  90D8               	bcf	status,0,c
 16540  0097AE  3610               	rlcf	___lbdiv@divisor^0,f,c
 16541  0097B0  2A12               	incf	___lbdiv@counter^0,f,c
 16542  0097B2                     l21271:
 16543  0097B2  AE10               	btfss	___lbdiv@divisor^0,7,c
 16544  0097B4  D7FB               	goto	l21267
 16545  0097B6                     u24540:
 16546  0097B6  90D8               	bcf	status,0,c
 16547  0097B8  3613               	rlcf	___lbdiv@quotient^0,f,c
 16548  0097BA  5010               	movf	___lbdiv@divisor^0,w,c
 16549  0097BC  5C11               	subwf	___lbdiv@dividend^0,w,c
 16550  0097BE  A0D8               	btfss	status,0,c
 16551  0097C0  D003               	goto	l21279
 16552  0097C2  5010               	movf	___lbdiv@divisor^0,w,c
 16553  0097C4  5E11               	subwf	___lbdiv@dividend^0,f,c
 16554  0097C6  8013               	bsf	___lbdiv@quotient^0,0,c
 16555  0097C8                     l21279:
 16556  0097C8  90D8               	bcf	status,0,c
 16557  0097CA  3210               	rrcf	___lbdiv@divisor^0,f,c
 16558  0097CC  2E12               	decfsz	___lbdiv@counter^0,f,c
 16559  0097CE  D7F3               	goto	u24540
 16560  0097D0                     l21283:
 16561  0097D0  5013               	movf	___lbdiv@quotient^0,w,c
 16562  0097D2  0012               	return		;funcret
 16563  0097D4                     __end_of___lbdiv:
 16564                           	callstack 0
 16565                           
 16566 ;; *************** function _SetSegmentValueIntermitentMain *****************
 16567 ;; Defined at:
 16568 ;;		line 193 in file "outputs_MC50.c"
 16569 ;; Parameters:    Size  Location     Type
 16570 ;;  d1              1    wreg     unsigned char 
 16571 ;;  d2              1   27[COMRAM] unsigned char 
 16572 ;;  time            2   28[COMRAM] int 
 16573 ;; Auto vars:     Size  Location     Type
 16574 ;;  d1              1   30[COMRAM] unsigned char 
 16575 ;; Return value:  Size  Location     Type
 16576 ;;                  1    wreg      void 
 16577 ;; Registers used:
 16578 ;;		wreg
 16579 ;; Tracked objects:
 16580 ;;		On entry : 0/1
 16581 ;;		On exit  : 0/0
 16582 ;;		Unchanged: 0/0
 16583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16584 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16585 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16587 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16588 ;;Total ram usage:        4 bytes
 16589 ;; Hardware stack levels used: 1
 16590 ;; Hardware stack levels required when called: 4
 16591 ;; This function calls:
 16592 ;;		Nothing
 16593 ;; This function is called by:
 16594 ;;		_GetOpenOrder
 16595 ;;		_sm_execute_main
 16596 ;;		_sm_execute_menuConfiguration
 16597 ;;		_load_New_Menu
 16598 ;;		_controlSelectRemote
 16599 ;;		_controlSaveRemote
 16600 ;; This function uses a non-reentrant model
 16601 ;;
 16602                           
 16603                           	psect	text52
 16604  009EEC                     __ptext52:
 16605                           	callstack 0
 16606  009EEC                     _SetSegmentValueIntermitentMain:
 16607                           	callstack 22
 16608                           
 16609                           ;incstack = 0
 16610                           ;SetSegmentValueIntermitentMain@d1 stored from wreg
 16611  009EEC  6E1F               	movwf	SetSegmentValueIntermitentMain@d1^0,c
 16612                           
 16613                           ;outputs_MC50.c: 193: void SetSegmentValueIntermitentMain(char d1, char d2,int time);out
      +                          puts_MC50.c: 194: {;outputs_MC50.c: 195:     dispStruct.display_grp.value_display1=d1;
 16614  009EEE  C01F  F072         	movff	SetSegmentValueIntermitentMain@d1,_dispStruct	;volatile
 16615                           
 16616                           ;outputs_MC50.c: 196:     dispStruct.display_grp.value_display2=d2;
 16617  009EF2  C01C  F073         	movff	SetSegmentValueIntermitentMain@d2,_dispStruct+1	;volatile
 16618                           
 16619                           ;outputs_MC50.c: 197:     dispStruct.intermitentFreq=time;
 16620  009EF6  C01D  F075         	movff	SetSegmentValueIntermitentMain@time,_dispStruct+3	;volatile
 16621  009EFA  C01E  F076         	movff	SetSegmentValueIntermitentMain@time+1,_dispStruct+4	;volatile
 16622  009EFE  0012               	return		;funcret
 16623  009F00                     __end_of_SetSegmentValueIntermitentMain:
 16624                           	callstack 0
 16625                           
 16626 ;; *************** function _readbutton *****************
 16627 ;; Defined at:
 16628 ;;		line 471 in file "inputs_MC50.c"
 16629 ;; Parameters:    Size  Location     Type
 16630 ;;		None
 16631 ;; Auto vars:     Size  Location     Type
 16632 ;;		None
 16633 ;; Return value:  Size  Location     Type
 16634 ;;                  1    wreg      void 
 16635 ;; Registers used:
 16636 ;;		wreg, status,2, status,0
 16637 ;; Tracked objects:
 16638 ;;		On entry : 3F/1
 16639 ;;		On exit  : 3F/1
 16640 ;;		Unchanged: 0/0
 16641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16646 ;;Total ram usage:        0 bytes
 16647 ;; Hardware stack levels used: 1
 16648 ;; Hardware stack levels required when called: 4
 16649 ;; This function calls:
 16650 ;;		Nothing
 16651 ;; This function is called by:
 16652 ;;		_main
 16653 ;; This function uses a non-reentrant model
 16654 ;;
 16655                           
 16656                           	psect	text53
 16657  008DBE                     __ptext53:
 16658                           	callstack 0
 16659  008DBE                     _readbutton:
 16660                           	callstack 26
 16661                           
 16662                           ; BSR set to: 1
 16663                           ;inputs_MC50.c: 474:  static unsigned char key1=0, key2=0;;inputs_MC50.c: 479:  key2 = (
      +                           PORTB & 0x37 );
 16664                           
 16665                           ;incstack = 0
 16666  008DBE  508E               	movf	142,w,c	;volatile
 16667  008DC0  0B37               	andlw	55
 16668  008DC2  6F9A               	movwf	readbutton@key2& (0+255),b
 16669  008DC4  F000               	nop		;# 
 16670  008DC6  F000               	nop		;# 
 16671  008DC8  F000               	nop		;# 
 16672                           
 16673                           ;inputs_MC50.c: 483:  key1 = ( PORTB & 0x37 );
 16674  008DCA  508E               	movf	142,w,c	;volatile
 16675  008DCC  0B37               	andlw	55
 16676  008DCE  0100               	movlb	0	; () banked
 16677  008DD0  6F86               	movwf	readbutton@key1& (0+255),b
 16678                           
 16679                           ;inputs_MC50.c: 485:  if ( key2 == key1 )
 16680  008DD2  5186               	movf	readbutton@key1& (0+255),w,b
 16681  008DD4  0101               	movlb	1	; () banked
 16682  008DD6  199A               	xorwf	readbutton@key2& (0+255),w,b
 16683  008DD8  A4D8               	btfss	status,2,c
 16684  008DDA  D003               	goto	l24877
 16685                           
 16686                           ; BSR set to: 1
 16687                           ;inputs_MC50.c: 486:  {;inputs_MC50.c: 487:         button_struct.current = key1;
 16688  008DDC  C086  F04D         	movff	readbutton@key1,_button_struct+1	;volatile
 16689                           
 16690                           ;inputs_MC50.c: 488:  }
 16691  008DE0  D002               	goto	l24879
 16692  008DE2                     l24877:
 16693                           
 16694                           ; BSR set to: 1
 16695                           ;inputs_MC50.c: 490:     {;inputs_MC50.c: 491:         button_struct.current = 0x37;
 16696  008DE2  0E37               	movlw	55
 16697  008DE4  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16698  008DE6                     l24879:
 16699                           
 16700                           ; BSR set to: 1
 16701                           ;inputs_MC50.c: 494:     if ( button_struct.current == 0x37 || ( button_struct.current !
      +                          = button_struct.old && button_struct.current == 0x00))
 16702  008DE6  0E37               	movlw	55
 16703  008DE8  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16704  008DEA  B4D8               	btfsc	status,2,c
 16705  008DEC  D007               	goto	u30290
 16706                           
 16707                           ; BSR set to: 1
 16708  008DEE  504C               	movf	_button_struct^0,w,c	;volatile
 16709  008DF0  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16710  008DF2  B4D8               	btfsc	status,2,c
 16711  008DF4  D007               	goto	l24887
 16712                           
 16713                           ; BSR set to: 1
 16714  008DF6  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 16715  008DF8  A4D8               	btfss	status,2,c
 16716  008DFA  D004               	goto	l24887
 16717  008DFC                     u30290:
 16718                           
 16719                           ; BSR set to: 1
 16720                           ;inputs_MC50.c: 495:  {;inputs_MC50.c: 496:   button_struct.processed=0;
 16721  008DFC  0E00               	movlw	0
 16722  008DFE  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16723                           
 16724                           ;inputs_MC50.c: 497:         button_struct.timer=0;
 16725  008E00  0E00               	movlw	0
 16726  008E02  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16727  008E04                     l24887:
 16728                           
 16729                           ; BSR set to: 1
 16730                           ;inputs_MC50.c: 500:  if ( button_struct.current != 0x37 )
 16731  008E04  0E37               	movlw	55
 16732  008E06  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16733  008E08  B4D8               	btfsc	status,2,c
 16734  008E0A  D007               	goto	l24895
 16735                           
 16736                           ; BSR set to: 1
 16737                           ;inputs_MC50.c: 501:  {;inputs_MC50.c: 502:   button_struct.old = button_struct.current;
 16738  008E0C  C04D  F04C         	movff	_button_struct+1,_button_struct	;volatile
 16739                           
 16740                           ; BSR set to: 1
 16741                           ;inputs_MC50.c: 504:         if ( button_struct.timer < 250 )
 16742  008E10  0EFA               	movlw	250
 16743  008E12  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16744  008E14  D004               	goto	l24897
 16745                           
 16746                           ; BSR set to: 1
 16747                           ;inputs_MC50.c: 505:         {;inputs_MC50.c: 506:             button_struct.timer++;
 16748  008E16  2A4E               	incf	(_button_struct+2)^0,f,c	;volatile
 16749  008E18  D002               	goto	l24897
 16750  008E1A                     l24895:
 16751                           
 16752                           ; BSR set to: 1
 16753                           ;inputs_MC50.c: 515:  {;inputs_MC50.c: 516:   button_struct.timer=0;
 16754  008E1A  0E00               	movlw	0
 16755  008E1C  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16756  008E1E                     l24897:
 16757                           
 16758                           ; BSR set to: 1
 16759                           ;inputs_MC50.c: 520:  if ( button_struct.processed == 1 )
 16760  008E1E  044F               	decf	(_button_struct+3)^0,w,c	;volatile
 16761  008E20  A4D8               	btfss	status,2,c
 16762  008E22  0012               	return	
 16763                           
 16764                           ; BSR set to: 1
 16765                           ;inputs_MC50.c: 521:  {;inputs_MC50.c: 522:   button_struct.current = 0x37;
 16766  008E24  0E37               	movlw	55
 16767  008E26  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16768                           
 16769                           ; BSR set to: 1
 16770  008E28  0012               	return		;funcret
 16771  008E2A                     __end_of_readbutton:
 16772                           	callstack 0
 16773                           
 16774 ;; *************** function _read_package *****************
 16775 ;; Defined at:
 16776 ;;		line 21 in file "eusartpackage.c"
 16777 ;; Parameters:    Size  Location     Type
 16778 ;;		None
 16779 ;; Auto vars:     Size  Location     Type
 16780 ;;  package         7   23[COMRAM] struct package_t
 16781 ;; Return value:  Size  Location     Type
 16782 ;;                  7   16[COMRAM] struct package_t
 16783 ;; Registers used:
 16784 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 16785 ;; Tracked objects:
 16786 ;;		On entry : 3F/0
 16787 ;;		On exit  : 3F/E
 16788 ;;		Unchanged: 0/0
 16789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16790 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16791 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16793 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16794 ;;Total ram usage:       14 bytes
 16795 ;; Hardware stack levels used: 1
 16796 ;; Hardware stack levels required when called: 5
 16797 ;; This function calls:
 16798 ;;		_EUSART1_Read
 16799 ;; This function is called by:
 16800 ;;		_main
 16801 ;; This function uses a non-reentrant model
 16802 ;;
 16803                           
 16804                           	psect	text54
 16805  009380                     __ptext54:
 16806                           	callstack 0
 16807  009380                     _read_package:
 16808                           	callstack 25
 16809                           
 16810                           ; BSR set to: 0
 16811                           ;eusartpackage.c: 22:         struct package_t package;;eusartpackage.c: 24:         if(
      +                          EUSART1_Read()!=0x0A){
 16812                           
 16813                           ; BSR set to: 1
 16814                           ;incstack = 0
 16815  009380  EC83  F04A         	call	_EUSART1_Read	;wreg free
 16816  009384  0A0A               	xorlw	10
 16817  009386  B4D8               	btfsc	status,2,c
 16818  009388  D00C               	goto	l25055
 16819  00938A                     u30820:
 16820                           
 16821                           ; BSR set to: 14
 16822                           ;eusartpackage.c: 25:             package.valid=0;
 16823  00938A  0E00               	movlw	0
 16824  00938C  6E1E               	movwf	(read_package@package+6)^0,c
 16825                           
 16826                           ; BSR set to: 14
 16827                           ;eusartpackage.c: 26:             return package;
 16828  00938E  EE20  F018         	lfsr	2,read_package@package
 16829  009392  EE00  F011         	lfsr	0,?_read_package
 16830  009396  0E06               	movlw	6
 16831  009398                     u30831:
 16832  009398  CFDB FFEB          	movff	plusw2,plusw0
 16833  00939C  06E8               	decf	wreg,f,c
 16834  00939E  E2FC               	bc	u30831
 16835  0093A0  0012               	return	
 16836  0093A2                     l25055:
 16837                           
 16838                           ; BSR set to: 14
 16839                           ;eusartpackage.c: 29:             package.startbyte=0x0A;
 16840  0093A2  0E0A               	movlw	10
 16841  0093A4  6E1C               	movwf	(read_package@package+4)^0,c
 16842                           
 16843                           ; BSR set to: 14
 16844                           ;eusartpackage.c: 32:         package.functioncode=EUSART1_Read();
 16845  0093A6  EC83  F04A         	call	_EUSART1_Read	;wreg free
 16846  0093AA  6E18               	movwf	read_package@package^0,c
 16847                           
 16848                           ; BSR set to: 14
 16849                           ;eusartpackage.c: 33:         package.address=EUSART1_Read();
 16850  0093AC  EC83  F04A         	call	_EUSART1_Read	;wreg free
 16851  0093B0  6E19               	movwf	(read_package@package+1)^0,c
 16852                           
 16853                           ; BSR set to: 14
 16854                           ;eusartpackage.c: 34:         package.data.data8[0]=EUSART1_Read();
 16855  0093B2  EC83  F04A         	call	_EUSART1_Read	;wreg free
 16856  0093B6  6E1A               	movwf	(read_package@package+2)^0,c
 16857                           
 16858                           ; BSR set to: 14
 16859                           ;eusartpackage.c: 35:         package.data.data8[1]=EUSART1_Read();
 16860  0093B8  EC83  F04A         	call	_EUSART1_Read	;wreg free
 16861  0093BC  6E1B               	movwf	(read_package@package+3)^0,c
 16862                           
 16863                           ; BSR set to: 14
 16864                           ;eusartpackage.c: 38:         if(EUSART1_Read()!=0x0D){
 16865  0093BE  EC83  F04A         	call	_EUSART1_Read	;wreg free
 16866  0093C2  0A0D               	xorlw	13
 16867  0093C4  A4D8               	btfss	status,2,c
 16868  0093C6  D7E1               	goto	u30820
 16869                           
 16870                           ; BSR set to: 14
 16871                           ;eusartpackage.c: 43:             package.endbyte=0x0D;
 16872  0093C8  0E0D               	movlw	13
 16873  0093CA  6E1D               	movwf	(read_package@package+5)^0,c
 16874                           
 16875                           ; BSR set to: 14
 16876                           ;eusartpackage.c: 46:         package.valid=1;
 16877  0093CC  0E01               	movlw	1
 16878  0093CE  D7DE               	goto	L76
 16879  0093D0                     __end_of_read_package:
 16880                           	callstack 0
 16881                           
 16882 ;; *************** function _EUSART1_Read *****************
 16883 ;; Defined at:
 16884 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 16885 ;; Parameters:    Size  Location     Type
 16886 ;;		None
 16887 ;; Auto vars:     Size  Location     Type
 16888 ;;  readValue       1   15[COMRAM] unsigned char 
 16889 ;; Return value:  Size  Location     Type
 16890 ;;                  1    wreg      unsigned char 
 16891 ;; Registers used:
 16892 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16893 ;; Tracked objects:
 16894 ;;		On entry : 31/0
 16895 ;;		On exit  : 3F/E
 16896 ;;		Unchanged: 0/0
 16897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16899 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16901 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16902 ;;Total ram usage:        1 bytes
 16903 ;; Hardware stack levels used: 1
 16904 ;; Hardware stack levels required when called: 4
 16905 ;; This function calls:
 16906 ;;		Nothing
 16907 ;; This function is called by:
 16908 ;;		_read_package
 16909 ;; This function uses a non-reentrant model
 16910 ;;
 16911                           
 16912                           	psect	text55
 16913  009506                     __ptext55:
 16914                           	callstack 0
 16915  009506                     _EUSART1_Read:
 16916                           	callstack 25
 16917                           
 16918                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 16919                           
 16920                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 16921                           
 16922                           ; BSR set to: 14
 16923                           ;incstack = 0
 16924  009506  0100               	movlb	0	; () banked
 16925  009508  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 16926  00950A  B4D8               	btfsc	status,2,c
 16927  00950C  D7FC               	goto	__ptext55
 16928                           
 16929                           ; BSR set to: 0
 16930                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 16931  00950E  0E74               	movlw	low _eusart1RxStatusBuffer
 16932  009510  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 16933  009512  6ED9               	movwf	fsr2l,c
 16934  009514  6ADA               	clrf	fsr2h,c
 16935  009516  0E02               	movlw	high _eusart1RxStatusBuffer
 16936  009518  22DA               	addwfc	fsr2h,f,c
 16937  00951A  50DF               	movf	indf2,w,c
 16938  00951C  0101               	movlb	1	; () banked
 16939  00951E  6F9D               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 16940                           
 16941                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 16942  009520  0E7C               	movlw	low _eusart1RxBuffer
 16943  009522  0100               	movlb	0	; () banked
 16944  009524  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 16945  009526  6ED9               	movwf	fsr2l,c
 16946  009528  6ADA               	clrf	fsr2h,c
 16947  00952A  0E02               	movlw	high _eusart1RxBuffer
 16948  00952C  22DA               	addwfc	fsr2h,f,c
 16949  00952E  50DF               	movf	indf2,w,c
 16950  009530  6E10               	movwf	EUSART1_Read@readValue^0,c
 16951                           
 16952                           ; BSR set to: 0
 16953  009532  2B94               	incf	_eusart1RxTail& (0+255),f,b	;volatile
 16954                           
 16955                           ; BSR set to: 0
 16956                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 16957  009534  0E07               	movlw	7
 16958  009536  6594               	cpfsgt	_eusart1RxTail& (0+255),b
 16959  009538  D002               	goto	l22845
 16960                           
 16961                           ; BSR set to: 0
 16962                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 16963  00953A  0E00               	movlw	0
 16964  00953C  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 16965  00953E                     l22845:
 16966                           
 16967                           ; BSR set to: 0
 16968                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 16969  00953E  010E               	movlb	14	; () banked
 16970  009540  9BC5               	bcf	197,5,b	;volatile
 16971                           
 16972                           ; BSR set to: 14
 16973                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 16974  009542  0100               	movlb	0	; () banked
 16975  009544  0793               	decf	_eusart1RxCount& (0+255),f,b	;volatile
 16976                           
 16977                           ; BSR set to: 0
 16978                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 16979  009546  010E               	movlb	14	; () banked
 16980  009548  8BC5               	bsf	197,5,b	;volatile
 16981                           
 16982                           ; BSR set to: 14
 16983                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 16984  00954A  5010               	movf	EUSART1_Read@readValue^0,w,c
 16985                           
 16986                           ; BSR set to: 14
 16987  00954C  0012               	return		;funcret
 16988  00954E                     __end_of_EUSART1_Read:
 16989                           	callstack 0
 16990                           
 16991 ;; *************** function _readRFButtons *****************
 16992 ;; Defined at:
 16993 ;;		line 231 in file "inputs_MC50.c"
 16994 ;; Parameters:    Size  Location     Type
 16995 ;;		None
 16996 ;; Auto vars:     Size  Location     Type
 16997 ;;		None
 16998 ;; Return value:  Size  Location     Type
 16999 ;;                  1    wreg      void 
 17000 ;; Registers used:
 17001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17002 ;; Tracked objects:
 17003 ;;		On entry : 3F/1
 17004 ;;		On exit  : 3E/0
 17005 ;;		Unchanged: 0/0
 17006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17011 ;;Total ram usage:        0 bytes
 17012 ;; Hardware stack levels used: 1
 17013 ;; Hardware stack levels required when called: 15
 17014 ;; This function calls:
 17015 ;;		_DecryptPacket_12BIT
 17016 ;;		_keeloqDecryptPacket
 17017 ;; This function is called by:
 17018 ;;		_main
 17019 ;; This function uses a non-reentrant model
 17020 ;;
 17021                           
 17022                           	psect	text56
 17023  00671C                     __ptext56:
 17024                           	callstack 0
 17025  00671C                     _readRFButtons:
 17026                           	callstack 15
 17027                           
 17028                           ; BSR set to: 1
 17029                           ;inputs_MC50.c: 232:     static unsigned char key1 = 0;;inputs_MC50.c: 233:     static u
      +                          int32_t serial = 0;;inputs_MC50.c: 234:     static uint16_t rollingCode= 0;;inputs_MC50.
      +                          c: 235:     static TypeCMD keyType = 0;;inputs_MC50.c: 236:     static TypeRemote_st typ
      +                          eRemote;;inputs_MC50.c: 241:     if(RFFull)
 17030                           
 17031                           ; BSR set to: 14
 17032                           ;incstack = 0
 17033  00671C  0100               	movlb	0	; () banked
 17034  00671E  518B               	movf	_RFFull& (0+255),w,b	;volatile
 17035  006720  B4D8               	btfsc	status,2,c
 17036  006722  D0B9               	goto	l24863
 17037                           
 17038                           ; BSR set to: 0
 17039                           ;inputs_MC50.c: 242:     {;inputs_MC50.c: 244:          if(RFFull_12BIT==0)
 17040  006724  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
 17041  006726  A4D8               	btfss	status,2,c
 17042  006728  D00B               	goto	l24809
 17043                           
 17044                           ; BSR set to: 0
 17045                           ;inputs_MC50.c: 245:          {;inputs_MC50.c: 246:             keyType = keeloqDecryptP
      +                          acket(BufferRF,&classic_data);
 17046  00672A  0EC8               	movlw	low _BufferRF
 17047  00672C  6FE0               	movwf	keeloqDecryptPacket@data& (0+255),b
 17048  00672E  0E02               	movlw	high _BufferRF
 17049  006730  6FE1               	movwf	(keeloqDecryptPacket@data+1)& (0+255),b
 17050  006732  0E92               	movlw	low _classic_data
 17051  006734  6FE2               	movwf	keeloqDecryptPacket@classic_data& (0+255),b
 17052  006736  0E02               	movlw	high _classic_data
 17053  006738  6FE3               	movwf	(keeloqDecryptPacket@classic_data+1)& (0+255),b
 17054  00673A  EC89  F02E         	call	_keeloqDecryptPacket	;wreg free
 17055  00673E  D00A               	goto	L77
 17056  006740                     l24809:
 17057                           
 17058                           ; BSR set to: 0
 17059                           ;inputs_MC50.c: 249:          {;inputs_MC50.c: 250:             keyType = DecryptPacket_
      +                          12BIT(BufferRF,&classic_data);
 17060  006740  0EC8               	movlw	low _BufferRF
 17061  006742  6FE0               	movwf	DecryptPacket_12BIT@data& (0+255),b
 17062  006744  0E02               	movlw	high _BufferRF
 17063  006746  6FE1               	movwf	(DecryptPacket_12BIT@data+1)& (0+255),b
 17064  006748  0E92               	movlw	low _classic_data
 17065  00674A  6FE2               	movwf	DecryptPacket_12BIT@classic_data& (0+255),b
 17066  00674C  0E02               	movlw	high _classic_data
 17067  00674E  6FE3               	movwf	(DecryptPacket_12BIT@classic_data+1)& (0+255),b
 17068  006750  EC89  F041         	call	_DecryptPacket_12BIT	;wreg free
 17069  006754                     L77:
 17070  006754  6F87               	movwf	readRFButtons@keyType& (0+255),b
 17071                           
 17072                           ; BSR set to: 0
 17073                           ;inputs_MC50.c: 254:         key1 = classic_data.fcode1;
 17074  006756  C29E  F088         	movff	_classic_data+12,readRFButtons@key1
 17075                           
 17076                           ; BSR set to: 0
 17077                           ;inputs_MC50.c: 255:         serial = classic_data.serialnumber;
 17078  00675A  C296  F181         	movff	_classic_data+4,readRFButtons@serial
 17079  00675E  C297  F182         	movff	_classic_data+5,readRFButtons@serial+1
 17080  006762  C298  F183         	movff	_classic_data+6,readRFButtons@serial+2
 17081  006766  C299  F184         	movff	_classic_data+7,readRFButtons@serial+3
 17082                           
 17083                           ; BSR set to: 0
 17084                           ;inputs_MC50.c: 256:         rollingCode = classic_data.sync;
 17085  00676A  C29A  F187         	movff	_classic_data+8,readRFButtons@rollingCode
 17086  00676E  C29B  F188         	movff	_classic_data+9,readRFButtons@rollingCode+1
 17087                           
 17088                           ; BSR set to: 0
 17089                           ;inputs_MC50.c: 257:         typeRemote = classic_data.type;
 17090  006772  C2A0  F19B         	movff	_classic_data+14,readRFButtons@typeRemote
 17091                           
 17092                           ; BSR set to: 0
 17093                           ;inputs_MC50.c: 270:         if (var_sys.LearningIsEnabled == YES){
 17094  006776  0101               	movlb	1	; () banked
 17095  006778  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 17096  00677A  A4D8               	btfss	status,2,c
 17097  00677C  D01E               	goto	l24831
 17098                           
 17099                           ; BSR set to: 1
 17100                           ;inputs_MC50.c: 272:              if (keyType==NoCMD || rfCMD.currentKey!=key1 || rfCMD.
      +                          currentSerial!=serial || keyType!=rfCMD.currentType)
 17101  00677E  0100               	movlb	0	; () banked
 17102  006780  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17103  006782  B4D8               	btfsc	status,2,c
 17104  006784  D044               	goto	u30160
 17105                           
 17106                           ; BSR set to: 0
 17107  006786  5188               	movf	readRFButtons@key1& (0+255),w,b
 17108  006788  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17109  00678A  A4D8               	btfss	status,2,c
 17110  00678C  D040               	goto	u30160
 17111                           
 17112                           ; BSR set to: 0
 17113  00678E  0101               	movlb	1	; () banked
 17114  006790  5181               	movf	readRFButtons@serial& (0+255),w,b
 17115  006792  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17116  006794  E13C               	bnz	l24843
 17117  006796  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17118  006798  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17119  00679A  E139               	bnz	l24843
 17120  00679C  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17121  00679E  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17122  0067A0  E136               	bnz	l24843
 17123  0067A2  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17124  0067A4  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17125  0067A6  A4D8               	btfss	status,2,c
 17126  0067A8  D032               	goto	u30160
 17127                           
 17128                           ; BSR set to: 1
 17129  0067AA  0100               	movlb	0	; () banked
 17130  0067AC  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17131  0067AE  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17132  0067B0  A4D8               	btfss	status,2,c
 17133  0067B2  D02D               	goto	u30160
 17134  0067B4                     l1654:
 17135                           
 17136                           ;inputs_MC50.c: 274:                 rfCMD.timer=0;
 17137  0067B4  0E00               	movlw	0
 17138  0067B6  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17139                           
 17140                           ;inputs_MC50.c: 275:         }
 17141  0067B8  D038               	goto	l1657
 17142  0067BA                     l24831:
 17143                           
 17144                           ; BSR set to: 1
 17145  0067BA  0100               	movlb	0	; () banked
 17146  0067BC  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17147  0067BE  B4D8               	btfsc	status,2,c
 17148  0067C0  D026               	goto	u30160
 17149                           
 17150                           ; BSR set to: 0
 17151  0067C2  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17152  0067C4  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17153  0067C6  B4D8               	btfsc	status,2,c
 17154  0067C8  D00F               	goto	u30140
 17155                           
 17156                           ; BSR set to: 0
 17157  0067CA  0101               	movlb	1	; () banked
 17158  0067CC  BFB3               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17159  0067CE  D005               	goto	u30130
 17160  0067D0  51B3               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17161  0067D2  E10A               	bnz	l24839
 17162  0067D4  05B2               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17163  0067D6  B0D8               	btfsc	status,0,c
 17164  0067D8  D007               	goto	u30140
 17165  0067DA                     u30130:
 17166                           
 17167                           ; BSR set to: 1
 17168  0067DA  5187               	movf	readRFButtons@rollingCode& (0+255),w,b
 17169  0067DC  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17170  0067DE  E117               	bnz	l24843
 17171  0067E0  5188               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17172  0067E2  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17173  0067E4  A4D8               	btfss	status,2,c
 17174  0067E6  D013               	goto	u30160
 17175  0067E8                     u30140:
 17176  0067E8                     l24839:
 17177  0067E8  0100               	movlb	0	; () banked
 17178  0067EA  5188               	movf	readRFButtons@key1& (0+255),w,b
 17179  0067EC  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17180  0067EE  A4D8               	btfss	status,2,c
 17181  0067F0  D00E               	goto	u30160
 17182                           
 17183                           ; BSR set to: 0
 17184  0067F2  0101               	movlb	1	; () banked
 17185  0067F4  5181               	movf	readRFButtons@serial& (0+255),w,b
 17186  0067F6  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17187  0067F8  E10A               	bnz	u30160
 17188  0067FA  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17189  0067FC  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17190  0067FE  E107               	bnz	u30160
 17191  006800  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17192  006802  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17193  006804  E104               	bnz	u30160
 17194  006806  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17195  006808  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17196  00680A  B4D8               	btfsc	status,2,c
 17197  00680C  D003               	goto	l24845
 17198  00680E                     u30160:
 17199  00680E                     l24843:
 17200                           
 17201                           ;inputs_MC50.c: 278:         {;inputs_MC50.c: 279:            rfCMD.processed=0;
 17202  00680E  0E00               	movlw	0
 17203  006810  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 17204  006812  D7D0               	goto	l1654
 17205  006814                     l24845:
 17206                           
 17207                           ; BSR set to: 1
 17208  006814  BFB3               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17209  006816  D005               	goto	u30170
 17210  006818  51B3               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17211  00681A  E107               	bnz	l1657
 17212  00681C  05B2               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17213  00681E  B0D8               	btfsc	status,0,c
 17214  006820  D004               	goto	l1657
 17215  006822                     u30170:
 17216                           
 17217                           ; BSR set to: 1
 17218  006822  0E02               	movlw	2
 17219  006824  199B               	xorwf	readRFButtons@typeRemote& (0+255),w,b
 17220  006826  B4D8               	btfsc	status,2,c
 17221  006828  D7F2               	goto	u30160
 17222  00682A                     l1657:
 17223                           
 17224                           ;inputs_MC50.c: 289:         ts_system.TimeLastCommand=( 500/50);
 17225  00682A  0E00               	movlw	0
 17226  00682C  0101               	movlb	1	; () banked
 17227  00682E  6FB3               	movwf	(_ts_system+21)& (0+255),b	;volatile
 17228  006830  0E0A               	movlw	10
 17229  006832  6FB2               	movwf	(_ts_system+20)& (0+255),b	;volatile
 17230                           
 17231                           ; BSR set to: 1
 17232                           ;inputs_MC50.c: 291:         rfCMD.currentType=keyType;
 17233  006834  C087  F03B         	movff	readRFButtons@keyType,_rfCMD	;volatile
 17234                           
 17235                           ;inputs_MC50.c: 292:         if
 17236  006838  503B               	movf	_rfCMD^0,w,c	;volatile
 17237  00683A  B4D8               	btfsc	status,2,c
 17238  00683C  D01A               	goto	u30220
 17239                           
 17240                           ; BSR set to: 1
 17241  00683E  0100               	movlb	0	; () banked
 17242  006840  5188               	movf	readRFButtons@key1& (0+255),w,b
 17243  006842  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17244  006844  A4D8               	btfss	status,2,c
 17245  006846  D015               	goto	u30220
 17246                           
 17247                           ; BSR set to: 0
 17248  006848  0101               	movlb	1	; () banked
 17249  00684A  5181               	movf	readRFButtons@serial& (0+255),w,b
 17250  00684C  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17251  00684E  E111               	bnz	l1667
 17252  006850  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17253  006852  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17254  006854  E10E               	bnz	l1667
 17255  006856  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17256  006858  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17257  00685A  E10B               	bnz	l1667
 17258  00685C  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17259  00685E  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17260  006860  A4D8               	btfss	status,2,c
 17261  006862  D007               	goto	u30220
 17262                           
 17263                           ; BSR set to: 1
 17264  006864  5187               	movf	readRFButtons@rollingCode& (0+255),w,b
 17265  006866  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17266  006868  E104               	bnz	u30220
 17267  00686A  5188               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17268  00686C  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17269  00686E  B4D8               	btfsc	status,2,c
 17270  006870  D00E               	goto	l24861
 17271  006872                     u30220:
 17272  006872                     l1667:
 17273                           
 17274                           ;inputs_MC50.c: 299:         {;inputs_MC50.c: 300:             rfCMD.currentKey=key1;
 17275  006872  C088  F03C         	movff	readRFButtons@key1,_rfCMD+1	;volatile
 17276                           
 17277                           ;inputs_MC50.c: 301:             rfCMD.currentSerial=serial;
 17278  006876  C181  F03D         	movff	readRFButtons@serial,_rfCMD+2	;volatile
 17279  00687A  C182  F03E         	movff	readRFButtons@serial+1,_rfCMD+3	;volatile
 17280  00687E  C183  F03F         	movff	readRFButtons@serial+2,_rfCMD+4	;volatile
 17281  006882  C184  F040         	movff	readRFButtons@serial+3,_rfCMD+5	;volatile
 17282                           
 17283                           ;inputs_MC50.c: 302:             rfCMD.currentPosMem=classic_data.positionMem;
 17284  006886  C2A1  F043         	movff	_classic_data+15,_rfCMD+8	;volatile
 17285                           
 17286                           ;inputs_MC50.c: 303:             rfCMD.timer=0;
 17287  00688A  0E00               	movlw	0
 17288  00688C  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17289  00688E                     l24861:
 17290                           
 17291                           ;inputs_MC50.c: 305:         rfCMD.currentRolling=rollingCode;
 17292  00688E  C187  F041         	movff	readRFButtons@rollingCode,_rfCMD+6	;volatile
 17293  006892  C188  F042         	movff	readRFButtons@rollingCode+1,_rfCMD+7	;volatile
 17294  006896                     l24863:
 17295                           
 17296                           ;inputs_MC50.c: 310:     if(rfCMD.processed == 1)
 17297  006896  0445               	decf	(_rfCMD+10)^0,w,c	;volatile
 17298  006898  A4D8               	btfss	status,2,c
 17299  00689A  D003               	goto	l24867
 17300                           
 17301                           ;inputs_MC50.c: 311:     {;inputs_MC50.c: 312:        rfCMD.currentType = NoCMD;
 17302  00689C  0E00               	movlw	0
 17303  00689E  6E3B               	movwf	_rfCMD^0,c	;volatile
 17304                           
 17305                           ;inputs_MC50.c: 313:     }
 17306  0068A0  0012               	return	
 17307  0068A2                     l24867:
 17308  0068A2  503B               	movf	_rfCMD^0,w,c	;volatile
 17309  0068A4  B4D8               	btfsc	status,2,c
 17310  0068A6  0012               	return	
 17311                           
 17312                           ;inputs_MC50.c: 315:     {;inputs_MC50.c: 317:         if ( rfCMD.timer < 250 )
 17313  0068A8  0EFA               	movlw	250
 17314  0068AA  6044               	cpfslt	(_rfCMD+9)^0,c	;volatile
 17315  0068AC  0012               	return	
 17316                           
 17317                           ;inputs_MC50.c: 318:         {;inputs_MC50.c: 319:             rfCMD.timer++;
 17318  0068AE  2A44               	incf	(_rfCMD+9)^0,f,c	;volatile
 17319  0068B0  0012               	return		;funcret
 17320  0068B2                     __end_of_readRFButtons:
 17321                           	callstack 0
 17322                           
 17323 ;; *************** function _keeloqDecryptPacket *****************
 17324 ;; Defined at:
 17325 ;;		line 299 in file "keeloqDecrypt_MC50.c"
 17326 ;; Parameters:    Size  Location     Type
 17327 ;;  data            2    8[BANK0 ] PTR unsigned char 
 17328 ;;		 -> BufferRF(9), 
 17329 ;;  classic_data    2   10[BANK0 ] PTR struct .
 17330 ;;		 -> classic_data(16), 
 17331 ;; Auto vars:     Size  Location     Type
 17332 ;;  commandType     1   17[BANK0 ] enum E10539
 17333 ;;  hop_error       1   16[BANK0 ] enum E10730
 17334 ;; Return value:  Size  Location     Type
 17335 ;;                  1    wreg      enum E10539
 17336 ;; Registers used:
 17337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17338 ;; Tracked objects:
 17339 ;;		On entry : 3F/0
 17340 ;;		On exit  : 3F/0
 17341 ;;		Unchanged: 0/0
 17342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17343 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17344 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17345 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17346 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17347 ;;Total ram usage:       10 bytes
 17348 ;; Hardware stack levels used: 1
 17349 ;; Hardware stack levels required when called: 14
 17350 ;; This function calls:
 17351 ;;		_DecCHK
 17352 ;;		_HopCHK
 17353 ;;		_keeloq_classic_decrypt_packet
 17354 ;;		_memcpy
 17355 ;;		_validateRemoteSerialNumber
 17356 ;;		_verifyProgramingMode
 17357 ;; This function is called by:
 17358 ;;		_readRFButtons
 17359 ;; This function uses a non-reentrant model
 17360 ;;
 17361                           
 17362                           	psect	text57
 17363  005D12                     __ptext57:
 17364                           	callstack 0
 17365  005D12                     _keeloqDecryptPacket:
 17366                           	callstack 15
 17367                           
 17368                           ; BSR set to: 0
 17369                           ;keeloqDecrypt_MC50.c: 299: TypeCMD keeloqDecryptPacket (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 300: {;keeloqDecrypt_MC50.c: 301:     result_code_t h
      +                          op_error;;keeloqDecrypt_MC50.c: 302:     TypeCMD commandType;;keeloqDecrypt_MC50.c: 303:
      +                               memcpy(classic_data, data, 8);
 17370                           
 17371                           ;incstack = 0
 17372  005D12  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,memcpy@d1
 17373  005D16  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,memcpy@d1+1
 17374  005D1A  C0E0  F012         	movff	keeloqDecryptPacket@data,memcpy@s1
 17375  005D1E  C0E1  F013         	movff	keeloqDecryptPacket@data+1,memcpy@s1+1
 17376  005D22  0E00               	movlw	0
 17377  005D24  6E15               	movwf	(memcpy@n+1)^0,c
 17378  005D26  0E08               	movlw	8
 17379  005D28  6E14               	movwf	memcpy@n^0,c
 17380  005D2A  ECEC  F04A         	call	_memcpy	;wreg free
 17381                           
 17382                           ;keeloqDecrypt_MC50.c: 304:     memcpy(&classic_data->sync, &classic_data->raw_data, 4);
 17383  005D2E  0E08               	movlw	8
 17384  005D30  0100               	movlb	0	; () banked
 17385  005D32  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17386  005D34  6E10               	movwf	memcpy@d1^0,c
 17387  005D36  0E00               	movlw	0
 17388  005D38  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17389  005D3A  6E11               	movwf	(memcpy@d1+1)^0,c
 17390  005D3C  C0E2  F012         	movff	keeloqDecryptPacket@classic_data,memcpy@s1
 17391  005D40  C0E3  F013         	movff	keeloqDecryptPacket@classic_data+1,memcpy@s1+1
 17392  005D44  0E00               	movlw	0
 17393  005D46  6E15               	movwf	(memcpy@n+1)^0,c
 17394  005D48  0E04               	movlw	4
 17395  005D4A  6E14               	movwf	memcpy@n^0,c
 17396  005D4C  ECEC  F04A         	call	_memcpy	;wreg free
 17397                           
 17398                           ;keeloqDecrypt_MC50.c: 305:     classic_data->fcode1 = *((uint8_t *) (&classic_data->ser
      +                          ialnumber) + 3) >> 4;
 17399  005D50  0100               	movlb	0	; () banked
 17400  005D52  EE20 F00C          	lfsr	2,12
 17401  005D56  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17402  005D58  26D9               	addwf	fsr2l,f,c
 17403  005D5A  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17404  005D5C  22DA               	addwfc	fsr2h,f,c
 17405  005D5E  EE10 F007          	lfsr	1,7
 17406  005D62  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17407  005D64  26E1               	addwf	fsr1l,f,c
 17408  005D66  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17409  005D68  22E2               	addwfc	fsr1h,f,c
 17410  005D6A  50E7               	movf	indf1,w,c
 17411  005D6C  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17412  005D6E  39E4               	swapf	??_keeloqDecryptPacket& (0+255),w,b
 17413  005D70  0B0F               	andlw	15
 17414  005D72  6EDF               	movwf	indf2,c
 17415                           
 17416                           ; BSR set to: 0
 17417                           ;keeloqDecrypt_MC50.c: 306:     commandType=verifyProgramingMode(classic_data);
 17418  005D74  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,verifyProgramingMode@classic_data
 17419  005D78  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,verifyProgramingMode@classic_data+1
 17420  005D7C  EC06  F04C         	call	_verifyProgramingMode	;wreg free
 17421  005D80  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17422                           
 17423                           ; BSR set to: 0
 17424                           ;keeloqDecrypt_MC50.c: 308:     if(commandType==NoCMD)
 17425  005D82  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17426  005D84  A4D8               	btfss	status,2,c
 17427  005D86  D019               	goto	l23169
 17428                           
 17429                           ; BSR set to: 0
 17430                           ;keeloqDecrypt_MC50.c: 309:     {;keeloqDecrypt_MC50.c: 310:         commandType=validat
      +                          eRemoteSerialNumber(classic_data->serialnumber,NO,&classic_data->positionMem);
 17431  005D88  EE20 F004          	lfsr	2,4
 17432  005D8C  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17433  005D8E  26D9               	addwf	fsr2l,f,c
 17434  005D90  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17435  005D92  22DA               	addwfc	fsr2h,f,c
 17436  005D94  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17437  005D98  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17438  005D9C  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17439  005DA0  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17440  005DA4  0E00               	movlw	0
 17441  005DA6  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17442  005DA8  0E0F               	movlw	15
 17443  005DAA  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17444  005DAC  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17445  005DAE  0E00               	movlw	0
 17446  005DB0  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17447  005DB2  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17448  005DB4  EC26  F031         	call	_validateRemoteSerialNumber	;wreg free
 17449  005DB8  D004               	goto	L78
 17450  005DBA                     l23169:
 17451                           
 17452                           ; BSR set to: 0
 17453  005DBA  51A6               	movf	(_var_sys_NVM+14)& (0+255),w,b	;volatile
 17454  005DBC  A4D8               	btfss	status,2,c
 17455  005DBE  D002               	goto	l23173
 17456                           
 17457                           ; BSR set to: 0
 17458                           ;keeloqDecrypt_MC50.c: 313:     {;keeloqDecrypt_MC50.c: 314:         commandType=NoCMD;
 17459  005DC0  0E00               	movlw	0
 17460  005DC2                     L78:
 17461  005DC2  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17462  005DC4                     l23173:
 17463                           
 17464                           ; BSR set to: 0
 17465                           ;keeloqDecrypt_MC50.c: 316:     classic_data->serialnumber = classic_data->serialnumber 
      +                          & 0x0FFFFFFF;
 17466  005DC4  EE20 F004          	lfsr	2,4
 17467  005DC8  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17468  005DCA  26D9               	addwf	fsr2l,f,c
 17469  005DCC  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17470  005DCE  22DA               	addwfc	fsr2h,f,c
 17471  005DD0  0EFF               	movlw	255
 17472  005DD2  14DE               	andwf	postinc2,w,c
 17473  005DD4  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17474  005DD6  0EFF               	movlw	255
 17475  005DD8  14DE               	andwf	postinc2,w,c
 17476  005DDA  6FE5               	movwf	(??_keeloqDecryptPacket+1)& (0+255),b
 17477  005DDC  0EFF               	movlw	255
 17478  005DDE  14DE               	andwf	postinc2,w,c
 17479  005DE0  6FE6               	movwf	(??_keeloqDecryptPacket+2)& (0+255),b
 17480  005DE2  0E0F               	movlw	15
 17481  005DE4  14DE               	andwf	postinc2,w,c
 17482  005DE6  6FE7               	movwf	(??_keeloqDecryptPacket+3)& (0+255),b
 17483  005DE8  EE20 F004          	lfsr	2,4
 17484  005DEC  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17485  005DEE  26D9               	addwf	fsr2l,f,c
 17486  005DF0  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17487  005DF2  22DA               	addwfc	fsr2h,f,c
 17488  005DF4  C0E4  FFDE         	movff	??_keeloqDecryptPacket,postinc2
 17489  005DF8  C0E5  FFDE         	movff	??_keeloqDecryptPacket+1,postinc2
 17490  005DFC  C0E6  FFDE         	movff	??_keeloqDecryptPacket+2,postinc2
 17491  005E00  C0E7  FFDE         	movff	??_keeloqDecryptPacket+3,postinc2
 17492                           
 17493                           ; BSR set to: 0
 17494                           ;keeloqDecrypt_MC50.c: 318:     keeloq_classic_decrypt_packet(classic_data);
 17495  005E04  C0E2  F038         	movff	keeloqDecryptPacket@classic_data,keeloq_classic_decrypt_packet@data
 17496  005E08  C0E3  F039         	movff	keeloqDecryptPacket@classic_data+1,keeloq_classic_decrypt_packet@data+1
 17497  005E0C  ECC0  F048         	call	_keeloq_classic_decrypt_packet	;wreg free
 17498                           
 17499                           ; BSR set to: 0
 17500                           ;keeloqDecrypt_MC50.c: 320:     if(commandType==NoCMD )
 17501  005E10  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17502  005E12  A4D8               	btfss	status,2,c
 17503  005E14  D01B               	goto	l23191
 17504                           
 17505                           ; BSR set to: 0
 17506                           ;keeloqDecrypt_MC50.c: 321:     {;keeloqDecrypt_MC50.c: 323:         if (DecCHK(classic_
      +                          data) == 0) {
 17507  005E16  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17508  005E1A  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17509  005E1E  EC20  F04C         	call	_DecCHK	;wreg free
 17510  005E22  0900               	iorlw	0
 17511  005E24  A4D8               	btfss	status,2,c
 17512  005E26  D008               	goto	l23183
 17513                           
 17514                           ; BSR set to: 0
 17515                           ;keeloqDecrypt_MC50.c: 324:             classic_data->type=Keeloq_NoRollingCode;
 17516  005E28  EE20 F00E          	lfsr	2,14
 17517  005E2C  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17518  005E2E  26D9               	addwf	fsr2l,f,c
 17519  005E30  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17520  005E32  22DA               	addwfc	fsr2h,f,c
 17521  005E34  0E01               	movlw	1
 17522  005E36  D007               	goto	L79
 17523  005E38                     l23183:
 17524                           
 17525                           ; BSR set to: 0
 17526                           ;keeloqDecrypt_MC50.c: 328:         {;keeloqDecrypt_MC50.c: 329:             classic_dat
      +                          a->type=Keeloq_RollingCode;
 17527  005E38  EE20 F00E          	lfsr	2,14
 17528  005E3C  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17529  005E3E  26D9               	addwf	fsr2l,f,c
 17530  005E40  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17531  005E42  22DA               	addwfc	fsr2h,f,c
 17532  005E44  0E00               	movlw	0
 17533  005E46                     L79:
 17534  005E46  6EDF               	movwf	indf2,c
 17535  005E48                     l23185:
 17536                           
 17537                           ; BSR set to: 0
 17538                           ;keeloqDecrypt_MC50.c: 331:         return NoCMD;
 17539  005E48  0E00               	movlw	0
 17540  005E4A  0012               	return	
 17541  005E4C                     l23191:
 17542                           
 17543                           ; BSR set to: 0
 17544  005E4C  0E06               	movlw	6
 17545  005E4E  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17546  005E50  B4D8               	btfsc	status,2,c
 17547  005E52  D004               	goto	u26890
 17548                           
 17549                           ; BSR set to: 0
 17550  005E54  0E05               	movlw	5
 17551  005E56  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17552  005E58  A4D8               	btfss	status,2,c
 17553  005E5A  D01B               	goto	l23201
 17554  005E5C                     u26890:
 17555                           
 17556                           ; BSR set to: 0
 17557                           ;keeloqDecrypt_MC50.c: 334:     {;keeloqDecrypt_MC50.c: 335:         if(validateRemoteSe
      +                          rialNumber(classic_data->serialnumber,YES,&classic_data->positionMem)==NoCMD)
 17558  005E5C  EE20 F004          	lfsr	2,4
 17559  005E60  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17560  005E62  26D9               	addwf	fsr2l,f,c
 17561  005E64  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17562  005E66  22DA               	addwfc	fsr2h,f,c
 17563  005E68  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17564  005E6C  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17565  005E70  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17566  005E74  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17567  005E78  0E01               	movlw	1
 17568  005E7A  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17569  005E7C  0E0F               	movlw	15
 17570  005E7E  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17571  005E80  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17572  005E82  0E00               	movlw	0
 17573  005E84  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17574  005E86  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17575  005E88  EC26  F031         	call	_validateRemoteSerialNumber	;wreg free
 17576  005E8C  0900               	iorlw	0
 17577  005E8E  B4D8               	btfsc	status,2,c
 17578  005E90  D7DB               	goto	l23185
 17579  005E92                     l23201:
 17580                           
 17581                           ; BSR set to: 0
 17582                           ;keeloqDecrypt_MC50.c: 344:     if (DecCHK(classic_data) == 0)
 17583  005E92  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17584  005E96  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17585  005E9A  EC20  F04C         	call	_DecCHK	;wreg free
 17586  005E9E  0900               	iorlw	0
 17587  005EA0  A4D8               	btfss	status,2,c
 17588  005EA2  D00D               	goto	l23217
 17589                           
 17590                           ; BSR set to: 0
 17591                           ;keeloqDecrypt_MC50.c: 345:     {;keeloqDecrypt_MC50.c: 346:         if(var_sys_NVM.Only
      +                          RollingCode==YES) {
 17592  005EA4  05BE               	decf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
 17593  005EA6  B4D8               	btfsc	status,2,c
 17594  005EA8  D7CF               	goto	l23185
 17595                           
 17596                           ; BSR set to: 0
 17597                           ;keeloqDecrypt_MC50.c: 352:         {;keeloqDecrypt_MC50.c: 353:             classic_dat
      +                          a->type=Keeloq_NoRollingCode;
 17598  005EAA  EE20 F00E          	lfsr	2,14
 17599  005EAE  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17600  005EB0  26D9               	addwf	fsr2l,f,c
 17601  005EB2  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17602  005EB4  22DA               	addwfc	fsr2h,f,c
 17603  005EB6  0E01               	movlw	1
 17604  005EB8  6EDF               	movwf	indf2,c
 17605                           
 17606                           ; BSR set to: 0
 17607                           ;keeloqDecrypt_MC50.c: 354:             return commandType;
 17608  005EBA  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17609  005EBC  0012               	return	
 17610  005EBE                     l23217:
 17611                           
 17612                           ; BSR set to: 0
 17613                           ;keeloqDecrypt_MC50.c: 359:     hop_error = HopCHK(classic_data);
 17614  005EBE  C0E2  F024         	movff	keeloqDecryptPacket@classic_data,HopCHK@data
 17615  005EC2  C0E3  F025         	movff	keeloqDecryptPacket@classic_data+1,HopCHK@data+1
 17616  005EC6  EC5B  F042         	call	_HopCHK	;wreg free
 17617  005ECA  0100               	movlb	0	; () banked
 17618  005ECC  6FE8               	movwf	keeloqDecryptPacket@hop_error& (0+255),b
 17619                           
 17620                           ; BSR set to: 0
 17621                           ;keeloqDecrypt_MC50.c: 360:     if (hop_error != VALID_PACKET) {
 17622  005ECE  05E8               	decf	keeloqDecryptPacket@hop_error& (0+255),w,b
 17623  005ED0  A4D8               	btfss	status,2,c
 17624  005ED2  D7BA               	goto	l23185
 17625                           
 17626                           ; BSR set to: 0
 17627                           ;keeloqDecrypt_MC50.c: 364:     classic_data->type=Keeloq_RollingCode;
 17628  005ED4  EE20 F00E          	lfsr	2,14
 17629  005ED8  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17630  005EDA  26D9               	addwf	fsr2l,f,c
 17631  005EDC  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17632  005EDE  22DA               	addwfc	fsr2h,f,c
 17633  005EE0  0E00               	movlw	0
 17634  005EE2  D7EA               	goto	L80
 17635  005EE4                     __end_of_keeloqDecryptPacket:
 17636                           	callstack 0
 17637                           
 17638 ;; *************** function _verifyProgramingMode *****************
 17639 ;; Defined at:
 17640 ;;		line 401 in file "keeloqDecrypt_MC50.c"
 17641 ;; Parameters:    Size  Location     Type
 17642 ;;  classic_data    2   15[COMRAM] PTR struct .
 17643 ;;		 -> classic_data(16), 
 17644 ;; Auto vars:     Size  Location     Type
 17645 ;;		None
 17646 ;; Return value:  Size  Location     Type
 17647 ;;                  1    wreg      enum E10539
 17648 ;; Registers used:
 17649 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17650 ;; Tracked objects:
 17651 ;;		On entry : 3F/0
 17652 ;;		On exit  : 3F/0
 17653 ;;		Unchanged: 3F/0
 17654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17655 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17657 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17658 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17659 ;;Total ram usage:        3 bytes
 17660 ;; Hardware stack levels used: 1
 17661 ;; Hardware stack levels required when called: 4
 17662 ;; This function calls:
 17663 ;;		Nothing
 17664 ;; This function is called by:
 17665 ;;		_keeloqDecryptPacket
 17666 ;; This function uses a non-reentrant model
 17667 ;;
 17668                           
 17669                           	psect	text58
 17670  00980C                     __ptext58:
 17671                           	callstack 0
 17672  00980C                     _verifyProgramingMode:
 17673                           	callstack 24
 17674                           
 17675                           ; BSR set to: 0
 17676                           ;keeloqDecrypt_MC50.c: 401: TypeCMD verifyProgramingMode(classic_encoder_t* classic_data
      +                          );keeloqDecrypt_MC50.c: 402: {;keeloqDecrypt_MC50.c: 403:     if (classic_data->fcode1==
      +                          0x0A)
 17677                           
 17678                           ; BSR set to: 0
 17679                           ;incstack = 0
 17680  00980C  EE20 F00C          	lfsr	2,12
 17681  009810  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17682  009812  26D9               	addwf	fsr2l,f,c
 17683  009814  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17684  009816  22DA               	addwfc	fsr2h,f,c
 17685  009818  0E0A               	movlw	10
 17686  00981A  18DE               	xorwf	postinc2,w,c
 17687  00981C  A4D8               	btfss	status,2,c
 17688  00981E  D002               	goto	l21695
 17689                           
 17690                           ; BSR set to: 0
 17691                           ;keeloqDecrypt_MC50.c: 404:     {;keeloqDecrypt_MC50.c: 405:         return TypeProgramm
      +                          ingModeFull;
 17692  009820  0E06               	movlw	6
 17693  009822  0012               	return	
 17694  009824                     l21695:
 17695                           
 17696                           ; BSR set to: 0
 17697  009824  EE20 F00C          	lfsr	2,12
 17698  009828  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17699  00982A  26D9               	addwf	fsr2l,f,c
 17700  00982C  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17701  00982E  22DA               	addwfc	fsr2h,f,c
 17702  009830  0E05               	movlw	5
 17703  009832  18DE               	xorwf	postinc2,w,c
 17704  009834  A4D8               	btfss	status,2,c
 17705  009836  D002               	goto	l21703
 17706                           
 17707                           ; BSR set to: 0
 17708                           ;keeloqDecrypt_MC50.c: 408:     {;keeloqDecrypt_MC50.c: 409:         return TypeProgramm
      +                          ingModeWalk;
 17709  009838  0E05               	movlw	5
 17710  00983A  0012               	return	
 17711  00983C                     l21703:
 17712                           
 17713                           ; BSR set to: 0
 17714                           ;keeloqDecrypt_MC50.c: 412:     {;keeloqDecrypt_MC50.c: 413:         return NoCMD;
 17715  00983C  0E00               	movlw	0
 17716                           
 17717                           ; BSR set to: 0
 17718  00983E  0012               	return		;funcret
 17719  009840                     __end_of_verifyProgramingMode:
 17720                           	callstack 0
 17721                           
 17722 ;; *************** function _keeloq_classic_decrypt_packet *****************
 17723 ;; Defined at:
 17724 ;;		line 390 in file "keeloqDecrypt_MC50.c"
 17725 ;; Parameters:    Size  Location     Type
 17726 ;;  data            2   55[COMRAM] PTR struct .
 17727 ;;		 -> classic_data(16), 
 17728 ;; Auto vars:     Size  Location     Type
 17729 ;;		None
 17730 ;; Return value:  Size  Location     Type
 17731 ;;                  1    wreg      void 
 17732 ;; Registers used:
 17733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17734 ;; Tracked objects:
 17735 ;;		On entry : 3F/0
 17736 ;;		On exit  : 3F/0
 17737 ;;		Unchanged: 0/0
 17738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17741 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17742 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17743 ;;Total ram usage:        5 bytes
 17744 ;; Hardware stack levels used: 1
 17745 ;; Hardware stack levels required when called: 7
 17746 ;; This function calls:
 17747 ;;		_Decrypt
 17748 ;;		_NormalKeyGen
 17749 ;; This function is called by:
 17750 ;;		_keeloqDecryptPacket
 17751 ;; This function uses a non-reentrant model
 17752 ;;
 17753                           
 17754                           	psect	text59
 17755  009180                     __ptext59:
 17756                           	callstack 0
 17757  009180                     _keeloq_classic_decrypt_packet:
 17758                           	callstack 21
 17759                           
 17760                           ; BSR set to: 0
 17761                           ;keeloqDecrypt_MC50.c: 393:     NormalKeyGen(&data->serialnumber);
 17762                           
 17763                           ; BSR set to: 0
 17764                           ;incstack = 0
 17765  009180  0E04               	movlw	4
 17766  009182  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17767  009184  6E26               	movwf	NormalKeyGen@serial^0,c
 17768  009186  0E00               	movlw	0
 17769  009188  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17770  00918A  6E27               	movwf	(NormalKeyGen@serial+1)^0,c
 17771  00918C  EC1F  F03A         	call	_NormalKeyGen	;wreg free
 17772                           
 17773                           ;keeloqDecrypt_MC50.c: 395:     Decrypt((uint8_t*) & data->sync);
 17774  009190  0E08               	movlw	8
 17775  009192  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17776  009194  6E1B               	movwf	Decrypt@packet^0,c
 17777  009196  0E00               	movlw	0
 17778  009198  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17779  00919A  6E1C               	movwf	(Decrypt@packet+1)^0,c
 17780  00919C  EC86  F03D         	call	_Decrypt	;wreg free
 17781                           
 17782                           ;keeloqDecrypt_MC50.c: 398:     data->fcode2 = (data->disc >> 12) & 0x0F;
 17783  0091A0  EE20 F00D          	lfsr	2,13
 17784  0091A4  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17785  0091A6  26D9               	addwf	fsr2l,f,c
 17786  0091A8  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17787  0091AA  22DA               	addwfc	fsr2h,f,c
 17788  0091AC  EE10 F00A          	lfsr	1,10
 17789  0091B0  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17790  0091B2  26E1               	addwf	fsr1l,f,c
 17791  0091B4  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17792  0091B6  22E2               	addwfc	fsr1h,f,c
 17793  0091B8  CFE6 F0D8          	movff	postinc1,??_keeloq_classic_decrypt_packet
 17794  0091BC  CFE5 F0D9          	movff	postdec1,??_keeloq_classic_decrypt_packet+1
 17795  0091C0  0E0C               	movlw	12
 17796  0091C2  0100               	movlb	0	; () banked
 17797  0091C4  6FDA               	movwf	(??_keeloq_classic_decrypt_packet+2)& (0+255),b
 17798  0091C6                     u25105:
 17799  0091C6  90D8               	bcf	status,0,c
 17800  0091C8  33D9               	rrcf	(??_keeloq_classic_decrypt_packet+1)& (0+255),f,b
 17801  0091CA  33D8               	rrcf	??_keeloq_classic_decrypt_packet& (0+255),f,b
 17802  0091CC  2FDA               	decfsz	(??_keeloq_classic_decrypt_packet+2)& (0+255),f,b
 17803  0091CE  D7FB               	goto	u25105
 17804  0091D0  51D8               	movf	??_keeloq_classic_decrypt_packet& (0+255),w,b
 17805  0091D2  0B0F               	andlw	15
 17806  0091D4  6EDF               	movwf	indf2,c
 17807                           
 17808                           ; BSR set to: 0
 17809  0091D6  0012               	return		;funcret
 17810  0091D8                     __end_of_keeloq_classic_decrypt_packet:
 17811                           	callstack 0
 17812                           
 17813 ;; *************** function _NormalKeyGen *****************
 17814 ;; Defined at:
 17815 ;;		line 87 in file "keeloqDecrypt_MC50.c"
 17816 ;; Parameters:    Size  Location     Type
 17817 ;;  serial          2   37[COMRAM] PTR unsigned long 
 17818 ;;		 -> classic_data(16), 
 17819 ;; Auto vars:     Size  Location     Type
 17820 ;;  Buffer          8   47[COMRAM] unsigned char [8]
 17821 ;;  SKEYtemp        4   43[COMRAM] unsigned char [4]
 17822 ;;  HOPtemp         4   39[COMRAM] unsigned char [4]
 17823 ;; Return value:  Size  Location     Type
 17824 ;;                  1    wreg      void 
 17825 ;; Registers used:
 17826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17827 ;; Tracked objects:
 17828 ;;		On entry : 3F/0
 17829 ;;		On exit  : 0/0
 17830 ;;		Unchanged: 0/0
 17831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17833 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17835 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17836 ;;Total ram usage:       18 bytes
 17837 ;; Hardware stack levels used: 1
 17838 ;; Hardware stack levels required when called: 6
 17839 ;; This function calls:
 17840 ;;		_Decrypt
 17841 ;;		_LoadManufCode
 17842 ;;		_memcpy
 17843 ;; This function is called by:
 17844 ;;		_keeloq_classic_decrypt_packet
 17845 ;; This function uses a non-reentrant model
 17846 ;;
 17847                           
 17848                           	psect	text60
 17849  00743E                     __ptext60:
 17850                           	callstack 0
 17851  00743E                     _NormalKeyGen:
 17852                           	callstack 21
 17853                           
 17854                           ; BSR set to: 0
 17855                           ;keeloqDecrypt_MC50.c: 88:     static uint8_t SEED[4];;keeloqDecrypt_MC50.c: 89:     uin
      +                          t8_t Buffer[8];;keeloqDecrypt_MC50.c: 90:     uint8_t HOPtemp[4];;keeloqDecrypt_MC50.c: 
      +                          91:     uint8_t SKEYtemp[4];;keeloqDecrypt_MC50.c: 93:     memcpy(&Buffer[4], serial, 4)
      +                          ;
 17856                           
 17857                           ; BSR set to: 0
 17858                           ;incstack = 0
 17859  00743E  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 17860  007440  6E10               	movwf	memcpy@d1^0,c
 17861  007442  6A11               	clrf	(memcpy@d1+1)^0,c
 17862  007444  C026  F012         	movff	NormalKeyGen@serial,memcpy@s1
 17863  007448  C027  F013         	movff	NormalKeyGen@serial+1,memcpy@s1+1
 17864  00744C  0E00               	movlw	0
 17865  00744E  6E15               	movwf	(memcpy@n+1)^0,c
 17866  007450  0E04               	movlw	4
 17867  007452  6E14               	movwf	memcpy@n^0,c
 17868  007454  ECEC  F04A         	call	_memcpy	;wreg free
 17869                           
 17870                           ;keeloqDecrypt_MC50.c: 95:     memcpy(HOPtemp, Buffer, 4);
 17871  007458  0E28               	movlw	low NormalKeyGen@HOPtemp
 17872  00745A  6E10               	movwf	memcpy@d1^0,c
 17873  00745C  6A11               	clrf	(memcpy@d1+1)^0,c
 17874  00745E  0E30               	movlw	low NormalKeyGen@Buffer
 17875  007460  6E12               	movwf	memcpy@s1^0,c
 17876  007462  6A13               	clrf	(memcpy@s1+1)^0,c
 17877  007464  0E00               	movlw	0
 17878  007466  6E15               	movwf	(memcpy@n+1)^0,c
 17879  007468  0E04               	movlw	4
 17880  00746A  6E14               	movwf	memcpy@n^0,c
 17881  00746C  ECEC  F04A         	call	_memcpy	;wreg free
 17882                           
 17883                           ;keeloqDecrypt_MC50.c: 97:     memcpy(SEED, &Buffer[4], 4);
 17884  007470  0ED9               	movlw	low NormalKeyGen@SEED
 17885  007472  6E10               	movwf	memcpy@d1^0,c
 17886  007474  0E02               	movlw	high NormalKeyGen@SEED
 17887  007476  6E11               	movwf	(memcpy@d1+1)^0,c
 17888  007478  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 17889  00747A  6E12               	movwf	memcpy@s1^0,c
 17890  00747C  6A13               	clrf	(memcpy@s1+1)^0,c
 17891  00747E  0E00               	movlw	0
 17892  007480  6E15               	movwf	(memcpy@n+1)^0,c
 17893  007482  0E04               	movlw	4
 17894  007484  6E14               	movwf	memcpy@n^0,c
 17895  007486  ECEC  F04A         	call	_memcpy	;wreg free
 17896                           
 17897                           ;keeloqDecrypt_MC50.c: 98:     SEED[3] &= 0x0f;
 17898  00748A  0E0F               	movlw	15
 17899  00748C  0102               	movlb	2	; () banked
 17900  00748E  17DC               	andwf	(NormalKeyGen@SEED+3)& (0+255),f,b
 17901                           
 17902                           ; BSR set to: 2
 17903                           ;keeloqDecrypt_MC50.c: 101:     memcpy(Buffer, SEED, 4);
 17904  007490  0E30               	movlw	low NormalKeyGen@Buffer
 17905  007492  6E10               	movwf	memcpy@d1^0,c
 17906  007494  6A11               	clrf	(memcpy@d1+1)^0,c
 17907  007496  0ED9               	movlw	low NormalKeyGen@SEED
 17908  007498  6E12               	movwf	memcpy@s1^0,c
 17909  00749A  0E02               	movlw	high NormalKeyGen@SEED
 17910  00749C  6E13               	movwf	(memcpy@s1+1)^0,c
 17911  00749E  0E00               	movlw	0
 17912  0074A0  6E15               	movwf	(memcpy@n+1)^0,c
 17913  0074A2  0E04               	movlw	4
 17914  0074A4  6E14               	movwf	memcpy@n^0,c
 17915  0074A6  ECEC  F04A         	call	_memcpy	;wreg free
 17916                           
 17917                           ;keeloqDecrypt_MC50.c: 102:     Buffer[3] |= 0x20;
 17918  0074AA  8A33               	bsf	(NormalKeyGen@Buffer+3)^0,5,c
 17919                           
 17920                           ;keeloqDecrypt_MC50.c: 103:     LoadManufCode();
 17921  0074AC  EC51  F04E         	call	_LoadManufCode	;wreg free
 17922                           
 17923                           ; BSR set to: 2
 17924                           ;keeloqDecrypt_MC50.c: 104:     Decrypt(Buffer);
 17925  0074B0  0E30               	movlw	low NormalKeyGen@Buffer
 17926  0074B2  6E1B               	movwf	Decrypt@packet^0,c
 17927  0074B4  6A1C               	clrf	(Decrypt@packet+1)^0,c
 17928  0074B6  EC86  F03D         	call	_Decrypt	;wreg free
 17929                           
 17930                           ;keeloqDecrypt_MC50.c: 105:     memcpy(SKEYtemp, Buffer, 4);
 17931  0074BA  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 17932  0074BC  6E10               	movwf	memcpy@d1^0,c
 17933  0074BE  6A11               	clrf	(memcpy@d1+1)^0,c
 17934  0074C0  0E30               	movlw	low NormalKeyGen@Buffer
 17935  0074C2  6E12               	movwf	memcpy@s1^0,c
 17936  0074C4  6A13               	clrf	(memcpy@s1+1)^0,c
 17937  0074C6  0E00               	movlw	0
 17938  0074C8  6E15               	movwf	(memcpy@n+1)^0,c
 17939  0074CA  0E04               	movlw	4
 17940  0074CC  6E14               	movwf	memcpy@n^0,c
 17941  0074CE  ECEC  F04A         	call	_memcpy	;wreg free
 17942                           
 17943                           ;keeloqDecrypt_MC50.c: 108:     memcpy(Buffer, SEED, 4);
 17944  0074D2  0E30               	movlw	low NormalKeyGen@Buffer
 17945  0074D4  6E10               	movwf	memcpy@d1^0,c
 17946  0074D6  6A11               	clrf	(memcpy@d1+1)^0,c
 17947  0074D8  0ED9               	movlw	low NormalKeyGen@SEED
 17948  0074DA  6E12               	movwf	memcpy@s1^0,c
 17949  0074DC  0E02               	movlw	high NormalKeyGen@SEED
 17950  0074DE  6E13               	movwf	(memcpy@s1+1)^0,c
 17951  0074E0  0E00               	movlw	0
 17952  0074E2  6E15               	movwf	(memcpy@n+1)^0,c
 17953  0074E4  0E04               	movlw	4
 17954  0074E6  6E14               	movwf	memcpy@n^0,c
 17955  0074E8  ECEC  F04A         	call	_memcpy	;wreg free
 17956                           
 17957                           ;keeloqDecrypt_MC50.c: 109:     Buffer[3] |= 0x60;
 17958  0074EC  0E60               	movlw	96
 17959  0074EE  1233               	iorwf	(NormalKeyGen@Buffer+3)^0,f,c
 17960                           
 17961                           ;keeloqDecrypt_MC50.c: 110:     LoadManufCode();
 17962  0074F0  EC51  F04E         	call	_LoadManufCode	;wreg free
 17963                           
 17964                           ; BSR set to: 2
 17965                           ;keeloqDecrypt_MC50.c: 111:     Decrypt(Buffer);
 17966  0074F4  0E30               	movlw	low NormalKeyGen@Buffer
 17967  0074F6  6E1B               	movwf	Decrypt@packet^0,c
 17968  0074F8  6A1C               	clrf	(Decrypt@packet+1)^0,c
 17969  0074FA  EC86  F03D         	call	_Decrypt	;wreg free
 17970                           
 17971                           ;keeloqDecrypt_MC50.c: 112:     memcpy(&DKEY[4], Buffer, 4);
 17972  0074FE  0ED5               	movlw	low (_DKEY+4)
 17973  007500  6E10               	movwf	memcpy@d1^0,c
 17974  007502  0E02               	movlw	high (_DKEY+4)
 17975  007504  6E11               	movwf	(memcpy@d1+1)^0,c
 17976  007506  0E30               	movlw	low NormalKeyGen@Buffer
 17977  007508  6E12               	movwf	memcpy@s1^0,c
 17978  00750A  6A13               	clrf	(memcpy@s1+1)^0,c
 17979  00750C  0E00               	movlw	0
 17980  00750E  6E15               	movwf	(memcpy@n+1)^0,c
 17981  007510  0E04               	movlw	4
 17982  007512  6E14               	movwf	memcpy@n^0,c
 17983  007514  ECEC  F04A         	call	_memcpy	;wreg free
 17984                           
 17985                           ;keeloqDecrypt_MC50.c: 113:     memcpy(DKEY, SKEYtemp, 4);
 17986  007518  0ED1               	movlw	low _DKEY
 17987  00751A  6E10               	movwf	memcpy@d1^0,c
 17988  00751C  0E02               	movlw	high _DKEY
 17989  00751E  6E11               	movwf	(memcpy@d1+1)^0,c
 17990  007520  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 17991  007522  6E12               	movwf	memcpy@s1^0,c
 17992  007524  6A13               	clrf	(memcpy@s1+1)^0,c
 17993  007526  0E00               	movlw	0
 17994  007528  6E15               	movwf	(memcpy@n+1)^0,c
 17995  00752A  0E04               	movlw	4
 17996  00752C  6E14               	movwf	memcpy@n^0,c
 17997  00752E  ECEC  F04A         	call	_memcpy	;wreg free
 17998                           
 17999                           ;keeloqDecrypt_MC50.c: 116:     memcpy(Buffer, HOPtemp, 4);
 18000  007532  0E30               	movlw	low NormalKeyGen@Buffer
 18001  007534  6E10               	movwf	memcpy@d1^0,c
 18002  007536  6A11               	clrf	(memcpy@d1+1)^0,c
 18003  007538  0E28               	movlw	low NormalKeyGen@HOPtemp
 18004  00753A  6E12               	movwf	memcpy@s1^0,c
 18005  00753C  6A13               	clrf	(memcpy@s1+1)^0,c
 18006  00753E  0E00               	movlw	0
 18007  007540  6E15               	movwf	(memcpy@n+1)^0,c
 18008  007542  0E04               	movlw	4
 18009  007544  6E14               	movwf	memcpy@n^0,c
 18010  007546  ECEC  F04A         	call	_memcpy	;wreg free
 18011  00754A  0012               	return		;funcret
 18012  00754C                     __end_of_NormalKeyGen:
 18013                           	callstack 0
 18014                           
 18015 ;; *************** function _LoadManufCode *****************
 18016 ;; Defined at:
 18017 ;;		line 63 in file "keeloqDecrypt_MC50.c"
 18018 ;; Parameters:    Size  Location     Type
 18019 ;;		None
 18020 ;; Auto vars:     Size  Location     Type
 18021 ;;		None
 18022 ;; Return value:  Size  Location     Type
 18023 ;;                  1    wreg      void 
 18024 ;; Registers used:
 18025 ;;		wreg, status,2
 18026 ;; Tracked objects:
 18027 ;;		On entry : 0/2
 18028 ;;		On exit  : 3F/2
 18029 ;;		Unchanged: 0/0
 18030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18035 ;;Total ram usage:        0 bytes
 18036 ;; Hardware stack levels used: 1
 18037 ;; Hardware stack levels required when called: 4
 18038 ;; This function calls:
 18039 ;;		Nothing
 18040 ;; This function is called by:
 18041 ;;		_NormalKeyGen
 18042 ;; This function uses a non-reentrant model
 18043 ;;
 18044                           
 18045                           	psect	text61
 18046  009CA2                     __ptext61:
 18047                           	callstack 0
 18048  009CA2                     _LoadManufCode:
 18049                           	callstack 22
 18050                           
 18051                           ;keeloqDecrypt_MC50.c: 64:     DKEY[0] = 0xFF;
 18052                           
 18053                           ;incstack = 0
 18054  009CA2  0102               	movlb	2	; () banked
 18055  009CA4  69D1               	setf	_DKEY& (0+255),b
 18056                           
 18057                           ; BSR set to: 2
 18058                           ;keeloqDecrypt_MC50.c: 65:     DKEY[1] = 0xCA;
 18059  009CA6  0ECA               	movlw	202
 18060  009CA8  6FD2               	movwf	(_DKEY+1)& (0+255),b
 18061                           
 18062                           ;keeloqDecrypt_MC50.c: 66:     DKEY[2] = 0x76;
 18063  009CAA  0E76               	movlw	118
 18064  009CAC  6FD3               	movwf	(_DKEY+2)& (0+255),b
 18065                           
 18066                           ;keeloqDecrypt_MC50.c: 67:     DKEY[3] = 0x94;
 18067  009CAE  0E94               	movlw	148
 18068  009CB0  6FD4               	movwf	(_DKEY+3)& (0+255),b
 18069                           
 18070                           ;keeloqDecrypt_MC50.c: 68:     DKEY[4] = 0x22;
 18071  009CB2  0E22               	movlw	34
 18072  009CB4  6FD5               	movwf	(_DKEY+4)& (0+255),b
 18073                           
 18074                           ;keeloqDecrypt_MC50.c: 69:     DKEY[5] = 0x68;
 18075  009CB6  0E68               	movlw	104
 18076  009CB8  6FD6               	movwf	(_DKEY+5)& (0+255),b
 18077                           
 18078                           ;keeloqDecrypt_MC50.c: 70:     DKEY[6] = 0x27;
 18079  009CBA  0E27               	movlw	39
 18080  009CBC  6FD7               	movwf	(_DKEY+6)& (0+255),b
 18081                           
 18082                           ;keeloqDecrypt_MC50.c: 71:     DKEY[7] = 0x57;
 18083  009CBE  0E57               	movlw	87
 18084  009CC0  6FD8               	movwf	(_DKEY+7)& (0+255),b
 18085                           
 18086                           ; BSR set to: 2
 18087  009CC2  0012               	return		;funcret
 18088  009CC4                     __end_of_LoadManufCode:
 18089                           	callstack 0
 18090                           
 18091 ;; *************** function _Decrypt *****************
 18092 ;; Defined at:
 18093 ;;		line 142 in file "keeloqDecrypt_MC50.c"
 18094 ;; Parameters:    Size  Location     Type
 18095 ;;  packet          2   26[COMRAM] PTR unsigned char 
 18096 ;;		 -> SecureKeyGen@HOPtemp(4), NormalKeyGen@Buffer(8), classic_data(16), 
 18097 ;; Auto vars:     Size  Location     Type
 18098 ;;  Buffer          4   33[COMRAM] unsigned char [4]
 18099 ;;  aux             1   32[COMRAM] unsigned char 
 18100 ;;  p               1   31[COMRAM] char 
 18101 ;;  j               1   30[COMRAM] unsigned char 
 18102 ;;  i               1   29[COMRAM] unsigned char 
 18103 ;;  key             1   28[COMRAM] unsigned char 
 18104 ;; Return value:  Size  Location     Type
 18105 ;;                  1    wreg      void 
 18106 ;; Registers used:
 18107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18108 ;; Tracked objects:
 18109 ;;		On entry : 0/0
 18110 ;;		On exit  : 0/0
 18111 ;;		Unchanged: 0/0
 18112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18113 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18114 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18116 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18117 ;;Total ram usage:       11 bytes
 18118 ;; Hardware stack levels used: 1
 18119 ;; Hardware stack levels required when called: 5
 18120 ;; This function calls:
 18121 ;;		_memcpy
 18122 ;; This function is called by:
 18123 ;;		_NormalKeyGen
 18124 ;;		_keeloq_classic_decrypt_packet
 18125 ;; This function uses a non-reentrant model
 18126 ;;
 18127                           
 18128                           	psect	text62
 18129  007B0C                     __ptext62:
 18130                           	callstack 0
 18131  007B0C                     _Decrypt:
 18132                           	callstack 21
 18133                           
 18134                           ;keeloqDecrypt_MC50.c: 143:     uint_fast8_t i, j;;keeloqDecrypt_MC50.c: 144:     uint8_
      +                          t key, aux;;keeloqDecrypt_MC50.c: 146:     int8_t p;;keeloqDecrypt_MC50.c: 147:     uint
      +                          8_t Buffer[4];;keeloqDecrypt_MC50.c: 149:     memcpy(Buffer, packet, 4);
 18135                           
 18136                           ; BSR set to: 2
 18137                           ;incstack = 0
 18138  007B0C  0E22               	movlw	low Decrypt@Buffer
 18139  007B0E  6E10               	movwf	memcpy@d1^0,c
 18140  007B10  6A11               	clrf	(memcpy@d1+1)^0,c
 18141  007B12  C01B  F012         	movff	Decrypt@packet,memcpy@s1
 18142  007B16  C01C  F013         	movff	Decrypt@packet+1,memcpy@s1+1
 18143  007B1A  0E00               	movlw	0
 18144  007B1C  6E15               	movwf	(memcpy@n+1)^0,c
 18145  007B1E  0E04               	movlw	4
 18146  007B20  6E14               	movwf	memcpy@n^0,c
 18147  007B22  ECEC  F04A         	call	_memcpy	;wreg free
 18148                           
 18149                           ;keeloqDecrypt_MC50.c: 151:     p = 1;
 18150  007B26  0E01               	movlw	1
 18151  007B28  6E20               	movwf	Decrypt@p^0,c
 18152                           
 18153                           ;keeloqDecrypt_MC50.c: 153:     for (j = 66; j > 0; j--) {
 18154  007B2A  0E42               	movlw	66
 18155  007B2C  6E1F               	movwf	Decrypt@j^0,c
 18156  007B2E                     l20669:
 18157                           
 18158                           ;keeloqDecrypt_MC50.c: 154:         key = DKEY[p--];
 18159  007B2E  0ED1               	movlw	low _DKEY
 18160  007B30  2420               	addwf	Decrypt@p^0,w,c
 18161  007B32  6ED9               	movwf	fsr2l,c
 18162  007B34  6ADA               	clrf	fsr2h,c
 18163  007B36  0E02               	movlw	high _DKEY
 18164  007B38  22DA               	addwfc	fsr2h,f,c
 18165  007B3A  50DF               	movf	indf2,w,c
 18166  007B3C  6E1D               	movwf	Decrypt@key^0,c
 18167  007B3E  0620               	decf	Decrypt@p^0,f,c
 18168                           
 18169                           ;keeloqDecrypt_MC50.c: 155:         if (p < 0)
 18170  007B40  AE20               	btfss	Decrypt@p^0,7,c
 18171  007B42  D002               	goto	l20677
 18172                           
 18173                           ;keeloqDecrypt_MC50.c: 156:             p += 8;
 18174  007B44  0E08               	movlw	8
 18175  007B46  2620               	addwf	Decrypt@p^0,f,c
 18176  007B48                     l20677:
 18177                           
 18178                           ;keeloqDecrypt_MC50.c: 157:         for (i = 8; i > 0; i--) {
 18179  007B48  0E08               	movlw	8
 18180  007B4A  6E1E               	movwf	Decrypt@i^0,c
 18181  007B4C                     l1859:
 18182                           
 18183                           ;keeloqDecrypt_MC50.c: 159:             if ((( (Buffer[3]) & (1<<(6))) != 0)) {
 18184  007B4C  AC25               	btfss	(Decrypt@Buffer+3)^0,6,c
 18185  007B4E  D006               	goto	l1861
 18186                           
 18187                           ;keeloqDecrypt_MC50.c: 160:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18188  007B50  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18189  007B52  D002               	goto	l20687
 18190                           
 18191                           ;keeloqDecrypt_MC50.c: 161:                     aux = 0b00111010;
 18192  007B54  0E3A               	movlw	58
 18193  007B56  D007               	goto	L81
 18194  007B58                     l20687:
 18195                           
 18196                           ;keeloqDecrypt_MC50.c: 163:                     aux = 0b01011100;
 18197  007B58  0E5C               	movlw	92
 18198  007B5A  D005               	goto	L81
 18199  007B5C                     l1861:
 18200                           
 18201                           ;keeloqDecrypt_MC50.c: 165:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18202  007B5C  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18203  007B5E  D002               	goto	l20691
 18204                           
 18205                           ;keeloqDecrypt_MC50.c: 166:                     aux = 0b01110100;
 18206  007B60  0E74               	movlw	116
 18207  007B62  D001               	goto	L81
 18208  007B64                     l20691:
 18209                           
 18210                           ;keeloqDecrypt_MC50.c: 168:                     aux = 0b00101110;
 18211  007B64  0E2E               	movlw	46
 18212  007B66                     L81:
 18213  007B66  6E21               	movwf	Decrypt@aux^0,c
 18214                           
 18215                           ;keeloqDecrypt_MC50.c: 172:             if ((( (Buffer[2]) & (1<<(3))) != 0))
 18216  007B68  B624               	btfsc	(Decrypt@Buffer+2)^0,3,c
 18217                           
 18218                           ;keeloqDecrypt_MC50.c: 173:                 aux = (aux << 4) | (aux >> 4);
 18219  007B6A  3A21               	swapf	Decrypt@aux^0,f,c
 18220                           
 18221                           ;keeloqDecrypt_MC50.c: 174:             if ((( (Buffer[1]) & (1<<(0))) != 0))
 18222  007B6C  A023               	btfss	(Decrypt@Buffer+1)^0,0,c
 18223  007B6E  D004               	goto	l20699
 18224                           
 18225                           ;keeloqDecrypt_MC50.c: 175:                 aux <<= 2;
 18226  007B70  90D8               	bcf	status,0,c
 18227  007B72  3621               	rlcf	Decrypt@aux^0,f,c
 18228  007B74  90D8               	bcf	status,0,c
 18229  007B76  3621               	rlcf	Decrypt@aux^0,f,c
 18230  007B78                     l20699:
 18231                           
 18232                           ;keeloqDecrypt_MC50.c: 176:             if ((( (Buffer[0]) & (1<<(0))) != 0))
 18233  007B78  A022               	btfss	Decrypt@Buffer^0,0,c
 18234  007B7A  D002               	goto	l1869
 18235                           
 18236                           ;keeloqDecrypt_MC50.c: 177:                 aux <<= 1;
 18237  007B7C  90D8               	bcf	status,0,c
 18238  007B7E  3621               	rlcf	Decrypt@aux^0,f,c
 18239  007B80                     l1869:
 18240                           
 18241                           ;keeloqDecrypt_MC50.c: 180:             aux ^= Buffer[1] ^ Buffer[3] ^ key;
 18242  007B80  5023               	movf	(Decrypt@Buffer+1)^0,w,c
 18243  007B82  1825               	xorwf	(Decrypt@Buffer+3)^0,w,c
 18244  007B84  181D               	xorwf	Decrypt@key^0,w,c
 18245  007B86  1A21               	xorwf	Decrypt@aux^0,f,c
 18246                           
 18247                           ;keeloqDecrypt_MC50.c: 182:             Buffer[3] = (Buffer[3] << 1) | (Buffer[2] >> 7);
 18248  007B88  90D8               	bcf	status,0,c
 18249  007B8A  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18250  007B8C  3425               	rlcf	(Decrypt@Buffer+3)^0,w,c
 18251  007B8E  6E25               	movwf	(Decrypt@Buffer+3)^0,c
 18252                           
 18253                           ;keeloqDecrypt_MC50.c: 183:             Buffer[2] = (Buffer[2] << 1) | (Buffer[1] >> 7);
 18254  007B90  90D8               	bcf	status,0,c
 18255  007B92  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18256  007B94  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18257  007B96  6E24               	movwf	(Decrypt@Buffer+2)^0,c
 18258                           
 18259                           ;keeloqDecrypt_MC50.c: 184:             Buffer[1] = (Buffer[1] << 1) | (Buffer[0] >> 7);
 18260  007B98  90D8               	bcf	status,0,c
 18261  007B9A  3422               	rlcf	Decrypt@Buffer^0,w,c
 18262  007B9C  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18263  007B9E  6E23               	movwf	(Decrypt@Buffer+1)^0,c
 18264                           
 18265                           ;keeloqDecrypt_MC50.c: 185:             Buffer[0] = (Buffer[0] << 1) | (aux >> 7);
 18266  007BA0  90D8               	bcf	status,0,c
 18267  007BA2  3421               	rlcf	Decrypt@aux^0,w,c
 18268  007BA4  3422               	rlcf	Decrypt@Buffer^0,w,c
 18269  007BA6  6E22               	movwf	Decrypt@Buffer^0,c
 18270                           
 18271                           ;keeloqDecrypt_MC50.c: 188:             key <<= 1;
 18272  007BA8  90D8               	bcf	status,0,c
 18273  007BAA  361D               	rlcf	Decrypt@key^0,f,c
 18274                           
 18275                           ;keeloqDecrypt_MC50.c: 189:         }
 18276  007BAC  061E               	decf	Decrypt@i^0,f,c
 18277  007BAE  501E               	movf	Decrypt@i^0,w,c
 18278  007BB0  A4D8               	btfss	status,2,c
 18279  007BB2  D7CC               	goto	l1859
 18280                           
 18281                           ;keeloqDecrypt_MC50.c: 190:     }
 18282  007BB4  061F               	decf	Decrypt@j^0,f,c
 18283  007BB6  501F               	movf	Decrypt@j^0,w,c
 18284  007BB8  A4D8               	btfss	status,2,c
 18285  007BBA  D7B9               	goto	l20669
 18286                           
 18287                           ;keeloqDecrypt_MC50.c: 192:     memcpy(packet, Buffer, 4);
 18288  007BBC  C01B  F010         	movff	Decrypt@packet,memcpy@d1
 18289  007BC0  C01C  F011         	movff	Decrypt@packet+1,memcpy@d1+1
 18290  007BC4  0E22               	movlw	low Decrypt@Buffer
 18291  007BC6  6E12               	movwf	memcpy@s1^0,c
 18292  007BC8  6A13               	clrf	(memcpy@s1+1)^0,c
 18293  007BCA  0E00               	movlw	0
 18294  007BCC  6E15               	movwf	(memcpy@n+1)^0,c
 18295  007BCE  0E04               	movlw	4
 18296  007BD0  6E14               	movwf	memcpy@n^0,c
 18297  007BD2  ECEC  F04A         	call	_memcpy	;wreg free
 18298  007BD6  0012               	return		;funcret
 18299  007BD8                     __end_of_Decrypt:
 18300                           	callstack 0
 18301                           
 18302 ;; *************** function _HopCHK *****************
 18303 ;; Defined at:
 18304 ;;		line 236 in file "keeloqDecrypt_MC50.c"
 18305 ;; Parameters:    Size  Location     Type
 18306 ;;  data            2   35[COMRAM] PTR struct .
 18307 ;;		 -> classic_data(16), 
 18308 ;; Auto vars:     Size  Location     Type
 18309 ;;  hopDiff         2   37[COMRAM] short 
 18310 ;; Return value:  Size  Location     Type
 18311 ;;                  1    wreg      enum E10730
 18312 ;; Registers used:
 18313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18314 ;; Tracked objects:
 18315 ;;		On entry : 3F/0
 18316 ;;		On exit  : 3C/0
 18317 ;;		Unchanged: 0/0
 18318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18319 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18320 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18322 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18323 ;;Total ram usage:        4 bytes
 18324 ;; Hardware stack levels used: 1
 18325 ;; Hardware stack levels required when called: 6
 18326 ;; This function calls:
 18327 ;;		_ReqResync
 18328 ;;		_getHopCode
 18329 ;; This function is called by:
 18330 ;;		_keeloqDecryptPacket
 18331 ;; This function uses a non-reentrant model
 18332 ;;
 18333                           
 18334                           	psect	text63
 18335  0084B6                     __ptext63:
 18336                           	callstack 0
 18337  0084B6                     _HopCHK:
 18338                           	callstack 22
 18339                           
 18340                           ; BSR set to: 0
 18341                           ;keeloqDecrypt_MC50.c: 237:     int16_t hopDiff;;keeloqDecrypt_MC50.c: 238:     Hop = da
      +                          ta->sync;
 18342                           
 18343                           ;incstack = 0
 18344  0084B6  EE20 F008          	lfsr	2,8
 18345  0084BA  5024               	movf	HopCHK@data^0,w,c
 18346  0084BC  26D9               	addwf	fsr2l,f,c
 18347  0084BE  5025               	movf	(HopCHK@data+1)^0,w,c
 18348  0084C0  22DA               	addwfc	fsr2h,f,c
 18349  0084C2  CFDE F07C          	movff	postinc2,_Hop
 18350  0084C6  CFDD F07D          	movff	postdec2,_Hop+1
 18351                           
 18352                           ; BSR set to: 0
 18353                           ;keeloqDecrypt_MC50.c: 239:     EHop=getHopCode(data);
 18354  0084CA  C024  F016         	movff	HopCHK@data,getHopCode@data
 18355  0084CE  C025  F017         	movff	HopCHK@data+1,getHopCode@data+1
 18356  0084D2  EC43  F037         	call	_getHopCode	;wreg free
 18357  0084D6  C016  F28C         	movff	?_getHopCode,_EHop
 18358  0084DA  C017  F28D         	movff	?_getHopCode+1,_EHop+1
 18359                           
 18360                           ;keeloqDecrypt_MC50.c: 241:     if (F2Chance)
 18361  0084DE  0101               	movlb	1	; () banked
 18362  0084E0  5199               	movf	_F2Chance& (0+255),w,b
 18363  0084E2  B4D8               	btfsc	status,2,c
 18364  0084E4  D010               	goto	l21667
 18365                           
 18366                           ; BSR set to: 1
 18367                           ;keeloqDecrypt_MC50.c: 242:         if (NextHop == Hop) {
 18368  0084E6  0100               	movlb	0	; () banked
 18369  0084E8  517C               	movf	_Hop& (0+255),w,b
 18370  0084EA  0102               	movlb	2	; () banked
 18371  0084EC  198E               	xorwf	_NextHop& (0+255),w,b
 18372  0084EE  E10B               	bnz	l21667
 18373  0084F0  0100               	movlb	0	; () banked
 18374  0084F2  517D               	movf	(_Hop+1)& (0+255),w,b
 18375  0084F4  0102               	movlb	2	; () banked
 18376  0084F6  198F               	xorwf	(_NextHop+1)& (0+255),w,b
 18377  0084F8  A4D8               	btfss	status,2,c
 18378  0084FA  D005               	goto	l21667
 18379                           
 18380                           ; BSR set to: 2
 18381                           ;keeloqDecrypt_MC50.c: 243:             F2Chance = 0;
 18382  0084FC  0E00               	movlw	0
 18383  0084FE  0101               	movlb	1	; () banked
 18384  008500  6F99               	movwf	_F2Chance& (0+255),b
 18385  008502                     l21663:
 18386                           
 18387                           ;keeloqDecrypt_MC50.c: 245:             return VALID_PACKET;
 18388  008502  0E01               	movlw	1
 18389  008504  0012               	return	
 18390  008506                     l21667:
 18391                           
 18392                           ;keeloqDecrypt_MC50.c: 249:     hopDiff = Hop - EHop;
 18393  008506  0102               	movlb	2	; () banked
 18394  008508  518C               	movf	_EHop& (0+255),w,b
 18395  00850A  0100               	movlb	0	; () banked
 18396  00850C  5D7C               	subwf	_Hop& (0+255),w,b
 18397  00850E  6E26               	movwf	HopCHK@hopDiff^0,c
 18398  008510  0102               	movlb	2	; () banked
 18399  008512  518D               	movf	(_EHop+1)& (0+255),w,b
 18400  008514  0100               	movlb	0	; () banked
 18401  008516  597D               	subwfb	(_Hop+1)& (0+255),w,b
 18402  008518  6E27               	movwf	(HopCHK@hopDiff+1)^0,c
 18403                           
 18404                           ;keeloqDecrypt_MC50.c: 251:     if (hopDiff < 0) {
 18405  00851A  AE27               	btfss	(HopCHK@hopDiff+1)^0,7,c
 18406  00851C  D002               	goto	l21675
 18407                           
 18408                           ; BSR set to: 0
 18409                           ;keeloqDecrypt_MC50.c: 254:         return HOP_CHECK_FAIL;
 18410  00851E  0E0A               	movlw	10
 18411  008520  0012               	return	
 18412  008522                     l21675:
 18413                           
 18414                           ; BSR set to: 0
 18415  008522  BE27               	btfsc	(HopCHK@hopDiff+1)^0,7,c
 18416  008524  D7EE               	goto	l21663
 18417  008526  5027               	movf	(HopCHK@hopDiff+1)^0,w,c
 18418  008528  E104               	bnz	u25070
 18419  00852A  0E11               	movlw	17
 18420  00852C  5C26               	subwf	HopCHK@hopDiff^0,w,c
 18421  00852E  A0D8               	btfss	status,0,c
 18422  008530  D7E8               	goto	l21663
 18423  008532                     u25070:
 18424                           
 18425                           ; BSR set to: 0
 18426                           ;keeloqDecrypt_MC50.c: 257:         return ReqResync(Hop);
 18427  008532  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18428  008536  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18429  00853A  EC1A  F04F         	call	_ReqResync	;wreg free
 18430  00853E  0012               	return		;funcret
 18431  008540                     __end_of_HopCHK:
 18432                           	callstack 0
 18433                           
 18434 ;; *************** function _getHopCode *****************
 18435 ;; Defined at:
 18436 ;;		line 266 in file "keeloqDecrypt_MC50.c"
 18437 ;; Parameters:    Size  Location     Type
 18438 ;;  data            2   21[COMRAM] PTR struct .
 18439 ;;		 -> classic_data(16), 
 18440 ;; Auto vars:     Size  Location     Type
 18441 ;;  tempHop         2   31[COMRAM] unsigned short 
 18442 ;;  i               1   34[COMRAM] unsigned char 
 18443 ;;  tempPos         1   33[COMRAM] char 
 18444 ;; Return value:  Size  Location     Type
 18445 ;;                  2   21[COMRAM] unsigned short 
 18446 ;; Registers used:
 18447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18448 ;; Tracked objects:
 18449 ;;		On entry : 3F/0
 18450 ;;		On exit  : 3D/0
 18451 ;;		Unchanged: 0/0
 18452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18454 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18455 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18456 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18457 ;;Total ram usage:       14 bytes
 18458 ;; Hardware stack levels used: 1
 18459 ;; Hardware stack levels required when called: 5
 18460 ;; This function calls:
 18461 ;;		_ReqResync
 18462 ;;		___wmul
 18463 ;; This function is called by:
 18464 ;;		_HopCHK
 18465 ;; This function uses a non-reentrant model
 18466 ;;
 18467                           
 18468                           	psect	text64
 18469  006E86                     __ptext64:
 18470                           	callstack 0
 18471  006E86                     _getHopCode:
 18472                           	callstack 22
 18473                           
 18474                           ; BSR set to: 0
 18475                           ;keeloqDecrypt_MC50.c: 268:     uint16_t tempHop=0;
 18476                           
 18477                           ;incstack = 0
 18478  006E86  0E00               	movlw	0
 18479  006E88  6E21               	movwf	(getHopCode@tempHop+1)^0,c
 18480  006E8A  0E00               	movlw	0
 18481  006E8C  6E20               	movwf	getHopCode@tempHop^0,c
 18482                           
 18483                           ; BSR set to: 0
 18484                           ;keeloqDecrypt_MC50.c: 269:     int8_t tempPos=-1;
 18485  006E8E  6822               	setf	getHopCode@tempPos^0,c
 18486                           
 18487                           ;keeloqDecrypt_MC50.c: 270:     for(i=0;i<25;i++)
 18488  006E90  0E00               	movlw	0
 18489  006E92  6E23               	movwf	getHopCode@i^0,c
 18490  006E94                     l20949:
 18491                           
 18492                           ; BSR set to: 0
 18493                           ;keeloqDecrypt_MC50.c: 271:     {;keeloqDecrypt_MC50.c: 272:         if(listSyncValues[i
      +                          ].serial==data->serialnumber)
 18494  006E94  EE20 F004          	lfsr	2,4
 18495  006E98  5016               	movf	getHopCode@data^0,w,c
 18496  006E9A  26D9               	addwf	fsr2l,f,c
 18497  006E9C  5017               	movf	(getHopCode@data+1)^0,w,c
 18498  006E9E  22DA               	addwfc	fsr2h,f,c
 18499  006EA0  5023               	movf	getHopCode@i^0,w,c
 18500  006EA2  0D06               	mullw	6
 18501  006EA4  0E00               	movlw	low _listSyncValues
 18502  006EA6  24F3               	addwf	243,w,c
 18503  006EA8  6EE1               	movwf	fsr1l,c
 18504  006EAA  0E03               	movlw	high _listSyncValues
 18505  006EAC  20F4               	addwfc	prodh,w,c
 18506  006EAE  6EE2               	movwf	fsr1h,c
 18507  006EB0  50DE               	movf	postinc2,w,c
 18508  006EB2  18E6               	xorwf	postinc1,w,c
 18509  006EB4  E118               	bnz	l20955
 18510  006EB6  50DE               	movf	postinc2,w,c
 18511  006EB8  18E6               	xorwf	postinc1,w,c
 18512  006EBA  E115               	bnz	l20955
 18513  006EBC  50DE               	movf	postinc2,w,c
 18514  006EBE  18E6               	xorwf	postinc1,w,c
 18515  006EC0  E112               	bnz	l20955
 18516  006EC2  50DE               	movf	postinc2,w,c
 18517  006EC4  18E6               	xorwf	postinc1,w,c
 18518  006EC6  A4D8               	btfss	status,2,c
 18519  006EC8  D00E               	goto	l20955
 18520                           
 18521                           ; BSR set to: 0
 18522                           ;keeloqDecrypt_MC50.c: 273:         {;keeloqDecrypt_MC50.c: 274:             tempHop=lis
      +                          tSyncValues[i].sync;
 18523  006ECA  5023               	movf	getHopCode@i^0,w,c
 18524  006ECC  0D06               	mullw	6
 18525  006ECE  0E04               	movlw	low (_listSyncValues+4)
 18526  006ED0  24F3               	addwf	243,w,c
 18527  006ED2  6ED9               	movwf	fsr2l,c
 18528  006ED4  0E03               	movlw	high (_listSyncValues+4)
 18529  006ED6  20F4               	addwfc	prodh,w,c
 18530  006ED8  6EDA               	movwf	fsr2h,c
 18531  006EDA  CFDE F020          	movff	postinc2,getHopCode@tempHop
 18532  006EDE  CFDD F021          	movff	postdec2,getHopCode@tempHop+1
 18533                           
 18534                           ; BSR set to: 0
 18535                           ;keeloqDecrypt_MC50.c: 275:             tempPos=i;
 18536  006EE2  C023  F022         	movff	getHopCode@i,getHopCode@tempPos
 18537  006EE6                     l20955:
 18538                           
 18539                           ; BSR set to: 0
 18540                           ;keeloqDecrypt_MC50.c: 278:     }
 18541  006EE6  2A23               	incf	getHopCode@i^0,f,c
 18542                           
 18543                           ; BSR set to: 0
 18544  006EE8  0E18               	movlw	24
 18545  006EEA  6423               	cpfsgt	getHopCode@i^0,c
 18546  006EEC  D7D3               	goto	l20949
 18547                           
 18548                           ; BSR set to: 0
 18549                           ;keeloqDecrypt_MC50.c: 280:     if(tempPos<0)
 18550  006EEE  AE22               	btfss	getHopCode@tempPos^0,7,c
 18551  006EF0  D050               	goto	l20975
 18552                           
 18553                           ; BSR set to: 0
 18554                           ;keeloqDecrypt_MC50.c: 281:     {;keeloqDecrypt_MC50.c: 282:         listSyncValues[poin
      +                          tSync].serial=data->serialnumber;
 18555  006EF2  EE20 F004          	lfsr	2,4
 18556  006EF6  5016               	movf	getHopCode@data^0,w,c
 18557  006EF8  26D9               	addwf	fsr2l,f,c
 18558  006EFA  5017               	movf	(getHopCode@data+1)^0,w,c
 18559  006EFC  22DA               	addwfc	fsr2h,f,c
 18560  006EFE  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18561  006F02  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18562  006F06  0E00               	movlw	0
 18563  006F08  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18564  006F0A  0E06               	movlw	6
 18565  006F0C  6E12               	movwf	___wmul@multiplicand^0,c
 18566  006F0E  EC06  F04E         	call	___wmul	;wreg free
 18567  006F12  0E00               	movlw	low _listSyncValues
 18568  006F14  2410               	addwf	?___wmul^0,w,c
 18569  006F16  6EE1               	movwf	fsr1l,c
 18570  006F18  0E03               	movlw	high _listSyncValues
 18571  006F1A  2011               	addwfc	(?___wmul+1)^0,w,c
 18572  006F1C  6EE2               	movwf	fsr1h,c
 18573  006F1E  CFDE FFE6          	movff	postinc2,postinc1
 18574  006F22  CFDE FFE6          	movff	postinc2,postinc1
 18575  006F26  CFDE FFE6          	movff	postinc2,postinc1
 18576  006F2A  CFDE FFE6          	movff	postinc2,postinc1
 18577                           
 18578                           ;keeloqDecrypt_MC50.c: 283:         listSyncValues[pointSync].sync=data->sync;
 18579  006F2E  EE20 F008          	lfsr	2,8
 18580  006F32  5016               	movf	getHopCode@data^0,w,c
 18581  006F34  26D9               	addwf	fsr2l,f,c
 18582  006F36  5017               	movf	(getHopCode@data+1)^0,w,c
 18583  006F38  22DA               	addwfc	fsr2h,f,c
 18584  006F3A  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18585  006F3E  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18586  006F42  0E00               	movlw	0
 18587  006F44  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18588  006F46  0E06               	movlw	6
 18589  006F48  6E12               	movwf	___wmul@multiplicand^0,c
 18590  006F4A  EC06  F04E         	call	___wmul	;wreg free
 18591  006F4E  0E04               	movlw	low (_listSyncValues+4)
 18592  006F50  2410               	addwf	?___wmul^0,w,c
 18593  006F52  6EE1               	movwf	fsr1l,c
 18594  006F54  0E03               	movlw	high (_listSyncValues+4)
 18595  006F56  2011               	addwfc	(?___wmul+1)^0,w,c
 18596  006F58  6EE2               	movwf	fsr1h,c
 18597  006F5A  CFDE FFE6          	movff	postinc2,postinc1
 18598  006F5E  CFDD FFE5          	movff	postdec2,postdec1
 18599                           
 18600                           ;keeloqDecrypt_MC50.c: 284:         pointSync++;
 18601  006F62  0100               	movlb	0	; () banked
 18602  006F64  4B7A               	infsnz	_pointSync& (0+255),f,b	;volatile
 18603  006F66  2B7B               	incf	(_pointSync+1)& (0+255),f,b	;volatile
 18604                           
 18605                           ; BSR set to: 0
 18606                           ;keeloqDecrypt_MC50.c: 285:         if(pointSync>=25)
 18607  006F68  517B               	movf	(_pointSync+1)& (0+255),w,b	;volatile
 18608  006F6A  E104               	bnz	u24110
 18609  006F6C  0E19               	movlw	25
 18610  006F6E  5D7A               	subwf	_pointSync& (0+255),w,b	;volatile
 18611  006F70  A0D8               	btfss	status,0,c
 18612  006F72  D004               	goto	l20969
 18613  006F74                     u24110:
 18614                           
 18615                           ; BSR set to: 0
 18616                           ;keeloqDecrypt_MC50.c: 286:         {;keeloqDecrypt_MC50.c: 287:             pointSync=0
      +                          ;
 18617  006F74  0E00               	movlw	0
 18618  006F76  6F7B               	movwf	(_pointSync+1)& (0+255),b	;volatile
 18619  006F78  0E00               	movlw	0
 18620  006F7A  6F7A               	movwf	_pointSync& (0+255),b	;volatile
 18621  006F7C                     l20969:
 18622                           
 18623                           ; BSR set to: 0
 18624                           ;keeloqDecrypt_MC50.c: 289:         return ReqResync(Hop);
 18625  006F7C  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18626  006F80  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18627  006F84  EC1A  F04F         	call	_ReqResync	;wreg free
 18628  006F88  6E18               	movwf	??_getHopCode^0,c
 18629  006F8A  5018               	movf	??_getHopCode^0,w,c
 18630  006F8C  6E16               	movwf	?_getHopCode^0,c
 18631  006F8E  6A17               	clrf	(?_getHopCode+1)^0,c
 18632  006F90  0012               	return	
 18633  006F92                     l20975:
 18634                           
 18635                           ; BSR set to: 0
 18636                           ;keeloqDecrypt_MC50.c: 292:     {;keeloqDecrypt_MC50.c: 293:         listSyncValues[temp
      +                          Pos].sync=Hop;
 18637  006F92  5022               	movf	getHopCode@tempPos^0,w,c
 18638  006F94  0D06               	mullw	6
 18639  006F96  0E04               	movlw	low (_listSyncValues+4)
 18640  006F98  24F3               	addwf	243,w,c
 18641  006F9A  6ED9               	movwf	fsr2l,c
 18642  006F9C  0E03               	movlw	high (_listSyncValues+4)
 18643  006F9E  20F4               	addwfc	prodh,w,c
 18644  006FA0  6EDA               	movwf	fsr2h,c
 18645  006FA2  C07C  FFDE         	movff	_Hop,postinc2
 18646  006FA6  C07D  FFDD         	movff	_Hop+1,postdec2
 18647                           
 18648                           ; BSR set to: 0
 18649                           ;keeloqDecrypt_MC50.c: 296:     return tempHop;
 18650  006FAA  C020  F016         	movff	getHopCode@tempHop,?_getHopCode
 18651  006FAE  C021  F017         	movff	getHopCode@tempHop+1,?_getHopCode+1
 18652  006FB2  0012               	return		;funcret
 18653  006FB4                     __end_of_getHopCode:
 18654                           	callstack 0
 18655                           
 18656 ;; *************** function _ReqResync *****************
 18657 ;; Defined at:
 18658 ;;		line 224 in file "keeloqDecrypt_MC50.c"
 18659 ;; Parameters:    Size  Location     Type
 18660 ;;  CurrentHop      2   15[COMRAM] unsigned short 
 18661 ;; Auto vars:     Size  Location     Type
 18662 ;;		None
 18663 ;; Return value:  Size  Location     Type
 18664 ;;                  1    wreg      enum E10730
 18665 ;; Registers used:
 18666 ;;		wreg, status,2, status,0
 18667 ;; Tracked objects:
 18668 ;;		On entry : 3F/0
 18669 ;;		On exit  : 3F/2
 18670 ;;		Unchanged: 0/0
 18671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18675 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18676 ;;Total ram usage:        2 bytes
 18677 ;; Hardware stack levels used: 1
 18678 ;; Hardware stack levels required when called: 4
 18679 ;; This function calls:
 18680 ;;		Nothing
 18681 ;; This function is called by:
 18682 ;;		_HopCHK
 18683 ;;		_getHopCode
 18684 ;; This function uses a non-reentrant model
 18685 ;;
 18686                           
 18687                           	psect	text65
 18688  009E34                     __ptext65:
 18689                           	callstack 0
 18690  009E34                     _ReqResync:
 18691                           	callstack 22
 18692                           
 18693                           ; BSR set to: 0
 18694                           ;keeloqDecrypt_MC50.c: 225:     F2Chance = 1;
 18695                           
 18696                           ;incstack = 0
 18697  009E34  0E01               	movlw	1
 18698  009E36  0101               	movlb	1	; () banked
 18699  009E38  6F99               	movwf	_F2Chance& (0+255),b
 18700                           
 18701                           ; BSR set to: 1
 18702                           ;keeloqDecrypt_MC50.c: 226:     NextHop = CurrentHop + 1;
 18703  009E3A  0E01               	movlw	1
 18704  009E3C  2410               	addwf	ReqResync@CurrentHop^0,w,c
 18705  009E3E  0102               	movlb	2	; () banked
 18706  009E40  6F8E               	movwf	_NextHop& (0+255),b
 18707  009E42  0E00               	movlw	0
 18708  009E44  2011               	addwfc	(ReqResync@CurrentHop+1)^0,w,c
 18709  009E46  6F8F               	movwf	(_NextHop+1)& (0+255),b
 18710                           
 18711                           ; BSR set to: 2
 18712                           ;keeloqDecrypt_MC50.c: 228:     return RESYNC_REQ;
 18713  009E48  0E09               	movlw	9
 18714                           
 18715                           ; BSR set to: 2
 18716  009E4A  0012               	return		;funcret
 18717  009E4C                     __end_of_ReqResync:
 18718                           	callstack 0
 18719                           
 18720 ;; *************** function _DecCHK *****************
 18721 ;; Defined at:
 18722 ;;		line 206 in file "keeloqDecrypt_MC50.c"
 18723 ;; Parameters:    Size  Location     Type
 18724 ;;  data            2   15[COMRAM] PTR struct .
 18725 ;;		 -> classic_data(16), 
 18726 ;; Auto vars:     Size  Location     Type
 18727 ;;		None
 18728 ;; Return value:  Size  Location     Type
 18729 ;;                  1    wreg      _Bool 
 18730 ;; Registers used:
 18731 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18732 ;; Tracked objects:
 18733 ;;		On entry : 3F/0
 18734 ;;		On exit  : 3F/0
 18735 ;;		Unchanged: 3F/0
 18736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18737 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18739 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18740 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18741 ;;Total ram usage:        4 bytes
 18742 ;; Hardware stack levels used: 1
 18743 ;; Hardware stack levels required when called: 4
 18744 ;; This function calls:
 18745 ;;		Nothing
 18746 ;; This function is called by:
 18747 ;;		_keeloqDecryptPacket
 18748 ;; This function uses a non-reentrant model
 18749 ;;
 18750                           
 18751                           	psect	text66
 18752  009840                     __ptext66:
 18753                           	callstack 0
 18754  009840                     _DecCHK:
 18755                           	callstack 24
 18756                           
 18757                           ; BSR set to: 0
 18758                           ;keeloqDecrypt_MC50.c: 208:     if (((data->fcode1 ^ data->fcode2) & 0x0f) != 0)
 18759                           
 18760                           ; BSR set to: 2
 18761                           ;incstack = 0
 18762  009840  EE20 F00D          	lfsr	2,13
 18763  009844  5010               	movf	DecCHK@data^0,w,c
 18764  009846  26D9               	addwf	fsr2l,f,c
 18765  009848  5011               	movf	(DecCHK@data+1)^0,w,c
 18766  00984A  22DA               	addwfc	fsr2h,f,c
 18767  00984C  50DF               	movf	indf2,w,c
 18768  00984E  6E12               	movwf	??_DecCHK^0,c
 18769  009850  EE20 F00C          	lfsr	2,12
 18770  009854  5010               	movf	DecCHK@data^0,w,c
 18771  009856  26D9               	addwf	fsr2l,f,c
 18772  009858  5011               	movf	(DecCHK@data+1)^0,w,c
 18773  00985A  22DA               	addwfc	fsr2h,f,c
 18774  00985C  50DF               	movf	indf2,w,c
 18775  00985E  1812               	xorwf	??_DecCHK^0,w,c
 18776  009860  6E13               	movwf	(??_DecCHK+1)^0,c
 18777  009862  0E0F               	movlw	15
 18778  009864  1613               	andwf	(??_DecCHK+1)^0,f,c
 18779  009866  B4D8               	btfsc	status,2,c
 18780  009868  D002               	goto	l21649
 18781                           
 18782                           ; BSR set to: 0
 18783                           ;keeloqDecrypt_MC50.c: 209:         return 0;
 18784  00986A  0E00               	movlw	0
 18785  00986C  0012               	return	
 18786  00986E                     l21649:
 18787                           
 18788                           ; BSR set to: 0
 18789                           ;keeloqDecrypt_MC50.c: 211:     return 1;
 18790  00986E  0E01               	movlw	1
 18791                           
 18792                           ; BSR set to: 0
 18793  009870  0012               	return		;funcret
 18794  009872                     __end_of_DecCHK:
 18795                           	callstack 0
 18796                           
 18797 ;; *************** function _DecryptPacket_12BIT *****************
 18798 ;; Defined at:
 18799 ;;		line 370 in file "keeloqDecrypt_MC50.c"
 18800 ;; Parameters:    Size  Location     Type
 18801 ;;  data            2    8[BANK0 ] PTR unsigned char 
 18802 ;;		 -> BufferRF(9), 
 18803 ;;  classic_data    2   10[BANK0 ] PTR struct .
 18804 ;;		 -> classic_data(16), 
 18805 ;; Auto vars:     Size  Location     Type
 18806 ;;  commandType     1   12[BANK0 ] enum E10539
 18807 ;; Return value:  Size  Location     Type
 18808 ;;                  1    wreg      enum E10539
 18809 ;; Registers used:
 18810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18811 ;; Tracked objects:
 18812 ;;		On entry : 3F/0
 18813 ;;		On exit  : 3F/0
 18814 ;;		Unchanged: 0/0
 18815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18816 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18817 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18819 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18820 ;;Total ram usage:        5 bytes
 18821 ;; Hardware stack levels used: 1
 18822 ;; Hardware stack levels required when called: 14
 18823 ;; This function calls:
 18824 ;;		_memcpy
 18825 ;;		_validateRemoteSerialNumber
 18826 ;; This function is called by:
 18827 ;;		_readRFButtons
 18828 ;; This function uses a non-reentrant model
 18829 ;;
 18830                           
 18831                           	psect	text67
 18832  008312                     __ptext67:
 18833                           	callstack 0
 18834  008312                     _DecryptPacket_12BIT:
 18835                           	callstack 15
 18836                           
 18837                           ; BSR set to: 0
 18838                           ;keeloqDecrypt_MC50.c: 370: TypeCMD DecryptPacket_12BIT (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 371: {;keeloqDecrypt_MC50.c: 372:     TypeCMD command
      +                          Type;;keeloqDecrypt_MC50.c: 373:     memcpy(&classic_data->serialnumber, data, 4);
 18839                           
 18840                           ; BSR set to: 0
 18841                           ;incstack = 0
 18842  008312  0E04               	movlw	4
 18843  008314  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18844  008316  6E10               	movwf	memcpy@d1^0,c
 18845  008318  0E00               	movlw	0
 18846  00831A  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18847  00831C  6E11               	movwf	(memcpy@d1+1)^0,c
 18848  00831E  C0E0  F012         	movff	DecryptPacket_12BIT@data,memcpy@s1
 18849  008322  C0E1  F013         	movff	DecryptPacket_12BIT@data+1,memcpy@s1+1
 18850  008326  0E00               	movlw	0
 18851  008328  6E15               	movwf	(memcpy@n+1)^0,c
 18852  00832A  0E04               	movlw	4
 18853  00832C  6E14               	movwf	memcpy@n^0,c
 18854  00832E  ECEC  F04A         	call	_memcpy	;wreg free
 18855                           
 18856                           ;keeloqDecrypt_MC50.c: 374:     commandType=validateRemoteSerialNumber(classic_data->ser
      +                          ialnumber,NO,&classic_data->positionMem);
 18857  008332  0100               	movlb	0	; () banked
 18858  008334  EE20 F004          	lfsr	2,4
 18859  008338  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18860  00833A  26D9               	addwf	fsr2l,f,c
 18861  00833C  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18862  00833E  22DA               	addwfc	fsr2h,f,c
 18863  008340  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 18864  008344  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 18865  008348  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 18866  00834C  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 18867  008350  0E00               	movlw	0
 18868  008352  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 18869  008354  0E0F               	movlw	15
 18870  008356  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18871  008358  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 18872  00835A  0E00               	movlw	0
 18873  00835C  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18874  00835E  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 18875  008360  EC26  F031         	call	_validateRemoteSerialNumber	;wreg free
 18876  008364  6FE4               	movwf	DecryptPacket_12BIT@commandType& (0+255),b
 18877                           
 18878                           ; BSR set to: 0
 18879                           ;keeloqDecrypt_MC50.c: 375:     classic_data->fcode1 = 0;
 18880  008366  EE20 F00C          	lfsr	2,12
 18881  00836A  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18882  00836C  26D9               	addwf	fsr2l,f,c
 18883  00836E  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18884  008370  22DA               	addwfc	fsr2h,f,c
 18885  008372  0E00               	movlw	0
 18886  008374  6EDF               	movwf	indf2,c
 18887                           
 18888                           ; BSR set to: 0
 18889                           ;keeloqDecrypt_MC50.c: 376:     classic_data->sync = 0;
 18890  008376  EE20 F008          	lfsr	2,8
 18891  00837A  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18892  00837C  26D9               	addwf	fsr2l,f,c
 18893  00837E  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18894  008380  22DA               	addwfc	fsr2h,f,c
 18895  008382  0E00               	movlw	0
 18896  008384  6EDE               	movwf	postinc2,c
 18897  008386  0E00               	movlw	0
 18898  008388  6EDD               	movwf	postdec2,c
 18899                           
 18900                           ; BSR set to: 0
 18901                           ;keeloqDecrypt_MC50.c: 377:     classic_data->type=DIP_12BIT;
 18902  00838A  EE20 F00E          	lfsr	2,14
 18903  00838E  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18904  008390  26D9               	addwf	fsr2l,f,c
 18905  008392  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18906  008394  22DA               	addwfc	fsr2h,f,c
 18907  008396  0E02               	movlw	2
 18908  008398  6EDF               	movwf	indf2,c
 18909                           
 18910                           ; BSR set to: 0
 18911                           ;keeloqDecrypt_MC50.c: 386:     return commandType;
 18912  00839A  51E4               	movf	DecryptPacket_12BIT@commandType& (0+255),w,b
 18913                           
 18914                           ; BSR set to: 0
 18915  00839C  0012               	return		;funcret
 18916  00839E                     __end_of_DecryptPacket_12BIT:
 18917                           	callstack 0
 18918                           
 18919 ;; *************** function _readInputs *****************
 18920 ;; Defined at:
 18921 ;;		line 528 in file "inputs_MC50.c"
 18922 ;; Parameters:    Size  Location     Type
 18923 ;;		None
 18924 ;; Auto vars:     Size  Location     Type
 18925 ;;		None
 18926 ;; Return value:  Size  Location     Type
 18927 ;;                  1    wreg      void 
 18928 ;; Registers used:
 18929 ;;		wreg, status,2, status,0
 18930 ;; Tracked objects:
 18931 ;;		On entry : 3F/1
 18932 ;;		On exit  : 3E/0
 18933 ;;		Unchanged: 0/0
 18934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18939 ;;Total ram usage:        0 bytes
 18940 ;; Hardware stack levels used: 1
 18941 ;; Hardware stack levels required when called: 4
 18942 ;; This function calls:
 18943 ;;		Nothing
 18944 ;; This function is called by:
 18945 ;;		_main
 18946 ;; This function uses a non-reentrant model
 18947 ;;
 18948                           
 18949                           	psect	text68
 18950  00754C                     __ptext68:
 18951                           	callstack 0
 18952  00754C                     _readInputs:
 18953                           	callstack 26
 18954                           
 18955                           ; BSR set to: 1
 18956                           ;inputs_MC50.c: 533:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoClose
      +                          AUX=PORTAbits.RA1;}
 18957                           
 18958                           ; BSR set to: 0
 18959                           ;incstack = 0
 18960  00754C  0100               	movlb	0	; () banked
 18961  00754E  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 18962  007550  A4D8               	btfss	status,2,c
 18963  007552  D006               	goto	l24905
 18964                           
 18965                           ; BSR set to: 0
 18966  007554  0E00               	movlw	0
 18967  007556  B28D               	btfsc	141,1,c	;volatile
 18968  007558  0E01               	movlw	1
 18969  00755A  0101               	movlb	1	; () banked
 18970  00755C  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 18971  00755E  D005               	goto	l24907
 18972  007560                     l24905:
 18973                           
 18974                           ; BSR set to: 0
 18975  007560  0E00               	movlw	0
 18976  007562  B48D               	btfsc	141,2,c	;volatile
 18977  007564  0E01               	movlw	1
 18978  007566  0101               	movlb	1	; () banked
 18979  007568  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 18980  00756A                     l24907:
 18981                           
 18982                           ; BSR set to: 1
 18983                           ;inputs_MC50.c: 541:     if (fimdecurso.FimdeCursoCloseAUX==fimdecurso.FimdeCursoCloseOL
      +                          D)
 18984  00756A  5179               	movf	(_fimdecurso+4)& (0+255),w,b	;volatile
 18985  00756C  1978               	xorwf	(_fimdecurso+3)& (0+255),w,b	;volatile
 18986  00756E  A4D8               	btfss	status,2,c
 18987  007570  D002               	goto	l1731
 18988                           
 18989                           ; BSR set to: 1
 18990                           ;inputs_MC50.c: 542:     {;inputs_MC50.c: 543:            fimdecurso.FimdeCursoCloseTime
      +                          r++;
 18991  007572  2B7A               	incf	(_fimdecurso+5)& (0+255),f,b	;volatile
 18992                           
 18993                           ;inputs_MC50.c: 544:     }
 18994  007574  D004               	goto	l1732
 18995  007576                     l1731:
 18996                           
 18997                           ; BSR set to: 1
 18998                           ;inputs_MC50.c: 547:     {;inputs_MC50.c: 548:             fimdecurso.FimdeCursoCloseOLD
      +                           = fimdecurso.FimdeCursoCloseAUX;
 18999  007576  C178  F179         	movff	_fimdecurso+3,_fimdecurso+4	;volatile
 19000                           
 19001                           ; BSR set to: 1
 19002                           ;inputs_MC50.c: 549:             fimdecurso.FimdeCursoCloseTimer=0;
 19003  00757A  0E00               	movlw	0
 19004  00757C  6F7A               	movwf	(_fimdecurso+5)& (0+255),b	;volatile
 19005  00757E                     l1732:
 19006                           
 19007                           ; BSR set to: 1
 19008                           ;inputs_MC50.c: 553:     if (fimdecurso.FimdeCursoCloseTimer>=( 50/50))
 19009  00757E  517A               	movf	(_fimdecurso+5)& (0+255),w,b	;volatile
 19010  007580  A4D8               	btfss	status,2,c
 19011                           
 19012                           ; BSR set to: 1
 19013                           ;inputs_MC50.c: 554:     {;inputs_MC50.c: 555:         var_sys.FimCurso_CloseIsEnabled=f
      +                          imdecurso.FimdeCursoCloseAUX;
 19014  007582  C178  F103         	movff	_fimdecurso+3,_var_sys+3	;volatile
 19015                           
 19016                           ; BSR set to: 1
 19017                           ;inputs_MC50.c: 564:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoOpenA
      +                          UX=PORTAbits.RA2;}
 19018  007586  0100               	movlb	0	; () banked
 19019  007588  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 19020  00758A  A4D8               	btfss	status,2,c
 19021  00758C  D006               	goto	l24919
 19022                           
 19023                           ; BSR set to: 0
 19024  00758E  0E00               	movlw	0
 19025  007590  B48D               	btfsc	141,2,c	;volatile
 19026  007592  0E01               	movlw	1
 19027  007594  0101               	movlb	1	; () banked
 19028  007596  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 19029  007598  D005               	goto	l24921
 19030  00759A                     l24919:
 19031                           
 19032                           ; BSR set to: 0
 19033  00759A  0E00               	movlw	0
 19034  00759C  B28D               	btfsc	141,1,c	;volatile
 19035  00759E  0E01               	movlw	1
 19036  0075A0  0101               	movlb	1	; () banked
 19037  0075A2  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 19038  0075A4                     l24921:
 19039                           
 19040                           ; BSR set to: 1
 19041                           ;inputs_MC50.c: 570:     if (fimdecurso.FimdeCursoOpenAUX==fimdecurso.FimdeCursoOpenOLD)
 19042  0075A4  5175               	movf	_fimdecurso& (0+255),w,b	;volatile
 19043  0075A6  1976               	xorwf	(_fimdecurso+1)& (0+255),w,b	;volatile
 19044  0075A8  A4D8               	btfss	status,2,c
 19045  0075AA  D002               	goto	l1736
 19046                           
 19047                           ; BSR set to: 1
 19048                           ;inputs_MC50.c: 571:     {;inputs_MC50.c: 572:            fimdecurso.FimdeCursoOpenTimer
      +                          ++;
 19049  0075AC  2B77               	incf	(_fimdecurso+2)& (0+255),f,b	;volatile
 19050                           
 19051                           ;inputs_MC50.c: 573:     }
 19052  0075AE  D004               	goto	l1737
 19053  0075B0                     l1736:
 19054                           
 19055                           ; BSR set to: 1
 19056                           ;inputs_MC50.c: 576:     {;inputs_MC50.c: 577:             fimdecurso.FimdeCursoOpenOLD 
      +                          = fimdecurso.FimdeCursoOpenAUX;
 19057  0075B0  C175  F176         	movff	_fimdecurso,_fimdecurso+1	;volatile
 19058                           
 19059                           ; BSR set to: 1
 19060                           ;inputs_MC50.c: 578:             fimdecurso.FimdeCursoOpenTimer=0;
 19061  0075B4  0E00               	movlw	0
 19062  0075B6  6F77               	movwf	(_fimdecurso+2)& (0+255),b	;volatile
 19063  0075B8                     l1737:
 19064                           
 19065                           ; BSR set to: 1
 19066                           ;inputs_MC50.c: 582:     if (fimdecurso.FimdeCursoOpenTimer>=( 50/50))
 19067  0075B8  5177               	movf	(_fimdecurso+2)& (0+255),w,b	;volatile
 19068  0075BA  A4D8               	btfss	status,2,c
 19069                           
 19070                           ; BSR set to: 1
 19071                           ;inputs_MC50.c: 583:     {;inputs_MC50.c: 584:         var_sys.FimCurso_OpenIsEnabled=fi
      +                          mdecurso.FimdeCursoOpenAUX;
 19072  0075BC  C175  F104         	movff	_fimdecurso,_var_sys+4	;volatile
 19073                           
 19074                           ; BSR set to: 1
 19075                           ;inputs_MC50.c: 589:     security.PhotoCellAUX=PORTAbits.RA4;
 19076  0075C0  0E00               	movlw	0
 19077  0075C2  B88D               	btfsc	141,4,c	;volatile
 19078  0075C4  0E01               	movlw	1
 19079  0075C6  6F6A               	movwf	_security& (0+255),b	;volatile
 19080                           
 19081                           ; BSR set to: 1
 19082                           ;inputs_MC50.c: 594:     if (security.PhotoCellAUX==security.PhotoCellOLD)
 19083  0075C8  516A               	movf	_security& (0+255),w,b	;volatile
 19084  0075CA  196B               	xorwf	(_security+1)& (0+255),w,b	;volatile
 19085  0075CC  A4D8               	btfss	status,2,c
 19086  0075CE  D002               	goto	l1739
 19087                           
 19088                           ; BSR set to: 1
 19089                           ;inputs_MC50.c: 595:     {;inputs_MC50.c: 596:            security.PhotoCellTimer++;
 19090  0075D0  2B6C               	incf	(_security+2)& (0+255),f,b	;volatile
 19091                           
 19092                           ;inputs_MC50.c: 597:     }
 19093  0075D2  D004               	goto	l1740
 19094  0075D4                     l1739:
 19095                           
 19096                           ; BSR set to: 1
 19097                           ;inputs_MC50.c: 600:     {;inputs_MC50.c: 601:             security.PhotoCellOLD = secur
      +                          ity.PhotoCellAUX;
 19098  0075D4  C16A  F16B         	movff	_security,_security+1	;volatile
 19099                           
 19100                           ; BSR set to: 1
 19101                           ;inputs_MC50.c: 602:             security.PhotoCellTimer=0;
 19102  0075D8  0E00               	movlw	0
 19103  0075DA  6F6C               	movwf	(_security+2)& (0+255),b	;volatile
 19104  0075DC                     l1740:
 19105                           
 19106                           ; BSR set to: 1
 19107                           ;inputs_MC50.c: 606:     if (security.PhotoCellTimer>=( 50/50))
 19108  0075DC  516C               	movf	(_security+2)& (0+255),w,b	;volatile
 19109  0075DE  A4D8               	btfss	status,2,c
 19110                           
 19111                           ; BSR set to: 1
 19112                           ;inputs_MC50.c: 607:     {;inputs_MC50.c: 608:         var_sys.photoCellIsObstructed=sec
      +                          urity.PhotoCellAUX;
 19113  0075E0  C16A  F101         	movff	_security,_var_sys+1	;volatile
 19114                           
 19115                           ; BSR set to: 1
 19116                           ;inputs_MC50.c: 612:     security.SecurityBarAUX=PORTAbits.RA5;
 19117  0075E4  0E00               	movlw	0
 19118  0075E6  BA8D               	btfsc	141,5,c	;volatile
 19119  0075E8  0E01               	movlw	1
 19120  0075EA  6F6D               	movwf	(_security+3)& (0+255),b	;volatile
 19121                           
 19122                           ; BSR set to: 1
 19123                           ;inputs_MC50.c: 616:     if (security.SecurityBarAUX==security.SecurityBarOLD)
 19124  0075EC  516E               	movf	(_security+4)& (0+255),w,b	;volatile
 19125  0075EE  196D               	xorwf	(_security+3)& (0+255),w,b	;volatile
 19126  0075F0  A4D8               	btfss	status,2,c
 19127  0075F2  D002               	goto	l1742
 19128                           
 19129                           ; BSR set to: 1
 19130                           ;inputs_MC50.c: 617:     {;inputs_MC50.c: 618:            security.SecurityBarTimer++;
 19131  0075F4  2B6F               	incf	(_security+5)& (0+255),f,b	;volatile
 19132                           
 19133                           ;inputs_MC50.c: 619:     }
 19134  0075F6  D004               	goto	l1743
 19135  0075F8                     l1742:
 19136                           
 19137                           ; BSR set to: 1
 19138                           ;inputs_MC50.c: 622:     {;inputs_MC50.c: 623:             security.SecurityBarOLD = sec
      +                          urity.SecurityBarAUX;
 19139  0075F8  C16D  F16E         	movff	_security+3,_security+4	;volatile
 19140                           
 19141                           ; BSR set to: 1
 19142                           ;inputs_MC50.c: 624:             security.SecurityBarTimer=0;
 19143  0075FC  0E00               	movlw	0
 19144  0075FE  6F6F               	movwf	(_security+5)& (0+255),b	;volatile
 19145  007600                     l1743:
 19146                           
 19147                           ; BSR set to: 1
 19148                           ;inputs_MC50.c: 628:     if (security.SecurityBarTimer>=( 50/50))
 19149  007600  516F               	movf	(_security+5)& (0+255),w,b	;volatile
 19150  007602  A4D8               	btfss	status,2,c
 19151                           
 19152                           ; BSR set to: 1
 19153                           ;inputs_MC50.c: 629:     {;inputs_MC50.c: 630:         security.SecurityBarSTATE=securit
      +                          y.SecurityBarAUX;
 19154  007604  C16D  F170         	movff	_security+3,_security+6	;volatile
 19155                           
 19156                           ; BSR set to: 1
 19157                           ;inputs_MC50.c: 633:     security.SecurityBar8K2AUX=PORTAbits.RA6;
 19158  007608  0E00               	movlw	0
 19159  00760A  BC8D               	btfsc	141,6,c	;volatile
 19160  00760C  0E01               	movlw	1
 19161  00760E  6F71               	movwf	(_security+7)& (0+255),b	;volatile
 19162                           
 19163                           ; BSR set to: 1
 19164                           ;inputs_MC50.c: 637:     if (security.SecurityBar8K2AUX==security.SecurityBar8K2OLD)
 19165  007610  5172               	movf	(_security+8)& (0+255),w,b	;volatile
 19166  007612  1971               	xorwf	(_security+7)& (0+255),w,b	;volatile
 19167  007614  A4D8               	btfss	status,2,c
 19168  007616  D002               	goto	l1745
 19169                           
 19170                           ; BSR set to: 1
 19171                           ;inputs_MC50.c: 638:     {;inputs_MC50.c: 639:            security.SecurityBar8K2Timer++
      +                          ;
 19172  007618  2B73               	incf	(_security+9)& (0+255),f,b	;volatile
 19173                           
 19174                           ;inputs_MC50.c: 640:     }
 19175  00761A  D004               	goto	l1746
 19176  00761C                     l1745:
 19177                           
 19178                           ; BSR set to: 1
 19179                           ;inputs_MC50.c: 643:     {;inputs_MC50.c: 644:             security.SecurityBar8K2OLD = 
      +                          security.SecurityBar8K2AUX;
 19180  00761C  C171  F172         	movff	_security+7,_security+8	;volatile
 19181                           
 19182                           ; BSR set to: 1
 19183                           ;inputs_MC50.c: 645:             security.SecurityBar8K2Timer=0;
 19184  007620  0E00               	movlw	0
 19185  007622  6F73               	movwf	(_security+9)& (0+255),b	;volatile
 19186  007624                     l1746:
 19187                           
 19188                           ; BSR set to: 1
 19189                           ;inputs_MC50.c: 649:     if (security.SecurityBar8K2Timer>=( 50/50))
 19190  007624  5173               	movf	(_security+9)& (0+255),w,b	;volatile
 19191  007626  A4D8               	btfss	status,2,c
 19192                           
 19193                           ; BSR set to: 1
 19194                           ;inputs_MC50.c: 650:     {;inputs_MC50.c: 651:         security.SecurityBar8K2STATE=secu
      +                          rity.SecurityBar8K2AUX;
 19195  007628  C171  F174         	movff	_security+7,_security+10	;volatile
 19196                           
 19197                           ; BSR set to: 1
 19198                           ;inputs_MC50.c: 655:     if (var_sys_NVM.securityBandType == 0)
 19199  00762C  0100               	movlb	0	; () banked
 19200  00762E  51A2               	movf	(_var_sys_NVM+10)& (0+255),w,b	;volatile
 19201  007630  A4D8               	btfss	status,2,c
 19202  007632  D00D               	goto	l1748
 19203                           
 19204                           ; BSR set to: 0
 19205                           ;inputs_MC50.c: 656:     {;inputs_MC50.c: 657:         if(security.SecurityBarSTATE==0 &
      +                          & security.SecurityBar8K2STATE==1)
 19206  007634  0101               	movlb	1	; () banked
 19207  007636  5170               	movf	(_security+6)& (0+255),w,b	;volatile
 19208  007638  A4D8               	btfss	status,2,c
 19209  00763A  D006               	goto	l24967
 19210                           
 19211                           ; BSR set to: 1
 19212  00763C  0574               	decf	(_security+10)& (0+255),w,b	;volatile
 19213  00763E  A4D8               	btfss	status,2,c
 19214  007640  D003               	goto	l24967
 19215                           
 19216                           ; BSR set to: 1
 19217                           ;inputs_MC50.c: 658:         {;inputs_MC50.c: 659:             var_sys.SecurityBarIsObst
      +                          ructed = NO;
 19218  007642  0E00               	movlw	0
 19219  007644  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19220                           
 19221                           ;inputs_MC50.c: 660:         }
 19222  007646  0012               	return	
 19223  007648                     l24967:
 19224                           
 19225                           ; BSR set to: 1
 19226                           ;inputs_MC50.c: 662:         {;inputs_MC50.c: 663:             var_sys.SecurityBarIsObst
      +                          ructed = YES;
 19227  007648  0E01               	movlw	1
 19228  00764A  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19229  00764C  0012               	return	
 19230  00764E                     l1748:
 19231                           
 19232                           ; BSR set to: 0
 19233                           ;inputs_MC50.c: 667:     {;inputs_MC50.c: 668:         var_sys.SecurityBarIsObstructed =
      +                           security.SecurityBarSTATE;
 19234  00764E  C170  F102         	movff	_security+6,_var_sys+2	;volatile
 19235  007652  0012               	return		;funcret
 19236  007654                     __end_of_readInputs:
 19237                           	callstack 0
 19238                           
 19239 ;; *************** function _loadNVM_VarSystem *****************
 19240 ;; Defined at:
 19241 ;;		line 151 in file "controlMemory_MC50.c"
 19242 ;; Parameters:    Size  Location     Type
 19243 ;;		None
 19244 ;; Auto vars:     Size  Location     Type
 19245 ;;		None
 19246 ;; Return value:  Size  Location     Type
 19247 ;;                  1    wreg      void 
 19248 ;; Registers used:
 19249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19250 ;; Tracked objects:
 19251 ;;		On entry : 3F/0
 19252 ;;		On exit  : 0/0
 19253 ;;		Unchanged: 0/0
 19254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19259 ;;Total ram usage:        0 bytes
 19260 ;; Hardware stack levels used: 1
 19261 ;; Hardware stack levels required when called: 15
 19262 ;; This function calls:
 19263 ;;		_I2C1_Read1ByteRegister
 19264 ;;		_ResetDefaultMemory
 19265 ;;		_SaveNVM_VarSystem
 19266 ;;		_checkNVM_VarSystem
 19267 ;;		_i2c_readDataBlock
 19268 ;; This function is called by:
 19269 ;;		_main
 19270 ;; This function uses a non-reentrant model
 19271 ;;
 19272                           
 19273                           	psect	text69
 19274  006FB4                     __ptext69:
 19275                           	callstack 0
 19276  006FB4                     _loadNVM_VarSystem:
 19277                           	callstack 15
 19278                           
 19279                           ; BSR set to: 0
 19280                           ;controlMemory_MC50.c: 153:     if((I2C1_Read1ByteRegister(0x50, 0) == 0xFF) && (I2C1_Re
      +                          ad1ByteRegister(0x50, 16) == 0xFF))
 19281                           
 19282                           ;incstack = 0
 19283  006FB4  0E00               	movlw	0
 19284  006FB6  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19285  006FB8  0E50               	movlw	80
 19286  006FBA  EC38  F048         	call	_I2C1_Read1ByteRegister
 19287  006FBE  0AFF               	xorlw	255
 19288  006FC0  A4D8               	btfss	status,2,c
 19289  006FC2  D04C               	goto	l24771
 19290  006FC4  0E10               	movlw	16
 19291  006FC6  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19292  006FC8  0E50               	movlw	80
 19293  006FCA  EC38  F048         	call	_I2C1_Read1ByteRegister
 19294  006FCE  0AFF               	xorlw	255
 19295  006FD0  A4D8               	btfss	status,2,c
 19296  006FD2  D044               	goto	l24771
 19297                           
 19298                           ;controlMemory_MC50.c: 154:     {;controlMemory_MC50.c: 155:         ResetDefaultMemory(
      +                          SC);
 19299  006FD4  0E00               	movlw	0
 19300  006FD6  EC59  F034         	call	_ResetDefaultMemory
 19301                           
 19302                           ;controlMemory_MC50.c: 156:         var_sys_NVM.learningTimeToClose = 0;
 19303  006FDA  0E00               	movlw	0
 19304  006FDC  0100               	movlb	0	; () banked
 19305  006FDE  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 19306  006FE0  0E00               	movlw	0
 19307  006FE2  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 19308  006FE4  0E00               	movlw	0
 19309  006FE6  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 19310  006FE8  0E00               	movlw	0
 19311  006FEA  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 19312                           
 19313                           ; BSR set to: 0
 19314                           ;controlMemory_MC50.c: 157:         var_sys_NVM.learningTimeToOpen = 0;
 19315  006FEC  0E00               	movlw	0
 19316  006FEE  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 19317  006FF0  0E00               	movlw	0
 19318  006FF2  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 19319  006FF4  0E00               	movlw	0
 19320  006FF6  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 19321  006FF8  0E00               	movlw	0
 19322  006FFA  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 19323                           
 19324                           ; BSR set to: 0
 19325                           ;controlMemory_MC50.c: 158:         var_sys_NVM.learningCurrentNormalClose = 0;
 19326  006FFC  0E00               	movlw	0
 19327  006FFE  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 19328  007000  0E00               	movlw	0
 19329  007002  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 19330                           
 19331                           ; BSR set to: 0
 19332                           ;controlMemory_MC50.c: 159:         var_sys_NVM.learningCurrentNormalOpen = 0;
 19333  007004  0E00               	movlw	0
 19334  007006  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 19335  007008  0E00               	movlw	0
 19336  00700A  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 19337                           
 19338                           ; BSR set to: 0
 19339                           ;controlMemory_MC50.c: 160:         var_sys_NVM.learningCurrentDecelarationClose = 0;
 19340  00700C  0E00               	movlw	0
 19341  00700E  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 19342  007010  0E00               	movlw	0
 19343  007012  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 19344  007014  0E00               	movlw	0
 19345  007016  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 19346  007018  0E00               	movlw	0
 19347  00701A  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 19348                           
 19349                           ; BSR set to: 0
 19350                           ;controlMemory_MC50.c: 161:         var_sys_NVM.learningCurrentDecelarationOpen = 0;
 19351  00701C  0E00               	movlw	0
 19352  00701E  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 19353  007020  0E00               	movlw	0
 19354  007022  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 19355  007024  0E00               	movlw	0
 19356  007026  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 19357  007028  0E00               	movlw	0
 19358  00702A  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 19359                           
 19360                           ;controlMemory_MC50.c: 162:         SaveNVM_VarSystem(pageMemoryLearningVars);
 19361  00702C  0E03               	movlw	3
 19362  00702E  ECEA  F04B         	call	_SaveNVM_VarSystem
 19363                           
 19364                           ;controlMemory_MC50.c: 163:         var_sys_NVM.positionRemotesFull = 0;
 19365  007032  0E00               	movlw	0
 19366  007034  0100               	movlb	0	; () banked
 19367  007036  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
 19368                           
 19369                           ; BSR set to: 0
 19370                           ;controlMemory_MC50.c: 164:         var_sys_NVM.positionRemotesWalk = 0;
 19371  007038  0E00               	movlw	0
 19372  00703A  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
 19373                           
 19374                           ; BSR set to: 0
 19375                           ;controlMemory_MC50.c: 165:         var_sys_NVM.OnlyRollingCode = NO;
 19376  00703C  0E00               	movlw	0
 19377  00703E  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
 19378                           
 19379                           ; BSR set to: 0
 19380                           ;controlMemory_MC50.c: 166:         var_sys_NVM.counterMoves = 0;
 19381  007040  0E00               	movlw	0
 19382  007042  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 19383  007044  0E00               	movlw	0
 19384  007046  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 19385  007048  0E00               	movlw	0
 19386  00704A  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 19387  00704C  0E00               	movlw	0
 19388  00704E  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 19389                           
 19390                           ;controlMemory_MC50.c: 167:        SaveNVM_VarSystem(pageMemoryCounters);
 19391  007050  0E02               	movlw	2
 19392  007052  ECEA  F04B         	call	_SaveNVM_VarSystem
 19393                           
 19394                           ;controlMemory_MC50.c: 169:          var_sys_NVM.TypeofMotor = 0;
 19395  007056  0E00               	movlw	0
 19396  007058  0100               	movlb	0	; () banked
 19397  00705A  6FB4               	movwf	(_var_sys_NVM+28)& (0+255),b	;volatile
 19398  00705C                     l24771:
 19399                           
 19400                           ;controlMemory_MC50.c: 172:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryP * 16),(ch
      +                          ar*)&var_sys_NVM,16);
 19401  00705C  0E00               	movlw	0
 19402  00705E  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19403  007060  0E00               	movlw	0
 19404  007062  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19405  007064  0E98               	movlw	low _var_sys_NVM
 19406  007066  6E24               	movwf	i2c_readDataBlock@data^0,c
 19407  007068  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19408  00706A  0E00               	movlw	0
 19409  00706C  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19410  00706E  0E10               	movlw	16
 19411  007070  6E26               	movwf	i2c_readDataBlock@len^0,c
 19412  007072  0E50               	movlw	80
 19413  007074  EC1A  F045         	call	_i2c_readDataBlock
 19414                           
 19415                           ;controlMemory_MC50.c: 173:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryE * 16),(ch
      +                          ar*)&var_sys_NVM.homemPresente, 16);
 19416  007078  0E00               	movlw	0
 19417  00707A  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19418  00707C  0E10               	movlw	16
 19419  00707E  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19420  007080  0EA8               	movlw	low (_var_sys_NVM+16)
 19421  007082  6E24               	movwf	i2c_readDataBlock@data^0,c
 19422  007084  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19423  007086  0E00               	movlw	0
 19424  007088  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19425  00708A  0E10               	movlw	16
 19426  00708C  6E26               	movwf	i2c_readDataBlock@len^0,c
 19427  00708E  0E50               	movlw	80
 19428  007090  EC1A  F045         	call	_i2c_readDataBlock
 19429                           
 19430                           ;controlMemory_MC50.c: 174:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryCounters * 
      +                          16),(char*)&var_sys_NVM.positionRemotesFull,16);
 19431  007094  0E00               	movlw	0
 19432  007096  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19433  007098  0E20               	movlw	32
 19434  00709A  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19435  00709C  0EB8               	movlw	low (_var_sys_NVM+32)
 19436  00709E  6E24               	movwf	i2c_readDataBlock@data^0,c
 19437  0070A0  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19438  0070A2  0E00               	movlw	0
 19439  0070A4  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19440  0070A6  0E10               	movlw	16
 19441  0070A8  6E26               	movwf	i2c_readDataBlock@len^0,c
 19442  0070AA  0E50               	movlw	80
 19443  0070AC  EC1A  F045         	call	_i2c_readDataBlock
 19444                           
 19445                           ;controlMemory_MC50.c: 175:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryLearningVar
      +                          s * 16),(char*)&var_sys_NVM.learningCurrentNormalClose, 16);
 19446  0070B0  0E00               	movlw	0
 19447  0070B2  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19448  0070B4  0E30               	movlw	48
 19449  0070B6  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19450  0070B8  0EC8               	movlw	low (_var_sys_NVM+48)
 19451  0070BA  6E24               	movwf	i2c_readDataBlock@data^0,c
 19452  0070BC  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19453  0070BE  0E00               	movlw	0
 19454  0070C0  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19455  0070C2  0E10               	movlw	16
 19456  0070C4  6E26               	movwf	i2c_readDataBlock@len^0,c
 19457  0070C6  0E50               	movlw	80
 19458  0070C8  EC1A  F045         	call	_i2c_readDataBlock
 19459                           
 19460                           ;controlMemory_MC50.c: 178:     checkNVM_VarSystem();
 19461  0070CC  EC56  F030         	call	_checkNVM_VarSystem	;wreg free
 19462                           
 19463                           ;controlMemory_MC50.c: 180:     var_sys.actualCounterMoves=var_sys_NVM.counterMoves;
 19464  0070D0  C0BA  F13C         	movff	_var_sys_NVM+34,_var_sys+60	;volatile
 19465  0070D4  C0BB  F13D         	movff	_var_sys_NVM+35,_var_sys+61	;volatile
 19466  0070D8  C0BC  F13E         	movff	_var_sys_NVM+36,_var_sys+62	;volatile
 19467  0070DC  C0BD  F13F         	movff	_var_sys_NVM+37,_var_sys+63	;volatile
 19468  0070E0  0012               	return		;funcret
 19469  0070E2                     __end_of_loadNVM_VarSystem:
 19470                           	callstack 0
 19471                           
 19472 ;; *************** function _checkNVM_VarSystem *****************
 19473 ;; Defined at:
 19474 ;;		line 326 in file "controlMemory_MC50.c"
 19475 ;; Parameters:    Size  Location     Type
 19476 ;;		None
 19477 ;; Auto vars:     Size  Location     Type
 19478 ;;  saveParam       1   57[COMRAM] unsigned char 
 19479 ;; Return value:  Size  Location     Type
 19480 ;;                  1    wreg      void 
 19481 ;; Registers used:
 19482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19483 ;; Tracked objects:
 19484 ;;		On entry : 0/2
 19485 ;;		On exit  : 0/0
 19486 ;;		Unchanged: 0/0
 19487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19489 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19491 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19492 ;;Total ram usage:        1 bytes
 19493 ;; Hardware stack levels used: 1
 19494 ;; Hardware stack levels required when called: 14
 19495 ;; This function calls:
 19496 ;;		_SaveNVM_VarSystem
 19497 ;; This function is called by:
 19498 ;;		_loadNVM_VarSystem
 19499 ;; This function uses a non-reentrant model
 19500 ;;
 19501                           
 19502                           	psect	text70
 19503  0060AC                     __ptext70:
 19504                           	callstack 0
 19505  0060AC                     _checkNVM_VarSystem:
 19506                           	callstack 15
 19507                           
 19508                           ;controlMemory_MC50.c: 328:     char saveParam;;controlMemory_MC50.c: 331:     saveParam
      +                           = 0;
 19509                           
 19510                           ;incstack = 0
 19511  0060AC  0E00               	movlw	0
 19512  0060AE  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19513                           
 19514                           ;controlMemory_MC50.c: 339:     if ( var_sys_NVM.decelarationOpen>45 )
 19515  0060B0  0E2D               	movlw	45
 19516  0060B2  0100               	movlb	0	; () banked
 19517  0060B4  6598               	cpfsgt	_var_sys_NVM& (0+255),b	;volatile
 19518  0060B6  D004               	goto	l23053
 19519                           
 19520                           ; BSR set to: 0
 19521                           ;controlMemory_MC50.c: 340:     {;controlMemory_MC50.c: 342:         var_sys_NVM.decelar
      +                          ationOpen = 3;
 19522  0060B8  0E03               	movlw	3
 19523  0060BA  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 19524                           
 19525                           ;controlMemory_MC50.c: 343:         saveParam=1;
 19526  0060BC  0E01               	movlw	1
 19527  0060BE  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19528  0060C0                     l23053:
 19529                           
 19530                           ; BSR set to: 0
 19531                           ;controlMemory_MC50.c: 346:     if ( var_sys_NVM.decelarationClose>45 )
 19532  0060C0  0E2D               	movlw	45
 19533  0060C2  6599               	cpfsgt	(_var_sys_NVM+1)& (0+255),b	;volatile
 19534  0060C4  D004               	goto	l1495
 19535                           
 19536                           ; BSR set to: 0
 19537                           ;controlMemory_MC50.c: 347:     {;controlMemory_MC50.c: 349:         var_sys_NVM.decelar
      +                          ationClose = 3;
 19538  0060C6  0E03               	movlw	3
 19539  0060C8  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 19540                           
 19541                           ;controlMemory_MC50.c: 350:         saveParam=1;
 19542  0060CA  0E01               	movlw	1
 19543  0060CC  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19544  0060CE                     l1495:
 19545                           
 19546                           ; BSR set to: 0
 19547                           ;controlMemory_MC50.c: 353:     if ( (var_sys_NVM.motorPower<1) || (var_sys_NVM.motorPow
      +                          er>9) )
 19548  0060CE  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 19549  0060D0  B4D8               	btfsc	status,2,c
 19550  0060D2  D003               	goto	u26570
 19551                           
 19552                           ; BSR set to: 0
 19553  0060D4  0E09               	movlw	9
 19554  0060D6  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 19555  0060D8  D004               	goto	l23061
 19556  0060DA                     u26570:
 19557                           
 19558                           ; BSR set to: 0
 19559                           ;controlMemory_MC50.c: 354:     {;controlMemory_MC50.c: 356:         var_sys_NVM.motorPo
      +                          wer = 9;
 19560  0060DA  0E09               	movlw	9
 19561  0060DC  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 19562                           
 19563                           ;controlMemory_MC50.c: 357:         saveParam=1;
 19564  0060DE  0E01               	movlw	1
 19565  0060E0  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19566  0060E2                     l23061:
 19567                           
 19568                           ; BSR set to: 0
 19569                           ;controlMemory_MC50.c: 360:     if ( var_sys_NVM.motorSensitivity>9 )
 19570  0060E2  0E09               	movlw	9
 19571  0060E4  659B               	cpfsgt	(_var_sys_NVM+3)& (0+255),b	;volatile
 19572  0060E6  D004               	goto	l23065
 19573                           
 19574                           ; BSR set to: 0
 19575                           ;controlMemory_MC50.c: 361:     {;controlMemory_MC50.c: 363:         var_sys_NVM.motorSe
      +                          nsitivity = 0;
 19576  0060E8  0E00               	movlw	0
 19577  0060EA  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 19578                           
 19579                           ;controlMemory_MC50.c: 364:         saveParam=1;
 19580  0060EC  0E01               	movlw	1
 19581  0060EE  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19582  0060F0                     l23065:
 19583                           
 19584                           ; BSR set to: 0
 19585                           ;controlMemory_MC50.c: 367:     if ( var_sys_NVM.walkTime>99 )
 19586  0060F0  0E63               	movlw	99
 19587  0060F2  659C               	cpfsgt	(_var_sys_NVM+4)& (0+255),b	;volatile
 19588  0060F4  D004               	goto	l23069
 19589                           
 19590                           ; BSR set to: 0
 19591                           ;controlMemory_MC50.c: 368:     {;controlMemory_MC50.c: 370:         var_sys_NVM.walkTim
      +                          e = 10;
 19592  0060F6  0E0A               	movlw	10
 19593  0060F8  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 19594                           
 19595                           ;controlMemory_MC50.c: 371:         saveParam=1;
 19596  0060FA  0E01               	movlw	1
 19597  0060FC  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19598  0060FE                     l23069:
 19599                           
 19600                           ; BSR set to: 0
 19601                           ;controlMemory_MC50.c: 374:     if ( var_sys_NVM.autoTimeFullClose>99 )
 19602  0060FE  0E63               	movlw	99
 19603  006100  659D               	cpfsgt	(_var_sys_NVM+5)& (0+255),b	;volatile
 19604  006102  D004               	goto	l23073
 19605                           
 19606                           ; BSR set to: 0
 19607                           ;controlMemory_MC50.c: 375:     {;controlMemory_MC50.c: 377:         var_sys_NVM.autoTim
      +                          eFullClose = 0;
 19608  006104  0E00               	movlw	0
 19609  006106  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 19610                           
 19611                           ;controlMemory_MC50.c: 378:         saveParam=1;
 19612  006108  0E01               	movlw	1
 19613  00610A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19614  00610C                     l23073:
 19615                           
 19616                           ; BSR set to: 0
 19617                           ;controlMemory_MC50.c: 381:     if ( var_sys_NVM.autoTimeWalkClose>99 )
 19618  00610C  0E63               	movlw	99
 19619  00610E  659E               	cpfsgt	(_var_sys_NVM+6)& (0+255),b	;volatile
 19620  006110  D004               	goto	l23077
 19621                           
 19622                           ; BSR set to: 0
 19623                           ;controlMemory_MC50.c: 382:     {;controlMemory_MC50.c: 384:         var_sys_NVM.autoTim
      +                          eWalkClose = 0;
 19624  006112  0E00               	movlw	0
 19625  006114  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 19626                           
 19627                           ;controlMemory_MC50.c: 385:         saveParam=1;
 19628  006116  0E01               	movlw	1
 19629  006118  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19630  00611A                     l23077:
 19631                           
 19632                           ; BSR set to: 0
 19633                           ;controlMemory_MC50.c: 388:     if ( var_sys_NVM.photoCellIsON>1 )
 19634  00611A  0E01               	movlw	1
 19635  00611C  659F               	cpfsgt	(_var_sys_NVM+7)& (0+255),b	;volatile
 19636  00611E  D004               	goto	l23081
 19637                           
 19638                           ; BSR set to: 0
 19639                           ;controlMemory_MC50.c: 389:     {;controlMemory_MC50.c: 391:         var_sys_NVM.photoCe
      +                          llIsON = 0;
 19640  006120  0E00               	movlw	0
 19641  006122  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 19642                           
 19643                           ;controlMemory_MC50.c: 392:         saveParam=1;
 19644  006124  0E01               	movlw	1
 19645  006126  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19646  006128                     l23081:
 19647                           
 19648                           ; BSR set to: 0
 19649                           ;controlMemory_MC50.c: 395:     if ( var_sys_NVM.photoCellInOpen>1 )
 19650  006128  0E01               	movlw	1
 19651  00612A  65A0               	cpfsgt	(_var_sys_NVM+8)& (0+255),b	;volatile
 19652  00612C  D004               	goto	l23085
 19653                           
 19654                           ; BSR set to: 0
 19655                           ;controlMemory_MC50.c: 396:     {;controlMemory_MC50.c: 398:         var_sys_NVM.photoCe
      +                          llInOpen = 0;
 19656  00612E  0E00               	movlw	0
 19657  006130  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 19658                           
 19659                           ;controlMemory_MC50.c: 399:         saveParam=1;
 19660  006132  0E01               	movlw	1
 19661  006134  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19662  006136                     l23085:
 19663                           
 19664                           ; BSR set to: 0
 19665                           ;controlMemory_MC50.c: 402:     if ( var_sys_NVM.securityBandIsON>1 )
 19666  006136  0E01               	movlw	1
 19667  006138  65A1               	cpfsgt	(_var_sys_NVM+9)& (0+255),b	;volatile
 19668  00613A  D004               	goto	l23089
 19669                           
 19670                           ; BSR set to: 0
 19671                           ;controlMemory_MC50.c: 403:     {;controlMemory_MC50.c: 405:         var_sys_NVM.securit
      +                          yBandIsON = 0 ;
 19672  00613C  0E00               	movlw	0
 19673  00613E  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 19674                           
 19675                           ;controlMemory_MC50.c: 406:         saveParam=1;
 19676  006140  0E01               	movlw	1
 19677  006142  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19678  006144                     l23089:
 19679                           
 19680                           ; BSR set to: 0
 19681                           ;controlMemory_MC50.c: 409:     if ( var_sys_NVM.securityBandType>1 )
 19682  006144  0E01               	movlw	1
 19683  006146  65A2               	cpfsgt	(_var_sys_NVM+10)& (0+255),b	;volatile
 19684  006148  D004               	goto	l23093
 19685                           
 19686                           ; BSR set to: 0
 19687                           ;controlMemory_MC50.c: 410:     {;controlMemory_MC50.c: 412:         var_sys_NVM.securit
      +                          yBandType = 1;
 19688  00614A  0E01               	movlw	1
 19689  00614C  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 19690                           
 19691                           ;controlMemory_MC50.c: 413:         saveParam=1;
 19692  00614E  0E01               	movlw	1
 19693  006150  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19694  006152                     l23093:
 19695                           
 19696                           ; BSR set to: 0
 19697                           ;controlMemory_MC50.c: 416:     if ( var_sys_NVM.securityBandInOpen>1 )
 19698  006152  0E01               	movlw	1
 19699  006154  65A3               	cpfsgt	(_var_sys_NVM+11)& (0+255),b	;volatile
 19700  006156  D004               	goto	l23097
 19701                           
 19702                           ; BSR set to: 0
 19703                           ;controlMemory_MC50.c: 417:     {;controlMemory_MC50.c: 419:         var_sys_NVM.securit
      +                          yBandInOpen = 0;
 19704  006158  0E00               	movlw	0
 19705  00615A  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 19706                           
 19707                           ;controlMemory_MC50.c: 420:         saveParam=1;
 19708  00615C  0E01               	movlw	1
 19709  00615E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19710  006160                     l23097:
 19711                           
 19712                           ; BSR set to: 0
 19713                           ;controlMemory_MC50.c: 423:     if ( var_sys_NVM.operationMode>2 )
 19714  006160  0E02               	movlw	2
 19715  006162  65A4               	cpfsgt	(_var_sys_NVM+12)& (0+255),b	;volatile
 19716  006164  D004               	goto	l23101
 19717                           
 19718                           ; BSR set to: 0
 19719                           ;controlMemory_MC50.c: 424:     {;controlMemory_MC50.c: 426:         var_sys_NVM.operati
      +                          onMode = 0;
 19720  006166  0E00               	movlw	0
 19721  006168  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 19722                           
 19723                           ;controlMemory_MC50.c: 427:         saveParam=1;
 19724  00616A  0E01               	movlw	1
 19725  00616C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19726  00616E                     l23101:
 19727                           
 19728                           ; BSR set to: 0
 19729                           ;controlMemory_MC50.c: 430:     if ( var_sys_NVM.flashLightMode>3 )
 19730  00616E  0E03               	movlw	3
 19731  006170  65A5               	cpfsgt	(_var_sys_NVM+13)& (0+255),b	;volatile
 19732  006172  D004               	goto	l23105
 19733                           
 19734                           ; BSR set to: 0
 19735                           ;controlMemory_MC50.c: 431:     {;controlMemory_MC50.c: 433:         var_sys_NVM.flashLi
      +                          ghtMode = 0;
 19736  006174  0E00               	movlw	0
 19737  006176  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 19738                           
 19739                           ;controlMemory_MC50.c: 434:         saveParam=1;
 19740  006178  0E01               	movlw	1
 19741  00617A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19742  00617C                     l23105:
 19743                           
 19744                           ; BSR set to: 0
 19745                           ;controlMemory_MC50.c: 437:     if ( var_sys_NVM.programmingDistance>1 )
 19746  00617C  0E01               	movlw	1
 19747  00617E  65A6               	cpfsgt	(_var_sys_NVM+14)& (0+255),b	;volatile
 19748  006180  D004               	goto	l23109
 19749                           
 19750                           ; BSR set to: 0
 19751                           ;controlMemory_MC50.c: 438:     {;controlMemory_MC50.c: 440:         var_sys_NVM.program
      +                          mingDistance = 0;
 19752  006182  0E00               	movlw	0
 19753  006184  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 19754                           
 19755                           ;controlMemory_MC50.c: 441:         saveParam=1;
 19756  006186  0E01               	movlw	1
 19757  006188  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19758  00618A                     l23109:
 19759                           
 19760                           ; BSR set to: 0
 19761                           ;controlMemory_MC50.c: 444:     if ( var_sys_NVM.decelarationSensivity>9 )
 19762  00618A  0E09               	movlw	9
 19763  00618C  65A7               	cpfsgt	(_var_sys_NVM+15)& (0+255),b	;volatile
 19764  00618E  D004               	goto	l23113
 19765                           
 19766                           ; BSR set to: 0
 19767                           ;controlMemory_MC50.c: 445:     {;controlMemory_MC50.c: 447:         var_sys_NVM.decelar
      +                          ationSensivity = 0;
 19768  006190  0E00               	movlw	0
 19769  006192  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 19770                           
 19771                           ;controlMemory_MC50.c: 448:         saveParam=1;
 19772  006194  0E01               	movlw	1
 19773  006196  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19774  006198                     l23113:
 19775                           
 19776                           ; BSR set to: 0
 19777                           ;controlMemory_MC50.c: 453:     if ( var_sys_NVM.homemPresente>2 )
 19778  006198  0E02               	movlw	2
 19779  00619A  65A8               	cpfsgt	(_var_sys_NVM+16)& (0+255),b	;volatile
 19780  00619C  D004               	goto	l23117
 19781                           
 19782                           ; BSR set to: 0
 19783                           ;controlMemory_MC50.c: 454:     {;controlMemory_MC50.c: 456:         var_sys_NVM.homemPr
      +                          esente = 0;
 19784  00619E  0E00               	movlw	0
 19785  0061A0  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 19786                           
 19787                           ;controlMemory_MC50.c: 457:         saveParam=1;
 19788  0061A2  0E01               	movlw	1
 19789  0061A4  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19790  0061A6                     l23117:
 19791                           
 19792                           ; BSR set to: 0
 19793                           ;controlMemory_MC50.c: 460:     if ( var_sys_NVM.logicDigital>1 )
 19794  0061A6  0E01               	movlw	1
 19795  0061A8  65A9               	cpfsgt	(_var_sys_NVM+17)& (0+255),b	;volatile
 19796  0061AA  D004               	goto	l23121
 19797                           
 19798                           ; BSR set to: 0
 19799                           ;controlMemory_MC50.c: 461:     {;controlMemory_MC50.c: 463:         var_sys_NVM.logicDi
      +                          gital = 0;
 19800  0061AC  0E00               	movlw	0
 19801  0061AE  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 19802                           
 19803                           ;controlMemory_MC50.c: 464:         saveParam=1;
 19804  0061B0  0E01               	movlw	1
 19805  0061B2  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19806  0061B4                     l23121:
 19807                           
 19808                           ; BSR set to: 0
 19809                           ;controlMemory_MC50.c: 467:     if ( var_sys_NVM.softStart>9 )
 19810  0061B4  0E09               	movlw	9
 19811  0061B6  65AA               	cpfsgt	(_var_sys_NVM+18)& (0+255),b	;volatile
 19812  0061B8  D004               	goto	l23125
 19813                           
 19814                           ; BSR set to: 0
 19815                           ;controlMemory_MC50.c: 468:     {;controlMemory_MC50.c: 470:         var_sys_NVM.softSta
      +                          rt = 0;
 19816  0061BA  0E00               	movlw	0
 19817  0061BC  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 19818                           
 19819                           ;controlMemory_MC50.c: 471:         saveParam=1;
 19820  0061BE  0E01               	movlw	1
 19821  0061C0  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19822  0061C2                     l23125:
 19823                           
 19824                           ; BSR set to: 0
 19825                           ;controlMemory_MC50.c: 475:     if ( var_sys_NVM.ligthTime>99 )
 19826  0061C2  0E63               	movlw	99
 19827  0061C4  65AC               	cpfsgt	(_var_sys_NVM+20)& (0+255),b	;volatile
 19828  0061C6  D004               	goto	l23129
 19829                           
 19830                           ; BSR set to: 0
 19831                           ;controlMemory_MC50.c: 476:     {;controlMemory_MC50.c: 478:         var_sys_NVM.ligthTi
      +                          me = 3;
 19832  0061C8  0E03               	movlw	3
 19833  0061CA  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 19834                           
 19835                           ;controlMemory_MC50.c: 479:         saveParam=1;
 19836  0061CC  0E01               	movlw	1
 19837  0061CE  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19838  0061D0                     l23129:
 19839                           
 19840                           ; BSR set to: 0
 19841                           ;controlMemory_MC50.c: 482:     if ( var_sys_NVM.folow_me>9 )
 19842  0061D0  0E09               	movlw	9
 19843  0061D2  65AD               	cpfsgt	(_var_sys_NVM+21)& (0+255),b	;volatile
 19844  0061D4  D004               	goto	l23133
 19845                           
 19846                           ; BSR set to: 0
 19847                           ;controlMemory_MC50.c: 483:     {;controlMemory_MC50.c: 485:         var_sys_NVM.folow_m
      +                          e = 0;
 19848  0061D6  0E00               	movlw	0
 19849  0061D8  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 19850                           
 19851                           ;controlMemory_MC50.c: 486:         saveParam=1;
 19852  0061DA  0E01               	movlw	1
 19853  0061DC  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19854  0061DE                     l23133:
 19855                           
 19856                           ; BSR set to: 0
 19857                           ;controlMemory_MC50.c: 491:     if ( var_sys_NVM.electricBrake>1 )
 19858  0061DE  0E01               	movlw	1
 19859  0061E0  65AF               	cpfsgt	(_var_sys_NVM+23)& (0+255),b	;volatile
 19860  0061E2  D004               	goto	l1517
 19861                           
 19862                           ; BSR set to: 0
 19863                           ;controlMemory_MC50.c: 492:     {;controlMemory_MC50.c: 494:         var_sys_NVM.electri
      +                          cBrake = 0;
 19864  0061E4  0E00               	movlw	0
 19865  0061E6  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 19866                           
 19867                           ;controlMemory_MC50.c: 495:         saveParam=1;
 19868  0061E8  0E01               	movlw	1
 19869  0061EA  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19870  0061EC                     l1517:
 19871                           
 19872                           ; BSR set to: 0
 19873                           ;controlMemory_MC50.c: 498:     if ( (var_sys_NVM.velocityDecelaration<1) || (var_sys_NV
      +                          M.velocityDecelaration>9) )
 19874  0061EC  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 19875  0061EE  B4D8               	btfsc	status,2,c
 19876  0061F0  D003               	goto	u26780
 19877                           
 19878                           ; BSR set to: 0
 19879  0061F2  0E09               	movlw	9
 19880  0061F4  65B0               	cpfsgt	(_var_sys_NVM+24)& (0+255),b	;volatile
 19881  0061F6  D004               	goto	l23141
 19882  0061F8                     u26780:
 19883                           
 19884                           ; BSR set to: 0
 19885                           ;controlMemory_MC50.c: 499:     {;controlMemory_MC50.c: 501:         var_sys_NVM.velocit
      +                          yDecelaration = 5;
 19886  0061F8  0E05               	movlw	5
 19887  0061FA  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 19888                           
 19889                           ;controlMemory_MC50.c: 502:         saveParam=1;
 19890  0061FC  0E01               	movlw	1
 19891  0061FE  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19892  006200                     l23141:
 19893                           
 19894                           ; BSR set to: 0
 19895                           ;controlMemory_MC50.c: 505:     if ( var_sys_NVM.flashRGBMode>3 )
 19896  006200  0E03               	movlw	3
 19897  006202  65B1               	cpfsgt	(_var_sys_NVM+25)& (0+255),b	;volatile
 19898  006204  D004               	goto	l23145
 19899                           
 19900                           ; BSR set to: 0
 19901                           ;controlMemory_MC50.c: 506:     {;controlMemory_MC50.c: 508:         var_sys_NVM.flashRG
      +                          BMode = 3;
 19902  006206  0E03               	movlw	3
 19903  006208  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 19904                           
 19905                           ;controlMemory_MC50.c: 509:         saveParam=1;
 19906  00620A  0E01               	movlw	1
 19907  00620C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19908  00620E                     l23145:
 19909                           
 19910                           ; BSR set to: 0
 19911                           ;controlMemory_MC50.c: 511:         if ( var_sys_NVM.Stopboton > 1 )
 19912  00620E  0E01               	movlw	1
 19913  006210  65AE               	cpfsgt	(_var_sys_NVM+22)& (0+255),b	;volatile
 19914  006212  D004               	goto	l23149
 19915                           
 19916                           ; BSR set to: 0
 19917                           ;controlMemory_MC50.c: 512:     {;controlMemory_MC50.c: 514:         var_sys_NVM.Stopbot
      +                          on = 0 ;
 19918  006214  0E00               	movlw	0
 19919  006216  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 19920                           
 19921                           ;controlMemory_MC50.c: 515:         saveParam=1;
 19922  006218  0E01               	movlw	1
 19923  00621A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19924  00621C                     l23149:
 19925                           
 19926                           ; BSR set to: 0
 19927                           ;controlMemory_MC50.c: 517:         if ( var_sys_NVM.Direction_motor>1 )
 19928  00621C  0E01               	movlw	1
 19929  00621E  65B3               	cpfsgt	(_var_sys_NVM+27)& (0+255),b	;volatile
 19930  006220  D004               	goto	l23153
 19931                           
 19932                           ; BSR set to: 0
 19933                           ;controlMemory_MC50.c: 518:     {;controlMemory_MC50.c: 520:         var_sys_NVM.Directi
      +                          on_motor = 1;
 19934  006222  0E01               	movlw	1
 19935  006224  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 19936                           
 19937                           ;controlMemory_MC50.c: 521:         saveParam=1;
 19938  006226  0E01               	movlw	1
 19939  006228  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19940  00622A                     l23153:
 19941                           
 19942                           ; BSR set to: 0
 19943                           ;controlMemory_MC50.c: 523:         if ( var_sys_NVM.softstop>9 )
 19944  00622A  0E09               	movlw	9
 19945  00622C  65AB               	cpfsgt	(_var_sys_NVM+19)& (0+255),b	;volatile
 19946  00622E  D004               	goto	l1524
 19947                           
 19948                           ; BSR set to: 0
 19949                           ;controlMemory_MC50.c: 524:     {;controlMemory_MC50.c: 526:         var_sys_NVM.softsto
      +                          p = 0;
 19950  006230  0E00               	movlw	0
 19951  006232  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 19952                           
 19953                           ;controlMemory_MC50.c: 527:         saveParam=1;
 19954  006234  0E01               	movlw	1
 19955  006236  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19956  006238                     l1524:
 19957                           
 19958                           ; BSR set to: 0
 19959                           ;controlMemory_MC50.c: 552:     if ( saveParam != 0 )
 19960  006238  503A               	movf	checkNVM_VarSystem@saveParam^0,w,c
 19961  00623A  B4D8               	btfsc	status,2,c
 19962  00623C  0012               	return	
 19963                           
 19964                           ; BSR set to: 0
 19965                           ;controlMemory_MC50.c: 553:     {;controlMemory_MC50.c: 554:         SaveNVM_VarSystem(p
      +                          ageMemoryP);
 19966  00623E  0E00               	movlw	0
 19967  006240  ECEA  F04B         	call	_SaveNVM_VarSystem
 19968                           
 19969                           ;controlMemory_MC50.c: 555:         SaveNVM_VarSystem(pageMemoryE);
 19970  006244  0E01               	movlw	1
 19971  006246  ECEA  F04B         	call	_SaveNVM_VarSystem
 19972  00624A  0012               	return		;funcret
 19973  00624C                     __end_of_checkNVM_VarSystem:
 19974                           	callstack 0
 19975                           
 19976 ;; *************** function _ResetDefaultMemory *****************
 19977 ;; Defined at:
 19978 ;;		line 198 in file "controlMemory_MC50.c"
 19979 ;; Parameters:    Size  Location     Type
 19980 ;;  type            1    wreg     unsigned char 
 19981 ;; Auto vars:     Size  Location     Type
 19982 ;;  type            1   57[COMRAM] unsigned char 
 19983 ;; Return value:  Size  Location     Type
 19984 ;;                  1    wreg      void 
 19985 ;; Registers used:
 19986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19987 ;; Tracked objects:
 19988 ;;		On entry : 31/0
 19989 ;;		On exit  : 0/0
 19990 ;;		Unchanged: 0/0
 19991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19993 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19995 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19996 ;;Total ram usage:        1 bytes
 19997 ;; Hardware stack levels used: 1
 19998 ;; Hardware stack levels required when called: 14
 19999 ;; This function calls:
 20000 ;;		_SaveNVM_VarSystem
 20001 ;; This function is called by:
 20002 ;;		_loadNVM_VarSystem
 20003 ;;		_sm_execute_menuConfiguration
 20004 ;; This function uses a non-reentrant model
 20005 ;;
 20006                           
 20007                           	psect	text71
 20008  0068B2                     __ptext71:
 20009                           	callstack 0
 20010  0068B2                     _ResetDefaultMemory:
 20011                           	callstack 14
 20012                           
 20013                           ;incstack = 0
 20014                           ;ResetDefaultMemory@type stored from wreg
 20015  0068B2  6E3A               	movwf	ResetDefaultMemory@type^0,c
 20016                           
 20017                           ;controlMemory_MC50.c: 198: void ResetDefaultMemory(unsigned char type);controlMemory_MC
      +                          50.c: 199: {;controlMemory_MC50.c: 202:     var_sys_NVM.decelarationOpen = 3;
 20018  0068B4  0E03               	movlw	3
 20019  0068B6  0100               	movlb	0	; () banked
 20020  0068B8  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20021                           
 20022                           ;controlMemory_MC50.c: 203:     var_sys_NVM.motorPower = 9;
 20023  0068BA  0E09               	movlw	9
 20024  0068BC  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 20025                           
 20026                           ;controlMemory_MC50.c: 204:     var_sys_NVM.decelarationClose = 3;
 20027  0068BE  0E03               	movlw	3
 20028  0068C0  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20029                           
 20030                           ;controlMemory_MC50.c: 205:     var_sys_NVM.photoCellIsON = 0;
 20031  0068C2  0E00               	movlw	0
 20032  0068C4  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 20033                           
 20034                           ;controlMemory_MC50.c: 206:     var_sys_NVM.photoCellInOpen = 0;
 20035  0068C6  0E00               	movlw	0
 20036  0068C8  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 20037                           
 20038                           ;controlMemory_MC50.c: 207:     var_sys_NVM.securityBandIsON = 0 ;
 20039  0068CA  0E00               	movlw	0
 20040  0068CC  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 20041                           
 20042                           ;controlMemory_MC50.c: 208:     var_sys_NVM.securityBandType = 1;
 20043  0068CE  0E01               	movlw	1
 20044  0068D0  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 20045                           
 20046                           ;controlMemory_MC50.c: 209:     var_sys_NVM.securityBandInOpen = 0;
 20047  0068D2  0E00               	movlw	0
 20048  0068D4  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 20049                           
 20050                           ;controlMemory_MC50.c: 210:     var_sys_NVM.flashLightMode = 0;
 20051  0068D6  0E00               	movlw	0
 20052  0068D8  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 20053                           
 20054                           ;controlMemory_MC50.c: 211:     var_sys_NVM.programmingDistance = 0;
 20055  0068DA  0E00               	movlw	0
 20056  0068DC  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 20057                           
 20058                           ;controlMemory_MC50.c: 212:     var_sys_NVM.decelarationSensivity = 0;
 20059  0068DE  0E00               	movlw	0
 20060  0068E0  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 20061                           
 20062                           ;controlMemory_MC50.c: 213:     var_sys_NVM.homemPresente = 0;
 20063  0068E2  0E00               	movlw	0
 20064  0068E4  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 20065                           
 20066                           ;controlMemory_MC50.c: 214:     var_sys_NVM.autoTimeWalkClose = 0;
 20067  0068E6  0E00               	movlw	0
 20068  0068E8  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20069                           
 20070                           ;controlMemory_MC50.c: 215:     var_sys_NVM.ligthTime = 3;
 20071  0068EA  0E03               	movlw	3
 20072  0068EC  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 20073                           
 20074                           ;controlMemory_MC50.c: 216:     var_sys_NVM.folow_me = 0;
 20075  0068EE  0E00               	movlw	0
 20076  0068F0  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 20077                           
 20078                           ;controlMemory_MC50.c: 217:     var_sys_NVM.electricBrake = 0;
 20079  0068F2  0E00               	movlw	0
 20080  0068F4  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 20081                           
 20082                           ;controlMemory_MC50.c: 218:     var_sys_NVM.autoTimeWalkClose = 0;
 20083  0068F6  0E00               	movlw	0
 20084  0068F8  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20085                           
 20086                           ;controlMemory_MC50.c: 219:     var_sys_NVM.Direction_motor = 1 ;
 20087  0068FA  0E01               	movlw	1
 20088  0068FC  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20089                           
 20090                           ; BSR set to: 0
 20091                           ;controlMemory_MC50.c: 222:     if (type == SC){
 20092  0068FE  503A               	movf	ResetDefaultMemory@type^0,w,c
 20093  006900  A4D8               	btfss	status,2,c
 20094  006902  D014               	goto	l21375
 20095                           
 20096                           ; BSR set to: 0
 20097                           ;controlMemory_MC50.c: 224:         var_sys_NVM.motorSensitivity = 0;
 20098  006904  0E00               	movlw	0
 20099  006906  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20100                           
 20101                           ;controlMemory_MC50.c: 225:         var_sys_NVM.logicDigital = 0;
 20102  006908  0E00               	movlw	0
 20103  00690A  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20104                           
 20105                           ;controlMemory_MC50.c: 226:         var_sys_NVM.Stopboton = 0;
 20106  00690C  0E00               	movlw	0
 20107  00690E  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20108                           
 20109                           ;controlMemory_MC50.c: 227:         var_sys_NVM.autoTimeFullClose = 0;
 20110  006910  0E00               	movlw	0
 20111  006912  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20112                           
 20113                           ;controlMemory_MC50.c: 228:         var_sys_NVM.operationMode = 0;
 20114  006914  0E00               	movlw	0
 20115  006916  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20116                           
 20117                           ;controlMemory_MC50.c: 229:         var_sys_NVM.velocityDecelaration = 5;
 20118  006918  0E05               	movlw	5
 20119  00691A  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20120                           
 20121                           ;controlMemory_MC50.c: 230:         var_sys_NVM.flashRGBMode = 3;
 20122  00691C  0E03               	movlw	3
 20123  00691E  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20124                           
 20125                           ;controlMemory_MC50.c: 231:         var_sys_NVM.softstop = 0;
 20126  006920  0E00               	movlw	0
 20127  006922  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20128                           
 20129                           ;controlMemory_MC50.c: 232:         var_sys_NVM.softStart = 0;
 20130  006924  0E00               	movlw	0
 20131  006926  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20132                           
 20133                           ;controlMemory_MC50.c: 233:         var_sys_NVM.walkTime = 10;
 20134  006928  0E0A               	movlw	10
 20135  00692A  D039               	goto	L82
 20136  00692C                     l21375:
 20137                           
 20138                           ; BSR set to: 0
 20139  00692C  043A               	decf	ResetDefaultMemory@type^0,w,c
 20140  00692E  A4D8               	btfss	status,2,c
 20141  006930  D01B               	goto	l21379
 20142                           
 20143                           ; BSR set to: 0
 20144                           ;controlMemory_MC50.c: 237:         var_sys_NVM.decelarationClose = 4;
 20145  006932  0E04               	movlw	4
 20146  006934  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20147                           
 20148                           ;controlMemory_MC50.c: 238:         var_sys_NVM.decelarationOpen = 4;
 20149  006936  0E04               	movlw	4
 20150  006938  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20151                           
 20152                           ;controlMemory_MC50.c: 239:         var_sys_NVM.motorSensitivity = 4;
 20153  00693A  0E04               	movlw	4
 20154  00693C  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20155                           
 20156                           ;controlMemory_MC50.c: 240:         var_sys_NVM.logicDigital = 1;
 20157  00693E  0E01               	movlw	1
 20158  006940  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20159                           
 20160                           ;controlMemory_MC50.c: 241:         var_sys_NVM.Stopboton = 1;
 20161  006942  0E01               	movlw	1
 20162  006944  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20163                           
 20164                           ;controlMemory_MC50.c: 242:         var_sys_NVM.autoTimeFullClose = 0;
 20165  006946  0E00               	movlw	0
 20166  006948  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20167                           
 20168                           ;controlMemory_MC50.c: 243:         var_sys_NVM.operationMode = 0;
 20169  00694A  0E00               	movlw	0
 20170  00694C  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20171                           
 20172                           ;controlMemory_MC50.c: 244:         var_sys_NVM.velocityDecelaration = 5;
 20173  00694E  0E05               	movlw	5
 20174  006950  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20175                           
 20176                           ;controlMemory_MC50.c: 245:         var_sys_NVM.flashRGBMode = 3;
 20177  006952  0E03               	movlw	3
 20178  006954  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20179                           
 20180                           ;controlMemory_MC50.c: 246:         var_sys_NVM.softstop = 0;
 20181  006956  0E00               	movlw	0
 20182  006958  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20183                           
 20184                           ;controlMemory_MC50.c: 247:         var_sys_NVM.softStart = 5;
 20185  00695A  0E05               	movlw	5
 20186  00695C  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20187                           
 20188                           ;controlMemory_MC50.c: 248:         var_sys_NVM.walkTime = 0;
 20189  00695E  0E00               	movlw	0
 20190  006960  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20191                           
 20192                           ;controlMemory_MC50.c: 249:         var_sys_NVM.Direction_motor = 0 ;
 20193  006962  0E00               	movlw	0
 20194  006964  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20195                           
 20196                           ;controlMemory_MC50.c: 251:     }
 20197  006966  D01C               	goto	l21383
 20198  006968                     l21379:
 20199                           
 20200                           ; BSR set to: 0
 20201  006968  0E02               	movlw	2
 20202  00696A  183A               	xorwf	ResetDefaultMemory@type^0,w,c
 20203  00696C  A4D8               	btfss	status,2,c
 20204  00696E  D018               	goto	l21383
 20205                           
 20206                           ; BSR set to: 0
 20207                           ;controlMemory_MC50.c: 253:         var_sys_NVM.decelarationClose = 6;
 20208  006970  0E06               	movlw	6
 20209  006972  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20210                           
 20211                           ;controlMemory_MC50.c: 254:         var_sys_NVM.decelarationOpen = 2;
 20212  006974  0E02               	movlw	2
 20213  006976  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20214                           
 20215                           ;controlMemory_MC50.c: 255:         var_sys_NVM.motorSensitivity = 0;
 20216  006978  0E00               	movlw	0
 20217  00697A  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20218                           
 20219                           ;controlMemory_MC50.c: 256:         var_sys_NVM.logicDigital = 0;
 20220  00697C  0E00               	movlw	0
 20221  00697E  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20222                           
 20223                           ;controlMemory_MC50.c: 257:         var_sys_NVM.Stopboton = 0;
 20224  006980  0E00               	movlw	0
 20225  006982  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20226                           
 20227                           ;controlMemory_MC50.c: 258:         var_sys_NVM.autoTimeFullClose = 0;
 20228  006984  0E00               	movlw	0
 20229  006986  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20230                           
 20231                           ;controlMemory_MC50.c: 259:         var_sys_NVM.operationMode = 2;
 20232  006988  0E02               	movlw	2
 20233  00698A  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20234                           
 20235                           ;controlMemory_MC50.c: 260:         var_sys_NVM.velocityDecelaration = 5;
 20236  00698C  0E05               	movlw	5
 20237  00698E  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20238                           
 20239                           ;controlMemory_MC50.c: 261:         var_sys_NVM.flashRGBMode = 1;
 20240  006990  0E01               	movlw	1
 20241  006992  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20242                           
 20243                           ;controlMemory_MC50.c: 262:         var_sys_NVM.softstop = 5;
 20244  006994  0E05               	movlw	5
 20245  006996  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20246                           
 20247                           ;controlMemory_MC50.c: 263:         var_sys_NVM.softStart = 0;
 20248  006998  0E00               	movlw	0
 20249  00699A  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20250                           
 20251                           ;controlMemory_MC50.c: 264:         var_sys_NVM.walkTime = 0;
 20252  00699C  0E00               	movlw	0
 20253  00699E                     L82:
 20254  00699E  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20255  0069A0                     l21383:
 20256                           
 20257                           ; BSR set to: 0
 20258                           ;controlMemory_MC50.c: 272:     SaveNVM_VarSystem(pageMemoryE);
 20259  0069A0  0E01               	movlw	1
 20260  0069A2  ECEA  F04B         	call	_SaveNVM_VarSystem
 20261                           
 20262                           ;controlMemory_MC50.c: 273:     SaveNVM_VarSystem(pageMemoryP);
 20263  0069A6  0E00               	movlw	0
 20264  0069A8  ECEA  F04B         	call	_SaveNVM_VarSystem
 20265                           
 20266                           ;controlMemory_MC50.c: 278:     var_sys_NVM.learningTimeToClose = 0;
 20267  0069AC  0E00               	movlw	0
 20268  0069AE  0100               	movlb	0	; () banked
 20269  0069B0  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 20270  0069B2  0E00               	movlw	0
 20271  0069B4  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 20272  0069B6  0E00               	movlw	0
 20273  0069B8  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 20274  0069BA  0E00               	movlw	0
 20275  0069BC  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 20276                           
 20277                           ;controlMemory_MC50.c: 279:     var_sys_NVM.learningTimeToOpen = 0;
 20278  0069BE  0E00               	movlw	0
 20279  0069C0  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 20280  0069C2  0E00               	movlw	0
 20281  0069C4  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 20282  0069C6  0E00               	movlw	0
 20283  0069C8  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 20284  0069CA  0E00               	movlw	0
 20285  0069CC  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 20286                           
 20287                           ;controlMemory_MC50.c: 280:     var_sys_NVM.learningCurrentNormalClose = 0;
 20288  0069CE  0E00               	movlw	0
 20289  0069D0  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 20290  0069D2  0E00               	movlw	0
 20291  0069D4  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 20292                           
 20293                           ;controlMemory_MC50.c: 281:     var_sys_NVM.learningCurrentNormalOpen = 0;
 20294  0069D6  0E00               	movlw	0
 20295  0069D8  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 20296  0069DA  0E00               	movlw	0
 20297  0069DC  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 20298                           
 20299                           ;controlMemory_MC50.c: 282:     var_sys_NVM.learningCurrentDecelarationClose = 0;
 20300  0069DE  0E00               	movlw	0
 20301  0069E0  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 20302  0069E2  0E00               	movlw	0
 20303  0069E4  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 20304  0069E6  0E00               	movlw	0
 20305  0069E8  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 20306  0069EA  0E00               	movlw	0
 20307  0069EC  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 20308                           
 20309                           ;controlMemory_MC50.c: 283:     var_sys_NVM.learningCurrentDecelarationOpen = 0;
 20310  0069EE  0E00               	movlw	0
 20311  0069F0  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 20312  0069F2  0E00               	movlw	0
 20313  0069F4  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 20314  0069F6  0E00               	movlw	0
 20315  0069F8  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 20316  0069FA  0E00               	movlw	0
 20317  0069FC  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 20318                           
 20319                           ; BSR set to: 0
 20320                           ;controlMemory_MC50.c: 289:     if ((PORTAbits.RA2 == 0) && (PORTAbits.RA1 == 0) && (POR
      +                          TBbits.RB0 == 0)&&(PORTAbits.RA5==0)){
 20321  0069FE  A48D               	btfss	141,2,c	;volatile
 20322                           
 20323                           ; BSR set to: 0
 20324  006A00  B28D               	btfsc	141,1,c	;volatile
 20325  006A02  D015               	goto	l21397
 20326                           
 20327                           ; BSR set to: 0
 20328  006A04  A08E               	btfss	142,0,c	;volatile
 20329                           
 20330                           ; BSR set to: 0
 20331  006A06  BA8D               	btfsc	141,5,c	;volatile
 20332  006A08  D012               	goto	l21397
 20333                           
 20334                           ; BSR set to: 0
 20335                           ;controlMemory_MC50.c: 290:      var_sys.actualCounterMoves = 0;
 20336  006A0A  0E00               	movlw	0
 20337  006A0C  0101               	movlb	1	; () banked
 20338  006A0E  6F3C               	movwf	(_var_sys+60)& (0+255),b	;volatile
 20339  006A10  0E00               	movlw	0
 20340  006A12  6F3D               	movwf	(_var_sys+61)& (0+255),b	;volatile
 20341  006A14  0E00               	movlw	0
 20342  006A16  6F3E               	movwf	(_var_sys+62)& (0+255),b	;volatile
 20343  006A18  0E00               	movlw	0
 20344  006A1A  6F3F               	movwf	(_var_sys+63)& (0+255),b	;volatile
 20345                           
 20346                           ;controlMemory_MC50.c: 291:      var_sys_NVM.counterMoves = 0;
 20347  006A1C  0E00               	movlw	0
 20348  006A1E  0100               	movlb	0	; () banked
 20349  006A20  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 20350  006A22  0E00               	movlw	0
 20351  006A24  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 20352  006A26  0E00               	movlw	0
 20353  006A28  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 20354  006A2A  0E00               	movlw	0
 20355  006A2C  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 20356  006A2E                     l21397:
 20357                           
 20358                           ; BSR set to: 0
 20359                           ;controlMemory_MC50.c: 296:     SaveNVM_VarSystem(pageMemoryCounters);
 20360  006A2E  0E02               	movlw	2
 20361  006A30  ECEA  F04B         	call	_SaveNVM_VarSystem
 20362                           
 20363                           ;controlMemory_MC50.c: 297:     SaveNVM_VarSystem(pageMemoryLearningVars);
 20364  006A34  0E03               	movlw	3
 20365  006A36  ECEA  F04B         	call	_SaveNVM_VarSystem
 20366  006A3A  0012               	return		;funcret
 20367  006A3C                     __end_of_ResetDefaultMemory:
 20368                           	callstack 0
 20369                           
 20370 ;; *************** function _I2C1_Read1ByteRegister *****************
 20371 ;; Defined at:
 20372 ;;		line 65 in file "mcc_generated_files/examples/i2c1_master_example.c"
 20373 ;; Parameters:    Size  Location     Type
 20374 ;;  address         1    wreg     unsigned char 
 20375 ;;  reg             1   33[COMRAM] unsigned char 
 20376 ;; Auto vars:     Size  Location     Type
 20377 ;;  address         1   34[COMRAM] unsigned char 
 20378 ;;  returnValue     1   35[COMRAM] unsigned char 
 20379 ;; Return value:  Size  Location     Type
 20380 ;;                  1    wreg      unsigned char 
 20381 ;; Registers used:
 20382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20383 ;; Tracked objects:
 20384 ;;		On entry : 31/0
 20385 ;;		On exit  : 33/2
 20386 ;;		Unchanged: 0/0
 20387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20388 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20389 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20391 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20392 ;;Total ram usage:        3 bytes
 20393 ;; Hardware stack levels used: 1
 20394 ;; Hardware stack levels required when called: 12
 20395 ;; This function calls:
 20396 ;;		_I2C1_Close
 20397 ;;		_I2C1_MasterWrite
 20398 ;;		_I2C1_Open
 20399 ;;		_I2C1_SetAddressNackCallback
 20400 ;;		_I2C1_SetBuffer
 20401 ;;		_I2C1_SetDataCompleteCallback
 20402 ;; This function is called by:
 20403 ;;		_loadNVM_VarSystem
 20404 ;; This function uses a non-reentrant model
 20405 ;;
 20406                           
 20407                           	psect	text72
 20408  009070                     __ptext72:
 20409                           	callstack 0
 20410  009070                     _I2C1_Read1ByteRegister:
 20411                           	callstack 17
 20412                           
 20413                           ;incstack = 0
 20414                           ;I2C1_Read1ByteRegister@address stored from wreg
 20415  009070  6E23               	movwf	I2C1_Read1ByteRegister@address^0,c
 20416                           
 20417                           ;mcc_generated_files/examples/i2c1_master_example.c: 65: uint8_t I2C1_Read1ByteRegister(
      +                          i2c1_address_t address, uint8_t reg);mcc_generated_files/examples/i2c1_master_example.c:
      +                           66: {;mcc_generated_files/examples/i2c1_master_example.c: 67:     uint8_t returnValue =
      +                           0x00;
 20418  009072  0E00               	movlw	0
 20419  009074  6E24               	movwf	I2C1_Read1ByteRegister@returnValue^0,c
 20420  009076                     l22857:
 20421  009076  5023               	movf	I2C1_Read1ByteRegister@address^0,w,c
 20422  009078  EC25  F043         	call	_I2C1_Open
 20423  00907C  0900               	iorlw	0
 20424  00907E  B4D8               	btfsc	status,2,c
 20425  009080  D7FA               	goto	l22857
 20426                           
 20427                           ;mcc_generated_files/examples/i2c1_master_example.c: 70:     I2C1_SetDataCompleteCallbac
      +                          k(rd1RegCompleteHandler,&returnValue);
 20428  009082  0E3C               	movlw	low _rd1RegCompleteHandler@i2c1_master_example$F500
 20429  009084  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 20430  009086  0E9A               	movlw	high _rd1RegCompleteHandler@i2c1_master_example$F500
 20431  009088  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 20432  00908A  0E24               	movlw	low I2C1_Read1ByteRegister@returnValue
 20433  00908C  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 20434  00908E  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 20435  009090  EC4A  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 20436                           
 20437                           ;mcc_generated_files/examples/i2c1_master_example.c: 71:     I2C1_SetBuffer(&reg,1);
 20438  009094  0E22               	movlw	low I2C1_Read1ByteRegister@reg
 20439  009096  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 20440  009098  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 20441  00909A  0E00               	movlw	0
 20442  00909C  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 20443  00909E  0E01               	movlw	1
 20444  0090A0  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 20445  0090A2  EC01  F04F         	call	_I2C1_SetBuffer	;wreg free
 20446                           
 20447                           ; BSR set to: 2
 20448                           ;mcc_generated_files/examples/i2c1_master_example.c: 72:     I2C1_SetAddressNackCallback
      +                          (((void*)0),((void*)0));
 20449  0090A6  0E00               	movlw	0
 20450  0090A8  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 20451  0090AA  0E00               	movlw	0
 20452  0090AC  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 20453  0090AE  0E00               	movlw	0
 20454  0090B0  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 20455  0090B2  0E00               	movlw	0
 20456  0090B4  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 20457  0090B6  EC32  F04F         	call	_I2C1_SetAddressNackCallback	;wreg free
 20458                           
 20459                           ;mcc_generated_files/examples/i2c1_master_example.c: 73:     I2C1_MasterWrite();
 20460  0090BA  EC00  F050         	call	_I2C1_MasterWrite	;wreg free
 20461  0090BE                     l22867:
 20462  0090BE  EC73  F04E         	call	_I2C1_Close	;wreg free
 20463  0090C2  06E8               	decf	wreg,f,c
 20464  0090C4  B4D8               	btfsc	status,2,c
 20465  0090C6  D7FB               	goto	l22867
 20466                           
 20467                           ;mcc_generated_files/examples/i2c1_master_example.c: 76:     return returnValue;
 20468  0090C8  5024               	movf	I2C1_Read1ByteRegister@returnValue^0,w,c
 20469  0090CA  0012               	return		;funcret
 20470  0090CC                     __end_of_I2C1_Read1ByteRegister:
 20471                           	callstack 0
 20472                           
 20473 ;; *************** function _getKeyPressed *****************
 20474 ;; Defined at:
 20475 ;;		line 217 in file "inputs_MC50.c"
 20476 ;; Parameters:    Size  Location     Type
 20477 ;;		None
 20478 ;; Auto vars:     Size  Location     Type
 20479 ;;  temp            1   15[COMRAM] char 
 20480 ;; Return value:  Size  Location     Type
 20481 ;;                  1    wreg      char 
 20482 ;; Registers used:
 20483 ;;		wreg, status,2, status,0
 20484 ;; Tracked objects:
 20485 ;;		On entry : 3E/1
 20486 ;;		On exit  : 3D/0
 20487 ;;		Unchanged: 0/0
 20488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20490 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20492 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20493 ;;Total ram usage:        1 bytes
 20494 ;; Hardware stack levels used: 1
 20495 ;; Hardware stack levels required when called: 4
 20496 ;; This function calls:
 20497 ;;		Nothing
 20498 ;; This function is called by:
 20499 ;;		_main
 20500 ;; This function uses a non-reentrant model
 20501 ;;
 20502                           
 20503                           	psect	text73
 20504  009E4C                     __ptext73:
 20505                           	callstack 0
 20506  009E4C                     _getKeyPressed:
 20507                           	callstack 26
 20508                           
 20509                           ;inputs_MC50.c: 218:     signed char temp=-1;
 20510                           
 20511                           ;incstack = 0
 20512  009E4C  6810               	setf	getKeyPressed@temp^0,c
 20513                           
 20514                           ;inputs_MC50.c: 219:     if(RFFull)
 20515  009E4E  0100               	movlb	0	; () banked
 20516  009E50  518B               	movf	_RFFull& (0+255),w,b	;volatile
 20517  009E52  B4D8               	btfsc	status,2,c
 20518  009E54  D005               	goto	l24799
 20519                           
 20520                           ; BSR set to: 0
 20521                           ;inputs_MC50.c: 220:     {;inputs_MC50.c: 221:         temp=(BufferRF[7]&0xF0)>>4;
 20522  009E56  0102               	movlb	2	; () banked
 20523  009E58  39CF               	swapf	(_BufferRF+7)& (0+255),w,b
 20524  009E5A  0B0F               	andlw	15
 20525  009E5C  0B0F               	andlw	15
 20526  009E5E  6E10               	movwf	getKeyPressed@temp^0,c
 20527  009E60                     l24799:
 20528                           
 20529                           ;inputs_MC50.c: 223:     return temp;
 20530  009E60  5010               	movf	getKeyPressed@temp^0,w,c
 20531  009E62  0012               	return		;funcret
 20532  009E64                     __end_of_getKeyPressed:
 20533                           	callstack 0
 20534                           
 20535 ;; *************** function _eusartparser *****************
 20536 ;; Defined at:
 20537 ;;		line 393 in file "eusartparser.c"
 20538 ;; Parameters:    Size  Location     Type
 20539 ;;  package         2    8[BANK0 ] PTR struct package_t
 20540 ;;		 -> main@package(7), 
 20541 ;; Auto vars:     Size  Location     Type
 20542 ;;  i               1   28[BANK0 ] unsigned char 
 20543 ;;  i               1   25[BANK0 ] unsigned char 
 20544 ;;  i               1   29[BANK0 ] unsigned char 
 20545 ;;  i               1   26[BANK0 ] unsigned char 
 20546 ;;  i               1   30[BANK0 ] unsigned char 
 20547 ;;  i               1   24[BANK0 ] unsigned char 
 20548 ;;  i               1   23[BANK0 ] unsigned char 
 20549 ;;  i               1   19[BANK0 ] unsigned char 
 20550 ;;  i               1   18[BANK0 ] unsigned char 
 20551 ;;  i               1   27[BANK0 ] unsigned char 
 20552 ;;  i               1   22[BANK0 ] unsigned char 
 20553 ;;  i               1   21[BANK0 ] unsigned char 
 20554 ;;  i               1   17[BANK0 ] unsigned char 
 20555 ;;  i               1   16[BANK0 ] unsigned char 
 20556 ;;  a               7    0        struct package_t
 20557 ;;  serial          4   32[BANK0 ] unsigned long 
 20558 ;;  relcounter      1   31[BANK0 ] unsigned char 
 20559 ;;  pos             1   20[BANK0 ] unsigned char 
 20560 ;; Return value:  Size  Location     Type
 20561 ;;                  1    wreg      void 
 20562 ;; Registers used:
 20563 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 20564 ;; Tracked objects:
 20565 ;;		On entry : 3F/0
 20566 ;;		On exit  : 0/0
 20567 ;;		Unchanged: 0/0
 20568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20569 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20570 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20571 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20572 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20573 ;;Total ram usage:       28 bytes
 20574 ;; Hardware stack levels used: 1
 20575 ;; Hardware stack levels required when called: 14
 20576 ;; This function calls:
 20577 ;;		_ReadSerial
 20578 ;;		_RemoveSerial
 20579 ;;		_SaveNVM_VarSystem
 20580 ;;		_cmdMemoryIsEmpty
 20581 ;;		_confirmpackage
 20582 ;;		_read_eusartparser
 20583 ;;		_saveNewSerial
 20584 ;;		_updateChangesToUart
 20585 ;;		_validateRemoteSerialNumber
 20586 ;;		_write_eusartparser
 20587 ;;		_write_package
 20588 ;; This function is called by:
 20589 ;;		_main
 20590 ;; This function uses a non-reentrant model
 20591 ;;
 20592                           
 20593                           	psect	text74
 20594  000F22                     __ptext74:
 20595                           	callstack 0
 20596  000F22                     _eusartparser:
 20597                           	callstack 16
 20598                           
 20599                           ; BSR set to: 0
 20600                           ;eusartparser.c: 394:     struct package_t a;;eusartparser.c: 395:     uint8_t relcounte
      +                          r;;eusartparser.c: 396:     static _Bool save_f=0;;eusartparser.c: 397:     static uint1
      +                          6_t buffer=0x0000;;eusartparser.c: 398:     uint32_t serial;;eusartparser.c: 399:     ch
      +                          ar pos;;eusartparser.c: 401:     switch(package->functioncode){
 20601                           
 20602                           ;incstack = 0
 20603  000F22  EF37  F00C         	goto	l28077
 20604  000F26                     l27629:
 20605                           
 20606                           ; BSR set to: 0
 20607                           ;eusartparser.c: 403:             read_eusartparser(package);
 20608  000F26  C0E0  F018         	movff	eusartparser@package,read_eusartparser@package
 20609  000F2A  C0E1  F019         	movff	eusartparser@package+1,read_eusartparser@package+1
 20610  000F2E  ECC4  F014         	call	_read_eusartparser	;wreg free
 20611  000F32                     l27631:
 20612                           
 20613                           ;eusartparser.c: 404:             confirmpackage(package, 1);
 20614  000F32  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 20615  000F36  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 20616  000F3A  0E01               	movlw	1
 20617  000F3C  6E14               	movwf	confirmpackage@confirm^0,c
 20618  000F3E  EC66  F048         	call	_confirmpackage	;wreg free
 20619  000F42                     l27633:
 20620                           
 20621                           ;eusartparser.c: 405:             write_package(*package);
 20622  000F42  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20623  000F46  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20624  000F4A  EE00  F011         	lfsr	0,write_package@package
 20625  000F4E  0E06               	movlw	6
 20626  000F50                     u33721:
 20627  000F50  CFDB FFEB          	movff	plusw2,plusw0
 20628  000F54  06E8               	decf	wreg,f,c
 20629  000F56  E2FC               	bc	u33721
 20630  000F58  ECB0  F04C         	call	_write_package	;wreg free
 20631                           
 20632                           ;eusartparser.c: 406:             break;
 20633  000F5C  0012               	return	
 20634  000F5E                     l27635:
 20635                           
 20636                           ; BSR set to: 0
 20637                           ;eusartparser.c: 409:             done_changes=1;
 20638  000F5E  0E01               	movlw	1
 20639  000F60  0101               	movlb	1	; () banked
 20640  000F62  6F8E               	movwf	_done_changes& (0+255),b
 20641                           
 20642                           ;eusartparser.c: 410:             if(programmer_enable){
 20643  000F64  0100               	movlb	0	; () banked
 20644  000F66  5185               	movf	_programmer_enable& (0+255),w,b
 20645  000F68  B4D8               	btfsc	status,2,c
 20646  000F6A  D00E               	goto	l27643
 20647                           
 20648                           ; BSR set to: 0
 20649                           ;eusartparser.c: 411:                 write_eusartparser(*package);
 20650  000F6C  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20651  000F70  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20652  000F74  EE00  F010         	lfsr	0,write_eusartparser@package
 20653  000F78  0E06               	movlw	6
 20654  000F7A                     u33741:
 20655  000F7A  CFDB FFEB          	movff	plusw2,plusw0
 20656  000F7E  06E8               	decf	wreg,f,c
 20657  000F80  E2FC               	bc	u33741
 20658  000F82  EC0A  F018         	call	_write_eusartparser	;wreg free
 20659  000F86  D7D5               	goto	l27631
 20660  000F88                     l27643:
 20661                           
 20662                           ;eusartparser.c: 416:                 confirmpackage(package, 0);
 20663  000F88  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 20664  000F8C  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 20665  000F90  0E00               	movlw	0
 20666  000F92  6E14               	movwf	confirmpackage@confirm^0,c
 20667  000F94  EC66  F048         	call	_confirmpackage	;wreg free
 20668  000F98  D7D4               	goto	l27633
 20669  000F9A                     l27647:
 20670                           
 20671                           ; BSR set to: 0
 20672                           ;eusartparser.c: 422:             if(programmer_enable){
 20673  000F9A  5185               	movf	_programmer_enable& (0+255),w,b
 20674  000F9C  B4D8               	btfsc	status,2,c
 20675  000F9E  D008               	goto	l27653
 20676                           
 20677                           ; BSR set to: 0
 20678                           ;eusartparser.c: 423:                 SaveNVM_VarSystem(pageMemoryE);
 20679  000FA0  0E01               	movlw	1
 20680  000FA2  ECEA  F04B         	call	_SaveNVM_VarSystem
 20681                           
 20682                           ;eusartparser.c: 424:                 SaveNVM_VarSystem(pageMemoryP);
 20683  000FA6  0E00               	movlw	0
 20684  000FA8  ECEA  F04B         	call	_SaveNVM_VarSystem
 20685                           
 20686                           ;eusartparser.c: 425:                 programmer_enable=0;
 20687  000FAC  0E00               	movlw	0
 20688  000FAE  D005               	goto	L83
 20689  000FB0                     l27653:
 20690                           
 20691                           ; BSR set to: 0
 20692                           ;eusartparser.c: 428:                 if((sm_state_Main_t)main_stateMachine.current_stat
      +                          e==st_standBy)
 20693  000FB0  0101               	movlb	1	; () banked
 20694  000FB2  51F1               	movf	_main_stateMachine& (0+255),w,b
 20695  000FB4  A4D8               	btfss	status,2,c
 20696  000FB6  D004               	goto	l27657
 20697                           
 20698                           ; BSR set to: 1
 20699                           ;eusartparser.c: 429:                     programmer_enable=1;
 20700  000FB8  0E01               	movlw	1
 20701  000FBA                     L83:
 20702  000FBA  0100               	movlb	0	; () banked
 20703  000FBC  6F85               	movwf	_programmer_enable& (0+255),b
 20704  000FBE  D019               	goto	l27665
 20705  000FC0                     l27657:
 20706                           
 20707                           ; BSR set to: 1
 20708                           ;eusartparser.c: 431:                     package->data.data16=(uint16_t)2;
 20709  000FC0  0100               	movlb	0	; () banked
 20710  000FC2  EE20 F002          	lfsr	2,2
 20711  000FC6  51E0               	movf	eusartparser@package& (0+255),w,b
 20712  000FC8  26D9               	addwf	fsr2l,f,c
 20713  000FCA  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20714  000FCC  22DA               	addwfc	fsr2h,f,c
 20715  000FCE  0E02               	movlw	2
 20716  000FD0  6EDE               	movwf	postinc2,c
 20717  000FD2  0E00               	movlw	0
 20718  000FD4  6EDD               	movwf	postdec2,c
 20719                           
 20720                           ; BSR set to: 0
 20721                           ;eusartparser.c: 432:                     write_package(*package);
 20722  000FD6  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20723  000FDA  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20724  000FDE  EE00  F011         	lfsr	0,write_package@package
 20725  000FE2  0E06               	movlw	6
 20726  000FE4                     u33771:
 20727  000FE4  CFDB FFEB          	movff	plusw2,plusw0
 20728  000FE8  06E8               	decf	wreg,f,c
 20729  000FEA  E2FC               	bc	u33771
 20730  000FEC  ECB0  F04C         	call	_write_package	;wreg free
 20731  000FF0  D7CB               	goto	l27643
 20732  000FF2                     l27665:
 20733                           
 20734                           ; BSR set to: 0
 20735                           ;eusartparser.c: 439:             package->data.data16=(uint16_t)programmer_enable;
 20736  000FF2  5185               	movf	_programmer_enable& (0+255),w,b
 20737  000FF4  6FE2               	movwf	??_eusartparser& (0+255),b
 20738  000FF6  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 20739  000FF8  EE20 F002          	lfsr	2,2
 20740  000FFC  51E0               	movf	eusartparser@package& (0+255),w,b
 20741  000FFE  26D9               	addwf	fsr2l,f,c
 20742  001000  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20743  001002  22DA               	addwfc	fsr2h,f,c
 20744  001004  C0E2  FFDE         	movff	??_eusartparser,postinc2
 20745  001008  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 20746                           
 20747                           ; BSR set to: 0
 20748                           ;eusartparser.c: 440:             write_package(*package);
 20749  00100C  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20750  001010  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20751  001014  EE00  F011         	lfsr	0,write_package@package
 20752  001018  0E06               	movlw	6
 20753  00101A                     u33781:
 20754  00101A  CFDB FFEB          	movff	plusw2,plusw0
 20755  00101E  06E8               	decf	wreg,f,c
 20756  001020  E2FC               	bc	u33781
 20757  001022  ECB0  F04C         	call	_write_package	;wreg free
 20758                           
 20759                           ;eusartparser.c: 441:             confirmpackage(package, 1);
 20760  001026  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 20761  00102A  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 20762  00102E  0E01               	movlw	1
 20763  001030  6E14               	movwf	confirmpackage@confirm^0,c
 20764  001032  EC66  F048         	call	_confirmpackage	;wreg free
 20765                           
 20766                           ;eusartparser.c: 442:             write_package(*package);
 20767  001036  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20768  00103A  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20769  00103E  EE00  F011         	lfsr	0,write_package@package
 20770  001042  0E06               	movlw	6
 20771  001044                     u33791:
 20772  001044  CFDB FFEB          	movff	plusw2,plusw0
 20773  001048  06E8               	decf	wreg,f,c
 20774  00104A  E2FC               	bc	u33791
 20775  00104C  ECB0  F04C         	call	_write_package	;wreg free
 20776                           
 20777                           ;eusartparser.c: 444:             if(done_changes==1)
 20778  001050  0101               	movlb	1	; () banked
 20779  001052  058E               	decf	_done_changes& (0+255),w,b
 20780  001054  B4D8               	btfsc	status,2,c
 20781                           
 20782                           ; BSR set to: 1
 20783                           ;eusartparser.c: 445:                 updateChangesToUart();
 20784  001056  EC55  F045         	call	_updateChangesToUart	;wreg free
 20785                           
 20786                           ;eusartparser.c: 446:             done_changes=0;
 20787  00105A  0E00               	movlw	0
 20788  00105C  0101               	movlb	1	; () banked
 20789  00105E  6F8E               	movwf	_done_changes& (0+255),b
 20790                           
 20791                           ;eusartparser.c: 447:             break;
 20792  001060  0012               	return	
 20793  001062                     l27683:
 20794                           
 20795                           ; BSR set to: 0
 20796                           ;eusartparser.c: 453:                 package->address=0x00;
 20797  001062  EE20 F001          	lfsr	2,1
 20798  001066  51E0               	movf	eusartparser@package& (0+255),w,b
 20799  001068  26D9               	addwf	fsr2l,f,c
 20800  00106A  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20801  00106C  22DA               	addwfc	fsr2h,f,c
 20802  00106E  0E00               	movlw	0
 20803  001070  6EDF               	movwf	indf2,c
 20804                           
 20805                           ;eusartparser.c: 454:                 package->data.data16=var_sys_NVM.positionRemotesFu
      +                          ll;
 20806  001072  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20807  001074  6FE2               	movwf	??_eusartparser& (0+255),b
 20808  001076  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 20809  001078  EE20 F002          	lfsr	2,2
 20810  00107C  51E0               	movf	eusartparser@package& (0+255),w,b
 20811  00107E  26D9               	addwf	fsr2l,f,c
 20812  001080  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20813  001082  22DA               	addwfc	fsr2h,f,c
 20814  001084  C0E2  FFDE         	movff	??_eusartparser,postinc2
 20815  001088  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 20816                           
 20817                           ; BSR set to: 0
 20818                           ;eusartparser.c: 455:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 20819  00108C  0E00               	movlw	0
 20820  00108E  6FE8               	movwf	eusartparser@i& (0+255),b
 20821  001090  D014               	goto	l27693
 20822  001092                     l27687:
 20823                           
 20824                           ; BSR set to: 0
 20825                           ;eusartparser.c: 456:                 if(cmdMemoryIsEmpty(0,i)==1)
 20826  001092  C0E8  F02E         	movff	eusartparser@i,cmdMemoryIsEmpty@position
 20827  001096  0E00               	movlw	0
 20828  001098  ECF8  F040         	call	_cmdMemoryIsEmpty
 20829  00109C  06E8               	decf	wreg,f,c
 20830  00109E  A4D8               	btfss	status,2,c
 20831  0010A0  D00A               	goto	l27691
 20832                           
 20833                           ;eusartparser.c: 457:                     package->data.data16--;
 20834  0010A2  0100               	movlb	0	; () banked
 20835  0010A4  EE20 F002          	lfsr	2,2
 20836  0010A8  51E0               	movf	eusartparser@package& (0+255),w,b
 20837  0010AA  26D9               	addwf	fsr2l,f,c
 20838  0010AC  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20839  0010AE  22DA               	addwfc	fsr2h,f,c
 20840  0010B0  06DE               	decf	postinc2,f,c
 20841  0010B2  0E00               	movlw	0
 20842  0010B4  5ADD               	subwfb	postdec2,f,c
 20843  0010B6                     l27691:
 20844  0010B6  0100               	movlb	0	; () banked
 20845  0010B8  2BE8               	incf	eusartparser@i& (0+255),f,b
 20846  0010BA                     l27693:
 20847                           
 20848                           ; BSR set to: 0
 20849  0010BA  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20850  0010BC  5DE8               	subwf	eusartparser@i& (0+255),w,b
 20851  0010BE  A0D8               	btfss	status,0,c
 20852  0010C0  D7E8               	goto	l27687
 20853  0010C2                     u33820:
 20854                           
 20855                           ; BSR set to: 0
 20856                           ;eusartparser.c: 458:                 write_package(*package);
 20857  0010C2  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20858  0010C6  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20859  0010CA  EE00  F011         	lfsr	0,write_package@package
 20860  0010CE  0E06               	movlw	6
 20861  0010D0                     u33831:
 20862  0010D0  CFDB FFEB          	movff	plusw2,plusw0
 20863  0010D4  06E8               	decf	wreg,f,c
 20864  0010D6  E2FC               	bc	u33831
 20865  0010D8  ECB0  F04C         	call	_write_package	;wreg free
 20866  0010DC  D72A               	goto	l27631
 20867  0010DE                     l27701:
 20868                           
 20869                           ; BSR set to: 0
 20870                           ;eusartparser.c: 464:             package->address=0x00;
 20871  0010DE  EE20 F001          	lfsr	2,1
 20872  0010E2  51E0               	movf	eusartparser@package& (0+255),w,b
 20873  0010E4  26D9               	addwf	fsr2l,f,c
 20874  0010E6  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20875  0010E8  22DA               	addwfc	fsr2h,f,c
 20876  0010EA  0E00               	movlw	0
 20877  0010EC  6EDF               	movwf	indf2,c
 20878                           
 20879                           ;eusartparser.c: 465:             package->data.data16=0;
 20880  0010EE  EE20 F002          	lfsr	2,2
 20881  0010F2  51E0               	movf	eusartparser@package& (0+255),w,b
 20882  0010F4  26D9               	addwf	fsr2l,f,c
 20883  0010F6  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20884  0010F8  22DA               	addwfc	fsr2h,f,c
 20885  0010FA  0E00               	movlw	0
 20886  0010FC  6EDE               	movwf	postinc2,c
 20887  0010FE  0E00               	movlw	0
 20888  001100  6EDD               	movwf	postdec2,c
 20889                           
 20890                           ; BSR set to: 0
 20891                           ;eusartparser.c: 466:             for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;i++)
 20892  001102  0E00               	movlw	0
 20893  001104  6FE9               	movwf	eusartparser@i_7381& (0+255),b
 20894  001106  D014               	goto	l27711
 20895  001108                     l27705:
 20896                           
 20897                           ; BSR set to: 0
 20898                           ;eusartparser.c: 467:             if(cmdMemoryIsEmpty(0,i)==1)
 20899  001108  C0E9  F02E         	movff	eusartparser@i_7381,cmdMemoryIsEmpty@position
 20900  00110C  0E00               	movlw	0
 20901  00110E  ECF8  F040         	call	_cmdMemoryIsEmpty
 20902  001112  06E8               	decf	wreg,f,c
 20903  001114  A4D8               	btfss	status,2,c
 20904  001116  D00A               	goto	l27709
 20905                           
 20906                           ;eusartparser.c: 468:                 package->data.data16++;
 20907  001118  0100               	movlb	0	; () banked
 20908  00111A  EE20 F002          	lfsr	2,2
 20909  00111E  51E0               	movf	eusartparser@package& (0+255),w,b
 20910  001120  26D9               	addwf	fsr2l,f,c
 20911  001122  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20912  001124  22DA               	addwfc	fsr2h,f,c
 20913  001126  2ADE               	incf	postinc2,f,c
 20914  001128  0E00               	movlw	0
 20915  00112A  22DD               	addwfc	postdec2,f,c
 20916  00112C                     l27709:
 20917  00112C  0100               	movlb	0	; () banked
 20918  00112E  2BE9               	incf	eusartparser@i_7381& (0+255),f,b
 20919  001130                     l27711:
 20920                           
 20921                           ; BSR set to: 0
 20922  001130  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20923  001132  5DE9               	subwf	eusartparser@i_7381& (0+255),w,b
 20924  001134  B0D8               	btfsc	status,0,c
 20925  001136  D7C5               	goto	u33820
 20926  001138  D7E7               	goto	l27705
 20927  00113A                     l27719:
 20928                           
 20929                           ; BSR set to: 0
 20930                           ;eusartparser.c: 474:             relcounter=0;
 20931  00113A  0E00               	movlw	0
 20932  00113C  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 20933                           
 20934                           ;eusartparser.c: 475:             for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;i++)
 20935  00113E  0E00               	movlw	0
 20936  001140  6FED               	movwf	eusartparser@i_7382& (0+255),b
 20937  001142  D02E               	goto	l27731
 20938  001144                     l27721:
 20939                           
 20940                           ; BSR set to: 0
 20941                           ;eusartparser.c: 476:                 if(cmdMemoryIsEmpty(0,i)==0){
 20942  001144  C0ED  F02E         	movff	eusartparser@i_7382,cmdMemoryIsEmpty@position
 20943  001148  0E00               	movlw	0
 20944  00114A  ECF8  F040         	call	_cmdMemoryIsEmpty
 20945  00114E  0900               	iorlw	0
 20946  001150  A4D8               	btfss	status,2,c
 20947  001152  D024               	goto	l27729
 20948                           
 20949                           ;eusartparser.c: 477:                     package->data.data16=(uint16_t)i;
 20950  001154  0100               	movlb	0	; () banked
 20951  001156  51ED               	movf	eusartparser@i_7382& (0+255),w,b
 20952  001158  6FE2               	movwf	??_eusartparser& (0+255),b
 20953  00115A  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 20954  00115C  EE20 F002          	lfsr	2,2
 20955  001160  51E0               	movf	eusartparser@package& (0+255),w,b
 20956  001162  26D9               	addwf	fsr2l,f,c
 20957  001164  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20958  001166  22DA               	addwfc	fsr2h,f,c
 20959  001168  C0E2  FFDE         	movff	??_eusartparser,postinc2
 20960  00116C  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 20961                           
 20962                           ;eusartparser.c: 478:                     package->address=relcounter;
 20963  001170  EE20 F001          	lfsr	2,1
 20964  001174  51E0               	movf	eusartparser@package& (0+255),w,b
 20965  001176  26D9               	addwf	fsr2l,f,c
 20966  001178  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20967  00117A  22DA               	addwfc	fsr2h,f,c
 20968  00117C  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 20969                           
 20970                           ; BSR set to: 0
 20971                           ;eusartparser.c: 479:                     relcounter++;
 20972  001180  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 20973                           
 20974                           ; BSR set to: 0
 20975                           ;eusartparser.c: 480:                     write_package(*package);
 20976  001182  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20977  001186  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20978  00118A  EE00  F011         	lfsr	0,write_package@package
 20979  00118E  0E06               	movlw	6
 20980  001190                     u33871:
 20981  001190  CFDB FFEB          	movff	plusw2,plusw0
 20982  001194  06E8               	decf	wreg,f,c
 20983  001196  E2FC               	bc	u33871
 20984  001198  ECB0  F04C         	call	_write_package	;wreg free
 20985  00119C                     l27729:
 20986  00119C  0100               	movlb	0	; () banked
 20987  00119E  2BED               	incf	eusartparser@i_7382& (0+255),f,b
 20988  0011A0                     l27731:
 20989                           
 20990                           ; BSR set to: 0
 20991  0011A0  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20992  0011A2  5DED               	subwf	eusartparser@i_7382& (0+255),w,b
 20993  0011A4  B0D8               	btfsc	status,0,c
 20994  0011A6  D6C5               	goto	l27631
 20995  0011A8  D7CD               	goto	l27721
 20996  0011AA                     l27737:
 20997                           
 20998                           ; BSR set to: 0
 20999                           ;eusartparser.c: 486:             relcounter=0;
 21000  0011AA  0E00               	movlw	0
 21001  0011AC  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 21002                           
 21003                           ;eusartparser.c: 487:             for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;i++)
 21004  0011AE  0E00               	movlw	0
 21005  0011B0  6FEE               	movwf	eusartparser@i_7383& (0+255),b
 21006  0011B2  D02E               	goto	l27749
 21007  0011B4                     l27739:
 21008                           
 21009                           ; BSR set to: 0
 21010                           ;eusartparser.c: 488:                 if(cmdMemoryIsEmpty(0,i)==1){
 21011  0011B4  C0EE  F02E         	movff	eusartparser@i_7383,cmdMemoryIsEmpty@position
 21012  0011B8  0E00               	movlw	0
 21013  0011BA  ECF8  F040         	call	_cmdMemoryIsEmpty
 21014  0011BE  06E8               	decf	wreg,f,c
 21015  0011C0  A4D8               	btfss	status,2,c
 21016  0011C2  D024               	goto	l27747
 21017                           
 21018                           ;eusartparser.c: 489:                     package->data.data16=(uint16_t)i;
 21019  0011C4  0100               	movlb	0	; () banked
 21020  0011C6  51EE               	movf	eusartparser@i_7383& (0+255),w,b
 21021  0011C8  6FE2               	movwf	??_eusartparser& (0+255),b
 21022  0011CA  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21023  0011CC  EE20 F002          	lfsr	2,2
 21024  0011D0  51E0               	movf	eusartparser@package& (0+255),w,b
 21025  0011D2  26D9               	addwf	fsr2l,f,c
 21026  0011D4  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21027  0011D6  22DA               	addwfc	fsr2h,f,c
 21028  0011D8  C0E2  FFDE         	movff	??_eusartparser,postinc2
 21029  0011DC  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 21030                           
 21031                           ;eusartparser.c: 490:                     package->address=relcounter;
 21032  0011E0  EE20 F001          	lfsr	2,1
 21033  0011E4  51E0               	movf	eusartparser@package& (0+255),w,b
 21034  0011E6  26D9               	addwf	fsr2l,f,c
 21035  0011E8  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21036  0011EA  22DA               	addwfc	fsr2h,f,c
 21037  0011EC  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 21038                           
 21039                           ; BSR set to: 0
 21040                           ;eusartparser.c: 491:                     relcounter++;
 21041  0011F0  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 21042                           
 21043                           ; BSR set to: 0
 21044                           ;eusartparser.c: 492:                     write_package(*package);
 21045  0011F2  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21046  0011F6  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21047  0011FA  EE00  F011         	lfsr	0,write_package@package
 21048  0011FE  0E06               	movlw	6
 21049  001200                     u33901:
 21050  001200  CFDB FFEB          	movff	plusw2,plusw0
 21051  001204  06E8               	decf	wreg,f,c
 21052  001206  E2FC               	bc	u33901
 21053  001208  ECB0  F04C         	call	_write_package	;wreg free
 21054  00120C                     l27747:
 21055  00120C  0100               	movlb	0	; () banked
 21056  00120E  2BEE               	incf	eusartparser@i_7383& (0+255),f,b
 21057  001210                     l27749:
 21058                           
 21059                           ; BSR set to: 0
 21060  001210  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21061  001212  5DEE               	subwf	eusartparser@i_7383& (0+255),w,b
 21062  001214  B0D8               	btfsc	status,0,c
 21063  001216  D68D               	goto	l27631
 21064  001218  D7CD               	goto	l27739
 21065  00121A                     l27755:
 21066                           
 21067                           ; BSR set to: 0
 21068                           ;eusartparser.c: 498:             done_changes=1;
 21069  00121A  0E01               	movlw	1
 21070  00121C  0101               	movlb	1	; () banked
 21071  00121E  6F8E               	movwf	_done_changes& (0+255),b
 21072                           
 21073                           ;eusartparser.c: 499:             if(programmer_enable){
 21074  001220  0100               	movlb	0	; () banked
 21075  001222  5185               	movf	_programmer_enable& (0+255),w,b
 21076  001224  B4D8               	btfsc	status,2,c
 21077  001226  D6B0               	goto	l27643
 21078                           
 21079                           ; BSR set to: 0
 21080                           ;eusartparser.c: 500:                 if(save_f==0){
 21081  001228  0101               	movlb	1	; () banked
 21082  00122A  518D               	movf	eusartparser@save_f& (0+255),w,b
 21083  00122C  A4D8               	btfss	status,2,c
 21084  00122E  D024               	goto	l27767
 21085  001230                     u33930:
 21086                           
 21087                           ; BSR set to: 1
 21088                           ;eusartparser.c: 501:                     buffer=package->data.data16;
 21089  001230  0100               	movlb	0	; () banked
 21090  001232  EE20 F002          	lfsr	2,2
 21091  001236  51E0               	movf	eusartparser@package& (0+255),w,b
 21092  001238  26D9               	addwf	fsr2l,f,c
 21093  00123A  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21094  00123C  22DA               	addwfc	fsr2h,f,c
 21095  00123E  CFDE F185          	movff	postinc2,eusartparser@buffer
 21096  001242  CFDD F186          	movff	postdec2,eusartparser@buffer+1
 21097                           
 21098                           ; BSR set to: 0
 21099                           ;eusartparser.c: 502:                     confirmpackage(package, 1);
 21100  001246  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 21101  00124A  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 21102  00124E  0E01               	movlw	1
 21103  001250  6E14               	movwf	confirmpackage@confirm^0,c
 21104  001252  EC66  F048         	call	_confirmpackage	;wreg free
 21105                           
 21106                           ;eusartparser.c: 503:                     write_package(*package);
 21107  001256  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21108  00125A  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21109  00125E  EE00  F011         	lfsr	0,write_package@package
 21110  001262  0E06               	movlw	6
 21111  001264                     u33941:
 21112  001264  CFDB FFEB          	movff	plusw2,plusw0
 21113  001268  06E8               	decf	wreg,f,c
 21114  00126A  E2FC               	bc	u33941
 21115  00126C  ECB0  F04C         	call	_write_package	;wreg free
 21116                           
 21117                           ;eusartparser.c: 504:                     save_f=1;
 21118  001270  0E01               	movlw	1
 21119  001272  0101               	movlb	1	; () banked
 21120  001274  6F8D               	movwf	eusartparser@save_f& (0+255),b
 21121                           
 21122                           ;eusartparser.c: 505:                 }
 21123  001276  0012               	return	
 21124  001278                     l27767:
 21125                           
 21126                           ; BSR set to: 1
 21127                           ;eusartparser.c: 507:                     serial=((uint32_t)buffer<<16)+(uint32_t)packag
      +                          e->data.data16;
 21128  001278  0100               	movlb	0	; () banked
 21129  00127A  EE20 F002          	lfsr	2,2
 21130  00127E  51E0               	movf	eusartparser@package& (0+255),w,b
 21131  001280  26D9               	addwf	fsr2l,f,c
 21132  001282  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21133  001284  22DA               	addwfc	fsr2h,f,c
 21134  001286  CFDE F0E2          	movff	postinc2,??_eusartparser
 21135  00128A  CFDD F0E3          	movff	postdec2,??_eusartparser+1
 21136  00128E  0101               	movlb	1	; () banked
 21137  001290  5185               	movf	eusartparser@buffer& (0+255),w,b
 21138  001292  0100               	movlb	0	; () banked
 21139  001294  6FE4               	movwf	(??_eusartparser+2)& (0+255),b
 21140  001296  0101               	movlb	1	; () banked
 21141  001298  5186               	movf	(eusartparser@buffer+1)& (0+255),w,b
 21142  00129A  0100               	movlb	0	; () banked
 21143  00129C  6FE5               	movwf	(??_eusartparser+3)& (0+255),b
 21144  00129E  6BE6               	clrf	(??_eusartparser+4)& (0+255),b
 21145  0012A0  6BE7               	clrf	(??_eusartparser+5)& (0+255),b
 21146  0012A2  C0E5  F0E7         	movff	??_eusartparser+3,??_eusartparser+5
 21147  0012A6  C0E4  F0E6         	movff	??_eusartparser+2,??_eusartparser+4
 21148  0012AA  6BE5               	clrf	(??_eusartparser+3)& (0+255),b
 21149  0012AC  6BE4               	clrf	(??_eusartparser+2)& (0+255),b
 21150  0012AE  51E2               	movf	??_eusartparser& (0+255),w,b
 21151  0012B0  25E4               	addwf	(??_eusartparser+2)& (0+255),w,b
 21152  0012B2  6FF8               	movwf	eusartparser@serial& (0+255),b
 21153  0012B4  51E3               	movf	(??_eusartparser+1)& (0+255),w,b
 21154  0012B6  21E5               	addwfc	(??_eusartparser+3)& (0+255),w,b
 21155  0012B8  6FF9               	movwf	(eusartparser@serial+1)& (0+255),b
 21156  0012BA  0E00               	movlw	0
 21157  0012BC  21E6               	addwfc	(??_eusartparser+4)& (0+255),w,b
 21158  0012BE  6FFA               	movwf	(eusartparser@serial+2)& (0+255),b
 21159  0012C0  0E00               	movlw	0
 21160  0012C2  21E7               	addwfc	(??_eusartparser+5)& (0+255),w,b
 21161  0012C4  6FFB               	movwf	(eusartparser@serial+3)& (0+255),b
 21162                           
 21163                           ; BSR set to: 0
 21164                           ;eusartparser.c: 508:                     if(validateRemoteSerialNumber(serial, NO, &pos
      +                          )==NoCMD){
 21165  0012C6  C0F8  F02E         	movff	eusartparser@serial,validateRemoteSerialNumber@serial
 21166  0012CA  C0F9  F02F         	movff	eusartparser@serial+1,validateRemoteSerialNumber@serial+1
 21167  0012CE  C0FA  F030         	movff	eusartparser@serial+2,validateRemoteSerialNumber@serial+2
 21168  0012D2  C0FB  F031         	movff	eusartparser@serial+3,validateRemoteSerialNumber@serial+3
 21169  0012D6  0E00               	movlw	0
 21170  0012D8  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 21171  0012DA  0EEC               	movlw	low eusartparser@pos
 21172  0012DC  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 21173  0012DE  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
 21174  0012E0  EC26  F031         	call	_validateRemoteSerialNumber	;wreg free
 21175  0012E4  0900               	iorlw	0
 21176  0012E6  A4D8               	btfss	status,2,c
 21177  0012E8  D04D               	goto	u34000
 21178                           
 21179                           ; BSR set to: 0
 21180                           ;eusartparser.c: 509:                         for(uint8_t i=0;;i++)
 21181  0012EA  0E00               	movlw	0
 21182  0012EC  6FF1               	movwf	eusartparser@i_7384& (0+255),b
 21183  0012EE                     l27773:
 21184                           
 21185                           ; BSR set to: 0
 21186                           ;eusartparser.c: 510:                             if(cmdMemoryIsEmpty(0,i)==1&&package->
      +                          address==0){
 21187  0012EE  C0F1  F02E         	movff	eusartparser@i_7384,cmdMemoryIsEmpty@position
 21188  0012F2  0E00               	movlw	0
 21189  0012F4  ECF8  F040         	call	_cmdMemoryIsEmpty
 21190  0012F8  06E8               	decf	wreg,f,c
 21191  0012FA  A4D8               	btfss	status,2,c
 21192  0012FC  D02D               	goto	l27785
 21193  0012FE  0100               	movlb	0	; () banked
 21194  001300  EE20 F001          	lfsr	2,1
 21195  001304  51E0               	movf	eusartparser@package& (0+255),w,b
 21196  001306  26D9               	addwf	fsr2l,f,c
 21197  001308  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21198  00130A  22DA               	addwfc	fsr2h,f,c
 21199  00130C  50DF               	movf	indf2,w,c
 21200  00130E  A4D8               	btfss	status,2,c
 21201  001310  D023               	goto	l27785
 21202                           
 21203                           ; BSR set to: 0
 21204                           ;eusartparser.c: 511:                                 saveNewSerial(0,serial,i);
 21205  001312  C0F8  F0D8         	movff	eusartparser@serial,saveNewSerial@tempSerial
 21206  001316  C0F9  F0D9         	movff	eusartparser@serial+1,saveNewSerial@tempSerial+1
 21207  00131A  C0FA  F0DA         	movff	eusartparser@serial+2,saveNewSerial@tempSerial+2
 21208  00131E  C0FB  F0DB         	movff	eusartparser@serial+3,saveNewSerial@tempSerial+3
 21209  001322  C0F1  F0DC         	movff	eusartparser@i_7384,saveNewSerial@position
 21210  001326  0E00               	movlw	0
 21211  001328  EC01  F046         	call	_saveNewSerial
 21212  00132C                     l27779:
 21213                           
 21214                           ;eusartparser.c: 512:                                 confirmpackage(package, 1);
 21215  00132C  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 21216  001330  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 21217  001334  0E01               	movlw	1
 21218  001336  6E14               	movwf	confirmpackage@confirm^0,c
 21219  001338  EC66  F048         	call	_confirmpackage	;wreg free
 21220  00133C                     l27781:
 21221                           
 21222                           ;eusartparser.c: 513:                                 write_package(*package);
 21223  00133C  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21224  001340  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21225  001344  EE00  F011         	lfsr	0,write_package@package
 21226  001348  0E06               	movlw	6
 21227  00134A                     u33981:
 21228  00134A  CFDB FFEB          	movff	plusw2,plusw0
 21229  00134E  06E8               	decf	wreg,f,c
 21230  001350  E2FC               	bc	u33981
 21231  001352  ECB0  F04C         	call	_write_package	;wreg free
 21232                           
 21233                           ;eusartparser.c: 514:                                 break;
 21234  001356  D021               	goto	l27801
 21235  001358                     l27785:
 21236  001358  C0F1  F02E         	movff	eusartparser@i_7384,cmdMemoryIsEmpty@position
 21237  00135C  0E00               	movlw	0
 21238  00135E  ECF8  F040         	call	_cmdMemoryIsEmpty
 21239  001362  06E8               	decf	wreg,f,c
 21240  001364  A4D8               	btfss	status,2,c
 21241  001366  D009               	goto	l27789
 21242                           
 21243                           ;eusartparser.c: 517:                                 package->address--;
 21244  001368  0100               	movlb	0	; () banked
 21245  00136A  EE20 F001          	lfsr	2,1
 21246  00136E  51E0               	movf	eusartparser@package& (0+255),w,b
 21247  001370  26D9               	addwf	fsr2l,f,c
 21248  001372  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21249  001374  22DA               	addwfc	fsr2h,f,c
 21250  001376  06DF               	decf	indf2,f,c
 21251                           
 21252                           ;eusartparser.c: 518:                             }
 21253  001378  D00E               	goto	l27795
 21254  00137A                     l27789:
 21255  00137A  0100               	movlb	0	; () banked
 21256  00137C  51F1               	movf	eusartparser@i_7384& (0+255),w,b
 21257  00137E  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21258  001380  A4D8               	btfss	status,2,c
 21259  001382  D009               	goto	l27795
 21260  001384                     u34000:
 21261                           
 21262                           ; BSR set to: 0
 21263                           ;eusartparser.c: 520:                                 confirmpackage(package, 0);
 21264  001384  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 21265  001388  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 21266  00138C  0E00               	movlw	0
 21267  00138E  6E14               	movwf	confirmpackage@confirm^0,c
 21268  001390  EC66  F048         	call	_confirmpackage	;wreg free
 21269  001394  D7D3               	goto	l27781
 21270  001396                     l27795:
 21271                           
 21272                           ; BSR set to: 0
 21273  001396  2BF1               	incf	eusartparser@i_7384& (0+255),f,b
 21274  001398  D7AA               	goto	l27773
 21275  00139A                     l27801:
 21276                           
 21277                           ;eusartparser.c: 529:                     save_f=0;
 21278  00139A  0E00               	movlw	0
 21279  00139C  0101               	movlb	1	; () banked
 21280  00139E  6F8D               	movwf	eusartparser@save_f& (0+255),b
 21281  0013A0  0012               	return	
 21282  0013A2                     l27807:
 21283                           
 21284                           ; BSR set to: 0
 21285                           ;eusartparser.c: 538:             done_changes=1;
 21286  0013A2  0E01               	movlw	1
 21287  0013A4  0101               	movlb	1	; () banked
 21288  0013A6  6F8E               	movwf	_done_changes& (0+255),b
 21289                           
 21290                           ;eusartparser.c: 539:             if(programmer_enable){
 21291  0013A8  0100               	movlb	0	; () banked
 21292  0013AA  5185               	movf	_programmer_enable& (0+255),w,b
 21293  0013AC  B4D8               	btfsc	status,2,c
 21294  0013AE  D5EC               	goto	l27643
 21295                           
 21296                           ; BSR set to: 0
 21297                           ;eusartparser.c: 540:                 for(uint8_t i=0;;i++)
 21298  0013B0  0E00               	movlw	0
 21299  0013B2  6FF2               	movwf	eusartparser@i_7385& (0+255),b
 21300  0013B4                     l27811:
 21301                           
 21302                           ; BSR set to: 0
 21303                           ;eusartparser.c: 541:                     if(cmdMemoryIsEmpty(0,i)==0&&package->address=
      +                          =0){
 21304  0013B4  C0F2  F02E         	movff	eusartparser@i_7385,cmdMemoryIsEmpty@position
 21305  0013B8  0E00               	movlw	0
 21306  0013BA  ECF8  F040         	call	_cmdMemoryIsEmpty
 21307  0013BE  0900               	iorlw	0
 21308  0013C0  A4D8               	btfss	status,2,c
 21309  0013C2  D010               	goto	l27825
 21310  0013C4  0100               	movlb	0	; () banked
 21311  0013C6  EE20 F001          	lfsr	2,1
 21312  0013CA  51E0               	movf	eusartparser@package& (0+255),w,b
 21313  0013CC  26D9               	addwf	fsr2l,f,c
 21314  0013CE  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21315  0013D0  22DA               	addwfc	fsr2h,f,c
 21316  0013D2  50DF               	movf	indf2,w,c
 21317  0013D4  A4D8               	btfss	status,2,c
 21318  0013D6  D006               	goto	l27825
 21319                           
 21320                           ; BSR set to: 0
 21321                           ;eusartparser.c: 542:                         RemoveSerial(0, i);
 21322  0013D8  C0F2  F03A         	movff	eusartparser@i_7385,RemoveSerial@position
 21323  0013DC  0E00               	movlw	0
 21324  0013DE  ECA8  F043         	call	_RemoveSerial
 21325  0013E2  D7A4               	goto	l27779
 21326  0013E4                     l27825:
 21327  0013E4  C0F2  F02E         	movff	eusartparser@i_7385,cmdMemoryIsEmpty@position
 21328  0013E8  0E00               	movlw	0
 21329  0013EA  ECF8  F040         	call	_cmdMemoryIsEmpty
 21330  0013EE  0900               	iorlw	0
 21331  0013F0  A4D8               	btfss	status,2,c
 21332  0013F2  D009               	goto	l27829
 21333                           
 21334                           ;eusartparser.c: 549:                         package->address--;
 21335  0013F4  0100               	movlb	0	; () banked
 21336  0013F6  EE20 F001          	lfsr	2,1
 21337  0013FA  51E0               	movf	eusartparser@package& (0+255),w,b
 21338  0013FC  26D9               	addwf	fsr2l,f,c
 21339  0013FE  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21340  001400  22DA               	addwfc	fsr2h,f,c
 21341  001402  06DF               	decf	indf2,f,c
 21342                           
 21343                           ;eusartparser.c: 550:                     }
 21344  001404  D005               	goto	l27837
 21345  001406                     l27829:
 21346  001406  0100               	movlb	0	; () banked
 21347  001408  51F2               	movf	eusartparser@i_7385& (0+255),w,b
 21348  00140A  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21349  00140C  B4D8               	btfsc	status,2,c
 21350  00140E  D7BA               	goto	u34000
 21351  001410                     l27837:
 21352                           
 21353                           ; BSR set to: 0
 21354  001410  2BF2               	incf	eusartparser@i_7385& (0+255),f,b
 21355  001412  D7D0               	goto	l27811
 21356  001414                     l27843:
 21357                           
 21358                           ; BSR set to: 0
 21359                           ;eusartparser.c: 564:             for(uint8_t i=0;;i++)
 21360  001414  0E00               	movlw	0
 21361  001416  6FF3               	movwf	eusartparser@i_7386& (0+255),b
 21362  001418                     l27845:
 21363                           
 21364                           ; BSR set to: 0
 21365                           ;eusartparser.c: 565:                 if(cmdMemoryIsEmpty(0,i)==0&&package->address==0){
 21366  001418  C0F3  F02E         	movff	eusartparser@i_7386,cmdMemoryIsEmpty@position
 21367  00141C  0E00               	movlw	0
 21368  00141E  ECF8  F040         	call	_cmdMemoryIsEmpty
 21369  001422  0900               	iorlw	0
 21370  001424  A4D8               	btfss	status,2,c
 21371  001426  D02A               	goto	l27865
 21372  001428  0100               	movlb	0	; () banked
 21373  00142A  EE20 F001          	lfsr	2,1
 21374  00142E  51E0               	movf	eusartparser@package& (0+255),w,b
 21375  001430  26D9               	addwf	fsr2l,f,c
 21376  001432  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21377  001434  22DA               	addwfc	fsr2h,f,c
 21378  001436  50DF               	movf	indf2,w,c
 21379  001438  A4D8               	btfss	status,2,c
 21380  00143A  D020               	goto	l27865
 21381                           
 21382                           ; BSR set to: 0
 21383                           ;eusartparser.c: 566:                     ReadSerial(0, &serial, i);
 21384  00143C  0EF8               	movlw	low eusartparser@serial
 21385  00143E  6E2E               	movwf	ReadSerial@tempSerial^0,c
 21386  001440  C0F3  F02F         	movff	eusartparser@i_7386,ReadSerial@position
 21387  001444  0E00               	movlw	0
 21388  001446  EC39  F046         	call	_ReadSerial
 21389                           
 21390                           ;eusartparser.c: 567:                     package->data.data16=(uint16_t)serial;
 21391  00144A  0100               	movlb	0	; () banked
 21392  00144C  EE20 F002          	lfsr	2,2
 21393  001450  51E0               	movf	eusartparser@package& (0+255),w,b
 21394  001452  26D9               	addwf	fsr2l,f,c
 21395  001454  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21396  001456  22DA               	addwfc	fsr2h,f,c
 21397  001458  C0F8  FFDE         	movff	eusartparser@serial,postinc2
 21398  00145C  C0F9  FFDD         	movff	eusartparser@serial+1,postdec2
 21399                           
 21400                           ; BSR set to: 0
 21401                           ;eusartparser.c: 568:                     write_package(*package);
 21402  001460  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21403  001464  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21404  001468  EE00  F011         	lfsr	0,write_package@package
 21405  00146C  0E06               	movlw	6
 21406  00146E                     u34081:
 21407  00146E  CFDB FFEB          	movff	plusw2,plusw0
 21408  001472  06E8               	decf	wreg,f,c
 21409  001474  E2FC               	bc	u34081
 21410  001476  ECB0  F04C         	call	_write_package	;wreg free
 21411  00147A  D1D1               	goto	l28049
 21412  00147C                     l27865:
 21413  00147C  C0F3  F02E         	movff	eusartparser@i_7386,cmdMemoryIsEmpty@position
 21414  001480  0E00               	movlw	0
 21415  001482  ECF8  F040         	call	_cmdMemoryIsEmpty
 21416  001486  0900               	iorlw	0
 21417  001488  A4D8               	btfss	status,2,c
 21418  00148A  D009               	goto	l27869
 21419                           
 21420                           ;eusartparser.c: 576:                     package->address--;
 21421  00148C  0100               	movlb	0	; () banked
 21422  00148E  EE20 F001          	lfsr	2,1
 21423  001492  51E0               	movf	eusartparser@package& (0+255),w,b
 21424  001494  26D9               	addwf	fsr2l,f,c
 21425  001496  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21426  001498  22DA               	addwfc	fsr2h,f,c
 21427  00149A  06DF               	decf	indf2,f,c
 21428                           
 21429                           ;eusartparser.c: 577:                 }
 21430  00149C  D005               	goto	l27875
 21431  00149E                     l27869:
 21432  00149E  0100               	movlb	0	; () banked
 21433  0014A0  51F3               	movf	eusartparser@i_7386& (0+255),w,b
 21434  0014A2  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21435  0014A4  B4D8               	btfsc	status,2,c
 21436  0014A6  D570               	goto	l27643
 21437  0014A8                     l27875:
 21438                           
 21439                           ; BSR set to: 0
 21440  0014A8  2BF3               	incf	eusartparser@i_7386& (0+255),f,b
 21441  0014AA  D7B6               	goto	l27845
 21442  0014AC                     l27877:
 21443                           
 21444                           ; BSR set to: 0
 21445                           ;eusartparser.c: 585:                 package->address=0x00;
 21446  0014AC  EE20 F001          	lfsr	2,1
 21447  0014B0  51E0               	movf	eusartparser@package& (0+255),w,b
 21448  0014B2  26D9               	addwf	fsr2l,f,c
 21449  0014B4  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21450  0014B6  22DA               	addwfc	fsr2h,f,c
 21451  0014B8  0E00               	movlw	0
 21452  0014BA  6EDF               	movwf	indf2,c
 21453                           
 21454                           ;eusartparser.c: 586:                 package->data.data16=var_sys_NVM.positionRemotesWa
      +                          lk;
 21455  0014BC  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21456  0014BE  6FE2               	movwf	??_eusartparser& (0+255),b
 21457  0014C0  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21458  0014C2  EE20 F002          	lfsr	2,2
 21459  0014C6  51E0               	movf	eusartparser@package& (0+255),w,b
 21460  0014C8  26D9               	addwf	fsr2l,f,c
 21461  0014CA  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21462  0014CC  22DA               	addwfc	fsr2h,f,c
 21463  0014CE  C0E2  FFDE         	movff	??_eusartparser,postinc2
 21464  0014D2  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 21465                           
 21466                           ; BSR set to: 0
 21467                           ;eusartparser.c: 587:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesWalk;
      +                          i++)
 21468  0014D6  0E00               	movlw	0
 21469  0014D8  6FEA               	movwf	eusartparser@i_7388& (0+255),b
 21470  0014DA  D014               	goto	l27887
 21471  0014DC                     l27881:
 21472                           
 21473                           ; BSR set to: 0
 21474                           ;eusartparser.c: 588:                 if(cmdMemoryIsEmpty(1,i)==1)
 21475  0014DC  C0EA  F02E         	movff	eusartparser@i_7388,cmdMemoryIsEmpty@position
 21476  0014E0  0E01               	movlw	1
 21477  0014E2  ECF8  F040         	call	_cmdMemoryIsEmpty
 21478  0014E6  06E8               	decf	wreg,f,c
 21479  0014E8  A4D8               	btfss	status,2,c
 21480  0014EA  D00A               	goto	l27885
 21481                           
 21482                           ;eusartparser.c: 589:                     package->data.data16--;
 21483  0014EC  0100               	movlb	0	; () banked
 21484  0014EE  EE20 F002          	lfsr	2,2
 21485  0014F2  51E0               	movf	eusartparser@package& (0+255),w,b
 21486  0014F4  26D9               	addwf	fsr2l,f,c
 21487  0014F6  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21488  0014F8  22DA               	addwfc	fsr2h,f,c
 21489  0014FA  06DE               	decf	postinc2,f,c
 21490  0014FC  0E00               	movlw	0
 21491  0014FE  5ADD               	subwfb	postdec2,f,c
 21492  001500                     l27885:
 21493  001500  0100               	movlb	0	; () banked
 21494  001502  2BEA               	incf	eusartparser@i_7388& (0+255),f,b
 21495  001504                     l27887:
 21496                           
 21497                           ; BSR set to: 0
 21498  001504  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21499  001506  5DEA               	subwf	eusartparser@i_7388& (0+255),w,b
 21500  001508  B0D8               	btfsc	status,0,c
 21501  00150A  D5DB               	goto	u33820
 21502  00150C  D7E7               	goto	l27881
 21503  00150E                     l27895:
 21504                           
 21505                           ; BSR set to: 0
 21506                           ;eusartparser.c: 596:             package->address=0x00;
 21507  00150E  EE20 F001          	lfsr	2,1
 21508  001512  51E0               	movf	eusartparser@package& (0+255),w,b
 21509  001514  26D9               	addwf	fsr2l,f,c
 21510  001516  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21511  001518  22DA               	addwfc	fsr2h,f,c
 21512  00151A  0E00               	movlw	0
 21513  00151C  6EDF               	movwf	indf2,c
 21514                           
 21515                           ;eusartparser.c: 597:             package->data.data16=0;
 21516  00151E  EE20 F002          	lfsr	2,2
 21517  001522  51E0               	movf	eusartparser@package& (0+255),w,b
 21518  001524  26D9               	addwf	fsr2l,f,c
 21519  001526  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21520  001528  22DA               	addwfc	fsr2h,f,c
 21521  00152A  0E00               	movlw	0
 21522  00152C  6EDE               	movwf	postinc2,c
 21523  00152E  0E00               	movlw	0
 21524  001530  6EDD               	movwf	postdec2,c
 21525                           
 21526                           ; BSR set to: 0
 21527                           ;eusartparser.c: 598:             for(uint8_t i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 21528  001532  0E00               	movlw	0
 21529  001534  6FEB               	movwf	eusartparser@i_7389& (0+255),b
 21530  001536  D014               	goto	l27905
 21531  001538                     l27899:
 21532                           
 21533                           ; BSR set to: 0
 21534                           ;eusartparser.c: 599:             if(cmdMemoryIsEmpty(1,i)==1)
 21535  001538  C0EB  F02E         	movff	eusartparser@i_7389,cmdMemoryIsEmpty@position
 21536  00153C  0E01               	movlw	1
 21537  00153E  ECF8  F040         	call	_cmdMemoryIsEmpty
 21538  001542  06E8               	decf	wreg,f,c
 21539  001544  A4D8               	btfss	status,2,c
 21540  001546  D00A               	goto	l27903
 21541                           
 21542                           ;eusartparser.c: 600:                 package->data.data16++;
 21543  001548  0100               	movlb	0	; () banked
 21544  00154A  EE20 F002          	lfsr	2,2
 21545  00154E  51E0               	movf	eusartparser@package& (0+255),w,b
 21546  001550  26D9               	addwf	fsr2l,f,c
 21547  001552  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21548  001554  22DA               	addwfc	fsr2h,f,c
 21549  001556  2ADE               	incf	postinc2,f,c
 21550  001558  0E00               	movlw	0
 21551  00155A  22DD               	addwfc	postdec2,f,c
 21552  00155C                     l27903:
 21553  00155C  0100               	movlb	0	; () banked
 21554  00155E  2BEB               	incf	eusartparser@i_7389& (0+255),f,b
 21555  001560                     l27905:
 21556                           
 21557                           ; BSR set to: 0
 21558  001560  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21559  001562  5DEB               	subwf	eusartparser@i_7389& (0+255),w,b
 21560  001564  B0D8               	btfsc	status,0,c
 21561  001566  D5AD               	goto	u33820
 21562  001568  D7E7               	goto	l27899
 21563  00156A                     l27913:
 21564                           
 21565                           ; BSR set to: 0
 21566                           ;eusartparser.c: 606:             relcounter=0;
 21567  00156A  0E00               	movlw	0
 21568  00156C  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 21569                           
 21570                           ;eusartparser.c: 607:             for(uint8_t i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 21571  00156E  0E00               	movlw	0
 21572  001570  6FEF               	movwf	eusartparser@i_7390& (0+255),b
 21573  001572  D02E               	goto	l27925
 21574  001574                     l27915:
 21575                           
 21576                           ; BSR set to: 0
 21577                           ;eusartparser.c: 608:                 if(cmdMemoryIsEmpty(1,i)==0){
 21578  001574  C0EF  F02E         	movff	eusartparser@i_7390,cmdMemoryIsEmpty@position
 21579  001578  0E01               	movlw	1
 21580  00157A  ECF8  F040         	call	_cmdMemoryIsEmpty
 21581  00157E  0900               	iorlw	0
 21582  001580  A4D8               	btfss	status,2,c
 21583  001582  D024               	goto	l27923
 21584                           
 21585                           ;eusartparser.c: 609:                     package->data.data16=(uint16_t)i;
 21586  001584  0100               	movlb	0	; () banked
 21587  001586  51EF               	movf	eusartparser@i_7390& (0+255),w,b
 21588  001588  6FE2               	movwf	??_eusartparser& (0+255),b
 21589  00158A  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21590  00158C  EE20 F002          	lfsr	2,2
 21591  001590  51E0               	movf	eusartparser@package& (0+255),w,b
 21592  001592  26D9               	addwf	fsr2l,f,c
 21593  001594  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21594  001596  22DA               	addwfc	fsr2h,f,c
 21595  001598  C0E2  FFDE         	movff	??_eusartparser,postinc2
 21596  00159C  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 21597                           
 21598                           ;eusartparser.c: 610:                     package->address=relcounter;
 21599  0015A0  EE20 F001          	lfsr	2,1
 21600  0015A4  51E0               	movf	eusartparser@package& (0+255),w,b
 21601  0015A6  26D9               	addwf	fsr2l,f,c
 21602  0015A8  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21603  0015AA  22DA               	addwfc	fsr2h,f,c
 21604  0015AC  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 21605                           
 21606                           ; BSR set to: 0
 21607                           ;eusartparser.c: 611:                     relcounter++;
 21608  0015B0  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 21609                           
 21610                           ; BSR set to: 0
 21611                           ;eusartparser.c: 612:                     write_package(*package);
 21612  0015B2  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21613  0015B6  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21614  0015BA  EE00  F011         	lfsr	0,write_package@package
 21615  0015BE  0E06               	movlw	6
 21616  0015C0                     u34161:
 21617  0015C0  CFDB FFEB          	movff	plusw2,plusw0
 21618  0015C4  06E8               	decf	wreg,f,c
 21619  0015C6  E2FC               	bc	u34161
 21620  0015C8  ECB0  F04C         	call	_write_package	;wreg free
 21621  0015CC                     l27923:
 21622  0015CC  0100               	movlb	0	; () banked
 21623  0015CE  2BEF               	incf	eusartparser@i_7390& (0+255),f,b
 21624  0015D0                     l27925:
 21625                           
 21626                           ; BSR set to: 0
 21627  0015D0  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21628  0015D2  5DEF               	subwf	eusartparser@i_7390& (0+255),w,b
 21629  0015D4  B0D8               	btfsc	status,0,c
 21630  0015D6  D4AD               	goto	l27631
 21631  0015D8  D7CD               	goto	l27915
 21632  0015DA                     l27931:
 21633                           
 21634                           ; BSR set to: 0
 21635                           ;eusartparser.c: 618:             relcounter=0;
 21636  0015DA  0E00               	movlw	0
 21637  0015DC  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 21638                           
 21639                           ;eusartparser.c: 619:             for(uint8_t i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 21640  0015DE  0E00               	movlw	0
 21641  0015E0  6FF0               	movwf	eusartparser@i_7391& (0+255),b
 21642  0015E2  D02E               	goto	l27943
 21643  0015E4                     l27933:
 21644                           
 21645                           ; BSR set to: 0
 21646                           ;eusartparser.c: 620:                 if(cmdMemoryIsEmpty(1,i)==1){
 21647  0015E4  C0F0  F02E         	movff	eusartparser@i_7391,cmdMemoryIsEmpty@position
 21648  0015E8  0E01               	movlw	1
 21649  0015EA  ECF8  F040         	call	_cmdMemoryIsEmpty
 21650  0015EE  06E8               	decf	wreg,f,c
 21651  0015F0  A4D8               	btfss	status,2,c
 21652  0015F2  D024               	goto	l27941
 21653                           
 21654                           ;eusartparser.c: 621:                     package->data.data16=(uint16_t)i;
 21655  0015F4  0100               	movlb	0	; () banked
 21656  0015F6  51F0               	movf	eusartparser@i_7391& (0+255),w,b
 21657  0015F8  6FE2               	movwf	??_eusartparser& (0+255),b
 21658  0015FA  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21659  0015FC  EE20 F002          	lfsr	2,2
 21660  001600  51E0               	movf	eusartparser@package& (0+255),w,b
 21661  001602  26D9               	addwf	fsr2l,f,c
 21662  001604  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21663  001606  22DA               	addwfc	fsr2h,f,c
 21664  001608  C0E2  FFDE         	movff	??_eusartparser,postinc2
 21665  00160C  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 21666                           
 21667                           ;eusartparser.c: 622:                     package->address=relcounter;
 21668  001610  EE20 F001          	lfsr	2,1
 21669  001614  51E0               	movf	eusartparser@package& (0+255),w,b
 21670  001616  26D9               	addwf	fsr2l,f,c
 21671  001618  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21672  00161A  22DA               	addwfc	fsr2h,f,c
 21673  00161C  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 21674                           
 21675                           ; BSR set to: 0
 21676                           ;eusartparser.c: 623:                     relcounter++;
 21677  001620  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 21678                           
 21679                           ; BSR set to: 0
 21680                           ;eusartparser.c: 624:                     write_package(*package);
 21681  001622  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21682  001626  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21683  00162A  EE00  F011         	lfsr	0,write_package@package
 21684  00162E  0E06               	movlw	6
 21685  001630                     u34191:
 21686  001630  CFDB FFEB          	movff	plusw2,plusw0
 21687  001634  06E8               	decf	wreg,f,c
 21688  001636  E2FC               	bc	u34191
 21689  001638  ECB0  F04C         	call	_write_package	;wreg free
 21690  00163C                     l27941:
 21691  00163C  0100               	movlb	0	; () banked
 21692  00163E  2BF0               	incf	eusartparser@i_7391& (0+255),f,b
 21693  001640                     l27943:
 21694                           
 21695                           ; BSR set to: 0
 21696  001640  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21697  001642  5DF0               	subwf	eusartparser@i_7391& (0+255),w,b
 21698  001644  B0D8               	btfsc	status,0,c
 21699  001646  D475               	goto	l27631
 21700  001648  D7CD               	goto	l27933
 21701  00164A                     l27949:
 21702                           
 21703                           ; BSR set to: 0
 21704                           ;eusartparser.c: 630:             done_changes=1;
 21705  00164A  0E01               	movlw	1
 21706  00164C  0101               	movlb	1	; () banked
 21707  00164E  6F8E               	movwf	_done_changes& (0+255),b
 21708                           
 21709                           ;eusartparser.c: 631:             if(programmer_enable){
 21710  001650  0100               	movlb	0	; () banked
 21711  001652  5185               	movf	_programmer_enable& (0+255),w,b
 21712  001654  B4D8               	btfsc	status,2,c
 21713  001656  D498               	goto	l27643
 21714                           
 21715                           ; BSR set to: 0
 21716                           ;eusartparser.c: 632:                 if(save_f==0){
 21717  001658  0101               	movlb	1	; () banked
 21718  00165A  518D               	movf	eusartparser@save_f& (0+255),w,b
 21719  00165C  B4D8               	btfsc	status,2,c
 21720  00165E  D5E8               	goto	u33930
 21721                           
 21722                           ; BSR set to: 1
 21723                           ;eusartparser.c: 639:                     serial=((uint32_t)buffer<<16)+(uint32_t)packag
      +                          e->data.data16;
 21724                           
 21725                           ; BSR set to: 1
 21726                           ;eusartparser.c: 633:                     buffer=package->data.data16;
 21727  001660  0100               	movlb	0	; () banked
 21728  001662  EE20 F002          	lfsr	2,2
 21729  001666  51E0               	movf	eusartparser@package& (0+255),w,b
 21730  001668  26D9               	addwf	fsr2l,f,c
 21731  00166A  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21732  00166C  22DA               	addwfc	fsr2h,f,c
 21733  00166E  CFDE F0E2          	movff	postinc2,??_eusartparser
 21734  001672  CFDD F0E3          	movff	postdec2,??_eusartparser+1
 21735  001676  0101               	movlb	1	; () banked
 21736  001678  5185               	movf	eusartparser@buffer& (0+255),w,b
 21737  00167A  0100               	movlb	0	; () banked
 21738  00167C  6FE4               	movwf	(??_eusartparser+2)& (0+255),b
 21739  00167E  0101               	movlb	1	; () banked
 21740  001680  5186               	movf	(eusartparser@buffer+1)& (0+255),w,b
 21741  001682  0100               	movlb	0	; () banked
 21742  001684  6FE5               	movwf	(??_eusartparser+3)& (0+255),b
 21743  001686  6BE6               	clrf	(??_eusartparser+4)& (0+255),b
 21744  001688  6BE7               	clrf	(??_eusartparser+5)& (0+255),b
 21745  00168A  C0E5  F0E7         	movff	??_eusartparser+3,??_eusartparser+5
 21746  00168E  C0E4  F0E6         	movff	??_eusartparser+2,??_eusartparser+4
 21747  001692  6BE5               	clrf	(??_eusartparser+3)& (0+255),b
 21748  001694  6BE4               	clrf	(??_eusartparser+2)& (0+255),b
 21749  001696  51E2               	movf	??_eusartparser& (0+255),w,b
 21750  001698  25E4               	addwf	(??_eusartparser+2)& (0+255),w,b
 21751  00169A  6FF8               	movwf	eusartparser@serial& (0+255),b
 21752  00169C  51E3               	movf	(??_eusartparser+1)& (0+255),w,b
 21753  00169E  21E5               	addwfc	(??_eusartparser+3)& (0+255),w,b
 21754  0016A0  6FF9               	movwf	(eusartparser@serial+1)& (0+255),b
 21755  0016A2  0E00               	movlw	0
 21756  0016A4  21E6               	addwfc	(??_eusartparser+4)& (0+255),w,b
 21757  0016A6  6FFA               	movwf	(eusartparser@serial+2)& (0+255),b
 21758  0016A8  0E00               	movlw	0
 21759  0016AA  21E7               	addwfc	(??_eusartparser+5)& (0+255),w,b
 21760  0016AC  6FFB               	movwf	(eusartparser@serial+3)& (0+255),b
 21761                           
 21762                           ; BSR set to: 0
 21763                           ;eusartparser.c: 640:                     if(validateRemoteSerialNumber(serial, NO, &pos
      +                          )==NoCMD){
 21764  0016AE  C0F8  F02E         	movff	eusartparser@serial,validateRemoteSerialNumber@serial
 21765  0016B2  C0F9  F02F         	movff	eusartparser@serial+1,validateRemoteSerialNumber@serial+1
 21766  0016B6  C0FA  F030         	movff	eusartparser@serial+2,validateRemoteSerialNumber@serial+2
 21767  0016BA  C0FB  F031         	movff	eusartparser@serial+3,validateRemoteSerialNumber@serial+3
 21768  0016BE  0E00               	movlw	0
 21769  0016C0  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 21770  0016C2  0EEC               	movlw	low eusartparser@pos
 21771  0016C4  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 21772  0016C6  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
 21773  0016C8  EC26  F031         	call	_validateRemoteSerialNumber	;wreg free
 21774  0016CC  0900               	iorlw	0
 21775  0016CE  A4D8               	btfss	status,2,c
 21776  0016D0  D659               	goto	u34000
 21777                           
 21778                           ; BSR set to: 0
 21779                           ;eusartparser.c: 641:                         for(uint8_t i=0;;i++)
 21780  0016D2  0E00               	movlw	0
 21781  0016D4  6FF4               	movwf	eusartparser@i_7392& (0+255),b
 21782  0016D6                     l27967:
 21783                           
 21784                           ; BSR set to: 0
 21785                           ;eusartparser.c: 642:                             if(cmdMemoryIsEmpty(1,i)==1&&package->
      +                          address==0){
 21786  0016D6  C0F4  F02E         	movff	eusartparser@i_7392,cmdMemoryIsEmpty@position
 21787  0016DA  0E01               	movlw	1
 21788  0016DC  ECF8  F040         	call	_cmdMemoryIsEmpty
 21789  0016E0  06E8               	decf	wreg,f,c
 21790  0016E2  A4D8               	btfss	status,2,c
 21791  0016E4  D018               	goto	l27979
 21792  0016E6  0100               	movlb	0	; () banked
 21793  0016E8  EE20 F001          	lfsr	2,1
 21794  0016EC  51E0               	movf	eusartparser@package& (0+255),w,b
 21795  0016EE  26D9               	addwf	fsr2l,f,c
 21796  0016F0  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21797  0016F2  22DA               	addwfc	fsr2h,f,c
 21798  0016F4  50DF               	movf	indf2,w,c
 21799  0016F6  A4D8               	btfss	status,2,c
 21800  0016F8  D00E               	goto	l27979
 21801                           
 21802                           ; BSR set to: 0
 21803                           ;eusartparser.c: 643:                                 saveNewSerial(1,serial,i);
 21804  0016FA  C0F8  F0D8         	movff	eusartparser@serial,saveNewSerial@tempSerial
 21805  0016FE  C0F9  F0D9         	movff	eusartparser@serial+1,saveNewSerial@tempSerial+1
 21806  001702  C0FA  F0DA         	movff	eusartparser@serial+2,saveNewSerial@tempSerial+2
 21807  001706  C0FB  F0DB         	movff	eusartparser@serial+3,saveNewSerial@tempSerial+3
 21808  00170A  C0F4  F0DC         	movff	eusartparser@i_7392,saveNewSerial@position
 21809  00170E  0E01               	movlw	1
 21810  001710  EC01  F046         	call	_saveNewSerial
 21811  001714  D60B               	goto	l27779
 21812  001716                     l27979:
 21813  001716  C0F4  F02E         	movff	eusartparser@i_7392,cmdMemoryIsEmpty@position
 21814  00171A  0E01               	movlw	1
 21815  00171C  ECF8  F040         	call	_cmdMemoryIsEmpty
 21816  001720  06E8               	decf	wreg,f,c
 21817  001722  A4D8               	btfss	status,2,c
 21818  001724  D009               	goto	l27983
 21819                           
 21820                           ;eusartparser.c: 649:                                 package->address--;
 21821  001726  0100               	movlb	0	; () banked
 21822  001728  EE20 F001          	lfsr	2,1
 21823  00172C  51E0               	movf	eusartparser@package& (0+255),w,b
 21824  00172E  26D9               	addwf	fsr2l,f,c
 21825  001730  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21826  001732  22DA               	addwfc	fsr2h,f,c
 21827  001734  06DF               	decf	indf2,f,c
 21828                           
 21829                           ;eusartparser.c: 650:                             }
 21830  001736  D005               	goto	l27989
 21831  001738                     l27983:
 21832  001738  0100               	movlb	0	; () banked
 21833  00173A  51F4               	movf	eusartparser@i_7392& (0+255),w,b
 21834  00173C  19B9               	xorwf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21835  00173E  B4D8               	btfsc	status,2,c
 21836  001740  D621               	goto	u34000
 21837  001742                     l27989:
 21838                           
 21839                           ; BSR set to: 0
 21840  001742  2BF4               	incf	eusartparser@i_7392& (0+255),f,b
 21841  001744  D7C8               	goto	l27967
 21842  001746                     l28001:
 21843                           
 21844                           ; BSR set to: 0
 21845                           ;eusartparser.c: 670:             done_changes=1;
 21846  001746  0E01               	movlw	1
 21847  001748  0101               	movlb	1	; () banked
 21848  00174A  6F8E               	movwf	_done_changes& (0+255),b
 21849                           
 21850                           ;eusartparser.c: 671:             if(programmer_enable){
 21851  00174C  0100               	movlb	0	; () banked
 21852  00174E  5185               	movf	_programmer_enable& (0+255),w,b
 21853  001750  B4D8               	btfsc	status,2,c
 21854  001752  D41A               	goto	l27643
 21855                           
 21856                           ; BSR set to: 0
 21857                           ;eusartparser.c: 672:                 for(uint8_t i=0;;i++)
 21858  001754  0E00               	movlw	0
 21859  001756  6FF5               	movwf	eusartparser@i_7393& (0+255),b
 21860  001758                     l28005:
 21861                           
 21862                           ; BSR set to: 0
 21863                           ;eusartparser.c: 673:                     if(cmdMemoryIsEmpty(1,i)==0&&package->address=
      +                          =0){
 21864  001758  C0F5  F02E         	movff	eusartparser@i_7393,cmdMemoryIsEmpty@position
 21865  00175C  0E01               	movlw	1
 21866  00175E  ECF8  F040         	call	_cmdMemoryIsEmpty
 21867  001762  0900               	iorlw	0
 21868  001764  A4D8               	btfss	status,2,c
 21869  001766  D010               	goto	l28019
 21870  001768  0100               	movlb	0	; () banked
 21871  00176A  EE20 F001          	lfsr	2,1
 21872  00176E  51E0               	movf	eusartparser@package& (0+255),w,b
 21873  001770  26D9               	addwf	fsr2l,f,c
 21874  001772  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21875  001774  22DA               	addwfc	fsr2h,f,c
 21876  001776  50DF               	movf	indf2,w,c
 21877  001778  A4D8               	btfss	status,2,c
 21878  00177A  D006               	goto	l28019
 21879                           
 21880                           ; BSR set to: 0
 21881                           ;eusartparser.c: 674:                         RemoveSerial(1, i);
 21882  00177C  C0F5  F03A         	movff	eusartparser@i_7393,RemoveSerial@position
 21883  001780  0E01               	movlw	1
 21884  001782  ECA8  F043         	call	_RemoveSerial
 21885  001786  D5D2               	goto	l27779
 21886  001788                     l28019:
 21887  001788  C0F5  F02E         	movff	eusartparser@i_7393,cmdMemoryIsEmpty@position
 21888  00178C  0E01               	movlw	1
 21889  00178E  ECF8  F040         	call	_cmdMemoryIsEmpty
 21890  001792  0900               	iorlw	0
 21891  001794  A4D8               	btfss	status,2,c
 21892  001796  D009               	goto	l28023
 21893                           
 21894                           ;eusartparser.c: 681:                         package->address--;
 21895  001798  0100               	movlb	0	; () banked
 21896  00179A  EE20 F001          	lfsr	2,1
 21897  00179E  51E0               	movf	eusartparser@package& (0+255),w,b
 21898  0017A0  26D9               	addwf	fsr2l,f,c
 21899  0017A2  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21900  0017A4  22DA               	addwfc	fsr2h,f,c
 21901  0017A6  06DF               	decf	indf2,f,c
 21902                           
 21903                           ;eusartparser.c: 682:                     }
 21904  0017A8  D005               	goto	l28031
 21905  0017AA                     l28023:
 21906  0017AA  0100               	movlb	0	; () banked
 21907  0017AC  51F5               	movf	eusartparser@i_7393& (0+255),w,b
 21908  0017AE  19B9               	xorwf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21909  0017B0  B4D8               	btfsc	status,2,c
 21910  0017B2  D5E8               	goto	u34000
 21911  0017B4                     l28031:
 21912                           
 21913                           ; BSR set to: 0
 21914  0017B4  2BF5               	incf	eusartparser@i_7393& (0+255),f,b
 21915  0017B6  D7D0               	goto	l28005
 21916  0017B8                     l28037:
 21917                           
 21918                           ; BSR set to: 0
 21919                           ;eusartparser.c: 696:             for(uint8_t i=0;;i++)
 21920  0017B8  0E00               	movlw	0
 21921  0017BA  6FF6               	movwf	eusartparser@i_7394& (0+255),b
 21922  0017BC                     l28039:
 21923                           
 21924                           ; BSR set to: 0
 21925                           ;eusartparser.c: 697:                 if(cmdMemoryIsEmpty(1,i)==0&&package->address==0){
 21926  0017BC  C0F6  F02E         	movff	eusartparser@i_7394,cmdMemoryIsEmpty@position
 21927  0017C0  0E01               	movlw	1
 21928  0017C2  ECF8  F040         	call	_cmdMemoryIsEmpty
 21929  0017C6  0900               	iorlw	0
 21930  0017C8  A4D8               	btfss	status,2,c
 21931  0017CA  D035               	goto	l28059
 21932  0017CC  0100               	movlb	0	; () banked
 21933  0017CE  EE20 F001          	lfsr	2,1
 21934  0017D2  51E0               	movf	eusartparser@package& (0+255),w,b
 21935  0017D4  26D9               	addwf	fsr2l,f,c
 21936  0017D6  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21937  0017D8  22DA               	addwfc	fsr2h,f,c
 21938  0017DA  50DF               	movf	indf2,w,c
 21939  0017DC  A4D8               	btfss	status,2,c
 21940  0017DE  D02B               	goto	l28059
 21941                           
 21942                           ; BSR set to: 0
 21943                           ;eusartparser.c: 698:                     ReadSerial(1, &serial, i);
 21944  0017E0  0EF8               	movlw	low eusartparser@serial
 21945  0017E2  6E2E               	movwf	ReadSerial@tempSerial^0,c
 21946  0017E4  C0F6  F02F         	movff	eusartparser@i_7394,ReadSerial@position
 21947  0017E8  0E01               	movlw	1
 21948  0017EA  EC39  F046         	call	_ReadSerial
 21949                           
 21950                           ;eusartparser.c: 699:                     package->data.data16=(uint16_t)serial;
 21951  0017EE  0100               	movlb	0	; () banked
 21952  0017F0  EE20 F002          	lfsr	2,2
 21953  0017F4  51E0               	movf	eusartparser@package& (0+255),w,b
 21954  0017F6  26D9               	addwf	fsr2l,f,c
 21955  0017F8  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21956  0017FA  22DA               	addwfc	fsr2h,f,c
 21957  0017FC  C0F8  FFDE         	movff	eusartparser@serial,postinc2
 21958  001800  C0F9  FFDD         	movff	eusartparser@serial+1,postdec2
 21959                           
 21960                           ; BSR set to: 0
 21961                           ;eusartparser.c: 700:                     write_package(*package);
 21962  001804  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21963  001808  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21964  00180C  EE00  F011         	lfsr	0,write_package@package
 21965  001810  0E06               	movlw	6
 21966  001812                     u34351:
 21967  001812  CFDB FFEB          	movff	plusw2,plusw0
 21968  001816  06E8               	decf	wreg,f,c
 21969  001818  E2FC               	bc	u34351
 21970  00181A  ECB0  F04C         	call	_write_package	;wreg free
 21971  00181E                     l28049:
 21972                           
 21973                           ;eusartparser.c: 701:                     package->data.data16=(uint16_t)(serial>>16);
 21974  00181E  0100               	movlb	0	; () banked
 21975  001820  EE20 F002          	lfsr	2,2
 21976  001824  51E0               	movf	eusartparser@package& (0+255),w,b
 21977  001826  26D9               	addwf	fsr2l,f,c
 21978  001828  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21979  00182A  22DA               	addwfc	fsr2h,f,c
 21980  00182C  C0FA  FFDE         	movff	eusartparser@serial+2,postinc2
 21981  001830  C0FB  FFDD         	movff	eusartparser@serial+3,postdec2
 21982  001834  D446               	goto	u33820
 21983  001836                     l28059:
 21984  001836  C0F6  F02E         	movff	eusartparser@i_7394,cmdMemoryIsEmpty@position
 21985  00183A  0E01               	movlw	1
 21986  00183C  ECF8  F040         	call	_cmdMemoryIsEmpty
 21987  001840  0900               	iorlw	0
 21988  001842  A4D8               	btfss	status,2,c
 21989  001844  D009               	goto	l28063
 21990                           
 21991                           ;eusartparser.c: 708:                     package->address--;
 21992  001846  0100               	movlb	0	; () banked
 21993  001848  EE20 F001          	lfsr	2,1
 21994  00184C  51E0               	movf	eusartparser@package& (0+255),w,b
 21995  00184E  26D9               	addwf	fsr2l,f,c
 21996  001850  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21997  001852  22DA               	addwfc	fsr2h,f,c
 21998  001854  06DF               	decf	indf2,f,c
 21999                           
 22000                           ;eusartparser.c: 709:                 }
 22001  001856  D006               	goto	l28069
 22002  001858                     l28063:
 22003  001858  0100               	movlb	0	; () banked
 22004  00185A  51F6               	movf	eusartparser@i_7394& (0+255),w,b
 22005  00185C  19B9               	xorwf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 22006  00185E  B4D8               	btfsc	status,2,c
 22007  001860  EFC4  F007         	goto	l27643
 22008  001864                     l28069:
 22009                           
 22010                           ; BSR set to: 0
 22011  001864  2BF6               	incf	eusartparser@i_7394& (0+255),f,b
 22012  001866  D7AA               	goto	l28039
 22013  001868                     l28071:
 22014                           
 22015                           ; BSR set to: 0
 22016                           ;eusartparser.c: 717:             updateChangesToUart();
 22017  001868  EC55  F045         	call	_updateChangesToUart	;wreg free
 22018                           
 22019                           ;eusartparser.c: 718:             break;
 22020  00186C  0012               	return	
 22021  00186E                     l28077:
 22022                           
 22023                           ; BSR set to: 0
 22024  00186E  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 22025  001872  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 22026  001876  50DF               	movf	indf2,w,c
 22027  001878  6FE2               	movwf	??_eusartparser& (0+255),b
 22028  00187A  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 22029                           
 22030                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22031                           ; Switch size 1, requested type "simple"
 22032                           ; Number of cases is 1, Range of values is 0 to 0
 22033                           ; switch strategies available:
 22034                           ; Name         Instructions Cycles
 22035                           ; simple_byte            4     3 (average)
 22036                           ;	Chosen strategy is simple_byte
 22037  00187C  51E3               	movf	(??_eusartparser+1)& (0+255),w,b
 22038  00187E  0A00               	xorlw	0	; case 0
 22039  001880  A4D8               	btfss	status,2,c
 22040  001882  EFC4  F007         	goto	l27643
 22041                           
 22042                           ; BSR set to: 0
 22043                           ; Switch size 1, requested type "simple"
 22044                           ; Number of cases is 19, Range of values is 0 to 18
 22045                           ; switch strategies available:
 22046                           ; Name         Instructions Cycles
 22047                           ; simple_byte           58    30 (average)
 22048                           ;	Chosen strategy is simple_byte
 22049  001886  51E2               	movf	??_eusartparser& (0+255),w,b
 22050  001888  0A00               	xorlw	0	; case 0
 22051  00188A  B4D8               	btfsc	status,2,c
 22052  00188C  EF93  F007         	goto	l27629
 22053  001890  0A01               	xorlw	1	; case 1
 22054  001892  B4D8               	btfsc	status,2,c
 22055  001894  EFAF  F007         	goto	l27635
 22056  001898  0A03               	xorlw	3	; case 2
 22057  00189A  B4D8               	btfsc	status,2,c
 22058  00189C  EFCD  F007         	goto	l27647
 22059  0018A0  0A01               	xorlw	1	; case 3
 22060  0018A2  B4D8               	btfsc	status,2,c
 22061  0018A4  EF99  F007         	goto	l27631
 22062  0018A8  0A07               	xorlw	7	; case 4
 22063  0018AA  B4D8               	btfsc	status,2,c
 22064  0018AC  EF31  F008         	goto	l27683
 22065  0018B0  0A01               	xorlw	1	; case 5
 22066  0018B2  B4D8               	btfsc	status,2,c
 22067  0018B4  D414               	goto	l27701
 22068  0018B6  0A03               	xorlw	3	; case 6
 22069  0018B8  B4D8               	btfsc	status,2,c
 22070  0018BA  D43F               	goto	l27719
 22071  0018BC  0A01               	xorlw	1	; case 7
 22072  0018BE  B4D8               	btfsc	status,2,c
 22073  0018C0  D474               	goto	l27737
 22074  0018C2  0A0F               	xorlw	15	; case 8
 22075  0018C4  B4D8               	btfsc	status,2,c
 22076  0018C6  D4A9               	goto	l27755
 22077  0018C8  0A01               	xorlw	1	; case 9
 22078  0018CA  B4D8               	btfsc	status,2,c
 22079  0018CC  D56A               	goto	l27807
 22080  0018CE  0A03               	xorlw	3	; case 10
 22081  0018D0  B4D8               	btfsc	status,2,c
 22082  0018D2  D5A0               	goto	l27843
 22083  0018D4  0A01               	xorlw	1	; case 11
 22084  0018D6  B4D8               	btfsc	status,2,c
 22085  0018D8  D5E9               	goto	l27877
 22086  0018DA  0A07               	xorlw	7	; case 12
 22087  0018DC  B4D8               	btfsc	status,2,c
 22088  0018DE  D617               	goto	l27895
 22089  0018E0  0A01               	xorlw	1	; case 13
 22090  0018E2  B4D8               	btfsc	status,2,c
 22091  0018E4  D642               	goto	l27913
 22092  0018E6  0A03               	xorlw	3	; case 14
 22093  0018E8  B4D8               	btfsc	status,2,c
 22094  0018EA  D677               	goto	l27931
 22095  0018EC  0A01               	xorlw	1	; case 15
 22096  0018EE  B4D8               	btfsc	status,2,c
 22097  0018F0  D6AC               	goto	l27949
 22098  0018F2  0A1F               	xorlw	31	; case 16
 22099  0018F4  B4D8               	btfsc	status,2,c
 22100  0018F6  D727               	goto	l28001
 22101  0018F8  0A01               	xorlw	1	; case 17
 22102  0018FA  B4D8               	btfsc	status,2,c
 22103  0018FC  D75D               	goto	l28037
 22104  0018FE  0A03               	xorlw	3	; case 18
 22105  001900  B4D8               	btfsc	status,2,c
 22106  001902  D7B2               	goto	l28071
 22107  001904  EFC4  F007         	goto	l27643
 22108  001908                     __end_of_eusartparser:
 22109                           	callstack 0
 22110                           
 22111 ;; *************** function _write_eusartparser *****************
 22112 ;; Defined at:
 22113 ;;		line 231 in file "eusartparser.c"
 22114 ;; Parameters:    Size  Location     Type
 22115 ;;  package         7   15[COMRAM] struct package_t
 22116 ;; Auto vars:     Size  Location     Type
 22117 ;;  debug2          2   32[COMRAM] volatile int 
 22118 ;;  debug           2   30[COMRAM] volatile int 
 22119 ;; Return value:  Size  Location     Type
 22120 ;;                  1    wreg      void 
 22121 ;; Registers used:
 22122 ;;		wreg, status,2, status,0
 22123 ;; Tracked objects:
 22124 ;;		On entry : 3F/0
 22125 ;;		On exit  : 3F/0
 22126 ;;		Unchanged: 0/0
 22127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22128 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22129 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22130 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22131 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22132 ;;Total ram usage:       19 bytes
 22133 ;; Hardware stack levels used: 1
 22134 ;; Hardware stack levels required when called: 4
 22135 ;; This function calls:
 22136 ;;		Nothing
 22137 ;; This function is called by:
 22138 ;;		_eusartparser
 22139 ;; This function uses a non-reentrant model
 22140 ;;
 22141                           
 22142                           	psect	text75
 22143  003014                     __ptext75:
 22144                           	callstack 0
 22145  003014                     _write_eusartparser:
 22146                           	callstack 25
 22147                           
 22148                           ; BSR set to: 0
 22149                           ;eusartparser.c: 232:     volatile int debug=(uint8_t)package.address;
 22150                           
 22151                           ;incstack = 0
 22152  003014  C011  F01F         	movff	write_eusartparser@package+1,write_eusartparser@debug	;volatile
 22153  003018  6A20               	clrf	(write_eusartparser@debug+1)^0,c	;volatile
 22154                           
 22155                           ; BSR set to: 0
 22156                           ;eusartparser.c: 233:     volatile int debug2=0x10;
 22157  00301A  0E00               	movlw	0
 22158  00301C  6E22               	movwf	(write_eusartparser@debug2+1)^0,c	;volatile
 22159  00301E  0E10               	movlw	16
 22160  003020  6E21               	movwf	write_eusartparser@debug2^0,c	;volatile
 22161                           
 22162                           ;eusartparser.c: 234:     switch((uint8_t)package.address){
 22163  003022  D240               	goto	l24611
 22164  003024                     l3623:
 22165                           
 22166                           ; BSR set to: 0
 22167                           ;eusartparser.c: 237:             var_sys_NVM.decelarationOpen=package.data.data8[0];
 22168  003024  C012  F098         	movff	write_eusartparser@package+2,_var_sys_NVM	;volatile
 22169                           
 22170                           ;eusartparser.c: 238:             var_sys_NVM.decelarationClose=package.data.data8[1];
 22171  003028  C013  F099         	movff	write_eusartparser@package+3,_var_sys_NVM+1	;volatile
 22172                           
 22173                           ;eusartparser.c: 239:             break;
 22174  00302C  0012               	return	
 22175  00302E                     l3625:
 22176                           
 22177                           ; BSR set to: 0
 22178                           ;eusartparser.c: 241:             var_sys_NVM.motorPower=package.data.data8[0];
 22179  00302E  C012  F09A         	movff	write_eusartparser@package+2,_var_sys_NVM+2	;volatile
 22180                           
 22181                           ;eusartparser.c: 242:             var_sys_NVM.motorSensitivity=package.data.data8[1];
 22182  003032  C013  F09B         	movff	write_eusartparser@package+3,_var_sys_NVM+3	;volatile
 22183                           
 22184                           ;eusartparser.c: 243:             break;
 22185  003036  0012               	return	
 22186  003038                     l3626:
 22187                           
 22188                           ; BSR set to: 0
 22189                           ;eusartparser.c: 245:             var_sys_NVM.walkTime=package.data.data8[1];
 22190  003038  C013  F09C         	movff	write_eusartparser@package+3,_var_sys_NVM+4	;volatile
 22191                           
 22192                           ;eusartparser.c: 246:             break;
 22193  00303C  0012               	return	
 22194  00303E                     l3628:
 22195                           
 22196                           ; BSR set to: 0
 22197                           ;eusartparser.c: 249:             var_sys_NVM.autoTimeFullClose=package.data.data8[0];
 22198  00303E  C012  F09D         	movff	write_eusartparser@package+2,_var_sys_NVM+5	;volatile
 22199                           
 22200                           ;eusartparser.c: 250:             var_sys_NVM.autoTimeWalkClose=package.data.data8[1];
 22201  003042  C013  F09E         	movff	write_eusartparser@package+3,_var_sys_NVM+6	;volatile
 22202                           
 22203                           ;eusartparser.c: 251:             break;
 22204  003046  0012               	return	
 22205  003048                     l3630:
 22206                           
 22207                           ; BSR set to: 0
 22208                           ;eusartparser.c: 254:             var_sys_NVM.photoCellIsON=package.data.data8[0];
 22209  003048  C012  F09F         	movff	write_eusartparser@package+2,_var_sys_NVM+7	;volatile
 22210                           
 22211                           ;eusartparser.c: 255:             var_sys_NVM.photoCellInOpen=package.data.data8[1];
 22212  00304C  C013  F0A0         	movff	write_eusartparser@package+3,_var_sys_NVM+8	;volatile
 22213                           
 22214                           ;eusartparser.c: 256:             break;
 22215  003050  0012               	return	
 22216  003052                     l3631:
 22217                           
 22218                           ; BSR set to: 0
 22219                           ;eusartparser.c: 258:             var_sys_NVM.securityBandIsON=package.data.data8[0];
 22220  003052  C012  F0A1         	movff	write_eusartparser@package+2,_var_sys_NVM+9	;volatile
 22221                           
 22222                           ;eusartparser.c: 259:             var_sys_NVM.securityBandType=package.data.data8[1];
 22223  003056  C013  F0A2         	movff	write_eusartparser@package+3,_var_sys_NVM+10	;volatile
 22224                           
 22225                           ;eusartparser.c: 260:             break;
 22226  00305A  0012               	return	
 22227  00305C                     l3632:
 22228                           
 22229                           ; BSR set to: 0
 22230                           ;eusartparser.c: 262:             var_sys_NVM.securityBandInOpen=package.data.data8[1];
 22231  00305C  C013  F0A3         	movff	write_eusartparser@package+3,_var_sys_NVM+11	;volatile
 22232                           
 22233                           ;eusartparser.c: 263:             break;
 22234  003060  0012               	return	
 22235  003062                     l3633:
 22236                           
 22237                           ; BSR set to: 0
 22238                           ;eusartparser.c: 265:             var_sys_NVM.operationMode=package.data.data8[1];
 22239  003062  C013  F0A4         	movff	write_eusartparser@package+3,_var_sys_NVM+12	;volatile
 22240                           
 22241                           ;eusartparser.c: 266:             break;
 22242  003066  0012               	return	
 22243  003068                     l3634:
 22244                           
 22245                           ; BSR set to: 0
 22246                           ;eusartparser.c: 268:             var_sys_NVM.flashLightMode=package.data.data8[1];
 22247  003068  C013  F0A5         	movff	write_eusartparser@package+3,_var_sys_NVM+13	;volatile
 22248                           
 22249                           ;eusartparser.c: 269:             break;
 22250  00306C  0012               	return	
 22251  00306E                     l3635:
 22252                           
 22253                           ; BSR set to: 0
 22254                           ;eusartparser.c: 271:             var_sys_NVM.programmingDistance=package.data.data8[1];
 22255  00306E  C013  F0A6         	movff	write_eusartparser@package+3,_var_sys_NVM+14	;volatile
 22256                           
 22257                           ;eusartparser.c: 272:             break;
 22258  003072  0012               	return	
 22259  003074                     l3636:
 22260                           
 22261                           ; BSR set to: 0
 22262                           ;eusartparser.c: 274:             var_sys_NVM.decelarationSensivity=package.data.data8[1
      +                          ];
 22263  003074  C013  F0A7         	movff	write_eusartparser@package+3,_var_sys_NVM+15	;volatile
 22264                           
 22265                           ;eusartparser.c: 275:             break;
 22266  003078  0012               	return	
 22267  00307A                     l3637:
 22268                           
 22269                           ; BSR set to: 0
 22270                           ;eusartparser.c: 278:             var_sys_NVM.homemPresente=package.data.data8[1];
 22271  00307A  C013  F0A8         	movff	write_eusartparser@package+3,_var_sys_NVM+16	;volatile
 22272                           
 22273                           ;eusartparser.c: 279:             break;
 22274  00307E  0012               	return	
 22275  003080                     l3639:
 22276                           
 22277                           ; BSR set to: 0
 22278                           ;eusartparser.c: 282:             var_sys_NVM.logicDigital=package.data.data8[1];
 22279  003080  C013  F0A9         	movff	write_eusartparser@package+3,_var_sys_NVM+17	;volatile
 22280                           
 22281                           ;eusartparser.c: 283:             break;
 22282  003084  0012               	return	
 22283  003086                     l3640:
 22284                           
 22285                           ; BSR set to: 0
 22286                           ;eusartparser.c: 285:             var_sys_NVM.softStart=package.data.data8[0];
 22287  003086  C012  F0AA         	movff	write_eusartparser@package+2,_var_sys_NVM+18	;volatile
 22288                           
 22289                           ;eusartparser.c: 286:             var_sys_NVM.softstop=package.data.data8[1];
 22290  00308A  C013  F0AB         	movff	write_eusartparser@package+3,_var_sys_NVM+19	;volatile
 22291                           
 22292                           ;eusartparser.c: 287:             break;
 22293  00308E  0012               	return	
 22294  003090                     l3642:
 22295                           
 22296                           ; BSR set to: 0
 22297                           ;eusartparser.c: 290:             var_sys_NVM.ligthTime=package.data.data8[1];
 22298  003090  C013  F0AC         	movff	write_eusartparser@package+3,_var_sys_NVM+20	;volatile
 22299                           
 22300                           ;eusartparser.c: 291:             break;
 22301  003094  0012               	return	
 22302  003096                     l3644:
 22303                           
 22304                           ; BSR set to: 0
 22305                           ;eusartparser.c: 294:             var_sys_NVM.folow_me=package.data.data8[1];
 22306  003096  C013  F0AD         	movff	write_eusartparser@package+3,_var_sys_NVM+21	;volatile
 22307                           
 22308                           ;eusartparser.c: 295:             break;
 22309  00309A  0012               	return	
 22310  00309C                     l3645:
 22311                           
 22312                           ; BSR set to: 0
 22313                           ;eusartparser.c: 297:             var_sys_NVM.Stopboton=package.data.data8[1];
 22314  00309C  C013  F0AE         	movff	write_eusartparser@package+3,_var_sys_NVM+22	;volatile
 22315                           
 22316                           ;eusartparser.c: 298:             break;
 22317  0030A0  0012               	return	
 22318  0030A2                     l3646:
 22319                           
 22320                           ; BSR set to: 0
 22321                           ;eusartparser.c: 300:             var_sys_NVM.electricBrake=package.data.data8[1];
 22322  0030A2  C013  F0AF         	movff	write_eusartparser@package+3,_var_sys_NVM+23	;volatile
 22323                           
 22324                           ;eusartparser.c: 301:             break;
 22325  0030A6  0012               	return	
 22326  0030A8                     l3647:
 22327                           
 22328                           ; BSR set to: 0
 22329                           ;eusartparser.c: 303:             var_sys_NVM.velocityDecelaration=package.data.data8[1]
      +                          ;
 22330  0030A8  C013  F0B0         	movff	write_eusartparser@package+3,_var_sys_NVM+24	;volatile
 22331                           
 22332                           ;eusartparser.c: 304:             break;
 22333  0030AC  0012               	return	
 22334  0030AE                     l3649:
 22335                           
 22336                           ; BSR set to: 0
 22337                           ;eusartparser.c: 307:             var_sys_NVM.flashRGBMode=package.data.data8[1];
 22338  0030AE  C013  F0B1         	movff	write_eusartparser@package+3,_var_sys_NVM+25	;volatile
 22339                           
 22340                           ;eusartparser.c: 308:             break;
 22341  0030B2  0012               	return	
 22342  0030B4                     l3650:
 22343                           
 22344                           ; BSR set to: 0
 22345                           ;eusartparser.c: 310:             var_sys_NVM.Direction_motor=package.data.data8[1];
 22346  0030B4  C013  F0B3         	movff	write_eusartparser@package+3,_var_sys_NVM+27	;volatile
 22347                           
 22348                           ;eusartparser.c: 311:             break;
 22349  0030B8  0012               	return	
 22350  0030BA                     l3651:
 22351                           
 22352                           ; BSR set to: 0
 22353                           ;eusartparser.c: 313:             var_sys_NVM.TypeofMotor=package.data.data8[1];
 22354  0030BA  C013  F0B4         	movff	write_eusartparser@package+3,_var_sys_NVM+28	;volatile
 22355                           
 22356                           ;eusartparser.c: 314:             break;
 22357  0030BE  0012               	return	
 22358  0030C0                     l3652:
 22359                           
 22360                           ; BSR set to: 0
 22361                           ;eusartparser.c: 316:             var_sys_NVM.positionRemotesFull=package.data.data8[0];
 22362  0030C0  C012  F0B8         	movff	write_eusartparser@package+2,_var_sys_NVM+32	;volatile
 22363                           
 22364                           ;eusartparser.c: 317:             var_sys_NVM.positionRemotesWalk=package.data.data8[1];
 22365  0030C4  C013  F0B9         	movff	write_eusartparser@package+3,_var_sys_NVM+33	;volatile
 22366                           
 22367                           ;eusartparser.c: 318:             break;
 22368  0030C8  0012               	return	
 22369  0030CA                     l24589:
 22370                           
 22371                           ; BSR set to: 0
 22372                           ;eusartparser.c: 321:             var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|((ui
      +                          nt32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22373  0030CA  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22374  0030CC  6E17               	movwf	??_write_eusartparser^0,c
 22375  0030CE  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22376  0030D0  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22377  0030D2  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22378  0030D4  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22379  0030D6  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22380  0030DA  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22381  0030DE  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22382  0030E0  6A17               	clrf	??_write_eusartparser^0,c
 22383  0030E2  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 22384  0030E4  1017               	iorwf	??_write_eusartparser^0,w,c
 22385  0030E6  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 22386  0030E8  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 22387  0030EA  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22388  0030EC  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 22389  0030EE  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 22390  0030F0  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22391  0030F2  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 22392  0030F4  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 22393  0030F6  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22394  0030F8  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 22395                           
 22396                           ;eusartparser.c: 322:             var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&~((u
      +                          int32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22397  0030FA  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22398  0030FC  6E17               	movwf	??_write_eusartparser^0,c
 22399  0030FE  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22400  003100  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22401  003102  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22402  003104  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22403  003106  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22404  00310A  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22405  00310E  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22406  003110  6A17               	clrf	??_write_eusartparser^0,c
 22407  003112  1C17               	comf	??_write_eusartparser^0,w,c
 22408  003114  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22409  003116  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22410  003118  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22411  00311A  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22412  00311C  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22413  00311E  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22414  003120  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22415  003122  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 22416  003124  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22417  003126  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 22418  003128  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 22419  00312A  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22420  00312C  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 22421  00312E  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 22422  003130  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22423  003132  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 22424  003134  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 22425  003136  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22426  003138  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 22427                           
 22428                           ;eusartparser.c: 323:             break;
 22429  00313A  0012               	return	
 22430  00313C                     l24591:
 22431                           
 22432                           ; BSR set to: 0
 22433                           ;eusartparser.c: 325:             var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|((ui
      +                          nt32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22434  00313C  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22435  00313E  11BA               	iorwf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 22436  003140  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 22437  003142  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22438  003144  11BB               	iorwf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 22439  003146  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 22440  003148  0E00               	movlw	0
 22441  00314A  11BC               	iorwf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 22442  00314C  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 22443  00314E  0E00               	movlw	0
 22444  003150  11BD               	iorwf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 22445  003152  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 22446                           
 22447                           ;eusartparser.c: 326:             var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&~((u
      +                          int32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22448  003154  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22449  003156  6E17               	movwf	??_write_eusartparser^0,c
 22450  003158  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22451  00315A  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22452  00315C  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22453  00315E  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22454  003160  1C17               	comf	??_write_eusartparser^0,w,c
 22455  003162  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22456  003164  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22457  003166  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22458  003168  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22459  00316A  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22460  00316C  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22461  00316E  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22462  003170  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 22463  003172  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22464  003174  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 22465  003176  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 22466  003178  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22467  00317A  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 22468  00317C  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 22469  00317E  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22470  003180  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 22471  003182  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 22472  003184  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22473  003186  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 22474                           
 22475                           ;eusartparser.c: 327:             break;
 22476  003188  0012               	return	
 22477  00318A                     l3655:
 22478                           
 22479                           ; BSR set to: 0
 22480                           ;eusartparser.c: 330:             var_sys_NVM.OnlyRollingCode=package.data.data8[1];
 22481  00318A  C013  F0BE         	movff	write_eusartparser@package+3,_var_sys_NVM+38	;volatile
 22482                           
 22483                           ;eusartparser.c: 331:             break;
 22484  00318E  0012               	return	
 22485  003190                     l24593:
 22486                           
 22487                           ; BSR set to: 0
 22488                           ;eusartparser.c: 334:             var_sys_NVM.learningCurrentDecelarationClose=var_sys_N
      +                          VM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1
      +                          *16));
 22489  003190  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22490  003192  6E17               	movwf	??_write_eusartparser^0,c
 22491  003194  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22492  003196  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22493  003198  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22494  00319A  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22495  00319C  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22496  0031A0  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22497  0031A4  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22498  0031A6  6A17               	clrf	??_write_eusartparser^0,c
 22499  0031A8  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 22500  0031AA  1017               	iorwf	??_write_eusartparser^0,w,c
 22501  0031AC  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 22502  0031AE  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 22503  0031B0  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22504  0031B2  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 22505  0031B4  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 22506  0031B6  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22507  0031B8  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 22508  0031BA  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 22509  0031BC  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22510  0031BE  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 22511                           
 22512                           ;eusartparser.c: 335:             var_sys_NVM.learningCurrentDecelarationClose=var_sys_N
      +                          VM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)
      +                          (1*16));
 22513  0031C0  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22514  0031C2  6E17               	movwf	??_write_eusartparser^0,c
 22515  0031C4  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22516  0031C6  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22517  0031C8  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22518  0031CA  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22519  0031CC  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22520  0031D0  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22521  0031D4  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22522  0031D6  6A17               	clrf	??_write_eusartparser^0,c
 22523  0031D8  1C17               	comf	??_write_eusartparser^0,w,c
 22524  0031DA  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22525  0031DC  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22526  0031DE  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22527  0031E0  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22528  0031E2  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22529  0031E4  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22530  0031E6  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22531  0031E8  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 22532  0031EA  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22533  0031EC  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 22534  0031EE  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 22535  0031F0  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22536  0031F2  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 22537  0031F4  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 22538  0031F6  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22539  0031F8  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 22540  0031FA  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 22541  0031FC  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22542  0031FE  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 22543                           
 22544                           ;eusartparser.c: 336:             break;
 22545  003200  0012               	return	
 22546  003202                     l24595:
 22547                           
 22548                           ; BSR set to: 0
 22549                           ;eusartparser.c: 338:             var_sys_NVM.learningCurrentDecelarationClose=var_sys_N
      +                          VM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0
      +                          *16));
 22550  003202  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22551  003204  11C0               	iorwf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 22552  003206  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 22553  003208  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22554  00320A  11C1               	iorwf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 22555  00320C  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 22556  00320E  0E00               	movlw	0
 22557  003210  11C2               	iorwf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 22558  003212  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 22559  003214  0E00               	movlw	0
 22560  003216  11C3               	iorwf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 22561  003218  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 22562                           
 22563                           ;eusartparser.c: 339:             var_sys_NVM.learningCurrentDecelarationClose=var_sys_N
      +                          VM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)
      +                          (0*16));
 22564  00321A  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22565  00321C  6E17               	movwf	??_write_eusartparser^0,c
 22566  00321E  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22567  003220  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22568  003222  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22569  003224  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22570  003226  1C17               	comf	??_write_eusartparser^0,w,c
 22571  003228  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22572  00322A  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22573  00322C  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22574  00322E  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22575  003230  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22576  003232  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22577  003234  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22578  003236  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 22579  003238  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22580  00323A  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 22581  00323C  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 22582  00323E  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22583  003240  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 22584  003242  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 22585  003244  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22586  003246  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 22587  003248  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 22588  00324A  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22589  00324C  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 22590                           
 22591                           ;eusartparser.c: 340:             break;
 22592  00324E  0012               	return	
 22593  003250                     l24597:
 22594                           
 22595                           ; BSR set to: 0
 22596                           ;eusartparser.c: 343:             var_sys_NVM.learningCurrentDecelarationOpen=var_sys_NV
      +                          M.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*1
      +                          6));
 22597  003250  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22598  003252  6E17               	movwf	??_write_eusartparser^0,c
 22599  003254  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22600  003256  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22601  003258  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22602  00325A  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22603  00325C  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22604  003260  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22605  003264  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22606  003266  6A17               	clrf	??_write_eusartparser^0,c
 22607  003268  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22608  00326A  1017               	iorwf	??_write_eusartparser^0,w,c
 22609  00326C  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22610  00326E  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22611  003270  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22612  003272  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22613  003274  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22614  003276  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22615  003278  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22616  00327A  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22617  00327C  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22618  00327E  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22619                           
 22620                           ;eusartparser.c: 344:             var_sys_NVM.learningCurrentDecelarationOpen=var_sys_NV
      +                          M.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1
      +                          *16));
 22621  003280  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22622  003282  6E17               	movwf	??_write_eusartparser^0,c
 22623  003284  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22624  003286  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22625  003288  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22626  00328A  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22627  00328C  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22628  003290  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22629  003294  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22630  003296  6A17               	clrf	??_write_eusartparser^0,c
 22631  003298  1C17               	comf	??_write_eusartparser^0,w,c
 22632  00329A  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22633  00329C  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22634  00329E  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22635  0032A0  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22636  0032A2  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22637  0032A4  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22638  0032A6  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22639  0032A8  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22640  0032AA  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22641  0032AC  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22642  0032AE  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22643  0032B0  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22644  0032B2  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22645  0032B4  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22646  0032B6  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22647  0032B8  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22648  0032BA  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22649  0032BC  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22650  0032BE  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22651                           
 22652                           ;eusartparser.c: 345:             break;
 22653  0032C0  0012               	return	
 22654  0032C2                     l24599:
 22655                           
 22656                           ; BSR set to: 0
 22657                           ;eusartparser.c: 347:             var_sys_NVM.learningCurrentDecelarationOpen=var_sys_NV
      +                          M.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*1
      +                          6));
 22658  0032C2  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22659  0032C4  11C4               	iorwf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22660  0032C6  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22661  0032C8  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22662  0032CA  11C5               	iorwf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22663  0032CC  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22664  0032CE  0E00               	movlw	0
 22665  0032D0  11C6               	iorwf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22666  0032D2  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22667  0032D4  0E00               	movlw	0
 22668  0032D6  11C7               	iorwf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22669  0032D8  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22670                           
 22671                           ;eusartparser.c: 348:             var_sys_NVM.learningCurrentDecelarationOpen=var_sys_NV
      +                          M.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0
      +                          *16));
 22672  0032DA  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22673  0032DC  6E17               	movwf	??_write_eusartparser^0,c
 22674  0032DE  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22675  0032E0  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22676  0032E2  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22677  0032E4  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22678  0032E6  1C17               	comf	??_write_eusartparser^0,w,c
 22679  0032E8  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22680  0032EA  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22681  0032EC  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22682  0032EE  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22683  0032F0  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22684  0032F2  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22685  0032F4  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22686  0032F6  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22687  0032F8  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22688  0032FA  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22689  0032FC  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22690  0032FE  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22691  003300  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22692  003302  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22693  003304  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22694  003306  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22695  003308  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22696  00330A  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22697  00330C  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22698                           
 22699                           ;eusartparser.c: 349:             break;
 22700  00330E  0012               	return	
 22701  003310                     l3660:
 22702                           
 22703                           ; BSR set to: 0
 22704                           ;eusartparser.c: 352:             var_sys_NVM.learningCurrentNormalClose=package.data.da
      +                          ta16;
 22705  003310  C012  F0C8         	movff	write_eusartparser@package+2,_var_sys_NVM+48	;volatile
 22706  003314  C013  F0C9         	movff	write_eusartparser@package+3,_var_sys_NVM+49	;volatile
 22707                           
 22708                           ;eusartparser.c: 353:             break;
 22709  003318  0012               	return	
 22710  00331A                     l3661:
 22711                           
 22712                           ; BSR set to: 0
 22713                           ;eusartparser.c: 356:             var_sys_NVM.learningCurrentNormalOpen=package.data.dat
      +                          a16;
 22714  00331A  C012  F0CA         	movff	write_eusartparser@package+2,_var_sys_NVM+50	;volatile
 22715  00331E  C013  F0CB         	movff	write_eusartparser@package+3,_var_sys_NVM+51	;volatile
 22716                           
 22717                           ;eusartparser.c: 357:             break;
 22718  003322  0012               	return	
 22719  003324                     l24601:
 22720                           
 22721                           ; BSR set to: 0
 22722                           ;eusartparser.c: 360:             var_sys_NVM.learningTimeToOpen=var_sys_NVM.learningTim
      +                          eToOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22723  003324  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22724  003326  6E17               	movwf	??_write_eusartparser^0,c
 22725  003328  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22726  00332A  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22727  00332C  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22728  00332E  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22729  003330  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22730  003334  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22731  003338  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22732  00333A  6A17               	clrf	??_write_eusartparser^0,c
 22733  00333C  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 22734  00333E  1017               	iorwf	??_write_eusartparser^0,w,c
 22735  003340  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 22736  003342  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 22737  003344  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22738  003346  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 22739  003348  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 22740  00334A  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22741  00334C  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 22742  00334E  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 22743  003350  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22744  003352  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 22745                           
 22746                           ;eusartparser.c: 361:             var_sys_NVM.learningTimeToOpen=var_sys_NVM.learningTim
      +                          eToOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22747  003354  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22748  003356  6E17               	movwf	??_write_eusartparser^0,c
 22749  003358  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22750  00335A  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22751  00335C  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22752  00335E  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22753  003360  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22754  003364  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22755  003368  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22756  00336A  6A17               	clrf	??_write_eusartparser^0,c
 22757  00336C  1C17               	comf	??_write_eusartparser^0,w,c
 22758  00336E  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22759  003370  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22760  003372  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22761  003374  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22762  003376  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22763  003378  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22764  00337A  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22765  00337C  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 22766  00337E  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22767  003380  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 22768  003382  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 22769  003384  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22770  003386  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 22771  003388  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 22772  00338A  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22773  00338C  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 22774  00338E  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 22775  003390  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22776  003392  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 22777                           
 22778                           ;eusartparser.c: 362:             break;
 22779  003394  0012               	return	
 22780  003396                     l24603:
 22781                           
 22782                           ; BSR set to: 0
 22783                           ;eusartparser.c: 364:             var_sys_NVM.learningTimeToOpen=var_sys_NVM.learningTim
      +                          eToOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22784  003396  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22785  003398  11CC               	iorwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 22786  00339A  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 22787  00339C  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22788  00339E  11CD               	iorwf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 22789  0033A0  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 22790  0033A2  0E00               	movlw	0
 22791  0033A4  11CE               	iorwf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 22792  0033A6  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 22793  0033A8  0E00               	movlw	0
 22794  0033AA  11CF               	iorwf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 22795  0033AC  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 22796                           
 22797                           ;eusartparser.c: 365:             var_sys_NVM.learningTimeToOpen=var_sys_NVM.learningTim
      +                          eToOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22798  0033AE  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22799  0033B0  6E17               	movwf	??_write_eusartparser^0,c
 22800  0033B2  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22801  0033B4  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22802  0033B6  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22803  0033B8  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22804  0033BA  1C17               	comf	??_write_eusartparser^0,w,c
 22805  0033BC  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22806  0033BE  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22807  0033C0  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22808  0033C2  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22809  0033C4  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22810  0033C6  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22811  0033C8  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22812  0033CA  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 22813  0033CC  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22814  0033CE  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 22815  0033D0  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 22816  0033D2  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22817  0033D4  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 22818  0033D6  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 22819  0033D8  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22820  0033DA  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 22821  0033DC  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 22822  0033DE  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22823  0033E0  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 22824                           
 22825                           ;eusartparser.c: 366:             break;
 22826  0033E2  0012               	return	
 22827  0033E4                     l24605:
 22828                           
 22829                           ; BSR set to: 0
 22830                           ;eusartparser.c: 369:             var_sys_NVM.learningTimeToClose=var_sys_NVM.learningTi
      +                          meToClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22831  0033E4  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22832  0033E6  6E17               	movwf	??_write_eusartparser^0,c
 22833  0033E8  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22834  0033EA  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22835  0033EC  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22836  0033EE  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22837  0033F0  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22838  0033F4  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22839  0033F8  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22840  0033FA  6A17               	clrf	??_write_eusartparser^0,c
 22841  0033FC  51D0               	movf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 22842  0033FE  1017               	iorwf	??_write_eusartparser^0,w,c
 22843  003400  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 22844  003402  51D1               	movf	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 22845  003404  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22846  003406  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 22847  003408  51D2               	movf	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 22848  00340A  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22849  00340C  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 22850  00340E  51D3               	movf	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 22851  003410  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22852  003412  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 22853                           
 22854                           ;eusartparser.c: 370:             var_sys_NVM.learningTimeToClose=var_sys_NVM.learningTi
      +                          meToClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22855  003414  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22856  003416  6E17               	movwf	??_write_eusartparser^0,c
 22857  003418  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22858  00341A  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22859  00341C  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22860  00341E  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22861  003420  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22862  003424  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22863  003428  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22864  00342A  6A17               	clrf	??_write_eusartparser^0,c
 22865  00342C  1C17               	comf	??_write_eusartparser^0,w,c
 22866  00342E  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22867  003430  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22868  003432  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22869  003434  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22870  003436  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22871  003438  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22872  00343A  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22873  00343C  51D0               	movf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 22874  00343E  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22875  003440  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 22876  003442  51D1               	movf	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 22877  003444  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22878  003446  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 22879  003448  51D2               	movf	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 22880  00344A  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22881  00344C  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 22882  00344E  51D3               	movf	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 22883  003450  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22884  003452  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 22885                           
 22886                           ;eusartparser.c: 371:             break;
 22887  003454  0012               	return	
 22888  003456                     l24607:
 22889                           
 22890                           ; BSR set to: 0
 22891                           ;eusartparser.c: 373:             var_sys_NVM.learningTimeToClose=var_sys_NVM.learningTi
      +                          meToClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22892  003456  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22893  003458  11D0               	iorwf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 22894  00345A  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 22895  00345C  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22896  00345E  11D1               	iorwf	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 22897  003460  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 22898  003462  0E00               	movlw	0
 22899  003464  11D2               	iorwf	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 22900  003466  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 22901  003468  0E00               	movlw	0
 22902  00346A  11D3               	iorwf	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 22903  00346C  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 22904                           
 22905                           ;eusartparser.c: 374:             var_sys_NVM.learningTimeToClose=var_sys_NVM.learningTi
      +                          meToClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22906  00346E  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22907  003470  6E17               	movwf	??_write_eusartparser^0,c
 22908  003472  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22909  003474  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22910  003476  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22911  003478  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22912  00347A  1C17               	comf	??_write_eusartparser^0,w,c
 22913  00347C  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22914  00347E  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22915  003480  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22916  003482  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22917  003484  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22918  003486  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22919  003488  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22920  00348A  51D0               	movf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 22921  00348C  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22922  00348E  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 22923  003490  51D1               	movf	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 22924  003492  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22925  003494  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 22926  003496  51D2               	movf	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 22927  003498  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22928  00349A  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 22929  00349C  51D3               	movf	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 22930  00349E  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22931  0034A0  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 22932                           
 22933                           ;eusartparser.c: 375:             break;
 22934  0034A2  0012               	return	
 22935  0034A4                     l24611:
 22936                           
 22937                           ; BSR set to: 0
 22938  0034A4  5011               	movf	(write_eusartparser@package+1)^0,w,c
 22939  0034A6  6E17               	movwf	??_write_eusartparser^0,c
 22940  0034A8  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22941                           
 22942                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22943                           ; Switch size 1, requested type "simple"
 22944                           ; Number of cases is 1, Range of values is 0 to 0
 22945                           ; switch strategies available:
 22946                           ; Name         Instructions Cycles
 22947                           ; simple_byte            4     3 (average)
 22948                           ;	Chosen strategy is simple_byte
 22949  0034AA  5018               	movf	(??_write_eusartparser+1)^0,w,c
 22950  0034AC  0A00               	xorlw	0	; case 0
 22951  0034AE  A4D8               	btfss	status,2,c
 22952  0034B0  0012               	return	
 22953                           
 22954                           ; BSR set to: 0
 22955                           ; Switch size 1, requested type "simple"
 22956                           ; Number of cases is 43, Range of values is 0 to 51
 22957                           ; switch strategies available:
 22958                           ; Name         Instructions Cycles
 22959                           ; simple_byte          130    66 (average)
 22960                           ;	Chosen strategy is simple_byte
 22961  0034B2  5017               	movf	??_write_eusartparser^0,w,c
 22962  0034B4  0A00               	xorlw	0	; case 0
 22963  0034B6  B4D8               	btfsc	status,2,c
 22964  0034B8  D5B5               	goto	l3623
 22965  0034BA  0A02               	xorlw	2	; case 2
 22966  0034BC  B4D8               	btfsc	status,2,c
 22967  0034BE  D5BF               	goto	l3628
 22968  0034C0  0A01               	xorlw	1	; case 3
 22969  0034C2  B4D8               	btfsc	status,2,c
 22970  0034C4  D5E5               	goto	l3642
 22971  0034C6  0A06               	xorlw	6	; case 5
 22972  0034C8  B4D8               	btfsc	status,2,c
 22973  0034CA  D5BE               	goto	l3630
 22974  0034CC  0A02               	xorlw	2	; case 7
 22975  0034CE  B4D8               	btfsc	status,2,c
 22976  0034D0  D5D7               	goto	l3639
 22977  0034D2  0A0F               	xorlw	15	; case 8
 22978  0034D4  B4D8               	btfsc	status,2,c
 22979  0034D6  D5EB               	goto	l3649
 22980  0034D8  0A02               	xorlw	2	; case 10
 22981  0034DA  B4D8               	btfsc	status,2,c
 22982  0034DC  D5DC               	goto	l3644
 22983  0034DE  0A1A               	xorlw	26	; case 16
 22984  0034E0  B4D8               	btfsc	status,2,c
 22985  0034E2  D5A0               	goto	l3623
 22986  0034E4  0A01               	xorlw	1	; case 17
 22987  0034E6  B4D8               	btfsc	status,2,c
 22988  0034E8  D5A2               	goto	l3625
 22989  0034EA  0A03               	xorlw	3	; case 18
 22990  0034EC  B4D8               	btfsc	status,2,c
 22991  0034EE  D5A4               	goto	l3626
 22992  0034F0  0A01               	xorlw	1	; case 19
 22993  0034F2  B4D8               	btfsc	status,2,c
 22994  0034F4  D5A4               	goto	l3628
 22995  0034F6  0A07               	xorlw	7	; case 20
 22996  0034F8  B4D8               	btfsc	status,2,c
 22997  0034FA  D5A6               	goto	l3630
 22998  0034FC  0A01               	xorlw	1	; case 21
 22999  0034FE  B4D8               	btfsc	status,2,c
 23000  003500  D5A8               	goto	l3631
 23001  003502  0A03               	xorlw	3	; case 22
 23002  003504  B4D8               	btfsc	status,2,c
 23003  003506  D5AA               	goto	l3632
 23004  003508  0A01               	xorlw	1	; case 23
 23005  00350A  B4D8               	btfsc	status,2,c
 23006  00350C  D5AA               	goto	l3633
 23007  00350E  0A0F               	xorlw	15	; case 24
 23008  003510  B4D8               	btfsc	status,2,c
 23009  003512  D5AA               	goto	l3634
 23010  003514  0A01               	xorlw	1	; case 25
 23011  003516  B4D8               	btfsc	status,2,c
 23012  003518  D5AA               	goto	l3635
 23013  00351A  0A03               	xorlw	3	; case 26
 23014  00351C  B4D8               	btfsc	status,2,c
 23015  00351E  D5AA               	goto	l3636
 23016  003520  0A01               	xorlw	1	; case 27
 23017  003522  B4D8               	btfsc	status,2,c
 23018  003524  D5AA               	goto	l3637
 23019  003526  0A07               	xorlw	7	; case 28
 23020  003528  B4D8               	btfsc	status,2,c
 23021  00352A  D5AA               	goto	l3639
 23022  00352C  0A01               	xorlw	1	; case 29
 23023  00352E  B4D8               	btfsc	status,2,c
 23024  003530  D5AA               	goto	l3640
 23025  003532  0A03               	xorlw	3	; case 30
 23026  003534  B4D8               	btfsc	status,2,c
 23027  003536  D5AC               	goto	l3642
 23028  003538  0A01               	xorlw	1	; case 31
 23029  00353A  B4D8               	btfsc	status,2,c
 23030  00353C  D5AC               	goto	l3644
 23031  00353E  0A3F               	xorlw	63	; case 32
 23032  003540  B4D8               	btfsc	status,2,c
 23033  003542  D5AC               	goto	l3645
 23034  003544  0A01               	xorlw	1	; case 33
 23035  003546  B4D8               	btfsc	status,2,c
 23036  003548  D5AC               	goto	l3646
 23037  00354A  0A03               	xorlw	3	; case 34
 23038  00354C  B4D8               	btfsc	status,2,c
 23039  00354E  D5AC               	goto	l3647
 23040  003550  0A01               	xorlw	1	; case 35
 23041  003552  B4D8               	btfsc	status,2,c
 23042  003554  D5AC               	goto	l3649
 23043  003556  0A07               	xorlw	7	; case 36
 23044  003558  B4D8               	btfsc	status,2,c
 23045  00355A  D5AC               	goto	l3650
 23046  00355C  0A01               	xorlw	1	; case 37
 23047  00355E  B4D8               	btfsc	status,2,c
 23048  003560  D5AC               	goto	l3651
 23049  003562  0A03               	xorlw	3	; case 38
 23050  003564  B4D8               	btfsc	status,2,c
 23051  003566  D5AC               	goto	l3652
 23052  003568  0A01               	xorlw	1	; case 39
 23053  00356A  B4D8               	btfsc	status,2,c
 23054  00356C  D5AE               	goto	l24589
 23055  00356E  0A0F               	xorlw	15	; case 40
 23056  003570  B4D8               	btfsc	status,2,c
 23057  003572  D5E4               	goto	l24591
 23058  003574  0A01               	xorlw	1	; case 41
 23059  003576  B4D8               	btfsc	status,2,c
 23060  003578  D608               	goto	l3655
 23061  00357A  0A03               	xorlw	3	; case 42
 23062  00357C  B4D8               	btfsc	status,2,c
 23063  00357E  D608               	goto	l24593
 23064  003580  0A01               	xorlw	1	; case 43
 23065  003582  B4D8               	btfsc	status,2,c
 23066  003584  D63E               	goto	l24595
 23067  003586  0A07               	xorlw	7	; case 44
 23068  003588  B4D8               	btfsc	status,2,c
 23069  00358A  D662               	goto	l24597
 23070  00358C  0A01               	xorlw	1	; case 45
 23071  00358E  B4D8               	btfsc	status,2,c
 23072  003590  D698               	goto	l24599
 23073  003592  0A03               	xorlw	3	; case 46
 23074  003594  B4D8               	btfsc	status,2,c
 23075  003596  D6BC               	goto	l3660
 23076  003598  0A01               	xorlw	1	; case 47
 23077  00359A  B4D8               	btfsc	status,2,c
 23078  00359C  D6BE               	goto	l3661
 23079  00359E  0A1F               	xorlw	31	; case 48
 23080  0035A0  B4D8               	btfsc	status,2,c
 23081  0035A2  D6C0               	goto	l24601
 23082  0035A4  0A01               	xorlw	1	; case 49
 23083  0035A6  B4D8               	btfsc	status,2,c
 23084  0035A8  D6F6               	goto	l24603
 23085  0035AA  0A03               	xorlw	3	; case 50
 23086  0035AC  B4D8               	btfsc	status,2,c
 23087  0035AE  D71A               	goto	l24605
 23088  0035B0  0A01               	xorlw	1	; case 51
 23089  0035B2  A4D8               	btfss	status,2,c
 23090  0035B4  0012               	return	
 23091  0035B6  D74F               	goto	l24607
 23092  0035B8                     __end_of_write_eusartparser:
 23093                           	callstack 0
 23094                           
 23095 ;; *************** function _validateRemoteSerialNumber *****************
 23096 ;; Defined at:
 23097 ;;		line 27 in file "controlMemory_MC50.c"
 23098 ;; Parameters:    Size  Location     Type
 23099 ;;  serial          4   45[COMRAM] unsigned long 
 23100 ;;  VerifyOnlySe    1   49[COMRAM] enum E10564
 23101 ;;  position        2   50[COMRAM] PTR unsigned char 
 23102 ;;		 -> eusartparser@pos(1), controlSelectRemote@pos(1), classic_data(16), 
 23103 ;; Auto vars:     Size  Location     Type
 23104 ;;  mask            4   52[COMRAM] unsigned long 
 23105 ;;  i               1   57[COMRAM] unsigned char 
 23106 ;;  j               1   56[COMRAM] unsigned char 
 23107 ;; Return value:  Size  Location     Type
 23108 ;;                  1    wreg      enum E10539
 23109 ;; Registers used:
 23110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23111 ;; Tracked objects:
 23112 ;;		On entry : 3F/0
 23113 ;;		On exit  : 3F/0
 23114 ;;		Unchanged: 0/0
 23115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23116 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23117 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23118 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23119 ;;      Totals:        13       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23120 ;;Total ram usage:       21 bytes
 23121 ;; Hardware stack levels used: 1
 23122 ;; Hardware stack levels required when called: 13
 23123 ;; This function calls:
 23124 ;;		_i2c_readDataBlock
 23125 ;; This function is called by:
 23126 ;;		_keeloqDecryptPacket
 23127 ;;		_DecryptPacket_12BIT
 23128 ;;		_controlSelectRemote
 23129 ;;		_eusartparser
 23130 ;; This function uses a non-reentrant model
 23131 ;;
 23132                           
 23133                           	psect	text76
 23134  00624C                     __ptext76:
 23135                           	callstack 0
 23136  00624C                     _validateRemoteSerialNumber:
 23137                           	callstack 14
 23138                           
 23139                           ; BSR set to: 0
 23140                           ;controlMemory_MC50.c: 29:     char j=0;
 23141                           
 23142                           ; BSR set to: 0
 23143                           ;incstack = 0
 23144  00624C  0E00               	movlw	0
 23145  00624E  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 23146                           
 23147                           ; BSR set to: 0
 23148                           ;controlMemory_MC50.c: 30:     unsigned long mask;;controlMemory_MC50.c: 33:     if(Veri
      +                          fyOnlySerial==YES)
 23149  006250  0432               	decf	validateRemoteSerialNumber@VerifyOnlySerial^0,w,c
 23150  006252  A4D8               	btfss	status,2,c
 23151  006254  D009               	goto	l1436
 23152                           
 23153                           ; BSR set to: 0
 23154                           ;controlMemory_MC50.c: 34:     {;controlMemory_MC50.c: 35:         mask=0x0FFFFFFF;
 23155  006256  0EFF               	movlw	255
 23156  006258  6E35               	movwf	validateRemoteSerialNumber@mask^0,c
 23157  00625A  0EFF               	movlw	255
 23158  00625C  6E36               	movwf	(validateRemoteSerialNumber@mask+1)^0,c
 23159  00625E  0EFF               	movlw	255
 23160  006260  6E37               	movwf	(validateRemoteSerialNumber@mask+2)^0,c
 23161  006262  0E0F               	movlw	15
 23162  006264  6E38               	movwf	(validateRemoteSerialNumber@mask+3)^0,c
 23163                           
 23164                           ;controlMemory_MC50.c: 36:     }
 23165  006266  D004               	goto	l20793
 23166  006268                     l1436:
 23167                           
 23168                           ; BSR set to: 0
 23169                           ;controlMemory_MC50.c: 38:     {;controlMemory_MC50.c: 39:         mask=0xFFFFFFFF;
 23170  006268  6835               	setf	validateRemoteSerialNumber@mask^0,c
 23171  00626A  6836               	setf	(validateRemoteSerialNumber@mask+1)^0,c
 23172  00626C  6837               	setf	(validateRemoteSerialNumber@mask+2)^0,c
 23173  00626E  6838               	setf	(validateRemoteSerialNumber@mask+3)^0,c
 23174  006270                     l20793:
 23175                           
 23176                           ; BSR set to: 0
 23177                           ;controlMemory_MC50.c: 42:     for (i=0;i<var_sys_NVM.positionRemotesFull;i++)
 23178  006270  0E00               	movlw	0
 23179  006272  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 23180  006274  D056               	goto	l20811
 23181  006276                     l20795:
 23182                           
 23183                           ; BSR set to: 0
 23184                           ;controlMemory_MC50.c: 43:     {;controlMemory_MC50.c: 44:         if(i%4==0)
 23185  006276  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 23186  00627A  0E03               	movlw	3
 23187  00627C  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 23188  00627E  A4D8               	btfss	status,2,c
 23189  006280  D01C               	goto	l20801
 23190                           
 23191                           ; BSR set to: 0
 23192                           ;controlMemory_MC50.c: 45:         {;controlMemory_MC50.c: 46:             j=0;
 23193  006282  0E00               	movlw	0
 23194  006284  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 23195                           
 23196                           ; BSR set to: 0
 23197                           ;controlMemory_MC50.c: 48:             i2c_readDataBlock(0x50, (uint16_t)(0x0200 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 23198  006286  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 23199  006288  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 23200  00628A  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 23201  00628C  90D8               	bcf	status,0,c
 23202  00628E  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 23203  006290  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 23204  006292  90D8               	bcf	status,0,c
 23205  006294  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 23206  006296  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 23207  006298  0E00               	movlw	0
 23208  00629A  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 23209  00629C  6E22               	movwf	i2c_readDataBlock@reg^0,c
 23210  00629E  0E02               	movlw	2
 23211  0062A0  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 23212  0062A2  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 23213  0062A4  0EA2               	movlw	low _memoryTEMP
 23214  0062A6  6E24               	movwf	i2c_readDataBlock@data^0,c
 23215  0062A8  0E02               	movlw	high _memoryTEMP
 23216  0062AA  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 23217  0062AC  0E00               	movlw	0
 23218  0062AE  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 23219  0062B0  0E10               	movlw	16
 23220  0062B2  6E26               	movwf	i2c_readDataBlock@len^0,c
 23221  0062B4  0E50               	movlw	80
 23222  0062B6  EC1A  F045         	call	_i2c_readDataBlock
 23223  0062BA                     l20801:
 23224                           
 23225                           ;controlMemory_MC50.c: 50:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 23226  0062BA  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 23227  0062BC  0D04               	mullw	4
 23228  0062BE  0EA2               	movlw	low _memoryTEMP
 23229  0062C0  24F3               	addwf	243,w,c
 23230  0062C2  6ED9               	movwf	fsr2l,c
 23231  0062C4  0E02               	movlw	high _memoryTEMP
 23232  0062C6  20F4               	addwfc	prodh,w,c
 23233  0062C8  6EDA               	movwf	fsr2h,c
 23234  0062CA  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 23235  0062CE  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 23236  0062D2  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 23237  0062D6  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 23238  0062DA  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 23239  0062DC  0100               	movlb	0	; () banked
 23240  0062DE  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 23241  0062E0  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 23242  0062E2  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 23243  0062E4  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 23244  0062E6  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 23245  0062E8  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 23246  0062EA  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 23247  0062EC  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 23248  0062EE  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 23249  0062F0  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 23250  0062F2  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 23251  0062F4  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 23252  0062F6  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 23253  0062F8  E112               	bnz	l20809
 23254  0062FA  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 23255  0062FC  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 23256  0062FE  E10F               	bnz	l20809
 23257  006300  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 23258  006302  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 23259  006304  E10C               	bnz	l20809
 23260  006306  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 23261  006308  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 23262  00630A  A4D8               	btfss	status,2,c
 23263  00630C  D008               	goto	l20809
 23264                           
 23265                           ; BSR set to: 0
 23266                           ;controlMemory_MC50.c: 51:         {;controlMemory_MC50.c: 53:             position[0]=i
      +                          ;
 23267  00630E  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 23268  006312  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 23269  006316  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 23270                           
 23271                           ; BSR set to: 0
 23272                           ;controlMemory_MC50.c: 54:             return TypeFull;
 23273  00631A  0E01               	movlw	1
 23274  00631C  0012               	return	
 23275  00631E                     l20809:
 23276                           
 23277                           ; BSR set to: 0
 23278                           ;controlMemory_MC50.c: 57:         j++;
 23279  00631E  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 23280                           
 23281                           ;controlMemory_MC50.c: 59:     }
 23282  006320  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 23283  006322                     l20811:
 23284                           
 23285                           ; BSR set to: 0
 23286  006322  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 23287  006324  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 23288  006326  A0D8               	btfss	status,0,c
 23289  006328  D7A6               	goto	l20795
 23290                           
 23291                           ; BSR set to: 0
 23292                           ;controlMemory_MC50.c: 61:     for (i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 23293  00632A  0E00               	movlw	0
 23294  00632C  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 23295  00632E  D056               	goto	l20831
 23296  006330                     l20815:
 23297                           
 23298                           ; BSR set to: 0
 23299                           ;controlMemory_MC50.c: 62:     {;controlMemory_MC50.c: 63:         if(i%4==0)
 23300  006330  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 23301  006334  0E03               	movlw	3
 23302  006336  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 23303  006338  A4D8               	btfss	status,2,c
 23304  00633A  D01C               	goto	l20821
 23305                           
 23306                           ; BSR set to: 0
 23307                           ;controlMemory_MC50.c: 64:         {;controlMemory_MC50.c: 65:             j=0;
 23308  00633C  0E00               	movlw	0
 23309  00633E  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 23310                           
 23311                           ; BSR set to: 0
 23312                           ;controlMemory_MC50.c: 66:             i2c_readDataBlock(0x50, (uint16_t)(0x0500 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 23313  006340  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 23314  006342  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 23315  006344  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 23316  006346  90D8               	bcf	status,0,c
 23317  006348  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 23318  00634A  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 23319  00634C  90D8               	bcf	status,0,c
 23320  00634E  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 23321  006350  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 23322  006352  0E00               	movlw	0
 23323  006354  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 23324  006356  6E22               	movwf	i2c_readDataBlock@reg^0,c
 23325  006358  0E05               	movlw	5
 23326  00635A  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 23327  00635C  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 23328  00635E  0EA2               	movlw	low _memoryTEMP
 23329  006360  6E24               	movwf	i2c_readDataBlock@data^0,c
 23330  006362  0E02               	movlw	high _memoryTEMP
 23331  006364  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 23332  006366  0E00               	movlw	0
 23333  006368  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 23334  00636A  0E10               	movlw	16
 23335  00636C  6E26               	movwf	i2c_readDataBlock@len^0,c
 23336  00636E  0E50               	movlw	80
 23337  006370  EC1A  F045         	call	_i2c_readDataBlock
 23338  006374                     l20821:
 23339                           
 23340                           ;controlMemory_MC50.c: 69:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 23341  006374  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 23342  006376  0D04               	mullw	4
 23343  006378  0EA2               	movlw	low _memoryTEMP
 23344  00637A  24F3               	addwf	243,w,c
 23345  00637C  6ED9               	movwf	fsr2l,c
 23346  00637E  0E02               	movlw	high _memoryTEMP
 23347  006380  20F4               	addwfc	prodh,w,c
 23348  006382  6EDA               	movwf	fsr2h,c
 23349  006384  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 23350  006388  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 23351  00638C  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 23352  006390  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 23353  006394  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 23354  006396  0100               	movlb	0	; () banked
 23355  006398  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 23356  00639A  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 23357  00639C  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 23358  00639E  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 23359  0063A0  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 23360  0063A2  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 23361  0063A4  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 23362  0063A6  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 23363  0063A8  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 23364  0063AA  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 23365  0063AC  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 23366  0063AE  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 23367  0063B0  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 23368  0063B2  E112               	bnz	l20829
 23369  0063B4  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 23370  0063B6  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 23371  0063B8  E10F               	bnz	l20829
 23372  0063BA  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 23373  0063BC  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 23374  0063BE  E10C               	bnz	l20829
 23375  0063C0  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 23376  0063C2  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 23377  0063C4  A4D8               	btfss	status,2,c
 23378  0063C6  D008               	goto	l20829
 23379                           
 23380                           ; BSR set to: 0
 23381                           ;controlMemory_MC50.c: 70:         {;controlMemory_MC50.c: 72:             position[0]=i
      +                          ;
 23382  0063C8  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 23383  0063CC  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 23384  0063D0  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 23385                           
 23386                           ; BSR set to: 0
 23387                           ;controlMemory_MC50.c: 73:             return TypeWalk;
 23388  0063D4  0E02               	movlw	2
 23389  0063D6  0012               	return	
 23390  0063D8                     l20829:
 23391                           
 23392                           ; BSR set to: 0
 23393                           ;controlMemory_MC50.c: 75:         j++;
 23394  0063D8  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 23395                           
 23396                           ;controlMemory_MC50.c: 76:     }
 23397  0063DA  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 23398  0063DC                     l20831:
 23399                           
 23400                           ; BSR set to: 0
 23401  0063DC  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 23402  0063DE  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 23403  0063E0  A0D8               	btfss	status,0,c
 23404  0063E2  D7A6               	goto	l20815
 23405                           
 23406                           ; BSR set to: 0
 23407                           ;controlMemory_MC50.c: 78:     return NoCMD;
 23408  0063E4  0E00               	movlw	0
 23409                           
 23410                           ; BSR set to: 0
 23411  0063E6  0012               	return		;funcret
 23412  0063E8                     __end_of_validateRemoteSerialNumber:
 23413                           	callstack 0
 23414                           
 23415 ;; *************** function _updateChangesToUart *****************
 23416 ;; Defined at:
 23417 ;;		line 725 in file "eusartparser.c"
 23418 ;; Parameters:    Size  Location     Type
 23419 ;;		None
 23420 ;; Auto vars:     Size  Location     Type
 23421 ;;  i               1   27[COMRAM] unsigned char 
 23422 ;;  package         7   28[COMRAM] struct package_t
 23423 ;; Return value:  Size  Location     Type
 23424 ;;                  1    wreg      void 
 23425 ;; Registers used:
 23426 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23427 ;; Tracked objects:
 23428 ;;		On entry : 3E/1
 23429 ;;		On exit  : 0/0
 23430 ;;		Unchanged: 0/0
 23431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23433 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23435 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23436 ;;Total ram usage:        8 bytes
 23437 ;; Hardware stack levels used: 1
 23438 ;; Hardware stack levels required when called: 7
 23439 ;; This function calls:
 23440 ;;		_confirmpackage
 23441 ;;		_init_package
 23442 ;;		_read_eusartparser
 23443 ;;		_write_package
 23444 ;; This function is called by:
 23445 ;;		_eusartparser
 23446 ;; This function uses a non-reentrant model
 23447 ;;
 23448                           
 23449                           	psect	text77
 23450  008AAA                     __ptext77:
 23451                           	callstack 0
 23452  008AAA                     _updateChangesToUart:
 23453                           	callstack 22
 23454                           
 23455                           ;eusartparser.c: 726:     struct package_t package;;eusartparser.c: 727:     init_packag
      +                          e(&package);
 23456                           
 23457                           ; BSR set to: 0
 23458                           ;incstack = 0
 23459  008AAA  0E1D               	movlw	low updateChangesToUart@package
 23460  008AAC  6E10               	movwf	init_package@package^0,c
 23461  008AAE  6A11               	clrf	(init_package@package+1)^0,c
 23462  008AB0  EC39  F04C         	call	_init_package	;wreg free
 23463                           
 23464                           ;eusartparser.c: 728:     package.functioncode=0x12;
 23465  008AB4  0E12               	movlw	18
 23466  008AB6  6E1D               	movwf	updateChangesToUart@package^0,c
 23467                           
 23468                           ;eusartparser.c: 729:     package.address=0x00;
 23469  008AB8  0E00               	movlw	0
 23470  008ABA  6E1E               	movwf	(updateChangesToUart@package+1)^0,c
 23471                           
 23472                           ;eusartparser.c: 730:     package.data.data16=0x0000;
 23473  008ABC  0E00               	movlw	0
 23474  008ABE  6E20               	movwf	(updateChangesToUart@package+3)^0,c
 23475  008AC0  0E00               	movlw	0
 23476  008AC2  6E1F               	movwf	(updateChangesToUart@package+2)^0,c
 23477                           
 23478                           ;eusartparser.c: 731:     write_package(package);
 23479  008AC4  EE20  F01D         	lfsr	2,updateChangesToUart@package
 23480  008AC8  EE00  F011         	lfsr	0,write_package@package
 23481  008ACC  0E06               	movlw	6
 23482  008ACE                     u33691:
 23483  008ACE  CFDB FFEB          	movff	plusw2,plusw0
 23484  008AD2  06E8               	decf	wreg,f,c
 23485  008AD4  E2FC               	bc	u33691
 23486  008AD6  ECB0  F04C         	call	_write_package	;wreg free
 23487                           
 23488                           ;eusartparser.c: 732:     package.functioncode=0x00;
 23489  008ADA  0E00               	movlw	0
 23490  008ADC  6E1D               	movwf	updateChangesToUart@package^0,c
 23491                           
 23492                           ;eusartparser.c: 733:     for (uint8_t i=0x00;i<=0x3A;i++){
 23493  008ADE  0E00               	movlw	0
 23494  008AE0  6E1C               	movwf	updateChangesToUart@i^0,c
 23495  008AE2                     l3801:
 23496                           
 23497                           ;eusartparser.c: 734:         package.address=i;
 23498  008AE2  C01C  F01E         	movff	updateChangesToUart@i,updateChangesToUart@package+1
 23499                           
 23500                           ;eusartparser.c: 735:         read_eusartparser(&package);
 23501  008AE6  0E1D               	movlw	low updateChangesToUart@package
 23502  008AE8  6E18               	movwf	read_eusartparser@package^0,c
 23503  008AEA  6A19               	clrf	(read_eusartparser@package+1)^0,c
 23504  008AEC  ECC4  F014         	call	_read_eusartparser	;wreg free
 23505                           
 23506                           ;eusartparser.c: 736:     }
 23507  008AF0  2A1C               	incf	updateChangesToUart@i^0,f,c
 23508  008AF2  0E3A               	movlw	58
 23509  008AF4  641C               	cpfsgt	updateChangesToUart@i^0,c
 23510  008AF6  D7F5               	goto	l3801
 23511                           
 23512                           ;eusartparser.c: 737:     confirmpackage(&package, 1);
 23513  008AF8  0E1D               	movlw	low updateChangesToUart@package
 23514  008AFA  6E12               	movwf	confirmpackage@package^0,c
 23515  008AFC  6A13               	clrf	(confirmpackage@package+1)^0,c
 23516  008AFE  0E01               	movlw	1
 23517  008B00  6E14               	movwf	confirmpackage@confirm^0,c
 23518  008B02  EC66  F048         	call	_confirmpackage	;wreg free
 23519                           
 23520                           ;eusartparser.c: 738:     write_package(package);
 23521  008B06  EE20  F01D         	lfsr	2,updateChangesToUart@package
 23522  008B0A  EE00  F011         	lfsr	0,write_package@package
 23523  008B0E  0E06               	movlw	6
 23524  008B10                     u33711:
 23525  008B10  CFDB FFEB          	movff	plusw2,plusw0
 23526  008B14  06E8               	decf	wreg,f,c
 23527  008B16  E2FC               	bc	u33711
 23528  008B18  ECB0  F04C         	call	_write_package	;wreg free
 23529  008B1C  0012               	return		;funcret
 23530  008B1E                     __end_of_updateChangesToUart:
 23531                           	callstack 0
 23532                           
 23533 ;; *************** function _read_eusartparser *****************
 23534 ;; Defined at:
 23535 ;;		line 14 in file "eusartparser.c"
 23536 ;; Parameters:    Size  Location     Type
 23537 ;;  package         2   23[COMRAM] PTR struct package_t
 23538 ;;		 -> updateChangesToUart@package(7), main@package(7), 
 23539 ;; Auto vars:     Size  Location     Type
 23540 ;;		None
 23541 ;; Return value:  Size  Location     Type
 23542 ;;                  1    wreg      _Bool 
 23543 ;; Registers used:
 23544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23545 ;; Tracked objects:
 23546 ;;		On entry : 0/0
 23547 ;;		On exit  : 0/0
 23548 ;;		Unchanged: 0/0
 23549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23552 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23553 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23554 ;;Total ram usage:        4 bytes
 23555 ;; Hardware stack levels used: 1
 23556 ;; Hardware stack levels required when called: 6
 23557 ;; This function calls:
 23558 ;;		_write_package
 23559 ;; This function is called by:
 23560 ;;		_eusartparser
 23561 ;;		_updateChangesToUart
 23562 ;; This function uses a non-reentrant model
 23563 ;;
 23564                           
 23565                           	psect	text78
 23566  002988                     __ptext78:
 23567                           	callstack 0
 23568  002988                     _read_eusartparser:
 23569                           	callstack 22
 23570                           
 23571                           ;eusartparser.c: 15:     switch(package->address){
 23572                           
 23573                           ;incstack = 0
 23574  002988  D2B2               	goto	l27581
 23575  00298A                     l27417:
 23576                           
 23577                           ;eusartparser.c: 18:             package->data.data8[1]=var_sys_NVM.decelarationClose;
 23578  00298A  EE20 F003          	lfsr	2,3
 23579  00298E  5018               	movf	read_eusartparser@package^0,w,c
 23580  002990  26D9               	addwf	fsr2l,f,c
 23581  002992  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23582  002994  22DA               	addwfc	fsr2h,f,c
 23583  002996  C099  FFDF         	movff	_var_sys_NVM+1,indf2	;volatile
 23584                           
 23585                           ;eusartparser.c: 19:             package->data.data8[0]=var_sys_NVM.decelarationOpen;
 23586  00299A  EE20 F002          	lfsr	2,2
 23587  00299E  5018               	movf	read_eusartparser@package^0,w,c
 23588  0029A0  26D9               	addwf	fsr2l,f,c
 23589  0029A2  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23590  0029A4  22DA               	addwfc	fsr2h,f,c
 23591  0029A6  C098  FFDF         	movff	_var_sys_NVM,indf2	;volatile
 23592  0029AA                     l27419:
 23593                           
 23594                           ;eusartparser.c: 20:             write_package(*package);
 23595  0029AA  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23596  0029AE  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23597  0029B2  EE00  F011         	lfsr	0,write_package@package
 23598  0029B6  0E06               	movlw	6
 23599  0029B8                     u33551:
 23600  0029B8  CFDB FFEB          	movff	plusw2,plusw0
 23601  0029BC  06E8               	decf	wreg,f,c
 23602  0029BE  E2FC               	bc	u33551
 23603  0029C0  ECB0  F04C         	call	_write_package	;wreg free
 23604                           
 23605                           ;eusartparser.c: 21:             break;
 23606  0029C4  0012               	return	
 23607  0029C6                     l27421:
 23608                           
 23609                           ;eusartparser.c: 23:             package->data.data8[1]=var_sys_NVM.motorSensitivity;
 23610  0029C6  EE20 F003          	lfsr	2,3
 23611  0029CA  5018               	movf	read_eusartparser@package^0,w,c
 23612  0029CC  26D9               	addwf	fsr2l,f,c
 23613  0029CE  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23614  0029D0  22DA               	addwfc	fsr2h,f,c
 23615  0029D2  C09B  FFDF         	movff	_var_sys_NVM+3,indf2	;volatile
 23616                           
 23617                           ;eusartparser.c: 24:             package->data.data8[0]=var_sys_NVM.motorPower;
 23618  0029D6  EE20 F002          	lfsr	2,2
 23619  0029DA  5018               	movf	read_eusartparser@package^0,w,c
 23620  0029DC  26D9               	addwf	fsr2l,f,c
 23621  0029DE  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23622  0029E0  22DA               	addwfc	fsr2h,f,c
 23623  0029E2  C09A  FFDF         	movff	_var_sys_NVM+2,indf2	;volatile
 23624  0029E6  D7E1               	goto	l27419
 23625  0029E8                     l27425:
 23626                           
 23627                           ;eusartparser.c: 28:             package->data.data8[1]=var_sys_NVM.walkTime;
 23628  0029E8  EE20 F003          	lfsr	2,3
 23629  0029EC  5018               	movf	read_eusartparser@package^0,w,c
 23630  0029EE  26D9               	addwf	fsr2l,f,c
 23631  0029F0  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23632  0029F2  22DA               	addwfc	fsr2h,f,c
 23633  0029F4  C09C  FFDF         	movff	_var_sys_NVM+4,indf2	;volatile
 23634  0029F8  D22D               	goto	L101
 23635  0029FA                     l27429:
 23636                           
 23637                           ;eusartparser.c: 34:             package->data.data8[1]=var_sys_NVM.autoTimeWalkClose;
 23638  0029FA  EE20 F003          	lfsr	2,3
 23639  0029FE  5018               	movf	read_eusartparser@package^0,w,c
 23640  002A00  26D9               	addwf	fsr2l,f,c
 23641  002A02  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23642  002A04  22DA               	addwfc	fsr2h,f,c
 23643  002A06  C09E  FFDF         	movff	_var_sys_NVM+6,indf2	;volatile
 23644                           
 23645                           ;eusartparser.c: 35:             package->data.data8[0]=var_sys_NVM.autoTimeFullClose;
 23646  002A0A  EE20 F002          	lfsr	2,2
 23647  002A0E  5018               	movf	read_eusartparser@package^0,w,c
 23648  002A10  26D9               	addwf	fsr2l,f,c
 23649  002A12  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23650  002A14  22DA               	addwfc	fsr2h,f,c
 23651  002A16  C09D  FFDF         	movff	_var_sys_NVM+5,indf2	;volatile
 23652  002A1A  D7C7               	goto	l27419
 23653  002A1C                     l27433:
 23654                           
 23655                           ;eusartparser.c: 40:             package->data.data8[1]=var_sys_NVM.photoCellInOpen;
 23656  002A1C  EE20 F003          	lfsr	2,3
 23657  002A20  5018               	movf	read_eusartparser@package^0,w,c
 23658  002A22  26D9               	addwf	fsr2l,f,c
 23659  002A24  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23660  002A26  22DA               	addwfc	fsr2h,f,c
 23661  002A28  C0A0  FFDF         	movff	_var_sys_NVM+8,indf2	;volatile
 23662                           
 23663                           ;eusartparser.c: 41:             package->data.data8[0]=var_sys_NVM.photoCellIsON;
 23664  002A2C  EE20 F002          	lfsr	2,2
 23665  002A30  5018               	movf	read_eusartparser@package^0,w,c
 23666  002A32  26D9               	addwf	fsr2l,f,c
 23667  002A34  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23668  002A36  22DA               	addwfc	fsr2h,f,c
 23669  002A38  C09F  FFDF         	movff	_var_sys_NVM+7,indf2	;volatile
 23670  002A3C  D7B6               	goto	l27419
 23671  002A3E                     l27437:
 23672                           
 23673                           ;eusartparser.c: 45:             package->data.data8[1]=var_sys_NVM.securityBandType;
 23674  002A3E  EE20 F003          	lfsr	2,3
 23675  002A42  5018               	movf	read_eusartparser@package^0,w,c
 23676  002A44  26D9               	addwf	fsr2l,f,c
 23677  002A46  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23678  002A48  22DA               	addwfc	fsr2h,f,c
 23679  002A4A  C0A2  FFDF         	movff	_var_sys_NVM+10,indf2	;volatile
 23680                           
 23681                           ;eusartparser.c: 46:             package->data.data8[0]=var_sys_NVM.securityBandIsON;
 23682  002A4E  EE20 F002          	lfsr	2,2
 23683  002A52  5018               	movf	read_eusartparser@package^0,w,c
 23684  002A54  26D9               	addwf	fsr2l,f,c
 23685  002A56  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23686  002A58  22DA               	addwfc	fsr2h,f,c
 23687  002A5A  C0A1  FFDF         	movff	_var_sys_NVM+9,indf2	;volatile
 23688  002A5E  D7A5               	goto	l27419
 23689  002A60                     l27441:
 23690                           
 23691                           ;eusartparser.c: 50:             package->data.data8[1]=var_sys_NVM.securityBandInOpen;
 23692  002A60  EE20 F003          	lfsr	2,3
 23693  002A64  5018               	movf	read_eusartparser@package^0,w,c
 23694  002A66  26D9               	addwf	fsr2l,f,c
 23695  002A68  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23696  002A6A  22DA               	addwfc	fsr2h,f,c
 23697  002A6C  C0A3  FFDF         	movff	_var_sys_NVM+11,indf2	;volatile
 23698  002A70  D1F1               	goto	L101
 23699  002A72                     l27445:
 23700                           
 23701                           ;eusartparser.c: 55:             package->data.data8[1]=var_sys_NVM.operationMode;
 23702  002A72  EE20 F003          	lfsr	2,3
 23703  002A76  5018               	movf	read_eusartparser@package^0,w,c
 23704  002A78  26D9               	addwf	fsr2l,f,c
 23705  002A7A  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23706  002A7C  22DA               	addwfc	fsr2h,f,c
 23707  002A7E  C0A4  FFDF         	movff	_var_sys_NVM+12,indf2	;volatile
 23708  002A82  D1E8               	goto	L101
 23709  002A84                     l27449:
 23710                           
 23711                           ;eusartparser.c: 60:             package->data.data8[1]=var_sys_NVM.flashLightMode;
 23712  002A84  EE20 F003          	lfsr	2,3
 23713  002A88  5018               	movf	read_eusartparser@package^0,w,c
 23714  002A8A  26D9               	addwf	fsr2l,f,c
 23715  002A8C  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23716  002A8E  22DA               	addwfc	fsr2h,f,c
 23717  002A90  C0A5  FFDF         	movff	_var_sys_NVM+13,indf2	;volatile
 23718  002A94  D1DF               	goto	L101
 23719  002A96                     l27453:
 23720                           
 23721                           ;eusartparser.c: 65:             package->data.data8[1]=var_sys_NVM.programmingDistance;
 23722  002A96  EE20 F003          	lfsr	2,3
 23723  002A9A  5018               	movf	read_eusartparser@package^0,w,c
 23724  002A9C  26D9               	addwf	fsr2l,f,c
 23725  002A9E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23726  002AA0  22DA               	addwfc	fsr2h,f,c
 23727  002AA2  C0A6  FFDF         	movff	_var_sys_NVM+14,indf2	;volatile
 23728  002AA6  D1D6               	goto	L101
 23729  002AA8                     l27457:
 23730                           
 23731                           ;eusartparser.c: 70:             package->data.data8[1]=var_sys_NVM.decelarationSensivit
      +                          y;
 23732  002AA8  EE20 F003          	lfsr	2,3
 23733  002AAC  5018               	movf	read_eusartparser@package^0,w,c
 23734  002AAE  26D9               	addwf	fsr2l,f,c
 23735  002AB0  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23736  002AB2  22DA               	addwfc	fsr2h,f,c
 23737  002AB4  C0A7  FFDF         	movff	_var_sys_NVM+15,indf2	;volatile
 23738  002AB8  D1CD               	goto	L101
 23739  002ABA                     l27461:
 23740                           
 23741                           ;eusartparser.c: 76:             package->data.data8[1]=var_sys_NVM.homemPresente;
 23742  002ABA  EE20 F003          	lfsr	2,3
 23743  002ABE  5018               	movf	read_eusartparser@package^0,w,c
 23744  002AC0  26D9               	addwf	fsr2l,f,c
 23745  002AC2  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23746  002AC4  22DA               	addwfc	fsr2h,f,c
 23747  002AC6  C0A8  FFDF         	movff	_var_sys_NVM+16,indf2	;volatile
 23748  002ACA  D1C4               	goto	L101
 23749  002ACC                     l27465:
 23750                           
 23751                           ;eusartparser.c: 82:             package->data.data8[1]=var_sys_NVM.logicDigital;
 23752  002ACC  EE20 F003          	lfsr	2,3
 23753  002AD0  5018               	movf	read_eusartparser@package^0,w,c
 23754  002AD2  26D9               	addwf	fsr2l,f,c
 23755  002AD4  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23756  002AD6  22DA               	addwfc	fsr2h,f,c
 23757  002AD8  C0A9  FFDF         	movff	_var_sys_NVM+17,indf2	;volatile
 23758  002ADC  D1BB               	goto	L101
 23759  002ADE                     l27469:
 23760                           
 23761                           ;eusartparser.c: 87:             package->data.data8[1]=var_sys_NVM.softstop;
 23762  002ADE  EE20 F003          	lfsr	2,3
 23763  002AE2  5018               	movf	read_eusartparser@package^0,w,c
 23764  002AE4  26D9               	addwf	fsr2l,f,c
 23765  002AE6  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23766  002AE8  22DA               	addwfc	fsr2h,f,c
 23767  002AEA  C0AB  FFDF         	movff	_var_sys_NVM+19,indf2	;volatile
 23768                           
 23769                           ;eusartparser.c: 88:             package->data.data8[0]=var_sys_NVM.softStart;
 23770  002AEE  EE20 F002          	lfsr	2,2
 23771  002AF2  5018               	movf	read_eusartparser@package^0,w,c
 23772  002AF4  26D9               	addwf	fsr2l,f,c
 23773  002AF6  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23774  002AF8  22DA               	addwfc	fsr2h,f,c
 23775  002AFA  C0AA  FFDF         	movff	_var_sys_NVM+18,indf2	;volatile
 23776  002AFE  D755               	goto	l27419
 23777  002B00                     l27473:
 23778                           
 23779                           ;eusartparser.c: 93:             package->data.data8[1]=var_sys_NVM.ligthTime;
 23780  002B00  EE20 F003          	lfsr	2,3
 23781  002B04  5018               	movf	read_eusartparser@package^0,w,c
 23782  002B06  26D9               	addwf	fsr2l,f,c
 23783  002B08  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23784  002B0A  22DA               	addwfc	fsr2h,f,c
 23785  002B0C  C0AC  FFDF         	movff	_var_sys_NVM+20,indf2	;volatile
 23786  002B10  D1A1               	goto	L101
 23787  002B12                     l27477:
 23788                           
 23789                           ;eusartparser.c: 99:             package->data.data8[1]=var_sys_NVM.folow_me;
 23790  002B12  EE20 F003          	lfsr	2,3
 23791  002B16  5018               	movf	read_eusartparser@package^0,w,c
 23792  002B18  26D9               	addwf	fsr2l,f,c
 23793  002B1A  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23794  002B1C  22DA               	addwfc	fsr2h,f,c
 23795  002B1E  C0AD  FFDF         	movff	_var_sys_NVM+21,indf2	;volatile
 23796  002B22  D198               	goto	L101
 23797  002B24                     l27481:
 23798                           
 23799                           ;eusartparser.c: 104:             package->data.data8[1]=var_sys_NVM.Stopboton;
 23800  002B24  EE20 F003          	lfsr	2,3
 23801  002B28  5018               	movf	read_eusartparser@package^0,w,c
 23802  002B2A  26D9               	addwf	fsr2l,f,c
 23803  002B2C  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23804  002B2E  22DA               	addwfc	fsr2h,f,c
 23805  002B30  C0AE  FFDF         	movff	_var_sys_NVM+22,indf2	;volatile
 23806  002B34  D18F               	goto	L101
 23807  002B36                     l27485:
 23808                           
 23809                           ;eusartparser.c: 109:             package->data.data8[1]=var_sys_NVM.electricBrake;
 23810  002B36  EE20 F003          	lfsr	2,3
 23811  002B3A  5018               	movf	read_eusartparser@package^0,w,c
 23812  002B3C  26D9               	addwf	fsr2l,f,c
 23813  002B3E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23814  002B40  22DA               	addwfc	fsr2h,f,c
 23815  002B42  C0AF  FFDF         	movff	_var_sys_NVM+23,indf2	;volatile
 23816  002B46  D186               	goto	L101
 23817  002B48                     l27489:
 23818                           
 23819                           ;eusartparser.c: 114:             package->data.data8[1]=var_sys_NVM.velocityDecelaratio
      +                          n;
 23820  002B48  EE20 F003          	lfsr	2,3
 23821  002B4C  5018               	movf	read_eusartparser@package^0,w,c
 23822  002B4E  26D9               	addwf	fsr2l,f,c
 23823  002B50  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23824  002B52  22DA               	addwfc	fsr2h,f,c
 23825  002B54  C0B0  FFDF         	movff	_var_sys_NVM+24,indf2	;volatile
 23826  002B58  D17D               	goto	L101
 23827  002B5A                     l27493:
 23828                           
 23829                           ;eusartparser.c: 120:             package->data.data8[1]=var_sys_NVM.flashRGBMode;
 23830  002B5A  EE20 F003          	lfsr	2,3
 23831  002B5E  5018               	movf	read_eusartparser@package^0,w,c
 23832  002B60  26D9               	addwf	fsr2l,f,c
 23833  002B62  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23834  002B64  22DA               	addwfc	fsr2h,f,c
 23835  002B66  C0B1  FFDF         	movff	_var_sys_NVM+25,indf2	;volatile
 23836  002B6A  D174               	goto	L101
 23837  002B6C                     l27497:
 23838                           
 23839                           ;eusartparser.c: 125:             package->data.data8[1]=var_sys_NVM.Direction_motor;
 23840  002B6C  EE20 F003          	lfsr	2,3
 23841  002B70  5018               	movf	read_eusartparser@package^0,w,c
 23842  002B72  26D9               	addwf	fsr2l,f,c
 23843  002B74  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23844  002B76  22DA               	addwfc	fsr2h,f,c
 23845  002B78  C0B3  FFDF         	movff	_var_sys_NVM+27,indf2	;volatile
 23846  002B7C  D16B               	goto	L101
 23847  002B7E                     l27501:
 23848                           
 23849                           ;eusartparser.c: 130:             package->data.data8[1]=var_sys_NVM.TypeofMotor;
 23850  002B7E  EE20 F003          	lfsr	2,3
 23851  002B82  5018               	movf	read_eusartparser@package^0,w,c
 23852  002B84  26D9               	addwf	fsr2l,f,c
 23853  002B86  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23854  002B88  22DA               	addwfc	fsr2h,f,c
 23855  002B8A  C0B4  FFDF         	movff	_var_sys_NVM+28,indf2	;volatile
 23856  002B8E  D162               	goto	L101
 23857  002B90                     l27505:
 23858                           
 23859                           ;eusartparser.c: 135:             package->data.data8[1]=var_sys_NVM.positionRemotesWalk
      +                          ;
 23860  002B90  EE20 F003          	lfsr	2,3
 23861  002B94  5018               	movf	read_eusartparser@package^0,w,c
 23862  002B96  26D9               	addwf	fsr2l,f,c
 23863  002B98  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23864  002B9A  22DA               	addwfc	fsr2h,f,c
 23865  002B9C  C0B9  FFDF         	movff	_var_sys_NVM+33,indf2	;volatile
 23866                           
 23867                           ;eusartparser.c: 136:             package->data.data8[0]=var_sys_NVM.positionRemotesFull
      +                          ;
 23868  002BA0  EE20 F002          	lfsr	2,2
 23869  002BA4  5018               	movf	read_eusartparser@package^0,w,c
 23870  002BA6  26D9               	addwf	fsr2l,f,c
 23871  002BA8  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23872  002BAA  22DA               	addwfc	fsr2h,f,c
 23873  002BAC  C0B8  FFDF         	movff	_var_sys_NVM+32,indf2	;volatile
 23874  002BB0  D6FC               	goto	l27419
 23875  002BB2                     l27509:
 23876                           
 23877                           ;eusartparser.c: 140:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.count
      +                          erMoves))+1);
 23878  002BB2  EE20  F0BC         	lfsr	2,_var_sys_NVM+36
 23879  002BB6  EE10 F002          	lfsr	1,2
 23880  002BBA  5018               	movf	read_eusartparser@package^0,w,c
 23881  002BBC  26E1               	addwf	fsr1l,f,c
 23882  002BBE  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23883  002BC0  22E2               	addwfc	fsr1h,f,c
 23884  002BC2  CFDE FFE6          	movff	postinc2,postinc1
 23885  002BC6  CFDD FFE5          	movff	postdec2,postdec1
 23886                           
 23887                           ;eusartparser.c: 141:             write_package(*package);
 23888  002BCA  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23889  002BCE  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23890  002BD2  EE00  F011         	lfsr	0,write_package@package
 23891  002BD6  0E06               	movlw	6
 23892  002BD8                     u33561:
 23893  002BD8  CFDB FFEB          	movff	plusw2,plusw0
 23894  002BDC  06E8               	decf	wreg,f,c
 23895  002BDE  E2FC               	bc	u33561
 23896  002BE0  ECB0  F04C         	call	_write_package	;wreg free
 23897                           
 23898                           ;eusartparser.c: 142:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.count
      +                          erMoves))+0);
 23899  002BE4  EE20  F0BA         	lfsr	2,_var_sys_NVM+34
 23900  002BE8  EE10 F002          	lfsr	1,2
 23901  002BEC  5018               	movf	read_eusartparser@package^0,w,c
 23902  002BEE  26E1               	addwf	fsr1l,f,c
 23903  002BF0  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23904  002BF2  22E2               	addwfc	fsr1h,f,c
 23905  002BF4  CFDE FFE6          	movff	postinc2,postinc1
 23906  002BF8  CFDD FFE5          	movff	postdec2,postdec1
 23907                           
 23908                           ;eusartparser.c: 143:             write_package(*package);
 23909  002BFC  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23910  002C00  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23911  002C04  EE00  F011         	lfsr	0,write_package@package
 23912  002C08  0E06               	movlw	6
 23913  002C0A                     u33571:
 23914  002C0A  CFDB FFEB          	movff	plusw2,plusw0
 23915  002C0E  06E8               	decf	wreg,f,c
 23916  002C10  E2FC               	bc	u33571
 23917  002C12  ECB0  F04C         	call	_write_package	;wreg free
 23918                           
 23919                           ;eusartparser.c: 144:             break;
 23920  002C16  0012               	return	
 23921  002C18                     l27515:
 23922                           
 23923                           ;eusartparser.c: 146:             package->data.data8[1]=var_sys_NVM.OnlyRollingCode;
 23924  002C18  EE20 F003          	lfsr	2,3
 23925  002C1C  5018               	movf	read_eusartparser@package^0,w,c
 23926  002C1E  26D9               	addwf	fsr2l,f,c
 23927  002C20  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23928  002C22  22DA               	addwfc	fsr2h,f,c
 23929  002C24  C0BE  FFDF         	movff	_var_sys_NVM+38,indf2	;volatile
 23930  002C28  D115               	goto	L101
 23931  002C2A                     l27519:
 23932                           
 23933                           ;eusartparser.c: 151:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.learn
      +                          ingCurrentDecelarationClose))+1);
 23934  002C2A  EE20  F0C2         	lfsr	2,_var_sys_NVM+42
 23935  002C2E  EE10 F002          	lfsr	1,2
 23936  002C32  5018               	movf	read_eusartparser@package^0,w,c
 23937  002C34  26E1               	addwf	fsr1l,f,c
 23938  002C36  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23939  002C38  22E2               	addwfc	fsr1h,f,c
 23940  002C3A  CFDE FFE6          	movff	postinc2,postinc1
 23941  002C3E  CFDD FFE5          	movff	postdec2,postdec1
 23942                           
 23943                           ;eusartparser.c: 152:             write_package(*package);
 23944  002C42  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23945  002C46  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23946  002C4A  EE00  F011         	lfsr	0,write_package@package
 23947  002C4E  0E06               	movlw	6
 23948  002C50                     u33581:
 23949  002C50  CFDB FFEB          	movff	plusw2,plusw0
 23950  002C54  06E8               	decf	wreg,f,c
 23951  002C56  E2FC               	bc	u33581
 23952  002C58  ECB0  F04C         	call	_write_package	;wreg free
 23953                           
 23954                           ;eusartparser.c: 153:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.learn
      +                          ingCurrentDecelarationClose))+0);
 23955  002C5C  EE20  F0C0         	lfsr	2,_var_sys_NVM+40
 23956  002C60  EE10 F002          	lfsr	1,2
 23957  002C64  5018               	movf	read_eusartparser@package^0,w,c
 23958  002C66  26E1               	addwf	fsr1l,f,c
 23959  002C68  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23960  002C6A  22E2               	addwfc	fsr1h,f,c
 23961  002C6C  CFDE FFE6          	movff	postinc2,postinc1
 23962  002C70  CFDD FFE5          	movff	postdec2,postdec1
 23963                           
 23964                           ;eusartparser.c: 154:             write_package(*package);
 23965  002C74  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23966  002C78  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23967  002C7C  EE00  F011         	lfsr	0,write_package@package
 23968  002C80  0E06               	movlw	6
 23969  002C82                     u33591:
 23970  002C82  CFDB FFEB          	movff	plusw2,plusw0
 23971  002C86  06E8               	decf	wreg,f,c
 23972  002C88  E2FC               	bc	u33591
 23973  002C8A  ECB0  F04C         	call	_write_package	;wreg free
 23974                           
 23975                           ;eusartparser.c: 155:             break;
 23976  002C8E  0012               	return	
 23977  002C90                     l27525:
 23978                           
 23979                           ;eusartparser.c: 157:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.learn
      +                          ingCurrentDecelarationOpen))+1);
 23980  002C90  EE20  F0C6         	lfsr	2,_var_sys_NVM+46
 23981  002C94  EE10 F002          	lfsr	1,2
 23982  002C98  5018               	movf	read_eusartparser@package^0,w,c
 23983  002C9A  26E1               	addwf	fsr1l,f,c
 23984  002C9C  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23985  002C9E  22E2               	addwfc	fsr1h,f,c
 23986  002CA0  CFDE FFE6          	movff	postinc2,postinc1
 23987  002CA4  CFDD FFE5          	movff	postdec2,postdec1
 23988                           
 23989                           ;eusartparser.c: 158:             write_package(*package);
 23990  002CA8  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23991  002CAC  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23992  002CB0  EE00  F011         	lfsr	0,write_package@package
 23993  002CB4  0E06               	movlw	6
 23994  002CB6                     u33601:
 23995  002CB6  CFDB FFEB          	movff	plusw2,plusw0
 23996  002CBA  06E8               	decf	wreg,f,c
 23997  002CBC  E2FC               	bc	u33601
 23998  002CBE  ECB0  F04C         	call	_write_package	;wreg free
 23999                           
 24000                           ;eusartparser.c: 159:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.learn
      +                          ingCurrentDecelarationOpen))+0);
 24001  002CC2  EE20  F0C4         	lfsr	2,_var_sys_NVM+44
 24002  002CC6  EE10 F002          	lfsr	1,2
 24003  002CCA  5018               	movf	read_eusartparser@package^0,w,c
 24004  002CCC  26E1               	addwf	fsr1l,f,c
 24005  002CCE  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24006  002CD0  22E2               	addwfc	fsr1h,f,c
 24007  002CD2  CFDE FFE6          	movff	postinc2,postinc1
 24008  002CD6  CFDD FFE5          	movff	postdec2,postdec1
 24009                           
 24010                           ;eusartparser.c: 160:             write_package(*package);
 24011  002CDA  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 24012  002CDE  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 24013  002CE2  EE00  F011         	lfsr	0,write_package@package
 24014  002CE6  0E06               	movlw	6
 24015  002CE8                     u33611:
 24016  002CE8  CFDB FFEB          	movff	plusw2,plusw0
 24017  002CEC  06E8               	decf	wreg,f,c
 24018  002CEE  E2FC               	bc	u33611
 24019  002CF0  ECB0  F04C         	call	_write_package	;wreg free
 24020                           
 24021                           ;eusartparser.c: 161:             break;
 24022  002CF4  0012               	return	
 24023  002CF6                     l27531:
 24024                           
 24025                           ;eusartparser.c: 163:             package->data.data16=var_sys_NVM.learningCurrentNormal
      +                          Close;
 24026  002CF6  EE20 F002          	lfsr	2,2
 24027  002CFA  5018               	movf	read_eusartparser@package^0,w,c
 24028  002CFC  26D9               	addwf	fsr2l,f,c
 24029  002CFE  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24030  002D00  22DA               	addwfc	fsr2h,f,c
 24031  002D02  C0C8  FFDE         	movff	_var_sys_NVM+48,postinc2	;volatile
 24032  002D06  C0C9  FFDD         	movff	_var_sys_NVM+49,postdec2	;volatile
 24033  002D0A  D64F               	goto	l27419
 24034  002D0C                     l27535:
 24035                           
 24036                           ;eusartparser.c: 167:             package->data.data16=var_sys_NVM.learningCurrentNormal
      +                          Open;
 24037  002D0C  EE20 F002          	lfsr	2,2
 24038  002D10  5018               	movf	read_eusartparser@package^0,w,c
 24039  002D12  26D9               	addwf	fsr2l,f,c
 24040  002D14  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24041  002D16  22DA               	addwfc	fsr2h,f,c
 24042  002D18  C0CA  FFDE         	movff	_var_sys_NVM+50,postinc2	;volatile
 24043  002D1C  C0CB  FFDD         	movff	_var_sys_NVM+51,postdec2	;volatile
 24044  002D20  D644               	goto	l27419
 24045  002D22                     l27539:
 24046                           
 24047                           ;eusartparser.c: 171:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.learn
      +                          ingTimeToOpen))+1);
 24048  002D22  EE20  F0CE         	lfsr	2,_var_sys_NVM+54
 24049  002D26  EE10 F002          	lfsr	1,2
 24050  002D2A  5018               	movf	read_eusartparser@package^0,w,c
 24051  002D2C  26E1               	addwf	fsr1l,f,c
 24052  002D2E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24053  002D30  22E2               	addwfc	fsr1h,f,c
 24054  002D32  CFDE FFE6          	movff	postinc2,postinc1
 24055  002D36  CFDD FFE5          	movff	postdec2,postdec1
 24056                           
 24057                           ;eusartparser.c: 172:             write_package(*package);
 24058  002D3A  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 24059  002D3E  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 24060  002D42  EE00  F011         	lfsr	0,write_package@package
 24061  002D46  0E06               	movlw	6
 24062  002D48                     u33621:
 24063  002D48  CFDB FFEB          	movff	plusw2,plusw0
 24064  002D4C  06E8               	decf	wreg,f,c
 24065  002D4E  E2FC               	bc	u33621
 24066  002D50  ECB0  F04C         	call	_write_package	;wreg free
 24067                           
 24068                           ;eusartparser.c: 173:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.learn
      +                          ingTimeToOpen))+0);
 24069  002D54  EE20  F0CC         	lfsr	2,_var_sys_NVM+52
 24070  002D58  EE10 F002          	lfsr	1,2
 24071  002D5C  5018               	movf	read_eusartparser@package^0,w,c
 24072  002D5E  26E1               	addwf	fsr1l,f,c
 24073  002D60  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24074  002D62  22E2               	addwfc	fsr1h,f,c
 24075  002D64  CFDE FFE6          	movff	postinc2,postinc1
 24076  002D68  CFDD FFE5          	movff	postdec2,postdec1
 24077                           
 24078                           ;eusartparser.c: 174:             write_package(*package);
 24079  002D6C  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 24080  002D70  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 24081  002D74  EE00  F011         	lfsr	0,write_package@package
 24082  002D78  0E06               	movlw	6
 24083  002D7A                     u33631:
 24084  002D7A  CFDB FFEB          	movff	plusw2,plusw0
 24085  002D7E  06E8               	decf	wreg,f,c
 24086  002D80  E2FC               	bc	u33631
 24087  002D82  ECB0  F04C         	call	_write_package	;wreg free
 24088                           
 24089                           ;eusartparser.c: 175:             break;
 24090  002D86  0012               	return	
 24091  002D88                     l27545:
 24092                           
 24093                           ;eusartparser.c: 177:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.learn
      +                          ingTimeToClose))+1);
 24094  002D88  EE20  F0D2         	lfsr	2,_var_sys_NVM+58
 24095  002D8C  EE10 F002          	lfsr	1,2
 24096  002D90  5018               	movf	read_eusartparser@package^0,w,c
 24097  002D92  26E1               	addwf	fsr1l,f,c
 24098  002D94  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24099  002D96  22E2               	addwfc	fsr1h,f,c
 24100  002D98  CFDE FFE6          	movff	postinc2,postinc1
 24101  002D9C  CFDD FFE5          	movff	postdec2,postdec1
 24102                           
 24103                           ;eusartparser.c: 178:             write_package(*package);
 24104  002DA0  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 24105  002DA4  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 24106  002DA8  EE00  F011         	lfsr	0,write_package@package
 24107  002DAC  0E06               	movlw	6
 24108  002DAE                     u33641:
 24109  002DAE  CFDB FFEB          	movff	plusw2,plusw0
 24110  002DB2  06E8               	decf	wreg,f,c
 24111  002DB4  E2FC               	bc	u33641
 24112  002DB6  ECB0  F04C         	call	_write_package	;wreg free
 24113                           
 24114                           ;eusartparser.c: 179:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.learn
      +                          ingTimeToClose))+0);
 24115  002DBA  EE20  F0D0         	lfsr	2,_var_sys_NVM+56
 24116  002DBE  EE10 F002          	lfsr	1,2
 24117  002DC2  5018               	movf	read_eusartparser@package^0,w,c
 24118  002DC4  26E1               	addwf	fsr1l,f,c
 24119  002DC6  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24120  002DC8  22E2               	addwfc	fsr1h,f,c
 24121  002DCA  CFDE FFE6          	movff	postinc2,postinc1
 24122  002DCE  CFDD FFE5          	movff	postdec2,postdec1
 24123                           
 24124                           ;eusartparser.c: 180:             write_package(*package);
 24125  002DD2  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 24126  002DD6  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 24127  002DDA  EE00  F011         	lfsr	0,write_package@package
 24128  002DDE  0E06               	movlw	6
 24129  002DE0                     u33651:
 24130  002DE0  CFDB FFEB          	movff	plusw2,plusw0
 24131  002DE4  06E8               	decf	wreg,f,c
 24132  002DE6  E2FC               	bc	u33651
 24133  002DE8  ECB0  F04C         	call	_write_package	;wreg free
 24134                           
 24135                           ;eusartparser.c: 181:             break;
 24136  002DEC  0012               	return	
 24137  002DEE                     l27551:
 24138                           
 24139                           ;eusartparser.c: 186:             package->data.data8[1]=RFFull;
 24140  002DEE  EE20 F003          	lfsr	2,3
 24141  002DF2  5018               	movf	read_eusartparser@package^0,w,c
 24142  002DF4  26D9               	addwf	fsr2l,f,c
 24143  002DF6  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24144  002DF8  22DA               	addwfc	fsr2h,f,c
 24145  002DFA  C08B  FFDF         	movff	_RFFull,indf2	;volatile
 24146  002DFE  D02A               	goto	L101
 24147  002E00                     l27555:
 24148                           
 24149                           ;eusartparser.c: 192:             package->data.data8[1]=var_sys.photoCellIsObstructed;
 24150  002E00  EE20 F003          	lfsr	2,3
 24151  002E04  5018               	movf	read_eusartparser@package^0,w,c
 24152  002E06  26D9               	addwf	fsr2l,f,c
 24153  002E08  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24154  002E0A  22DA               	addwfc	fsr2h,f,c
 24155  002E0C  C101  FFDF         	movff	_var_sys+1,indf2	;volatile
 24156                           
 24157                           ;eusartparser.c: 193:             package->data.data8[0]=var_sys.SecurityBarIsObstructed
      +                          ;
 24158  002E10  EE20 F002          	lfsr	2,2
 24159  002E14  5018               	movf	read_eusartparser@package^0,w,c
 24160  002E16  26D9               	addwf	fsr2l,f,c
 24161  002E18  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24162  002E1A  22DA               	addwfc	fsr2h,f,c
 24163  002E1C  C102  FFDF         	movff	_var_sys+2,indf2	;volatile
 24164  002E20  D5C4               	goto	l27419
 24165  002E22                     l27559:
 24166                           
 24167                           ;eusartparser.c: 198:             package->data.data8[1]=var_sys.FimCurso_CloseIsEnabled
      +                          ;
 24168  002E22  EE20 F003          	lfsr	2,3
 24169  002E26  5018               	movf	read_eusartparser@package^0,w,c
 24170  002E28  26D9               	addwf	fsr2l,f,c
 24171  002E2A  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24172  002E2C  22DA               	addwfc	fsr2h,f,c
 24173  002E2E  C103  FFDF         	movff	_var_sys+3,indf2	;volatile
 24174                           
 24175                           ;eusartparser.c: 199:             package->data.data8[0]=var_sys.FimCurso_OpenIsEnabled;
 24176  002E32  EE20 F002          	lfsr	2,2
 24177  002E36  5018               	movf	read_eusartparser@package^0,w,c
 24178  002E38  26D9               	addwf	fsr2l,f,c
 24179  002E3A  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24180  002E3C  22DA               	addwfc	fsr2h,f,c
 24181  002E3E  C104  FFDF         	movff	_var_sys+4,indf2	;volatile
 24182  002E42  D5B3               	goto	l27419
 24183  002E44                     l27563:
 24184                           
 24185                           ;eusartparser.c: 204:             package->data.data8[1]=var_sys.Statedoorcontrol;
 24186  002E44  EE20 F003          	lfsr	2,3
 24187  002E48  5018               	movf	read_eusartparser@package^0,w,c
 24188  002E4A  26D9               	addwf	fsr2l,f,c
 24189  002E4C  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24190  002E4E  22DA               	addwfc	fsr2h,f,c
 24191  002E50  C11C  FFDF         	movff	_var_sys+28,indf2	;volatile
 24192  002E54                     L101:
 24193                           
 24194                           ;eusartparser.c: 205:             package->data.data8[0]=0x00;
 24195  002E54  EE20 F002          	lfsr	2,2
 24196  002E58  5018               	movf	read_eusartparser@package^0,w,c
 24197  002E5A  26D9               	addwf	fsr2l,f,c
 24198  002E5C  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24199  002E5E  22DA               	addwfc	fsr2h,f,c
 24200  002E60  0E00               	movlw	0
 24201  002E62  6EDF               	movwf	indf2,c
 24202  002E64  D5A2               	goto	l27419
 24203  002E66                     l27567:
 24204                           
 24205                           ;eusartparser.c: 210:             package->data.data16=*(((uint16_t*)&(var_sys.PositionA
      +                          ctual))+1);
 24206  002E66  EE21  F020         	lfsr	2,_var_sys+32
 24207  002E6A  EE10 F002          	lfsr	1,2
 24208  002E6E  5018               	movf	read_eusartparser@package^0,w,c
 24209  002E70  26E1               	addwf	fsr1l,f,c
 24210  002E72  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24211  002E74  22E2               	addwfc	fsr1h,f,c
 24212  002E76  CFDE FFE6          	movff	postinc2,postinc1
 24213  002E7A  CFDD FFE5          	movff	postdec2,postdec1
 24214                           
 24215                           ;eusartparser.c: 211:             write_package(*package);
 24216  002E7E  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 24217  002E82  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 24218  002E86  EE00  F011         	lfsr	0,write_package@package
 24219  002E8A  0E06               	movlw	6
 24220  002E8C                     u33661:
 24221  002E8C  CFDB FFEB          	movff	plusw2,plusw0
 24222  002E90  06E8               	decf	wreg,f,c
 24223  002E92  E2FC               	bc	u33661
 24224  002E94  ECB0  F04C         	call	_write_package	;wreg free
 24225                           
 24226                           ;eusartparser.c: 212:             package->data.data16=*(((uint16_t*)&(var_sys.PositionA
      +                          ctual))+0);
 24227  002E98  EE21  F01E         	lfsr	2,_var_sys+30
 24228  002E9C  EE10 F002          	lfsr	1,2
 24229  002EA0  5018               	movf	read_eusartparser@package^0,w,c
 24230  002EA2  26E1               	addwf	fsr1l,f,c
 24231  002EA4  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24232  002EA6  22E2               	addwfc	fsr1h,f,c
 24233  002EA8  CFDE FFE6          	movff	postinc2,postinc1
 24234  002EAC  CFDD FFE5          	movff	postdec2,postdec1
 24235                           
 24236                           ;eusartparser.c: 213:             write_package(*package);
 24237  002EB0  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 24238  002EB4  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 24239  002EB8  EE00  F011         	lfsr	0,write_package@package
 24240  002EBC  0E06               	movlw	6
 24241  002EBE                     u33671:
 24242  002EBE  CFDB FFEB          	movff	plusw2,plusw0
 24243  002EC2  06E8               	decf	wreg,f,c
 24244  002EC4  E2FC               	bc	u33671
 24245  002EC6  ECB0  F04C         	call	_write_package	;wreg free
 24246                           
 24247                           ;eusartparser.c: 214:             break;
 24248  002ECA  0012               	return	
 24249  002ECC                     l27573:
 24250                           
 24251                           ;eusartparser.c: 217:             package->data.data8[1]=var_sys.PositionIsLost;
 24252  002ECC  EE20 F003          	lfsr	2,3
 24253  002ED0  5018               	movf	read_eusartparser@package^0,w,c
 24254  002ED2  26D9               	addwf	fsr2l,f,c
 24255  002ED4  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24256  002ED6  22DA               	addwfc	fsr2h,f,c
 24257  002ED8  C148  FFDF         	movff	_var_sys+72,indf2	;volatile
 24258                           
 24259                           ;eusartparser.c: 218:             package->data.data8[0]=var_sys.StateVersion;
 24260  002EDC  EE20 F002          	lfsr	2,2
 24261  002EE0  5018               	movf	read_eusartparser@package^0,w,c
 24262  002EE2  26D9               	addwf	fsr2l,f,c
 24263  002EE4  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24264  002EE6  22DA               	addwfc	fsr2h,f,c
 24265  002EE8  C149  FFDF         	movff	_var_sys+73,indf2	;volatile
 24266  002EEC  D55E               	goto	l27419
 24267  002EEE                     l27581:
 24268  002EEE  EE20 F001          	lfsr	2,1
 24269  002EF2  5018               	movf	read_eusartparser@package^0,w,c
 24270  002EF4  26D9               	addwf	fsr2l,f,c
 24271  002EF6  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24272  002EF8  22DA               	addwfc	fsr2h,f,c
 24273  002EFA  50DF               	movf	indf2,w,c
 24274  002EFC  6E1A               	movwf	??_read_eusartparser^0,c
 24275  002EFE  6A1B               	clrf	(??_read_eusartparser+1)^0,c
 24276                           
 24277                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24278                           ; Switch size 1, requested type "simple"
 24279                           ; Number of cases is 1, Range of values is 0 to 0
 24280                           ; switch strategies available:
 24281                           ; Name         Instructions Cycles
 24282                           ; simple_byte            4     3 (average)
 24283                           ;	Chosen strategy is simple_byte
 24284  002F00  501B               	movf	(??_read_eusartparser+1)^0,w,c
 24285  002F02  0A00               	xorlw	0	; case 0
 24286  002F04  A4D8               	btfss	status,2,c
 24287  002F06  0012               	return	
 24288                           
 24289                           ; Switch size 1, requested type "simple"
 24290                           ; Number of cases is 44, Range of values is 0 to 58
 24291                           ; switch strategies available:
 24292                           ; Name         Instructions Cycles
 24293                           ; simple_byte          133    67 (average)
 24294                           ;	Chosen strategy is simple_byte
 24295  002F08  501A               	movf	??_read_eusartparser^0,w,c
 24296  002F0A  0A00               	xorlw	0	; case 0
 24297  002F0C  B4D8               	btfsc	status,2,c
 24298  002F0E  D53D               	goto	l27417
 24299  002F10  0A02               	xorlw	2	; case 2
 24300  002F12  B4D8               	btfsc	status,2,c
 24301  002F14  D572               	goto	l27429
 24302  002F16  0A01               	xorlw	1	; case 3
 24303  002F18  B4D8               	btfsc	status,2,c
 24304  002F1A  D5F2               	goto	l27473
 24305  002F1C  0A06               	xorlw	6	; case 5
 24306  002F1E  B4D8               	btfsc	status,2,c
 24307  002F20  D57D               	goto	l27433
 24308  002F22  0A02               	xorlw	2	; case 7
 24309  002F24  B4D8               	btfsc	status,2,c
 24310  002F26  D5D2               	goto	l27465
 24311  002F28  0A0F               	xorlw	15	; case 8
 24312  002F2A  B4D8               	btfsc	status,2,c
 24313  002F2C  D616               	goto	l27493
 24314  002F2E  0A02               	xorlw	2	; case 10
 24315  002F30  B4D8               	btfsc	status,2,c
 24316  002F32  D5EF               	goto	l27477
 24317  002F34  0A1A               	xorlw	26	; case 16
 24318  002F36  B4D8               	btfsc	status,2,c
 24319  002F38  D528               	goto	l27417
 24320  002F3A  0A01               	xorlw	1	; case 17
 24321  002F3C  B4D8               	btfsc	status,2,c
 24322  002F3E  D543               	goto	l27421
 24323  002F40  0A03               	xorlw	3	; case 18
 24324  002F42  B4D8               	btfsc	status,2,c
 24325  002F44  D551               	goto	l27425
 24326  002F46  0A01               	xorlw	1	; case 19
 24327  002F48  B4D8               	btfsc	status,2,c
 24328  002F4A  D557               	goto	l27429
 24329  002F4C  0A07               	xorlw	7	; case 20
 24330  002F4E  B4D8               	btfsc	status,2,c
 24331  002F50  D565               	goto	l27433
 24332  002F52  0A01               	xorlw	1	; case 21
 24333  002F54  B4D8               	btfsc	status,2,c
 24334  002F56  D573               	goto	l27437
 24335  002F58  0A03               	xorlw	3	; case 22
 24336  002F5A  B4D8               	btfsc	status,2,c
 24337  002F5C  D581               	goto	l27441
 24338  002F5E  0A01               	xorlw	1	; case 23
 24339  002F60  B4D8               	btfsc	status,2,c
 24340  002F62  D587               	goto	l27445
 24341  002F64  0A0F               	xorlw	15	; case 24
 24342  002F66  B4D8               	btfsc	status,2,c
 24343  002F68  D58D               	goto	l27449
 24344  002F6A  0A01               	xorlw	1	; case 25
 24345  002F6C  B4D8               	btfsc	status,2,c
 24346  002F6E  D593               	goto	l27453
 24347  002F70  0A03               	xorlw	3	; case 26
 24348  002F72  B4D8               	btfsc	status,2,c
 24349  002F74  D599               	goto	l27457
 24350  002F76  0A01               	xorlw	1	; case 27
 24351  002F78  B4D8               	btfsc	status,2,c
 24352  002F7A  D59F               	goto	l27461
 24353  002F7C  0A07               	xorlw	7	; case 28
 24354  002F7E  B4D8               	btfsc	status,2,c
 24355  002F80  D5A5               	goto	l27465
 24356  002F82  0A01               	xorlw	1	; case 29
 24357  002F84  B4D8               	btfsc	status,2,c
 24358  002F86  D5AB               	goto	l27469
 24359  002F88  0A03               	xorlw	3	; case 30
 24360  002F8A  B4D8               	btfsc	status,2,c
 24361  002F8C  D5B9               	goto	l27473
 24362  002F8E  0A01               	xorlw	1	; case 31
 24363  002F90  B4D8               	btfsc	status,2,c
 24364  002F92  D5BF               	goto	l27477
 24365  002F94  0A3F               	xorlw	63	; case 32
 24366  002F96  B4D8               	btfsc	status,2,c
 24367  002F98  D5C5               	goto	l27481
 24368  002F9A  0A01               	xorlw	1	; case 33
 24369  002F9C  B4D8               	btfsc	status,2,c
 24370  002F9E  D5CB               	goto	l27485
 24371  002FA0  0A03               	xorlw	3	; case 34
 24372  002FA2  B4D8               	btfsc	status,2,c
 24373  002FA4  D5D1               	goto	l27489
 24374  002FA6  0A01               	xorlw	1	; case 35
 24375  002FA8  B4D8               	btfsc	status,2,c
 24376  002FAA  D5D7               	goto	l27493
 24377  002FAC  0A07               	xorlw	7	; case 36
 24378  002FAE  B4D8               	btfsc	status,2,c
 24379  002FB0  D5DD               	goto	l27497
 24380  002FB2  0A01               	xorlw	1	; case 37
 24381  002FB4  B4D8               	btfsc	status,2,c
 24382  002FB6  D5E3               	goto	l27501
 24383  002FB8  0A03               	xorlw	3	; case 38
 24384  002FBA  B4D8               	btfsc	status,2,c
 24385  002FBC  D5E9               	goto	l27505
 24386  002FBE  0A01               	xorlw	1	; case 39
 24387  002FC0  B4D8               	btfsc	status,2,c
 24388  002FC2  D5F7               	goto	l27509
 24389  002FC4  0A0E               	xorlw	14	; case 41
 24390  002FC6  B4D8               	btfsc	status,2,c
 24391  002FC8  D627               	goto	l27515
 24392  002FCA  0A03               	xorlw	3	; case 42
 24393  002FCC  B4D8               	btfsc	status,2,c
 24394  002FCE  D62D               	goto	l27519
 24395  002FD0  0A06               	xorlw	6	; case 44
 24396  002FD2  B4D8               	btfsc	status,2,c
 24397  002FD4  D65D               	goto	l27525
 24398  002FD6  0A02               	xorlw	2	; case 46
 24399  002FD8  B4D8               	btfsc	status,2,c
 24400  002FDA  D68D               	goto	l27531
 24401  002FDC  0A01               	xorlw	1	; case 47
 24402  002FDE  B4D8               	btfsc	status,2,c
 24403  002FE0  D695               	goto	l27535
 24404  002FE2  0A1F               	xorlw	31	; case 48
 24405  002FE4  B4D8               	btfsc	status,2,c
 24406  002FE6  D69D               	goto	l27539
 24407  002FE8  0A02               	xorlw	2	; case 50
 24408  002FEA  B4D8               	btfsc	status,2,c
 24409  002FEC  D6CD               	goto	l27545
 24410  002FEE  0A06               	xorlw	6	; case 52
 24411  002FF0  B4D8               	btfsc	status,2,c
 24412  002FF2  D6FD               	goto	l27551
 24413  002FF4  0A01               	xorlw	1	; case 53
 24414  002FF6  B4D8               	btfsc	status,2,c
 24415  002FF8  D703               	goto	l27555
 24416  002FFA  0A03               	xorlw	3	; case 54
 24417  002FFC  B4D8               	btfsc	status,2,c
 24418  002FFE  D711               	goto	l27559
 24419  003000  0A01               	xorlw	1	; case 55
 24420  003002  B4D8               	btfsc	status,2,c
 24421  003004  D71F               	goto	l27563
 24422  003006  0A0F               	xorlw	15	; case 56
 24423  003008  B4D8               	btfsc	status,2,c
 24424  00300A  D72D               	goto	l27567
 24425  00300C  0A02               	xorlw	2	; case 58
 24426  00300E  A4D8               	btfss	status,2,c
 24427  003010  0012               	return	
 24428  003012  D75C               	goto	l27573
 24429  003014                     __end_of_read_eusartparser:
 24430                           	callstack 0
 24431                           
 24432 ;; *************** function _write_package *****************
 24433 ;; Defined at:
 24434 ;;		line 50 in file "eusartpackage.c"
 24435 ;; Parameters:    Size  Location     Type
 24436 ;;  package         7   16[COMRAM] const struct package_t
 24437 ;; Auto vars:     Size  Location     Type
 24438 ;;		None
 24439 ;; Return value:  Size  Location     Type
 24440 ;;                  1    wreg      void 
 24441 ;; Registers used:
 24442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24443 ;; Tracked objects:
 24444 ;;		On entry : 0/0
 24445 ;;		On exit  : 0/0
 24446 ;;		Unchanged: 0/0
 24447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24448 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24451 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24452 ;;Total ram usage:        7 bytes
 24453 ;; Hardware stack levels used: 1
 24454 ;; Hardware stack levels required when called: 5
 24455 ;; This function calls:
 24456 ;;		_EUSART1_Write
 24457 ;; This function is called by:
 24458 ;;		_read_eusartparser
 24459 ;;		_eusartparser
 24460 ;;		_updateChangesToUart
 24461 ;; This function uses a non-reentrant model
 24462 ;;
 24463                           
 24464                           	psect	text79
 24465  009960                     __ptext79:
 24466                           	callstack 0
 24467  009960                     _write_package:
 24468                           	callstack 24
 24469                           
 24470                           ;eusartpackage.c: 52:         if(package.valid==0)
 24471                           
 24472                           ;incstack = 0
 24473  009960  5017               	movf	(write_package@package+6)^0,w,c
 24474  009962  B4D8               	btfsc	status,2,c
 24475  009964  0012               	return	
 24476                           
 24477                           ;eusartpackage.c: 56:         EUSART1_Write(package.startbyte);
 24478  009966  5015               	movf	(write_package@package+4)^0,w,c
 24479  009968  EC2F  F04B         	call	_EUSART1_Write
 24480                           
 24481                           ;eusartpackage.c: 57:         EUSART1_Write(package.functioncode);
 24482  00996C  5011               	movf	write_package@package^0,w,c
 24483  00996E  EC2F  F04B         	call	_EUSART1_Write
 24484                           
 24485                           ;eusartpackage.c: 58:         EUSART1_Write(package.address);
 24486  009972  5012               	movf	(write_package@package+1)^0,w,c
 24487  009974  EC2F  F04B         	call	_EUSART1_Write
 24488                           
 24489                           ;eusartpackage.c: 59:         EUSART1_Write(package.data.data8[0]);
 24490  009978  5013               	movf	(write_package@package+2)^0,w,c
 24491  00997A  EC2F  F04B         	call	_EUSART1_Write
 24492                           
 24493                           ;eusartpackage.c: 60:         EUSART1_Write(package.data.data8[1]);
 24494  00997E  5014               	movf	(write_package@package+3)^0,w,c
 24495  009980  EC2F  F04B         	call	_EUSART1_Write
 24496                           
 24497                           ;eusartpackage.c: 61:         EUSART1_Write(package.endbyte);
 24498  009984  5016               	movf	(write_package@package+5)^0,w,c
 24499  009986  EC2F  F04B         	call	_EUSART1_Write
 24500  00998A  0012               	return		;funcret
 24501  00998C                     __end_of_write_package:
 24502                           	callstack 0
 24503                           
 24504 ;; *************** function _EUSART1_Write *****************
 24505 ;; Defined at:
 24506 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 24507 ;; Parameters:    Size  Location     Type
 24508 ;;  txData          1    wreg     unsigned char 
 24509 ;; Auto vars:     Size  Location     Type
 24510 ;;  txData          1   15[COMRAM] unsigned char 
 24511 ;; Return value:  Size  Location     Type
 24512 ;;                  1    wreg      void 
 24513 ;; Registers used:
 24514 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24515 ;; Tracked objects:
 24516 ;;		On entry : 0/0
 24517 ;;		On exit  : 3F/E
 24518 ;;		Unchanged: 0/0
 24519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24523 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24524 ;;Total ram usage:        1 bytes
 24525 ;; Hardware stack levels used: 1
 24526 ;; Hardware stack levels required when called: 4
 24527 ;; This function calls:
 24528 ;;		Nothing
 24529 ;; This function is called by:
 24530 ;;		_write_package
 24531 ;; This function uses a non-reentrant model
 24532 ;;
 24533                           
 24534                           	psect	text80
 24535  00965E                     __ptext80:
 24536                           	callstack 0
 24537  00965E                     _EUSART1_Write:
 24538                           	callstack 24
 24539                           
 24540                           ;incstack = 0
 24541                           ;EUSART1_Write@txData stored from wreg
 24542  00965E  6E10               	movwf	EUSART1_Write@txData^0,c
 24543  009660                     
 24544                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 24545                           
 24546                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 24547  009660  0101               	movlb	1	; () banked
 24548  009662  51FD               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 24549  009664  B4D8               	btfsc	status,2,c
 24550  009666  D7FC               	goto	l20599
 24551                           
 24552                           ; BSR set to: 1
 24553                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 24554  009668  010E               	movlb	14	; () banked
 24555  00966A  B9C5               	btfsc	197,4,b	;volatile
 24556  00966C  D003               	goto	l100
 24557                           
 24558                           ; BSR set to: 14
 24559                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 24560  00966E  C010  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
 24561                           
 24562                           ;mcc_generated_files/eusart1.c: 182:     }
 24563  009672  D012               	goto	l20615
 24564  009674                     l100:
 24565                           
 24566                           ; BSR set to: 14
 24567                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 24568  009674  99C5               	bcf	197,4,b	;volatile
 24569                           
 24570                           ; BSR set to: 14
 24571                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 24572  009676  0E84               	movlw	low _eusart1TxBuffer
 24573  009678  0100               	movlb	0	; () banked
 24574  00967A  2597               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 24575  00967C  6ED9               	movwf	fsr2l,c
 24576  00967E  6ADA               	clrf	fsr2h,c
 24577  009680  0E02               	movlw	high _eusart1TxBuffer
 24578  009682  22DA               	addwfc	fsr2h,f,c
 24579  009684  C010  FFDF         	movff	EUSART1_Write@txData,indf2
 24580                           
 24581                           ; BSR set to: 0
 24582  009688  2B97               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 24583                           
 24584                           ; BSR set to: 0
 24585                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 24586  00968A  0E07               	movlw	7
 24587  00968C  6597               	cpfsgt	_eusart1TxHead& (0+255),b
 24588  00968E  D002               	goto	l20613
 24589                           
 24590                           ; BSR set to: 0
 24591                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 24592  009690  0E00               	movlw	0
 24593  009692  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 24594  009694                     l20613:
 24595                           
 24596                           ; BSR set to: 0
 24597                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 24598  009694  0101               	movlb	1	; () banked
 24599  009696  07FD               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 24600  009698                     l20615:
 24601                           
 24602                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 24603  009698  010E               	movlb	14	; () banked
 24604  00969A  89C5               	bsf	197,4,b	;volatile
 24605                           
 24606                           ; BSR set to: 14
 24607  00969C  0012               	return		;funcret
 24608  00969E                     __end_of_EUSART1_Write:
 24609                           	callstack 0
 24610                           
 24611 ;; *************** function _confirmpackage *****************
 24612 ;; Defined at:
 24613 ;;		line 383 in file "eusartparser.c"
 24614 ;; Parameters:    Size  Location     Type
 24615 ;;  package         2   17[COMRAM] PTR struct package_t
 24616 ;;		 -> updateChangesToUart@package(7), main@package(7), 
 24617 ;;  confirm         1   19[COMRAM] _Bool 
 24618 ;; Auto vars:     Size  Location     Type
 24619 ;;		None
 24620 ;; Return value:  Size  Location     Type
 24621 ;;                  1    wreg      void 
 24622 ;; Registers used:
 24623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24624 ;; Tracked objects:
 24625 ;;		On entry : 0/0
 24626 ;;		On exit  : 0/0
 24627 ;;		Unchanged: 0/0
 24628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24629 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24632 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24633 ;;Total ram usage:        3 bytes
 24634 ;; Hardware stack levels used: 1
 24635 ;; Hardware stack levels required when called: 5
 24636 ;; This function calls:
 24637 ;;		_init_package
 24638 ;; This function is called by:
 24639 ;;		_eusartparser
 24640 ;;		_updateChangesToUart
 24641 ;; This function uses a non-reentrant model
 24642 ;;
 24643                           
 24644                           	psect	text81
 24645  0090CC                     __ptext81:
 24646                           	callstack 0
 24647  0090CC                     _confirmpackage:
 24648                           	callstack 23
 24649                           
 24650                           ;eusartparser.c: 384:     init_package(package);
 24651                           
 24652                           ; BSR set to: 14
 24653                           ;incstack = 0
 24654  0090CC  C012  F010         	movff	confirmpackage@package,init_package@package
 24655  0090D0  C013  F011         	movff	confirmpackage@package+1,init_package@package+1
 24656  0090D4  EC39  F04C         	call	_init_package	;wreg free
 24657                           
 24658                           ;eusartparser.c: 385:     package->functioncode=0x03;
 24659  0090D8  C012  FFD9         	movff	confirmpackage@package,fsr2l
 24660  0090DC  C013  FFDA         	movff	confirmpackage@package+1,fsr2h
 24661  0090E0  0E03               	movlw	3
 24662  0090E2  6EDF               	movwf	indf2,c
 24663                           
 24664                           ;eusartparser.c: 386:     package->address=0x00;
 24665  0090E4  EE20 F001          	lfsr	2,1
 24666  0090E8  5012               	movf	confirmpackage@package^0,w,c
 24667  0090EA  26D9               	addwf	fsr2l,f,c
 24668  0090EC  5013               	movf	(confirmpackage@package+1)^0,w,c
 24669  0090EE  22DA               	addwfc	fsr2h,f,c
 24670  0090F0  0E00               	movlw	0
 24671  0090F2  6EDF               	movwf	indf2,c
 24672                           
 24673                           ;eusartparser.c: 387:     if(confirm==1)
 24674  0090F4  0414               	decf	confirmpackage@confirm^0,w,c
 24675  0090F6  A4D8               	btfss	status,2,c
 24676  0090F8  D00B               	goto	l27597
 24677                           
 24678                           ;eusartparser.c: 388:         package->data.data16=0x0001;
 24679  0090FA  EE20 F002          	lfsr	2,2
 24680  0090FE  5012               	movf	confirmpackage@package^0,w,c
 24681  009100  26D9               	addwf	fsr2l,f,c
 24682  009102  5013               	movf	(confirmpackage@package+1)^0,w,c
 24683  009104  22DA               	addwfc	fsr2h,f,c
 24684  009106  0E01               	movlw	1
 24685  009108  6EDE               	movwf	postinc2,c
 24686  00910A  0E00               	movlw	0
 24687  00910C  6EDD               	movwf	postdec2,c
 24688  00910E  0012               	return	
 24689  009110                     l27597:
 24690                           
 24691                           ;eusartparser.c: 390:         package->data.data16=0x0000;
 24692  009110  EE20 F002          	lfsr	2,2
 24693  009114  5012               	movf	confirmpackage@package^0,w,c
 24694  009116  26D9               	addwf	fsr2l,f,c
 24695  009118  5013               	movf	(confirmpackage@package+1)^0,w,c
 24696  00911A  22DA               	addwfc	fsr2h,f,c
 24697  00911C  0E00               	movlw	0
 24698  00911E  6EDE               	movwf	postinc2,c
 24699  009120  0E00               	movlw	0
 24700  009122  6EDD               	movwf	postdec2,c
 24701  009124  0012               	return		;funcret
 24702  009126                     __end_of_confirmpackage:
 24703                           	callstack 0
 24704                           
 24705 ;; *************** function _init_package *****************
 24706 ;; Defined at:
 24707 ;;		line 11 in file "eusartpackage.c"
 24708 ;; Parameters:    Size  Location     Type
 24709 ;;  package         2   15[COMRAM] PTR struct package_t
 24710 ;;		 -> updateChangesToUart@package(7), main@package(7), 
 24711 ;; Auto vars:     Size  Location     Type
 24712 ;;		None
 24713 ;; Return value:  Size  Location     Type
 24714 ;;                  1    wreg      void 
 24715 ;; Registers used:
 24716 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24717 ;; Tracked objects:
 24718 ;;		On entry : 0/1
 24719 ;;		On exit  : 0/0
 24720 ;;		Unchanged: 0/0
 24721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24722 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24725 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24726 ;;Total ram usage:        2 bytes
 24727 ;; Hardware stack levels used: 1
 24728 ;; Hardware stack levels required when called: 4
 24729 ;; This function calls:
 24730 ;;		Nothing
 24731 ;; This function is called by:
 24732 ;;		_confirmpackage
 24733 ;;		_updateChangesToUart
 24734 ;; This function uses a non-reentrant model
 24735 ;;
 24736                           
 24737                           	psect	text82
 24738  009872                     __ptext82:
 24739                           	callstack 0
 24740  009872                     _init_package:
 24741                           	callstack 24
 24742                           
 24743                           ;eusartpackage.c: 12:         package->startbyte=0x0A;
 24744                           
 24745                           ;incstack = 0
 24746  009872  EE20 F004          	lfsr	2,4
 24747  009876  5010               	movf	init_package@package^0,w,c
 24748  009878  26D9               	addwf	fsr2l,f,c
 24749  00987A  5011               	movf	(init_package@package+1)^0,w,c
 24750  00987C  22DA               	addwfc	fsr2h,f,c
 24751  00987E  0E0A               	movlw	10
 24752  009880  6EDF               	movwf	indf2,c
 24753                           
 24754                           ;eusartpackage.c: 13:         package->endbyte=0x0D;
 24755  009882  EE20 F005          	lfsr	2,5
 24756  009886  5010               	movf	init_package@package^0,w,c
 24757  009888  26D9               	addwf	fsr2l,f,c
 24758  00988A  5011               	movf	(init_package@package+1)^0,w,c
 24759  00988C  22DA               	addwfc	fsr2h,f,c
 24760  00988E  0E0D               	movlw	13
 24761  009890  6EDF               	movwf	indf2,c
 24762                           
 24763                           ;eusartpackage.c: 14:         package->valid=1;
 24764  009892  EE20 F006          	lfsr	2,6
 24765  009896  5010               	movf	init_package@package^0,w,c
 24766  009898  26D9               	addwf	fsr2l,f,c
 24767  00989A  5011               	movf	(init_package@package+1)^0,w,c
 24768  00989C  22DA               	addwfc	fsr2h,f,c
 24769  00989E  0E01               	movlw	1
 24770  0098A0  6EDF               	movwf	indf2,c
 24771  0098A2  0012               	return		;funcret
 24772  0098A4                     __end_of_init_package:
 24773                           	callstack 0
 24774                           
 24775 ;; *************** function _saveNewSerial *****************
 24776 ;; Defined at:
 24777 ;;		line 81 in file "controlMemory_MC50.c"
 24778 ;; Parameters:    Size  Location     Type
 24779 ;;  cmdType         1    wreg     unsigned char 
 24780 ;;  tempSerial      4    0[BANK0 ] unsigned long 
 24781 ;;  position        1    4[BANK0 ] unsigned char 
 24782 ;; Auto vars:     Size  Location     Type
 24783 ;;  cmdType         1   57[COMRAM] unsigned char 
 24784 ;; Return value:  Size  Location     Type
 24785 ;;                  1    wreg      void 
 24786 ;; Registers used:
 24787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24788 ;; Tracked objects:
 24789 ;;		On entry : 3E/1
 24790 ;;		On exit  : 0/0
 24791 ;;		Unchanged: 0/0
 24792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24793 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24794 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24795 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24796 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24797 ;;Total ram usage:        8 bytes
 24798 ;; Hardware stack levels used: 1
 24799 ;; Hardware stack levels required when called: 13
 24800 ;; This function calls:
 24801 ;;		_i2c_writeNBytes
 24802 ;; This function is called by:
 24803 ;;		_controlSelectRemote
 24804 ;;		_eusartparser
 24805 ;; This function uses a non-reentrant model
 24806 ;;
 24807                           
 24808                           	psect	text83
 24809  008C02                     __ptext83:
 24810                           	callstack 0
 24811  008C02                     _saveNewSerial:
 24812                           	callstack 14
 24813                           
 24814                           ;incstack = 0
 24815                           ;saveNewSerial@cmdType stored from wreg
 24816  008C02  6E3A               	movwf	saveNewSerial@cmdType^0,c
 24817                           
 24818                           ;controlMemory_MC50.c: 81: void saveNewSerial(char cmdType,unsigned long tempSerial, cha
      +                          r position);controlMemory_MC50.c: 82: {;controlMemory_MC50.c: 83:     if(cmdType==0)
 24819  008C04  503A               	movf	saveNewSerial@cmdType^0,w,c
 24820  008C06  A4D8               	btfss	status,2,c
 24821  008C08  D01A               	goto	l20841
 24822                           
 24823                           ;controlMemory_MC50.c: 84:     {;controlMemory_MC50.c: 86:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
 24824  008C0A  0100               	movlb	0	; () banked
 24825  008C0C  51DC               	movf	saveNewSerial@position& (0+255),w,b
 24826  008C0E  6FDD               	movwf	??_saveNewSerial& (0+255),b
 24827  008C10  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
 24828  008C12  90D8               	bcf	status,0,c
 24829  008C14  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 24830  008C16  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 24831  008C18  90D8               	bcf	status,0,c
 24832  008C1A  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 24833  008C1C  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 24834  008C1E  0E00               	movlw	0
 24835  008C20  25DD               	addwf	??_saveNewSerial& (0+255),w,b
 24836  008C22  6E22               	movwf	i2c_writeNBytes@reg^0,c
 24837  008C24  0E02               	movlw	2
 24838  008C26  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
 24839  008C28  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 24840  008C2A  0ED8               	movlw	low saveNewSerial@tempSerial
 24841  008C2C  6E24               	movwf	i2c_writeNBytes@data^0,c
 24842  008C2E  0E00               	movlw	0
 24843  008C30  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 24844  008C32  0E04               	movlw	4
 24845  008C34  6E25               	movwf	i2c_writeNBytes@len^0,c
 24846  008C36  0E50               	movlw	80
 24847  008C38  EC8F  F045         	call	_i2c_writeNBytes
 24848                           
 24849                           ;controlMemory_MC50.c: 87:     }
 24850  008C3C  0012               	return	
 24851  008C3E                     l20841:
 24852                           
 24853                           ;controlMemory_MC50.c: 89:     {;controlMemory_MC50.c: 91:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
 24854  008C3E  0100               	movlb	0	; () banked
 24855  008C40  51DC               	movf	saveNewSerial@position& (0+255),w,b
 24856  008C42  6FDD               	movwf	??_saveNewSerial& (0+255),b
 24857  008C44  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
 24858  008C46  90D8               	bcf	status,0,c
 24859  008C48  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 24860  008C4A  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 24861  008C4C  90D8               	bcf	status,0,c
 24862  008C4E  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 24863  008C50  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 24864  008C52  0E00               	movlw	0
 24865  008C54  25DD               	addwf	??_saveNewSerial& (0+255),w,b
 24866  008C56  6E22               	movwf	i2c_writeNBytes@reg^0,c
 24867  008C58  0E05               	movlw	5
 24868  008C5A  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
 24869  008C5C  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 24870  008C5E  0ED8               	movlw	low saveNewSerial@tempSerial
 24871  008C60  6E24               	movwf	i2c_writeNBytes@data^0,c
 24872  008C62  0E00               	movlw	0
 24873  008C64  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 24874  008C66  0E04               	movlw	4
 24875  008C68  6E25               	movwf	i2c_writeNBytes@len^0,c
 24876  008C6A  0E50               	movlw	80
 24877  008C6C  EC8F  F045         	call	_i2c_writeNBytes
 24878  008C70  0012               	return		;funcret
 24879  008C72                     __end_of_saveNewSerial:
 24880                           	callstack 0
 24881                           
 24882 ;; *************** function _cmdMemoryIsEmpty *****************
 24883 ;; Defined at:
 24884 ;;		line 122 in file "controlMemory_MC50.c"
 24885 ;; Parameters:    Size  Location     Type
 24886 ;;  cmdType         1    wreg     unsigned char 
 24887 ;;  position        1   45[COMRAM] unsigned char 
 24888 ;; Auto vars:     Size  Location     Type
 24889 ;;  cmdType         1   48[COMRAM] unsigned char 
 24890 ;;  tempSerial      4   49[COMRAM] unsigned long 
 24891 ;; Return value:  Size  Location     Type
 24892 ;;                  1    wreg      unsigned char 
 24893 ;; Registers used:
 24894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24895 ;; Tracked objects:
 24896 ;;		On entry : 0/1
 24897 ;;		On exit  : 0/0
 24898 ;;		Unchanged: 0/0
 24899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24900 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24901 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24902 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24903 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24904 ;;Total ram usage:        8 bytes
 24905 ;; Hardware stack levels used: 1
 24906 ;; Hardware stack levels required when called: 13
 24907 ;; This function calls:
 24908 ;;		_i2c_readDataBlock
 24909 ;; This function is called by:
 24910 ;;		_setValueToEdit
 24911 ;;		_controlSelectRemote
 24912 ;;		_eusartparser
 24913 ;; This function uses a non-reentrant model
 24914 ;;
 24915                           
 24916                           	psect	text84
 24917  0081F0                     __ptext84:
 24918                           	callstack 0
 24919  0081F0                     _cmdMemoryIsEmpty:
 24920                           	callstack 14
 24921                           
 24922                           ;incstack = 0
 24923                           ;cmdMemoryIsEmpty@cmdType stored from wreg
 24924  0081F0  6E31               	movwf	cmdMemoryIsEmpty@cmdType^0,c
 24925                           
 24926                           ;controlMemory_MC50.c: 122: char cmdMemoryIsEmpty(char cmdType, char position);controlMe
      +                          mory_MC50.c: 123: {;controlMemory_MC50.c: 124:     unsigned long tempSerial=0;
 24927  0081F2  0E00               	movlw	0
 24928  0081F4  6E32               	movwf	cmdMemoryIsEmpty@tempSerial^0,c
 24929  0081F6  0E00               	movlw	0
 24930  0081F8  6E33               	movwf	(cmdMemoryIsEmpty@tempSerial+1)^0,c
 24931  0081FA  0E00               	movlw	0
 24932  0081FC  6E34               	movwf	(cmdMemoryIsEmpty@tempSerial+2)^0,c
 24933  0081FE  0E00               	movlw	0
 24934  008200  6E35               	movwf	(cmdMemoryIsEmpty@tempSerial+3)^0,c
 24935                           
 24936                           ;controlMemory_MC50.c: 127:      if(cmdType==0)
 24937  008202  5031               	movf	cmdMemoryIsEmpty@cmdType^0,w,c
 24938  008204  A4D8               	btfss	status,2,c
 24939  008206  D01A               	goto	l20857
 24940                           
 24941                           ;controlMemory_MC50.c: 128:     {;controlMemory_MC50.c: 129:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0200 + (position * 4)),(char*)&tempSerial, 4);
 24942  008208  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
 24943  00820A  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
 24944  00820C  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
 24945  00820E  90D8               	bcf	status,0,c
 24946  008210  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24947  008212  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24948  008214  90D8               	bcf	status,0,c
 24949  008216  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24950  008218  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24951  00821A  0E00               	movlw	0
 24952  00821C  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
 24953  00821E  6E22               	movwf	i2c_readDataBlock@reg^0,c
 24954  008220  0E02               	movlw	2
 24955  008222  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
 24956  008224  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 24957  008226  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
 24958  008228  6E24               	movwf	i2c_readDataBlock@data^0,c
 24959  00822A  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 24960  00822C  0E00               	movlw	0
 24961  00822E  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 24962  008230  0E04               	movlw	4
 24963  008232  6E26               	movwf	i2c_readDataBlock@len^0,c
 24964  008234  0E50               	movlw	80
 24965  008236  EC1A  F045         	call	_i2c_readDataBlock
 24966                           
 24967                           ;controlMemory_MC50.c: 130:     }
 24968  00823A  D019               	goto	l20859
 24969  00823C                     l20857:
 24970                           
 24971                           ;controlMemory_MC50.c: 132:     {;controlMemory_MC50.c: 133:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0500 + (position * 4)),(char*)&tempSerial, 4);
 24972  00823C  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
 24973  00823E  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
 24974  008240  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
 24975  008242  90D8               	bcf	status,0,c
 24976  008244  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24977  008246  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24978  008248  90D8               	bcf	status,0,c
 24979  00824A  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24980  00824C  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24981  00824E  0E00               	movlw	0
 24982  008250  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
 24983  008252  6E22               	movwf	i2c_readDataBlock@reg^0,c
 24984  008254  0E05               	movlw	5
 24985  008256  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
 24986  008258  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 24987  00825A  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
 24988  00825C  6E24               	movwf	i2c_readDataBlock@data^0,c
 24989  00825E  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 24990  008260  0E00               	movlw	0
 24991  008262  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 24992  008264  0E04               	movlw	4
 24993  008266  6E26               	movwf	i2c_readDataBlock@len^0,c
 24994  008268  0E50               	movlw	80
 24995  00826A  EC1A  F045         	call	_i2c_readDataBlock
 24996  00826E                     l20859:
 24997                           
 24998                           ;controlMemory_MC50.c: 136:      if( tempSerial==0)
 24999  00826E  5032               	movf	cmdMemoryIsEmpty@tempSerial^0,w,c
 25000  008270  1033               	iorwf	(cmdMemoryIsEmpty@tempSerial+1)^0,w,c
 25001  008272  1034               	iorwf	(cmdMemoryIsEmpty@tempSerial+2)^0,w,c
 25002  008274  1035               	iorwf	(cmdMemoryIsEmpty@tempSerial+3)^0,w,c
 25003  008276  A4D8               	btfss	status,2,c
 25004  008278  D002               	goto	l20867
 25005                           
 25006                           ;controlMemory_MC50.c: 137:      {;controlMemory_MC50.c: 138:          return 1;
 25007  00827A  0E01               	movlw	1
 25008  00827C  0012               	return	
 25009  00827E                     l20867:
 25010                           
 25011                           ;controlMemory_MC50.c: 141:      {;controlMemory_MC50.c: 142:          return 0;
 25012  00827E  0E00               	movlw	0
 25013  008280  0012               	return		;funcret
 25014  008282                     __end_of_cmdMemoryIsEmpty:
 25015                           	callstack 0
 25016                           
 25017 ;; *************** function _RemoveSerial *****************
 25018 ;; Defined at:
 25019 ;;		line 95 in file "controlMemory_MC50.c"
 25020 ;; Parameters:    Size  Location     Type
 25021 ;;  cmdType         1    wreg     unsigned char 
 25022 ;;  position        1   57[COMRAM] unsigned char 
 25023 ;; Auto vars:     Size  Location     Type
 25024 ;;  cmdType         1    2[BANK0 ] unsigned char 
 25025 ;;  tempSerial      4    3[BANK0 ] unsigned long 
 25026 ;; Return value:  Size  Location     Type
 25027 ;;                  1    wreg      void 
 25028 ;; Registers used:
 25029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25030 ;; Tracked objects:
 25031 ;;		On entry : 3E/1
 25032 ;;		On exit  : 0/0
 25033 ;;		Unchanged: 0/0
 25034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25035 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25036 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25037 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25038 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25039 ;;Total ram usage:        8 bytes
 25040 ;; Hardware stack levels used: 1
 25041 ;; Hardware stack levels required when called: 13
 25042 ;; This function calls:
 25043 ;;		_i2c_writeNBytes
 25044 ;; This function is called by:
 25045 ;;		_controlSelectRemote
 25046 ;;		_eusartparser
 25047 ;; This function uses a non-reentrant model
 25048 ;;
 25049                           
 25050                           	psect	text85
 25051  008750                     __ptext85:
 25052                           	callstack 0
 25053  008750                     _RemoveSerial:
 25054                           	callstack 14
 25055                           
 25056                           ;incstack = 0
 25057                           ;RemoveSerial@cmdType stored from wreg
 25058  008750  0100               	movlb	0	; () banked
 25059  008752  6FDA               	movwf	RemoveSerial@cmdType& (0+255),b
 25060                           
 25061                           ;controlMemory_MC50.c: 95: void RemoveSerial(char cmdType, char position);controlMemory_
      +                          MC50.c: 96: {;controlMemory_MC50.c: 97:     unsigned long tempSerial=0;
 25062  008754  0E00               	movlw	0
 25063  008756  0100               	movlb	0	; () banked
 25064  008758  6FDB               	movwf	RemoveSerial@tempSerial& (0+255),b
 25065  00875A  0E00               	movlw	0
 25066  00875C  6FDC               	movwf	(RemoveSerial@tempSerial+1)& (0+255),b
 25067  00875E  0E00               	movlw	0
 25068  008760  6FDD               	movwf	(RemoveSerial@tempSerial+2)& (0+255),b
 25069  008762  0E00               	movlw	0
 25070  008764  6FDE               	movwf	(RemoveSerial@tempSerial+3)& (0+255),b
 25071                           
 25072                           ; BSR set to: 0
 25073                           ;controlMemory_MC50.c: 100:     if(cmdType==0)
 25074  008766  51DA               	movf	RemoveSerial@cmdType& (0+255),w,b
 25075  008768  A4D8               	btfss	status,2,c
 25076  00876A  D019               	goto	l20849
 25077                           
 25078                           ; BSR set to: 0
 25079                           ;controlMemory_MC50.c: 101:     {;controlMemory_MC50.c: 102:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
 25080  00876C  503A               	movf	RemoveSerial@position^0,w,c
 25081  00876E  6FD8               	movwf	??_RemoveSerial& (0+255),b
 25082  008770  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
 25083  008772  90D8               	bcf	status,0,c
 25084  008774  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 25085  008776  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 25086  008778  90D8               	bcf	status,0,c
 25087  00877A  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 25088  00877C  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 25089  00877E  0E00               	movlw	0
 25090  008780  25D8               	addwf	??_RemoveSerial& (0+255),w,b
 25091  008782  6E22               	movwf	i2c_writeNBytes@reg^0,c
 25092  008784  0E02               	movlw	2
 25093  008786  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
 25094  008788  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 25095  00878A  0EDB               	movlw	low RemoveSerial@tempSerial
 25096  00878C  6E24               	movwf	i2c_writeNBytes@data^0,c
 25097  00878E  0E00               	movlw	0
 25098  008790  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 25099  008792  0E04               	movlw	4
 25100  008794  6E25               	movwf	i2c_writeNBytes@len^0,c
 25101  008796  0E50               	movlw	80
 25102  008798  EC8F  F045         	call	_i2c_writeNBytes
 25103                           
 25104                           ;controlMemory_MC50.c: 103:     }
 25105  00879C  0012               	return	
 25106  00879E                     l20849:
 25107                           
 25108                           ; BSR set to: 0
 25109                           ;controlMemory_MC50.c: 105:     {;controlMemory_MC50.c: 106:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
 25110  00879E  503A               	movf	RemoveSerial@position^0,w,c
 25111  0087A0  6FD8               	movwf	??_RemoveSerial& (0+255),b
 25112  0087A2  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
 25113  0087A4  90D8               	bcf	status,0,c
 25114  0087A6  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 25115  0087A8  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 25116  0087AA  90D8               	bcf	status,0,c
 25117  0087AC  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 25118  0087AE  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 25119  0087B0  0E00               	movlw	0
 25120  0087B2  25D8               	addwf	??_RemoveSerial& (0+255),w,b
 25121  0087B4  6E22               	movwf	i2c_writeNBytes@reg^0,c
 25122  0087B6  0E05               	movlw	5
 25123  0087B8  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
 25124  0087BA  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 25125  0087BC  0EDB               	movlw	low RemoveSerial@tempSerial
 25126  0087BE  6E24               	movwf	i2c_writeNBytes@data^0,c
 25127  0087C0  0E00               	movlw	0
 25128  0087C2  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 25129  0087C4  0E04               	movlw	4
 25130  0087C6  6E25               	movwf	i2c_writeNBytes@len^0,c
 25131  0087C8  0E50               	movlw	80
 25132  0087CA  EC8F  F045         	call	_i2c_writeNBytes
 25133  0087CE  0012               	return		;funcret
 25134  0087D0                     __end_of_RemoveSerial:
 25135                           	callstack 0
 25136                           
 25137 ;; *************** function _ReadSerial *****************
 25138 ;; Defined at:
 25139 ;;		line 110 in file "controlMemory_MC50.c"
 25140 ;; Parameters:    Size  Location     Type
 25141 ;;  cmdType         1    wreg     unsigned char 
 25142 ;;  tempSerial      1   45[COMRAM] PTR unsigned long 
 25143 ;;		 -> eusartparser@serial(4), 
 25144 ;;  position        1   46[COMRAM] unsigned char 
 25145 ;; Auto vars:     Size  Location     Type
 25146 ;;  cmdType         1   49[COMRAM] unsigned char 
 25147 ;; Return value:  Size  Location     Type
 25148 ;;                  1    wreg      void 
 25149 ;; Registers used:
 25150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25151 ;; Tracked objects:
 25152 ;;		On entry : 3F/0
 25153 ;;		On exit  : 0/0
 25154 ;;		Unchanged: 0/0
 25155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25156 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25157 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25158 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25159 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25160 ;;Total ram usage:        5 bytes
 25161 ;; Hardware stack levels used: 1
 25162 ;; Hardware stack levels required when called: 13
 25163 ;; This function calls:
 25164 ;;		_i2c_readDataBlock
 25165 ;; This function is called by:
 25166 ;;		_eusartparser
 25167 ;; This function uses a non-reentrant model
 25168 ;;
 25169                           
 25170                           	psect	text86
 25171  008C72                     __ptext86:
 25172                           	callstack 0
 25173  008C72                     _ReadSerial:
 25174                           	callstack 16
 25175                           
 25176                           ;incstack = 0
 25177                           ;ReadSerial@cmdType stored from wreg
 25178  008C72  6E32               	movwf	ReadSerial@cmdType^0,c
 25179                           
 25180                           ;controlMemory_MC50.c: 110: void ReadSerial(char cmdType, unsigned long* tempSerial, cha
      +                          r position);controlMemory_MC50.c: 111: {;controlMemory_MC50.c: 112:     if(cmdType==0)
 25181  008C74  5032               	movf	ReadSerial@cmdType^0,w,c
 25182  008C76  A4D8               	btfss	status,2,c
 25183  008C78  D01A               	goto	l23045
 25184                           
 25185                           ;controlMemory_MC50.c: 113:     {;controlMemory_MC50.c: 114:        i2c_readDataBlock(0x
      +                          50, (uint16_t)(0x0200 + (position * 4)), (char*)tempSerial, 4);
 25186  008C7A  502F               	movf	ReadSerial@position^0,w,c
 25187  008C7C  6E30               	movwf	??_ReadSerial^0,c
 25188  008C7E  6A31               	clrf	(??_ReadSerial+1)^0,c
 25189  008C80  90D8               	bcf	status,0,c
 25190  008C82  3630               	rlcf	??_ReadSerial^0,f,c
 25191  008C84  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 25192  008C86  90D8               	bcf	status,0,c
 25193  008C88  3630               	rlcf	??_ReadSerial^0,f,c
 25194  008C8A  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 25195  008C8C  0E00               	movlw	0
 25196  008C8E  2430               	addwf	??_ReadSerial^0,w,c
 25197  008C90  6E22               	movwf	i2c_readDataBlock@reg^0,c
 25198  008C92  0E02               	movlw	2
 25199  008C94  2031               	addwfc	(??_ReadSerial+1)^0,w,c
 25200  008C96  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 25201  008C98  C02E  F024         	movff	ReadSerial@tempSerial,i2c_readDataBlock@data
 25202  008C9C  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 25203  008C9E  0E00               	movlw	0
 25204  008CA0  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 25205  008CA2  0E04               	movlw	4
 25206  008CA4  6E26               	movwf	i2c_readDataBlock@len^0,c
 25207  008CA6  0E50               	movlw	80
 25208  008CA8  EC1A  F045         	call	_i2c_readDataBlock
 25209                           
 25210                           ;controlMemory_MC50.c: 115:     }
 25211  008CAC  0012               	return	
 25212  008CAE                     l23045:
 25213                           
 25214                           ;controlMemory_MC50.c: 117:     {;controlMemory_MC50.c: 118:        i2c_readDataBlock(0x
      +                          50, (uint16_t)(0x0500 + (position * 4)), (char*)tempSerial, 4);
 25215  008CAE  502F               	movf	ReadSerial@position^0,w,c
 25216  008CB0  6E30               	movwf	??_ReadSerial^0,c
 25217  008CB2  6A31               	clrf	(??_ReadSerial+1)^0,c
 25218  008CB4  90D8               	bcf	status,0,c
 25219  008CB6  3630               	rlcf	??_ReadSerial^0,f,c
 25220  008CB8  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 25221  008CBA  90D8               	bcf	status,0,c
 25222  008CBC  3630               	rlcf	??_ReadSerial^0,f,c
 25223  008CBE  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 25224  008CC0  0E00               	movlw	0
 25225  008CC2  2430               	addwf	??_ReadSerial^0,w,c
 25226  008CC4  6E22               	movwf	i2c_readDataBlock@reg^0,c
 25227  008CC6  0E05               	movlw	5
 25228  008CC8  2031               	addwfc	(??_ReadSerial+1)^0,w,c
 25229  008CCA  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 25230  008CCC  C02E  F024         	movff	ReadSerial@tempSerial,i2c_readDataBlock@data
 25231  008CD0  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 25232  008CD2  0E00               	movlw	0
 25233  008CD4  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 25234  008CD6  0E04               	movlw	4
 25235  008CD8  6E26               	movwf	i2c_readDataBlock@len^0,c
 25236  008CDA  0E50               	movlw	80
 25237  008CDC  EC1A  F045         	call	_i2c_readDataBlock
 25238  008CE0  0012               	return		;funcret
 25239  008CE2                     __end_of_ReadSerial:
 25240                           	callstack 0
 25241                           
 25242 ;; *************** function _i2c_readDataBlock *****************
 25243 ;; Defined at:
 25244 ;;		line 147 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 25245 ;; Parameters:    Size  Location     Type
 25246 ;;  address         1    wreg     unsigned char 
 25247 ;;  reg             2   33[COMRAM] unsigned short 
 25248 ;;  data            2   35[COMRAM] PTR void 
 25249 ;;		 -> eusartparser@serial(4), var_sys_NVM.homemPresente(1), cmdMemoryIsEmpty@tempSerial(4), var_sys_NVM.positionRemote
      +sFull(1), 
 25250 ;;		 -> memoryTEMP(16), var_sys_NVM.learningCurrentNormalClose(2), var_sys_NVM(64), 
 25251 ;;  len             2   37[COMRAM] unsigned int 
 25252 ;; Auto vars:     Size  Location     Type
 25253 ;;  address         1   40[COMRAM] unsigned char 
 25254 ;;  d               4   41[COMRAM] struct .
 25255 ;; Return value:  Size  Location     Type
 25256 ;;                  1    wreg      void 
 25257 ;; Registers used:
 25258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25259 ;; Tracked objects:
 25260 ;;		On entry : 0/2
 25261 ;;		On exit  : 0/0
 25262 ;;		Unchanged: 0/0
 25263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25264 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25265 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25266 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25267 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25268 ;;Total ram usage:       12 bytes
 25269 ;; Hardware stack levels used: 1
 25270 ;; Hardware stack levels required when called: 12
 25271 ;; This function calls:
 25272 ;;		_I2C1_Close
 25273 ;;		_I2C1_MasterWrite
 25274 ;;		_I2C1_Open
 25275 ;;		_I2C1_SetAddressNackCallback
 25276 ;;		_I2C1_SetBuffer
 25277 ;;		_I2C1_SetDataCompleteCallback
 25278 ;; This function is called by:
 25279 ;;		_validateRemoteSerialNumber
 25280 ;;		_ReadSerial
 25281 ;;		_cmdMemoryIsEmpty
 25282 ;;		_loadNVM_VarSystem
 25283 ;; This function uses a non-reentrant model
 25284 ;;
 25285                           
 25286                           	psect	text87
 25287  008A34                     __ptext87:
 25288                           	callstack 0
 25289  008A34                     _i2c_readDataBlock:
 25290                           	callstack 14
 25291                           
 25292                           ;incstack = 0
 25293                           ;i2c_readDataBlock@address stored from wreg
 25294  008A34  6E29               	movwf	i2c_readDataBlock@address^0,c
 25295                           
 25296                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147: void i2c_readDataBlock(i2c1_addre
      +                          ss_t address, uint16_t reg, void *data, size_t len);mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 148: {;mcc_generated_files/drivers/i2c_simple_master.c: 149:     buf_t d;;m
      +                          cc_generated_files/drivers/i2c_simple_master.c: 150:     d.data = data;
 25297  008A36  C024  F02C         	movff	i2c_readDataBlock@data,i2c_readDataBlock@d+2
 25298  008A3A  C025  F02D         	movff	i2c_readDataBlock@data+1,i2c_readDataBlock@d+3
 25299                           
 25300                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151:     d.len = len;
 25301  008A3E  C026  F02A         	movff	i2c_readDataBlock@len,i2c_readDataBlock@d
 25302  008A42  C027  F02B         	movff	i2c_readDataBlock@len+1,i2c_readDataBlock@d+1
 25303  008A46                     l20635:
 25304  008A46  5023               	movf	(i2c_readDataBlock@reg+1)^0,w,c
 25305  008A48  1029               	iorwf	i2c_readDataBlock@address^0,w,c
 25306  008A4A  EC25  F043         	call	_I2C1_Open
 25307  008A4E  0900               	iorlw	0
 25308  008A50  B4D8               	btfsc	status,2,c
 25309  008A52  D7F9               	goto	l20635
 25310                           
 25311                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          rdBlkRegCompleteHandler,&d);
 25312  008A54  0EDE               	movlw	low _rdBlkRegCompleteHandler
 25313  008A56  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 25314  008A58  0E96               	movlw	high _rdBlkRegCompleteHandler
 25315  008A5A  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 25316  008A5C  0E2A               	movlw	low i2c_readDataBlock@d
 25317  008A5E  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 25318  008A60  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 25319  008A62  EC4A  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 25320                           
 25321                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     I2C1_SetBuffer(&reg,1);
 25322  008A66  0E22               	movlw	low i2c_readDataBlock@reg
 25323  008A68  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 25324  008A6A  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 25325  008A6C  0E00               	movlw	0
 25326  008A6E  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 25327  008A70  0E01               	movlw	1
 25328  008A72  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 25329  008A74  EC01  F04F         	call	_I2C1_SetBuffer	;wreg free
 25330                           
 25331                           ; BSR set to: 2
 25332                           ;mcc_generated_files/drivers/i2c_simple_master.c: 156:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 25333  008A78  0E00               	movlw	0
 25334  008A7A  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 25335  008A7C  0E00               	movlw	0
 25336  008A7E  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 25337  008A80  0E00               	movlw	0
 25338  008A82  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 25339  008A84  0E00               	movlw	0
 25340  008A86  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 25341  008A88  EC32  F04F         	call	_I2C1_SetAddressNackCallback	;wreg free
 25342                           
 25343                           ;mcc_generated_files/drivers/i2c_simple_master.c: 157:     I2C1_MasterWrite();
 25344  008A8C  EC00  F050         	call	_I2C1_MasterWrite	;wreg free
 25345  008A90                     l20645:
 25346  008A90  EC73  F04E         	call	_I2C1_Close	;wreg free
 25347  008A94  06E8               	decf	wreg,f,c
 25348  008A96  B4D8               	btfsc	status,2,c
 25349  008A98  D7FB               	goto	l20645
 25350                           
 25351                           ;mcc_generated_files/drivers/i2c_simple_master.c: 159:     _delay((unsigned long)((10)*(
      +                          64000000/4000.0)));
 25352  008A9A  0ED0               	movlw	208
 25353  008A9C  6E28               	movwf	??_i2c_readDataBlock^0,c
 25354  008A9E  0ECA               	movlw	202
 25355  008AA0                     u34457:
 25356  008AA0  2EE8               	decfsz	wreg,f,c
 25357  008AA2  D7FE               	bra	u34457
 25358  008AA4  2E28               	decfsz	??_i2c_readDataBlock^0,f,c
 25359  008AA6  D7FC               	bra	u34457
 25360  008AA8  0012               	return		;funcret
 25361  008AAA                     __end_of_i2c_readDataBlock:
 25362                           	callstack 0
 25363                           
 25364 ;; *************** function _WWDT_TimerClear *****************
 25365 ;; Defined at:
 25366 ;;		line 128 in file "mcc_generated_files/mcc.c"
 25367 ;; Parameters:    Size  Location     Type
 25368 ;;		None
 25369 ;; Auto vars:     Size  Location     Type
 25370 ;;  state           1   15[COMRAM] _Bool 
 25371 ;;  readBack        1    0        unsigned char 
 25372 ;; Return value:  Size  Location     Type
 25373 ;;                  1    wreg      void 
 25374 ;; Registers used:
 25375 ;;		wreg, status,2
 25376 ;; Tracked objects:
 25377 ;;		On entry : 0/0
 25378 ;;		On exit  : 0/0
 25379 ;;		Unchanged: 0/0
 25380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25382 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25384 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25385 ;;Total ram usage:        1 bytes
 25386 ;; Hardware stack levels used: 1
 25387 ;; Hardware stack levels required when called: 4
 25388 ;; This function calls:
 25389 ;;		Nothing
 25390 ;; This function is called by:
 25391 ;;		_main
 25392 ;; This function uses a non-reentrant model
 25393 ;;
 25394                           
 25395                           	psect	text88
 25396  009D46                     __ptext88:
 25397                           	callstack 0
 25398  009D46                     _WWDT_TimerClear:
 25399                           	callstack 26
 25400                           
 25401                           ;mcc_generated_files/mcc.c: 134:     _Bool state = GIE;
 25402                           
 25403                           ;incstack = 0
 25404  009D46  0E00               	movlw	0
 25405  009D48  BEF2               	btfsc	4082,7,c	;volatile
 25406  009D4A  0E01               	movlw	1
 25407  009D4C  6E10               	movwf	WWDT_TimerClear@state^0,c
 25408                           
 25409                           ;mcc_generated_files/mcc.c: 135:     GIE = 0;
 25410  009D4E  9EF2               	bcf	4082,7,c	;volatile
 25411  009D50  010E               	movlb	14	; () banked
 25412  009D52  51D2               	movf	210,w,b	;volatile
 25413  009D54  0004               	clrwdt		;# 
 25414                           
 25415                           ;mcc_generated_files/mcc.c: 138:     GIE = state;
 25416  009D56  B010               	btfsc	WWDT_TimerClear@state^0,0,c
 25417  009D58  D002               	bra	u29825
 25418  009D5A  9EF2               	bcf	4082,7,c	;volatile
 25419  009D5C  D001               	bra	u29826
 25420  009D5E                     u29825:
 25421  009D5E  8EF2               	bsf	4082,7,c	;volatile
 25422  009D60                     u29826:
 25423  009D60  0012               	return		;funcret
 25424  009D62                     __end_of_WWDT_TimerClear:
 25425                           	callstack 0
 25426                           
 25427 ;; *************** function _WWDT_SoftEnable *****************
 25428 ;; Defined at:
 25429 ;;		line 104 in file "mcc_generated_files/mcc.c"
 25430 ;; Parameters:    Size  Location     Type
 25431 ;;		None
 25432 ;; Auto vars:     Size  Location     Type
 25433 ;;		None
 25434 ;; Return value:  Size  Location     Type
 25435 ;;                  1    wreg      void 
 25436 ;; Registers used:
 25437 ;;		None
 25438 ;; Tracked objects:
 25439 ;;		On entry : 3F/E
 25440 ;;		On exit  : 3F/E
 25441 ;;		Unchanged: 0/0
 25442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25447 ;;Total ram usage:        0 bytes
 25448 ;; Hardware stack levels used: 1
 25449 ;; Hardware stack levels required when called: 4
 25450 ;; This function calls:
 25451 ;;		Nothing
 25452 ;; This function is called by:
 25453 ;;		_main
 25454 ;; This function uses a non-reentrant model
 25455 ;;
 25456                           
 25457                           	psect	text89
 25458  00A086                     __ptext89:
 25459                           	callstack 0
 25460  00A086                     _WWDT_SoftEnable:
 25461                           	callstack 26
 25462                           
 25463                           ; BSR set to: 14
 25464                           ;mcc_generated_files/mcc.c: 107:     WDTCON0bits.SEN=1;
 25465                           
 25466                           ;incstack = 0
 25467  00A086  81D2               	bsf	210,0,b	;volatile
 25468                           
 25469                           ; BSR set to: 14
 25470  00A088  0012               	return		;funcret
 25471  00A08A                     __end_of_WWDT_SoftEnable:
 25472                           	callstack 0
 25473                           
 25474 ;; *************** function _ShowVersion *****************
 25475 ;; Defined at:
 25476 ;;		line 254 in file "main_MC50.c"
 25477 ;; Parameters:    Size  Location     Type
 25478 ;;		None
 25479 ;; Auto vars:     Size  Location     Type
 25480 ;;		None
 25481 ;; Return value:  Size  Location     Type
 25482 ;;                  1    wreg      void 
 25483 ;; Registers used:
 25484 ;;		wreg, status,2, status,0, cstack
 25485 ;; Tracked objects:
 25486 ;;		On entry : 3F/1
 25487 ;;		On exit  : 3F/1
 25488 ;;		Unchanged: 0/0
 25489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25494 ;;Total ram usage:        0 bytes
 25495 ;; Hardware stack levels used: 1
 25496 ;; Hardware stack levels required when called: 5
 25497 ;; This function calls:
 25498 ;;		_SetSegmentValue
 25499 ;; This function is called by:
 25500 ;;		_main
 25501 ;; This function uses a non-reentrant model
 25502 ;;
 25503                           
 25504                           	psect	text90
 25505  008E92                     __ptext90:
 25506                           	callstack 0
 25507  008E92                     _ShowVersion:
 25508                           	callstack 25
 25509                           
 25510                           ; BSR set to: 1
 25511                           ;main_MC50.c: 256:     if(ts_system.TimeShowVersion<=0)
 25512                           
 25513                           ; BSR set to: 14
 25514                           ;incstack = 0
 25515  008E92  BFDB               	btfsc	(_ts_system+61)& (0+255),7,b	;volatile
 25516  008E94  D005               	goto	u31510
 25517  008E96  51DB               	movf	(_ts_system+61)& (0+255),w,b	;volatile
 25518  008E98  E12E               	bnz	l2044
 25519  008E9A  05DA               	decf	(_ts_system+60)& (0+255),w,b	;volatile
 25520  008E9C  B0D8               	btfsc	status,0,c
 25521  008E9E  0012               	return	
 25522  008EA0                     u31510:
 25523                           
 25524                           ; BSR set to: 1
 25525                           ;main_MC50.c: 257:     {;main_MC50.c: 259:             if(var_sys.StateVersion==0)
 25526  008EA0  5149               	movf	(_var_sys+73)& (0+255),w,b	;volatile
 25527  008EA2  A4D8               	btfss	status,2,c
 25528  008EA4  D006               	goto	l25545
 25529                           
 25530                           ; BSR set to: 1
 25531                           ;main_MC50.c: 260:             {;main_MC50.c: 261:                 SetSegmentValue((1/10
      +                          )%10,(1/1)%10);
 25532  008EA6  0E01               	movlw	1
 25533  008EA8  6E1C               	movwf	SetSegmentValue@d2^0,c
 25534  008EAA  0E00               	movlw	0
 25535  008EAC  ECF4  F04E         	call	_SetSegmentValue
 25536                           
 25537                           ;main_MC50.c: 262:             }
 25538  008EB0  D01C               	goto	l2039
 25539  008EB2                     l25545:
 25540                           
 25541                           ; BSR set to: 1
 25542  008EB2  0549               	decf	(_var_sys+73)& (0+255),w,b	;volatile
 25543  008EB4  A4D8               	btfss	status,2,c
 25544  008EB6  D006               	goto	l25549
 25545                           
 25546                           ; BSR set to: 1
 25547                           ;main_MC50.c: 264:             {;main_MC50.c: 265:                 SetSegmentValue(dr, (
      +                          180/100)%10);
 25548  008EB8  0E01               	movlw	1
 25549  008EBA  6E1C               	movwf	SetSegmentValue@d2^0,c
 25550  008EBC  0E14               	movlw	20
 25551  008EBE  ECF4  F04E         	call	_SetSegmentValue
 25552                           
 25553                           ;main_MC50.c: 266:             }
 25554  008EC2  D013               	goto	l2039
 25555  008EC4                     l25549:
 25556                           
 25557                           ; BSR set to: 1
 25558  008EC4  0E02               	movlw	2
 25559  008EC6  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 25560  008EC8  A4D8               	btfss	status,2,c
 25561  008ECA  D006               	goto	l25553
 25562                           
 25563                           ; BSR set to: 1
 25564                           ;main_MC50.c: 268:             {;main_MC50.c: 269:                 SetSegmentValue((180/
      +                          10)%10,(180/1)%10);
 25565  008ECC  0E00               	movlw	0
 25566  008ECE  6E1C               	movwf	SetSegmentValue@d2^0,c
 25567  008ED0  0E08               	movlw	8
 25568  008ED2  ECF4  F04E         	call	_SetSegmentValue
 25569                           
 25570                           ;main_MC50.c: 270:             }
 25571  008ED6  D009               	goto	l2039
 25572  008ED8                     l25553:
 25573                           
 25574                           ; BSR set to: 1
 25575  008ED8  0E03               	movlw	3
 25576  008EDA  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 25577  008EDC  A4D8               	btfss	status,2,c
 25578  008EDE  D005               	goto	l2039
 25579                           
 25580                           ; BSR set to: 1
 25581                           ;main_MC50.c: 272:             {;main_MC50.c: 273:                SetSegmentValue(dr, d2
      +                          );
 25582  008EE0  0E02               	movlw	2
 25583  008EE2  6E1C               	movwf	SetSegmentValue@d2^0,c
 25584  008EE4  0E14               	movlw	20
 25585  008EE6  ECF4  F04E         	call	_SetSegmentValue
 25586  008EEA                     l2039:
 25587                           
 25588                           ;main_MC50.c: 282:         var_sys.StateVersion++;
 25589                           
 25590                           ; BSR set to: 1
 25591  008EEA  0101               	movlb	1	; () banked
 25592  008EEC  2B49               	incf	(_var_sys+73)& (0+255),f,b	;volatile
 25593                           
 25594                           ; BSR set to: 1
 25595                           ;main_MC50.c: 283:         ts_system.TimeShowVersion=(1000/50);
 25596  008EEE  0E00               	movlw	0
 25597  008EF0  6FDB               	movwf	(_ts_system+61)& (0+255),b	;volatile
 25598  008EF2  0E14               	movlw	20
 25599  008EF4  6FDA               	movwf	(_ts_system+60)& (0+255),b	;volatile
 25600  008EF6                     l2044:
 25601                           
 25602                           ; BSR set to: 1
 25603  008EF6  0012               	return		;funcret
 25604  008EF8                     __end_of_ShowVersion:
 25605                           	callstack 0
 25606                           
 25607 ;; *************** function _SetSegmentValue *****************
 25608 ;; Defined at:
 25609 ;;		line 112 in file "outputs_MC50.c"
 25610 ;; Parameters:    Size  Location     Type
 25611 ;;  d1              1    wreg     unsigned char 
 25612 ;;  d2              1   27[COMRAM] unsigned char 
 25613 ;; Auto vars:     Size  Location     Type
 25614 ;;  d1              1   28[COMRAM] unsigned char 
 25615 ;; Return value:  Size  Location     Type
 25616 ;;                  1    wreg      void 
 25617 ;; Registers used:
 25618 ;;		wreg, status,2
 25619 ;; Tracked objects:
 25620 ;;		On entry : 0/0
 25621 ;;		On exit  : 3F/0
 25622 ;;		Unchanged: 0/0
 25623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25624 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25625 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25627 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25628 ;;Total ram usage:        2 bytes
 25629 ;; Hardware stack levels used: 1
 25630 ;; Hardware stack levels required when called: 4
 25631 ;; This function calls:
 25632 ;;		Nothing
 25633 ;; This function is called by:
 25634 ;;		_main
 25635 ;;		_ShowVersion
 25636 ;;		_controlSelectRemote
 25637 ;; This function uses a non-reentrant model
 25638 ;;
 25639                           
 25640                           	psect	text91
 25641  009DE8                     __ptext91:
 25642                           	callstack 0
 25643  009DE8                     _SetSegmentValue:
 25644                           	callstack 23
 25645                           
 25646                           ; BSR set to: 1
 25647                           ;incstack = 0
 25648                           ;SetSegmentValue@d1 stored from wreg
 25649  009DE8  6E1D               	movwf	SetSegmentValue@d1^0,c
 25650                           
 25651                           ;outputs_MC50.c: 112: void SetSegmentValue(char d1, char d2);outputs_MC50.c: 113: {;outp
      +                          uts_MC50.c: 117:         dispStruct.display_grp.value_display1=d1;
 25652  009DEA  C01D  F072         	movff	SetSegmentValue@d1,_dispStruct	;volatile
 25653                           
 25654                           ;outputs_MC50.c: 118:         dispStruct.display_grp.value_display2=d2;
 25655  009DEE  C01C  F073         	movff	SetSegmentValue@d2,_dispStruct+1	;volatile
 25656                           
 25657                           ;outputs_MC50.c: 119:         dispStruct.intermitentFreq=0;
 25658  009DF2  0E00               	movlw	0
 25659  009DF4  0100               	movlb	0	; () banked
 25660  009DF6  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
 25661  009DF8  0E00               	movlw	0
 25662  009DFA  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
 25663                           
 25664                           ; BSR set to: 0
 25665                           ;outputs_MC50.c: 120:         dispStruct.upFase=0;
 25666  009DFC  0E00               	movlw	0
 25667  009DFE  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 25668                           
 25669                           ; BSR set to: 0
 25670  009E00  0012               	return		;funcret
 25671  009E02                     __end_of_SetSegmentValue:
 25672                           	callstack 0
 25673                           
 25674 ;; *************** function _SYSTEM_Initialize *****************
 25675 ;; Defined at:
 25676 ;;		line 50 in file "mcc_generated_files/mcc.c"
 25677 ;; Parameters:    Size  Location     Type
 25678 ;;		None
 25679 ;; Auto vars:     Size  Location     Type
 25680 ;;		None
 25681 ;; Return value:  Size  Location     Type
 25682 ;;                  1    wreg      void 
 25683 ;; Registers used:
 25684 ;;		wreg, status,2, status,0, cstack
 25685 ;; Tracked objects:
 25686 ;;		On entry : 3F/0
 25687 ;;		On exit  : 3F/E
 25688 ;;		Unchanged: 0/0
 25689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25694 ;;Total ram usage:        0 bytes
 25695 ;; Hardware stack levels used: 1
 25696 ;; Hardware stack levels required when called: 6
 25697 ;; This function calls:
 25698 ;;		_ADCC_Initialize
 25699 ;;		_EUSART1_Initialize
 25700 ;;		_I2C1_Initialize
 25701 ;;		_INTERRUPT_Initialize
 25702 ;;		_OSCILLATOR_Initialize
 25703 ;;		_PIN_MANAGER_Initialize
 25704 ;;		_PMD_Initialize
 25705 ;;		_TMR0_Initialize
 25706 ;;		_TMR1_Initialize
 25707 ;;		_TMR2_Initialize
 25708 ;;		_WWDT_Initialize
 25709 ;; This function is called by:
 25710 ;;		_main
 25711 ;; This function uses a non-reentrant model
 25712 ;;
 25713                           
 25714                           	psect	text92
 25715  009906                     __ptext92:
 25716                           	callstack 0
 25717  009906                     _SYSTEM_Initialize:
 25718                           	callstack 24
 25719                           
 25720                           ; BSR set to: 0
 25721                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 25722                           
 25723                           ; BSR set to: 0
 25724                           ;incstack = 0
 25725  009906  EC45  F050         	call	_INTERRUPT_Initialize	;wreg free
 25726                           
 25727                           ; BSR set to: 0
 25728                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 25729  00990A  ECB1  F04E         	call	_PMD_Initialize	;wreg free
 25730                           
 25731                           ; BSR set to: 14
 25732                           ;mcc_generated_files/mcc.c: 54:     I2C1_Initialize();
 25733  00990E  EC80  F04F         	call	_I2C1_Initialize	;wreg free
 25734                           
 25735                           ; BSR set to: 14
 25736                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 25737  009912  ECAC  F040         	call	_PIN_MANAGER_Initialize	;wreg free
 25738                           
 25739                           ; BSR set to: 14
 25740                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 25741  009916  EC56  F04F         	call	_OSCILLATOR_Initialize	;wreg free
 25742                           
 25743                           ; BSR set to: 14
 25744                           ;mcc_generated_files/mcc.c: 57:     WWDT_Initialize();
 25745  00991A  ECC4  F04F         	call	_WWDT_Initialize	;wreg free
 25746                           
 25747                           ; BSR set to: 14
 25748                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 25749  00991E  ECE8  F049         	call	_ADCC_Initialize	;wreg free
 25750                           
 25751                           ; BSR set to: 15
 25752                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 25753  009922  ECC6  F04C         	call	_TMR2_Initialize	;wreg free
 25754                           
 25755                           ; BSR set to: 14
 25756                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
 25757  009926  EC0E  F04B         	call	_TMR1_Initialize	;wreg free
 25758                           
 25759                           ; BSR set to: 14
 25760                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
 25761  00992A  EC62  F04E         	call	_TMR0_Initialize	;wreg free
 25762                           
 25763                           ; BSR set to: 14
 25764                           ;mcc_generated_files/mcc.c: 62:     EUSART1_Initialize();
 25765  00992E  ECE8  F043         	call	_EUSART1_Initialize	;wreg free
 25766                           
 25767                           ; BSR set to: 14
 25768  009932  0012               	return		;funcret
 25769  009934                     __end_of_SYSTEM_Initialize:
 25770                           	callstack 0
 25771                           
 25772 ;; *************** function _WWDT_Initialize *****************
 25773 ;; Defined at:
 25774 ;;		line 96 in file "mcc_generated_files/mcc.c"
 25775 ;; Parameters:    Size  Location     Type
 25776 ;;		None
 25777 ;; Auto vars:     Size  Location     Type
 25778 ;;		None
 25779 ;; Return value:  Size  Location     Type
 25780 ;;                  1    wreg      void 
 25781 ;; Registers used:
 25782 ;;		wreg, status,2
 25783 ;; Tracked objects:
 25784 ;;		On entry : 3F/E
 25785 ;;		On exit  : 3F/E
 25786 ;;		Unchanged: 0/0
 25787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25792 ;;Total ram usage:        0 bytes
 25793 ;; Hardware stack levels used: 1
 25794 ;; Hardware stack levels required when called: 4
 25795 ;; This function calls:
 25796 ;;		Nothing
 25797 ;; This function is called by:
 25798 ;;		_SYSTEM_Initialize
 25799 ;; This function uses a non-reentrant model
 25800 ;;
 25801                           
 25802                           	psect	text93
 25803  009F88                     __ptext93:
 25804                           	callstack 0
 25805  009F88                     _WWDT_Initialize:
 25806                           	callstack 25
 25807                           
 25808                           ; BSR set to: 14
 25809                           ;mcc_generated_files/mcc.c: 99:     WDTCON0 = 22;
 25810                           
 25811                           ; BSR set to: 14
 25812                           ;incstack = 0
 25813  009F88  0E16               	movlw	22
 25814  009F8A  6FD2               	movwf	210,b	;volatile
 25815                           
 25816                           ;mcc_generated_files/mcc.c: 100:     WDTCON1 = 7|32;
 25817  009F8C  0E27               	movlw	39
 25818  009F8E  6FD3               	movwf	211,b	;volatile
 25819                           
 25820                           ; BSR set to: 14
 25821  009F90  0012               	return		;funcret
 25822  009F92                     __end_of_WWDT_Initialize:
 25823                           	callstack 0
 25824                           
 25825 ;; *************** function _TMR2_Initialize *****************
 25826 ;; Defined at:
 25827 ;;		line 79 in file "mcc_generated_files/tmr2.c"
 25828 ;; Parameters:    Size  Location     Type
 25829 ;;		None
 25830 ;; Auto vars:     Size  Location     Type
 25831 ;;		None
 25832 ;; Return value:  Size  Location     Type
 25833 ;;                  1    wreg      void 
 25834 ;; Registers used:
 25835 ;;		wreg, status,2, status,0, cstack
 25836 ;; Tracked objects:
 25837 ;;		On entry : 3F/F
 25838 ;;		On exit  : 3F/E
 25839 ;;		Unchanged: 0/0
 25840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25845 ;;Total ram usage:        0 bytes
 25846 ;; Hardware stack levels used: 1
 25847 ;; Hardware stack levels required when called: 5
 25848 ;; This function calls:
 25849 ;;		_TMR2_SetInterruptHandler
 25850 ;; This function is called by:
 25851 ;;		_SYSTEM_Initialize
 25852 ;; This function uses a non-reentrant model
 25853 ;;
 25854                           
 25855                           	psect	text94
 25856  00998C                     __ptext94:
 25857                           	callstack 0
 25858  00998C                     _TMR2_Initialize:
 25859                           	callstack 24
 25860                           
 25861                           ; BSR set to: 15
 25862                           ;mcc_generated_files/tmr2.c: 84:     T2CLKCON = 0x02;
 25863                           
 25864                           ; BSR set to: 14
 25865                           ;incstack = 0
 25866  00998C  0E02               	movlw	2
 25867  00998E  6EBF               	movwf	191,c	;volatile
 25868                           
 25869                           ;mcc_generated_files/tmr2.c: 87:     T2HLT = 0x40;
 25870  009990  0E40               	movlw	64
 25871  009992  6EBE               	movwf	190,c	;volatile
 25872                           
 25873                           ;mcc_generated_files/tmr2.c: 90:     T2RST = 0x00;
 25874  009994  0E00               	movlw	0
 25875  009996  6EC0               	movwf	192,c	;volatile
 25876                           
 25877                           ;mcc_generated_files/tmr2.c: 93:     T2PR = 0xC7;
 25878  009998  0EC7               	movlw	199
 25879  00999A  6EBC               	movwf	188,c	;volatile
 25880                           
 25881                           ;mcc_generated_files/tmr2.c: 96:     T2TMR = 0x00;
 25882  00999C  0E00               	movlw	0
 25883  00999E  6EBB               	movwf	187,c	;volatile
 25884                           
 25885                           ; BSR set to: 15
 25886                           ;mcc_generated_files/tmr2.c: 99:     PIR4bits.TMR2IF = 0;
 25887  0099A0  010E               	movlb	14	; () banked
 25888  0099A2  93CE               	bcf	206,1,b	;volatile
 25889                           
 25890                           ; BSR set to: 14
 25891                           ;mcc_generated_files/tmr2.c: 102:     PIE4bits.TMR2IE = 1;
 25892  0099A4  83C6               	bsf	198,1,b	;volatile
 25893                           
 25894                           ; BSR set to: 14
 25895                           ;mcc_generated_files/tmr2.c: 105:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHand
      +                          ler);
 25896  0099A6  0EB4               	movlw	low _TMR2_DefaultInterruptHandler
 25897  0099A8  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
 25898  0099AA  0EA0               	movlw	high _TMR2_DefaultInterruptHandler
 25899  0099AC  6E11               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
 25900  0099AE  ECC9  F04F         	call	_TMR2_SetInterruptHandler	;wreg free
 25901                           
 25902                           ; BSR set to: 14
 25903                           ;mcc_generated_files/tmr2.c: 108:     T2CON = 0xD9;
 25904  0099B2  0ED9               	movlw	217
 25905  0099B4  6EBD               	movwf	189,c	;volatile
 25906                           
 25907                           ; BSR set to: 14
 25908  0099B6  0012               	return		;funcret
 25909  0099B8                     __end_of_TMR2_Initialize:
 25910                           	callstack 0
 25911                           
 25912 ;; *************** function _TMR2_SetInterruptHandler *****************
 25913 ;; Defined at:
 25914 ;;		line 342 in file "mcc_generated_files/tmr2.c"
 25915 ;; Parameters:    Size  Location     Type
 25916 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 25917 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 25918 ;; Auto vars:     Size  Location     Type
 25919 ;;		None
 25920 ;; Return value:  Size  Location     Type
 25921 ;;                  1    wreg      void 
 25922 ;; Registers used:
 25923 ;;		wreg, status,2, status,0
 25924 ;; Tracked objects:
 25925 ;;		On entry : 3F/E
 25926 ;;		On exit  : 3F/E
 25927 ;;		Unchanged: 3F/0
 25928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25929 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25932 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25933 ;;Total ram usage:        2 bytes
 25934 ;; Hardware stack levels used: 1
 25935 ;; Hardware stack levels required when called: 4
 25936 ;; This function calls:
 25937 ;;		Nothing
 25938 ;; This function is called by:
 25939 ;;		_TMR2_Initialize
 25940 ;; This function uses a non-reentrant model
 25941 ;;
 25942                           
 25943                           	psect	text95
 25944  009F92                     __ptext95:
 25945                           	callstack 0
 25946  009F92                     _TMR2_SetInterruptHandler:
 25947                           	callstack 24
 25948                           
 25949                           ; BSR set to: 14
 25950                           ;mcc_generated_files/tmr2.c: 343:     TMR2_InterruptHandler = InterruptHandler;
 25951                           
 25952                           ; BSR set to: 14
 25953                           ;incstack = 0
 25954  009F92  C010  F2DD         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 25955  009F96  C011  F2DE         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 25956                           
 25957                           ; BSR set to: 14
 25958  009F9A  0012               	return		;funcret
 25959  009F9C                     __end_of_TMR2_SetInterruptHandler:
 25960                           	callstack 0
 25961                           
 25962 ;; *************** function _TMR1_Initialize *****************
 25963 ;; Defined at:
 25964 ;;		line 66 in file "mcc_generated_files/tmr1.c"
 25965 ;; Parameters:    Size  Location     Type
 25966 ;;		None
 25967 ;; Auto vars:     Size  Location     Type
 25968 ;;		None
 25969 ;; Return value:  Size  Location     Type
 25970 ;;                  1    wreg      void 
 25971 ;; Registers used:
 25972 ;;		wreg, status,2, status,0, cstack
 25973 ;; Tracked objects:
 25974 ;;		On entry : 3F/E
 25975 ;;		On exit  : 3F/E
 25976 ;;		Unchanged: 0/0
 25977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25980 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25981 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25982 ;;Total ram usage:        2 bytes
 25983 ;; Hardware stack levels used: 1
 25984 ;; Hardware stack levels required when called: 5
 25985 ;; This function calls:
 25986 ;;		_TMR1_SetInterruptHandler
 25987 ;; This function is called by:
 25988 ;;		_SYSTEM_Initialize
 25989 ;; This function uses a non-reentrant model
 25990 ;;
 25991                           
 25992                           	psect	text96
 25993  00961C                     __ptext96:
 25994                           	callstack 0
 25995  00961C                     _TMR1_Initialize:
 25996                           	callstack 24
 25997                           
 25998                           ; BSR set to: 14
 25999                           ;mcc_generated_files/tmr1.c: 71:     T1GCON = 0x00;
 26000                           
 26001                           ; BSR set to: 14
 26002                           ;incstack = 0
 26003  00961C  0E00               	movlw	0
 26004  00961E  6ED0               	movwf	208,c	;volatile
 26005                           
 26006                           ;mcc_generated_files/tmr1.c: 74:     T1GATE = 0x00;
 26007  009620  0E00               	movlw	0
 26008  009622  6ED1               	movwf	209,c	;volatile
 26009                           
 26010                           ;mcc_generated_files/tmr1.c: 77:     T1CLK = 0x01;
 26011  009624  0E01               	movlw	1
 26012  009626  6ED2               	movwf	210,c	;volatile
 26013                           
 26014                           ; BSR set to: 14
 26015                           ;mcc_generated_files/tmr1.c: 80:     TMR1H = 0xFF;
 26016  009628  68CE               	setf	206,c	;volatile
 26017                           
 26018                           ;mcc_generated_files/tmr1.c: 83:     TMR1L = 0x38;
 26019  00962A  0E38               	movlw	56
 26020  00962C  6ECD               	movwf	205,c	;volatile
 26021                           
 26022                           ; BSR set to: 14
 26023                           ;mcc_generated_files/tmr1.c: 86:     PIR4bits.TMR1IF = 0;
 26024  00962E  91CE               	bcf	206,0,b	;volatile
 26025                           
 26026                           ; BSR set to: 14
 26027                           ;mcc_generated_files/tmr1.c: 89:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 26028  009630  50CD               	movf	205,w,c	;volatile
 26029  009632  CFCE F012          	movff	4046,??_TMR1_Initialize	;volatile
 26030  009636  6A13               	clrf	(??_TMR1_Initialize+1)^0,c
 26031  009638  C012  F013         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 26032  00963C  6A12               	clrf	??_TMR1_Initialize^0,c
 26033  00963E  1012               	iorwf	??_TMR1_Initialize^0,w,c
 26034  009640  0102               	movlb	2	; () banked
 26035  009642  6FE1               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 26036  009644  5013               	movf	(??_TMR1_Initialize+1)^0,w,c
 26037  009646  6FE2               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 26038                           
 26039                           ; BSR set to: 2
 26040                           ;mcc_generated_files/tmr1.c: 92:     PIE4bits.TMR1IE = 1;
 26041  009648  010E               	movlb	14	; () banked
 26042  00964A  81C6               	bsf	198,0,b	;volatile
 26043                           
 26044                           ; BSR set to: 14
 26045                           ;mcc_generated_files/tmr1.c: 95:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 26046  00964C  0EB6               	movlw	low _TMR1_DefaultInterruptHandler
 26047  00964E  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
 26048  009650  0EA0               	movlw	high _TMR1_DefaultInterruptHandler
 26049  009652  6E11               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
 26050  009654  ECCE  F04F         	call	_TMR1_SetInterruptHandler	;wreg free
 26051                           
 26052                           ; BSR set to: 14
 26053                           ;mcc_generated_files/tmr1.c: 98:     T1CON = 0x31;
 26054  009658  0E31               	movlw	49
 26055  00965A  6ECF               	movwf	207,c	;volatile
 26056                           
 26057                           ; BSR set to: 14
 26058  00965C  0012               	return		;funcret
 26059  00965E                     __end_of_TMR1_Initialize:
 26060                           	callstack 0
 26061                           
 26062 ;; *************** function _TMR1_SetInterruptHandler *****************
 26063 ;; Defined at:
 26064 ;;		line 192 in file "mcc_generated_files/tmr1.c"
 26065 ;; Parameters:    Size  Location     Type
 26066 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 26067 ;;		 -> TMR1_DefaultInterruptHandler(1), 
 26068 ;; Auto vars:     Size  Location     Type
 26069 ;;		None
 26070 ;; Return value:  Size  Location     Type
 26071 ;;                  1    wreg      void 
 26072 ;; Registers used:
 26073 ;;		wreg, status,2, status,0
 26074 ;; Tracked objects:
 26075 ;;		On entry : 3F/E
 26076 ;;		On exit  : 3F/E
 26077 ;;		Unchanged: 3F/0
 26078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26079 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26082 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26083 ;;Total ram usage:        2 bytes
 26084 ;; Hardware stack levels used: 1
 26085 ;; Hardware stack levels required when called: 4
 26086 ;; This function calls:
 26087 ;;		Nothing
 26088 ;; This function is called by:
 26089 ;;		_TMR1_Initialize
 26090 ;; This function uses a non-reentrant model
 26091 ;;
 26092                           
 26093                           	psect	text97
 26094  009F9C                     __ptext97:
 26095                           	callstack 0
 26096  009F9C                     _TMR1_SetInterruptHandler:
 26097                           	callstack 24
 26098                           
 26099                           ; BSR set to: 14
 26100                           ;mcc_generated_files/tmr1.c: 193:     TMR1_InterruptHandler = InterruptHandler;
 26101                           
 26102                           ; BSR set to: 14
 26103                           ;incstack = 0
 26104  009F9C  C010  F2DF         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 26105  009FA0  C011  F2E0         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 26106                           
 26107                           ; BSR set to: 14
 26108  009FA4  0012               	return		;funcret
 26109  009FA6                     __end_of_TMR1_SetInterruptHandler:
 26110                           	callstack 0
 26111                           
 26112 ;; *************** function _TMR0_Initialize *****************
 26113 ;; Defined at:
 26114 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 26115 ;; Parameters:    Size  Location     Type
 26116 ;;		None
 26117 ;; Auto vars:     Size  Location     Type
 26118 ;;		None
 26119 ;; Return value:  Size  Location     Type
 26120 ;;                  1    wreg      void 
 26121 ;; Registers used:
 26122 ;;		wreg, status,2, status,0, cstack
 26123 ;; Tracked objects:
 26124 ;;		On entry : 3F/E
 26125 ;;		On exit  : 3F/E
 26126 ;;		Unchanged: 0/0
 26127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26132 ;;Total ram usage:        0 bytes
 26133 ;; Hardware stack levels used: 1
 26134 ;; Hardware stack levels required when called: 5
 26135 ;; This function calls:
 26136 ;;		_TMR0_SetInterruptHandler
 26137 ;; This function is called by:
 26138 ;;		_SYSTEM_Initialize
 26139 ;; This function uses a non-reentrant model
 26140 ;;
 26141                           
 26142                           	psect	text98
 26143  009CC4                     __ptext98:
 26144                           	callstack 0
 26145  009CC4                     _TMR0_Initialize:
 26146                           	callstack 24
 26147                           
 26148                           ; BSR set to: 14
 26149                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x41;
 26150                           
 26151                           ; BSR set to: 14
 26152                           ;incstack = 0
 26153  009CC4  0E41               	movlw	65
 26154  009CC6  6ED6               	movwf	214,c	;volatile
 26155                           
 26156                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x84;
 26157  009CC8  0E84               	movlw	132
 26158  009CCA  6ED4               	movwf	212,c	;volatile
 26159                           
 26160                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
 26161  009CCC  0E00               	movlw	0
 26162  009CCE  6ED3               	movwf	211,c	;volatile
 26163                           
 26164                           ; BSR set to: 14
 26165                           ;mcc_generated_files/tmr0.c: 81:     PIR0bits.TMR0IF = 0;
 26166  009CD0  9BCA               	bcf	202,5,b	;volatile
 26167                           
 26168                           ; BSR set to: 14
 26169                           ;mcc_generated_files/tmr0.c: 84:     PIE0bits.TMR0IE = 1;
 26170  009CD2  8BC2               	bsf	194,5,b	;volatile
 26171                           
 26172                           ; BSR set to: 14
 26173                           ;mcc_generated_files/tmr0.c: 87:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 26174  009CD4  0EB8               	movlw	low _TMR0_DefaultInterruptHandler
 26175  009CD6  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 26176  009CD8  0EA0               	movlw	high _TMR0_DefaultInterruptHandler
 26177  009CDA  6E11               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 26178  009CDC  ECD3  F04F         	call	_TMR0_SetInterruptHandler	;wreg free
 26179                           
 26180                           ; BSR set to: 14
 26181                           ;mcc_generated_files/tmr0.c: 90:     T0CON0 = 0x87;
 26182  009CE0  0E87               	movlw	135
 26183  009CE2  6ED5               	movwf	213,c	;volatile
 26184                           
 26185                           ; BSR set to: 14
 26186  009CE4  0012               	return		;funcret
 26187  009CE6                     __end_of_TMR0_Initialize:
 26188                           	callstack 0
 26189                           
 26190 ;; *************** function _TMR0_SetInterruptHandler *****************
 26191 ;; Defined at:
 26192 ;;		line 143 in file "mcc_generated_files/tmr0.c"
 26193 ;; Parameters:    Size  Location     Type
 26194 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 26195 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 26196 ;; Auto vars:     Size  Location     Type
 26197 ;;		None
 26198 ;; Return value:  Size  Location     Type
 26199 ;;                  1    wreg      void 
 26200 ;; Registers used:
 26201 ;;		wreg, status,2, status,0
 26202 ;; Tracked objects:
 26203 ;;		On entry : 3F/E
 26204 ;;		On exit  : 3F/E
 26205 ;;		Unchanged: 3F/0
 26206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26207 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26210 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26211 ;;Total ram usage:        2 bytes
 26212 ;; Hardware stack levels used: 1
 26213 ;; Hardware stack levels required when called: 4
 26214 ;; This function calls:
 26215 ;;		Nothing
 26216 ;; This function is called by:
 26217 ;;		_TMR0_Initialize
 26218 ;; This function uses a non-reentrant model
 26219 ;;
 26220                           
 26221                           	psect	text99
 26222  009FA6                     __ptext99:
 26223                           	callstack 0
 26224  009FA6                     _TMR0_SetInterruptHandler:
 26225                           	callstack 24
 26226                           
 26227                           ; BSR set to: 14
 26228                           ;mcc_generated_files/tmr0.c: 144:     TMR0_InterruptHandler = InterruptHandler;
 26229                           
 26230                           ; BSR set to: 14
 26231                           ;incstack = 0
 26232  009FA6  C010  F2E3         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 26233  009FAA  C011  F2E4         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 26234                           
 26235                           ; BSR set to: 14
 26236  009FAE  0012               	return		;funcret
 26237  009FB0                     __end_of_TMR0_SetInterruptHandler:
 26238                           	callstack 0
 26239                           
 26240 ;; *************** function _PMD_Initialize *****************
 26241 ;; Defined at:
 26242 ;;		line 79 in file "mcc_generated_files/mcc.c"
 26243 ;; Parameters:    Size  Location     Type
 26244 ;;		None
 26245 ;; Auto vars:     Size  Location     Type
 26246 ;;		None
 26247 ;; Return value:  Size  Location     Type
 26248 ;;                  1    wreg      void 
 26249 ;; Registers used:
 26250 ;;		wreg, status,2
 26251 ;; Tracked objects:
 26252 ;;		On entry : 3F/0
 26253 ;;		On exit  : 3F/E
 26254 ;;		Unchanged: 0/0
 26255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26260 ;;Total ram usage:        0 bytes
 26261 ;; Hardware stack levels used: 1
 26262 ;; Hardware stack levels required when called: 4
 26263 ;; This function calls:
 26264 ;;		Nothing
 26265 ;; This function is called by:
 26266 ;;		_SYSTEM_Initialize
 26267 ;; This function uses a non-reentrant model
 26268 ;;
 26269                           
 26270                           	psect	text100
 26271  009D62                     __ptext100:
 26272                           	callstack 0
 26273  009D62                     _PMD_Initialize:
 26274                           	callstack 25
 26275                           
 26276                           ; BSR set to: 0
 26277                           ;mcc_generated_files/mcc.c: 82:     PMD0 = 0x00;
 26278                           
 26279                           ; BSR set to: 14
 26280                           ;incstack = 0
 26281  009D62  0E00               	movlw	0
 26282  009D64  010E               	movlb	14	; () banked
 26283  009D66  6FE1               	movwf	225,b	;volatile
 26284                           
 26285                           ;mcc_generated_files/mcc.c: 84:     PMD1 = 0x00;
 26286  009D68  0E00               	movlw	0
 26287  009D6A  6FE2               	movwf	226,b	;volatile
 26288                           
 26289                           ;mcc_generated_files/mcc.c: 86:     PMD2 = 0x00;
 26290  009D6C  0E00               	movlw	0
 26291  009D6E  6FE3               	movwf	227,b	;volatile
 26292                           
 26293                           ;mcc_generated_files/mcc.c: 88:     PMD3 = 0x00;
 26294  009D70  0E00               	movlw	0
 26295  009D72  6FE4               	movwf	228,b	;volatile
 26296                           
 26297                           ;mcc_generated_files/mcc.c: 90:     PMD4 = 0x00;
 26298  009D74  0E00               	movlw	0
 26299  009D76  6FE5               	movwf	229,b	;volatile
 26300                           
 26301                           ;mcc_generated_files/mcc.c: 92:     PMD5 = 0x00;
 26302  009D78  0E00               	movlw	0
 26303  009D7A  6FE6               	movwf	230,b	;volatile
 26304                           
 26305                           ; BSR set to: 14
 26306  009D7C  0012               	return		;funcret
 26307  009D7E                     __end_of_PMD_Initialize:
 26308                           	callstack 0
 26309                           
 26310 ;; *************** function _PIN_MANAGER_Initialize *****************
 26311 ;; Defined at:
 26312 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 26313 ;; Parameters:    Size  Location     Type
 26314 ;;		None
 26315 ;; Auto vars:     Size  Location     Type
 26316 ;;		None
 26317 ;; Return value:  Size  Location     Type
 26318 ;;                  1    wreg      void 
 26319 ;; Registers used:
 26320 ;;		wreg, status,2
 26321 ;; Tracked objects:
 26322 ;;		On entry : 3F/E
 26323 ;;		On exit  : 3F/E
 26324 ;;		Unchanged: 0/0
 26325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26330 ;;Total ram usage:        0 bytes
 26331 ;; Hardware stack levels used: 1
 26332 ;; Hardware stack levels required when called: 4
 26333 ;; This function calls:
 26334 ;;		Nothing
 26335 ;; This function is called by:
 26336 ;;		_SYSTEM_Initialize
 26337 ;; This function uses a non-reentrant model
 26338 ;;
 26339                           
 26340                           	psect	text101
 26341  008158                     __ptext101:
 26342                           	callstack 0
 26343  008158                     _PIN_MANAGER_Initialize:
 26344                           	callstack 25
 26345                           
 26346                           ; BSR set to: 14
 26347                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 26348                           
 26349                           ; BSR set to: 14
 26350                           ;incstack = 0
 26351  008158  0E00               	movlw	0
 26352  00815A  6E87               	movwf	135,c	;volatile
 26353                           
 26354                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 26355  00815C  0E00               	movlw	0
 26356  00815E  6E86               	movwf	134,c	;volatile
 26357                           
 26358                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 26359  008160  0E00               	movlw	0
 26360  008162  6E83               	movwf	131,c	;volatile
 26361                           
 26362                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 26363  008164  0E00               	movlw	0
 26364  008166  6E84               	movwf	132,c	;volatile
 26365                           
 26366                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 26367  008168  0E00               	movlw	0
 26368  00816A  6E85               	movwf	133,c	;volatile
 26369                           
 26370                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x00;
 26371  00816C  0E00               	movlw	0
 26372  00816E  6E8C               	movwf	140,c	;volatile
 26373                           
 26374                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x7F;
 26375  008170  0E7F               	movlw	127
 26376  008172  6E88               	movwf	136,c	;volatile
 26377                           
 26378                           ; BSR set to: 14
 26379                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 26380  008174  6889               	setf	137,c	;volatile
 26381                           
 26382                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x58;
 26383  008176  0E58               	movlw	88
 26384  008178  6E8A               	movwf	138,c	;volatile
 26385                           
 26386                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
 26387  00817A  0E00               	movlw	0
 26388  00817C  6E8B               	movwf	139,c	;volatile
 26389                           
 26390                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
 26391  00817E  0E00               	movlw	0
 26392  008180  010F               	movlb	15	; () banked
 26393  008182  6F26               	movwf	38,b	;volatile
 26394                           
 26395                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
 26396  008184  0E00               	movlw	0
 26397  008186  6F21               	movwf	33,b	;volatile
 26398                           
 26399                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x00;
 26400  008188  0E00               	movlw	0
 26401  00818A  6F19               	movwf	25,b	;volatile
 26402                           
 26403                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x00;
 26404  00818C  0E00               	movlw	0
 26405  00818E  6F2E               	movwf	46,b	;volatile
 26406                           
 26407                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x01;
 26408  008190  0E01               	movlw	1
 26409  008192  6F11               	movwf	17,b	;volatile
 26410                           
 26411                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 26412  008194  0E00               	movlw	0
 26413  008196  6F25               	movwf	37,b	;volatile
 26414                           
 26415                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 26416  008198  0E00               	movlw	0
 26417  00819A  6F2D               	movwf	45,b	;volatile
 26418                           
 26419                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0xF7;
 26420  00819C  0EF7               	movlw	247
 26421  00819E  6F18               	movwf	24,b	;volatile
 26422                           
 26423                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 26424  0081A0  0E00               	movlw	0
 26425  0081A2  6F10               	movwf	16,b	;volatile
 26426                           
 26427                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 26428  0081A4  0E00               	movlw	0
 26429  0081A6  6F20               	movwf	32,b	;volatile
 26430                           
 26431                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 26432  0081A8  0E00               	movlw	0
 26433  0081AA  6F2C               	movwf	44,b	;volatile
 26434                           
 26435                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 26436  0081AC  0E00               	movlw	0
 26437  0081AE  6F0F               	movwf	15,b	;volatile
 26438                           
 26439                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 26440  0081B0  0E00               	movlw	0
 26441  0081B2  6F17               	movwf	23,b	;volatile
 26442                           
 26443                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 26444  0081B4  0E00               	movlw	0
 26445  0081B6  6F1F               	movwf	31,b	;volatile
 26446                           
 26447                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 26448  0081B8  0E00               	movlw	0
 26449  0081BA  6F24               	movwf	36,b	;volatile
 26450                           
 26451                           ; BSR set to: 15
 26452                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 26453  0081BC  690E               	setf	14,b	;volatile
 26454                           
 26455                           ; BSR set to: 15
 26456                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 26457  0081BE  6916               	setf	22,b	;volatile
 26458                           
 26459                           ; BSR set to: 15
 26460                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 26461  0081C0  691E               	setf	30,b	;volatile
 26462                           
 26463                           ; BSR set to: 15
 26464                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 26465  0081C2  6923               	setf	35,b	;volatile
 26466                           
 26467                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 26468  0081C4  0E07               	movlw	7
 26469  0081C6  6F2B               	movwf	43,b	;volatile
 26470                           
 26471                           ; BSR set to: 15
 26472                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 26473  0081C8  690D               	setf	13,b	;volatile
 26474                           
 26475                           ; BSR set to: 15
 26476                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 26477  0081CA  6915               	setf	21,b	;volatile
 26478                           
 26479                           ; BSR set to: 15
 26480                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 26481  0081CC  691D               	setf	29,b	;volatile
 26482                           
 26483                           ; BSR set to: 15
 26484                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 26485  0081CE  6922               	setf	34,b	;volatile
 26486                           
 26487                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
 26488  0081D0  0E0F               	movlw	15
 26489  0081D2  6F2A               	movwf	42,b	;volatile
 26490                           
 26491                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
 26492  0081D4  0E13               	movlw	19
 26493  0081D6  010E               	movlb	14	; () banked
 26494  0081D8  6FB7               	movwf	183,b	;volatile
 26495                           
 26496                           ;mcc_generated_files/pin_manager.c: 128:     RX1PPS = 0x16;
 26497  0081DA  0E16               	movlw	22
 26498  0081DC  6FB5               	movwf	181,b	;volatile
 26499                           
 26500                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x0F;
 26501  0081DE  0E0F               	movlw	15
 26502  0081E0  6FFA               	movwf	250,b	;volatile
 26503                           
 26504                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x10;
 26505  0081E2  0E10               	movlw	16
 26506  0081E4  6FFB               	movwf	251,b	;volatile
 26507                           
 26508                           ;mcc_generated_files/pin_manager.c: 131:     RC7PPS = 0x09;
 26509  0081E6  0E09               	movlw	9
 26510  0081E8  6FFE               	movwf	254,b	;volatile
 26511                           
 26512                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 26513  0081EA  0E14               	movlw	20
 26514  0081EC  6FB8               	movwf	184,b	;volatile
 26515                           
 26516                           ; BSR set to: 14
 26517  0081EE  0012               	return		;funcret
 26518  0081F0                     __end_of_PIN_MANAGER_Initialize:
 26519                           	callstack 0
 26520                           
 26521 ;; *************** function _OSCILLATOR_Initialize *****************
 26522 ;; Defined at:
 26523 ;;		line 65 in file "mcc_generated_files/mcc.c"
 26524 ;; Parameters:    Size  Location     Type
 26525 ;;		None
 26526 ;; Auto vars:     Size  Location     Type
 26527 ;;		None
 26528 ;; Return value:  Size  Location     Type
 26529 ;;                  1    wreg      void 
 26530 ;; Registers used:
 26531 ;;		wreg, status,2
 26532 ;; Tracked objects:
 26533 ;;		On entry : 3F/E
 26534 ;;		On exit  : 3F/E
 26535 ;;		Unchanged: 0/0
 26536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26541 ;;Total ram usage:        0 bytes
 26542 ;; Hardware stack levels used: 1
 26543 ;; Hardware stack levels required when called: 4
 26544 ;; This function calls:
 26545 ;;		Nothing
 26546 ;; This function is called by:
 26547 ;;		_SYSTEM_Initialize
 26548 ;; This function uses a non-reentrant model
 26549 ;;
 26550                           
 26551                           	psect	text102
 26552  009EAC                     __ptext102:
 26553                           	callstack 0
 26554  009EAC                     _OSCILLATOR_Initialize:
 26555                           	callstack 25
 26556                           
 26557                           ; BSR set to: 14
 26558                           ;mcc_generated_files/mcc.c: 68:     OSCCON1 = 0x60;
 26559                           
 26560                           ; BSR set to: 14
 26561                           ;incstack = 0
 26562  009EAC  0E60               	movlw	96
 26563  009EAE  6FD8               	movwf	216,b	;volatile
 26564                           
 26565                           ;mcc_generated_files/mcc.c: 70:     OSCCON3 = 0x00;
 26566  009EB0  0E00               	movlw	0
 26567  009EB2  6FDA               	movwf	218,b	;volatile
 26568                           
 26569                           ;mcc_generated_files/mcc.c: 72:     OSCEN = 0x00;
 26570  009EB4  0E00               	movlw	0
 26571  009EB6  6FDC               	movwf	220,b	;volatile
 26572                           
 26573                           ;mcc_generated_files/mcc.c: 74:     OSCFRQ = 0x08;
 26574  009EB8  0E08               	movlw	8
 26575  009EBA  6FDE               	movwf	222,b	;volatile
 26576                           
 26577                           ;mcc_generated_files/mcc.c: 76:     OSCTUNE = 0x00;
 26578  009EBC  0E00               	movlw	0
 26579  009EBE  6FDD               	movwf	221,b	;volatile
 26580                           
 26581                           ; BSR set to: 14
 26582  009EC0  0012               	return		;funcret
 26583  009EC2                     __end_of_OSCILLATOR_Initialize:
 26584                           	callstack 0
 26585                           
 26586 ;; *************** function _INTERRUPT_Initialize *****************
 26587 ;; Defined at:
 26588 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 26589 ;; Parameters:    Size  Location     Type
 26590 ;;		None
 26591 ;; Auto vars:     Size  Location     Type
 26592 ;;		None
 26593 ;; Return value:  Size  Location     Type
 26594 ;;                  1    wreg      void 
 26595 ;; Registers used:
 26596 ;;		None
 26597 ;; Tracked objects:
 26598 ;;		On entry : 3F/0
 26599 ;;		On exit  : 3F/0
 26600 ;;		Unchanged: 3F/0
 26601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26606 ;;Total ram usage:        0 bytes
 26607 ;; Hardware stack levels used: 1
 26608 ;; Hardware stack levels required when called: 4
 26609 ;; This function calls:
 26610 ;;		Nothing
 26611 ;; This function is called by:
 26612 ;;		_SYSTEM_Initialize
 26613 ;; This function uses a non-reentrant model
 26614 ;;
 26615                           
 26616                           	psect	text103
 26617  00A08A                     __ptext103:
 26618                           	callstack 0
 26619  00A08A                     _INTERRUPT_Initialize:
 26620                           	callstack 25
 26621                           
 26622                           ; BSR set to: 0
 26623                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
 26624                           
 26625                           ; BSR set to: 14
 26626                           ;incstack = 0
 26627  00A08A  9AF2               	bcf	242,5,c	;volatile
 26628                           
 26629                           ; BSR set to: 0
 26630  00A08C  0012               	return		;funcret
 26631  00A08E                     __end_of_INTERRUPT_Initialize:
 26632                           	callstack 0
 26633                           
 26634 ;; *************** function _I2C1_Initialize *****************
 26635 ;; Defined at:
 26636 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 26637 ;; Parameters:    Size  Location     Type
 26638 ;;		None
 26639 ;; Auto vars:     Size  Location     Type
 26640 ;;		None
 26641 ;; Return value:  Size  Location     Type
 26642 ;;                  1    wreg      void 
 26643 ;; Registers used:
 26644 ;;		wreg, status,2
 26645 ;; Tracked objects:
 26646 ;;		On entry : 3F/E
 26647 ;;		On exit  : 3F/E
 26648 ;;		Unchanged: 3F/0
 26649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26654 ;;Total ram usage:        0 bytes
 26655 ;; Hardware stack levels used: 1
 26656 ;; Hardware stack levels required when called: 4
 26657 ;; This function calls:
 26658 ;;		Nothing
 26659 ;; This function is called by:
 26660 ;;		_SYSTEM_Initialize
 26661 ;; This function uses a non-reentrant model
 26662 ;;
 26663                           
 26664                           	psect	text104
 26665  009F00                     __ptext104:
 26666                           	callstack 0
 26667  009F00                     _I2C1_Initialize:
 26668                           	callstack 25
 26669                           
 26670                           ; BSR set to: 14
 26671                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 26672                           
 26673                           ; BSR set to: 0
 26674                           ;incstack = 0
 26675  009F00  0E80               	movlw	128
 26676  009F02  6E95               	movwf	149,c	;volatile
 26677                           
 26678                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 26679  009F04  0E08               	movlw	8
 26680  009F06  6E96               	movwf	150,c	;volatile
 26681                           
 26682                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 26683  009F08  0E00               	movlw	0
 26684  009F0A  6E97               	movwf	151,c	;volatile
 26685                           
 26686                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x9F;
 26687  009F0C  0E9F               	movlw	159
 26688  009F0E  6E93               	movwf	147,c	;volatile
 26689                           
 26690                           ; BSR set to: 14
 26691                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 26692  009F10  9A96               	bcf	150,5,c	;volatile
 26693                           
 26694                           ; BSR set to: 14
 26695  009F12  0012               	return		;funcret
 26696  009F14                     __end_of_I2C1_Initialize:
 26697                           	callstack 0
 26698                           
 26699 ;; *************** function _EUSART1_Initialize *****************
 26700 ;; Defined at:
 26701 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 26702 ;; Parameters:    Size  Location     Type
 26703 ;;		None
 26704 ;; Auto vars:     Size  Location     Type
 26705 ;;		None
 26706 ;; Return value:  Size  Location     Type
 26707 ;;                  1    wreg      void 
 26708 ;; Registers used:
 26709 ;;		wreg, status,2, status,0, cstack
 26710 ;; Tracked objects:
 26711 ;;		On entry : 3F/E
 26712 ;;		On exit  : 3F/E
 26713 ;;		Unchanged: 0/0
 26714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26719 ;;Total ram usage:        0 bytes
 26720 ;; Hardware stack levels used: 1
 26721 ;; Hardware stack levels required when called: 5
 26722 ;; This function calls:
 26723 ;;		_EUSART1_SetErrorHandler
 26724 ;;		_EUSART1_SetFramingErrorHandler
 26725 ;;		_EUSART1_SetOverrunErrorHandler
 26726 ;;		_EUSART1_SetRxInterruptHandler
 26727 ;;		_EUSART1_SetTxInterruptHandler
 26728 ;; This function is called by:
 26729 ;;		_SYSTEM_Initialize
 26730 ;; This function uses a non-reentrant model
 26731 ;;
 26732                           
 26733                           	psect	text105
 26734  0087D0                     __ptext105:
 26735                           	callstack 0
 26736  0087D0                     _EUSART1_Initialize:
 26737                           	callstack 24
 26738                           
 26739                           ; BSR set to: 14
 26740                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 26741                           
 26742                           ; BSR set to: 14
 26743                           ;incstack = 0
 26744  0087D0  9BC5               	bcf	197,5,b	;volatile
 26745                           
 26746                           ; BSR set to: 14
 26747                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 26748  0087D2  0EBE               	movlw	low _EUSART1_Receive_ISR
 26749  0087D4  6E10               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
 26750  0087D6  0E80               	movlw	high _EUSART1_Receive_ISR
 26751  0087D8  6E11               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
 26752  0087DA  ECDD  F04F         	call	_EUSART1_SetRxInterruptHandler	;wreg free
 26753                           
 26754                           ; BSR set to: 14
 26755                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 26756  0087DE  99C5               	bcf	197,4,b	;volatile
 26757                           
 26758                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 26759  0087E0  0EA4               	movlw	low _EUSART1_Transmit_ISR
 26760  0087E2  6E10               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
 26761  0087E4  0E98               	movlw	high _EUSART1_Transmit_ISR
 26762  0087E6  6E11               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
 26763  0087E8  ECD8  F04F         	call	_EUSART1_SetTxInterruptHandler	;wreg free
 26764                           
 26765                           ; BSR set to: 14
 26766                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 26767  0087EC  0E08               	movlw	8
 26768  0087EE  6E9F               	movwf	159,c	;volatile
 26769                           
 26770                           ; BSR set to: 14
 26771                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 26772  0087F0  0E90               	movlw	144
 26773  0087F2  6E9D               	movwf	157,c	;volatile
 26774                           
 26775                           ; BSR set to: 14
 26776                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 26777  0087F4  0E24               	movlw	36
 26778  0087F6  6E9E               	movwf	158,c	;volatile
 26779                           
 26780                           ; BSR set to: 14
 26781                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x82;
 26782  0087F8  0E82               	movlw	130
 26783  0087FA  6E9B               	movwf	155,c	;volatile
 26784                           
 26785                           ; BSR set to: 14
 26786                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x06;
 26787  0087FC  0E06               	movlw	6
 26788  0087FE  6E9C               	movwf	156,c	;volatile
 26789                           
 26790                           ; BSR set to: 14
 26791                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 26792  008800  0EBA               	movlw	low _EUSART1_DefaultFramingErrorHandler
 26793  008802  6E10               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
 26794  008804  0EA0               	movlw	high _EUSART1_DefaultFramingErrorHandler
 26795  008806  6E11               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 26796  008808  ECE7  F04F         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 26797                           
 26798                           ; BSR set to: 14
 26799                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 26800  00880C  0E7A               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 26801  00880E  6E10               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
 26802  008810  0EA0               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 26803  008812  6E11               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 26804  008814  ECE2  F04F         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 26805                           
 26806                           ; BSR set to: 14
 26807                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 26808  008818  0E80               	movlw	low _EUSART1_DefaultErrorHandler
 26809  00881A  6E10               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
 26810  00881C  0EA0               	movlw	high _EUSART1_DefaultErrorHandler
 26811  00881E  6E11               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
 26812  008820  ECEC  F04F         	call	_EUSART1_SetErrorHandler	;wreg free
 26813                           
 26814                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 26815  008824  0E00               	movlw	0
 26816  008826  0101               	movlb	1	; () banked
 26817  008828  6F9D               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 26818                           
 26819                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 26820  00882A  0E00               	movlw	0
 26821  00882C  0100               	movlb	0	; () banked
 26822  00882E  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 26823                           
 26824                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 26825  008830  0E00               	movlw	0
 26826  008832  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 26827                           
 26828                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 26829  008834  0E08               	movlw	8
 26830  008836  0101               	movlb	1	; () banked
 26831  008838  6FFD               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
 26832                           
 26833                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 26834  00883A  0E00               	movlw	0
 26835  00883C  0100               	movlb	0	; () banked
 26836  00883E  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 26837                           
 26838                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 26839  008840  0E00               	movlw	0
 26840  008842  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 26841                           
 26842                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 26843  008844  0E00               	movlw	0
 26844  008846  6F93               	movwf	_eusart1RxCount& (0+255),b	;volatile
 26845                           
 26846                           ; BSR set to: 0
 26847                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 26848  008848  010E               	movlb	14	; () banked
 26849  00884A  8BC5               	bsf	197,5,b	;volatile
 26850                           
 26851                           ; BSR set to: 14
 26852  00884C  0012               	return		;funcret
 26853  00884E                     __end_of_EUSART1_Initialize:
 26854                           	callstack 0
 26855                           
 26856 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 26857 ;; Defined at:
 26858 ;;		line 276 in file "mcc_generated_files/eusart1.c"
 26859 ;; Parameters:    Size  Location     Type
 26860 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26861 ;;		 -> EUSART1_Transmit_ISR(1), 
 26862 ;; Auto vars:     Size  Location     Type
 26863 ;;		None
 26864 ;; Return value:  Size  Location     Type
 26865 ;;                  1    wreg      void 
 26866 ;; Registers used:
 26867 ;;		wreg, status,2, status,0
 26868 ;; Tracked objects:
 26869 ;;		On entry : 3F/E
 26870 ;;		On exit  : 3F/E
 26871 ;;		Unchanged: 3F/0
 26872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26873 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26876 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26877 ;;Total ram usage:        2 bytes
 26878 ;; Hardware stack levels used: 1
 26879 ;; Hardware stack levels required when called: 4
 26880 ;; This function calls:
 26881 ;;		Nothing
 26882 ;; This function is called by:
 26883 ;;		_EUSART1_Initialize
 26884 ;; This function uses a non-reentrant model
 26885 ;;
 26886                           
 26887                           	psect	text106
 26888  009FB0                     __ptext106:
 26889                           	callstack 0
 26890  009FB0                     _EUSART1_SetTxInterruptHandler:
 26891                           	callstack 24
 26892                           
 26893                           ; BSR set to: 14
 26894                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 26895                           
 26896                           ; BSR set to: 14
 26897                           ;incstack = 0
 26898  009FB0  C010  F2ED         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
 26899  009FB4  C011  F2EE         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
 26900                           
 26901                           ; BSR set to: 14
 26902  009FB8  0012               	return		;funcret
 26903  009FBA                     __end_of_EUSART1_SetTxInterruptHandler:
 26904                           	callstack 0
 26905                           
 26906 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 26907 ;; Defined at:
 26908 ;;		line 280 in file "mcc_generated_files/eusart1.c"
 26909 ;; Parameters:    Size  Location     Type
 26910 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26911 ;;		 -> EUSART1_Receive_ISR(1), 
 26912 ;; Auto vars:     Size  Location     Type
 26913 ;;		None
 26914 ;; Return value:  Size  Location     Type
 26915 ;;                  1    wreg      void 
 26916 ;; Registers used:
 26917 ;;		wreg, status,2, status,0
 26918 ;; Tracked objects:
 26919 ;;		On entry : 3F/E
 26920 ;;		On exit  : 3F/E
 26921 ;;		Unchanged: 3F/0
 26922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26923 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26926 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26927 ;;Total ram usage:        2 bytes
 26928 ;; Hardware stack levels used: 1
 26929 ;; Hardware stack levels required when called: 4
 26930 ;; This function calls:
 26931 ;;		Nothing
 26932 ;; This function is called by:
 26933 ;;		_EUSART1_Initialize
 26934 ;; This function uses a non-reentrant model
 26935 ;;
 26936                           
 26937                           	psect	text107
 26938  009FBA                     __ptext107:
 26939                           	callstack 0
 26940  009FBA                     _EUSART1_SetRxInterruptHandler:
 26941                           	callstack 24
 26942                           
 26943                           ; BSR set to: 14
 26944                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 26945                           
 26946                           ; BSR set to: 14
 26947                           ;incstack = 0
 26948  009FBA  C010  F2EB         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
 26949  009FBE  C011  F2EC         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
 26950                           
 26951                           ; BSR set to: 14
 26952  009FC2  0012               	return		;funcret
 26953  009FC4                     __end_of_EUSART1_SetRxInterruptHandler:
 26954                           	callstack 0
 26955                           
 26956 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 26957 ;; Defined at:
 26958 ;;		line 268 in file "mcc_generated_files/eusart1.c"
 26959 ;; Parameters:    Size  Location     Type
 26960 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26961 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 26962 ;; Auto vars:     Size  Location     Type
 26963 ;;		None
 26964 ;; Return value:  Size  Location     Type
 26965 ;;                  1    wreg      void 
 26966 ;; Registers used:
 26967 ;;		wreg, status,2, status,0
 26968 ;; Tracked objects:
 26969 ;;		On entry : 3F/E
 26970 ;;		On exit  : 3F/E
 26971 ;;		Unchanged: 3F/0
 26972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26973 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26976 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26977 ;;Total ram usage:        2 bytes
 26978 ;; Hardware stack levels used: 1
 26979 ;; Hardware stack levels required when called: 4
 26980 ;; This function calls:
 26981 ;;		Nothing
 26982 ;; This function is called by:
 26983 ;;		_EUSART1_Initialize
 26984 ;; This function uses a non-reentrant model
 26985 ;;
 26986                           
 26987                           	psect	text108
 26988  009FC4                     __ptext108:
 26989                           	callstack 0
 26990  009FC4                     _EUSART1_SetOverrunErrorHandler:
 26991                           	callstack 24
 26992                           
 26993                           ; BSR set to: 14
 26994                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
 26995                           
 26996                           ; BSR set to: 14
 26997                           ;incstack = 0
 26998  009FC4  C010  F2E7         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 26999  009FC8  C011  F2E8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 27000                           
 27001                           ; BSR set to: 14
 27002  009FCC  0012               	return		;funcret
 27003  009FCE                     __end_of_EUSART1_SetOverrunErrorHandler:
 27004                           	callstack 0
 27005                           
 27006 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 27007 ;; Defined at:
 27008 ;;		line 264 in file "mcc_generated_files/eusart1.c"
 27009 ;; Parameters:    Size  Location     Type
 27010 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 27011 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 27012 ;; Auto vars:     Size  Location     Type
 27013 ;;		None
 27014 ;; Return value:  Size  Location     Type
 27015 ;;                  1    wreg      void 
 27016 ;; Registers used:
 27017 ;;		wreg, status,2, status,0
 27018 ;; Tracked objects:
 27019 ;;		On entry : 3F/E
 27020 ;;		On exit  : 3F/E
 27021 ;;		Unchanged: 3F/0
 27022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27023 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27026 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27027 ;;Total ram usage:        2 bytes
 27028 ;; Hardware stack levels used: 1
 27029 ;; Hardware stack levels required when called: 4
 27030 ;; This function calls:
 27031 ;;		Nothing
 27032 ;; This function is called by:
 27033 ;;		_EUSART1_Initialize
 27034 ;; This function uses a non-reentrant model
 27035 ;;
 27036                           
 27037                           	psect	text109
 27038  009FCE                     __ptext109:
 27039                           	callstack 0
 27040  009FCE                     _EUSART1_SetFramingErrorHandler:
 27041                           	callstack 24
 27042                           
 27043                           ; BSR set to: 14
 27044                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
 27045                           
 27046                           ; BSR set to: 14
 27047                           ;incstack = 0
 27048  009FCE  C010  F2E9         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 27049  009FD2  C011  F2EA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 27050                           
 27051                           ; BSR set to: 14
 27052  009FD6  0012               	return		;funcret
 27053  009FD8                     __end_of_EUSART1_SetFramingErrorHandler:
 27054                           	callstack 0
 27055                           
 27056 ;; *************** function _EUSART1_SetErrorHandler *****************
 27057 ;; Defined at:
 27058 ;;		line 272 in file "mcc_generated_files/eusart1.c"
 27059 ;; Parameters:    Size  Location     Type
 27060 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 27061 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 27062 ;; Auto vars:     Size  Location     Type
 27063 ;;		None
 27064 ;; Return value:  Size  Location     Type
 27065 ;;                  1    wreg      void 
 27066 ;; Registers used:
 27067 ;;		wreg, status,2, status,0
 27068 ;; Tracked objects:
 27069 ;;		On entry : 3F/E
 27070 ;;		On exit  : 3F/E
 27071 ;;		Unchanged: 3F/0
 27072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27073 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27076 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27077 ;;Total ram usage:        2 bytes
 27078 ;; Hardware stack levels used: 1
 27079 ;; Hardware stack levels required when called: 4
 27080 ;; This function calls:
 27081 ;;		Nothing
 27082 ;; This function is called by:
 27083 ;;		_EUSART1_Initialize
 27084 ;; This function uses a non-reentrant model
 27085 ;;
 27086                           
 27087                           	psect	text110
 27088  009FD8                     __ptext110:
 27089                           	callstack 0
 27090  009FD8                     _EUSART1_SetErrorHandler:
 27091                           	callstack 24
 27092                           
 27093                           ; BSR set to: 14
 27094                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
 27095                           
 27096                           ; BSR set to: 14
 27097                           ;incstack = 0
 27098  009FD8  C010  F2E5         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 27099  009FDC  C011  F2E6         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 27100                           
 27101                           ; BSR set to: 14
 27102  009FE0  0012               	return		;funcret
 27103  009FE2                     __end_of_EUSART1_SetErrorHandler:
 27104                           	callstack 0
 27105                           
 27106 ;; *************** function _ADCC_Initialize *****************
 27107 ;; Defined at:
 27108 ;;		line 62 in file "mcc_generated_files/adcc.c"
 27109 ;; Parameters:    Size  Location     Type
 27110 ;;		None
 27111 ;; Auto vars:     Size  Location     Type
 27112 ;;		None
 27113 ;; Return value:  Size  Location     Type
 27114 ;;                  1    wreg      void 
 27115 ;; Registers used:
 27116 ;;		wreg, status,2
 27117 ;; Tracked objects:
 27118 ;;		On entry : 3F/E
 27119 ;;		On exit  : 3F/F
 27120 ;;		Unchanged: 0/0
 27121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27126 ;;Total ram usage:        0 bytes
 27127 ;; Hardware stack levels used: 1
 27128 ;; Hardware stack levels required when called: 4
 27129 ;; This function calls:
 27130 ;;		Nothing
 27131 ;; This function is called by:
 27132 ;;		_SYSTEM_Initialize
 27133 ;; This function uses a non-reentrant model
 27134 ;;
 27135                           
 27136                           	psect	text111
 27137  0093D0                     __ptext111:
 27138                           	callstack 0
 27139  0093D0                     _ADCC_Initialize:
 27140                           	callstack 25
 27141                           
 27142                           ; BSR set to: 14
 27143                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 27144                           
 27145                           ; BSR set to: 14
 27146                           ;incstack = 0
 27147  0093D0  0E00               	movlw	0
 27148  0093D2  6E6A               	movwf	106,c	;volatile
 27149                           
 27150                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 27151  0093D4  0E00               	movlw	0
 27152  0093D6  6E6B               	movwf	107,c	;volatile
 27153                           
 27154                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 27155  0093D8  0E00               	movlw	0
 27156  0093DA  6E6C               	movwf	108,c	;volatile
 27157                           
 27158                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 27159  0093DC  0E00               	movlw	0
 27160  0093DE  6E6D               	movwf	109,c	;volatile
 27161                           
 27162                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 27163  0093E0  0E00               	movlw	0
 27164  0093E2  6E68               	movwf	104,c	;volatile
 27165                           
 27166                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 27167  0093E4  0E00               	movlw	0
 27168  0093E6  6E69               	movwf	105,c	;volatile
 27169                           
 27170                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
 27171  0093E8  0E00               	movlw	0
 27172  0093EA  6E66               	movwf	102,c	;volatile
 27173                           
 27174                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
 27175  0093EC  0E00               	movlw	0
 27176  0093EE  010F               	movlb	15	; () banked
 27177  0093F0  6F5F               	movwf	95,b	;volatile
 27178                           
 27179                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
 27180  0093F2  0E00               	movlw	0
 27181  0093F4  6F5D               	movwf	93,b	;volatile
 27182                           
 27183                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
 27184  0093F6  0E00               	movlw	0
 27185  0093F8  6F5E               	movwf	94,b	;volatile
 27186                           
 27187                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
 27188  0093FA  0E00               	movlw	0
 27189  0093FC  6F59               	movwf	89,b	;volatile
 27190                           
 27191                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
 27192  0093FE  0E00               	movlw	0
 27193  009400  6F5A               	movwf	90,b	;volatile
 27194                           
 27195                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
 27196  009402  0E00               	movlw	0
 27197  009404  6F5B               	movwf	91,b	;volatile
 27198                           
 27199                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
 27200  009406  0E00               	movlw	0
 27201  009408  6E65               	movwf	101,c	;volatile
 27202                           
 27203                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
 27204  00940A  0E00               	movlw	0
 27205  00940C  6F58               	movwf	88,b	;volatile
 27206                           
 27207                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
 27208  00940E  0E00               	movlw	0
 27209  009410  6F56               	movwf	86,b	;volatile
 27210                           
 27211                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x3F;
 27212  009412  0E3F               	movlw	63
 27213  009414  6F57               	movwf	87,b	;volatile
 27214                           
 27215                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x80;
 27216  009416  0E80               	movlw	128
 27217  009418  6E60               	movwf	96,c	;volatile
 27218                           
 27219                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x00;
 27220  00941A  0E00               	movlw	0
 27221  00941C  6F5C               	movwf	92,b	;volatile
 27222                           
 27223                           ; BSR set to: 15
 27224  00941E  0012               	return		;funcret
 27225  009420                     __end_of_ADCC_Initialize:
 27226                           	callstack 0
 27227                           
 27228 ;; *************** function _EUSART1_is_rx_ready *****************
 27229 ;; Defined at:
 27230 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 27231 ;; Parameters:    Size  Location     Type
 27232 ;;		None
 27233 ;; Auto vars:     Size  Location     Type
 27234 ;;		None
 27235 ;; Return value:  Size  Location     Type
 27236 ;;                  1    wreg      _Bool 
 27237 ;; Registers used:
 27238 ;;		wreg, status,2
 27239 ;; Tracked objects:
 27240 ;;		On entry : 0/1
 27241 ;;		On exit  : 3F/0
 27242 ;;		Unchanged: 0/0
 27243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27248 ;;Total ram usage:        0 bytes
 27249 ;; Hardware stack levels used: 1
 27250 ;; Hardware stack levels required when called: 4
 27251 ;; This function calls:
 27252 ;;		Nothing
 27253 ;; This function is called by:
 27254 ;;		_main
 27255 ;; This function uses a non-reentrant model
 27256 ;;
 27257                           
 27258                           	psect	text112
 27259  009F26                     __ptext112:
 27260                           	callstack 0
 27261  009F26                     _EUSART1_is_rx_ready:
 27262                           	callstack 26
 27263                           
 27264                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 27265                           
 27266                           ; BSR set to: 15
 27267                           ;incstack = 0
 27268  009F26  0100               	movlb	0	; () banked
 27269  009F28  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 27270  009F2A  B4D8               	btfsc	status,2,c
 27271  009F2C  D002               	goto	u29800
 27272  009F2E  0E01               	movlw	1
 27273  009F30  0012               	return	
 27274  009F32                     u29800:
 27275  009F32  0E00               	movlw	0
 27276                           
 27277                           ; BSR set to: 0
 27278  009F34  0012               	return		;funcret
 27279  009F36                     __end_of_EUSART1_is_rx_ready:
 27280                           	callstack 0
 27281                           
 27282 ;; *************** function _ControlMotor *****************
 27283 ;; Defined at:
 27284 ;;		line 703 in file "outputs_MC50.c"
 27285 ;; Parameters:    Size  Location     Type
 27286 ;;		None
 27287 ;; Auto vars:     Size  Location     Type
 27288 ;;  stateMotor      1   23[COMRAM] enum E10381
 27289 ;; Return value:  Size  Location     Type
 27290 ;;                  1    wreg      void 
 27291 ;; Registers used:
 27292 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 27293 ;; Tracked objects:
 27294 ;;		On entry : 3E/1
 27295 ;;		On exit  : 3E/0
 27296 ;;		Unchanged: 0/0
 27297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27299 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27300 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27301 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27302 ;;Total ram usage:        7 bytes
 27303 ;; Hardware stack levels used: 1
 27304 ;; Hardware stack levels required when called: 5
 27305 ;; This function calls:
 27306 ;;		_VerifyElectricalBrake
 27307 ;; This function is called by:
 27308 ;;		_main
 27309 ;; This function uses a non-reentrant model
 27310 ;;
 27311                           
 27312                           	psect	text113
 27313  00549A                     __ptext113:
 27314                           	callstack 0
 27315  00549A                     _ControlMotor:
 27316                           	callstack 25
 27317                           
 27318                           ;outputs_MC50.c: 707:     if((var_sys.TimeMaxMotorIsON<=0) && (var_sys.WorkTimeMaxAlarmS
      +                          tate!=Clear) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost==NO)){
 27319                           
 27320                           ; BSR set to: 0
 27321                           ;incstack = 0
 27322  00549A  0101               	movlb	1	; () banked
 27323  00549C  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 27324  00549E  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 27325  0054A0  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 27326  0054A2  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 27327  0054A4  A4D8               	btfss	status,2,c
 27328  0054A6  D00D               	goto	l25571
 27329                           
 27330                           ; BSR set to: 1
 27331  0054A8  5142               	movf	(_var_sys+66)& (0+255),w,b	;volatile
 27332  0054AA  B4D8               	btfsc	status,2,c
 27333  0054AC  D00A               	goto	l25571
 27334                           
 27335                           ; BSR set to: 1
 27336  0054AE  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 27337  0054B0  A4D8               	btfss	status,2,c
 27338  0054B2  D007               	goto	l25571
 27339                           
 27340                           ; BSR set to: 1
 27341  0054B4  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 27342  0054B6  A4D8               	btfss	status,2,c
 27343  0054B8  D004               	goto	l25571
 27344                           
 27345                           ; BSR set to: 1
 27346                           ;outputs_MC50.c: 708:         var_sys.StateMotor = Stopped;
 27347  0054BA  0E00               	movlw	0
 27348  0054BC  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27349                           
 27350                           ;outputs_MC50.c: 709:         var_sys.WorkTimeMaxAlarmState=EmAlarme;
 27351  0054BE  0E02               	movlw	2
 27352  0054C0  D007               	goto	L102
 27353  0054C2                     l25571:
 27354                           
 27355                           ; BSR set to: 1
 27356  0054C2  0542               	decf	(_var_sys+66)& (0+255),w,b	;volatile
 27357  0054C4  A4D8               	btfss	status,2,c
 27358  0054C6  D005               	goto	l25577
 27359                           
 27360                           ; BSR set to: 1
 27361  0054C8  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27362  0054CA  A4D8               	btfss	status,2,c
 27363  0054CC  D002               	goto	l25577
 27364                           
 27365                           ; BSR set to: 1
 27366                           ;outputs_MC50.c: 716:     {;outputs_MC50.c: 717:          var_sys.WorkTimeMaxAlarmState=
      +                          Clear;
 27367  0054CE  0E00               	movlw	0
 27368  0054D0                     L102:
 27369  0054D0  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
 27370  0054D2                     l25577:
 27371                           
 27372                           ; BSR set to: 1
 27373                           ;outputs_MC50.c: 721:     stateMotor_enum stateMotor=VerifyElectricalBrake(var_sys.State
      +                          Motor);
 27374  0054D2  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27375  0054D4  ECA2  F044         	call	_VerifyElectricalBrake
 27376  0054D8  6E18               	movwf	ControlMotor@stateMotor^0,c
 27377                           
 27378                           ;outputs_MC50.c: 722:     if(stateMotor == Stopped )
 27379  0054DA  5018               	movf	ControlMotor@stateMotor^0,w,c
 27380  0054DC  A4D8               	btfss	status,2,c
 27381  0054DE  D00A               	goto	l25587
 27382                           
 27383                           ;outputs_MC50.c: 723:     {;outputs_MC50.c: 724:         var_sys.InStoping = YES;
 27384  0054E0  0E01               	movlw	1
 27385  0054E2  0101               	movlb	1	; () banked
 27386  0054E4  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 27387                           
 27388                           ; BSR set to: 1
 27389                           ;outputs_MC50.c: 725:         if(ts_system.ts_TRIACWait>=0)
 27390  0054E6  BFA5               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 27391  0054E8  0012               	return	
 27392                           
 27393                           ; BSR set to: 1
 27394                           
 27395                           ;outputs_MC50.c: 726:         {;outputs_MC50.c: 727:             do { LATEbits.LATE1 = 0
      +                          ; } while(0);
 27396  0054EA  9287               	bcf	135,1,c	;volatile
 27397                           
 27398                           ; BSR set to: 1
 27399                           
 27400                           ;outputs_MC50.c: 728:             do { LATEbits.LATE0 = 0; } while(0);
 27401  0054EC  9087               	bcf	135,0,c	;volatile
 27402  0054EE                     l25585:
 27403                           
 27404                           ; BSR set to: 1
 27405                           ;outputs_MC50.c: 729:             var_sys.Activatecounter = stoped ;
 27406  0054EE  0E00               	movlw	0
 27407  0054F0  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 27408  0054F2  0012               	return	
 27409  0054F4                     l25587:
 27410  0054F4  0100               	movlb	0	; () banked
 27411  0054F6  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 27412  0054F8  A4D8               	btfss	status,2,c
 27413  0054FA  D022               	goto	l25603
 27414                           
 27415                           ; BSR set to: 0
 27416  0054FC  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 27417  0054FE  A4D8               	btfss	status,2,c
 27418  005500  D01F               	goto	l25603
 27419                           
 27420                           ; BSR set to: 0
 27421  005502  0101               	movlb	1	; () banked
 27422  005504  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27423  005506  A4D8               	btfss	status,2,c
 27424  005508  D01B               	goto	l25603
 27425                           
 27426                           ; BSR set to: 1
 27427  00550A  5018               	movf	ControlMotor@stateMotor^0,w,c
 27428  00550C  A4D8               	btfss	status,2,c
 27429                           
 27430                           ; BSR set to: 1
 27431  00550E  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 27432  005510  D017               	goto	l25603
 27433  005512  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 27434  005514  E103               	bnz	u31680
 27435  005516  05C6               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 27436  005518  A0D8               	btfss	status,0,c
 27437  00551A  D012               	goto	l25603
 27438  00551C                     u31680:
 27439                           
 27440                           ; BSR set to: 1
 27441  00551C  BFDF               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 27442  00551E  D005               	goto	u31690
 27443  005520  51DF               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 27444  005522  E10E               	bnz	l25603
 27445  005524  05DE               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 27446  005526  B0D8               	btfsc	status,0,c
 27447  005528  D00B               	goto	l25603
 27448  00552A                     u31690:
 27449                           
 27450                           ; BSR set to: 1
 27451                           ;outputs_MC50.c: 739:     {;outputs_MC50.c: 742:         if ( ts_system.TimeElectricBrak
      +                          e<(((5+6)*( 100/50))-(2*( 100/50))) )
 27452  00552A  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 27453  00552C  D006               	goto	u31700
 27454  00552E  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 27455  005530  E103               	bnz	u31701
 27456  005532  0E12               	movlw	18
 27457  005534  5DC6               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 27458  005536  B0D8               	btfsc	status,0,c
 27459  005538                     u31701:
 27460  005538  0012               	return	
 27461  00553A                     u31700:
 27462                           
 27463                           ; BSR set to: 1
 27464                           
 27465                           ;outputs_MC50.c: 743:         {;outputs_MC50.c: 748:             do { LATEbits.LATE1 = 1
      +                          ; } while(0);
 27466  00553A  8287               	bsf	135,1,c	;volatile
 27467                           
 27468                           ; BSR set to: 1
 27469                           
 27470                           ;outputs_MC50.c: 749:             do { LATEbits.LATE0 = 1; } while(0);
 27471  00553C  8087               	bsf	135,0,c	;volatile
 27472  00553E  D7D7               	goto	l25585
 27473  005540                     l25603:
 27474  005540  0418               	decf	ControlMotor@stateMotor^0,w,c
 27475  005542  B4D8               	btfsc	status,2,c
 27476  005544  D004               	goto	u31720
 27477  005546  0E02               	movlw	2
 27478  005548  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 27479  00554A  A4D8               	btfss	status,2,c
 27480  00554C  D063               	goto	l25633
 27481  00554E                     u31720:
 27482  00554E  0101               	movlb	1	; () banked
 27483  005550  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 27484  005552  A4D8               	btfss	status,2,c
 27485  005554  D05F               	goto	l25633
 27486                           
 27487                           ; BSR set to: 1
 27488                           ;outputs_MC50.c: 761:     {;outputs_MC50.c: 762:         if((PORTEbits.RE1==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 1))
 27489  005556  B291               	btfsc	145,1,c	;volatile
 27490  005558  D004               	goto	u31750
 27491                           
 27492                           ; BSR set to: 1
 27493  00555A  0100               	movlb	0	; () banked
 27494  00555C  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27495  00555E  B4D8               	btfsc	status,2,c
 27496  005560  D006               	goto	u31770
 27497  005562                     u31750:
 27498  005562  B091               	btfsc	145,0,c	;volatile
 27499  005564  D04F               	goto	l2353
 27500  005566  0100               	movlb	0	; () banked
 27501  005568  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27502  00556A  A4D8               	btfss	status,2,c
 27503  00556C  D04B               	goto	l2353
 27504  00556E                     u31770:
 27505                           
 27506                           ; BSR set to: 0
 27507                           ;outputs_MC50.c: 763:         {;outputs_MC50.c: 764:             if((PORTEbits.RE0==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 27508  00556E  B091               	btfsc	145,0,c	;volatile
 27509  005570  D003               	goto	u31790
 27510                           
 27511                           ; BSR set to: 0
 27512  005572  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27513  005574  B4D8               	btfsc	status,2,c
 27514  005576  D005               	goto	u31810
 27515  005578                     u31790:
 27516                           
 27517                           ; BSR set to: 0
 27518  005578  B291               	btfsc	145,1,c	;volatile
 27519  00557A  D03A               	goto	l25629
 27520                           
 27521                           ; BSR set to: 0
 27522  00557C  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27523  00557E  A4D8               	btfss	status,2,c
 27524  005580  D037               	goto	l25629
 27525  005582                     u31810:
 27526                           
 27527                           ; BSR set to: 0
 27528                           ;outputs_MC50.c: 765:             {;outputs_MC50.c: 766:                 var_sys.InStopi
      +                          ng = NO;
 27529  005582  0E00               	movlw	0
 27530  005584  0101               	movlb	1	; () banked
 27531  005586  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 27532                           
 27533                           ;outputs_MC50.c: 767:                 ts_system.ts_TRIACWait=200;
 27534  005588  0E00               	movlw	0
 27535  00558A  6FA5               	movwf	(_ts_system+7)& (0+255),b	;volatile
 27536  00558C  0EC8               	movlw	200
 27537  00558E  6FA4               	movwf	(_ts_system+6)& (0+255),b	;volatile
 27538                           
 27539                           ;outputs_MC50.c: 768:                 ts_system.TimeChargeCondesador=(1000/50);
 27540  005590  0E00               	movlw	0
 27541  005592  6FB9               	movwf	(_ts_system+27)& (0+255),b	;volatile
 27542  005594  0E14               	movlw	20
 27543  005596  6FB8               	movwf	(_ts_system+26)& (0+255),b	;volatile
 27544                           
 27545                           ; BSR set to: 1
 27546                           ;outputs_MC50.c: 769:                 if (var_sys.FimCurso_CloseIsEnabled == YES|| var_s
      +                          ys.Statedoorcontrol == st_Closed ){
 27547  005598  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 27548  00559A  B4D8               	btfsc	status,2,c
 27549  00559C  D003               	goto	u31830
 27550                           
 27551                           ; BSR set to: 1
 27552  00559E  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 27553  0055A0  A4D8               	btfss	status,2,c
 27554  0055A2  D024               	goto	l25627
 27555  0055A4                     u31830:
 27556                           
 27557                           ; BSR set to: 1
 27558                           ;outputs_MC50.c: 770:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+((unsigned int)var_sys_NVM.decelarationOpen)*( 500/50))+var_sys_N
      +                          VM.learningTimeToOpen + (1000/50)*4;
 27559  0055A4  0100               	movlb	0	; () banked
 27560  0055A6  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 27561  0055A8  0D0A               	mullw	10
 27562  0055AA  CFF3 F012          	movff	prodl,??_ControlMotor
 27563  0055AE  CFF4 F013          	movff	prodh,??_ControlMotor+1
 27564  0055B2  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 27565  0055B4  2612               	addwf	??_ControlMotor^0,f,c
 27566  0055B6  0E00               	movlw	0
 27567  0055B8  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 27568  0055BA  5012               	movf	??_ControlMotor^0,w,c
 27569  0055BC  25CC               	addwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 27570  0055BE  6E14               	movwf	(??_ControlMotor+2)^0,c
 27571  0055C0  5013               	movf	(??_ControlMotor+1)^0,w,c
 27572  0055C2  21CD               	addwfc	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 27573  0055C4  6E15               	movwf	(??_ControlMotor+3)^0,c
 27574  0055C6  0E00               	movlw	0
 27575  0055C8  21CE               	addwfc	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 27576  0055CA  6E16               	movwf	(??_ControlMotor+4)^0,c
 27577  0055CC  0E00               	movlw	0
 27578  0055CE  21CF               	addwfc	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 27579  0055D0  6E17               	movwf	(??_ControlMotor+5)^0,c
 27580  0055D2  0E50               	movlw	80
 27581  0055D4  2414               	addwf	(??_ControlMotor+2)^0,w,c
 27582  0055D6  0101               	movlb	1	; () banked
 27583  0055D8  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 27584  0055DA  0E00               	movlw	0
 27585  0055DC  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 27586  0055DE  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 27587  0055E0  0E00               	movlw	0
 27588  0055E2  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 27589  0055E4  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 27590  0055E6  0E00               	movlw	0
 27591  0055E8  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 27592  0055EA  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 27593  0055EC                     l25627:
 27594                           
 27595                           ; BSR set to: 1
 27596                           ;outputs_MC50.c: 775:                 var_sys.Statedoorcontrol = st_Opening;
 27597  0055EC  0E02               	movlw	2
 27598  0055EE  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 27599  0055F0                     l25629:
 27600                           
 27601                           ;outputs_MC50.c: 779:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE0 = 1; } while(0);}
 27602  0055F0  0100               	movlb	0	; () banked
 27603  0055F2  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27604  0055F4  A4D8               	btfss	status,2,c
 27605  0055F6  D002               	goto	l2370
 27606                           
 27607                           ; BSR set to: 0
 27608  0055F8  8087               	bsf	135,0,c	;volatile
 27609  0055FA  D001               	goto	l25631
 27610  0055FC                     l2370:
 27611                           
 27612                           ; BSR set to: 0
 27613  0055FC  8287               	bsf	135,1,c	;volatile
 27614  0055FE                     l25631:
 27615                           
 27616                           ; BSR set to: 0
 27617                           ;outputs_MC50.c: 781:             var_sys.Activatecounter = open ;
 27618  0055FE  0E01               	movlw	1
 27619  005600  0101               	movlb	1	; () banked
 27620  005602  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 27621  005604                     l2353:
 27622                           
 27623                           ;outputs_MC50.c: 785:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E1 = 0; } while(0);}
 27624  005604  0100               	movlb	0	; () banked
 27625  005606  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27626  005608  A4D8               	btfss	status,2,c
 27627  00560A  D002               	goto	l2376
 27628                           
 27629                           ; BSR set to: 0
 27630  00560C  9287               	bcf	135,1,c	;volatile
 27631  00560E  0012               	return	
 27632  005610                     l2376:
 27633                           
 27634                           ; BSR set to: 0
 27635  005610  9087               	bcf	135,0,c	;volatile
 27636  005612  0012               	return	
 27637  005614                     l25633:
 27638  005614  0E03               	movlw	3
 27639  005616  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 27640  005618  A4D8               	btfss	status,2,c
 27641  00561A  0012               	return	
 27642  00561C  0101               	movlb	1	; () banked
 27643  00561E  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
 27644  005620  A4D8               	btfss	status,2,c
 27645  005622  0012               	return	
 27646                           
 27647                           ; BSR set to: 1
 27648                           ;outputs_MC50.c: 791:     {;outputs_MC50.c: 792:         if((PORTEbits.RE0==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 1))
 27649  005624  B091               	btfsc	145,0,c	;volatile
 27650  005626  D004               	goto	u31890
 27651                           
 27652                           ; BSR set to: 1
 27653  005628  0100               	movlb	0	; () banked
 27654  00562A  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27655  00562C  B4D8               	btfsc	status,2,c
 27656  00562E  D006               	goto	u31910
 27657  005630                     u31890:
 27658  005630  B291               	btfsc	145,1,c	;volatile
 27659  005632  D050               	goto	l2380
 27660  005634  0100               	movlb	0	; () banked
 27661  005636  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27662  005638  A4D8               	btfss	status,2,c
 27663  00563A  D04C               	goto	l2380
 27664  00563C                     u31910:
 27665                           
 27666                           ; BSR set to: 0
 27667                           ;outputs_MC50.c: 793:         {;outputs_MC50.c: 794:             if((PORTEbits.RE1==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 27668  00563C  B291               	btfsc	145,1,c	;volatile
 27669  00563E  D003               	goto	u31930
 27670                           
 27671                           ; BSR set to: 0
 27672  005640  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27673  005642  B4D8               	btfsc	status,2,c
 27674  005644  D005               	goto	u31950
 27675  005646                     u31930:
 27676                           
 27677                           ; BSR set to: 0
 27678  005646  B091               	btfsc	145,0,c	;volatile
 27679  005648  D03B               	goto	l25657
 27680                           
 27681                           ; BSR set to: 0
 27682  00564A  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27683  00564C  A4D8               	btfss	status,2,c
 27684  00564E  D038               	goto	l25657
 27685  005650                     u31950:
 27686                           
 27687                           ; BSR set to: 0
 27688                           ;outputs_MC50.c: 795:             {;outputs_MC50.c: 796:                 var_sys.InStopi
      +                          ng = NO;
 27689  005650  0E00               	movlw	0
 27690  005652  0101               	movlb	1	; () banked
 27691  005654  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 27692                           
 27693                           ;outputs_MC50.c: 797:                 ts_system.ts_TRIACWait=200;
 27694  005656  0E00               	movlw	0
 27695  005658  6FA5               	movwf	(_ts_system+7)& (0+255),b	;volatile
 27696  00565A  0EC8               	movlw	200
 27697  00565C  6FA4               	movwf	(_ts_system+6)& (0+255),b	;volatile
 27698                           
 27699                           ;outputs_MC50.c: 798:                 ts_system.TimeChargeCondesador=(1000/50);
 27700  00565E  0E00               	movlw	0
 27701  005660  6FB9               	movwf	(_ts_system+27)& (0+255),b	;volatile
 27702  005662  0E14               	movlw	20
 27703  005664  6FB8               	movwf	(_ts_system+26)& (0+255),b	;volatile
 27704                           
 27705                           ; BSR set to: 1
 27706                           ;outputs_MC50.c: 799:                 if (var_sys.FimCurso_OpenIsEnabled == YES|| var_sy
      +                          s.Statedoorcontrol == st_Opened){
 27707  005666  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 27708  005668  B4D8               	btfsc	status,2,c
 27709  00566A  D004               	goto	u31970
 27710                           
 27711                           ; BSR set to: 1
 27712  00566C  0E04               	movlw	4
 27713  00566E  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 27714  005670  A4D8               	btfss	status,2,c
 27715  005672  D024               	goto	l25655
 27716  005674                     u31970:
 27717                           
 27718                           ; BSR set to: 1
 27719                           ;outputs_MC50.c: 800:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+(unsigned int)var_sys_NVM.decelarationClose*( 500/50))+var_sys_NV
      +                          M.learningTimeToClose + (1000/50)*4;
 27720  005674  0100               	movlb	0	; () banked
 27721  005676  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 27722  005678  0D0A               	mullw	10
 27723  00567A  CFF3 F012          	movff	prodl,??_ControlMotor
 27724  00567E  CFF4 F013          	movff	prodh,??_ControlMotor+1
 27725  005682  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 27726  005684  2612               	addwf	??_ControlMotor^0,f,c
 27727  005686  0E00               	movlw	0
 27728  005688  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 27729  00568A  5012               	movf	??_ControlMotor^0,w,c
 27730  00568C  25D0               	addwf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 27731  00568E  6E14               	movwf	(??_ControlMotor+2)^0,c
 27732  005690  5013               	movf	(??_ControlMotor+1)^0,w,c
 27733  005692  21D1               	addwfc	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 27734  005694  6E15               	movwf	(??_ControlMotor+3)^0,c
 27735  005696  0E00               	movlw	0
 27736  005698  21D2               	addwfc	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 27737  00569A  6E16               	movwf	(??_ControlMotor+4)^0,c
 27738  00569C  0E00               	movlw	0
 27739  00569E  21D3               	addwfc	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 27740  0056A0  6E17               	movwf	(??_ControlMotor+5)^0,c
 27741  0056A2  0E50               	movlw	80
 27742  0056A4  2414               	addwf	(??_ControlMotor+2)^0,w,c
 27743  0056A6  0101               	movlb	1	; () banked
 27744  0056A8  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 27745  0056AA  0E00               	movlw	0
 27746  0056AC  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 27747  0056AE  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 27748  0056B0  0E00               	movlw	0
 27749  0056B2  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 27750  0056B4  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 27751  0056B6  0E00               	movlw	0
 27752  0056B8  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 27753  0056BA  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 27754  0056BC                     l25655:
 27755                           
 27756                           ; BSR set to: 1
 27757                           ;outputs_MC50.c: 803:                 var_sys.Statedoorcontrol = st_Closing;
 27758  0056BC  0E03               	movlw	3
 27759  0056BE  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 27760  0056C0                     l25657:
 27761                           
 27762                           ;outputs_MC50.c: 806:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE1 = 1; } while(0);}
 27763  0056C0  0100               	movlb	0	; () banked
 27764  0056C2  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27765  0056C4  A4D8               	btfss	status,2,c
 27766  0056C6  D002               	goto	l2397
 27767                           
 27768                           ; BSR set to: 0
 27769  0056C8  8287               	bsf	135,1,c	;volatile
 27770  0056CA  D001               	goto	l25659
 27771  0056CC                     l2397:
 27772                           
 27773                           ; BSR set to: 0
 27774  0056CC  8087               	bsf	135,0,c	;volatile
 27775  0056CE                     l25659:
 27776                           
 27777                           ; BSR set to: 0
 27778                           ;outputs_MC50.c: 808:             var_sys.Activatecounter = close ;
 27779  0056CE  0E02               	movlw	2
 27780  0056D0  0101               	movlb	1	; () banked
 27781  0056D2  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 27782  0056D4                     l2380:
 27783                           
 27784                           ;outputs_MC50.c: 811:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E0 = 0; } while(0);}
 27785  0056D4  0100               	movlb	0	; () banked
 27786  0056D6  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27787  0056D8  A4D8               	btfss	status,2,c
 27788  0056DA  D002               	goto	l2403
 27789                           
 27790                           ; BSR set to: 0
 27791  0056DC  9087               	bcf	135,0,c	;volatile
 27792  0056DE  0012               	return	
 27793  0056E0                     l2403:
 27794                           
 27795                           ; BSR set to: 0
 27796  0056E0  9287               	bcf	135,1,c	;volatile
 27797  0056E2  0012               	return		;funcret
 27798  0056E4                     __end_of_ControlMotor:
 27799                           	callstack 0
 27800                           
 27801 ;; *************** function _VerifyElectricalBrake *****************
 27802 ;; Defined at:
 27803 ;;		line 658 in file "outputs_MC50.c"
 27804 ;; Parameters:    Size  Location     Type
 27805 ;;  actualState     1    wreg     enum E10381
 27806 ;; Auto vars:     Size  Location     Type
 27807 ;;  actualState     1   16[COMRAM] enum E10381
 27808 ;;  tempState       1   15[COMRAM] enum E10381
 27809 ;; Return value:  Size  Location     Type
 27810 ;;                  1    wreg      enum E10381
 27811 ;; Registers used:
 27812 ;;		wreg, status,2, status,0
 27813 ;; Tracked objects:
 27814 ;;		On entry : 3F/1
 27815 ;;		On exit  : 3E/0
 27816 ;;		Unchanged: 0/0
 27817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27819 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27821 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27822 ;;Total ram usage:        2 bytes
 27823 ;; Hardware stack levels used: 1
 27824 ;; Hardware stack levels required when called: 4
 27825 ;; This function calls:
 27826 ;;		Nothing
 27827 ;; This function is called by:
 27828 ;;		_ControlMotor
 27829 ;; This function uses a non-reentrant model
 27830 ;;
 27831                           
 27832                           	psect	text114
 27833  008944                     __ptext114:
 27834                           	callstack 0
 27835  008944                     _VerifyElectricalBrake:
 27836                           	callstack 25
 27837                           
 27838                           ;incstack = 0
 27839                           ;VerifyElectricalBrake@actualState stored from wreg
 27840  008944  6E11               	movwf	VerifyElectricalBrake@actualState^0,c
 27841                           
 27842                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 27843  008946  C011  F010         	movff	VerifyElectricalBrake@actualState,VerifyElectricalBrake@tempState
 27844                           
 27845                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 27846  00894A  0100               	movlb	0	; () banked
 27847  00894C  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 27848  00894E  A4D8               	btfss	status,2,c
 27849  008950  D02E               	goto	l2323
 27850                           
 27851                           ; BSR set to: 0
 27852  008952  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 27853  008954  A4D8               	btfss	status,2,c
 27854  008956  D02B               	goto	l2323
 27855                           
 27856                           ; BSR set to: 0
 27857  008958  0101               	movlb	1	; () banked
 27858  00895A  BFDF               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 27859  00895C  D005               	goto	u26960
 27860  00895E  51DF               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 27861  008960  E126               	bnz	l2323
 27862  008962  05DE               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 27863  008964  B0D8               	btfsc	status,0,c
 27864  008966  D023               	goto	l2323
 27865  008968                     u26960:
 27866                           
 27867                           ; BSR set to: 1
 27868                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 27869  008968  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 27870  00896A  0100               	movlb	0	; () banked
 27871  00896C  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 27872  00896E  B4D8               	btfsc	status,2,c
 27873  008970  D00B               	goto	l23259
 27874                           
 27875                           ; BSR set to: 0
 27876  008972  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 27877  008974  A4D8               	btfss	status,2,c
 27878  008976  D008               	goto	l23259
 27879                           
 27880                           ; BSR set to: 0
 27881                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 27882  008978  0E01               	movlw	1
 27883  00897A  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 27884                           
 27885                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 27886  00897C  0E00               	movlw	0
 27887  00897E  0101               	movlb	1	; () banked
 27888  008980  6FC7               	movwf	(_ts_system+41)& (0+255),b	;volatile
 27889  008982  0E16               	movlw	22
 27890  008984  6FC6               	movwf	(_ts_system+40)& (0+255),b	;volatile
 27891                           
 27892                           ;outputs_MC50.c: 670:         }
 27893  008986  D018               	goto	l2328
 27894  008988                     l23259:
 27895                           
 27896                           ; BSR set to: 0
 27897  008988  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 27898  00898A  A4D8               	btfss	status,2,c
 27899  00898C  D00B               	goto	l23265
 27900                           
 27901                           ; BSR set to: 0
 27902  00898E  0101               	movlb	1	; () banked
 27903  008990  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 27904  008992  D008               	goto	l23265
 27905  008994  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 27906  008996  E103               	bnz	u27000
 27907  008998  05C6               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 27908  00899A  A0D8               	btfss	status,0,c
 27909  00899C  D003               	goto	l23265
 27910  00899E                     u27000:
 27911                           
 27912                           ; BSR set to: 1
 27913                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 27914  00899E  0E01               	movlw	1
 27915  0089A0  6E10               	movwf	VerifyElectricalBrake@tempState^0,c
 27916                           
 27917                           ;outputs_MC50.c: 686:         }
 27918  0089A2  D00A               	goto	l2328
 27919  0089A4                     l23265:
 27920                           
 27921                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 27922  0089A4  0E00               	movlw	0
 27923  0089A6  0100               	movlb	0	; () banked
 27924  0089A8  6F78               	movwf	_brakeElectric_st& (0+255),b
 27925                           
 27926                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 27927  0089AA  0E00               	movlw	0
 27928  0089AC  D004               	goto	L103
 27929  0089AE                     l2323:
 27930                           
 27931                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 27932  0089AE  C011  F078         	movff	VerifyElectricalBrake@actualState,_brakeElectric_st
 27933                           
 27934                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 27935  0089B2  0E00               	movlw	0
 27936  0089B4  0100               	movlb	0	; () banked
 27937  0089B6                     L103:
 27938  0089B6  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 27939  0089B8                     l2328:
 27940                           
 27941                           ;outputs_MC50.c: 700:     return tempState;
 27942  0089B8  5010               	movf	VerifyElectricalBrake@tempState^0,w,c
 27943  0089BA  0012               	return		;funcret
 27944  0089BC                     __end_of_VerifyElectricalBrake:
 27945                           	callstack 0
 27946                           
 27947 ;; *************** function _ControlLights *****************
 27948 ;; Defined at:
 27949 ;;		line 816 in file "outputs_MC50.c"
 27950 ;; Parameters:    Size  Location     Type
 27951 ;;		None
 27952 ;; Auto vars:     Size  Location     Type
 27953 ;;		None
 27954 ;; Return value:  Size  Location     Type
 27955 ;;                  1    wreg      void 
 27956 ;; Registers used:
 27957 ;;		wreg, status,2, status,0, cstack
 27958 ;; Tracked objects:
 27959 ;;		On entry : 3E/1
 27960 ;;		On exit  : 3E/0
 27961 ;;		Unchanged: 0/0
 27962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27967 ;;Total ram usage:        0 bytes
 27968 ;; Hardware stack levels used: 1
 27969 ;; Hardware stack levels required when called: 6
 27970 ;; This function calls:
 27971 ;;		_setFlashLigth_ON
 27972 ;;		_setRGB_ON
 27973 ;; This function is called by:
 27974 ;;		_main
 27975 ;; This function uses a non-reentrant model
 27976 ;;
 27977                           
 27978                           	psect	text115
 27979  00472A                     __ptext115:
 27980                           	callstack 0
 27981  00472A                     _ControlLights:
 27982                           	callstack 24
 27983                           
 27984                           ;outputs_MC50.c: 818:     if(var_sys.DistanceProgrammingActive==YES)
 27985                           
 27986                           ;incstack = 0
 27987  00472A  0101               	movlb	1	; () banked
 27988  00472C  0540               	decf	(_var_sys+64)& (0+255),w,b	;volatile
 27989  00472E  A4D8               	btfss	status,2,c
 27990  004730  D007               	goto	l25665
 27991                           
 27992                           ; BSR set to: 1
 27993                           ;outputs_MC50.c: 819:     {;outputs_MC50.c: 820:         setFlashLigth_ON((1000/50));
 27994  004732  0E00               	movlw	0
 27995  004734  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 27996  004736  0E14               	movlw	20
 27997  004738  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 27998  00473A  ECAF  F04B         	call	_setFlashLigth_ON	;wreg free
 27999                           
 28000                           ;outputs_MC50.c: 821:     }
 28001  00473E  D010               	goto	l25671
 28002  004740                     l25665:
 28003                           
 28004                           ; BSR set to: 1
 28005  004740  51E6               	movf	_controlGate_stateMachine& (0+255),w,b
 28006  004742  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 28007  004744  A4D8               	btfss	status,2,c
 28008  004746  D00C               	goto	l25671
 28009                           
 28010                           ; BSR set to: 1
 28011                           ;outputs_MC50.c: 823:     {;outputs_MC50.c: 824:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 28012  004748  0E00               	movlw	0
 28013  00474A  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 28014                           
 28015                           ;outputs_MC50.c: 825:         var_sys.ControlReleCapacitorClose = 0;
 28016  00474C  0E00               	movlw	0
 28017  00474E  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 28018                           
 28019                           ; BSR set to: 1
 28020                           ;outputs_MC50.c: 826:         if (var_sys_NVM.flashLightMode !=3){
 28021  004750  0E03               	movlw	3
 28022  004752  0100               	movlb	0	; () banked
 28023  004754  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28024  004756  B4D8               	btfsc	status,2,c
 28025  004758  D002               	goto	l2415
 28026                           
 28027                           ; BSR set to: 0
 28028                           
 28029                           ;outputs_MC50.c: 827:            do { LATEbits.LATE2 = 0; } while(0);
 28030  00475A  9487               	bcf	135,2,c	;volatile
 28031  00475C  D001               	goto	l25671
 28032  00475E                     l2415:
 28033                           
 28034                           ; BSR set to: 0
 28035  00475E  8487               	bsf	135,2,c	;volatile
 28036  004760                     l25671:
 28037                           
 28038                           ;outputs_MC50.c: 835:     if (((var_sys.preflashingcontrol == YES || controlGate_stateMa
      +                          chine.current_state==st_Opened) && (ts_system.timeWaitToClose >0) && (ts_system.timeWait
      +                          ToClose <= 3 * (1000/50))) && var_sys_NVM.flashRGBMode == rgb_pre){
 28039  004760  0101               	movlb	1	; () banked
 28040  004762  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 28041  004764  B4D8               	btfsc	status,2,c
 28042  004766  D005               	goto	u32040
 28043                           
 28044                           ; BSR set to: 1
 28045  004768  0E04               	movlw	4
 28046  00476A  19E6               	xorwf	_controlGate_stateMachine& (0+255),w,b
 28047  00476C  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 28048  00476E  A4D8               	btfss	status,2,c
 28049  004770  D01C               	goto	l25683
 28050  004772                     u32040:
 28051                           
 28052                           ; BSR set to: 1
 28053  004772  BFB1               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 28054  004774  D01A               	goto	l25683
 28055  004776  51B1               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 28056  004778  E103               	bnz	u32050
 28057  00477A  05B0               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 28058  00477C  A0D8               	btfss	status,0,c
 28059  00477E  D015               	goto	l25683
 28060  004780                     u32050:
 28061                           
 28062                           ; BSR set to: 1
 28063  004780  BFB1               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 28064  004782  D006               	goto	u32060
 28065  004784  51B1               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 28066  004786  E111               	bnz	l25683
 28067  004788  0E3D               	movlw	61
 28068  00478A  5DB0               	subwf	(_ts_system+18)& (0+255),w,b	;volatile
 28069  00478C  B0D8               	btfsc	status,0,c
 28070  00478E  D00D               	goto	l25683
 28071  004790                     u32060:
 28072                           
 28073                           ; BSR set to: 1
 28074  004790  0E02               	movlw	2
 28075  004792  0100               	movlb	0	; () banked
 28076  004794  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28077  004796  A4D8               	btfss	status,2,c
 28078  004798  D008               	goto	l25683
 28079                           
 28080                           ; BSR set to: 0
 28081                           ;outputs_MC50.c: 836:         setRGB_ON(BLUE,( 200/50));
 28082  00479A  0E00               	movlw	0
 28083  00479C  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28084  00479E  0E04               	movlw	4
 28085  0047A0  6E11               	movwf	setRGB_ON@Freq^0,c
 28086  0047A2  0E01               	movlw	1
 28087  0047A4  EC41  F041         	call	_setRGB_ON
 28088                           
 28089                           ;outputs_MC50.c: 838:     }
 28090  0047A8  0012               	return	
 28091  0047AA                     l25683:
 28092  0047AA  0E03               	movlw	3
 28093  0047AC  0101               	movlb	1	; () banked
 28094  0047AE  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28095  0047B0  A4D8               	btfss	status,2,c
 28096  0047B2  D04F               	goto	l25713
 28097                           
 28098                           ; BSR set to: 1
 28099                           ;outputs_MC50.c: 842:     {;outputs_MC50.c: 843:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 28100  0047B4  0E00               	movlw	0
 28101  0047B6  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 28102                           
 28103                           ;outputs_MC50.c: 846:         if (var_sys.ControlReleCapacitorClose==0 && var_sys_NVM.fl
      +                          ashRGBMode==rgb_capacitor)
 28104  0047B8  5129               	movf	(_var_sys+41)& (0+255),w,b	;volatile
 28105  0047BA  A4D8               	btfss	status,2,c
 28106  0047BC  D013               	goto	l25695
 28107                           
 28108                           ; BSR set to: 1
 28109  0047BE  0E03               	movlw	3
 28110  0047C0  0100               	movlb	0	; () banked
 28111  0047C2  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28112  0047C4  A4D8               	btfss	status,2,c
 28113  0047C6  D00E               	goto	l25695
 28114                           
 28115                           ; BSR set to: 0
 28116                           ;outputs_MC50.c: 847:         {;outputs_MC50.c: 848:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 28117  0047C8  0E00               	movlw	0
 28118  0047CA  0101               	movlb	1	; () banked
 28119  0047CC  6FE1               	movwf	(_ts_system+67)& (0+255),b	;volatile
 28120  0047CE  0E28               	movlw	40
 28121  0047D0  6FE0               	movwf	(_ts_system+66)& (0+255),b	;volatile
 28122                           
 28123                           ; BSR set to: 1
 28124                           ;outputs_MC50.c: 849:             setRGB_ON(YELLOW,0);
 28125  0047D2  0E00               	movlw	0
 28126  0047D4  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28127  0047D6  0E00               	movlw	0
 28128  0047D8  6E11               	movwf	setRGB_ON@Freq^0,c
 28129  0047DA  0E04               	movlw	4
 28130  0047DC  EC41  F041         	call	_setRGB_ON
 28131                           
 28132                           ; BSR set to: 1
 28133                           ;outputs_MC50.c: 850:          var_sys.ControlReleCapacitorClose = 1;
 28134  0047E0  0E01               	movlw	1
 28135  0047E2  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 28136  0047E4                     l25695:
 28137                           
 28138                           ;outputs_MC50.c: 852:         if(ts_system.TimeReleCapacitor<=0 && var_sys_NVM.flashRGBM
      +                          ode==rgb_capacitor)
 28139  0047E4  0101               	movlb	1	; () banked
 28140  0047E6  BFE1               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 28141  0047E8  D005               	goto	u32110
 28142  0047EA  51E1               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 28143  0047EC  E105               	bnz	l25699
 28144  0047EE  05E0               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 28145  0047F0  B0D8               	btfsc	status,0,c
 28146  0047F2  D002               	goto	l25699
 28147  0047F4                     u32110:
 28148                           
 28149                           ; BSR set to: 1
 28150  0047F4  0100               	movlb	0	; () banked
 28151  0047F6  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28152  0047F8                     l25699:
 28153                           
 28154                           ;outputs_MC50.c: 858:         if(var_sys_NVM.flashRGBMode==rgb_pisca && ts_system.TimeRe
      +                          leCapacitor<=0)
 28155  0047F8  0100               	movlb	0	; () banked
 28156  0047FA  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28157  0047FC  A4D8               	btfss	status,2,c
 28158  0047FE  D010               	goto	l25705
 28159                           
 28160                           ; BSR set to: 0
 28161  004800  0101               	movlb	1	; () banked
 28162  004802  BFE1               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 28163  004804  D005               	goto	u32130
 28164  004806  51E1               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 28165  004808  E10B               	bnz	l25705
 28166  00480A  05E0               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 28167  00480C  B0D8               	btfsc	status,0,c
 28168  00480E  D008               	goto	l25705
 28169  004810                     u32130:
 28170                           
 28171                           ; BSR set to: 1
 28172                           ;outputs_MC50.c: 860:         {;outputs_MC50.c: 861:             setRGB_ON(RED,( 200/50)
      +                           +( 50/50));
 28173  004810  0E00               	movlw	0
 28174  004812  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28175  004814  0E05               	movlw	5
 28176  004816  6E11               	movwf	setRGB_ON@Freq^0,c
 28177  004818  0E03               	movlw	3
 28178  00481A  EC41  F041         	call	_setRGB_ON
 28179                           
 28180                           ;outputs_MC50.c: 862:         }
 28181  00481E  D007               	goto	l25707
 28182  004820                     l25705:
 28183                           
 28184                           ;outputs_MC50.c: 864:         {;outputs_MC50.c: 865:             setRGB_ON(RED,0);
 28185  004820  0E00               	movlw	0
 28186  004822  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28187  004824  0E00               	movlw	0
 28188  004826  6E11               	movwf	setRGB_ON@Freq^0,c
 28189  004828  0E03               	movlw	3
 28190  00482A  EC41  F041         	call	_setRGB_ON
 28191  00482E                     l25707:
 28192                           
 28193                           ; BSR set to: 1
 28194                           ;outputs_MC50.c: 868:         if(var_sys_NVM.flashLightMode==fixo)
 28195  00482E  0100               	movlb	0	; () banked
 28196  004830  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28197  004832  A4D8               	btfss	status,2,c
 28198  004834  D007               	goto	l25711
 28199                           
 28200                           ; BSR set to: 0
 28201                           ;outputs_MC50.c: 869:         {;outputs_MC50.c: 871:             setFlashLigth_ON(( 500/
      +                          50));
 28202  004836  0E00               	movlw	0
 28203  004838  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 28204  00483A  0E0A               	movlw	10
 28205  00483C  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 28206  00483E  ECAF  F04B         	call	_setFlashLigth_ON	;wreg free
 28207                           
 28208                           ;outputs_MC50.c: 873:         }
 28209  004842  0012               	return	
 28210  004844                     l25711:
 28211                           
 28212                           ;outputs_MC50.c: 875:             setFlashLigth_ON(0);
 28213  004844  0E00               	movlw	0
 28214  004846  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 28215  004848  0E00               	movlw	0
 28216  00484A  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 28217  00484C  ECAF  F04B         	call	_setFlashLigth_ON	;wreg free
 28218  004850  0012               	return	
 28219  004852                     l25713:
 28220                           
 28221                           ; BSR set to: 1
 28222  004852  5100               	movf	_var_sys& (0+255),w,b	;volatile
 28223  004854  A4D8               	btfss	status,2,c
 28224  004856  D042               	goto	l25741
 28225                           
 28226                           ; BSR set to: 1
 28227  004858  05E6               	decf	_controlGate_stateMachine& (0+255),w,b
 28228  00485A  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 28229  00485C  A4D8               	btfss	status,2,c
 28230  00485E  D03E               	goto	l25741
 28231                           
 28232                           ; BSR set to: 1
 28233                           ;outputs_MC50.c: 881:     {;outputs_MC50.c: 882:         if(var_sys.preflashingcontrol !
      +                          = YES){
 28234  004860  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 28235  004862  A4D8               	btfss	status,2,c
 28236                           
 28237                           ; BSR set to: 1
 28238                           
 28239                           ;outputs_MC50.c: 883:             do { LATAbits.LATA7 = 1; } while(0);
 28240  004864  8E83               	bsf	131,7,c	;volatile
 28241                           
 28242                           ; BSR set to: 1
 28243                           ;outputs_MC50.c: 888:         if(var_sys_NVM.flashRGBMode==rgb_pisca)
 28244  004866  0100               	movlb	0	; () banked
 28245  004868  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28246  00486A  A4D8               	btfss	status,2,c
 28247  00486C  D017               	goto	l25729
 28248                           
 28249                           ; BSR set to: 0
 28250                           ;outputs_MC50.c: 889:         {;outputs_MC50.c: 890:             if (var_sys_NVM.TypeofM
      +                          otor == br || var_sys_NVM.TypeofMotor == SE)setRGB_ON(YELLOW,0);
 28251  00486E  0E02               	movlw	2
 28252  004870  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 28253  004872  B4D8               	btfsc	status,2,c
 28254  004874  D003               	goto	u32200
 28255                           
 28256                           ; BSR set to: 0
 28257  004876  05B4               	decf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 28258  004878  A4D8               	btfss	status,2,c
 28259  00487A  D008               	goto	l25727
 28260  00487C                     u32200:
 28261                           
 28262                           ; BSR set to: 0
 28263  00487C  0E00               	movlw	0
 28264  00487E  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28265  004880  0E00               	movlw	0
 28266  004882  6E11               	movwf	setRGB_ON@Freq^0,c
 28267  004884  0E04               	movlw	4
 28268  004886  EC41  F041         	call	_setRGB_ON
 28269  00488A  D013               	goto	l25733
 28270  00488C                     l25727:
 28271                           
 28272                           ; BSR set to: 0
 28273  00488C  0E00               	movlw	0
 28274  00488E  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28275  004890  0E28               	movlw	40
 28276  004892  6E11               	movwf	setRGB_ON@Freq^0,c
 28277  004894  0E04               	movlw	4
 28278  004896  EC41  F041         	call	_setRGB_ON
 28279  00489A  D00B               	goto	l25733
 28280  00489C                     l25729:
 28281                           
 28282                           ; BSR set to: 0
 28283  00489C  0E03               	movlw	3
 28284  00489E  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28285  0048A0  B4D8               	btfsc	status,2,c
 28286  0048A2  D007               	goto	l25733
 28287                           
 28288                           ; BSR set to: 0
 28289  0048A4  0E00               	movlw	0
 28290  0048A6  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28291  0048A8  0E00               	movlw	0
 28292  0048AA  6E11               	movwf	setRGB_ON@Freq^0,c
 28293  0048AC  0E04               	movlw	4
 28294  0048AE  EC41  F041         	call	_setRGB_ON
 28295  0048B2                     l25733:
 28296                           
 28297                           ;outputs_MC50.c: 895:         if (var_sys_NVM.flashLightMode != electroiman)
 28298  0048B2  0E03               	movlw	3
 28299  0048B4  0100               	movlb	0	; () banked
 28300  0048B6  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28301  0048B8  B4D8               	btfsc	status,2,c
 28302  0048BA  0012               	return	
 28303                           
 28304                           ; BSR set to: 0
 28305                           ;outputs_MC50.c: 896:         {;outputs_MC50.c: 897:         if (ts_system.TimeOnFlashLi
      +                          gth>0)
 28306  0048BC  0101               	movlb	1	; () banked
 28307  0048BE  BFC1               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 28308  0048C0  D007               	goto	l2443
 28309  0048C2  51C1               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 28310  0048C4  11C0               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 28311  0048C6  11BF               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 28312  0048C8  E1BD               	bnz	l25711
 28313  0048CA  05BE               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 28314  0048CC  B0D8               	btfsc	status,0,c
 28315  0048CE  D7BA               	goto	l25711
 28316  0048D0                     l2443:
 28317                           
 28318                           ; BSR set to: 1
 28319  0048D0  9487               	bcf	135,2,c	;volatile
 28320                           
 28321                           ; BSR set to: 1
 28322                           ;outputs_MC50.c: 904:             ts_system.timeFreqFlashligth=0;
 28323  0048D2  0E00               	movlw	0
 28324  0048D4  6FBD               	movwf	(_ts_system+31)& (0+255),b	;volatile
 28325  0048D6  0E00               	movlw	0
 28326  0048D8  6FBC               	movwf	(_ts_system+30)& (0+255),b	;volatile
 28327                           
 28328                           ; BSR set to: 0
 28329                           ;outputs_MC50.c: 907:     }
 28330                           
 28331                           ;outputs_MC50.c: 906:         }
 28332  0048DA  0012               	return	
 28333  0048DC                     l25741:
 28334                           
 28335                           ; BSR set to: 1
 28336  0048DC  5100               	movf	_var_sys& (0+255),w,b	;volatile
 28337  0048DE  A4D8               	btfss	status,2,c
 28338  0048E0  D048               	goto	l25775
 28339                           
 28340                           ; BSR set to: 1
 28341                           ;outputs_MC50.c: 911:     {;outputs_MC50.c: 912:         if (( var_sys_NVM.autoTimeFullC
      +                          lose==0 && var_sys.StateMotor == InOpenFull)||((var_sys_NVM.autoTimeWalkClose==0) && var
      +                          _sys_NVM.walkTime >0 && var_sys.StateMotor == InOpenWalk))
 28342  0048E2  0100               	movlb	0	; () banked
 28343  0048E4  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 28344  0048E6  A4D8               	btfss	status,2,c
 28345  0048E8  D004               	goto	u32260
 28346                           
 28347                           ; BSR set to: 0
 28348  0048EA  0101               	movlb	1	; () banked
 28349  0048EC  0500               	decf	_var_sys& (0+255),w,b	;volatile
 28350  0048EE  B4D8               	btfsc	status,2,c
 28351  0048F0  D00C               	goto	u32290
 28352  0048F2                     u32260:
 28353  0048F2  0100               	movlb	0	; () banked
 28354  0048F4  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 28355  0048F6  A4D8               	btfss	status,2,c
 28356  0048F8  D017               	goto	l25759
 28357                           
 28358                           ; BSR set to: 0
 28359  0048FA  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 28360  0048FC  B4D8               	btfsc	status,2,c
 28361  0048FE  D014               	goto	l25759
 28362                           
 28363                           ; BSR set to: 0
 28364  004900  0E02               	movlw	2
 28365  004902  0101               	movlb	1	; () banked
 28366  004904  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28367  004906  A4D8               	btfss	status,2,c
 28368  004908  D00F               	goto	l25759
 28369  00490A                     u32290:
 28370                           
 28371                           ; BSR set to: 1
 28372                           ;outputs_MC50.c: 913:         {;outputs_MC50.c: 916:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 28373  00490A  0E00               	movlw	0
 28374  00490C  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 28375                           
 28376                           ;outputs_MC50.c: 917:             var_sys.ControlReleCapacitorClose = 0;
 28377  00490E  0E00               	movlw	0
 28378  004910  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 28379                           
 28380                           ; BSR set to: 1
 28381                           ;outputs_MC50.c: 921:             if (var_sys_NVM.flashLightMode != electroiman && var_s
      +                          ys_NVM.flashLightMode != condominio ){
 28382  004912  0E03               	movlw	3
 28383  004914  0100               	movlb	0	; () banked
 28384  004916  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28385  004918  B4D8               	btfsc	status,2,c
 28386  00491A  0012               	return	
 28387                           
 28388                           ; BSR set to: 0
 28389  00491C  0E02               	movlw	2
 28390  00491E  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28391  004920  B4D8               	btfsc	status,2,c
 28392  004922  0012               	return	
 28393                           
 28394                           ; BSR set to: 0
 28395                           
 28396                           ;outputs_MC50.c: 922:               do { LATEbits.LATE2 = 0; } while(0);
 28397  004924  9487               	bcf	135,2,c	;volatile
 28398  004926  0012               	return	
 28399  004928                     l25759:
 28400                           
 28401                           ;outputs_MC50.c: 927:         {;outputs_MC50.c: 928:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 28402  004928  0100               	movlb	0	; () banked
 28403  00492A  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28404  00492C  A4D8               	btfss	status,2,c
 28405  00492E  D008               	goto	l25763
 28406                           
 28407                           ; BSR set to: 0
 28408                           ;outputs_MC50.c: 929:             {;outputs_MC50.c: 930:                 setRGB_ON(BLUE,
      +                          (1000/50));
 28409  004930  0E00               	movlw	0
 28410  004932  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28411  004934  0E14               	movlw	20
 28412  004936  6E11               	movwf	setRGB_ON@Freq^0,c
 28413  004938  0E01               	movlw	1
 28414  00493A  EC41  F041         	call	_setRGB_ON
 28415                           
 28416                           ;outputs_MC50.c: 932:             }
 28417  00493E  D007               	goto	l25765
 28418  004940                     l25763:
 28419                           
 28420                           ; BSR set to: 0
 28421                           ;outputs_MC50.c: 934:             {;outputs_MC50.c: 935:                 setRGB_ON(BLUE,
      +                          0);
 28422  004940  0E00               	movlw	0
 28423  004942  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28424  004944  0E00               	movlw	0
 28425  004946  6E11               	movwf	setRGB_ON@Freq^0,c
 28426  004948  0E01               	movlw	1
 28427  00494A  EC41  F041         	call	_setRGB_ON
 28428  00494E                     l25765:
 28429                           
 28430                           ; BSR set to: 1
 28431                           ;outputs_MC50.c: 939:             if(var_sys_NVM.flashLightMode==pisca ||var_sys_NVM.fla
      +                          shLightMode==electroiman)
 28432  00494E  0100               	movlb	0	; () banked
 28433  004950  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28434  004952  B4D8               	btfsc	status,2,c
 28435  004954  D004               	goto	u32340
 28436                           
 28437                           ; BSR set to: 0
 28438  004956  0E03               	movlw	3
 28439  004958  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28440  00495A  A4D8               	btfss	status,2,c
 28441  00495C  D002               	goto	l25769
 28442  00495E                     u32340:
 28443                           
 28444                           ; BSR set to: 0
 28445                           
 28446                           ;outputs_MC50.c: 940:             {;outputs_MC50.c: 941:                  do { LATEbits.
      +                          LATE2 = 0; } while(0);
 28447  00495E  9487               	bcf	135,2,c	;volatile
 28448  004960  0012               	return	
 28449  004962                     l25769:
 28450                           
 28451                           ; BSR set to: 0
 28452  004962  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28453  004964  B4D8               	btfsc	status,2,c
 28454  004966  D76E               	goto	l25711
 28455                           
 28456                           ; BSR set to: 0
 28457  004968  0E02               	movlw	2
 28458  00496A  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28459  00496C  A4D8               	btfss	status,2,c
 28460  00496E  0012               	return	
 28461  004970  D769               	goto	l25711
 28462  004972                     l25775:
 28463                           
 28464                           ; BSR set to: 1
 28465                           ;outputs_MC50.c: 955:     {;outputs_MC50.c: 957:         var_sys.ControlReleCapacitorClo
      +                          se=0;
 28466  004972  0E00               	movlw	0
 28467  004974  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 28468                           
 28469                           ;outputs_MC50.c: 958:         if (var_sys.ControlReleCapacitorOpen==0 && var_sys_NVM.fla
      +                          shRGBMode==rgb_capacitor)
 28470  004976  5128               	movf	(_var_sys+40)& (0+255),w,b	;volatile
 28471  004978  A4D8               	btfss	status,2,c
 28472  00497A  D00C               	goto	l25781
 28473                           
 28474                           ; BSR set to: 1
 28475  00497C  0E03               	movlw	3
 28476  00497E  0100               	movlb	0	; () banked
 28477  004980  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28478  004982  A4D8               	btfss	status,2,c
 28479  004984  D007               	goto	l25781
 28480                           
 28481                           ; BSR set to: 0
 28482                           ;outputs_MC50.c: 959:         {;outputs_MC50.c: 960:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 28483  004986  0E00               	movlw	0
 28484  004988  0101               	movlb	1	; () banked
 28485  00498A  6FE1               	movwf	(_ts_system+67)& (0+255),b	;volatile
 28486  00498C  0E28               	movlw	40
 28487  00498E  6FE0               	movwf	(_ts_system+66)& (0+255),b	;volatile
 28488                           
 28489                           ;outputs_MC50.c: 962:          var_sys.ControlReleCapacitorOpen = 1;
 28490  004990  0E01               	movlw	1
 28491  004992  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 28492  004994                     l25781:
 28493                           
 28494                           ;outputs_MC50.c: 964:         if(ts_system.TimeReleCapacitor <=0 && var_sys_NVM.flashRGB
      +                          Mode==rgb_capacitor)
 28495  004994  0101               	movlb	1	; () banked
 28496  004996  BFE1               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 28497  004998  D005               	goto	u32390
 28498  00499A  51E1               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 28499  00499C  E105               	bnz	l25785
 28500  00499E  05E0               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 28501  0049A0  B0D8               	btfsc	status,0,c
 28502  0049A2  D002               	goto	l25785
 28503  0049A4                     u32390:
 28504                           
 28505                           ; BSR set to: 1
 28506  0049A4  0100               	movlb	0	; () banked
 28507  0049A6  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28508  0049A8                     l25785:
 28509                           
 28510                           ;outputs_MC50.c: 969:         if (controlGate_stateMachine.current_state==st_Opened)
 28511  0049A8  0E04               	movlw	4
 28512  0049AA  0101               	movlb	1	; () banked
 28513  0049AC  19E6               	xorwf	_controlGate_stateMachine& (0+255),w,b
 28514  0049AE  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 28515  0049B0  A4D8               	btfss	status,2,c
 28516  0049B2  D01B               	goto	l25797
 28517                           
 28518                           ; BSR set to: 1
 28519                           ;outputs_MC50.c: 970:         {;outputs_MC50.c: 973:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 28520  0049B4  0E00               	movlw	0
 28521  0049B6  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 28522                           
 28523                           ;outputs_MC50.c: 974:             var_sys.ControlReleCapacitorClose = 0;
 28524  0049B8  0E00               	movlw	0
 28525  0049BA  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 28526                           
 28527                           ;outputs_MC50.c: 977:             if (var_sys_NVM.autoTimeFullClose != 0 || ((var_sys_NV
      +                          M.autoTimeWalkClose!=0) && var_sys_NVM.walkTime >0)|| var_sys_NVM.operationMode==2)
 28528  0049BC  0100               	movlb	0	; () banked
 28529  0049BE  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 28530  0049C0  A4D8               	btfss	status,2,c
 28531  0049C2  D00A               	goto	u32440
 28532                           
 28533                           ; BSR set to: 0
 28534  0049C4  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 28535  0049C6  B4D8               	btfsc	status,2,c
 28536  0049C8  D003               	goto	u32430
 28537                           
 28538                           ; BSR set to: 0
 28539  0049CA  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 28540  0049CC  A4D8               	btfss	status,2,c
 28541  0049CE  D004               	goto	u32440
 28542  0049D0                     u32430:
 28543                           
 28544                           ; BSR set to: 0
 28545  0049D0  0E02               	movlw	2
 28546  0049D2  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 28547  0049D4  A4D8               	btfss	status,2,c
 28548  0049D6  D007               	goto	l2477
 28549  0049D8                     u32440:
 28550                           
 28551                           ; BSR set to: 0
 28552                           ;outputs_MC50.c: 978:             {;outputs_MC50.c: 979:                    setRGB_ON(BL
      +                          UE,0);
 28553  0049D8  0E00               	movlw	0
 28554  0049DA  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28555  0049DC  0E00               	movlw	0
 28556  0049DE  6E11               	movwf	setRGB_ON@Freq^0,c
 28557  0049E0  0E01               	movlw	1
 28558  0049E2  EC41  F041         	call	_setRGB_ON
 28559  0049E6                     l2477:
 28560  0049E6  9487               	bcf	135,2,c	;volatile
 28561  0049E8  0012               	return	
 28562  0049EA                     l25797:
 28563                           
 28564                           ; BSR set to: 1
 28565                           ;outputs_MC50.c: 993:         {;outputs_MC50.c: 996:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 28566  0049EA  0100               	movlb	0	; () banked
 28567  0049EC  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28568  0049EE  A4D8               	btfss	status,2,c
 28569  0049F0  D008               	goto	l25801
 28570                           
 28571                           ; BSR set to: 0
 28572                           ;outputs_MC50.c: 997:             {;outputs_MC50.c: 998:                 setRGB_ON(GREEN
      +                          ,( 500/50));
 28573  0049F2  0E00               	movlw	0
 28574  0049F4  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28575  0049F6  0E0A               	movlw	10
 28576  0049F8  6E11               	movwf	setRGB_ON@Freq^0,c
 28577  0049FA  0E02               	movlw	2
 28578  0049FC  EC41  F041         	call	_setRGB_ON
 28579                           
 28580                           ;outputs_MC50.c: 999:             }
 28581  004A00  D007               	goto	l25803
 28582  004A02                     l25801:
 28583                           
 28584                           ; BSR set to: 0
 28585                           ;outputs_MC50.c: 1001:             {;outputs_MC50.c: 1002:                 setRGB_ON(GRE
      +                          EN,0);
 28586  004A02  0E00               	movlw	0
 28587  004A04  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28588  004A06  0E00               	movlw	0
 28589  004A08  6E11               	movwf	setRGB_ON@Freq^0,c
 28590  004A0A  0E02               	movlw	2
 28591  004A0C  EC41  F041         	call	_setRGB_ON
 28592  004A10                     l25803:
 28593                           
 28594                           ; BSR set to: 1
 28595                           ;outputs_MC50.c: 1006:             if(var_sys_NVM.flashLightMode==fixo)
 28596  004A10  0100               	movlb	0	; () banked
 28597  004A12  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28598  004A14  A4D8               	btfss	status,2,c
 28599  004A16  D007               	goto	l25807
 28600                           
 28601                           ; BSR set to: 0
 28602                           ;outputs_MC50.c: 1007:             {;outputs_MC50.c: 1010:                 setFlashLigth
      +                          _ON((1000/50));
 28603  004A18  0E00               	movlw	0
 28604  004A1A  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 28605  004A1C  0E14               	movlw	20
 28606  004A1E  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 28607  004A20  ECAF  F04B         	call	_setFlashLigth_ON	;wreg free
 28608                           
 28609                           ;outputs_MC50.c: 1011:             }
 28610  004A24  D00D               	goto	l25813
 28611  004A26                     l25807:
 28612                           
 28613                           ; BSR set to: 0
 28614  004A26  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28615  004A28  B4D8               	btfsc	status,2,c
 28616  004A2A  D004               	goto	u32480
 28617                           
 28618                           ; BSR set to: 0
 28619  004A2C  0E02               	movlw	2
 28620  004A2E  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28621  004A30  A4D8               	btfss	status,2,c
 28622  004A32  D006               	goto	l25813
 28623  004A34                     u32480:
 28624                           
 28625                           ; BSR set to: 0
 28626                           ;outputs_MC50.c: 1013:             {;outputs_MC50.c: 1014:                 setFlashLigth
      +                          _ON(0);
 28627  004A34  0E00               	movlw	0
 28628  004A36  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 28629  004A38  0E00               	movlw	0
 28630  004A3A  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 28631  004A3C  ECAF  F04B         	call	_setFlashLigth_ON	;wreg free
 28632  004A40                     l25813:
 28633                           
 28634                           ;outputs_MC50.c: 1017:             if (var_sys_NVM.flashLightMode == electroiman)
 28635  004A40  0E03               	movlw	3
 28636  004A42  0100               	movlb	0	; () banked
 28637  004A44  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28638  004A46  A4D8               	btfss	status,2,c
 28639  004A48  0012               	return	
 28640                           
 28641                           ; BSR set to: 0
 28642                           
 28643                           ;outputs_MC50.c: 1018:             {;outputs_MC50.c: 1019:             do { LATEbits.LAT
      +                          E2 = 0; } while(0);
 28644  004A4A  9487               	bcf	135,2,c	;volatile
 28645  004A4C  0012               	return		;funcret
 28646  004A4E                     __end_of_ControlLights:
 28647                           	callstack 0
 28648                           
 28649 ;; *************** function _setRGB_ON *****************
 28650 ;; Defined at:
 28651 ;;		line 1028 in file "outputs_MC50.c"
 28652 ;; Parameters:    Size  Location     Type
 28653 ;;  RGBLigth        1    wreg     enum E10611
 28654 ;;  Freq            2   16[COMRAM] int 
 28655 ;; Auto vars:     Size  Location     Type
 28656 ;;  RGBLigth        1   20[COMRAM] enum E10611
 28657 ;; Return value:  Size  Location     Type
 28658 ;;                  1    wreg      void 
 28659 ;; Registers used:
 28660 ;;		wreg, status,2, status,0, cstack
 28661 ;; Tracked objects:
 28662 ;;		On entry : 3E/0
 28663 ;;		On exit  : 3F/1
 28664 ;;		Unchanged: 0/0
 28665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28666 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28667 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28668 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28669 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28670 ;;Total ram usage:        5 bytes
 28671 ;; Hardware stack levels used: 1
 28672 ;; Hardware stack levels required when called: 5
 28673 ;; This function calls:
 28674 ;;		_RGB_Set
 28675 ;; This function is called by:
 28676 ;;		_ControlLights
 28677 ;; This function uses a non-reentrant model
 28678 ;;
 28679                           
 28680                           	psect	text116
 28681  008282                     __ptext116:
 28682                           	callstack 0
 28683  008282                     _setRGB_ON:
 28684                           	callstack 24
 28685                           
 28686                           ;incstack = 0
 28687                           ;setRGB_ON@RGBLigth stored from wreg
 28688  008282  6E15               	movwf	setRGB_ON@RGBLigth^0,c
 28689                           
 28690                           ;outputs_MC50.c: 1028: void setRGB_ON(RGBY_enum RGBLigth,int Freq);outputs_MC50.c: 1029:
      +                           {;outputs_MC50.c: 1031:     do { LATAbits.LATA7 = 1; } while(0);
 28691  008284  8E83               	bsf	131,7,c	;volatile
 28692                           
 28693                           ;outputs_MC50.c: 1037:     if(Freq==0 || var_sys.upFaseRGB==1)
 28694  008286  5011               	movf	setRGB_ON@Freq^0,w,c
 28695  008288  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 28696  00828A  B4D8               	btfsc	status,2,c
 28697  00828C  D015               	goto	l23297
 28698  00828E  0101               	movlb	1	; () banked
 28699  008290  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 28700  008292  B4D8               	btfsc	status,2,c
 28701  008294  D011               	goto	l23297
 28702  008296  D024               	goto	l23299
 28703  008298                     l23287:
 28704                           
 28705                           ;outputs_MC50.c: 1043:                 RGB_Set(0x20);
 28706  008298  0E20               	movlw	32
 28707  00829A  ECA3  F04F         	call	_RGB_Set
 28708                           
 28709                           ;outputs_MC50.c: 1044:             break;
 28710  00829E  D020               	goto	l23299
 28711  0082A0                     l23289:
 28712                           
 28713                           ;outputs_MC50.c: 1047:                 RGB_Set(0x04);
 28714  0082A0  0E04               	movlw	4
 28715  0082A2  ECA3  F04F         	call	_RGB_Set
 28716                           
 28717                           ;outputs_MC50.c: 1048:             break;
 28718  0082A6  D01C               	goto	l23299
 28719  0082A8                     l23291:
 28720                           
 28721                           ;outputs_MC50.c: 1051:                 RGB_Set(0x00);
 28722  0082A8  0E00               	movlw	0
 28723  0082AA  ECA3  F04F         	call	_RGB_Set
 28724                           
 28725                           ;outputs_MC50.c: 1052:             break;
 28726  0082AE  D018               	goto	l23299
 28727  0082B0                     l23293:
 28728                           
 28729                           ;outputs_MC50.c: 1055:                 RGB_Set(0x24);
 28730  0082B0  0E24               	movlw	36
 28731  0082B2  ECA3  F04F         	call	_RGB_Set
 28732                           
 28733                           ;outputs_MC50.c: 1056:             break;
 28734  0082B6  D014               	goto	l23299
 28735  0082B8                     l23297:
 28736  0082B8  5015               	movf	setRGB_ON@RGBLigth^0,w,c
 28737  0082BA  6E13               	movwf	??_setRGB_ON^0,c
 28738  0082BC  6A14               	clrf	(??_setRGB_ON+1)^0,c
 28739                           
 28740                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28741                           ; Switch size 1, requested type "simple"
 28742                           ; Number of cases is 1, Range of values is 0 to 0
 28743                           ; switch strategies available:
 28744                           ; Name         Instructions Cycles
 28745                           ; simple_byte            4     3 (average)
 28746                           ;	Chosen strategy is simple_byte
 28747  0082BE  5014               	movf	(??_setRGB_ON+1)^0,w,c
 28748  0082C0  0A00               	xorlw	0	; case 0
 28749  0082C2  A4D8               	btfss	status,2,c
 28750  0082C4  D00D               	goto	l23299
 28751                           
 28752                           ; Switch size 1, requested type "simple"
 28753                           ; Number of cases is 4, Range of values is 1 to 4
 28754                           ; switch strategies available:
 28755                           ; Name         Instructions Cycles
 28756                           ; simple_byte           13     7 (average)
 28757                           ;	Chosen strategy is simple_byte
 28758  0082C6  5013               	movf	??_setRGB_ON^0,w,c
 28759  0082C8  0A01               	xorlw	1	; case 1
 28760  0082CA  B4D8               	btfsc	status,2,c
 28761  0082CC  D7ED               	goto	l23291
 28762  0082CE  0A03               	xorlw	3	; case 2
 28763  0082D0  B4D8               	btfsc	status,2,c
 28764  0082D2  D7E6               	goto	l23289
 28765  0082D4  0A01               	xorlw	1	; case 3
 28766  0082D6  B4D8               	btfsc	status,2,c
 28767  0082D8  D7DF               	goto	l23287
 28768  0082DA  0A07               	xorlw	7	; case 4
 28769  0082DC  B4D8               	btfsc	status,2,c
 28770  0082DE  D7E8               	goto	l23293
 28771  0082E0                     l23299:
 28772                           
 28773                           ;outputs_MC50.c: 1061:     if(ts_system.timeFreqRGB<=0 && Freq!=0)
 28774  0082E0  0101               	movlb	1	; () banked
 28775  0082E2  BFBB               	btfsc	(_ts_system+29)& (0+255),7,b	;volatile
 28776  0082E4  D005               	goto	u27070
 28777  0082E6  51BB               	movf	(_ts_system+29)& (0+255),w,b	;volatile
 28778  0082E8  E113               	bnz	l2507
 28779  0082EA  05BA               	decf	(_ts_system+28)& (0+255),w,b	;volatile
 28780  0082EC  B0D8               	btfsc	status,0,c
 28781  0082EE  0012               	return	
 28782  0082F0                     u27070:
 28783                           
 28784                           ; BSR set to: 1
 28785  0082F0  5011               	movf	setRGB_ON@Freq^0,w,c
 28786  0082F2  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 28787  0082F4  B4D8               	btfsc	status,2,c
 28788  0082F6  0012               	return	
 28789                           
 28790                           ; BSR set to: 1
 28791                           ;outputs_MC50.c: 1062:     {;outputs_MC50.c: 1063:         ts_system.timeFreqRGB=Freq;
 28792  0082F8  C011  F1BA         	movff	setRGB_ON@Freq,_ts_system+28	;volatile
 28793  0082FC  C012  F1BB         	movff	setRGB_ON@Freq+1,_ts_system+29	;volatile
 28794                           
 28795                           ; BSR set to: 1
 28796                           ;outputs_MC50.c: 1064:         if(var_sys.upFaseRGB==1)
 28797  008300  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 28798  008302  A4D8               	btfss	status,2,c
 28799  008304  D003               	goto	l23309
 28800                           
 28801                           ; BSR set to: 1
 28802                           ;outputs_MC50.c: 1065:         {;outputs_MC50.c: 1066:             var_sys.upFaseRGB=0;
 28803  008306  0E00               	movlw	0
 28804  008308  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 28805                           
 28806                           ;outputs_MC50.c: 1067:         }
 28807  00830A  0012               	return	
 28808  00830C                     l23309:
 28809                           
 28810                           ; BSR set to: 1
 28811                           ;outputs_MC50.c: 1069:         {;outputs_MC50.c: 1070:             var_sys.upFaseRGB=1;
 28812  00830C  0E01               	movlw	1
 28813  00830E  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 28814  008310                     l2507:
 28815                           
 28816                           ; BSR set to: 1
 28817  008310  0012               	return		;funcret
 28818  008312                     __end_of_setRGB_ON:
 28819                           	callstack 0
 28820                           
 28821 ;; *************** function _RGB_Set *****************
 28822 ;; Defined at:
 28823 ;;		line 98 in file "outputs_MC50.c"
 28824 ;; Parameters:    Size  Location     Type
 28825 ;;  value           1    wreg     unsigned char 
 28826 ;; Auto vars:     Size  Location     Type
 28827 ;;  value           1   15[COMRAM] unsigned char 
 28828 ;; Return value:  Size  Location     Type
 28829 ;;                  1    wreg      void 
 28830 ;; Registers used:
 28831 ;;		wreg, status,2, status,0
 28832 ;; Tracked objects:
 28833 ;;		On entry : 0/0
 28834 ;;		On exit  : 0/0
 28835 ;;		Unchanged: 0/0
 28836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28838 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28840 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28841 ;;Total ram usage:        1 bytes
 28842 ;; Hardware stack levels used: 1
 28843 ;; Hardware stack levels required when called: 4
 28844 ;; This function calls:
 28845 ;;		Nothing
 28846 ;; This function is called by:
 28847 ;;		_setRGB_ON
 28848 ;; This function uses a non-reentrant model
 28849 ;;
 28850                           
 28851                           	psect	text117
 28852  009F46                     __ptext117:
 28853                           	callstack 0
 28854  009F46                     _RGB_Set:
 28855                           	callstack 24
 28856                           
 28857                           ; BSR set to: 1
 28858                           ;incstack = 0
 28859                           ;RGB_Set@value stored from wreg
 28860  009F46  6E10               	movwf	RGB_Set@value^0,c
 28861                           
 28862                           ;outputs_MC50.c: 98: void RGB_Set(char value);outputs_MC50.c: 99: {;outputs_MC50.c: 100:
      +                              LATC &= 0xdb ;
 28863  009F48  0EDB               	movlw	219
 28864  009F4A  1685               	andwf	133,f,c	;volatile
 28865                           
 28866                           ;outputs_MC50.c: 101:    LATC |= value;
 28867  009F4C  5010               	movf	RGB_Set@value^0,w,c	;volatile
 28868  009F4E  1285               	iorwf	133,f,c	;volatile
 28869  009F50  9E83               	bcf	131,7,c	;volatile
 28870  009F52  0012               	return		;funcret
 28871  009F54                     __end_of_RGB_Set:
 28872                           	callstack 0
 28873                           
 28874 ;; *************** function _setFlashLigth_ON *****************
 28875 ;; Defined at:
 28876 ;;		line 1077 in file "outputs_MC50.c"
 28877 ;; Parameters:    Size  Location     Type
 28878 ;;  Freq            2   15[COMRAM] int 
 28879 ;; Auto vars:     Size  Location     Type
 28880 ;;		None
 28881 ;; Return value:  Size  Location     Type
 28882 ;;                  1    wreg      void 
 28883 ;; Registers used:
 28884 ;;		wreg, status,2, status,0
 28885 ;; Tracked objects:
 28886 ;;		On entry : 3E/1
 28887 ;;		On exit  : 3F/1
 28888 ;;		Unchanged: 0/0
 28889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28893 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28894 ;;Total ram usage:        2 bytes
 28895 ;; Hardware stack levels used: 1
 28896 ;; Hardware stack levels required when called: 4
 28897 ;; This function calls:
 28898 ;;		Nothing
 28899 ;; This function is called by:
 28900 ;;		_ControlLights
 28901 ;; This function uses a non-reentrant model
 28902 ;;
 28903                           
 28904                           	psect	text118
 28905  00975E                     __ptext118:
 28906                           	callstack 0
 28907  00975E                     _setFlashLigth_ON:
 28908                           	callstack 25
 28909                           
 28910                           ;outputs_MC50.c: 1077: void setFlashLigth_ON(int Freq);outputs_MC50.c: 1078: {;outputs_M
      +                          C50.c: 1079:     if(Freq==0 || var_sys.upFaseFlashligth==1)
 28911                           
 28912                           ;incstack = 0
 28913  00975E  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 28914  009760  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 28915  009762  B4D8               	btfsc	status,2,c
 28916  009764  D004               	goto	u27020
 28917  009766  0101               	movlb	1	; () banked
 28918  009768  0525               	decf	(_var_sys+37)& (0+255),w,b	;volatile
 28919  00976A  A4D8               	btfss	status,2,c
 28920  00976C  D002               	goto	l2516
 28921  00976E                     u27020:
 28922                           
 28923                           ;outputs_MC50.c: 1080:     {;outputs_MC50.c: 1081:         do { LATEbits.LATE2 = 1; } wh
      +                          ile(0);
 28924  00976E  8487               	bsf	135,2,c	;volatile
 28925  009770  D001               	goto	l23275
 28926  009772                     l2516:
 28927                           
 28928                           ; BSR set to: 1
 28929  009772  9487               	bcf	135,2,c	;volatile
 28930  009774                     l23275:
 28931                           
 28932                           ;outputs_MC50.c: 1088:     if(ts_system.timeFreqFlashligth<=0 && Freq!=0)
 28933  009774  0101               	movlb	1	; () banked
 28934  009776  BFBD               	btfsc	(_ts_system+31)& (0+255),7,b	;volatile
 28935  009778  D005               	goto	u27030
 28936  00977A  51BD               	movf	(_ts_system+31)& (0+255),w,b	;volatile
 28937  00977C  E10D               	bnz	l2519
 28938  00977E  05BC               	decf	(_ts_system+30)& (0+255),w,b	;volatile
 28939  009780  B0D8               	btfsc	status,0,c
 28940  009782  0012               	return	
 28941  009784                     u27030:
 28942                           
 28943                           ; BSR set to: 1
 28944  009784  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 28945  009786  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 28946  009788  B4D8               	btfsc	status,2,c
 28947  00978A  0012               	return	
 28948                           
 28949                           ; BSR set to: 1
 28950                           ;outputs_MC50.c: 1089:     {;outputs_MC50.c: 1090:         ts_system.timeFreqFlashligth=
      +                          Freq;
 28951  00978C  C010  F1BC         	movff	setFlashLigth_ON@Freq,_ts_system+30	;volatile
 28952  009790  C011  F1BD         	movff	setFlashLigth_ON@Freq+1,_ts_system+31	;volatile
 28953                           
 28954                           ; BSR set to: 1
 28955                           ;outputs_MC50.c: 1091:         var_sys.upFaseFlashligth ^= (1 << 0);
 28956  009794  0E01               	movlw	1
 28957  009796  1B25               	xorwf	(_var_sys+37)& (0+255),f,b	;volatile
 28958  009798                     l2519:
 28959                           
 28960                           ; BSR set to: 1
 28961  009798  0012               	return		;funcret
 28962  00979A                     __end_of_setFlashLigth_ON:
 28963                           	callstack 0
 28964                           
 28965 ;; *************** function _ControlInputs *****************
 28966 ;; Defined at:
 28967 ;;		line 674 in file "inputs_MC50.c"
 28968 ;; Parameters:    Size  Location     Type
 28969 ;;		None
 28970 ;; Auto vars:     Size  Location     Type
 28971 ;;		None
 28972 ;; Return value:  Size  Location     Type
 28973 ;;                  1    wreg      void 
 28974 ;; Registers used:
 28975 ;;		wreg, status,2, status,0
 28976 ;; Tracked objects:
 28977 ;;		On entry : 3E/1
 28978 ;;		On exit  : 3E/0
 28979 ;;		Unchanged: 0/0
 28980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28985 ;;Total ram usage:        0 bytes
 28986 ;; Hardware stack levels used: 1
 28987 ;; Hardware stack levels required when called: 4
 28988 ;; This function calls:
 28989 ;;		Nothing
 28990 ;; This function is called by:
 28991 ;;		_main
 28992 ;; This function uses a non-reentrant model
 28993 ;;
 28994                           
 28995                           	psect	text119
 28996  00720A                     __ptext119:
 28997                           	callstack 0
 28998  00720A                     _ControlInputs:
 28999                           	callstack 26
 29000                           
 29001                           ;inputs_MC50.c: 678:     if (( var_sys.StateMotor==InClose || (((PORTEbits.RE1 == 1)&& v
      +                          ar_sys_NVM.Direction_motor == 0)||((PORTEbits.RE0 == 1)&&var_sys_NVM.Direction_motor == 
      +                          1))) && (var_sys.FimCurso_CloseIsEnabled == YES))
 29002                           
 29003                           ; BSR set to: 1
 29004                           ;incstack = 0
 29005  00720A  0E03               	movlw	3
 29006  00720C  0101               	movlb	1	; () banked
 29007  00720E  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 29008  007210  B4D8               	btfsc	status,2,c
 29009  007212  D00C               	goto	u30520
 29010                           
 29011                           ; BSR set to: 1
 29012  007214  A291               	btfss	145,1,c	;volatile
 29013  007216  D004               	goto	u30500
 29014                           
 29015                           ; BSR set to: 1
 29016  007218  0100               	movlb	0	; () banked
 29017  00721A  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 29018  00721C  B4D8               	btfsc	status,2,c
 29019  00721E  D006               	goto	u30520
 29020  007220                     u30500:
 29021  007220  A091               	btfss	145,0,c	;volatile
 29022  007222  D00A               	goto	l24981
 29023  007224  0100               	movlb	0	; () banked
 29024  007226  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 29025  007228  A4D8               	btfss	status,2,c
 29026  00722A  D006               	goto	l24981
 29027  00722C                     u30520:
 29028  00722C  0101               	movlb	1	; () banked
 29029  00722E  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 29030  007230  A4D8               	btfss	status,2,c
 29031  007232  D002               	goto	l24981
 29032                           
 29033                           ; BSR set to: 1
 29034                           ;inputs_MC50.c: 679:     {;inputs_MC50.c: 680:         var_sys.StateMotor = Stopped;
 29035  007234  0E00               	movlw	0
 29036  007236  6F00               	movwf	_var_sys& (0+255),b	;volatile
 29037  007238                     l24981:
 29038                           
 29039                           ;inputs_MC50.c: 683:     if((var_sys.StateMotor==InOpenFull || var_sys.StateMotor==InOpe
      +                          nWalk || (((PORTEbits.RE0 == 1) &&var_sys_NVM.Direction_motor == 0)||((PORTEbits.RE1 == 
      +                          1) && var_sys_NVM.Direction_motor == 1))) && (var_sys.FimCurso_OpenIsEnabled == YES))
 29040  007238  0101               	movlb	1	; () banked
 29041  00723A  0500               	decf	_var_sys& (0+255),w,b	;volatile
 29042  00723C  B4D8               	btfsc	status,2,c
 29043  00723E  D010               	goto	u30590
 29044                           
 29045                           ; BSR set to: 1
 29046  007240  0E02               	movlw	2
 29047  007242  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 29048  007244  B4D8               	btfsc	status,2,c
 29049  007246  D00C               	goto	u30590
 29050                           
 29051                           ; BSR set to: 1
 29052  007248  A091               	btfss	145,0,c	;volatile
 29053  00724A  D004               	goto	u30570
 29054                           
 29055                           ; BSR set to: 1
 29056  00724C  0100               	movlb	0	; () banked
 29057  00724E  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 29058  007250  B4D8               	btfsc	status,2,c
 29059  007252  D006               	goto	u30590
 29060  007254                     u30570:
 29061  007254  A291               	btfss	145,1,c	;volatile
 29062  007256  D00A               	goto	l24995
 29063  007258  0100               	movlb	0	; () banked
 29064  00725A  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 29065  00725C  A4D8               	btfss	status,2,c
 29066  00725E  D006               	goto	l24995
 29067  007260                     u30590:
 29068  007260  0101               	movlb	1	; () banked
 29069  007262  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 29070  007264  A4D8               	btfss	status,2,c
 29071  007266  D002               	goto	l24995
 29072                           
 29073                           ; BSR set to: 1
 29074                           ;inputs_MC50.c: 684:     {;inputs_MC50.c: 685:         var_sys.StateMotor = Stopped;
 29075  007268  0E00               	movlw	0
 29076  00726A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 29077  00726C                     l24995:
 29078                           
 29079                           ;inputs_MC50.c: 688:     if (var_sys.LearningIsEnabled != YES){
 29080  00726C  0101               	movlb	1	; () banked
 29081  00726E  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 29082  007270  B4D8               	btfsc	status,2,c
 29083  007272  0012               	return	
 29084                           
 29085                           ; BSR set to: 1
 29086                           ;inputs_MC50.c: 690:         if((var_sys_NVM.photoCellIsON == 1) && (var_sys.photoCellIs
      +                          Obstructed == YES) && var_sys.AutoInversionActive==NO)
 29087  007274  0100               	movlb	0	; () banked
 29088  007276  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 29089  007278  A4D8               	btfss	status,2,c
 29090  00727A  D02B               	goto	l25021
 29091                           
 29092                           ; BSR set to: 0
 29093  00727C  0101               	movlb	1	; () banked
 29094  00727E  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 29095  007280  A4D8               	btfss	status,2,c
 29096  007282  D027               	goto	l25021
 29097                           
 29098                           ; BSR set to: 1
 29099  007284  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 29100  007286  A4D8               	btfss	status,2,c
 29101  007288  D024               	goto	l25021
 29102                           
 29103                           ; BSR set to: 1
 29104                           ;inputs_MC50.c: 691:         {;inputs_MC50.c: 699:             if((var_sys.StateMotor==I
      +                          nOpenFull || var_sys.StateMotor==InOpenWalk) && (var_sys_NVM.photoCellInOpen==1))
 29105  00728A  0500               	decf	_var_sys& (0+255),w,b	;volatile
 29106  00728C  B4D8               	btfsc	status,2,c
 29107  00728E  D004               	goto	u30660
 29108                           
 29109                           ; BSR set to: 1
 29110  007290  0E02               	movlw	2
 29111  007292  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 29112  007294  A4D8               	btfss	status,2,c
 29113  007296  D007               	goto	l25011
 29114  007298                     u30660:
 29115                           
 29116                           ; BSR set to: 1
 29117  007298  0100               	movlb	0	; () banked
 29118  00729A  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 29119  00729C  A4D8               	btfss	status,2,c
 29120  00729E  D003               	goto	l25011
 29121                           
 29122                           ; BSR set to: 0
 29123                           ;inputs_MC50.c: 700:             {;inputs_MC50.c: 701:                 var_sys.StateMoto
      +                          r = Stopped;
 29124  0072A0  0E00               	movlw	0
 29125  0072A2  0101               	movlb	1	; () banked
 29126  0072A4  D015               	goto	L104
 29127  0072A6                     l25011:
 29128  0072A6  0E03               	movlw	3
 29129  0072A8  0101               	movlb	1	; () banked
 29130  0072AA  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 29131  0072AC  A4D8               	btfss	status,2,c
 29132  0072AE  D011               	goto	l25021
 29133                           
 29134                           ; BSR set to: 1
 29135  0072B0  0100               	movlb	0	; () banked
 29136  0072B2  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 29137  0072B4  A4D8               	btfss	status,2,c
 29138  0072B6  D00D               	goto	l25021
 29139                           
 29140                           ; BSR set to: 0
 29141  0072B8  0101               	movlb	1	; () banked
 29142  0072BA  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 29143  0072BC  D005               	goto	u30700
 29144  0072BE  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 29145  0072C0  E108               	bnz	l25021
 29146  0072C2  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 29147  0072C4  B0D8               	btfsc	status,0,c
 29148  0072C6  D005               	goto	l25021
 29149  0072C8                     u30700:
 29150                           
 29151                           ; BSR set to: 1
 29152  0072C8  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 29153  0072CA  A4D8               	btfss	status,2,c
 29154  0072CC  D002               	goto	l25021
 29155                           
 29156                           ; BSR set to: 1
 29157                           ;inputs_MC50.c: 706:             {;inputs_MC50.c: 707:                 var_sys.StateMoto
      +                          r = Stopped;
 29158  0072CE  0E00               	movlw	0
 29159  0072D0                     L104:
 29160  0072D0  6F00               	movwf	_var_sys& (0+255),b	;volatile
 29161  0072D2                     l25021:
 29162                           
 29163                           ;inputs_MC50.c: 713:         if((var_sys_NVM.securityBandIsON == 1 || var_sys_NVM.Stopbo
      +                          ton == 1) && (var_sys.SecurityBarIsObstructed == YES && var_sys.AutoInversionActive == N
      +                          O))
 29164  0072D2  0100               	movlb	0	; () banked
 29165  0072D4  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 29166  0072D6  B4D8               	btfsc	status,2,c
 29167  0072D8  D003               	goto	u30730
 29168                           
 29169                           ; BSR set to: 0
 29170  0072DA  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 29171  0072DC  A4D8               	btfss	status,2,c
 29172  0072DE  0012               	return	
 29173  0072E0                     u30730:
 29174                           
 29175                           ; BSR set to: 0
 29176  0072E0  0101               	movlb	1	; () banked
 29177  0072E2  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 29178  0072E4  A4D8               	btfss	status,2,c
 29179  0072E6  0012               	return	
 29180                           
 29181                           ; BSR set to: 1
 29182  0072E8  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 29183  0072EA  A4D8               	btfss	status,2,c
 29184  0072EC  0012               	return	
 29185                           
 29186                           ; BSR set to: 1
 29187                           ;inputs_MC50.c: 714:         {;inputs_MC50.c: 723:             if(var_sys.StateMotor == 
      +                          InClose && (var_sys_NVM.securityBandInOpen == 0))
 29188  0072EE  0E03               	movlw	3
 29189  0072F0  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 29190  0072F2  A4D8               	btfss	status,2,c
 29191  0072F4  D008               	goto	l25035
 29192                           
 29193                           ; BSR set to: 1
 29194  0072F6  0100               	movlb	0	; () banked
 29195  0072F8  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 29196  0072FA  A4D8               	btfss	status,2,c
 29197  0072FC  D004               	goto	l25035
 29198                           
 29199                           ; BSR set to: 0
 29200                           ;inputs_MC50.c: 724:             {;inputs_MC50.c: 725:                 var_sys.StateMoto
      +                          r = Stopped;
 29201  0072FE  0E00               	movlw	0
 29202  007300  0101               	movlb	1	; () banked
 29203  007302  6F00               	movwf	_var_sys& (0+255),b	;volatile
 29204                           
 29205                           ;inputs_MC50.c: 727:             }
 29206  007304  0012               	return	
 29207  007306                     l25035:
 29208  007306  0101               	movlb	1	; () banked
 29209  007308  0500               	decf	_var_sys& (0+255),w,b	;volatile
 29210  00730A  B4D8               	btfsc	status,2,c
 29211  00730C  D004               	goto	u30790
 29212                           
 29213                           ; BSR set to: 1
 29214  00730E  0E02               	movlw	2
 29215  007310  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 29216  007312  A4D8               	btfss	status,2,c
 29217  007314  D004               	goto	u30800
 29218  007316                     u30790:
 29219                           
 29220                           ; BSR set to: 1
 29221  007316  0100               	movlb	0	; () banked
 29222  007318  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 29223  00731A  B4D8               	btfsc	status,2,c
 29224  00731C  D004               	goto	u30810
 29225  00731E                     u30800:
 29226  00731E  0100               	movlb	0	; () banked
 29227  007320  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 29228  007322  A4D8               	btfss	status,2,c
 29229  007324  0012               	return	
 29230  007326                     u30810:
 29231                           
 29232                           ; BSR set to: 0
 29233                           ;inputs_MC50.c: 730:             {;inputs_MC50.c: 731:                 var_sys.StateMoto
      +                          r = Stopped;
 29234  007326  0E00               	movlw	0
 29235  007328  0101               	movlb	1	; () banked
 29236  00732A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 29237  00732C  0012               	return	
 29238  00732E                     __end_of_ControlInputs:
 29239                           	callstack 0
 29240                           
 29241 ;; *************** function _ControlCurrent *****************
 29242 ;; Defined at:
 29243 ;;		line 342 in file "controlCurrent_MC50.c"
 29244 ;; Parameters:    Size  Location     Type
 29245 ;;		None
 29246 ;; Auto vars:     Size  Location     Type
 29247 ;;		None
 29248 ;; Return value:  Size  Location     Type
 29249 ;;                  1    wreg      void 
 29250 ;; Registers used:
 29251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29252 ;; Tracked objects:
 29253 ;;		On entry : 3E/1
 29254 ;;		On exit  : 3E/0
 29255 ;;		Unchanged: 0/0
 29256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29259 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29260 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29261 ;;Total ram usage:        4 bytes
 29262 ;; Hardware stack levels used: 1
 29263 ;; Hardware stack levels required when called: 6
 29264 ;; This function calls:
 29265 ;;		_GetMotorPower
 29266 ;;		_getCurrentComparator
 29267 ;;		_refreshADCZeroOffset
 29268 ;;		_refreshCurrent
 29269 ;; This function is called by:
 29270 ;;		_main
 29271 ;; This function uses a non-reentrant model
 29272 ;;
 29273                           
 29274                           	psect	text120
 29275  006BC4                     __ptext120:
 29276                           	callstack 0
 29277  006BC4                     _ControlCurrent:
 29278                           	callstack 24
 29279                           
 29280                           ;controlCurrent_MC50.c: 345:     refreshCurrent();
 29281                           
 29282                           ;incstack = 0
 29283  006BC4  ECA7  F04A         	call	_refreshCurrent	;wreg free
 29284                           
 29285                           ;controlCurrent_MC50.c: 351:     refreshADCZeroOffset();
 29286  006BC8  EC2A  F03B         	call	_refreshADCZeroOffset	;wreg free
 29287                           
 29288                           ;controlCurrent_MC50.c: 354:     var_sys.velocityActual = GetMotorPower();
 29289  006BCC  ECEC  F03D         	call	_GetMotorPower	;wreg free
 29290  006BD0  6E23               	movwf	??_ControlCurrent^0,c
 29291  006BD2  5023               	movf	??_ControlCurrent^0,w,c
 29292  006BD4  6F38               	movwf	(_var_sys+56)& (0+255),b	;volatile
 29293  006BD6  6B39               	clrf	(_var_sys+57)& (0+255),b	;volatile
 29294                           
 29295                           ; BSR set to: 1
 29296                           ;controlCurrent_MC50.c: 355:     var_sys.ActualComparatorCurrent = getCurrentComparator(
      +                          );
 29297  006BD8  ECF4  F031         	call	_getCurrentComparator	;wreg free
 29298  006BDC  C016  F134         	movff	?_getCurrentComparator,_var_sys+52	;volatile
 29299  006BE0  C017  F135         	movff	?_getCurrentComparator+1,_var_sys+53	;volatile
 29300  006BE4  C018  F136         	movff	?_getCurrentComparator+2,_var_sys+54	;volatile
 29301  006BE8  C019  F137         	movff	?_getCurrentComparator+3,_var_sys+55	;volatile
 29302                           
 29303                           ; BSR set to: 1
 29304                           ;controlCurrent_MC50.c: 357:     if(var_sys.StateMotor == Stopped)
 29305  006BEC  5100               	movf	_var_sys& (0+255),w,b	;volatile
 29306  006BEE  A4D8               	btfss	status,2,c
 29307  006BF0  D00F               	goto	l24691
 29308                           
 29309                           ; BSR set to: 1
 29310                           ;controlCurrent_MC50.c: 358:     {;controlCurrent_MC50.c: 360:         numberOfErrorCurr
      +                          ent=0;
 29311  006BF2  0E00               	movlw	0
 29312  006BF4  0100               	movlb	0	; () banked
 29313  006BF6  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 29314                           
 29315                           ;controlCurrent_MC50.c: 361:         var_sys.CurrentAlarmIsOn=NO;
 29316  006BF8  0E00               	movlw	0
 29317  006BFA  0101               	movlb	1	; () banked
 29318  006BFC  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 29319                           
 29320                           ;controlCurrent_MC50.c: 362:         var_sys.InvertionCurrentOpening=NO;
 29321  006BFE  0E00               	movlw	0
 29322  006C00  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 29323                           
 29324                           ;controlCurrent_MC50.c: 363:         var_sys.InvertionCurrentClosing=NO;
 29325  006C02  0E00               	movlw	0
 29326  006C04  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 29327                           
 29328                           ;controlCurrent_MC50.c: 364:         ts_system.TimeTransitionDecelaration=(1000/50);
 29329  006C06  0E00               	movlw	0
 29330  006C08  6FD7               	movwf	(_ts_system+57)& (0+255),b	;volatile
 29331  006C0A  0E14               	movlw	20
 29332  006C0C  6FD6               	movwf	(_ts_system+56)& (0+255),b	;volatile
 29333                           
 29334                           ;controlCurrent_MC50.c: 365:     }
 29335  006C0E  0012               	return	
 29336  006C10                     l24691:
 29337                           
 29338                           ; BSR set to: 1
 29339  006C10  517B               	movf	_powerControl_st& (0+255),w,b
 29340  006C12  A4D8               	btfss	status,2,c
 29341  006C14  D05D               	goto	l24725
 29342                           
 29343                           ; BSR set to: 1
 29344                           ;controlCurrent_MC50.c: 368:     {;controlCurrent_MC50.c: 376:         ts_system.TimeTra
      +                          nsitionDecelaration=(1000/50);
 29345  006C16  0E00               	movlw	0
 29346  006C18  6FD7               	movwf	(_ts_system+57)& (0+255),b	;volatile
 29347  006C1A  0E14               	movlw	20
 29348  006C1C  6FD6               	movwf	(_ts_system+56)& (0+255),b	;volatile
 29349                           
 29350                           ; BSR set to: 1
 29351                           ;controlCurrent_MC50.c: 377:         if (( var_sys.ActualCurrent>var_sys.ActualComparato
      +                          rCurrent ) && (ts_system.TimeChargeCondesador<=0)&&var_sys_NVM.motorSensitivity!=0 && ts
      +                          _system.TimeReleCapacitor<=0)
 29352  006C1E  512E               	movf	(_var_sys+46)& (0+255),w,b	;volatile
 29353  006C20  6E23               	movwf	??_ControlCurrent^0,c
 29354  006C22  512F               	movf	(_var_sys+47)& (0+255),w,b	;volatile
 29355  006C24  6E24               	movwf	(??_ControlCurrent+1)^0,c
 29356  006C26  6A25               	clrf	(??_ControlCurrent+2)^0,c
 29357  006C28  6A26               	clrf	(??_ControlCurrent+3)^0,c
 29358  006C2A  5023               	movf	??_ControlCurrent^0,w,c
 29359  006C2C  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 29360  006C2E  5024               	movf	(??_ControlCurrent+1)^0,w,c
 29361  006C30  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 29362  006C32  5025               	movf	(??_ControlCurrent+2)^0,w,c
 29363  006C34  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 29364  006C36  5026               	movf	(??_ControlCurrent+3)^0,w,c
 29365  006C38  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 29366  006C3A  B0D8               	btfsc	status,0,c
 29367  006C3C  D03E               	goto	l24723
 29368                           
 29369                           ; BSR set to: 1
 29370  006C3E  BFB9               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 29371  006C40  D005               	goto	u29860
 29372  006C42  51B9               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 29373  006C44  E13A               	bnz	l24723
 29374  006C46  05B8               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 29375  006C48  B0D8               	btfsc	status,0,c
 29376  006C4A  D037               	goto	l24723
 29377  006C4C                     u29860:
 29378                           
 29379                           ; BSR set to: 1
 29380  006C4C  0100               	movlb	0	; () banked
 29381  006C4E  519B               	movf	(_var_sys_NVM+3)& (0+255),w,b	;volatile
 29382  006C50  B4D8               	btfsc	status,2,c
 29383  006C52  D033               	goto	l24723
 29384                           
 29385                           ; BSR set to: 0
 29386  006C54  0101               	movlb	1	; () banked
 29387  006C56  BFE1               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 29388  006C58  D005               	goto	u29880
 29389  006C5A  51E1               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 29390  006C5C  E12E               	bnz	l24723
 29391  006C5E  05E0               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 29392  006C60  B0D8               	btfsc	status,0,c
 29393  006C62  D02B               	goto	l24723
 29394  006C64                     u29880:
 29395                           
 29396                           ; BSR set to: 1
 29397                           ;controlCurrent_MC50.c: 378:         {;controlCurrent_MC50.c: 379:              if (numb
      +                          erOfErrorCurrent >=1)
 29398  006C64  0100               	movlb	0	; () banked
 29399  006C66  518E               	movf	_numberOfErrorCurrent& (0+255),w,b	;volatile
 29400  006C68  B4D8               	btfsc	status,2,c
 29401  006C6A  D00B               	goto	l24709
 29402                           
 29403                           ; BSR set to: 0
 29404                           ;controlCurrent_MC50.c: 380:              {;controlCurrent_MC50.c: 381:                 
      +                           if(erroranterior > var_sys.ActualCurrent )
 29405  006C6C  0101               	movlb	1	; () banked
 29406  006C6E  518B               	movf	_erroranterior& (0+255),w,b	;volatile
 29407  006C70  5D2E               	subwf	(_var_sys+46)& (0+255),w,b	;volatile
 29408  006C72  518C               	movf	(_erroranterior+1)& (0+255),w,b	;volatile
 29409  006C74  592F               	subwfb	(_var_sys+47)& (0+255),w,b	;volatile
 29410  006C76  B0D8               	btfsc	status,0,c
 29411  006C78  D004               	goto	l24709
 29412                           
 29413                           ; BSR set to: 1
 29414                           ;controlCurrent_MC50.c: 382:                  {;controlCurrent_MC50.c: 383:             
      +                                 numberOfErrorCurrent = 0;
 29415  006C7A  0E00               	movlw	0
 29416  006C7C  0100               	movlb	0	; () banked
 29417  006C7E  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 29418                           
 29419                           ;controlCurrent_MC50.c: 384:                  }
 29420  006C80  D002               	goto	l24711
 29421  006C82                     l24709:
 29422                           
 29423                           ;controlCurrent_MC50.c: 386:                  {;controlCurrent_MC50.c: 387:             
      +                                 numberOfErrorCurrent++;
 29424  006C82  0100               	movlb	0	; () banked
 29425  006C84  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 29426  006C86                     l24711:
 29427                           
 29428                           ; BSR set to: 0
 29429                           ;controlCurrent_MC50.c: 389:                  erroranterior = var_sys.ActualCurrent;
 29430  006C86  C12E  F18B         	movff	_var_sys+46,_erroranterior	;volatile
 29431  006C8A  C12F  F18C         	movff	_var_sys+47,_erroranterior+1	;volatile
 29432                           
 29433                           ; BSR set to: 0
 29434                           ;controlCurrent_MC50.c: 398:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>1)
 29435                           
 29436                           ;controlCurrent_MC50.c: 390:              }
 29437  006C8E  0101               	movlb	1	; () banked
 29438  006C90  BFCD               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 29439  006C92  D005               	goto	u29910
 29440  006C94  51CD               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 29441  006C96  E14F               	bnz	l1405
 29442  006C98  05CC               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 29443  006C9A  B0D8               	btfsc	status,0,c
 29444  006C9C  0012               	return	
 29445  006C9E                     u29910:
 29446                           
 29447                           ; BSR set to: 1
 29448  006C9E  0E01               	movlw	1
 29449  006CA0  0100               	movlb	0	; () banked
 29450  006CA2  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 29451  006CA4  0012               	return	
 29452                           
 29453                           ; BSR set to: 0
 29454                           ;controlCurrent_MC50.c: 399:             {;controlCurrent_MC50.c: 400:                 v
      +                          ar_sys.StateMotor = Stopped;
 29455  006CA6  0E00               	movlw	0
 29456  006CA8  0101               	movlb	1	; () banked
 29457  006CAA  6F00               	movwf	_var_sys& (0+255),b	;volatile
 29458                           
 29459                           ;controlCurrent_MC50.c: 401:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 29460  006CAC  0E00               	movlw	0
 29461  006CAE  6FC9               	movwf	(_ts_system+43)& (0+255),b	;volatile
 29462  006CB0  0EC8               	movlw	200
 29463  006CB2  6FC8               	movwf	(_ts_system+42)& (0+255),b	;volatile
 29464                           
 29465                           ;controlCurrent_MC50.c: 402:                 var_sys.CurrentAlarmIsOn=YES;
 29466  006CB4  0E01               	movlw	1
 29467  006CB6  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 29468  006CB8  0012               	return	
 29469  006CBA                     l24723:
 29470                           
 29471                           ;controlCurrent_MC50.c: 409:         {;controlCurrent_MC50.c: 410:             numberOfE
      +                          rrorCurrent=0;
 29472  006CBA  0E00               	movlw	0
 29473  006CBC  0100               	movlb	0	; () banked
 29474  006CBE  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 29475                           
 29476                           ;controlCurrent_MC50.c: 411:             var_sys.CurrentAlarmIsOn=NO;
 29477  006CC0  0E00               	movlw	0
 29478  006CC2  0101               	movlb	1	; () banked
 29479  006CC4  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 29480                           
 29481                           ;controlCurrent_MC50.c: 412:             var_sys.InvertionCurrentOpening=NO;
 29482  006CC6  0E00               	movlw	0
 29483  006CC8  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 29484                           
 29485                           ;controlCurrent_MC50.c: 413:             var_sys.InvertionCurrentClosing=NO;
 29486  006CCA  0E00               	movlw	0
 29487  006CCC  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 29488  006CCE  0012               	return	
 29489  006CD0                     l24725:
 29490                           
 29491                           ; BSR set to: 1
 29492                           ;controlCurrent_MC50.c: 419:     {;controlCurrent_MC50.c: 420:         if( ( var_sys.Act
      +                          ualHistCurrent<var_sys.ActualComparatorCurrent ) && (ts_system.TimeChargeCondesador<=0)&
      +                          &ts_system.TimeTransitionDecelaration<=0&&var_sys_NVM.decelarationSensivity!=0)
 29493  006CD0  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 29494  006CD2  5D30               	subwf	(_var_sys+48)& (0+255),w,b	;volatile
 29495  006CD4  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 29496  006CD6  5931               	subwfb	(_var_sys+49)& (0+255),w,b	;volatile
 29497  006CD8  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 29498  006CDA  5932               	subwfb	(_var_sys+50)& (0+255),w,b	;volatile
 29499  006CDC  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 29500  006CDE  5933               	subwfb	(_var_sys+51)& (0+255),w,b	;volatile
 29501  006CE0  B0D8               	btfsc	status,0,c
 29502  006CE2  D7EB               	goto	l24723
 29503                           
 29504                           ; BSR set to: 1
 29505  006CE4  BFB9               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 29506  006CE6  D005               	goto	u29940
 29507  006CE8  51B9               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 29508  006CEA  E1E7               	bnz	l24723
 29509  006CEC  05B8               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 29510  006CEE  B0D8               	btfsc	status,0,c
 29511  006CF0  D7E4               	goto	l24723
 29512  006CF2                     u29940:
 29513                           
 29514                           ; BSR set to: 1
 29515  006CF2  BFD7               	btfsc	(_ts_system+57)& (0+255),7,b	;volatile
 29516  006CF4  D005               	goto	u29950
 29517  006CF6  51D7               	movf	(_ts_system+57)& (0+255),w,b	;volatile
 29518  006CF8  E1E0               	bnz	l24723
 29519  006CFA  05D6               	decf	(_ts_system+56)& (0+255),w,b	;volatile
 29520  006CFC  B0D8               	btfsc	status,0,c
 29521  006CFE  D7DD               	goto	l24723
 29522  006D00                     u29950:
 29523                           
 29524                           ; BSR set to: 1
 29525  006D00  0100               	movlb	0	; () banked
 29526  006D02  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 29527  006D04  B4D8               	btfsc	status,2,c
 29528  006D06  D7D9               	goto	l24723
 29529                           
 29530                           ; BSR set to: 0
 29531                           ;controlCurrent_MC50.c: 421:         {;controlCurrent_MC50.c: 423:             numberOfE
      +                          rrorCurrent++;
 29532  006D08  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 29533                           
 29534                           ; BSR set to: 0
 29535                           ;controlCurrent_MC50.c: 424:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>2)
 29536  006D0A  0101               	movlb	1	; () banked
 29537  006D0C  BFCD               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 29538  006D0E  D005               	goto	u29970
 29539  006D10  51CD               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 29540  006D12  E111               	bnz	l1405
 29541  006D14  05CC               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 29542  006D16  B0D8               	btfsc	status,0,c
 29543  006D18  0012               	return	
 29544  006D1A                     u29970:
 29545                           
 29546                           ; BSR set to: 1
 29547  006D1A  0E02               	movlw	2
 29548  006D1C  0100               	movlb	0	; () banked
 29549  006D1E  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 29550  006D20  0012               	return	
 29551                           
 29552                           ; BSR set to: 0
 29553                           ;controlCurrent_MC50.c: 425:             {;controlCurrent_MC50.c: 426:                 v
      +                          ar_sys.StateMotor = Stopped;
 29554  006D22  0E00               	movlw	0
 29555  006D24  0101               	movlb	1	; () banked
 29556  006D26  6F00               	movwf	_var_sys& (0+255),b	;volatile
 29557                           
 29558                           ;controlCurrent_MC50.c: 427:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 29559  006D28  0E00               	movlw	0
 29560  006D2A  6FC9               	movwf	(_ts_system+43)& (0+255),b	;volatile
 29561  006D2C  0EC8               	movlw	200
 29562  006D2E  6FC8               	movwf	(_ts_system+42)& (0+255),b	;volatile
 29563                           
 29564                           ;controlCurrent_MC50.c: 428:                 var_sys.CurrentAlarmIsOn=YES;
 29565  006D30  0E01               	movlw	1
 29566  006D32  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 29567  006D34  0012               	return	
 29568  006D36                     l1405:
 29569  006D36  0012               	return		;funcret
 29570  006D38                     __end_of_ControlCurrent:
 29571                           	callstack 0
 29572                           
 29573 ;; *************** function _refreshCurrent *****************
 29574 ;; Defined at:
 29575 ;;		line 233 in file "controlCurrent_MC50.c"
 29576 ;; Parameters:    Size  Location     Type
 29577 ;;		None
 29578 ;; Auto vars:     Size  Location     Type
 29579 ;;		None
 29580 ;; Return value:  Size  Location     Type
 29581 ;;                  1    wreg      void 
 29582 ;; Registers used:
 29583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29584 ;; Tracked objects:
 29585 ;;		On entry : 3E/1
 29586 ;;		On exit  : 3F/0
 29587 ;;		Unchanged: 0/0
 29588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29593 ;;Total ram usage:        0 bytes
 29594 ;; Hardware stack levels used: 1
 29595 ;; Hardware stack levels required when called: 5
 29596 ;; This function calls:
 29597 ;;		_saveEnergyADCHist
 29598 ;;		_sumEnergyADC
 29599 ;;		_sumHIST
 29600 ;; This function is called by:
 29601 ;;		_ControlCurrent
 29602 ;; This function uses a non-reentrant model
 29603 ;;
 29604                           
 29605                           	psect	text121
 29606  00954E                     __ptext121:
 29607                           	callstack 0
 29608  00954E                     _refreshCurrent:
 29609                           	callstack 24
 29610                           
 29611                           ;controlCurrent_MC50.c: 238:     if ( (var_sys_NVM.electricBrake==1) && (ts_system.TimeE
      +                          lectricBrake>0) )
 29612                           
 29613                           ;incstack = 0
 29614  00954E  0100               	movlb	0	; () banked
 29615  009550  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 29616  009552  A4D8               	btfss	status,2,c
 29617  009554  D008               	goto	l22999
 29618                           
 29619                           ; BSR set to: 0
 29620  009556  0101               	movlb	1	; () banked
 29621  009558  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 29622  00955A  D005               	goto	l22999
 29623  00955C  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 29624  00955E  E109               	bnz	l1372
 29625  009560  05C6               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 29626  009562  B0D8               	btfsc	status,0,c
 29627  009564  D006               	goto	l1372
 29628  009566                     l22999:
 29629                           
 29630                           ;controlCurrent_MC50.c: 243:     {;controlCurrent_MC50.c: 245:         var_sys.ActualCur
      +                          rent=sumEnergyADC();
 29631  009566  ECCF  F041         	call	_sumEnergyADC	;wreg free
 29632  00956A  C010  F12E         	movff	?_sumEnergyADC,_var_sys+46	;volatile
 29633  00956E  C011  F12F         	movff	?_sumEnergyADC+1,_var_sys+47	;volatile
 29634  009572                     l1372:
 29635                           
 29636                           ; BSR set to: 1
 29637                           ;controlCurrent_MC50.c: 248:     saveEnergyADCHist(var_sys.ActualCurrent);
 29638  009572  C12E  F010         	movff	_var_sys+46,saveEnergyADCHist@valueToSave	;volatile
 29639  009576  C12F  F011         	movff	_var_sys+47,saveEnergyADCHist@valueToSave+1	;volatile
 29640  00957A  ECCC  F04D         	call	_saveEnergyADCHist	;wreg free
 29641                           
 29642                           ;controlCurrent_MC50.c: 250:     var_sys.ActualHistCurrent=sumHIST();
 29643  00957E  EC27  F03C         	call	_sumHIST	;wreg free
 29644  009582  C010  F130         	movff	?_sumHIST,_var_sys+48	;volatile
 29645  009586  C011  F131         	movff	?_sumHIST+1,_var_sys+49	;volatile
 29646  00958A  C012  F132         	movff	?_sumHIST+2,_var_sys+50	;volatile
 29647  00958E  C013  F133         	movff	?_sumHIST+3,_var_sys+51	;volatile
 29648                           
 29649                           ; BSR set to: 0
 29650  009592  0012               	return		;funcret
 29651  009594                     __end_of_refreshCurrent:
 29652                           	callstack 0
 29653                           
 29654 ;; *************** function _sumHIST *****************
 29655 ;; Defined at:
 29656 ;;		line 199 in file "controlCurrent_MC50.c"
 29657 ;; Parameters:    Size  Location     Type
 29658 ;;		None
 29659 ;; Auto vars:     Size  Location     Type
 29660 ;;  sumH            4   27[COMRAM] unsigned long 
 29661 ;;  min             2   25[COMRAM] unsigned int 
 29662 ;;  max             2   23[COMRAM] unsigned int 
 29663 ;;  i               1   31[COMRAM] unsigned char 
 29664 ;; Return value:  Size  Location     Type
 29665 ;;                  4   15[COMRAM] unsigned long 
 29666 ;; Registers used:
 29667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29668 ;; Tracked objects:
 29669 ;;		On entry : 3F/0
 29670 ;;		On exit  : 3F/0
 29671 ;;		Unchanged: 3F/0
 29672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29673 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29674 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29675 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29676 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29677 ;;Total ram usage:       17 bytes
 29678 ;; Hardware stack levels used: 1
 29679 ;; Hardware stack levels required when called: 4
 29680 ;; This function calls:
 29681 ;;		Nothing
 29682 ;; This function is called by:
 29683 ;;		_refreshCurrent
 29684 ;; This function uses a non-reentrant model
 29685 ;;
 29686                           
 29687                           	psect	text122
 29688  00784E                     __ptext122:
 29689                           	callstack 0
 29690  00784E                     _sumHIST:
 29691                           	callstack 24
 29692                           
 29693                           ; BSR set to: 0
 29694                           ;controlCurrent_MC50.c: 201:     unsigned char i;;controlCurrent_MC50.c: 202:     unsign
      +                          ed long sumH = 0;
 29695                           
 29696                           ; BSR set to: 0
 29697                           ;incstack = 0
 29698  00784E  0E00               	movlw	0
 29699  007850  6E1C               	movwf	sumHIST@sumH^0,c
 29700  007852  0E00               	movlw	0
 29701  007854  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 29702  007856  0E00               	movlw	0
 29703  007858  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 29704  00785A  0E00               	movlw	0
 29705  00785C  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 29706                           
 29707                           ;controlCurrent_MC50.c: 203:     unsigned int max=0;
 29708  00785E  0E00               	movlw	0
 29709  007860  6E19               	movwf	(sumHIST@max+1)^0,c
 29710  007862  0E00               	movlw	0
 29711  007864  6E18               	movwf	sumHIST@max^0,c
 29712                           
 29713                           ; BSR set to: 0
 29714                           ;controlCurrent_MC50.c: 204:     unsigned int min=0xFFFF;
 29715  007866  681A               	setf	sumHIST@min^0,c
 29716  007868  681B               	setf	(sumHIST@min+1)^0,c
 29717                           
 29718                           ;controlCurrent_MC50.c: 207:     for( i = 0; i<(10); i++)
 29719  00786A  0E00               	movlw	0
 29720  00786C  6E20               	movwf	sumHIST@i^0,c
 29721  00786E                     l21353:
 29722                           
 29723                           ; BSR set to: 0
 29724                           ;controlCurrent_MC50.c: 208:     {;controlCurrent_MC50.c: 209:         sumH=sumH+SumEner
      +                          gyADCHist_array[i];
 29725  00786E  5020               	movf	sumHIST@i^0,w,c
 29726  007870  0D02               	mullw	2
 29727  007872  0E60               	movlw	low _SumEnergyADCHist_array
 29728  007874  24F3               	addwf	243,w,c
 29729  007876  6ED9               	movwf	fsr2l,c
 29730  007878  0E02               	movlw	high _SumEnergyADCHist_array
 29731  00787A  20F4               	addwfc	prodh,w,c
 29732  00787C  6EDA               	movwf	fsr2h,c
 29733  00787E  CFDE F014          	movff	postinc2,??_sumHIST
 29734  007882  CFDD F015          	movff	postdec2,??_sumHIST+1
 29735  007886  5014               	movf	??_sumHIST^0,w,c
 29736  007888  241C               	addwf	sumHIST@sumH^0,w,c
 29737  00788A  6E1C               	movwf	sumHIST@sumH^0,c
 29738  00788C  5015               	movf	(??_sumHIST+1)^0,w,c
 29739  00788E  201D               	addwfc	(sumHIST@sumH+1)^0,w,c
 29740  007890  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 29741  007892  0E00               	movlw	0
 29742  007894  201E               	addwfc	(sumHIST@sumH+2)^0,w,c
 29743  007896  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 29744  007898  0E00               	movlw	0
 29745  00789A  201F               	addwfc	(sumHIST@sumH+3)^0,w,c
 29746  00789C  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 29747                           
 29748                           ;controlCurrent_MC50.c: 212:         if(SumEnergyADCHist_array[i]>max)
 29749  00789E  5020               	movf	sumHIST@i^0,w,c
 29750  0078A0  0D02               	mullw	2
 29751  0078A2  0E60               	movlw	low _SumEnergyADCHist_array
 29752  0078A4  24F3               	addwf	243,w,c
 29753  0078A6  6ED9               	movwf	fsr2l,c
 29754  0078A8  0E02               	movlw	high _SumEnergyADCHist_array
 29755  0078AA  20F4               	addwfc	prodh,w,c
 29756  0078AC  6EDA               	movwf	fsr2h,c
 29757  0078AE  50DE               	movf	postinc2,w,c
 29758  0078B0  5C18               	subwf	sumHIST@max^0,w,c
 29759  0078B2  50DE               	movf	postinc2,w,c
 29760  0078B4  5819               	subwfb	(sumHIST@max+1)^0,w,c
 29761  0078B6  B0D8               	btfsc	status,0,c
 29762  0078B8  D00C               	goto	l1366
 29763                           
 29764                           ; BSR set to: 0
 29765                           ;controlCurrent_MC50.c: 213:         {;controlCurrent_MC50.c: 214:             max=SumEn
      +                          ergyADCHist_array[i];
 29766  0078BA  5020               	movf	sumHIST@i^0,w,c
 29767  0078BC  0D02               	mullw	2
 29768  0078BE  0E60               	movlw	low _SumEnergyADCHist_array
 29769  0078C0  24F3               	addwf	243,w,c
 29770  0078C2  6ED9               	movwf	fsr2l,c
 29771  0078C4  0E02               	movlw	high _SumEnergyADCHist_array
 29772  0078C6  20F4               	addwfc	prodh,w,c
 29773  0078C8  6EDA               	movwf	fsr2h,c
 29774  0078CA  CFDE F018          	movff	postinc2,sumHIST@max
 29775  0078CE  CFDD F019          	movff	postdec2,sumHIST@max+1
 29776  0078D2                     l1366:
 29777                           
 29778                           ; BSR set to: 0
 29779                           ;controlCurrent_MC50.c: 218:         if(SumEnergyADCHist_array[i]<min)
 29780  0078D2  5020               	movf	sumHIST@i^0,w,c
 29781  0078D4  0D02               	mullw	2
 29782  0078D6  0E60               	movlw	low _SumEnergyADCHist_array
 29783  0078D8  24F3               	addwf	243,w,c
 29784  0078DA  6ED9               	movwf	fsr2l,c
 29785  0078DC  0E02               	movlw	high _SumEnergyADCHist_array
 29786  0078DE  20F4               	addwfc	prodh,w,c
 29787  0078E0  6EDA               	movwf	fsr2h,c
 29788  0078E2  501A               	movf	sumHIST@min^0,w,c
 29789  0078E4  5CDE               	subwf	postinc2,w,c
 29790  0078E6  501B               	movf	(sumHIST@min+1)^0,w,c
 29791  0078E8  58DE               	subwfb	postinc2,w,c
 29792  0078EA  B0D8               	btfsc	status,0,c
 29793  0078EC  D00C               	goto	l21359
 29794                           
 29795                           ; BSR set to: 0
 29796                           ;controlCurrent_MC50.c: 219:         {;controlCurrent_MC50.c: 220:             min=SumEn
      +                          ergyADCHist_array[i];
 29797  0078EE  5020               	movf	sumHIST@i^0,w,c
 29798  0078F0  0D02               	mullw	2
 29799  0078F2  0E60               	movlw	low _SumEnergyADCHist_array
 29800  0078F4  24F3               	addwf	243,w,c
 29801  0078F6  6ED9               	movwf	fsr2l,c
 29802  0078F8  0E02               	movlw	high _SumEnergyADCHist_array
 29803  0078FA  20F4               	addwfc	prodh,w,c
 29804  0078FC  6EDA               	movwf	fsr2h,c
 29805  0078FE  CFDE F01A          	movff	postinc2,sumHIST@min
 29806  007902  CFDD F01B          	movff	postdec2,sumHIST@min+1
 29807  007906                     l21359:
 29808                           
 29809                           ; BSR set to: 0
 29810                           ;controlCurrent_MC50.c: 222:     }
 29811  007906  2A20               	incf	sumHIST@i^0,f,c
 29812                           
 29813                           ; BSR set to: 0
 29814  007908  0E09               	movlw	9
 29815  00790A  6420               	cpfsgt	sumHIST@i^0,c
 29816  00790C  D7B0               	goto	l21353
 29817                           
 29818                           ; BSR set to: 0
 29819                           ;controlCurrent_MC50.c: 224:     sumH = sumH - ( max+min );
 29820  00790E  501A               	movf	sumHIST@min^0,w,c
 29821  007910  2418               	addwf	sumHIST@max^0,w,c
 29822  007912  6E14               	movwf	??_sumHIST^0,c
 29823  007914  501B               	movf	(sumHIST@min+1)^0,w,c
 29824  007916  2019               	addwfc	(sumHIST@max+1)^0,w,c
 29825  007918  6E15               	movwf	(??_sumHIST+1)^0,c
 29826  00791A  6A16               	clrf	(??_sumHIST+2)^0,c
 29827  00791C  6A17               	clrf	(??_sumHIST+3)^0,c
 29828  00791E  5014               	movf	??_sumHIST^0,w,c
 29829  007920  5C1C               	subwf	sumHIST@sumH^0,w,c
 29830  007922  6E1C               	movwf	sumHIST@sumH^0,c
 29831  007924  5015               	movf	(??_sumHIST+1)^0,w,c
 29832  007926  581D               	subwfb	(sumHIST@sumH+1)^0,w,c
 29833  007928  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 29834  00792A  5016               	movf	(??_sumHIST+2)^0,w,c
 29835  00792C  581E               	subwfb	(sumHIST@sumH+2)^0,w,c
 29836  00792E  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 29837  007930  5017               	movf	(??_sumHIST+3)^0,w,c
 29838  007932  581F               	subwfb	(sumHIST@sumH+3)^0,w,c
 29839  007934  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 29840                           
 29841                           ; BSR set to: 0
 29842                           ;controlCurrent_MC50.c: 226:     return sumH;
 29843  007936  C01C  F010         	movff	sumHIST@sumH,?_sumHIST
 29844  00793A  C01D  F011         	movff	sumHIST@sumH+1,?_sumHIST+1
 29845  00793E  C01E  F012         	movff	sumHIST@sumH+2,?_sumHIST+2
 29846  007942  C01F  F013         	movff	sumHIST@sumH+3,?_sumHIST+3
 29847                           
 29848                           ; BSR set to: 0
 29849  007946  0012               	return		;funcret
 29850  007948                     __end_of_sumHIST:
 29851                           	callstack 0
 29852                           
 29853 ;; *************** function _sumEnergyADC *****************
 29854 ;; Defined at:
 29855 ;;		line 59 in file "controlCurrent_MC50.c"
 29856 ;; Parameters:    Size  Location     Type
 29857 ;;		None
 29858 ;; Auto vars:     Size  Location     Type
 29859 ;;  auxValue        2   21[COMRAM] unsigned int 
 29860 ;;  sumE            2   19[COMRAM] unsigned int 
 29861 ;;  i               1   23[COMRAM] unsigned char 
 29862 ;; Return value:  Size  Location     Type
 29863 ;;                  2   15[COMRAM] unsigned int 
 29864 ;; Registers used:
 29865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29866 ;; Tracked objects:
 29867 ;;		On entry : 3E/0
 29868 ;;		On exit  : 3F/1
 29869 ;;		Unchanged: 0/0
 29870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29871 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29872 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29873 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29874 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29875 ;;Total ram usage:        9 bytes
 29876 ;; Hardware stack levels used: 1
 29877 ;; Hardware stack levels required when called: 4
 29878 ;; This function calls:
 29879 ;;		Nothing
 29880 ;; This function is called by:
 29881 ;;		_refreshCurrent
 29882 ;; This function uses a non-reentrant model
 29883 ;;
 29884                           
 29885                           	psect	text123
 29886  00839E                     __ptext123:
 29887                           	callstack 0
 29888  00839E                     _sumEnergyADC:
 29889                           	callstack 24
 29890                           
 29891                           ;controlCurrent_MC50.c: 61:     unsigned char i;;controlCurrent_MC50.c: 63:     unsigned
      +                           int sumE = 0;
 29892                           
 29893                           ; BSR set to: 0
 29894                           ;incstack = 0
 29895  00839E  0E00               	movlw	0
 29896  0083A0  6E15               	movwf	(sumEnergyADC@sumE+1)^0,c
 29897  0083A2  0E00               	movlw	0
 29898  0083A4  6E14               	movwf	sumEnergyADC@sumE^0,c
 29899                           
 29900                           ;controlCurrent_MC50.c: 72:     for ( i=0 ; i<(30) ; i++ )
 29901  0083A6  0E00               	movlw	0
 29902  0083A8  6E18               	movwf	sumEnergyADC@i^0,c
 29903  0083AA                     l21325:
 29904                           
 29905                           ;controlCurrent_MC50.c: 73:     {;controlCurrent_MC50.c: 83:         if ( ADC_array[i] >
      +                           var_sys.ADCZeroOffset )
 29906  0083AA  5018               	movf	sumEnergyADC@i^0,w,c
 29907  0083AC  0D02               	mullw	2
 29908  0083AE  0E00               	movlw	low _ADC_array
 29909  0083B0  24F3               	addwf	243,w,c
 29910  0083B2  6ED9               	movwf	fsr2l,c
 29911  0083B4  0E02               	movlw	high _ADC_array
 29912  0083B6  20F4               	addwfc	prodh,w,c
 29913  0083B8  6EDA               	movwf	fsr2h,c
 29914  0083BA  50DE               	movf	postinc2,w,c
 29915  0083BC  0101               	movlb	1	; () banked
 29916  0083BE  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 29917  0083C0  50DE               	movf	postinc2,w,c
 29918  0083C2  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 29919  0083C4  B0D8               	btfsc	status,0,c
 29920  0083C6  D012               	goto	l21329
 29921                           
 29922                           ; BSR set to: 1
 29923                           ;controlCurrent_MC50.c: 84:         {;controlCurrent_MC50.c: 85:             auxValue = 
      +                          ( ADC_array[i] - var_sys.ADCZeroOffset );
 29924  0083C8  5018               	movf	sumEnergyADC@i^0,w,c
 29925  0083CA  0D02               	mullw	2
 29926  0083CC  0E00               	movlw	low _ADC_array
 29927  0083CE  24F3               	addwf	243,w,c
 29928  0083D0  6ED9               	movwf	fsr2l,c
 29929  0083D2  0E02               	movlw	high _ADC_array
 29930  0083D4  20F4               	addwfc	prodh,w,c
 29931  0083D6  6EDA               	movwf	fsr2h,c
 29932  0083D8  CFDE F012          	movff	postinc2,??_sumEnergyADC
 29933  0083DC  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 29934  0083E0  514B               	movf	(_var_sys+75)& (0+255),w,b	;volatile
 29935  0083E2  5C12               	subwf	??_sumEnergyADC^0,w,c
 29936  0083E4  6E16               	movwf	sumEnergyADC@auxValue^0,c
 29937  0083E6  514C               	movf	(_var_sys+76)& (0+255),w,b	;volatile
 29938  0083E8  5813               	subwfb	(??_sumEnergyADC+1)^0,w,c
 29939  0083EA  D011               	goto	L105
 29940  0083EC                     l21329:
 29941                           
 29942                           ; BSR set to: 1
 29943                           ;controlCurrent_MC50.c: 88:         {;controlCurrent_MC50.c: 89:            auxValue = (
      +                           var_sys.ADCZeroOffset - ADC_array[i] );
 29944  0083EC  5018               	movf	sumEnergyADC@i^0,w,c
 29945  0083EE  0D02               	mullw	2
 29946  0083F0  0E00               	movlw	low _ADC_array
 29947  0083F2  24F3               	addwf	243,w,c
 29948  0083F4  6ED9               	movwf	fsr2l,c
 29949  0083F6  0E02               	movlw	high _ADC_array
 29950  0083F8  20F4               	addwfc	prodh,w,c
 29951  0083FA  6EDA               	movwf	fsr2h,c
 29952  0083FC  CFDE F012          	movff	postinc2,??_sumEnergyADC
 29953  008400  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 29954  008404  5012               	movf	??_sumEnergyADC^0,w,c
 29955  008406  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 29956  008408  6E16               	movwf	sumEnergyADC@auxValue^0,c
 29957  00840A  5013               	movf	(??_sumEnergyADC+1)^0,w,c
 29958  00840C  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 29959  00840E                     L105:
 29960  00840E  6E17               	movwf	(sumEnergyADC@auxValue+1)^0,c
 29961                           
 29962                           ; BSR set to: 1
 29963                           ;controlCurrent_MC50.c: 91:         sumE += auxValue;
 29964  008410  5016               	movf	sumEnergyADC@auxValue^0,w,c
 29965  008412  2614               	addwf	sumEnergyADC@sumE^0,f,c
 29966  008414  5017               	movf	(sumEnergyADC@auxValue+1)^0,w,c
 29967  008416  2215               	addwfc	(sumEnergyADC@sumE+1)^0,f,c
 29968                           
 29969                           ; BSR set to: 1
 29970                           ;controlCurrent_MC50.c: 94:     }
 29971  008418  2A18               	incf	sumEnergyADC@i^0,f,c
 29972                           
 29973                           ; BSR set to: 1
 29974  00841A  0E1D               	movlw	29
 29975  00841C  6418               	cpfsgt	sumEnergyADC@i^0,c
 29976  00841E  D7C5               	goto	l21325
 29977                           
 29978                           ; BSR set to: 1
 29979                           ;controlCurrent_MC50.c: 96:     return sumE;
 29980  008420  C014  F010         	movff	sumEnergyADC@sumE,?_sumEnergyADC
 29981  008424  C015  F011         	movff	sumEnergyADC@sumE+1,?_sumEnergyADC+1
 29982                           
 29983                           ; BSR set to: 1
 29984  008428  0012               	return		;funcret
 29985  00842A                     __end_of_sumEnergyADC:
 29986                           	callstack 0
 29987                           
 29988 ;; *************** function _saveEnergyADCHist *****************
 29989 ;; Defined at:
 29990 ;;		line 182 in file "controlCurrent_MC50.c"
 29991 ;; Parameters:    Size  Location     Type
 29992 ;;  valueToSave     2   15[COMRAM] unsigned int 
 29993 ;; Auto vars:     Size  Location     Type
 29994 ;;		None
 29995 ;; Return value:  Size  Location     Type
 29996 ;;                  1    wreg      void 
 29997 ;; Registers used:
 29998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29999 ;; Tracked objects:
 30000 ;;		On entry : 3F/1
 30001 ;;		On exit  : 3F/0
 30002 ;;		Unchanged: 0/0
 30003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30004 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30007 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30008 ;;Total ram usage:        2 bytes
 30009 ;; Hardware stack levels used: 1
 30010 ;; Hardware stack levels required when called: 4
 30011 ;; This function calls:
 30012 ;;		Nothing
 30013 ;; This function is called by:
 30014 ;;		_refreshCurrent
 30015 ;; This function uses a non-reentrant model
 30016 ;;
 30017                           
 30018                           	psect	text124
 30019  009B98                     __ptext124:
 30020                           	callstack 0
 30021  009B98                     _saveEnergyADCHist:
 30022                           	callstack 24
 30023                           
 30024                           ; BSR set to: 1
 30025                           ;controlCurrent_MC50.c: 182: void saveEnergyADCHist(unsigned int valueToSave);controlCur
      +                          rent_MC50.c: 183: {;controlCurrent_MC50.c: 184:     if(idxSaveEnergyADCHist>=10)
 30026                           
 30027                           ; BSR set to: 1
 30028                           ;incstack = 0
 30029  009B98  0E09               	movlw	9
 30030  009B9A  0100               	movlb	0	; () banked
 30031  009B9C  6590               	cpfsgt	_idxSaveEnergyADCHist& (0+255),b	;volatile
 30032  009B9E  D002               	goto	l21341
 30033                           
 30034                           ; BSR set to: 0
 30035                           ;controlCurrent_MC50.c: 185:     {;controlCurrent_MC50.c: 186:         idxSaveEnergyADCH
      +                          ist=0;
 30036  009BA0  0E00               	movlw	0
 30037  009BA2  6F90               	movwf	_idxSaveEnergyADCHist& (0+255),b	;volatile
 30038  009BA4                     l21341:
 30039                           
 30040                           ; BSR set to: 0
 30041                           ;controlCurrent_MC50.c: 189:     SumEnergyADCHist_array[idxSaveEnergyADCHist]=valueToSav
      +                          e;
 30042  009BA4  5190               	movf	_idxSaveEnergyADCHist& (0+255),w,b	;volatile
 30043  009BA6  0D02               	mullw	2
 30044  009BA8  0E60               	movlw	low _SumEnergyADCHist_array
 30045  009BAA  24F3               	addwf	243,w,c
 30046  009BAC  6ED9               	movwf	fsr2l,c
 30047  009BAE  0E02               	movlw	high _SumEnergyADCHist_array
 30048  009BB0  20F4               	addwfc	prodh,w,c
 30049  009BB2  6EDA               	movwf	fsr2h,c
 30050  009BB4  C010  FFDE         	movff	saveEnergyADCHist@valueToSave,postinc2
 30051  009BB8  C011  FFDD         	movff	saveEnergyADCHist@valueToSave+1,postdec2
 30052                           
 30053                           ; BSR set to: 0
 30054                           ;controlCurrent_MC50.c: 190:     idxSaveEnergyADCHist++;
 30055  009BBC  2B90               	incf	_idxSaveEnergyADCHist& (0+255),f,b	;volatile
 30056                           
 30057                           ; BSR set to: 0
 30058  009BBE  0012               	return		;funcret
 30059  009BC0                     __end_of_saveEnergyADCHist:
 30060                           	callstack 0
 30061                           
 30062 ;; *************** function _refreshADCZeroOffset *****************
 30063 ;; Defined at:
 30064 ;;		line 103 in file "controlCurrent_MC50.c"
 30065 ;; Parameters:    Size  Location     Type
 30066 ;;		None
 30067 ;; Auto vars:     Size  Location     Type
 30068 ;;  media           2   23[COMRAM] unsigned int 
 30069 ;;  i               1   22[COMRAM] unsigned char 
 30070 ;; Return value:  Size  Location     Type
 30071 ;;                  1    wreg      void 
 30072 ;; Registers used:
 30073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30074 ;; Tracked objects:
 30075 ;;		On entry : 3F/0
 30076 ;;		On exit  : 3C/0
 30077 ;;		Unchanged: 0/0
 30078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30080 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30082 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30083 ;;Total ram usage:        3 bytes
 30084 ;; Hardware stack levels used: 1
 30085 ;; Hardware stack levels required when called: 5
 30086 ;; This function calls:
 30087 ;;		___lwdiv
 30088 ;; This function is called by:
 30089 ;;		_ControlCurrent
 30090 ;; This function uses a non-reentrant model
 30091 ;;
 30092                           
 30093                           	psect	text125
 30094  007654                     __ptext125:
 30095                           	callstack 0
 30096  007654                     _refreshADCZeroOffset:
 30097                           	callstack 24
 30098                           
 30099                           ; BSR set to: 0
 30100                           ;controlCurrent_MC50.c: 105:     unsigned char i;;controlCurrent_MC50.c: 106:     unsign
      +                          ed int media = 0;
 30101                           
 30102                           ; BSR set to: 0
 30103                           ;incstack = 0
 30104  007654  0E00               	movlw	0
 30105  007656  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 30106  007658  0E00               	movlw	0
 30107  00765A  6E18               	movwf	refreshADCZeroOffset@media^0,c
 30108                           
 30109                           ;controlCurrent_MC50.c: 109:     if ( var_sys.StateMotor == Stopped )
 30110  00765C  0101               	movlb	1	; () banked
 30111  00765E  5100               	movf	_var_sys& (0+255),w,b	;volatile
 30112  007660  A4D8               	btfss	status,2,c
 30113  007662  0012               	return	
 30114                           
 30115                           ; BSR set to: 1
 30116                           ;controlCurrent_MC50.c: 110:     {;controlCurrent_MC50.c: 111:         if ( ts_system.Ti
      +                          meStopADCZeroOffsetCalc <= 0 )
 30117  007664  BFDD               	btfsc	(_ts_system+63)& (0+255),7,b	;volatile
 30118  007666  D005               	goto	u26370
 30119  007668  51DD               	movf	(_ts_system+63)& (0+255),w,b	;volatile
 30120  00766A  E172               	bnz	l1357
 30121  00766C  05DC               	decf	(_ts_system+62)& (0+255),w,b	;volatile
 30122  00766E  B0D8               	btfsc	status,0,c
 30123  007670  0012               	return	
 30124  007672                     u26370:
 30125                           
 30126                           ; BSR set to: 1
 30127                           ;controlCurrent_MC50.c: 112:         {;controlCurrent_MC50.c: 113:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (1000/50);
 30128  007672  0E00               	movlw	0
 30129  007674  6FDD               	movwf	(_ts_system+63)& (0+255),b	;volatile
 30130  007676  0E14               	movlw	20
 30131  007678  6FDC               	movwf	(_ts_system+62)& (0+255),b	;volatile
 30132                           
 30133                           ;controlCurrent_MC50.c: 121:             for ( i=0 ; i<(30) ; i++ )
 30134  00767A  0E00               	movlw	0
 30135  00767C  6E17               	movwf	refreshADCZeroOffset@i^0,c
 30136  00767E                     l22951:
 30137                           
 30138                           ;controlCurrent_MC50.c: 122:             {;controlCurrent_MC50.c: 126:                 m
      +                          edia += ADC_array[i];
 30139  00767E  5017               	movf	refreshADCZeroOffset@i^0,w,c
 30140  007680  0D02               	mullw	2
 30141  007682  0E00               	movlw	low _ADC_array
 30142  007684  24F3               	addwf	243,w,c
 30143  007686  6ED9               	movwf	fsr2l,c
 30144  007688  0E02               	movlw	high _ADC_array
 30145  00768A  20F4               	addwfc	prodh,w,c
 30146  00768C  6EDA               	movwf	fsr2h,c
 30147  00768E  50DE               	movf	postinc2,w,c
 30148  007690  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 30149  007692  50DD               	movf	postdec2,w,c
 30150  007694  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 30151                           
 30152                           ;controlCurrent_MC50.c: 128:             }
 30153  007696  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 30154  007698  0E1D               	movlw	29
 30155  00769A  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 30156  00769C  D7F0               	goto	l22951
 30157                           
 30158                           ;controlCurrent_MC50.c: 130:             media = media/30;
 30159  00769E  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 30160  0076A2  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 30161  0076A6  0E00               	movlw	0
 30162  0076A8  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 30163  0076AA  0E1E               	movlw	30
 30164  0076AC  6E12               	movwf	___lwdiv@divisor^0,c
 30165  0076AE  EC97  F049         	call	___lwdiv	;wreg free
 30166  0076B2  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 30167  0076B6  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 30168                           
 30169                           ;controlCurrent_MC50.c: 131:             if ( (media>(510 -20)) && (media<(510 +20)) )
 30170  0076BA  0EEB               	movlw	235
 30171  0076BC  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 30172  0076BE  0E01               	movlw	1
 30173  0076C0  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 30174  0076C2  A0D8               	btfss	status,0,c
 30175  0076C4  D006               	goto	l22965
 30176  0076C6  0E12               	movlw	18
 30177  0076C8  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 30178  0076CA  0E02               	movlw	2
 30179  0076CC  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 30180  0076CE  A0D8               	btfss	status,0,c
 30181  0076D0  D004               	goto	l22967
 30182  0076D2                     l22965:
 30183                           
 30184                           ;controlCurrent_MC50.c: 136:             {;controlCurrent_MC50.c: 138:                 m
      +                          edia = 510;
 30185  0076D2  0E01               	movlw	1
 30186  0076D4  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 30187  0076D6  0EFE               	movlw	254
 30188  0076D8  6E18               	movwf	refreshADCZeroOffset@media^0,c
 30189  0076DA                     l22967:
 30190                           
 30191                           ;controlCurrent_MC50.c: 142:             if ( idxAdcZeroAquisition >= 30 )
 30192  0076DA  0E1D               	movlw	29
 30193  0076DC  0100               	movlb	0	; () banked
 30194  0076DE  658F               	cpfsgt	_idxAdcZeroAquisition& (0+255),b	;volatile
 30195  0076E0  D002               	goto	l22971
 30196                           
 30197                           ; BSR set to: 0
 30198                           ;controlCurrent_MC50.c: 143:             {;controlCurrent_MC50.c: 144:                 i
      +                          dxAdcZeroAquisition = 0;
 30199  0076E2  0E00               	movlw	0
 30200  0076E4  6F8F               	movwf	_idxAdcZeroAquisition& (0+255),b	;volatile
 30201  0076E6                     l22971:
 30202                           
 30203                           ; BSR set to: 0
 30204                           ;controlCurrent_MC50.c: 146:             ADC_zero_array[idxAdcZeroAquisition] = media;
 30205  0076E6  518F               	movf	_idxAdcZeroAquisition& (0+255),w,b	;volatile
 30206  0076E8  0D02               	mullw	2
 30207  0076EA  0E96               	movlw	low _ADC_zero_array
 30208  0076EC  24F3               	addwf	243,w,c
 30209  0076EE  6ED9               	movwf	fsr2l,c
 30210  0076F0  0E03               	movlw	high _ADC_zero_array
 30211  0076F2  20F4               	addwfc	prodh,w,c
 30212  0076F4  6EDA               	movwf	fsr2h,c
 30213  0076F6  C018  FFDE         	movff	refreshADCZeroOffset@media,postinc2
 30214  0076FA  C019  FFDD         	movff	refreshADCZeroOffset@media+1,postdec2
 30215                           
 30216                           ; BSR set to: 0
 30217                           ;controlCurrent_MC50.c: 147:             idxAdcZeroAquisition++;
 30218  0076FE  2B8F               	incf	_idxAdcZeroAquisition& (0+255),f,b	;volatile
 30219                           
 30220                           ; BSR set to: 0
 30221                           ;controlCurrent_MC50.c: 150:             media = 0;
 30222  007700  0E00               	movlw	0
 30223  007702  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 30224  007704  0E00               	movlw	0
 30225  007706  6E18               	movwf	refreshADCZeroOffset@media^0,c
 30226                           
 30227                           ; BSR set to: 0
 30228                           ;controlCurrent_MC50.c: 151:             for ( i=0 ; i<(30) ; i++ )
 30229  007708  0E00               	movlw	0
 30230  00770A  6E17               	movwf	refreshADCZeroOffset@i^0,c
 30231  00770C                     l22983:
 30232                           
 30233                           ; BSR set to: 0
 30234                           ;controlCurrent_MC50.c: 152:             {;controlCurrent_MC50.c: 158:                 m
      +                          edia += ADC_zero_array[i];
 30235  00770C  5017               	movf	refreshADCZeroOffset@i^0,w,c
 30236  00770E  0D02               	mullw	2
 30237  007710  0E96               	movlw	low _ADC_zero_array
 30238  007712  24F3               	addwf	243,w,c
 30239  007714  6ED9               	movwf	fsr2l,c
 30240  007716  0E03               	movlw	high _ADC_zero_array
 30241  007718  20F4               	addwfc	prodh,w,c
 30242  00771A  6EDA               	movwf	fsr2h,c
 30243  00771C  50DE               	movf	postinc2,w,c
 30244  00771E  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 30245  007720  50DD               	movf	postdec2,w,c
 30246  007722  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 30247                           
 30248                           ; BSR set to: 0
 30249                           ;controlCurrent_MC50.c: 159:             }
 30250  007724  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 30251                           
 30252                           ; BSR set to: 0
 30253  007726  0E1D               	movlw	29
 30254  007728  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 30255  00772A  D7F0               	goto	l22983
 30256                           
 30257                           ; BSR set to: 0
 30258                           ;controlCurrent_MC50.c: 160:             media = media/30;
 30259  00772C  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 30260  007730  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 30261  007734  0E00               	movlw	0
 30262  007736  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 30263  007738  0E1E               	movlw	30
 30264  00773A  6E12               	movwf	___lwdiv@divisor^0,c
 30265  00773C  EC97  F049         	call	___lwdiv	;wreg free
 30266  007740  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 30267  007744  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 30268                           
 30269                           ;controlCurrent_MC50.c: 162:             var_sys.ADCZeroOffset = media;
 30270  007748  C018  F14B         	movff	refreshADCZeroOffset@media,_var_sys+75	;volatile
 30271  00774C  C019  F14C         	movff	refreshADCZeroOffset@media+1,_var_sys+76	;volatile
 30272  007750                     l1357:
 30273  007750  0012               	return		;funcret
 30274  007752                     __end_of_refreshADCZeroOffset:
 30275                           	callstack 0
 30276                           
 30277 ;; *************** function ___lwdiv *****************
 30278 ;; Defined at:
 30279 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
 30280 ;; Parameters:    Size  Location     Type
 30281 ;;  dividend        2   15[COMRAM] unsigned int 
 30282 ;;  divisor         2   17[COMRAM] unsigned int 
 30283 ;; Auto vars:     Size  Location     Type
 30284 ;;  quotient        2   20[COMRAM] unsigned int 
 30285 ;;  counter         1   19[COMRAM] unsigned char 
 30286 ;; Return value:  Size  Location     Type
 30287 ;;                  2   15[COMRAM] unsigned int 
 30288 ;; Registers used:
 30289 ;;		wreg, status,2, status,0
 30290 ;; Tracked objects:
 30291 ;;		On entry : 3C/2
 30292 ;;		On exit  : 3C/0
 30293 ;;		Unchanged: 3C/0
 30294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30295 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30296 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30298 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30299 ;;Total ram usage:        7 bytes
 30300 ;; Hardware stack levels used: 1
 30301 ;; Hardware stack levels required when called: 4
 30302 ;; This function calls:
 30303 ;;		Nothing
 30304 ;; This function is called by:
 30305 ;;		_refreshADCZeroOffset
 30306 ;;		_sm_execute_menuConfiguration
 30307 ;; This function uses a non-reentrant model
 30308 ;;
 30309                           
 30310                           	psect	text126
 30311  00932E                     __ptext126:
 30312                           	callstack 0
 30313  00932E                     ___lwdiv:
 30314                           	callstack 24
 30315                           
 30316                           ;incstack = 0
 30317  00932E  0E00               	movlw	0
 30318  009330  6E16               	movwf	(___lwdiv@quotient+1)^0,c
 30319  009332  0E00               	movlw	0
 30320  009334  6E15               	movwf	___lwdiv@quotient^0,c
 30321  009336  5012               	movf	___lwdiv@divisor^0,w,c
 30322  009338  1013               	iorwf	(___lwdiv@divisor+1)^0,w,c
 30323  00933A  B4D8               	btfsc	status,2,c
 30324  00933C  D01C               	goto	l4297
 30325  00933E  0E01               	movlw	1
 30326  009340  6E14               	movwf	___lwdiv@counter^0,c
 30327  009342  D004               	goto	l22795
 30328  009344                     l22793:
 30329  009344  90D8               	bcf	status,0,c
 30330  009346  3612               	rlcf	___lwdiv@divisor^0,f,c
 30331  009348  3613               	rlcf	(___lwdiv@divisor+1)^0,f,c
 30332  00934A  2A14               	incf	___lwdiv@counter^0,f,c
 30333  00934C                     l22795:
 30334  00934C  AE13               	btfss	(___lwdiv@divisor+1)^0,7,c
 30335  00934E  D7FA               	goto	l22793
 30336  009350                     u26300:
 30337  009350  90D8               	bcf	status,0,c
 30338  009352  3615               	rlcf	___lwdiv@quotient^0,f,c
 30339  009354  3616               	rlcf	(___lwdiv@quotient+1)^0,f,c
 30340  009356  5012               	movf	___lwdiv@divisor^0,w,c
 30341  009358  5C10               	subwf	___lwdiv@dividend^0,w,c
 30342  00935A  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 30343  00935C  5811               	subwfb	(___lwdiv@dividend+1)^0,w,c
 30344  00935E  A0D8               	btfss	status,0,c
 30345  009360  D005               	goto	l22805
 30346  009362  5012               	movf	___lwdiv@divisor^0,w,c
 30347  009364  5E10               	subwf	___lwdiv@dividend^0,f,c
 30348  009366  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 30349  009368  5A11               	subwfb	(___lwdiv@dividend+1)^0,f,c
 30350  00936A  8015               	bsf	___lwdiv@quotient^0,0,c
 30351  00936C                     l22805:
 30352  00936C  90D8               	bcf	status,0,c
 30353  00936E  3213               	rrcf	(___lwdiv@divisor+1)^0,f,c
 30354  009370  3212               	rrcf	___lwdiv@divisor^0,f,c
 30355  009372  2E14               	decfsz	___lwdiv@counter^0,f,c
 30356  009374  D7ED               	goto	u26300
 30357  009376                     l4297:
 30358  009376  C015  F010         	movff	___lwdiv@quotient,?___lwdiv
 30359  00937A  C016  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
 30360  00937E  0012               	return		;funcret
 30361  009380                     __end_of___lwdiv:
 30362                           	callstack 0
 30363                           
 30364 ;; *************** function _getCurrentComparator *****************
 30365 ;; Defined at:
 30366 ;;		line 264 in file "controlCurrent_MC50.c"
 30367 ;; Parameters:    Size  Location     Type
 30368 ;;		None
 30369 ;; Auto vars:     Size  Location     Type
 30370 ;;  x               1   33[COMRAM] unsigned char 
 30371 ;;  tempOffset      2   31[COMRAM] unsigned int 
 30372 ;; Return value:  Size  Location     Type
 30373 ;;                  4   21[COMRAM] unsigned long 
 30374 ;; Registers used:
 30375 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 30376 ;; Tracked objects:
 30377 ;;		On entry : 3F/1
 30378 ;;		On exit  : 3F/1
 30379 ;;		Unchanged: 0/0
 30380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30381 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30382 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30383 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30384 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30385 ;;Total ram usage:       13 bytes
 30386 ;; Hardware stack levels used: 1
 30387 ;; Hardware stack levels required when called: 5
 30388 ;; This function calls:
 30389 ;;		___wmul
 30390 ;; This function is called by:
 30391 ;;		_ControlCurrent
 30392 ;; This function uses a non-reentrant model
 30393 ;;
 30394                           
 30395                           	psect	text127
 30396  0063E8                     __ptext127:
 30397                           	callstack 0
 30398  0063E8                     _getCurrentComparator:
 30399                           	callstack 24
 30400                           
 30401                           ; BSR set to: 1
 30402                           ;controlCurrent_MC50.c: 269:     if(ts_system.timeSoftStart>0)
 30403                           
 30404                           ; BSR set to: 1
 30405                           
 30406                           ;incstack = 0
 30407  0063E8  BFB5               	btfsc	(_ts_system+23)& (0+255),7,b	;volatile
 30408  0063EA  D00A               	goto	l23007
 30409  0063EC  51B5               	movf	(_ts_system+23)& (0+255),w,b	;volatile
 30410  0063EE  E103               	bnz	u26450
 30411  0063F0  05B4               	decf	(_ts_system+22)& (0+255),w,b	;volatile
 30412  0063F2  A0D8               	btfss	status,0,c
 30413  0063F4  D005               	goto	l23007
 30414  0063F6                     u26450:
 30415                           
 30416                           ; BSR set to: 1
 30417                           ;controlCurrent_MC50.c: 270:     {;controlCurrent_MC50.c: 271:         ts_system.timewai
      +                          tBeforeSoftStart=(1000/50);
 30418  0063F6  0E00               	movlw	0
 30419  0063F8  6FD9               	movwf	(_ts_system+59)& (0+255),b	;volatile
 30420  0063FA  0E14               	movlw	20
 30421  0063FC  6FD8               	movwf	(_ts_system+58)& (0+255),b	;volatile
 30422  0063FE  D007               	goto	u26460
 30423  006400                     l23007:
 30424                           
 30425                           ; BSR set to: 1
 30426  006400  BFD9               	btfsc	(_ts_system+59)& (0+255),7,b	;volatile
 30427  006402  D009               	goto	l23011
 30428  006404  51D9               	movf	(_ts_system+59)& (0+255),w,b	;volatile
 30429  006406  E103               	bnz	u26460
 30430  006408  05D8               	decf	(_ts_system+58)& (0+255),w,b	;volatile
 30431  00640A  A0D8               	btfss	status,0,c
 30432  00640C  D004               	goto	l23011
 30433  00640E                     u26460:
 30434                           
 30435                           ; BSR set to: 1
 30436                           ;controlCurrent_MC50.c: 276:     {;controlCurrent_MC50.c: 277:         tempOffset=1200;
 30437  00640E  0E04               	movlw	4
 30438  006410  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 30439  006412  0EB0               	movlw	176
 30440  006414  D003               	goto	L106
 30441  006416                     l23011:
 30442                           
 30443                           ; BSR set to: 1
 30444                           ;controlCurrent_MC50.c: 280:     {;controlCurrent_MC50.c: 281:         tempOffset=0;
 30445  006416  0E00               	movlw	0
 30446  006418  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 30447  00641A  0E00               	movlw	0
 30448  00641C                     L106:
 30449  00641C  6E20               	movwf	getCurrentComparator@tempOffset^0,c
 30450                           
 30451                           ; BSR set to: 1
 30452                           ;controlCurrent_MC50.c: 284:     if(powerControl_st.decelarationActive==NO)
 30453  00641E  517B               	movf	_powerControl_st& (0+255),w,b
 30454  006420  A4D8               	btfss	status,2,c
 30455  006422  D05B               	goto	l23027
 30456                           
 30457                           ; BSR set to: 1
 30458                           ;controlCurrent_MC50.c: 285:     {;controlCurrent_MC50.c: 286:         if(var_sys.StateM
      +                          otor==InClose)
 30459  006424  0E03               	movlw	3
 30460  006426  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 30461  006428  A4D8               	btfss	status,2,c
 30462  00642A  D005               	goto	l23017
 30463                           
 30464                           ; BSR set to: 1
 30465                           ;controlCurrent_MC50.c: 287:         {;controlCurrent_MC50.c: 288:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalClose;
 30466  00642C  C0C8  F134         	movff	_var_sys_NVM+48,_var_sys+52	;volatile
 30467  006430  C0C9  F135         	movff	_var_sys_NVM+49,_var_sys+53	;volatile
 30468  006434  D004               	goto	L107
 30469  006436                     l23017:
 30470                           
 30471                           ; BSR set to: 1
 30472                           ;controlCurrent_MC50.c: 291:         {;controlCurrent_MC50.c: 292:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalOpen;
 30473  006436  C0CA  F134         	movff	_var_sys_NVM+50,_var_sys+52	;volatile
 30474  00643A  C0CB  F135         	movff	_var_sys_NVM+51,_var_sys+53	;volatile
 30475  00643E                     L107:
 30476  00643E  6B36               	clrf	(_var_sys+54)& (0+255),b	;volatile
 30477  006440  6B37               	clrf	(_var_sys+55)& (0+255),b	;volatile
 30478                           
 30479                           ; BSR set to: 1
 30480                           ;controlCurrent_MC50.c: 295:         if(var_sys.ActualComparatorCurrent<=100||(var_sys.A
      +                          ctualComparatorCurrent>(510*30)))
 30481  006442  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 30482  006444  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 30483  006446  1135               	iorwf	(_var_sys+53)& (0+255),w,b	;volatile
 30484  006448  E104               	bnz	u26490
 30485  00644A  0E65               	movlw	101
 30486  00644C  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 30487  00644E  A0D8               	btfss	status,0,c
 30488  006450  D009               	goto	u26500
 30489  006452                     u26490:
 30490                           
 30491                           ; BSR set to: 1
 30492  006452  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 30493  006454  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 30494  006456  E106               	bnz	u26500
 30495  006458  0EC5               	movlw	197
 30496  00645A  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 30497  00645C  0E3B               	movlw	59
 30498  00645E  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 30499  006460  A0D8               	btfss	status,0,c
 30500  006462  D004               	goto	l1383
 30501  006464                     u26500:
 30502                           
 30503                           ; BSR set to: 1
 30504                           ;controlCurrent_MC50.c: 296:         {;controlCurrent_MC50.c: 297:              var_sys.
      +                          ActualComparatorCurrent=(510*30);
 30505  006464  0EC4               	movlw	196
 30506  006466  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 30507  006468  0E3B               	movlw	59
 30508  00646A  D058               	goto	L109
 30509  00646C                     l1383:
 30510                           
 30511                           ; BSR set to: 1
 30512                           ;controlCurrent_MC50.c: 300:         {;controlCurrent_MC50.c: 301:             unsigned 
      +                          char x=var_sys_NVM.motorSensitivity;
 30513  00646C  C09B  F022         	movff	_var_sys_NVM+3,getCurrentComparator@x	;volatile
 30514                           
 30515                           ; BSR set to: 1
 30516                           ;controlCurrent_MC50.c: 307:            var_sys.ActualComparatorCurrent=var_sys.ActualCo
      +                          mparatorCurrent+((10*(x*x))+(-200*x)+1300);
 30517  006470  5022               	movf	getCurrentComparator@x^0,w,c
 30518  006472  0222               	mulwf	getCurrentComparator@x^0,c
 30519  006474  CFF3 F010          	movff	prodl,___wmul@multiplier
 30520  006478  CFF4 F011          	movff	prodh,___wmul@multiplier+1
 30521  00647C  0E00               	movlw	0
 30522  00647E  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 30523  006480  0E0A               	movlw	10
 30524  006482  6E12               	movwf	___wmul@multiplicand^0,c
 30525  006484  EC06  F04E         	call	___wmul	;wreg free
 30526  006488  C010  F01A         	movff	?___wmul,??_getCurrentComparator
 30527  00648C  C011  F01B         	movff	?___wmul+1,??_getCurrentComparator+1
 30528  006490  C022  F010         	movff	getCurrentComparator@x,___wmul@multiplier
 30529  006494  6A11               	clrf	(___wmul@multiplier+1)^0,c
 30530  006496  0EFF               	movlw	255
 30531  006498  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 30532  00649A  0E38               	movlw	56
 30533  00649C  6E12               	movwf	___wmul@multiplicand^0,c
 30534  00649E  EC06  F04E         	call	___wmul	;wreg free
 30535  0064A2  5010               	movf	?___wmul^0,w,c
 30536  0064A4  261A               	addwf	??_getCurrentComparator^0,f,c
 30537  0064A6  5011               	movf	(?___wmul+1)^0,w,c
 30538  0064A8  221B               	addwfc	(??_getCurrentComparator+1)^0,f,c
 30539  0064AA  0E14               	movlw	20
 30540  0064AC  241A               	addwf	??_getCurrentComparator^0,w,c
 30541  0064AE  6E1C               	movwf	(??_getCurrentComparator+2)^0,c
 30542  0064B0  0E05               	movlw	5
 30543  0064B2  201B               	addwfc	(??_getCurrentComparator+1)^0,w,c
 30544  0064B4  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 30545  0064B6  6A1E               	clrf	(??_getCurrentComparator+4)^0,c
 30546  0064B8  BE1D               	btfsc	(??_getCurrentComparator+3)^0,7,c
 30547  0064BA  061E               	decf	(??_getCurrentComparator+4)^0,f,c
 30548  0064BC  501E               	movf	(??_getCurrentComparator+4)^0,w,c
 30549  0064BE  6E1F               	movwf	(??_getCurrentComparator+5)^0,c
 30550  0064C0  0101               	movlb	1	; () banked
 30551  0064C2  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 30552  0064C4  241C               	addwf	(??_getCurrentComparator+2)^0,w,c
 30553  0064C6  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 30554  0064C8  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 30555  0064CA  201D               	addwfc	(??_getCurrentComparator+3)^0,w,c
 30556  0064CC  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 30557  0064CE  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 30558  0064D0  201E               	addwfc	(??_getCurrentComparator+4)^0,w,c
 30559  0064D2  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 30560  0064D4  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 30561  0064D6  201F               	addwfc	(??_getCurrentComparator+5)^0,w,c
 30562  0064D8  D046               	goto	L108
 30563  0064DA                     l23027:
 30564                           
 30565                           ; BSR set to: 1
 30566                           ;controlCurrent_MC50.c: 311:     {;controlCurrent_MC50.c: 312:         if(var_sys.StateM
      +                          otor==InClose)
 30567  0064DA  0E03               	movlw	3
 30568  0064DC  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 30569  0064DE  A4D8               	btfss	status,2,c
 30570  0064E0  D009               	goto	l1388
 30571                           
 30572                           ; BSR set to: 1
 30573                           ;controlCurrent_MC50.c: 313:         {;controlCurrent_MC50.c: 314:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationClose;
 30574  0064E2  C0C0  F134         	movff	_var_sys_NVM+40,_var_sys+52	;volatile
 30575  0064E6  C0C1  F135         	movff	_var_sys_NVM+41,_var_sys+53	;volatile
 30576  0064EA  C0C2  F136         	movff	_var_sys_NVM+42,_var_sys+54	;volatile
 30577  0064EE  C0C3  F137         	movff	_var_sys_NVM+43,_var_sys+55	;volatile
 30578                           
 30579                           ;controlCurrent_MC50.c: 315:         }
 30580  0064F2  D008               	goto	l23031
 30581  0064F4                     l1388:
 30582                           
 30583                           ; BSR set to: 1
 30584                           ;controlCurrent_MC50.c: 317:         {;controlCurrent_MC50.c: 318:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationOpen ;
 30585  0064F4  C0C4  F134         	movff	_var_sys_NVM+44,_var_sys+52	;volatile
 30586  0064F8  C0C5  F135         	movff	_var_sys_NVM+45,_var_sys+53	;volatile
 30587  0064FC  C0C6  F136         	movff	_var_sys_NVM+46,_var_sys+54	;volatile
 30588  006500  C0C7  F137         	movff	_var_sys_NVM+47,_var_sys+55	;volatile
 30589  006504                     l23031:
 30590                           
 30591                           ; BSR set to: 1
 30592                           ;controlCurrent_MC50.c: 321:         if(var_sys.ActualComparatorCurrent<=5000)
 30593  006504  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 30594  006506  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 30595  006508  E10E               	bnz	l23035
 30596  00650A  0E89               	movlw	137
 30597  00650C  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 30598  00650E  0E13               	movlw	19
 30599  006510  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 30600  006512  B0D8               	btfsc	status,0,c
 30601  006514  D008               	goto	l23035
 30602                           
 30603                           ; BSR set to: 1
 30604                           ;controlCurrent_MC50.c: 322:         {;controlCurrent_MC50.c: 323:             var_sys.A
      +                          ctualComparatorCurrent=5000;
 30605  006516  0E88               	movlw	136
 30606  006518  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 30607  00651A  0E13               	movlw	19
 30608  00651C                     L109:
 30609  00651C  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 30610  00651E  0E00               	movlw	0
 30611  006520  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 30612  006522  0E00               	movlw	0
 30613  006524  D020               	goto	L108
 30614  006526                     l23035:
 30615                           
 30616                           ; BSR set to: 1
 30617                           ;controlCurrent_MC50.c: 326:         {;controlCurrent_MC50.c: 327:             var_sys.A
      +                          ctualComparatorCurrent=var_sys.ActualComparatorCurrent-(1200 +(500*(10-var_sys_NVM.decel
      +                          arationSensivity)));
 30618  006526  C0A7  F010         	movff	_var_sys_NVM+15,___wmul@multiplier	;volatile
 30619  00652A  6A11               	clrf	(___wmul@multiplier+1)^0,c
 30620  00652C  0EFE               	movlw	254
 30621  00652E  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 30622  006530  0E0C               	movlw	12
 30623  006532  6E12               	movwf	___wmul@multiplicand^0,c
 30624  006534  EC06  F04E         	call	___wmul	;wreg free
 30625  006538  0E38               	movlw	56
 30626  00653A  2410               	addwf	?___wmul^0,w,c
 30627  00653C  6E1A               	movwf	??_getCurrentComparator^0,c
 30628  00653E  0E18               	movlw	24
 30629  006540  2011               	addwfc	(?___wmul+1)^0,w,c
 30630  006542  6E1B               	movwf	(??_getCurrentComparator+1)^0,c
 30631  006544  6A1C               	clrf	(??_getCurrentComparator+2)^0,c
 30632  006546  BE1B               	btfsc	(??_getCurrentComparator+1)^0,7,c
 30633  006548  061C               	decf	(??_getCurrentComparator+2)^0,f,c
 30634  00654A  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 30635  00654C  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 30636  00654E  501A               	movf	??_getCurrentComparator^0,w,c
 30637  006550  0101               	movlb	1	; () banked
 30638  006552  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 30639  006554  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 30640  006556  501B               	movf	(??_getCurrentComparator+1)^0,w,c
 30641  006558  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 30642  00655A  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 30643  00655C  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 30644  00655E  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 30645  006560  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 30646  006562  501D               	movf	(??_getCurrentComparator+3)^0,w,c
 30647  006564  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 30648  006566                     L108:
 30649  006566  6F37               	movwf	(_var_sys+55)& (0+255),b	;volatile
 30650                           
 30651                           ; BSR set to: 1
 30652                           ;controlCurrent_MC50.c: 332:     return var_sys.ActualComparatorCurrent+tempOffset;
 30653  006568  5020               	movf	getCurrentComparator@tempOffset^0,w,c
 30654  00656A  2534               	addwf	(_var_sys+52)& (0+255),w,b	;volatile
 30655  00656C  6E16               	movwf	?_getCurrentComparator^0,c
 30656  00656E  5021               	movf	(getCurrentComparator@tempOffset+1)^0,w,c
 30657  006570  2135               	addwfc	(_var_sys+53)& (0+255),w,b	;volatile
 30658  006572  6E17               	movwf	(?_getCurrentComparator+1)^0,c
 30659  006574  0E00               	movlw	0
 30660  006576  2136               	addwfc	(_var_sys+54)& (0+255),w,b	;volatile
 30661  006578  6E18               	movwf	(?_getCurrentComparator+2)^0,c
 30662  00657A  0E00               	movlw	0
 30663  00657C  2137               	addwfc	(_var_sys+55)& (0+255),w,b	;volatile
 30664  00657E  6E19               	movwf	(?_getCurrentComparator+3)^0,c
 30665                           
 30666                           ; BSR set to: 1
 30667  006580  0012               	return		;funcret
 30668  006582                     __end_of_getCurrentComparator:
 30669                           	callstack 0
 30670                           
 30671 ;; *************** function ___wmul *****************
 30672 ;; Defined at:
 30673 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
 30674 ;; Parameters:    Size  Location     Type
 30675 ;;  multiplier      2   15[COMRAM] unsigned int 
 30676 ;;  multiplicand    2   17[COMRAM] unsigned int 
 30677 ;; Auto vars:     Size  Location     Type
 30678 ;;  product         2   19[COMRAM] unsigned int 
 30679 ;; Return value:  Size  Location     Type
 30680 ;;                  2   15[COMRAM] unsigned int 
 30681 ;; Registers used:
 30682 ;;		wreg, status,2, status,0, prodl, prodh
 30683 ;; Tracked objects:
 30684 ;;		On entry : 0/0
 30685 ;;		On exit  : 0/0
 30686 ;;		Unchanged: 0/0
 30687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30688 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30689 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30691 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30692 ;;Total ram usage:        6 bytes
 30693 ;; Hardware stack levels used: 1
 30694 ;; Hardware stack levels required when called: 4
 30695 ;; This function calls:
 30696 ;;		Nothing
 30697 ;; This function is called by:
 30698 ;;		_getCurrentComparator
 30699 ;;		_getHopCode
 30700 ;; This function uses a non-reentrant model
 30701 ;;
 30702                           
 30703                           	psect	text128
 30704  009C0C                     __ptext128:
 30705                           	callstack 0
 30706  009C0C                     ___wmul:
 30707                           	callstack 22
 30708                           
 30709                           ; BSR set to: 1
 30710                           ;incstack = 0
 30711  009C0C  5010               	movf	___wmul@multiplier^0,w,c
 30712  009C0E  0212               	mulwf	___wmul@multiplicand^0,c
 30713  009C10  CFF3 F014          	movff	prodl,___wmul@product
 30714  009C14  CFF4 F015          	movff	prodh,___wmul@product+1
 30715  009C18  5010               	movf	___wmul@multiplier^0,w,c
 30716  009C1A  0213               	mulwf	(___wmul@multiplicand+1)^0,c
 30717  009C1C  50F3               	movf	243,w,c
 30718  009C1E  2615               	addwf	(___wmul@product+1)^0,f,c
 30719  009C20  5011               	movf	(___wmul@multiplier+1)^0,w,c
 30720  009C22  0212               	mulwf	___wmul@multiplicand^0,c
 30721  009C24  50F3               	movf	243,w,c
 30722  009C26  2615               	addwf	(___wmul@product+1)^0,f,c
 30723  009C28  C014  F010         	movff	___wmul@product,?___wmul
 30724  009C2C  C015  F011         	movff	___wmul@product+1,?___wmul+1
 30725  009C30  0012               	return		;funcret
 30726  009C32                     __end_of___wmul:
 30727                           	callstack 0
 30728                           
 30729 ;; *************** function _GetMotorPower *****************
 30730 ;; Defined at:
 30731 ;;		line 405 in file "outputs_MC50.c"
 30732 ;; Parameters:    Size  Location     Type
 30733 ;;		None
 30734 ;; Auto vars:     Size  Location     Type
 30735 ;;  defineatraso    1   18[COMRAM] unsigned char 
 30736 ;; Return value:  Size  Location     Type
 30737 ;;                  1    wreg      unsigned char 
 30738 ;; Registers used:
 30739 ;;		wreg, status,2, status,0, prodl, prodh
 30740 ;; Tracked objects:
 30741 ;;		On entry : 3C/1
 30742 ;;		On exit  : 3F/1
 30743 ;;		Unchanged: 0/0
 30744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30746 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30747 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30748 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30749 ;;Total ram usage:        4 bytes
 30750 ;; Hardware stack levels used: 1
 30751 ;; Hardware stack levels required when called: 4
 30752 ;; This function calls:
 30753 ;;		Nothing
 30754 ;; This function is called by:
 30755 ;;		_ControlCurrent
 30756 ;;		_InitSoftStart
 30757 ;;		_InitSoftStop
 30758 ;; This function uses a non-reentrant model
 30759 ;;
 30760                           
 30761                           	psect	text129
 30762  007BD8                     __ptext129:
 30763                           	callstack 0
 30764  007BD8                     _GetMotorPower:
 30765                           	callstack 22
 30766                           
 30767                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 30768                           
 30769                           ;incstack = 0
 30770  007BD8  0101               	movlb	1	; () banked
 30771  007BDA  057B               	decf	_powerControl_st& (0+255),w,b
 30772  007BDC  A4D8               	btfss	status,2,c
 30773  007BDE  D006               	goto	l20549
 30774                           
 30775                           ; BSR set to: 1
 30776                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 30777  007BE0  0100               	movlb	0	; () banked
 30778  007BE2  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 30779  007BE4  0D06               	mullw	6
 30780  007BE6  CFF3 F192          	movff	prodl,_temppower
 30781                           
 30782                           ;outputs_MC50.c: 416:     }
 30783  007BEA  D043               	goto	l2240
 30784  007BEC                     l20549:
 30785                           
 30786                           ; BSR set to: 1
 30787                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 30788  007BEC  0100               	movlb	0	; () banked
 30789  007BEE  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 30790  007BF0  0D06               	mullw	6
 30791  007BF2  CFF3 F082          	movff	prodl,_fullmotorPower
 30792                           
 30793                           ; BSR set to: 0
 30794                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 30795  007BF6  0101               	movlb	1	; () banked
 30796  007BF8  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 30797  007BFA  D01C               	goto	l20559
 30798  007BFC  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30799  007BFE  E103               	bnz	u23550
 30800  007C00  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 30801  007C02  A0D8               	btfss	status,0,c
 30802  007C04  D017               	goto	l20559
 30803  007C06                     u23550:
 30804                           
 30805                           ; BSR set to: 1
 30806                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 30807  007C06  0100               	movlb	0	; () banked
 30808  007C08  5182               	movf	_fullmotorPower& (0+255),w,b
 30809  007C0A  6E10               	movwf	??_GetMotorPower^0,c
 30810  007C0C  6A11               	clrf	(??_GetMotorPower+1)^0,c
 30811  007C0E  0101               	movlb	1	; () banked
 30812  007C10  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 30813  007C12  5C10               	subwf	??_GetMotorPower^0,w,c
 30814  007C14  5011               	movf	(??_GetMotorPower+1)^0,w,c
 30815  007C16  0A80               	xorlw	128
 30816  007C18  6E12               	movwf	(??_GetMotorPower+2)^0,c
 30817  007C1A  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30818  007C1C  0A80               	xorlw	128
 30819  007C1E  5812               	subwfb	(??_GetMotorPower+2)^0,w,c
 30820  007C20  B0D8               	btfsc	status,0,c
 30821  007C22  D002               	goto	l20557
 30822                           
 30823                           ; BSR set to: 1
 30824                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 30825  007C24  0E01               	movlw	1
 30826  007C26  D004               	goto	L111
 30827  007C28                     l20557:
 30828                           
 30829                           ; BSR set to: 1
 30830                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 30831  007C28  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 30832  007C2A  0100               	movlb	0	; () banked
 30833  007C2C  5D82               	subwf	_fullmotorPower& (0+255),w,b
 30834  007C2E  D017               	goto	L112
 30835  007C30                     L111:
 30836  007C30  6F92               	movwf	_temppower& (0+255),b
 30837  007C32  D01F               	goto	l2240
 30838  007C34                     l20559:
 30839                           
 30840                           ; BSR set to: 1
 30841  007C34  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 30842  007C36  D005               	goto	u23570
 30843  007C38  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30844  007C3A  E113               	bnz	l20569
 30845  007C3C  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 30846  007C3E  B0D8               	btfsc	status,0,c
 30847  007C40  D010               	goto	l20569
 30848  007C42                     u23570:
 30849                           
 30850                           ; BSR set to: 1
 30851  007C42  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 30852  007C44  D005               	goto	u23580
 30853  007C46  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 30854  007C48  E10C               	bnz	l20569
 30855  007C4A  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 30856  007C4C  B0D8               	btfsc	status,0,c
 30857  007C4E  D009               	goto	l20569
 30858  007C50                     u23580:
 30859                           
 30860                           ; BSR set to: 1
 30861                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 30862  007C50  C082  F192         	movff	_fullmotorPower,_temppower
 30863                           
 30864                           ; BSR set to: 1
 30865                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 30866  007C54  0E08               	movlw	8
 30867  007C56  0100               	movlb	0	; () banked
 30868  007C58  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 30869  007C5A  D00B               	goto	l2240
 30870                           
 30871                           ; BSR set to: 0
 30872                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 30873  007C5C  0E3A               	movlw	58
 30874  007C5E                     L112:
 30875  007C5E  0101               	movlb	1	; () banked
 30876  007C60  D7E7               	goto	L111
 30877  007C62                     l20569:
 30878                           
 30879                           ; BSR set to: 1
 30880  007C62  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 30881  007C64  D006               	goto	l2240
 30882  007C66  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 30883  007C68  E102               	bnz	u23600
 30884  007C6A  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 30885  007C6C  B0D8               	btfsc	status,0,c
 30886  007C6E                     u23600:
 30887                           
 30888                           ; BSR set to: 1
 30889                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 30890  007C6E  C110  F192         	movff	_var_sys+16,_temppower	;volatile
 30891  007C72                     l2240:
 30892                           
 30893                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 30894  007C72  0101               	movlb	1	; () banked
 30895  007C74  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 30896  007C76  D00E               	goto	l20579
 30897  007C78  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 30898  007C7A  E103               	bnz	u23610
 30899  007C7C  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 30900  007C7E  A0D8               	btfss	status,0,c
 30901  007C80  D009               	goto	l20579
 30902  007C82                     u23610:
 30903                           
 30904                           ; BSR set to: 1
 30905  007C82  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 30906  007C84  D005               	goto	u23620
 30907  007C86  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30908  007C88  E105               	bnz	l20579
 30909  007C8A  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 30910  007C8C  B0D8               	btfsc	status,0,c
 30911  007C8E  D002               	goto	l20579
 30912  007C90                     u23620:
 30913                           
 30914                           ; BSR set to: 1
 30915                           ;outputs_MC50.c: 452:     defineatraso = 5;
 30916  007C90  0E05               	movlw	5
 30917  007C92  D001               	goto	L110
 30918  007C94                     l20579:
 30919                           
 30920                           ; BSR set to: 1
 30921                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 30922  007C94  0E17               	movlw	23
 30923  007C96                     L110:
 30924  007C96  6E13               	movwf	GetMotorPower@defineatraso^0,c
 30925                           
 30926                           ; BSR set to: 1
 30927                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 30928  007C98  5192               	movf	_temppower& (0+255),w,b
 30929  007C9A  2413               	addwf	GetMotorPower@defineatraso^0,w,c
 30930                           
 30931                           ; BSR set to: 1
 30932  007C9C  0012               	return		;funcret
 30933  007C9E                     __end_of_GetMotorPower:
 30934                           	callstack 0
 30935                           
 30936 ;; *************** function _ControlCounterMoves *****************
 30937 ;; Defined at:
 30938 ;;		line 305 in file "controlMemory_MC50.c"
 30939 ;; Parameters:    Size  Location     Type
 30940 ;;		None
 30941 ;; Auto vars:     Size  Location     Type
 30942 ;;		None
 30943 ;; Return value:  Size  Location     Type
 30944 ;;                  1    wreg      void 
 30945 ;; Registers used:
 30946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30947 ;; Tracked objects:
 30948 ;;		On entry : 3E/1
 30949 ;;		On exit  : 0/0
 30950 ;;		Unchanged: 0/0
 30951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30956 ;;Total ram usage:        0 bytes
 30957 ;; Hardware stack levels used: 1
 30958 ;; Hardware stack levels required when called: 14
 30959 ;; This function calls:
 30960 ;;		_SaveNVM_VarSystem
 30961 ;; This function is called by:
 30962 ;;		_main
 30963 ;; This function uses a non-reentrant model
 30964 ;;
 30965                           
 30966                           	psect	text130
 30967  009126                     __ptext130:
 30968                           	callstack 0
 30969  009126                     _ControlCounterMoves:
 30970                           	callstack 16
 30971                           
 30972                           ;controlMemory_MC50.c: 308:     if(ts_system.timeBetweenSaveCounters<=0)
 30973                           
 30974                           ; BSR set to: 1
 30975                           ;incstack = 0
 30976  009126  0101               	movlb	1	; () banked
 30977  009128  BFC5               	btfsc	(_ts_system+39)& (0+255),7,b	;volatile
 30978  00912A  D005               	goto	u30010
 30979  00912C  51C5               	movf	(_ts_system+39)& (0+255),w,b	;volatile
 30980  00912E  E127               	bnz	l1491
 30981  009130  05C4               	decf	(_ts_system+38)& (0+255),w,b	;volatile
 30982  009132  B0D8               	btfsc	status,0,c
 30983  009134  0012               	return	
 30984  009136                     u30010:
 30985                           
 30986                           ; BSR set to: 1
 30987                           ;controlMemory_MC50.c: 309:     {;controlMemory_MC50.c: 310:        ts_system.timeBetwee
      +                          nSaveCounters=((1000/50)*60)*5;
 30988  009136  0E17               	movlw	23
 30989  009138  6FC5               	movwf	(_ts_system+39)& (0+255),b	;volatile
 30990  00913A  0E70               	movlw	112
 30991  00913C  6FC4               	movwf	(_ts_system+38)& (0+255),b	;volatile
 30992                           
 30993                           ; BSR set to: 1
 30994                           ;controlMemory_MC50.c: 312:        if(var_sys.actualCounterMoves!=var_sys_NVM.counterMov
      +                          es)
 30995  00913E  0100               	movlb	0	; () banked
 30996  009140  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 30997  009142  0101               	movlb	1	; () banked
 30998  009144  193C               	xorwf	(_var_sys+60)& (0+255),w,b	;volatile
 30999  009146  E110               	bnz	u30020
 31000  009148  0100               	movlb	0	; () banked
 31001  00914A  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 31002  00914C  0101               	movlb	1	; () banked
 31003  00914E  193D               	xorwf	(_var_sys+61)& (0+255),w,b	;volatile
 31004  009150  E10B               	bnz	u30020
 31005  009152  0100               	movlb	0	; () banked
 31006  009154  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 31007  009156  0101               	movlb	1	; () banked
 31008  009158  193E               	xorwf	(_var_sys+62)& (0+255),w,b	;volatile
 31009  00915A  E106               	bnz	u30020
 31010  00915C  0100               	movlb	0	; () banked
 31011  00915E  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 31012  009160  0101               	movlb	1	; () banked
 31013  009162  193F               	xorwf	(_var_sys+63)& (0+255),w,b	;volatile
 31014  009164  B4D8               	btfsc	status,2,c
 31015  009166  0012               	return	
 31016  009168                     u30020:
 31017                           
 31018                           ; BSR set to: 1
 31019                           ;controlMemory_MC50.c: 313:        {;controlMemory_MC50.c: 314:            var_sys_NVM.c
      +                          ounterMoves=var_sys.actualCounterMoves;
 31020  009168  C13C  F0BA         	movff	_var_sys+60,_var_sys_NVM+34	;volatile
 31021  00916C  C13D  F0BB         	movff	_var_sys+61,_var_sys_NVM+35	;volatile
 31022  009170  C13E  F0BC         	movff	_var_sys+62,_var_sys_NVM+36	;volatile
 31023  009174  C13F  F0BD         	movff	_var_sys+63,_var_sys_NVM+37	;volatile
 31024                           
 31025                           ; BSR set to: 1
 31026                           ;controlMemory_MC50.c: 315:            SaveNVM_VarSystem(pageMemoryCounters);
 31027  009178  0E02               	movlw	2
 31028  00917A  ECEA  F04B         	call	_SaveNVM_VarSystem
 31029  00917E                     l1491:
 31030  00917E  0012               	return		;funcret
 31031  009180                     __end_of_ControlCounterMoves:
 31032                           	callstack 0
 31033                           
 31034 ;; *************** function _SaveNVM_VarSystem *****************
 31035 ;; Defined at:
 31036 ;;		line 187 in file "controlMemory_MC50.c"
 31037 ;; Parameters:    Size  Location     Type
 31038 ;;  page            1    wreg     unsigned char 
 31039 ;; Auto vars:     Size  Location     Type
 31040 ;;  page            1    0[BANK0 ] unsigned char 
 31041 ;;  tempAdd         2    1[BANK0 ] unsigned int 
 31042 ;;  point           1    3[BANK0 ] PTR unsigned char 
 31043 ;;		 -> var_sys_NVM(64), 
 31044 ;; Return value:  Size  Location     Type
 31045 ;;                  1    wreg      void 
 31046 ;; Registers used:
 31047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31048 ;; Tracked objects:
 31049 ;;		On entry : 0/0
 31050 ;;		On exit  : 0/0
 31051 ;;		Unchanged: 0/0
 31052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31054 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31056 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31057 ;;Total ram usage:        4 bytes
 31058 ;; Hardware stack levels used: 1
 31059 ;; Hardware stack levels required when called: 13
 31060 ;; This function calls:
 31061 ;;		_i2c_writeNBytes
 31062 ;; This function is called by:
 31063 ;;		_loadNVM_VarSystem
 31064 ;;		_ResetDefaultMemory
 31065 ;;		_ControlCounterMoves
 31066 ;;		_checkNVM_VarSystem
 31067 ;;		_sm_execute_ControlLearning
 31068 ;;		_sm_execute_menuConfiguration
 31069 ;;		_setValueToEdit
 31070 ;;		_controlSelectRemote
 31071 ;;		_eusartparser
 31072 ;; This function uses a non-reentrant model
 31073 ;;
 31074                           
 31075                           	psect	text131
 31076  0097D4                     __ptext131:
 31077                           	callstack 0
 31078  0097D4                     _SaveNVM_VarSystem:
 31079                           	callstack 14
 31080                           
 31081                           ;incstack = 0
 31082                           ;SaveNVM_VarSystem@page stored from wreg
 31083  0097D4  0100               	movlb	0	; () banked
 31084  0097D6  6FD8               	movwf	SaveNVM_VarSystem@page& (0+255),b
 31085                           
 31086                           ;controlMemory_MC50.c: 187: void SaveNVM_VarSystem(unsigned char page);controlMemory_MC5
      +                          0.c: 188: {;controlMemory_MC50.c: 189:     unsigned int tempAdd=page*16;
 31087  0097D8  0100               	movlb	0	; () banked
 31088  0097DA  51D8               	movf	SaveNVM_VarSystem@page& (0+255),w,b
 31089  0097DC  0D10               	mullw	16
 31090  0097DE  CFF3 F0D9          	movff	prodl,SaveNVM_VarSystem@tempAdd
 31091  0097E2  CFF4 F0DA          	movff	prodh,SaveNVM_VarSystem@tempAdd+1
 31092                           
 31093                           ; BSR set to: 0
 31094                           ;controlMemory_MC50.c: 190:     char* point=(char*)&var_sys_NVM;
 31095  0097E6  0E98               	movlw	low _var_sys_NVM
 31096  0097E8  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 31097                           
 31098                           ; BSR set to: 0
 31099                           ;controlMemory_MC50.c: 191:     point=point+tempAdd;
 31100  0097EA  51DB               	movf	SaveNVM_VarSystem@point& (0+255),w,b
 31101  0097EC  25D9               	addwf	SaveNVM_VarSystem@tempAdd& (0+255),w,b
 31102  0097EE  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 31103                           
 31104                           ; BSR set to: 0
 31105                           ;controlMemory_MC50.c: 192:    i2c_writeNBytes(0x50, tempAdd, point, 16);
 31106  0097F0  C0D9  F022         	movff	SaveNVM_VarSystem@tempAdd,i2c_writeNBytes@reg
 31107  0097F4  C0DA  F023         	movff	SaveNVM_VarSystem@tempAdd+1,i2c_writeNBytes@reg+1
 31108  0097F8  C0DB  F024         	movff	SaveNVM_VarSystem@point,i2c_writeNBytes@data
 31109  0097FC  0E00               	movlw	0
 31110  0097FE  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 31111  009800  0E10               	movlw	16
 31112  009802  6E25               	movwf	i2c_writeNBytes@len^0,c
 31113  009804  0E50               	movlw	80
 31114  009806  EC8F  F045         	call	_i2c_writeNBytes
 31115  00980A  0012               	return		;funcret
 31116  00980C                     __end_of_SaveNVM_VarSystem:
 31117                           	callstack 0
 31118                           
 31119 ;; *************** function _i2c_writeNBytes *****************
 31120 ;; Defined at:
 31121 ;;		line 50 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31122 ;; Parameters:    Size  Location     Type
 31123 ;;  address         1    wreg     unsigned char 
 31124 ;;  reg             2   33[COMRAM] unsigned short 
 31125 ;;  data            1   35[COMRAM] PTR void 
 31126 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 31127 ;;  len             2   36[COMRAM] unsigned int 
 31128 ;; Auto vars:     Size  Location     Type
 31129 ;;  address         1   56[COMRAM] unsigned char 
 31130 ;;  dat            17   39[COMRAM] unsigned char [17]
 31131 ;; Return value:  Size  Location     Type
 31132 ;;                  1    wreg      void 
 31133 ;; Registers used:
 31134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31135 ;; Tracked objects:
 31136 ;;		On entry : 3F/0
 31137 ;;		On exit  : 0/0
 31138 ;;		Unchanged: 0/0
 31139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31140 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31141 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31142 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31143 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31144 ;;Total ram usage:       24 bytes
 31145 ;; Hardware stack levels used: 1
 31146 ;; Hardware stack levels required when called: 12
 31147 ;; This function calls:
 31148 ;;		_I2C1_Close
 31149 ;;		_I2C1_MasterWrite
 31150 ;;		_I2C1_Open
 31151 ;;		_I2C1_SetAddressNackCallback
 31152 ;;		_I2C1_SetBuffer
 31153 ;;		_memcpy
 31154 ;; This function is called by:
 31155 ;;		_saveNewSerial
 31156 ;;		_RemoveSerial
 31157 ;;		_SaveNVM_VarSystem
 31158 ;; This function uses a non-reentrant model
 31159 ;;
 31160                           
 31161                           	psect	text132
 31162  008B1E                     __ptext132:
 31163                           	callstack 0
 31164  008B1E                     _i2c_writeNBytes:
 31165                           	callstack 14
 31166                           
 31167                           ;incstack = 0
 31168                           ;i2c_writeNBytes@address stored from wreg
 31169  008B1E  6E39               	movwf	i2c_writeNBytes@address^0,c
 31170                           
 31171                           ;mcc_generated_files/drivers/i2c_simple_master.c: 50: void i2c_writeNBytes(i2c1_address_
      +                          t address, uint16_t reg, void* data, size_t len);mcc_generated_files/drivers/i2c_simple_
      +                          master.c: 51: {;mcc_generated_files/drivers/i2c_simple_master.c: 52:     uint8_t dat[17]
      +                          ;;mcc_generated_files/drivers/i2c_simple_master.c: 53:     dat[0] = reg;
 31172  008B20  C022  F028         	movff	i2c_writeNBytes@reg,i2c_writeNBytes@dat
 31173                           
 31174                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     memcpy(dat + 1, data, len);
 31175  008B24  0E29               	movlw	low (i2c_writeNBytes@dat+1)
 31176  008B26  6E10               	movwf	memcpy@d1^0,c
 31177  008B28  6A11               	clrf	(memcpy@d1+1)^0,c
 31178  008B2A  C024  F012         	movff	i2c_writeNBytes@data,memcpy@s1
 31179  008B2E  6A13               	clrf	(memcpy@s1+1)^0,c
 31180  008B30  C025  F014         	movff	i2c_writeNBytes@len,memcpy@n
 31181  008B34  C026  F015         	movff	i2c_writeNBytes@len+1,memcpy@n+1
 31182  008B38  ECEC  F04A         	call	_memcpy	;wreg free
 31183  008B3C                     l20621:
 31184  008B3C  5023               	movf	(i2c_writeNBytes@reg+1)^0,w,c
 31185  008B3E  1039               	iorwf	i2c_writeNBytes@address^0,w,c
 31186  008B40  EC25  F043         	call	_I2C1_Open
 31187  008B44  0900               	iorlw	0
 31188  008B46  B4D8               	btfsc	status,2,c
 31189  008B48  D7F9               	goto	l20621
 31190                           
 31191                           ;mcc_generated_files/drivers/i2c_simple_master.c: 56:     I2C1_SetBuffer(dat,len + 1);
 31192  008B4A  0E28               	movlw	low i2c_writeNBytes@dat
 31193  008B4C  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 31194  008B4E  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 31195  008B50  0E01               	movlw	1
 31196  008B52  2425               	addwf	i2c_writeNBytes@len^0,w,c
 31197  008B54  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31198  008B56  0E00               	movlw	0
 31199  008B58  2026               	addwfc	(i2c_writeNBytes@len+1)^0,w,c
 31200  008B5A  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31201  008B5C  EC01  F04F         	call	_I2C1_SetBuffer	;wreg free
 31202                           
 31203                           ; BSR set to: 2
 31204                           ;mcc_generated_files/drivers/i2c_simple_master.c: 57:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 31205  008B60  0E00               	movlw	0
 31206  008B62  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 31207  008B64  0E00               	movlw	0
 31208  008B66  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 31209  008B68  0E00               	movlw	0
 31210  008B6A  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 31211  008B6C  0E00               	movlw	0
 31212  008B6E  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 31213  008B70  EC32  F04F         	call	_I2C1_SetAddressNackCallback	;wreg free
 31214                           
 31215                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58:     I2C1_MasterWrite();
 31216  008B74  EC00  F050         	call	_I2C1_MasterWrite	;wreg free
 31217  008B78                     l20629:
 31218  008B78  EC73  F04E         	call	_I2C1_Close	;wreg free
 31219  008B7C  06E8               	decf	wreg,f,c
 31220  008B7E  B4D8               	btfsc	status,2,c
 31221  008B80  D7FB               	goto	l20629
 31222                           
 31223                           ;mcc_generated_files/drivers/i2c_simple_master.c: 60:     _delay((unsigned long)((10)*(6
      +                          4000000/4000.0)));
 31224  008B82  0ED0               	movlw	208
 31225  008B84  6E27               	movwf	??_i2c_writeNBytes^0,c
 31226  008B86  0ECA               	movlw	202
 31227  008B88                     u34467:
 31228  008B88  2EE8               	decfsz	wreg,f,c
 31229  008B8A  D7FE               	bra	u34467
 31230  008B8C  2E27               	decfsz	??_i2c_writeNBytes^0,f,c
 31231  008B8E  D7FC               	bra	u34467
 31232  008B90  0012               	return		;funcret
 31233  008B92                     __end_of_i2c_writeNBytes:
 31234                           	callstack 0
 31235                           
 31236 ;; *************** function _memcpy *****************
 31237 ;; Defined at:
 31238 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memcpy.c"
 31239 ;; Parameters:    Size  Location     Type
 31240 ;;  d1              2   15[COMRAM] PTR void 
 31241 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 31242 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 31243 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 31244 ;;		 -> i2c_writeNBytes@dat(17), 
 31245 ;;  s1              2   17[COMRAM] PTR const void 
 31246 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 31247 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 31248 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 31249 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 31250 ;;  n               2   19[COMRAM] unsigned int 
 31251 ;; Auto vars:     Size  Location     Type
 31252 ;;  s               2   24[COMRAM] PTR const unsigned char 
 31253 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 31254 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 31255 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 31256 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 31257 ;;  d               2   22[COMRAM] PTR unsigned char 
 31258 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 31259 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 31260 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 31261 ;;		 -> i2c_writeNBytes@dat(17), 
 31262 ;;  tmp             1   21[COMRAM] unsigned char 
 31263 ;; Return value:  Size  Location     Type
 31264 ;;                  2   15[COMRAM] PTR void 
 31265 ;; Registers used:
 31266 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31267 ;; Tracked objects:
 31268 ;;		On entry : 0/0
 31269 ;;		On exit  : 0/0
 31270 ;;		Unchanged: 0/0
 31271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31272 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31273 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31275 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31276 ;;Total ram usage:       11 bytes
 31277 ;; Hardware stack levels used: 1
 31278 ;; Hardware stack levels required when called: 4
 31279 ;; This function calls:
 31280 ;;		Nothing
 31281 ;; This function is called by:
 31282 ;;		_i2c_writeNBytes
 31283 ;;		_getSerialCmd
 31284 ;;		_NormalKeyGen
 31285 ;;		_Decrypt
 31286 ;;		_keeloqDecryptPacket
 31287 ;;		_DecryptPacket_12BIT
 31288 ;; This function uses a non-reentrant model
 31289 ;;
 31290                           
 31291                           	psect	text133
 31292  0095D8                     __ptext133:
 31293                           	callstack 0
 31294  0095D8                     _memcpy:
 31295                           	callstack 21
 31296                           
 31297                           ;incstack = 0
 31298  0095D8  C012  F019         	movff	memcpy@s1,memcpy@s
 31299  0095DC  C013  F01A         	movff	memcpy@s1+1,memcpy@s+1
 31300  0095E0  C010  F017         	movff	memcpy@d1,memcpy@d
 31301  0095E4  C011  F018         	movff	memcpy@d1+1,memcpy@d+1
 31302  0095E8  D010               	goto	l20543
 31303  0095EA                     l20535:
 31304  0095EA  C019  FFD9         	movff	memcpy@s,fsr2l
 31305  0095EE  C01A  FFDA         	movff	memcpy@s+1,fsr2h
 31306  0095F2  50DF               	movf	indf2,w,c
 31307  0095F4  6E16               	movwf	memcpy@tmp^0,c
 31308  0095F6  4A19               	infsnz	memcpy@s^0,f,c
 31309  0095F8  2A1A               	incf	(memcpy@s+1)^0,f,c
 31310  0095FA  C017  FFD9         	movff	memcpy@d,fsr2l
 31311  0095FE  C018  FFDA         	movff	memcpy@d+1,fsr2h
 31312  009602  C016  FFDF         	movff	memcpy@tmp,indf2
 31313  009606  4A17               	infsnz	memcpy@d^0,f,c
 31314  009608  2A18               	incf	(memcpy@d+1)^0,f,c
 31315  00960A                     l20543:
 31316  00960A  0614               	decf	memcpy@n^0,f,c
 31317  00960C  A0D8               	btfss	status,0,c
 31318  00960E  0615               	decf	(memcpy@n+1)^0,f,c
 31319  009610  2814               	incf	memcpy@n^0,w,c
 31320  009612  E1EB               	bnz	l20535
 31321  009614  2815               	incf	(memcpy@n+1)^0,w,c
 31322  009616  B4D8               	btfsc	status,2,c
 31323  009618  0012               	return	
 31324  00961A  D7E7               	goto	l20535
 31325  00961C                     __end_of_memcpy:
 31326                           	callstack 0
 31327                           
 31328 ;; *************** function _I2C1_SetAddressNackCallback *****************
 31329 ;; Defined at:
 31330 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 31331 ;; Parameters:    Size  Location     Type
 31332 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 31333 ;;		 -> Absolute function(1), 
 31334 ;;  ptr             2   22[COMRAM] PTR void 
 31335 ;;		 -> NULL(0), 
 31336 ;; Auto vars:     Size  Location     Type
 31337 ;;		None
 31338 ;; Return value:  Size  Location     Type
 31339 ;;                  1    wreg      void 
 31340 ;; Registers used:
 31341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31342 ;; Tracked objects:
 31343 ;;		On entry : 3F/2
 31344 ;;		On exit  : 0/0
 31345 ;;		Unchanged: 0/0
 31346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31347 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31350 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31351 ;;Total ram usage:        4 bytes
 31352 ;; Hardware stack levels used: 1
 31353 ;; Hardware stack levels required when called: 5
 31354 ;; This function calls:
 31355 ;;		_I2C1_SetCallback
 31356 ;; This function is called by:
 31357 ;;		_i2c_writeNBytes
 31358 ;;		_i2c_readDataBlock
 31359 ;;		_I2C1_Read1ByteRegister
 31360 ;; This function uses a non-reentrant model
 31361 ;;
 31362                           
 31363                           	psect	text134
 31364  009E64                     __ptext134:
 31365                           	callstack 0
 31366  009E64                     _I2C1_SetAddressNackCallback:
 31367                           	callstack 20
 31368                           
 31369                           ; BSR set to: 2
 31370                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 31371                           
 31372                           ;incstack = 0
 31373  009E64  C015  F010         	movff	I2C1_SetAddressNackCallback@cb,I2C1_SetCallback@cb
 31374  009E68  C016  F011         	movff	I2C1_SetAddressNackCallback@cb+1,I2C1_SetCallback@cb+1
 31375  009E6C  C017  F012         	movff	I2C1_SetAddressNackCallback@ptr,I2C1_SetCallback@ptr
 31376  009E70  C018  F013         	movff	I2C1_SetAddressNackCallback@ptr+1,I2C1_SetCallback@ptr+1
 31377  009E74  0E02               	movlw	2
 31378  009E76  ECA8  F046         	call	_I2C1_SetCallback
 31379  009E7A  0012               	return		;funcret
 31380  009E7C                     __end_of_I2C1_SetAddressNackCallback:
 31381                           	callstack 0
 31382                           
 31383 ;; *************** function _I2C1_Open *****************
 31384 ;; Defined at:
 31385 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 31386 ;; Parameters:    Size  Location     Type
 31387 ;;  address         1    wreg     unsigned char 
 31388 ;; Auto vars:     Size  Location     Type
 31389 ;;  address         1   15[COMRAM] unsigned char 
 31390 ;;  returnValue     1   16[COMRAM] enum E355
 31391 ;; Return value:  Size  Location     Type
 31392 ;;                  1    wreg      enum E355
 31393 ;; Registers used:
 31394 ;;		wreg, status,2, status,0, cstack
 31395 ;; Tracked objects:
 31396 ;;		On entry : 0/0
 31397 ;;		On exit  : 33/2
 31398 ;;		Unchanged: 0/0
 31399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31401 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31403 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31404 ;;Total ram usage:        2 bytes
 31405 ;; Hardware stack levels used: 1
 31406 ;; Hardware stack levels required when called: 5
 31407 ;; This function calls:
 31408 ;;		_I2C1_MasterClearIrq
 31409 ;;		_I2C1_MasterOpen
 31410 ;; This function is called by:
 31411 ;;		_i2c_writeNBytes
 31412 ;;		_i2c_readDataBlock
 31413 ;;		_I2C1_Read1ByteRegister
 31414 ;; This function uses a non-reentrant model
 31415 ;;
 31416                           
 31417                           	psect	text135
 31418  00864A                     __ptext135:
 31419                           	callstack 0
 31420  00864A                     _I2C1_Open:
 31421                           	callstack 20
 31422                           
 31423                           ;incstack = 0
 31424                           ;I2C1_Open@address stored from wreg
 31425  00864A  6E10               	movwf	I2C1_Open@address^0,c
 31426                           
 31427                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 31428  00864C  0E01               	movlw	1
 31429  00864E  6E11               	movwf	I2C1_Open@returnValue^0,c
 31430                           
 31431                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 31432  008650  0102               	movlb	2	; () banked
 31433  008652  B55F               	btfsc	(_I2C1_Status+35)& (0+255),2,b
 31434  008654  D03A               	goto	l20509
 31435                           
 31436                           ; BSR set to: 2
 31437                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 31438  008656  C010  F258         	movff	I2C1_Open@address,_I2C1_Status+28
 31439                           
 31440                           ; BSR set to: 2
 31441                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 31442  00865A  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 31443                           
 31444                           ; BSR set to: 2
 31445                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 31446  00865C  855F               	bsf	(_I2C1_Status+35)& (0+255),2,b
 31447                           
 31448                           ; BSR set to: 2
 31449                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 31450  00865E  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 31451                           
 31452                           ; BSR set to: 2
 31453                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 31454  008660  0E0E               	movlw	14
 31455  008662  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31456                           
 31457                           ; BSR set to: 2
 31458                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 31459  008664  0E01               	movlw	1
 31460  008666  6F57               	movwf	(_I2C1_Status+27)& (0+255),b
 31461  008668  0EF4               	movlw	244
 31462  00866A  6F56               	movwf	(_I2C1_Status+26)& (0+255),b
 31463                           
 31464                           ; BSR set to: 2
 31465                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 31466  00866C  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 31467                           
 31468                           ; BSR set to: 2
 31469                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 31470  00866E  0E9A               	movlw	low _I2C1_CallbackReturnStop
 31471  008670  6F3C               	movwf	_I2C1_Status& (0+255),b
 31472  008672  0EA0               	movlw	high _I2C1_CallbackReturnStop
 31473  008674  6F3D               	movwf	(_I2C1_Status+1)& (0+255),b
 31474                           
 31475                           ; BSR set to: 2
 31476                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 31477  008676  0E00               	movlw	0
 31478  008678  6F48               	movwf	(_I2C1_Status+12)& (0+255),b
 31479  00867A  0E00               	movlw	0
 31480  00867C  6F49               	movwf	(_I2C1_Status+13)& (0+255),b
 31481                           
 31482                           ; BSR set to: 2
 31483                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 31484  00867E  0E9A               	movlw	low _I2C1_CallbackReturnStop
 31485  008680  6F3E               	movwf	(_I2C1_Status+2)& (0+255),b
 31486  008682  0EA0               	movlw	high _I2C1_CallbackReturnStop
 31487  008684  6F3F               	movwf	(_I2C1_Status+3)& (0+255),b
 31488                           
 31489                           ; BSR set to: 2
 31490                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 31491  008686  0E00               	movlw	0
 31492  008688  6F4A               	movwf	(_I2C1_Status+14)& (0+255),b
 31493  00868A  0E00               	movlw	0
 31494  00868C  6F4B               	movwf	(_I2C1_Status+15)& (0+255),b
 31495                           
 31496                           ; BSR set to: 2
 31497                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 31498  00868E  0E9A               	movlw	low _I2C1_CallbackReturnStop
 31499  008690  6F40               	movwf	(_I2C1_Status+4)& (0+255),b
 31500  008692  0EA0               	movlw	high _I2C1_CallbackReturnStop
 31501  008694  6F41               	movwf	(_I2C1_Status+5)& (0+255),b
 31502                           
 31503                           ; BSR set to: 2
 31504                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 31505  008696  0E00               	movlw	0
 31506  008698  6F4C               	movwf	(_I2C1_Status+16)& (0+255),b
 31507  00869A  0E00               	movlw	0
 31508  00869C  6F4D               	movwf	(_I2C1_Status+17)& (0+255),b
 31509                           
 31510                           ; BSR set to: 2
 31511                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 31512  00869E  0E9A               	movlw	low _I2C1_CallbackReturnStop
 31513  0086A0  6F42               	movwf	(_I2C1_Status+6)& (0+255),b
 31514  0086A2  0EA0               	movlw	high _I2C1_CallbackReturnStop
 31515  0086A4  6F43               	movwf	(_I2C1_Status+7)& (0+255),b
 31516                           
 31517                           ; BSR set to: 2
 31518                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 31519  0086A6  0E00               	movlw	0
 31520  0086A8  6F4E               	movwf	(_I2C1_Status+18)& (0+255),b
 31521  0086AA  0E00               	movlw	0
 31522  0086AC  6F4F               	movwf	(_I2C1_Status+19)& (0+255),b
 31523                           
 31524                           ; BSR set to: 2
 31525                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 31526  0086AE  0E96               	movlw	low _I2C1_CallbackReturnReset
 31527  0086B0  6F44               	movwf	(_I2C1_Status+8)& (0+255),b
 31528  0086B2  0EA0               	movlw	high _I2C1_CallbackReturnReset
 31529  0086B4  6F45               	movwf	(_I2C1_Status+9)& (0+255),b
 31530                           
 31531                           ; BSR set to: 2
 31532                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 31533  0086B6  0E00               	movlw	0
 31534  0086B8  6F50               	movwf	(_I2C1_Status+20)& (0+255),b
 31535  0086BA  0E00               	movlw	0
 31536  0086BC  6F51               	movwf	(_I2C1_Status+21)& (0+255),b
 31537                           
 31538                           ; BSR set to: 2
 31539                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 31540  0086BE  EC3A  F050         	call	_I2C1_MasterClearIrq	;wreg free
 31541                           
 31542                           ; BSR set to: 14
 31543                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 31544  0086C2  EC3E  F04F         	call	_I2C1_MasterOpen	;wreg free
 31545                           
 31546                           ; BSR set to: 14
 31547                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 31548  0086C6  0E00               	movlw	0
 31549  0086C8  6E11               	movwf	I2C1_Open@returnValue^0,c
 31550  0086CA                     l20509:
 31551                           
 31552                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 31553  0086CA  5011               	movf	I2C1_Open@returnValue^0,w,c
 31554  0086CC  0012               	return		;funcret
 31555  0086CE                     __end_of_I2C1_Open:
 31556                           	callstack 0
 31557                           
 31558 ;; *************** function _I2C1_MasterOpen *****************
 31559 ;; Defined at:
 31560 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 31561 ;; Parameters:    Size  Location     Type
 31562 ;;		None
 31563 ;; Auto vars:     Size  Location     Type
 31564 ;;		None
 31565 ;; Return value:  Size  Location     Type
 31566 ;;                  1    wreg      _Bool 
 31567 ;; Registers used:
 31568 ;;		wreg, status,2
 31569 ;; Tracked objects:
 31570 ;;		On entry : 3F/E
 31571 ;;		On exit  : 3F/E
 31572 ;;		Unchanged: 3F/0
 31573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31578 ;;Total ram usage:        0 bytes
 31579 ;; Hardware stack levels used: 1
 31580 ;; Hardware stack levels required when called: 4
 31581 ;; This function calls:
 31582 ;;		Nothing
 31583 ;; This function is called by:
 31584 ;;		_I2C1_Open
 31585 ;; This function uses a non-reentrant model
 31586 ;;
 31587                           
 31588                           	psect	text136
 31589  009E7C                     __ptext136:
 31590                           	callstack 0
 31591  009E7C                     _I2C1_MasterOpen:
 31592                           	callstack 20
 31593                           
 31594                           ; BSR set to: 14
 31595                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 31596                           
 31597                           ;incstack = 0
 31598  009E7C  BA96               	btfsc	150,5,c	;volatile
 31599  009E7E  0012               	return	
 31600                           
 31601                           ; BSR set to: 14
 31602                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x80;
 31603  009E80  0E80               	movlw	128
 31604  009E82  6E95               	movwf	149,c	;volatile
 31605                           
 31606                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 31607  009E84  0E08               	movlw	8
 31608  009E86  6E96               	movwf	150,c	;volatile
 31609                           
 31610                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 31611  009E88  0E00               	movlw	0
 31612  009E8A  6E97               	movwf	151,c	;volatile
 31613                           
 31614                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x9F;
 31615  009E8C  0E9F               	movlw	159
 31616  009E8E  6E93               	movwf	147,c	;volatile
 31617                           
 31618                           ; BSR set to: 14
 31619                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 31620  009E90  8A96               	bsf	150,5,c	;volatile
 31621                           
 31622                           ; BSR set to: 14
 31623  009E92  0012               	return		;funcret
 31624  009E94                     __end_of_I2C1_MasterOpen:
 31625                           	callstack 0
 31626                           
 31627 ;; *************** function _I2C1_MasterWrite *****************
 31628 ;; Defined at:
 31629 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 31630 ;; Parameters:    Size  Location     Type
 31631 ;;		None
 31632 ;; Auto vars:     Size  Location     Type
 31633 ;;		None
 31634 ;; Return value:  Size  Location     Type
 31635 ;;                  1    wreg      enum E355
 31636 ;; Registers used:
 31637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31638 ;; Tracked objects:
 31639 ;;		On entry : 0/2
 31640 ;;		On exit  : 3F/2
 31641 ;;		Unchanged: 0/0
 31642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31647 ;;Total ram usage:        0 bytes
 31648 ;; Hardware stack levels used: 1
 31649 ;; Hardware stack levels required when called: 11
 31650 ;; This function calls:
 31651 ;;		_I2C1_MasterOperation
 31652 ;; This function is called by:
 31653 ;;		_i2c_writeNBytes
 31654 ;;		_i2c_readDataBlock
 31655 ;;		_I2C1_Read1ByteRegister
 31656 ;; This function uses a non-reentrant model
 31657 ;;
 31658                           
 31659                           	psect	text137
 31660  00A000                     __ptext137:
 31661                           	callstack 0
 31662  00A000                     _I2C1_MasterWrite:
 31663                           	callstack 14
 31664                           
 31665                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 31666                           
 31667                           ; BSR set to: 14
 31668                           ;incstack = 0
 31669  00A000  0E00               	movlw	0
 31670  00A002  ECDC  F04C         	call	_I2C1_MasterOperation
 31671                           
 31672                           ; BSR set to: 2
 31673  00A006  0012               	return		;funcret
 31674  00A008                     __end_of_I2C1_MasterWrite:
 31675                           	callstack 0
 31676                           
 31677 ;; *************** function _I2C1_MasterOperation *****************
 31678 ;; Defined at:
 31679 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 31680 ;; Parameters:    Size  Location     Type
 31681 ;;  read            1    wreg     _Bool 
 31682 ;; Auto vars:     Size  Location     Type
 31683 ;;  read            1   31[COMRAM] _Bool 
 31684 ;;  returnValue     1   32[COMRAM] enum E355
 31685 ;; Return value:  Size  Location     Type
 31686 ;;                  1    wreg      enum E355
 31687 ;; Registers used:
 31688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31689 ;; Tracked objects:
 31690 ;;		On entry : 0/2
 31691 ;;		On exit  : 3F/2
 31692 ;;		Unchanged: 0/0
 31693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31695 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31697 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31698 ;;Total ram usage:        2 bytes
 31699 ;; Hardware stack levels used: 1
 31700 ;; Hardware stack levels required when called: 10
 31701 ;; This function calls:
 31702 ;;		_I2C1_MasterStart
 31703 ;;		_I2C1_Poller
 31704 ;; This function is called by:
 31705 ;;		_I2C1_MasterWrite
 31706 ;; This function uses a non-reentrant model
 31707 ;;
 31708                           
 31709                           	psect	text138
 31710  0099B8                     __ptext138:
 31711                           	callstack 0
 31712  0099B8                     _I2C1_MasterOperation:
 31713                           	callstack 14
 31714                           
 31715                           ; BSR set to: 2
 31716                           ;incstack = 0
 31717                           ;I2C1_MasterOperation@read stored from wreg
 31718  0099B8  6E20               	movwf	I2C1_MasterOperation@read^0,c
 31719                           
 31720                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 31721  0099BA  0E01               	movlw	1
 31722  0099BC  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 31723                           
 31724                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 31725  0099BE  0102               	movlb	2	; () banked
 31726  0099C0  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 31727  0099C2  D00E               	goto	l20461
 31728                           
 31729                           ; BSR set to: 2
 31730                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 31731  0099C4  835F               	bsf	(_I2C1_Status+35)& (0+255),1,b
 31732                           
 31733                           ; BSR set to: 2
 31734                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 31735  0099C6  0E00               	movlw	0
 31736  0099C8  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 31737                           
 31738                           ; BSR set to: 2
 31739                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 31740  0099CA  5020               	movf	I2C1_MasterOperation@read^0,w,c
 31741  0099CC  B4D8               	btfsc	status,2,c
 31742  0099CE  D002               	goto	l20455
 31743                           
 31744                           ; BSR set to: 2
 31745                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 31746  0099D0  0E01               	movlw	1
 31747  0099D2  D001               	goto	L113
 31748  0099D4                     l20455:
 31749                           
 31750                           ; BSR set to: 2
 31751                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 31752  0099D4  0E02               	movlw	2
 31753  0099D6                     L113:
 31754  0099D6  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31755                           
 31756                           ; BSR set to: 2
 31757                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 31758  0099D8  EC53  F050         	call	_I2C1_MasterStart	;wreg free
 31759                           
 31760                           ; BSR set to: 2
 31761                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 31762  0099DC  EC9B  F04F         	call	_I2C1_Poller	;wreg free
 31763  0099E0                     l20461:
 31764                           
 31765                           ; BSR set to: 2
 31766                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 31767  0099E0  5021               	movf	I2C1_MasterOperation@returnValue^0,w,c
 31768                           
 31769                           ; BSR set to: 2
 31770  0099E2  0012               	return		;funcret
 31771  0099E4                     __end_of_I2C1_MasterOperation:
 31772                           	callstack 0
 31773                           
 31774 ;; *************** function _I2C1_Poller *****************
 31775 ;; Defined at:
 31776 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 31777 ;; Parameters:    Size  Location     Type
 31778 ;;		None
 31779 ;; Auto vars:     Size  Location     Type
 31780 ;;		None
 31781 ;; Return value:  Size  Location     Type
 31782 ;;                  1    wreg      void 
 31783 ;; Registers used:
 31784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31785 ;; Tracked objects:
 31786 ;;		On entry : 3F/2
 31787 ;;		On exit  : 3F/2
 31788 ;;		Unchanged: 0/0
 31789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31794 ;;Total ram usage:        0 bytes
 31795 ;; Hardware stack levels used: 1
 31796 ;; Hardware stack levels required when called: 9
 31797 ;; This function calls:
 31798 ;;		_I2C1_MasterFsm
 31799 ;;		_I2C1_MasterWaitForEvent
 31800 ;; This function is called by:
 31801 ;;		_I2C1_MasterOperation
 31802 ;; This function uses a non-reentrant model
 31803 ;;
 31804                           
 31805                           	psect	text139
 31806  009F36                     __ptext139:
 31807                           	callstack 0
 31808  009F36                     _I2C1_Poller:
 31809                           	callstack 14
 31810                           
 31811                           ; BSR set to: 2
 31812                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 31813                           
 31814                           ; BSR set to: 2
 31815                           ;incstack = 0
 31816  009F36  D004               	goto	l20429
 31817  009F38                     l20425:
 31818                           
 31819                           ; BSR set to: 2
 31820                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 31821  009F38  EC04  F050         	call	_I2C1_MasterWaitForEvent	;wreg free
 31822                           
 31823                           ; BSR set to: 14
 31824                           ;mcc_generated_files/i2c1_master.c: 317:     I2C1_MasterFsm();
 31825  009F3C  EC6D  F049         	call	_I2C1_MasterFsm	;wreg free
 31826  009F40                     l20429:
 31827                           
 31828                           ; BSR set to: 2
 31829                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 31830  009F40  A35F               	btfss	(_I2C1_Status+35)& (0+255),1,b
 31831  009F42  0012               	return	
 31832  009F44  D7F9               	goto	l20425
 31833  009F46                     __end_of_I2C1_Poller:
 31834                           	callstack 0
 31835                           
 31836 ;; *************** function _I2C1_MasterWaitForEvent *****************
 31837 ;; Defined at:
 31838 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 31839 ;; Parameters:    Size  Location     Type
 31840 ;;		None
 31841 ;; Auto vars:     Size  Location     Type
 31842 ;;		None
 31843 ;; Return value:  Size  Location     Type
 31844 ;;                  1    wreg      void 
 31845 ;; Registers used:
 31846 ;;		None
 31847 ;; Tracked objects:
 31848 ;;		On entry : 3F/2
 31849 ;;		On exit  : 3F/E
 31850 ;;		Unchanged: 0/0
 31851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31856 ;;Total ram usage:        0 bytes
 31857 ;; Hardware stack levels used: 1
 31858 ;; Hardware stack levels required when called: 4
 31859 ;; This function calls:
 31860 ;;		Nothing
 31861 ;; This function is called by:
 31862 ;;		_I2C1_Poller
 31863 ;; This function uses a non-reentrant model
 31864 ;;
 31865                           
 31866                           	psect	text140
 31867  00A008                     __ptext140:
 31868                           	callstack 0
 31869  00A008                     _I2C1_MasterWaitForEvent:
 31870                           	callstack 18
 31871                           
 31872                           ; BSR set to: 2
 31873                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 31874                           
 31875                           ; BSR set to: 2
 31876                           ;incstack = 0
 31877                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 31878  00A008  010E               	movlb	14	; () banked
 31879  00A00A  B1CD               	btfsc	205,0,b	;volatile
 31880  00A00C  0012               	return	
 31881  00A00E  D7FC               	goto	__ptext140
 31882  00A010                     __end_of_I2C1_MasterWaitForEvent:
 31883                           	callstack 0
 31884                           
 31885 ;; *************** function _I2C1_MasterFsm *****************
 31886 ;; Defined at:
 31887 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 31888 ;; Parameters:    Size  Location     Type
 31889 ;;		None
 31890 ;; Auto vars:     Size  Location     Type
 31891 ;;		None
 31892 ;; Return value:  Size  Location     Type
 31893 ;;                  1    wreg      void 
 31894 ;; Registers used:
 31895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31896 ;; Tracked objects:
 31897 ;;		On entry : 3F/E
 31898 ;;		On exit  : 3F/2
 31899 ;;		Unchanged: 0/0
 31900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31903 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31904 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31905 ;;Total ram usage:        3 bytes
 31906 ;; Hardware stack levels used: 1
 31907 ;; Hardware stack levels required when called: 8
 31908 ;; This function calls:
 31909 ;;		_I2C1_DO_ADDRESS_NACK
 31910 ;;		_I2C1_DO_IDLE
 31911 ;;		_I2C1_DO_RCEN
 31912 ;;		_I2C1_DO_RESET
 31913 ;;		_I2C1_DO_RX
 31914 ;;		_I2C1_DO_RX_ACK
 31915 ;;		_I2C1_DO_RX_NACK_RESTART
 31916 ;;		_I2C1_DO_RX_NACK_STOP
 31917 ;;		_I2C1_DO_SEND_ADR_READ
 31918 ;;		_I2C1_DO_SEND_ADR_WRITE
 31919 ;;		_I2C1_DO_SEND_RESTART
 31920 ;;		_I2C1_DO_SEND_RESTART_READ
 31921 ;;		_I2C1_DO_SEND_RESTART_WRITE
 31922 ;;		_I2C1_DO_SEND_STOP
 31923 ;;		_I2C1_DO_TX
 31924 ;;		_I2C1_DO_TX_EMPTY
 31925 ;;		_I2C1_MasterClearIrq
 31926 ;;		_I2C1_MasterIsNack
 31927 ;; This function is called by:
 31928 ;;		_I2C1_Poller
 31929 ;; This function uses a non-reentrant model
 31930 ;;
 31931                           
 31932                           	psect	text141
 31933  0092DA                     __ptext141:
 31934                           	callstack 0
 31935  0092DA                     _I2C1_MasterFsm:
 31936                           	callstack 14
 31937                           
 31938                           ; BSR set to: 14
 31939                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 31940                           
 31941                           ; BSR set to: 14
 31942                           ;incstack = 0
 31943  0092DA  EC3A  F050         	call	_I2C1_MasterClearIrq	;wreg free
 31944                           
 31945                           ; BSR set to: 14
 31946                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 31947  0092DE  0102               	movlb	2	; () banked
 31948  0092E0  A15F               	btfss	(_I2C1_Status+35)& (0+255),0,b
 31949  0092E2  D007               	goto	l20419
 31950                           
 31951                           ; BSR set to: 2
 31952  0092E4  ECB8  F04F         	call	_I2C1_MasterIsNack	;wreg free
 31953  0092E8  0900               	iorlw	0
 31954  0092EA  B4D8               	btfsc	status,2,c
 31955  0092EC  D002               	goto	l20419
 31956                           
 31957                           ; BSR set to: 2
 31958                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 31959  0092EE  0E0F               	movlw	15
 31960  0092F0  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31961  0092F2                     l20419:
 31962                           
 31963                           ; BSR set to: 2
 31964                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 31965  0092F2  515D               	movf	(_I2C1_Status+33)& (0+255),w,b
 31966  0092F4  0D02               	mullw	2
 31967  0092F6  50F3               	movf	243,w,c
 31968  0092F8  0F01               	addlw	low _i2c1_fsmStateTable
 31969  0092FA  6E1D               	movwf	??_I2C1_MasterFsm^0,c
 31970  0092FC  C01D  FFF6         	movff	??_I2C1_MasterFsm,tblptrl
 31971  009300                     	if	1	;There is more than 1 active tblptr byte
 31972  009300  0E0F               	movlw	high __smallconst
 31973  009302  6EF7               	movwf	tblptrh,c
 31974  009304                     	endif
 31975  009304                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 31976  009304  6AF8               	clrf	tblptru,c
 31977  009306                     	endif
 31978  009306                     	if	0	;tblptru may be non-zero
 31979  009306                     	endif
 31980  009306  0009               	tblrd		*+
 31981  009308  CFF5 F01E          	movff	tablat,??_I2C1_MasterFsm+1
 31982  00930C  0009               	tblrd		*+
 31983  00930E  CFF5 F01F          	movff	tablat,??_I2C1_MasterFsm+2
 31984  009312  D801               	call	u23468
 31985  009314  D009               	goto	u23469
 31986  009316                     u23468:
 31987  009316  0005               	push	
 31988  009318  6EFA               	movwf	pclath,c
 31989  00931A  501E               	movf	(??_I2C1_MasterFsm+1)^0,w,c
 31990  00931C  6EFD               	movwf	tosl,c
 31991  00931E  501F               	movf	(??_I2C1_MasterFsm+2)^0,w,c
 31992  009320  6EFE               	movwf	tosh,c
 31993  009322  6AFF               	clrf	tosu,c
 31994  009324  50FA               	movf	pclath,w,c
 31995  009326  0012               	return		;indir
 31996  009328                     u23469:
 31997  009328  0102               	movlb	2	; () banked
 31998  00932A  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31999                           
 32000                           ; BSR set to: 2
 32001  00932C  0012               	return		;funcret
 32002  00932E                     __end_of_I2C1_MasterFsm:
 32003                           	callstack 0
 32004                           
 32005 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 32006 ;; Defined at:
 32007 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 32008 ;; Parameters:    Size  Location     Type
 32009 ;;		None
 32010 ;; Auto vars:     Size  Location     Type
 32011 ;;		None
 32012 ;; Return value:  Size  Location     Type
 32013 ;;                  1    wreg      enum E10442
 32014 ;; Registers used:
 32015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32016 ;; Tracked objects:
 32017 ;;		On entry : 3F/2
 32018 ;;		On exit  : 0/0
 32019 ;;		Unchanged: 0/0
 32020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32023 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32024 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32025 ;;Total ram usage:        2 bytes
 32026 ;; Hardware stack levels used: 1
 32027 ;; Hardware stack levels required when called: 7
 32028 ;; This function calls:
 32029 ;;		Absolute function
 32030 ;;		_I2C1_CallbackReturnReset
 32031 ;;		_I2C1_CallbackReturnStop
 32032 ;;		_I2C1_DO_SEND_RESTART
 32033 ;;		_I2C1_DO_SEND_STOP
 32034 ;;		_rd1RegCompleteHandler
 32035 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32036 ;;		_rd2RegCompleteHandler
 32037 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32038 ;;		_rdBlkRegCompleteHandler
 32039 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32040 ;;		_wr1RegCompleteHandler
 32041 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32042 ;;		_wr2RegCompleteHandler
 32043 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32044 ;; This function is called by:
 32045 ;;		_I2C1_MasterFsm
 32046 ;; This function uses a non-reentrant model
 32047 ;;
 32048                           
 32049                           	psect	text142
 32050  00946E                     __ptext142:
 32051                           	callstack 0
 32052  00946E                     _I2C1_DO_ADDRESS_NACK:
 32053                           	callstack 14
 32054                           
 32055                           ; BSR set to: 2
 32056                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 32057                           
 32058                           ; BSR set to: 2
 32059                           ;incstack = 0
 32060  00946E  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 32061                           
 32062                           ; BSR set to: 2
 32063                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 32064  009470  0E02               	movlw	2
 32065  009472  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 32066                           
 32067                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 32068  009474  D006               	goto	l20403
 32069  009476                     l20393:
 32070                           
 32071                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 32072  009476  EC18  F050         	call	_I2C1_DO_SEND_RESTART	;wreg free
 32073  00947A  0012               	return	
 32074  00947C                     l20397:
 32075                           
 32076                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 32077  00947C  EC14  F050         	call	_I2C1_DO_SEND_STOP	;wreg free
 32078  009480  0012               	return	
 32079  009482                     l20403:
 32080                           
 32081                           ; BSR set to: 2
 32082  009482  C24C  F019         	movff	_I2C1_Status+16,I2C1_CallbackReturnReset@funPtr
 32083  009486  C24D  F01A         	movff	_I2C1_Status+17,I2C1_CallbackReturnReset@funPtr+1
 32084  00948A  D801               	call	u23428
 32085  00948C  D009               	goto	u23429
 32086  00948E                     u23428:
 32087  00948E  0005               	push	
 32088  009490  6EFA               	movwf	pclath,c
 32089  009492  5140               	movf	(_I2C1_Status+4)& (0+255),w,b
 32090  009494  6EFD               	movwf	tosl,c
 32091  009496  5141               	movf	(_I2C1_Status+5)& (0+255),w,b
 32092  009498  6EFE               	movwf	tosh,c
 32093  00949A  6AFF               	clrf	tosu,c
 32094  00949C  50FA               	movf	pclath,w,c
 32095  00949E  0012               	return		;indir
 32096  0094A0                     u23429:
 32097  0094A0  6E1B               	movwf	??_I2C1_DO_ADDRESS_NACK^0,c
 32098  0094A2  6A1C               	clrf	(??_I2C1_DO_ADDRESS_NACK+1)^0,c
 32099                           
 32100                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32101                           ; Switch size 1, requested type "simple"
 32102                           ; Number of cases is 1, Range of values is 0 to 0
 32103                           ; switch strategies available:
 32104                           ; Name         Instructions Cycles
 32105                           ; simple_byte            4     3 (average)
 32106                           ;	Chosen strategy is simple_byte
 32107  0094A4  501C               	movf	(??_I2C1_DO_ADDRESS_NACK+1)^0,w,c
 32108  0094A6  0A00               	xorlw	0	; case 0
 32109  0094A8  A4D8               	btfss	status,2,c
 32110  0094AA  D7E8               	goto	l20397
 32111                           
 32112                           ; Switch size 1, requested type "simple"
 32113                           ; Number of cases is 2, Range of values is 2 to 3
 32114                           ; switch strategies available:
 32115                           ; Name         Instructions Cycles
 32116                           ; simple_byte            7     4 (average)
 32117                           ;	Chosen strategy is simple_byte
 32118  0094AC  501B               	movf	??_I2C1_DO_ADDRESS_NACK^0,w,c
 32119  0094AE  0A02               	xorlw	2	; case 2
 32120  0094B0  B4D8               	btfsc	status,2,c
 32121  0094B2  D7E1               	goto	l20393
 32122  0094B4  0A01               	xorlw	1	; case 3
 32123  0094B6  B4D8               	btfsc	status,2,c
 32124  0094B8  D7DE               	goto	l20393
 32125  0094BA  D7E0               	goto	l20397
 32126  0094BC                     __end_of_I2C1_DO_ADDRESS_NACK:
 32127                           	callstack 0
 32128                           
 32129 ;; *************** function _I2C1_DO_RESET *****************
 32130 ;; Defined at:
 32131 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 32132 ;; Parameters:    Size  Location     Type
 32133 ;;		None
 32134 ;; Auto vars:     Size  Location     Type
 32135 ;;		None
 32136 ;; Return value:  Size  Location     Type
 32137 ;;                  1    wreg      enum E10442
 32138 ;; Registers used:
 32139 ;;		wreg, status,2
 32140 ;; Tracked objects:
 32141 ;;		On entry : 3F/2
 32142 ;;		On exit  : 3F/2
 32143 ;;		Unchanged: 0/0
 32144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32149 ;;Total ram usage:        0 bytes
 32150 ;; Hardware stack levels used: 1
 32151 ;; Hardware stack levels required when called: 4
 32152 ;; This function calls:
 32153 ;;		Nothing
 32154 ;; This function is called by:
 32155 ;;		_I2C1_MasterFsm
 32156 ;; This function uses a non-reentrant model
 32157 ;;
 32158                           
 32159                           	psect	text143
 32160  009FE2                     __ptext143:
 32161                           	callstack 0
 32162  009FE2                     _I2C1_DO_RESET:
 32163                           	callstack 17
 32164                           
 32165                           ; BSR set to: 2
 32166                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 32167                           
 32168                           ;incstack = 0
 32169  009FE2  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 32170                           
 32171                           ; BSR set to: 2
 32172                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 32173  009FE4  0E00               	movlw	0
 32174  009FE6  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 32175                           
 32176                           ; BSR set to: 2
 32177                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 32178  009FE8  0E0E               	movlw	14
 32179                           
 32180                           ; BSR set to: 2
 32181  009FEA  0012               	return		;funcret
 32182  009FEC                     __end_of_I2C1_DO_RESET:
 32183                           	callstack 0
 32184                           
 32185 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 32186 ;; Defined at:
 32187 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 32188 ;; Parameters:    Size  Location     Type
 32189 ;;		None
 32190 ;; Auto vars:     Size  Location     Type
 32191 ;;		None
 32192 ;; Return value:  Size  Location     Type
 32193 ;;                  1    wreg      enum E10442
 32194 ;; Registers used:
 32195 ;;		wreg, cstack
 32196 ;; Tracked objects:
 32197 ;;		On entry : 0/2
 32198 ;;		On exit  : 0/0
 32199 ;;		Unchanged: 0/0
 32200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32205 ;;Total ram usage:        0 bytes
 32206 ;; Hardware stack levels used: 1
 32207 ;; Hardware stack levels required when called: 5
 32208 ;; This function calls:
 32209 ;;		_I2C1_MasterSendNack
 32210 ;; This function is called by:
 32211 ;;		_I2C1_DO_RX
 32212 ;;		_I2C1_MasterFsm
 32213 ;; This function uses a non-reentrant model
 32214 ;;
 32215                           
 32216                           	psect	text144
 32217  00A010                     __ptext144:
 32218                           	callstack 0
 32219  00A010                     _I2C1_DO_RX_NACK_RESTART:
 32220                           	callstack 16
 32221                           
 32222                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 32223                           
 32224                           ; BSR set to: 2
 32225                           ;incstack = 0
 32226  00A010  EC37  F050         	call	_I2C1_MasterSendNack	;wreg free
 32227                           
 32228                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 32229  00A014  0E09               	movlw	9
 32230  00A016  0012               	return		;funcret
 32231  00A018                     __end_of_I2C1_DO_RX_NACK_RESTART:
 32232                           	callstack 0
 32233                           
 32234 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 32235 ;; Defined at:
 32236 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 32237 ;; Parameters:    Size  Location     Type
 32238 ;;		None
 32239 ;; Auto vars:     Size  Location     Type
 32240 ;;		None
 32241 ;; Return value:  Size  Location     Type
 32242 ;;                  1    wreg      enum E10442
 32243 ;; Registers used:
 32244 ;;		wreg, cstack
 32245 ;; Tracked objects:
 32246 ;;		On entry : 0/2
 32247 ;;		On exit  : 0/0
 32248 ;;		Unchanged: 0/0
 32249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32254 ;;Total ram usage:        0 bytes
 32255 ;; Hardware stack levels used: 1
 32256 ;; Hardware stack levels required when called: 5
 32257 ;; This function calls:
 32258 ;;		_I2C1_MasterSendNack
 32259 ;; This function is called by:
 32260 ;;		_I2C1_DO_RX
 32261 ;;		_I2C1_MasterFsm
 32262 ;; This function uses a non-reentrant model
 32263 ;;
 32264                           
 32265                           	psect	text145
 32266  00A018                     __ptext145:
 32267                           	callstack 0
 32268  00A018                     _I2C1_DO_RX_NACK_STOP:
 32269                           	callstack 16
 32270                           
 32271                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 32272                           
 32273                           ;incstack = 0
 32274  00A018  EC37  F050         	call	_I2C1_MasterSendNack	;wreg free
 32275                           
 32276                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 32277  00A01C  0E0A               	movlw	10
 32278  00A01E  0012               	return		;funcret
 32279  00A020                     __end_of_I2C1_DO_RX_NACK_STOP:
 32280                           	callstack 0
 32281                           
 32282 ;; *************** function _I2C1_DO_RX_ACK *****************
 32283 ;; Defined at:
 32284 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 32285 ;; Parameters:    Size  Location     Type
 32286 ;;		None
 32287 ;; Auto vars:     Size  Location     Type
 32288 ;;		None
 32289 ;; Return value:  Size  Location     Type
 32290 ;;                  1    wreg      enum E10442
 32291 ;; Registers used:
 32292 ;;		wreg, cstack
 32293 ;; Tracked objects:
 32294 ;;		On entry : 3F/2
 32295 ;;		On exit  : 3F/2
 32296 ;;		Unchanged: 3F/0
 32297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32302 ;;Total ram usage:        0 bytes
 32303 ;; Hardware stack levels used: 1
 32304 ;; Hardware stack levels required when called: 5
 32305 ;; This function calls:
 32306 ;;		_I2C1_MasterSendAck
 32307 ;; This function is called by:
 32308 ;;		_I2C1_MasterFsm
 32309 ;; This function uses a non-reentrant model
 32310 ;;
 32311                           
 32312                           	psect	text146
 32313  00A020                     __ptext146:
 32314                           	callstack 0
 32315  00A020                     _I2C1_DO_RX_ACK:
 32316                           	callstack 16
 32317                           
 32318                           ; BSR set to: 2
 32319                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 32320                           
 32321                           ;incstack = 0
 32322  00A020  EC34  F050         	call	_I2C1_MasterSendAck	;wreg free
 32323                           
 32324                           ; BSR set to: 2
 32325                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 32326  00A024  0E05               	movlw	5
 32327                           
 32328                           ; BSR set to: 2
 32329  00A026  0012               	return		;funcret
 32330  00A028                     __end_of_I2C1_DO_RX_ACK:
 32331                           	callstack 0
 32332                           
 32333 ;; *************** function _I2C1_DO_SEND_STOP *****************
 32334 ;; Defined at:
 32335 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 32336 ;; Parameters:    Size  Location     Type
 32337 ;;		None
 32338 ;; Auto vars:     Size  Location     Type
 32339 ;;		None
 32340 ;; Return value:  Size  Location     Type
 32341 ;;                  1    wreg      enum E10442
 32342 ;; Registers used:
 32343 ;;		wreg, cstack
 32344 ;; Tracked objects:
 32345 ;;		On entry : 0/2
 32346 ;;		On exit  : 0/0
 32347 ;;		Unchanged: 0/0
 32348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32353 ;;Total ram usage:        0 bytes
 32354 ;; Hardware stack levels used: 1
 32355 ;; Hardware stack levels required when called: 5
 32356 ;; This function calls:
 32357 ;;		_I2C1_MasterStop
 32358 ;; This function is called by:
 32359 ;;		_I2C1_DO_TX
 32360 ;;		_I2C1_DO_TX_EMPTY
 32361 ;;		_I2C1_DO_ADDRESS_NACK
 32362 ;;		_I2C1_MasterFsm
 32363 ;; This function uses a non-reentrant model
 32364 ;;
 32365                           
 32366                           	psect	text147
 32367  00A028                     __ptext147:
 32368                           	callstack 0
 32369  00A028                     _I2C1_DO_SEND_STOP:
 32370                           	callstack 15
 32371                           
 32372                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 32373                           
 32374                           ; BSR set to: 2
 32375                           ;incstack = 0
 32376  00A028  EC4F  F050         	call	_I2C1_MasterStop	;wreg free
 32377                           
 32378                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 32379  00A02C  0E00               	movlw	0
 32380  00A02E  0012               	return		;funcret
 32381  00A030                     __end_of_I2C1_DO_SEND_STOP:
 32382                           	callstack 0
 32383                           
 32384 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 32385 ;; Defined at:
 32386 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 32387 ;; Parameters:    Size  Location     Type
 32388 ;;		None
 32389 ;; Auto vars:     Size  Location     Type
 32390 ;;		None
 32391 ;; Return value:  Size  Location     Type
 32392 ;;                  1    wreg      enum E10442
 32393 ;; Registers used:
 32394 ;;		wreg, cstack
 32395 ;; Tracked objects:
 32396 ;;		On entry : 0/2
 32397 ;;		On exit  : 0/0
 32398 ;;		Unchanged: 0/0
 32399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32404 ;;Total ram usage:        0 bytes
 32405 ;; Hardware stack levels used: 1
 32406 ;; Hardware stack levels required when called: 5
 32407 ;; This function calls:
 32408 ;;		_I2C1_MasterEnableRestart
 32409 ;; This function is called by:
 32410 ;;		_I2C1_DO_TX_EMPTY
 32411 ;;		_I2C1_DO_ADDRESS_NACK
 32412 ;;		_I2C1_MasterFsm
 32413 ;; This function uses a non-reentrant model
 32414 ;;
 32415                           
 32416                           	psect	text148
 32417  00A030                     __ptext148:
 32418                           	callstack 0
 32419  00A030                     _I2C1_DO_SEND_RESTART:
 32420                           	callstack 15
 32421                           
 32422                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 32423                           
 32424                           ;incstack = 0
 32425  00A030  EC51  F050         	call	_I2C1_MasterEnableRestart	;wreg free
 32426                           
 32427                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 32428  00A034  0E01               	movlw	1
 32429  00A036  0012               	return		;funcret
 32430  00A038                     __end_of_I2C1_DO_SEND_RESTART:
 32431                           	callstack 0
 32432                           
 32433 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 32434 ;; Defined at:
 32435 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 32436 ;; Parameters:    Size  Location     Type
 32437 ;;		None
 32438 ;; Auto vars:     Size  Location     Type
 32439 ;;		None
 32440 ;; Return value:  Size  Location     Type
 32441 ;;                  1    wreg      enum E10442
 32442 ;; Registers used:
 32443 ;;		wreg, cstack
 32444 ;; Tracked objects:
 32445 ;;		On entry : 0/2
 32446 ;;		On exit  : 0/0
 32447 ;;		Unchanged: 0/0
 32448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32453 ;;Total ram usage:        0 bytes
 32454 ;; Hardware stack levels used: 1
 32455 ;; Hardware stack levels required when called: 5
 32456 ;; This function calls:
 32457 ;;		_I2C1_MasterEnableRestart
 32458 ;; This function is called by:
 32459 ;;		_I2C1_DO_TX
 32460 ;;		_I2C1_MasterFsm
 32461 ;; This function uses a non-reentrant model
 32462 ;;
 32463                           
 32464                           	psect	text149
 32465  00A038                     __ptext149:
 32466                           	callstack 0
 32467  00A038                     _I2C1_DO_SEND_RESTART_WRITE:
 32468                           	callstack 15
 32469                           
 32470                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 32471                           
 32472                           ;incstack = 0
 32473  00A038  EC51  F050         	call	_I2C1_MasterEnableRestart	;wreg free
 32474                           
 32475                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 32476  00A03C  0E02               	movlw	2
 32477  00A03E  0012               	return		;funcret
 32478  00A040                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 32479                           	callstack 0
 32480                           
 32481 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 32482 ;; Defined at:
 32483 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 32484 ;; Parameters:    Size  Location     Type
 32485 ;;		None
 32486 ;; Auto vars:     Size  Location     Type
 32487 ;;		None
 32488 ;; Return value:  Size  Location     Type
 32489 ;;                  1    wreg      enum E10442
 32490 ;; Registers used:
 32491 ;;		wreg, cstack
 32492 ;; Tracked objects:
 32493 ;;		On entry : 0/2
 32494 ;;		On exit  : 0/0
 32495 ;;		Unchanged: 0/0
 32496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32501 ;;Total ram usage:        0 bytes
 32502 ;; Hardware stack levels used: 1
 32503 ;; Hardware stack levels required when called: 5
 32504 ;; This function calls:
 32505 ;;		_I2C1_MasterEnableRestart
 32506 ;; This function is called by:
 32507 ;;		_I2C1_DO_TX
 32508 ;;		_I2C1_MasterFsm
 32509 ;; This function uses a non-reentrant model
 32510 ;;
 32511                           
 32512                           	psect	text150
 32513  00A040                     __ptext150:
 32514                           	callstack 0
 32515  00A040                     _I2C1_DO_SEND_RESTART_READ:
 32516                           	callstack 15
 32517                           
 32518                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 32519                           
 32520                           ;incstack = 0
 32521  00A040  EC51  F050         	call	_I2C1_MasterEnableRestart	;wreg free
 32522                           
 32523                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 32524  00A044  0E01               	movlw	1
 32525  00A046  0012               	return		;funcret
 32526  00A048                     __end_of_I2C1_DO_SEND_RESTART_READ:
 32527                           	callstack 0
 32528                           
 32529 ;; *************** function _I2C1_DO_RCEN *****************
 32530 ;; Defined at:
 32531 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 32532 ;; Parameters:    Size  Location     Type
 32533 ;;		None
 32534 ;; Auto vars:     Size  Location     Type
 32535 ;;		None
 32536 ;; Return value:  Size  Location     Type
 32537 ;;                  1    wreg      enum E10442
 32538 ;; Registers used:
 32539 ;;		wreg, cstack
 32540 ;; Tracked objects:
 32541 ;;		On entry : 3F/2
 32542 ;;		On exit  : 3F/2
 32543 ;;		Unchanged: 0/0
 32544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32549 ;;Total ram usage:        0 bytes
 32550 ;; Hardware stack levels used: 1
 32551 ;; Hardware stack levels required when called: 5
 32552 ;; This function calls:
 32553 ;;		_I2C1_MasterStartRx
 32554 ;; This function is called by:
 32555 ;;		_I2C1_MasterFsm
 32556 ;; This function uses a non-reentrant model
 32557 ;;
 32558                           
 32559                           	psect	text151
 32560  009FEC                     __ptext151:
 32561                           	callstack 0
 32562  009FEC                     _I2C1_DO_RCEN:
 32563                           	callstack 16
 32564                           
 32565                           ; BSR set to: 2
 32566                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 32567                           
 32568                           ;incstack = 0
 32569  009FEC  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 32570                           
 32571                           ; BSR set to: 2
 32572                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 32573  009FEE  EC49  F050         	call	_I2C1_MasterStartRx	;wreg free
 32574                           
 32575                           ; BSR set to: 2
 32576                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 32577  009FF2  0E04               	movlw	4
 32578                           
 32579                           ; BSR set to: 2
 32580  009FF4  0012               	return		;funcret
 32581  009FF6                     __end_of_I2C1_DO_RCEN:
 32582                           	callstack 0
 32583                           
 32584 ;; *************** function _I2C1_DO_RX *****************
 32585 ;; Defined at:
 32586 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 32587 ;; Parameters:    Size  Location     Type
 32588 ;;		None
 32589 ;; Auto vars:     Size  Location     Type
 32590 ;;		None
 32591 ;; Return value:  Size  Location     Type
 32592 ;;                  1    wreg      enum E10442
 32593 ;; Registers used:
 32594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32595 ;; Tracked objects:
 32596 ;;		On entry : 3F/2
 32597 ;;		On exit  : 0/0
 32598 ;;		Unchanged: 0/0
 32599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32602 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32603 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32604 ;;Total ram usage:        2 bytes
 32605 ;; Hardware stack levels used: 1
 32606 ;; Hardware stack levels required when called: 7
 32607 ;; This function calls:
 32608 ;;		Absolute function
 32609 ;;		_I2C1_CallbackReturnReset
 32610 ;;		_I2C1_CallbackReturnStop
 32611 ;;		_I2C1_DO_RX_NACK_RESTART
 32612 ;;		_I2C1_DO_RX_NACK_STOP
 32613 ;;		_I2C1_MasterGetRxData
 32614 ;;		_I2C1_MasterSendAck
 32615 ;;		_rd1RegCompleteHandler
 32616 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32617 ;;		_rd2RegCompleteHandler
 32618 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32619 ;;		_rdBlkRegCompleteHandler
 32620 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32621 ;;		_wr1RegCompleteHandler
 32622 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32623 ;;		_wr2RegCompleteHandler
 32624 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32625 ;; This function is called by:
 32626 ;;		_I2C1_MasterFsm
 32627 ;; This function uses a non-reentrant model
 32628 ;;
 32629                           
 32630                           	psect	text152
 32631  0088CA                     __ptext152:
 32632                           	callstack 0
 32633  0088CA                     _I2C1_DO_RX:
 32634                           	callstack 14
 32635                           
 32636                           ; BSR set to: 2
 32637                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 32638                           
 32639                           ; BSR set to: 2
 32640                           ;incstack = 0
 32641  0088CA  EC47  F050         	call	_I2C1_MasterGetRxData	;wreg free
 32642  0088CE  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 32643  0088D2  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 32644  0088D6  6EDF               	movwf	indf2,c
 32645                           
 32646                           ; BSR set to: 2
 32647  0088D8  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 32648  0088DA  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 32649                           
 32650                           ; BSR set to: 2
 32651                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 32652  0088DC  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 32653  0088DE  A0D8               	btfss	status,0,c
 32654  0088E0  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 32655  0088E2  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 32656  0088E4  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 32657  0088E6  B4D8               	btfsc	status,2,c
 32658  0088E8  D004               	goto	l690
 32659                           
 32660                           ; BSR set to: 2
 32661                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 32662  0088EA  EC34  F050         	call	_I2C1_MasterSendAck	;wreg free
 32663                           
 32664                           ; BSR set to: 2
 32665                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 32666  0088EE  0E05               	movlw	5
 32667  0088F0  0012               	return	
 32668  0088F2                     l690:
 32669                           
 32670                           ; BSR set to: 2
 32671                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 32672  0088F2  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 32673                           
 32674                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 32675  0088F4  D006               	goto	l20337
 32676  0088F6                     l20327:
 32677                           
 32678                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 32679  0088F6  EC08  F050         	call	_I2C1_DO_RX_NACK_RESTART	;wreg free
 32680  0088FA  0012               	return	
 32681  0088FC                     l20331:
 32682                           
 32683                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 32684  0088FC  EC0C  F050         	call	_I2C1_DO_RX_NACK_STOP	;wreg free
 32685  008900  0012               	return	
 32686  008902                     l20337:
 32687                           
 32688                           ; BSR set to: 2
 32689  008902  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 32690  008906  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 32691  00890A  D801               	call	u23408
 32692  00890C  D009               	goto	u23409
 32693  00890E                     u23408:
 32694  00890E  0005               	push	
 32695  008910  6EFA               	movwf	pclath,c
 32696  008912  513C               	movf	_I2C1_Status& (0+255),w,b
 32697  008914  6EFD               	movwf	tosl,c
 32698  008916  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 32699  008918  6EFE               	movwf	tosh,c
 32700  00891A  6AFF               	clrf	tosu,c
 32701  00891C  50FA               	movf	pclath,w,c
 32702  00891E  0012               	return		;indir
 32703  008920                     u23409:
 32704  008920  6E1B               	movwf	??_I2C1_DO_RX^0,c
 32705  008922  6A1C               	clrf	(??_I2C1_DO_RX+1)^0,c
 32706                           
 32707                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32708                           ; Switch size 1, requested type "simple"
 32709                           ; Number of cases is 1, Range of values is 0 to 0
 32710                           ; switch strategies available:
 32711                           ; Name         Instructions Cycles
 32712                           ; simple_byte            4     3 (average)
 32713                           ;	Chosen strategy is simple_byte
 32714  008924  501C               	movf	(??_I2C1_DO_RX+1)^0,w,c
 32715  008926  0A00               	xorlw	0	; case 0
 32716  008928  A4D8               	btfss	status,2,c
 32717  00892A  D7E8               	goto	l20331
 32718                           
 32719                           ; Switch size 1, requested type "simple"
 32720                           ; Number of cases is 4, Range of values is 1 to 4
 32721                           ; switch strategies available:
 32722                           ; Name         Instructions Cycles
 32723                           ; simple_byte           13     7 (average)
 32724                           ;	Chosen strategy is simple_byte
 32725  00892C  501B               	movf	??_I2C1_DO_RX^0,w,c
 32726  00892E  0A01               	xorlw	1	; case 1
 32727  008930  B4D8               	btfsc	status,2,c
 32728  008932  D7E4               	goto	l20331
 32729  008934  0A03               	xorlw	3	; case 2
 32730  008936  B4D8               	btfsc	status,2,c
 32731  008938  D7DE               	goto	l20327
 32732  00893A  0A01               	xorlw	1	; case 3
 32733  00893C  B4D8               	btfsc	status,2,c
 32734  00893E  D7DB               	goto	l20327
 32735  008940  0A07               	xorlw	7	; case 4
 32736  008942  D7DC               	goto	l20331
 32737  008944                     __end_of_I2C1_DO_RX:
 32738                           	callstack 0
 32739                           
 32740 ;; *************** function _I2C1_DO_TX *****************
 32741 ;; Defined at:
 32742 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 32743 ;; Parameters:    Size  Location     Type
 32744 ;;		None
 32745 ;; Auto vars:     Size  Location     Type
 32746 ;;		None
 32747 ;; Return value:  Size  Location     Type
 32748 ;;                  1    wreg      enum E10442
 32749 ;; Registers used:
 32750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32751 ;; Tracked objects:
 32752 ;;		On entry : 3F/2
 32753 ;;		On exit  : 0/0
 32754 ;;		Unchanged: 0/0
 32755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32758 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32759 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32760 ;;Total ram usage:        2 bytes
 32761 ;; Hardware stack levels used: 1
 32762 ;; Hardware stack levels required when called: 7
 32763 ;; This function calls:
 32764 ;;		Absolute function
 32765 ;;		_I2C1_CallbackReturnReset
 32766 ;;		_I2C1_CallbackReturnStop
 32767 ;;		_I2C1_DO_SEND_RESTART_READ
 32768 ;;		_I2C1_DO_SEND_RESTART_WRITE
 32769 ;;		_I2C1_DO_SEND_STOP
 32770 ;;		_I2C1_MasterIsNack
 32771 ;;		_I2C1_MasterSendTxData
 32772 ;;		_rd1RegCompleteHandler
 32773 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32774 ;;		_rd2RegCompleteHandler
 32775 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32776 ;;		_rdBlkRegCompleteHandler
 32777 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32778 ;;		_wr1RegCompleteHandler
 32779 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32780 ;;		_wr2RegCompleteHandler
 32781 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32782 ;; This function is called by:
 32783 ;;		_I2C1_MasterFsm
 32784 ;; This function uses a non-reentrant model
 32785 ;;
 32786                           
 32787                           	psect	text153
 32788  00842A                     __ptext153:
 32789                           	callstack 0
 32790  00842A                     _I2C1_DO_TX:
 32791                           	callstack 14
 32792                           
 32793                           ; BSR set to: 2
 32794                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 32795                           
 32796                           ;incstack = 0
 32797  00842A  ECB8  F04F         	call	_I2C1_MasterIsNack	;wreg free
 32798  00842E  0900               	iorlw	0
 32799  008430  A4D8               	btfss	status,2,c
 32800  008432  D00A               	goto	l20297
 32801  008434  D02A               	goto	l674
 32802  008436                     l20283:
 32803                           
 32804                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 32805  008436  EC20  F050         	call	_I2C1_DO_SEND_RESTART_READ	;wreg free
 32806  00843A  0012               	return	
 32807  00843C                     l20287:
 32808                           
 32809                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 32810  00843C  EC1C  F050         	call	_I2C1_DO_SEND_RESTART_WRITE	;wreg free
 32811  008440  0012               	return	
 32812  008442                     l20291:
 32813                           
 32814                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 32815  008442  EC14  F050         	call	_I2C1_DO_SEND_STOP	;wreg free
 32816  008446  0012               	return	
 32817  008448                     l20297:
 32818                           
 32819                           ; BSR set to: 2
 32820  008448  C24E  F019         	movff	_I2C1_Status+18,I2C1_CallbackReturnReset@funPtr
 32821  00844C  C24F  F01A         	movff	_I2C1_Status+19,I2C1_CallbackReturnReset@funPtr+1
 32822  008450  D801               	call	u23378
 32823  008452  D009               	goto	u23379
 32824  008454                     u23378:
 32825  008454  0005               	push	
 32826  008456  6EFA               	movwf	pclath,c
 32827  008458  5142               	movf	(_I2C1_Status+6)& (0+255),w,b
 32828  00845A  6EFD               	movwf	tosl,c
 32829  00845C  5143               	movf	(_I2C1_Status+7)& (0+255),w,b
 32830  00845E  6EFE               	movwf	tosh,c
 32831  008460  6AFF               	clrf	tosu,c
 32832  008462  50FA               	movf	pclath,w,c
 32833  008464  0012               	return		;indir
 32834  008466                     u23379:
 32835  008466  6E1B               	movwf	??_I2C1_DO_TX^0,c
 32836  008468  6A1C               	clrf	(??_I2C1_DO_TX+1)^0,c
 32837                           
 32838                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32839                           ; Switch size 1, requested type "simple"
 32840                           ; Number of cases is 1, Range of values is 0 to 0
 32841                           ; switch strategies available:
 32842                           ; Name         Instructions Cycles
 32843                           ; simple_byte            4     3 (average)
 32844                           ;	Chosen strategy is simple_byte
 32845  00846A  501C               	movf	(??_I2C1_DO_TX+1)^0,w,c
 32846  00846C  0A00               	xorlw	0	; case 0
 32847  00846E  A4D8               	btfss	status,2,c
 32848  008470  D7E8               	goto	l20291
 32849                           
 32850                           ; Switch size 1, requested type "simple"
 32851                           ; Number of cases is 4, Range of values is 1 to 4
 32852                           ; switch strategies available:
 32853                           ; Name         Instructions Cycles
 32854                           ; simple_byte           13     7 (average)
 32855                           ;	Chosen strategy is simple_byte
 32856  008472  501B               	movf	??_I2C1_DO_TX^0,w,c
 32857  008474  0A01               	xorlw	1	; case 1
 32858  008476  B4D8               	btfsc	status,2,c
 32859  008478  D7E4               	goto	l20291
 32860  00847A  0A03               	xorlw	3	; case 2
 32861  00847C  B4D8               	btfsc	status,2,c
 32862  00847E  D7DB               	goto	l20283
 32863  008480  0A01               	xorlw	1	; case 3
 32864  008482  B4D8               	btfsc	status,2,c
 32865  008484  D7DB               	goto	l20287
 32866  008486  0A07               	xorlw	7	; case 4
 32867  008488  D7DC               	goto	l20291
 32868  00848A                     l674:
 32869                           
 32870                           ; BSR set to: 2
 32871                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 32872  00848A  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 32873                           
 32874                           ; BSR set to: 2
 32875                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 32876  00848C  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 32877  008490  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 32878  008494  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 32879  008496  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 32880  008498  50DF               	movf	indf2,w,c
 32881  00849A  EC24  F050         	call	_I2C1_MasterSendTxData
 32882                           
 32883                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 32884  00849E  0102               	movlb	2	; () banked
 32885  0084A0  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 32886  0084A2  A0D8               	btfss	status,0,c
 32887  0084A4  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 32888  0084A6  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 32889  0084A8  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 32890  0084AA  A4D8               	btfss	status,2,c
 32891  0084AC  D002               	goto	l20305
 32892                           
 32893                           ; BSR set to: 2
 32894  0084AE  0E06               	movlw	6
 32895  0084B0  0012               	return	
 32896  0084B2                     l20305:
 32897                           
 32898                           ; BSR set to: 2
 32899  0084B2  0E03               	movlw	3
 32900  0084B4  0012               	return		;funcret
 32901  0084B6                     __end_of_I2C1_DO_TX:
 32902                           	callstack 0
 32903                           
 32904 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 32905 ;; Defined at:
 32906 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 32907 ;; Parameters:    Size  Location     Type
 32908 ;;		None
 32909 ;; Auto vars:     Size  Location     Type
 32910 ;;		None
 32911 ;; Return value:  Size  Location     Type
 32912 ;;                  1    wreg      enum E10442
 32913 ;; Registers used:
 32914 ;;		wreg, status,2, status,0, cstack
 32915 ;; Tracked objects:
 32916 ;;		On entry : 3F/2
 32917 ;;		On exit  : 0/0
 32918 ;;		Unchanged: 0/0
 32919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32924 ;;Total ram usage:        0 bytes
 32925 ;; Hardware stack levels used: 1
 32926 ;; Hardware stack levels required when called: 5
 32927 ;; This function calls:
 32928 ;;		_I2C1_MasterSendTxData
 32929 ;; This function is called by:
 32930 ;;		_I2C1_MasterFsm
 32931 ;; This function uses a non-reentrant model
 32932 ;;
 32933                           
 32934                           	psect	text154
 32935  009F54                     __ptext154:
 32936                           	callstack 0
 32937  009F54                     _I2C1_DO_SEND_ADR_WRITE:
 32938                           	callstack 16
 32939                           
 32940                           ; BSR set to: 2
 32941                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 32942                           
 32943                           ;incstack = 0
 32944  009F54  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 32945                           
 32946                           ; BSR set to: 2
 32947                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 32948  009F56  5158               	movf	(_I2C1_Status+28)& (0+255),w,b
 32949  009F58  2558               	addwf	(_I2C1_Status+28)& (0+255),w,b
 32950  009F5A  EC24  F050         	call	_I2C1_MasterSendTxData
 32951                           
 32952                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 32953  009F5E  0E03               	movlw	3
 32954  009F60  0012               	return		;funcret
 32955  009F62                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 32956                           	callstack 0
 32957                           
 32958 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 32959 ;; Defined at:
 32960 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 32961 ;; Parameters:    Size  Location     Type
 32962 ;;		None
 32963 ;; Auto vars:     Size  Location     Type
 32964 ;;		None
 32965 ;; Return value:  Size  Location     Type
 32966 ;;                  1    wreg      enum E10442
 32967 ;; Registers used:
 32968 ;;		wreg, status,0, cstack
 32969 ;; Tracked objects:
 32970 ;;		On entry : 3F/2
 32971 ;;		On exit  : 0/0
 32972 ;;		Unchanged: 0/0
 32973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32978 ;;Total ram usage:        0 bytes
 32979 ;; Hardware stack levels used: 1
 32980 ;; Hardware stack levels required when called: 5
 32981 ;; This function calls:
 32982 ;;		_I2C1_MasterSendTxData
 32983 ;; This function is called by:
 32984 ;;		_I2C1_MasterFsm
 32985 ;; This function uses a non-reentrant model
 32986 ;;
 32987                           
 32988                           	psect	text155
 32989  009F62                     __ptext155:
 32990                           	callstack 0
 32991  009F62                     _I2C1_DO_SEND_ADR_READ:
 32992                           	callstack 16
 32993                           
 32994                           ; BSR set to: 2
 32995                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 32996                           
 32997                           ;incstack = 0
 32998  009F62  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 32999                           
 33000                           ; BSR set to: 2
 33001                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 33002  009F64  80D8               	bsf	status,0,c
 33003  009F66  3558               	rlcf	(_I2C1_Status+28)& (0+255),w,b
 33004  009F68  EC24  F050         	call	_I2C1_MasterSendTxData
 33005                           
 33006                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 33007  009F6C  0E05               	movlw	5
 33008  009F6E  0012               	return		;funcret
 33009  009F70                     __end_of_I2C1_DO_SEND_ADR_READ:
 33010                           	callstack 0
 33011                           
 33012 ;; *************** function _I2C1_DO_IDLE *****************
 33013 ;; Defined at:
 33014 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 33015 ;; Parameters:    Size  Location     Type
 33016 ;;		None
 33017 ;; Auto vars:     Size  Location     Type
 33018 ;;		None
 33019 ;; Return value:  Size  Location     Type
 33020 ;;                  1    wreg      enum E10442
 33021 ;; Registers used:
 33022 ;;		wreg, status,2
 33023 ;; Tracked objects:
 33024 ;;		On entry : 3F/2
 33025 ;;		On exit  : 3F/2
 33026 ;;		Unchanged: 0/0
 33027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33032 ;;Total ram usage:        0 bytes
 33033 ;; Hardware stack levels used: 1
 33034 ;; Hardware stack levels required when called: 4
 33035 ;; This function calls:
 33036 ;;		Nothing
 33037 ;; This function is called by:
 33038 ;;		_I2C1_MasterFsm
 33039 ;; This function uses a non-reentrant model
 33040 ;;
 33041                           
 33042                           	psect	text156
 33043  009FF6                     __ptext156:
 33044                           	callstack 0
 33045  009FF6                     _I2C1_DO_IDLE:
 33046                           	callstack 17
 33047                           
 33048                           ; BSR set to: 2
 33049                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 33050                           
 33051                           ;incstack = 0
 33052  009FF6  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 33053                           
 33054                           ; BSR set to: 2
 33055                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 33056  009FF8  0E00               	movlw	0
 33057  009FFA  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 33058                           
 33059                           ; BSR set to: 2
 33060                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 33061  009FFC  0E0E               	movlw	14
 33062                           
 33063                           ; BSR set to: 2
 33064  009FFE  0012               	return		;funcret
 33065  00A000                     __end_of_I2C1_DO_IDLE:
 33066                           	callstack 0
 33067                           
 33068 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 33069 ;; Defined at:
 33070 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 33071 ;; Parameters:    Size  Location     Type
 33072 ;;		None
 33073 ;; Auto vars:     Size  Location     Type
 33074 ;;		None
 33075 ;; Return value:  Size  Location     Type
 33076 ;;                  1    wreg      enum E10442
 33077 ;; Registers used:
 33078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 33079 ;; Tracked objects:
 33080 ;;		On entry : 3F/2
 33081 ;;		On exit  : 0/0
 33082 ;;		Unchanged: 0/0
 33083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33086 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33087 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33088 ;;Total ram usage:        2 bytes
 33089 ;; Hardware stack levels used: 1
 33090 ;; Hardware stack levels required when called: 7
 33091 ;; This function calls:
 33092 ;;		Absolute function
 33093 ;;		_I2C1_CallbackReturnReset
 33094 ;;		_I2C1_CallbackReturnStop
 33095 ;;		_I2C1_DO_SEND_RESTART
 33096 ;;		_I2C1_DO_SEND_STOP
 33097 ;;		_I2C1_MasterSetIrq
 33098 ;;		_rd1RegCompleteHandler
 33099 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 33100 ;;		_rd2RegCompleteHandler
 33101 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 33102 ;;		_rdBlkRegCompleteHandler
 33103 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 33104 ;;		_wr1RegCompleteHandler
 33105 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 33106 ;;		_wr2RegCompleteHandler
 33107 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 33108 ;; This function is called by:
 33109 ;;		_I2C1_MasterFsm
 33110 ;; This function uses a non-reentrant model
 33111 ;;
 33112                           
 33113                           	psect	text157
 33114  008F5A                     __ptext157:
 33115                           	callstack 0
 33116  008F5A                     _I2C1_DO_TX_EMPTY:
 33117                           	callstack 14
 33118                           
 33119                           ; BSR set to: 2
 33120                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 33121                           
 33122                           ; BSR set to: 2
 33123                           ;incstack = 0
 33124  008F5A  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 33125                           
 33126                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 33127  008F5C  D00A               	goto	l20369
 33128  008F5E                     l20353:
 33129                           
 33130                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 33131  008F5E  EC18  F050         	call	_I2C1_DO_SEND_RESTART	;wreg free
 33132  008F62  0012               	return	
 33133  008F64                     l20357:
 33134                           
 33135                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 33136  008F64  EC31  F050         	call	_I2C1_MasterSetIrq	;wreg free
 33137                           
 33138                           ; BSR set to: 14
 33139                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 33140  008F68  0E03               	movlw	3
 33141  008F6A  0012               	return	
 33142  008F6C                     l20363:
 33143                           
 33144                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 33145  008F6C  EC14  F050         	call	_I2C1_DO_SEND_STOP	;wreg free
 33146  008F70  0012               	return	
 33147  008F72                     l20369:
 33148                           
 33149                           ; BSR set to: 2
 33150  008F72  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 33151  008F76  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 33152  008F7A  D801               	call	u23418
 33153  008F7C  D009               	goto	u23419
 33154  008F7E                     u23418:
 33155  008F7E  0005               	push	
 33156  008F80  6EFA               	movwf	pclath,c
 33157  008F82  513C               	movf	_I2C1_Status& (0+255),w,b
 33158  008F84  6EFD               	movwf	tosl,c
 33159  008F86  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 33160  008F88  6EFE               	movwf	tosh,c
 33161  008F8A  6AFF               	clrf	tosu,c
 33162  008F8C  50FA               	movf	pclath,w,c
 33163  008F8E  0012               	return		;indir
 33164  008F90                     u23419:
 33165  008F90  6E1B               	movwf	??_I2C1_DO_TX_EMPTY^0,c
 33166  008F92  6A1C               	clrf	(??_I2C1_DO_TX_EMPTY+1)^0,c
 33167                           
 33168                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33169                           ; Switch size 1, requested type "simple"
 33170                           ; Number of cases is 1, Range of values is 0 to 0
 33171                           ; switch strategies available:
 33172                           ; Name         Instructions Cycles
 33173                           ; simple_byte            4     3 (average)
 33174                           ;	Chosen strategy is simple_byte
 33175  008F94  501C               	movf	(??_I2C1_DO_TX_EMPTY+1)^0,w,c
 33176  008F96  0A00               	xorlw	0	; case 0
 33177  008F98  A4D8               	btfss	status,2,c
 33178  008F9A  D7E8               	goto	l20363
 33179                           
 33180                           ; Switch size 1, requested type "simple"
 33181                           ; Number of cases is 4, Range of values is 1 to 4
 33182                           ; switch strategies available:
 33183                           ; Name         Instructions Cycles
 33184                           ; simple_byte           13     7 (average)
 33185                           ;	Chosen strategy is simple_byte
 33186  008F9C  501B               	movf	??_I2C1_DO_TX_EMPTY^0,w,c
 33187  008F9E  0A01               	xorlw	1	; case 1
 33188  008FA0  B4D8               	btfsc	status,2,c
 33189  008FA2  D7E4               	goto	l20363
 33190  008FA4  0A03               	xorlw	3	; case 2
 33191  008FA6  B4D8               	btfsc	status,2,c
 33192  008FA8  D7DA               	goto	l20353
 33193  008FAA  0A01               	xorlw	1	; case 3
 33194  008FAC  B4D8               	btfsc	status,2,c
 33195  008FAE  D7D7               	goto	l20353
 33196  008FB0  0A07               	xorlw	7	; case 4
 33197  008FB2  B4D8               	btfsc	status,2,c
 33198  008FB4  D7D7               	goto	l20357
 33199  008FB6  D7DA               	goto	l20363
 33200  008FB8                     __end_of_I2C1_DO_TX_EMPTY:
 33201                           	callstack 0
 33202                           
 33203 ;; *************** function _I2C1_MasterSetIrq *****************
 33204 ;; Defined at:
 33205 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 33206 ;; Parameters:    Size  Location     Type
 33207 ;;		None
 33208 ;; Auto vars:     Size  Location     Type
 33209 ;;		None
 33210 ;; Return value:  Size  Location     Type
 33211 ;;                  1    wreg      void 
 33212 ;; Registers used:
 33213 ;;		None
 33214 ;; Tracked objects:
 33215 ;;		On entry : 0/2
 33216 ;;		On exit  : 3F/E
 33217 ;;		Unchanged: 0/0
 33218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33223 ;;Total ram usage:        0 bytes
 33224 ;; Hardware stack levels used: 1
 33225 ;; Hardware stack levels required when called: 4
 33226 ;; This function calls:
 33227 ;;		Nothing
 33228 ;; This function is called by:
 33229 ;;		_I2C1_DO_TX_EMPTY
 33230 ;; This function uses a non-reentrant model
 33231 ;;
 33232                           
 33233                           	psect	text158
 33234  00A062                     __ptext158:
 33235                           	callstack 0
 33236  00A062                     _I2C1_MasterSetIrq:
 33237                           	callstack 16
 33238                           
 33239                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 33240                           
 33241                           ;incstack = 0
 33242  00A062  010E               	movlb	14	; () banked
 33243  00A064  81CD               	bsf	205,0,b	;volatile
 33244                           
 33245                           ; BSR set to: 14
 33246  00A066  0012               	return		;funcret
 33247  00A068                     __end_of_I2C1_MasterSetIrq:
 33248                           	callstack 0
 33249                           
 33250 ;; *************** function _I2C1_MasterIsNack *****************
 33251 ;; Defined at:
 33252 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 33253 ;; Parameters:    Size  Location     Type
 33254 ;;		None
 33255 ;; Auto vars:     Size  Location     Type
 33256 ;;		None
 33257 ;; Return value:  Size  Location     Type
 33258 ;;                  1    wreg      _Bool 
 33259 ;; Registers used:
 33260 ;;		wreg
 33261 ;; Tracked objects:
 33262 ;;		On entry : 3F/2
 33263 ;;		On exit  : 3F/2
 33264 ;;		Unchanged: 3F/0
 33265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33270 ;;Total ram usage:        0 bytes
 33271 ;; Hardware stack levels used: 1
 33272 ;; Hardware stack levels required when called: 4
 33273 ;; This function calls:
 33274 ;;		Nothing
 33275 ;; This function is called by:
 33276 ;;		_I2C1_MasterFsm
 33277 ;;		_I2C1_DO_TX
 33278 ;; This function uses a non-reentrant model
 33279 ;;
 33280                           
 33281                           	psect	text159
 33282  009F70                     __ptext159:
 33283                           	callstack 0
 33284  009F70                     _I2C1_MasterIsNack:
 33285                           	callstack 17
 33286                           
 33287                           ; BSR set to: 2
 33288                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 33289                           
 33290                           ; BSR set to: 14
 33291                           ;incstack = 0
 33292  009F70  AC97               	btfss	151,6,c	;volatile
 33293  009F72  D002               	goto	u23350
 33294  009F74  0E01               	movlw	1
 33295  009F76  0012               	return	
 33296  009F78                     u23350:
 33297  009F78  0E00               	movlw	0
 33298                           
 33299                           ; BSR set to: 2
 33300  009F7A  0012               	return		;funcret
 33301  009F7C                     __end_of_I2C1_MasterIsNack:
 33302                           	callstack 0
 33303                           
 33304 ;; *************** function _I2C1_MasterSendTxData *****************
 33305 ;; Defined at:
 33306 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 33307 ;; Parameters:    Size  Location     Type
 33308 ;;  data            1    wreg     unsigned char 
 33309 ;; Auto vars:     Size  Location     Type
 33310 ;;  data            1   15[COMRAM] unsigned char 
 33311 ;; Return value:  Size  Location     Type
 33312 ;;                  1    wreg      void 
 33313 ;; Registers used:
 33314 ;;		wreg
 33315 ;; Tracked objects:
 33316 ;;		On entry : 3F/2
 33317 ;;		On exit  : 0/0
 33318 ;;		Unchanged: 0/0
 33319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33321 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33323 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33324 ;;Total ram usage:        1 bytes
 33325 ;; Hardware stack levels used: 1
 33326 ;; Hardware stack levels required when called: 4
 33327 ;; This function calls:
 33328 ;;		Nothing
 33329 ;; This function is called by:
 33330 ;;		_I2C1_DO_SEND_ADR_READ
 33331 ;;		_I2C1_DO_SEND_ADR_WRITE
 33332 ;;		_I2C1_DO_TX
 33333 ;; This function uses a non-reentrant model
 33334 ;;
 33335                           
 33336                           	psect	text160
 33337  00A048                     __ptext160:
 33338                           	callstack 0
 33339  00A048                     _I2C1_MasterSendTxData:
 33340                           	callstack 16
 33341                           
 33342                           ; BSR set to: 2
 33343                           ;incstack = 0
 33344                           ;I2C1_MasterSendTxData@data stored from wreg
 33345  00A048  6E10               	movwf	I2C1_MasterSendTxData@data^0,c
 33346                           
 33347                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 33348  00A04A  C010  FF92         	movff	I2C1_MasterSendTxData@data,3986	;volatile
 33349  00A04E  0012               	return		;funcret
 33350  00A050                     __end_of_I2C1_MasterSendTxData:
 33351                           	callstack 0
 33352                           
 33353 ;; *************** function _I2C1_MasterSendAck *****************
 33354 ;; Defined at:
 33355 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 33356 ;; Parameters:    Size  Location     Type
 33357 ;;		None
 33358 ;; Auto vars:     Size  Location     Type
 33359 ;;		None
 33360 ;; Return value:  Size  Location     Type
 33361 ;;                  1    wreg      void 
 33362 ;; Registers used:
 33363 ;;		None
 33364 ;; Tracked objects:
 33365 ;;		On entry : 3F/2
 33366 ;;		On exit  : 3F/2
 33367 ;;		Unchanged: 3F/0
 33368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33373 ;;Total ram usage:        0 bytes
 33374 ;; Hardware stack levels used: 1
 33375 ;; Hardware stack levels required when called: 4
 33376 ;; This function calls:
 33377 ;;		Nothing
 33378 ;; This function is called by:
 33379 ;;		_I2C1_DO_RX
 33380 ;;		_I2C1_DO_RX_ACK
 33381 ;; This function uses a non-reentrant model
 33382 ;;
 33383                           
 33384                           	psect	text161
 33385  00A068                     __ptext161:
 33386                           	callstack 0
 33387  00A068                     _I2C1_MasterSendAck:
 33388                           	callstack 16
 33389                           
 33390                           ; BSR set to: 2
 33391                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 33392                           
 33393                           ;incstack = 0
 33394  00A068  9A97               	bcf	151,5,c	;volatile
 33395                           
 33396                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 33397  00A06A  8897               	bsf	151,4,c	;volatile
 33398                           
 33399                           ; BSR set to: 2
 33400  00A06C  0012               	return		;funcret
 33401  00A06E                     __end_of_I2C1_MasterSendAck:
 33402                           	callstack 0
 33403                           
 33404 ;; *************** function _I2C1_MasterGetRxData *****************
 33405 ;; Defined at:
 33406 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 33407 ;; Parameters:    Size  Location     Type
 33408 ;;		None
 33409 ;; Auto vars:     Size  Location     Type
 33410 ;;		None
 33411 ;; Return value:  Size  Location     Type
 33412 ;;                  1    wreg      unsigned char 
 33413 ;; Registers used:
 33414 ;;		wreg, status,2
 33415 ;; Tracked objects:
 33416 ;;		On entry : 3F/2
 33417 ;;		On exit  : 3F/2
 33418 ;;		Unchanged: 3F/0
 33419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33424 ;;Total ram usage:        0 bytes
 33425 ;; Hardware stack levels used: 1
 33426 ;; Hardware stack levels required when called: 4
 33427 ;; This function calls:
 33428 ;;		Nothing
 33429 ;; This function is called by:
 33430 ;;		_I2C1_DO_RX
 33431 ;; This function uses a non-reentrant model
 33432 ;;
 33433                           
 33434                           	psect	text162
 33435  00A08E                     __ptext162:
 33436                           	callstack 0
 33437  00A08E                     _I2C1_MasterGetRxData:
 33438                           	callstack 16
 33439                           
 33440                           ; BSR set to: 2
 33441                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 33442                           
 33443                           ; BSR set to: 2
 33444                           ;incstack = 0
 33445  00A08E  5092               	movf	146,w,c	;volatile
 33446                           
 33447                           ; BSR set to: 2
 33448  00A090  0012               	return		;funcret
 33449  00A092                     __end_of_I2C1_MasterGetRxData:
 33450                           	callstack 0
 33451                           
 33452 ;; *************** function _I2C1_MasterSendNack *****************
 33453 ;; Defined at:
 33454 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 33455 ;; Parameters:    Size  Location     Type
 33456 ;;		None
 33457 ;; Auto vars:     Size  Location     Type
 33458 ;;		None
 33459 ;; Return value:  Size  Location     Type
 33460 ;;                  1    wreg      void 
 33461 ;; Registers used:
 33462 ;;		None
 33463 ;; Tracked objects:
 33464 ;;		On entry : 0/2
 33465 ;;		On exit  : 0/0
 33466 ;;		Unchanged: 0/0
 33467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33472 ;;Total ram usage:        0 bytes
 33473 ;; Hardware stack levels used: 1
 33474 ;; Hardware stack levels required when called: 4
 33475 ;; This function calls:
 33476 ;;		Nothing
 33477 ;; This function is called by:
 33478 ;;		_I2C1_DO_RX_NACK_STOP
 33479 ;;		_I2C1_DO_RX_NACK_RESTART
 33480 ;; This function uses a non-reentrant model
 33481 ;;
 33482                           
 33483                           	psect	text163
 33484  00A06E                     __ptext163:
 33485                           	callstack 0
 33486  00A06E                     _I2C1_MasterSendNack:
 33487                           	callstack 16
 33488                           
 33489                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 33490                           
 33491                           ; BSR set to: 2
 33492                           ;incstack = 0
 33493  00A06E  8A97               	bsf	151,5,c	;volatile
 33494                           
 33495                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 33496  00A070  8897               	bsf	151,4,c	;volatile
 33497  00A072  0012               	return		;funcret
 33498  00A074                     __end_of_I2C1_MasterSendNack:
 33499                           	callstack 0
 33500                           
 33501 ;; *************** function _I2C1_MasterStartRx *****************
 33502 ;; Defined at:
 33503 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 33504 ;; Parameters:    Size  Location     Type
 33505 ;;		None
 33506 ;; Auto vars:     Size  Location     Type
 33507 ;;		None
 33508 ;; Return value:  Size  Location     Type
 33509 ;;                  1    wreg      void 
 33510 ;; Registers used:
 33511 ;;		None
 33512 ;; Tracked objects:
 33513 ;;		On entry : 3F/2
 33514 ;;		On exit  : 3F/2
 33515 ;;		Unchanged: 3F/0
 33516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33521 ;;Total ram usage:        0 bytes
 33522 ;; Hardware stack levels used: 1
 33523 ;; Hardware stack levels required when called: 4
 33524 ;; This function calls:
 33525 ;;		Nothing
 33526 ;; This function is called by:
 33527 ;;		_I2C1_DO_RCEN
 33528 ;; This function uses a non-reentrant model
 33529 ;;
 33530                           
 33531                           	psect	text164
 33532  00A092                     __ptext164:
 33533                           	callstack 0
 33534  00A092                     _I2C1_MasterStartRx:
 33535                           	callstack 16
 33536                           
 33537                           ; BSR set to: 2
 33538                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 33539                           
 33540                           ;incstack = 0
 33541  00A092  8697               	bsf	151,3,c	;volatile
 33542                           
 33543                           ; BSR set to: 2
 33544  00A094  0012               	return		;funcret
 33545  00A096                     __end_of_I2C1_MasterStartRx:
 33546                           	callstack 0
 33547                           
 33548 ;; *************** function _I2C1_CallbackReturnReset *****************
 33549 ;; Defined at:
 33550 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 33551 ;; Parameters:    Size  Location     Type
 33552 ;;  funPtr          2   24[COMRAM] PTR void 
 33553 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33554 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33555 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33556 ;; Auto vars:     Size  Location     Type
 33557 ;;		None
 33558 ;; Return value:  Size  Location     Type
 33559 ;;                  1    wreg      enum E360
 33560 ;; Registers used:
 33561 ;;		wreg
 33562 ;; Tracked objects:
 33563 ;;		On entry : 3F/2
 33564 ;;		On exit  : 3F/2
 33565 ;;		Unchanged: 3F/0
 33566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33567 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33570 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33571 ;;Total ram usage:        2 bytes
 33572 ;; Hardware stack levels used: 1
 33573 ;; Hardware stack levels required when called: 4
 33574 ;; This function calls:
 33575 ;;		Nothing
 33576 ;; This function is called by:
 33577 ;;		_I2C1_Open
 33578 ;;		_I2C1_DO_TX
 33579 ;;		_I2C1_DO_RX
 33580 ;;		_I2C1_DO_TX_EMPTY
 33581 ;;		_I2C1_DO_ADDRESS_NACK
 33582 ;; This function uses a non-reentrant model
 33583 ;;
 33584                           
 33585                           	psect	text165
 33586  00A096                     __ptext165:
 33587                           	callstack 0
 33588  00A096                     _I2C1_CallbackReturnReset:
 33589                           	callstack 16
 33590                           
 33591                           ; BSR set to: 2
 33592                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 33593                           
 33594                           ; BSR set to: 2
 33595                           ;incstack = 0
 33596  00A096  0E05               	movlw	5
 33597                           
 33598                           ; BSR set to: 2
 33599  00A098  0012               	return		;funcret
 33600  00A09A                     __end_of_I2C1_CallbackReturnReset:
 33601                           	callstack 0
 33602                           
 33603 ;; *************** function _I2C1_CallbackReturnStop *****************
 33604 ;; Defined at:
 33605 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 33606 ;; Parameters:    Size  Location     Type
 33607 ;;  funPtr          2   24[COMRAM] PTR void 
 33608 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33609 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33610 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33611 ;; Auto vars:     Size  Location     Type
 33612 ;;		None
 33613 ;; Return value:  Size  Location     Type
 33614 ;;                  1    wreg      enum E360
 33615 ;; Registers used:
 33616 ;;		wreg
 33617 ;; Tracked objects:
 33618 ;;		On entry : 3F/2
 33619 ;;		On exit  : 3F/2
 33620 ;;		Unchanged: 3F/0
 33621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33622 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33625 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33626 ;;Total ram usage:        2 bytes
 33627 ;; Hardware stack levels used: 1
 33628 ;; Hardware stack levels required when called: 4
 33629 ;; This function calls:
 33630 ;;		Nothing
 33631 ;; This function is called by:
 33632 ;;		_I2C1_Open
 33633 ;;		_I2C1_SetCallback
 33634 ;;		_I2C1_DO_TX
 33635 ;;		_I2C1_DO_RX
 33636 ;;		_I2C1_DO_TX_EMPTY
 33637 ;;		_I2C1_DO_ADDRESS_NACK
 33638 ;; This function uses a non-reentrant model
 33639 ;;
 33640                           
 33641                           	psect	text166
 33642  00A09A                     __ptext166:
 33643                           	callstack 0
 33644  00A09A                     _I2C1_CallbackReturnStop:
 33645                           	callstack 16
 33646                           
 33647                           ; BSR set to: 2
 33648                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 33649                           
 33650                           ; BSR set to: 2
 33651                           ;incstack = 0
 33652  00A09A  0E01               	movlw	1
 33653                           
 33654                           ; BSR set to: 2
 33655  00A09C  0012               	return		;funcret
 33656  00A09E                     __end_of_I2C1_CallbackReturnStop:
 33657                           	callstack 0
 33658                           
 33659 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F535 *****************
 33660 ;; Defined at:
 33661 ;;		line 176 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33662 ;; Parameters:    Size  Location     Type
 33663 ;;  ptr             2   24[COMRAM] PTR void 
 33664 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33665 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33666 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33667 ;; Auto vars:     Size  Location     Type
 33668 ;;		None
 33669 ;; Return value:  Size  Location     Type
 33670 ;;                  1    wreg      enum E527
 33671 ;; Registers used:
 33672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33673 ;; Tracked objects:
 33674 ;;		On entry : 3F/2
 33675 ;;		On exit  : 0/0
 33676 ;;		Unchanged: 0/0
 33677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33678 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33681 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33682 ;;Total ram usage:        2 bytes
 33683 ;; Hardware stack levels used: 1
 33684 ;; Hardware stack levels required when called: 6
 33685 ;; This function calls:
 33686 ;;		_I2C1_SetBuffer
 33687 ;;		_I2C1_SetDataCompleteCallback
 33688 ;; This function is called by:
 33689 ;;		_I2C1_DO_TX
 33690 ;;		_I2C1_DO_RX
 33691 ;;		_I2C1_DO_TX_EMPTY
 33692 ;;		_I2C1_DO_ADDRESS_NACK
 33693 ;; This function uses a non-reentrant model
 33694 ;;
 33695                           
 33696                           	psect	text167
 33697  00969E                     __ptext167:
 33698                           	callstack 0
 33699  00969E                     _rdBlkRegCompleteHandler@i2c1_master_example$F535:
 33700                           	callstack 14
 33701                           
 33702                           ; BSR set to: 2
 33703                           ;mcc_generated_files/examples/i2c1_master_example.c: 176: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 177: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 178:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 33704                           
 33705                           ; BSR set to: 2
 33706                           ;incstack = 0
 33707  00969E  EE20 F002          	lfsr	2,2
 33708  0096A2  5019               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr^0,w,c
 33709  0096A4  26D9               	addwf	fsr2l,f,c
 33710  0096A6  501A               	movf	(rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1)^0,w,c
 33711  0096A8  22DA               	addwfc	fsr2h,f,c
 33712  0096AA  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 33713  0096AE  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 33714  0096B2  C019  FFD9         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr,fsr2l
 33715  0096B6  C01A  FFDA         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1,fsr2h
 33716  0096BA  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 33717  0096BE  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 33718  0096C2  EC01  F04F         	call	_I2C1_SetBuffer	;wreg free
 33719                           
 33720                           ; BSR set to: 2
 33721                           ;mcc_generated_files/examples/i2c1_master_example.c: 179:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33722  0096C6  0E00               	movlw	0
 33723  0096C8  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33724  0096CA  0E00               	movlw	0
 33725  0096CC  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33726  0096CE  0E00               	movlw	0
 33727  0096D0  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33728  0096D2  0E00               	movlw	0
 33729  0096D4  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33730  0096D6  EC4A  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33731                           
 33732                           ;mcc_generated_files/examples/i2c1_master_example.c: 180:     return I2C1_RESTART_READ;
 33733  0096DA  0E02               	movlw	2
 33734  0096DC  0012               	return		;funcret
 33735  0096DE                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535:
 33736                           	callstack 0
 33737                           
 33738 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F517 *****************
 33739 ;; Defined at:
 33740 ;;		line 162 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33741 ;; Parameters:    Size  Location     Type
 33742 ;;  ptr             2   24[COMRAM] PTR void 
 33743 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33744 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33745 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33746 ;; Auto vars:     Size  Location     Type
 33747 ;;		None
 33748 ;; Return value:  Size  Location     Type
 33749 ;;                  1    wreg      enum E527
 33750 ;; Registers used:
 33751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33752 ;; Tracked objects:
 33753 ;;		On entry : 3F/2
 33754 ;;		On exit  : 0/0
 33755 ;;		Unchanged: 0/0
 33756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33757 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33760 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33761 ;;Total ram usage:        2 bytes
 33762 ;; Hardware stack levels used: 1
 33763 ;; Hardware stack levels required when called: 6
 33764 ;; This function calls:
 33765 ;;		_I2C1_SetBuffer
 33766 ;;		_I2C1_SetDataCompleteCallback
 33767 ;; This function is called by:
 33768 ;;		_I2C1_DO_TX
 33769 ;;		_I2C1_DO_RX
 33770 ;;		_I2C1_DO_TX_EMPTY
 33771 ;;		_I2C1_DO_ADDRESS_NACK
 33772 ;; This function uses a non-reentrant model
 33773 ;;
 33774                           
 33775                           	psect	text168
 33776  0099E4                     __ptext168:
 33777                           	callstack 0
 33778  0099E4                     _wr1RegCompleteHandler@i2c1_master_example$F517:
 33779                           	callstack 14
 33780                           
 33781                           ; BSR set to: 2
 33782                           ;mcc_generated_files/examples/i2c1_master_example.c: 162: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 163: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 164:     I2C1_SetBuffer(ptr,1);
 33783                           
 33784                           ;incstack = 0
 33785  0099E4  C019  F010         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr,I2C1_SetBuffer@buffer
 33786  0099E8  C01A  F011         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr+1,I2C1_SetBuffer@buffer+1
 33787  0099EC  0E00               	movlw	0
 33788  0099EE  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33789  0099F0  0E01               	movlw	1
 33790  0099F2  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33791  0099F4  EC01  F04F         	call	_I2C1_SetBuffer	;wreg free
 33792                           
 33793                           ; BSR set to: 2
 33794                           ;mcc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33795  0099F8  0E00               	movlw	0
 33796  0099FA  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33797  0099FC  0E00               	movlw	0
 33798  0099FE  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33799  009A00  0E00               	movlw	0
 33800  009A02  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33801  009A04  0E00               	movlw	0
 33802  009A06  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33803  009A08  EC4A  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33804                           
 33805                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     return I2C1_CONTINUE;
 33806  009A0C  0E04               	movlw	4
 33807  009A0E  0012               	return		;funcret
 33808  009A10                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F517:
 33809                           	callstack 0
 33810                           
 33811 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F511 *****************
 33812 ;; Defined at:
 33813 ;;		line 155 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33814 ;; Parameters:    Size  Location     Type
 33815 ;;  ptr             2   24[COMRAM] PTR void 
 33816 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33817 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33818 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33819 ;; Auto vars:     Size  Location     Type
 33820 ;;		None
 33821 ;; Return value:  Size  Location     Type
 33822 ;;                  1    wreg      enum E527
 33823 ;; Registers used:
 33824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33825 ;; Tracked objects:
 33826 ;;		On entry : 3F/2
 33827 ;;		On exit  : 0/0
 33828 ;;		Unchanged: 0/0
 33829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33830 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33833 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33834 ;;Total ram usage:        2 bytes
 33835 ;; Hardware stack levels used: 1
 33836 ;; Hardware stack levels required when called: 6
 33837 ;; This function calls:
 33838 ;;		_I2C1_SetBuffer
 33839 ;;		_I2C1_SetDataCompleteCallback
 33840 ;; This function is called by:
 33841 ;;		_I2C1_DO_TX
 33842 ;;		_I2C1_DO_RX
 33843 ;;		_I2C1_DO_TX_EMPTY
 33844 ;;		_I2C1_DO_ADDRESS_NACK
 33845 ;; This function uses a non-reentrant model
 33846 ;;
 33847                           
 33848                           	psect	text169
 33849  009A10                     __ptext169:
 33850                           	callstack 0
 33851  009A10                     _rd2RegCompleteHandler@i2c1_master_example$F511:
 33852                           	callstack 14
 33853                           
 33854                           ; BSR set to: 2
 33855                           ;mcc_generated_files/examples/i2c1_master_example.c: 155: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 156: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 157:     I2C1_SetBuffer(ptr,2);
 33856                           
 33857                           ;incstack = 0
 33858  009A10  C019  F010         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr,I2C1_SetBuffer@buffer
 33859  009A14  C01A  F011         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr+1,I2C1_SetBuffer@buffer+1
 33860  009A18  0E00               	movlw	0
 33861  009A1A  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33862  009A1C  0E02               	movlw	2
 33863  009A1E  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33864  009A20  EC01  F04F         	call	_I2C1_SetBuffer	;wreg free
 33865                           
 33866                           ; BSR set to: 2
 33867                           ;mcc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33868  009A24  0E00               	movlw	0
 33869  009A26  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33870  009A28  0E00               	movlw	0
 33871  009A2A  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33872  009A2C  0E00               	movlw	0
 33873  009A2E  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33874  009A30  0E00               	movlw	0
 33875  009A32  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33876  009A34  EC4A  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33877                           
 33878                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     return I2C1_RESTART_READ;
 33879  009A38  0E02               	movlw	2
 33880  009A3A  0012               	return		;funcret
 33881  009A3C                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F511:
 33882                           	callstack 0
 33883                           
 33884 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F500 *****************
 33885 ;; Defined at:
 33886 ;;		line 148 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33887 ;; Parameters:    Size  Location     Type
 33888 ;;  ptr             2   24[COMRAM] PTR void 
 33889 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33890 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33891 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33892 ;; Auto vars:     Size  Location     Type
 33893 ;;		None
 33894 ;; Return value:  Size  Location     Type
 33895 ;;                  1    wreg      enum E527
 33896 ;; Registers used:
 33897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33898 ;; Tracked objects:
 33899 ;;		On entry : 3F/2
 33900 ;;		On exit  : 0/0
 33901 ;;		Unchanged: 0/0
 33902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33903 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33906 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33907 ;;Total ram usage:        2 bytes
 33908 ;; Hardware stack levels used: 1
 33909 ;; Hardware stack levels required when called: 6
 33910 ;; This function calls:
 33911 ;;		_I2C1_SetBuffer
 33912 ;;		_I2C1_SetDataCompleteCallback
 33913 ;; This function is called by:
 33914 ;;		_I2C1_Read1ByteRegister
 33915 ;;		_I2C1_DO_TX
 33916 ;;		_I2C1_DO_RX
 33917 ;;		_I2C1_DO_TX_EMPTY
 33918 ;;		_I2C1_DO_ADDRESS_NACK
 33919 ;; This function uses a non-reentrant model
 33920 ;;
 33921                           
 33922                           	psect	text170
 33923  009A3C                     __ptext170:
 33924                           	callstack 0
 33925  009A3C                     _rd1RegCompleteHandler@i2c1_master_example$F500:
 33926                           	callstack 14
 33927                           
 33928                           ; BSR set to: 2
 33929                           ;mcc_generated_files/examples/i2c1_master_example.c: 148: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 149: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 150:     I2C1_SetBuffer(ptr,1);
 33930                           
 33931                           ;incstack = 0
 33932  009A3C  C019  F010         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr,I2C1_SetBuffer@buffer
 33933  009A40  C01A  F011         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr+1,I2C1_SetBuffer@buffer+1
 33934  009A44  0E00               	movlw	0
 33935  009A46  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33936  009A48  0E01               	movlw	1
 33937  009A4A  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33938  009A4C  EC01  F04F         	call	_I2C1_SetBuffer	;wreg free
 33939                           
 33940                           ; BSR set to: 2
 33941                           ;mcc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33942  009A50  0E00               	movlw	0
 33943  009A52  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33944  009A54  0E00               	movlw	0
 33945  009A56  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33946  009A58  0E00               	movlw	0
 33947  009A5A  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33948  009A5C  0E00               	movlw	0
 33949  009A5E  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33950  009A60  EC4A  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33951                           
 33952                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     return I2C1_RESTART_READ;
 33953  009A64  0E02               	movlw	2
 33954  009A66  0012               	return		;funcret
 33955  009A68                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F500:
 33956                           	callstack 0
 33957                           
 33958 ;; *************** function _rdBlkRegCompleteHandler *****************
 33959 ;; Defined at:
 33960 ;;		line 140 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33961 ;; Parameters:    Size  Location     Type
 33962 ;;  p               2   24[COMRAM] PTR void 
 33963 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33964 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33965 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33966 ;; Auto vars:     Size  Location     Type
 33967 ;;		None
 33968 ;; Return value:  Size  Location     Type
 33969 ;;                  1    wreg      enum E360
 33970 ;; Registers used:
 33971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33972 ;; Tracked objects:
 33973 ;;		On entry : 3F/2
 33974 ;;		On exit  : 0/0
 33975 ;;		Unchanged: 0/0
 33976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33977 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33980 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33981 ;;Total ram usage:        2 bytes
 33982 ;; Hardware stack levels used: 1
 33983 ;; Hardware stack levels required when called: 6
 33984 ;; This function calls:
 33985 ;;		_I2C1_SetBuffer
 33986 ;;		_I2C1_SetDataCompleteCallback
 33987 ;; This function is called by:
 33988 ;;		_i2c_readDataBlock
 33989 ;;		_I2C1_DO_TX
 33990 ;;		_I2C1_DO_RX
 33991 ;;		_I2C1_DO_TX_EMPTY
 33992 ;;		_I2C1_DO_ADDRESS_NACK
 33993 ;; This function uses a non-reentrant model
 33994 ;;
 33995                           
 33996                           	psect	text171
 33997  0096DE                     __ptext171:
 33998                           	callstack 0
 33999  0096DE                     _rdBlkRegCompleteHandler:
 34000                           	callstack 14
 34001                           
 34002                           ; BSR set to: 2
 34003                           ;mcc_generated_files/drivers/i2c_simple_master.c: 140: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 141: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 34004                           
 34005                           ;incstack = 0
 34006  0096DE  EE20 F002          	lfsr	2,2
 34007  0096E2  5019               	movf	rdBlkRegCompleteHandler@p^0,w,c
 34008  0096E4  26D9               	addwf	fsr2l,f,c
 34009  0096E6  501A               	movf	(rdBlkRegCompleteHandler@p+1)^0,w,c
 34010  0096E8  22DA               	addwfc	fsr2h,f,c
 34011  0096EA  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 34012  0096EE  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 34013  0096F2  C019  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
 34014  0096F6  C01A  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
 34015  0096FA  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 34016  0096FE  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 34017  009702  EC01  F04F         	call	_I2C1_SetBuffer	;wreg free
 34018                           
 34019                           ; BSR set to: 2
 34020                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 34021  009706  0E00               	movlw	0
 34022  009708  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 34023  00970A  0E00               	movlw	0
 34024  00970C  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 34025  00970E  0E00               	movlw	0
 34026  009710  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 34027  009712  0E00               	movlw	0
 34028  009714  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 34029  009716  EC4A  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 34030                           
 34031                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     return I2C1_RESTART_READ;
 34032  00971A  0E02               	movlw	2
 34033  00971C  0012               	return		;funcret
 34034  00971E                     __end_of_rdBlkRegCompleteHandler:
 34035                           	callstack 0
 34036                           
 34037 ;; *************** function _wr2RegCompleteHandler *****************
 34038 ;; Defined at:
 34039 ;;		line 116 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 34040 ;; Parameters:    Size  Location     Type
 34041 ;;  p               2   24[COMRAM] PTR void 
 34042 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34043 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34044 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34045 ;; Auto vars:     Size  Location     Type
 34046 ;;		None
 34047 ;; Return value:  Size  Location     Type
 34048 ;;                  1    wreg      enum E360
 34049 ;; Registers used:
 34050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34051 ;; Tracked objects:
 34052 ;;		On entry : 3F/2
 34053 ;;		On exit  : 0/0
 34054 ;;		Unchanged: 0/0
 34055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34056 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34059 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34060 ;;Total ram usage:        2 bytes
 34061 ;; Hardware stack levels used: 1
 34062 ;; Hardware stack levels required when called: 6
 34063 ;; This function calls:
 34064 ;;		_I2C1_SetBuffer
 34065 ;;		_I2C1_SetDataCompleteCallback
 34066 ;; This function is called by:
 34067 ;;		_I2C1_DO_TX
 34068 ;;		_I2C1_DO_RX
 34069 ;;		_I2C1_DO_TX_EMPTY
 34070 ;;		_I2C1_DO_ADDRESS_NACK
 34071 ;; This function uses a non-reentrant model
 34072 ;;
 34073                           
 34074                           	psect	text172
 34075  009A68                     __ptext172:
 34076                           	callstack 0
 34077  009A68                     _wr2RegCompleteHandler:
 34078                           	callstack 14
 34079                           
 34080                           ; BSR set to: 2
 34081                           ;mcc_generated_files/drivers/i2c_simple_master.c: 116: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 117: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 118:     I2C1_SetBuffer(p,2);
 34082                           
 34083                           ;incstack = 0
 34084  009A68  C019  F010         	movff	wr2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 34085  009A6C  C01A  F011         	movff	wr2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 34086  009A70  0E00               	movlw	0
 34087  009A72  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 34088  009A74  0E02               	movlw	2
 34089  009A76  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 34090  009A78  EC01  F04F         	call	_I2C1_SetBuffer	;wreg free
 34091                           
 34092                           ; BSR set to: 2
 34093                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 34094  009A7C  0E00               	movlw	0
 34095  009A7E  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 34096  009A80  0E00               	movlw	0
 34097  009A82  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 34098  009A84  0E00               	movlw	0
 34099  009A86  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 34100  009A88  0E00               	movlw	0
 34101  009A8A  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 34102  009A8C  EC4A  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 34103                           
 34104                           ;mcc_generated_files/drivers/i2c_simple_master.c: 120:     return I2C1_CONTINUE;
 34105  009A90  0E04               	movlw	4
 34106  009A92  0012               	return		;funcret
 34107  009A94                     __end_of_wr2RegCompleteHandler:
 34108                           	callstack 0
 34109                           
 34110 ;; *************** function _rd2RegCompleteHandler *****************
 34111 ;; Defined at:
 34112 ;;		line 93 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 34113 ;; Parameters:    Size  Location     Type
 34114 ;;  p               2   24[COMRAM] PTR void 
 34115 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34116 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34117 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34118 ;; Auto vars:     Size  Location     Type
 34119 ;;		None
 34120 ;; Return value:  Size  Location     Type
 34121 ;;                  1    wreg      enum E360
 34122 ;; Registers used:
 34123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34124 ;; Tracked objects:
 34125 ;;		On entry : 3F/2
 34126 ;;		On exit  : 0/0
 34127 ;;		Unchanged: 0/0
 34128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34129 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34132 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34133 ;;Total ram usage:        2 bytes
 34134 ;; Hardware stack levels used: 1
 34135 ;; Hardware stack levels required when called: 6
 34136 ;; This function calls:
 34137 ;;		_I2C1_SetBuffer
 34138 ;;		_I2C1_SetDataCompleteCallback
 34139 ;; This function is called by:
 34140 ;;		_I2C1_DO_TX
 34141 ;;		_I2C1_DO_RX
 34142 ;;		_I2C1_DO_TX_EMPTY
 34143 ;;		_I2C1_DO_ADDRESS_NACK
 34144 ;; This function uses a non-reentrant model
 34145 ;;
 34146                           
 34147                           	psect	text173
 34148  009A94                     __ptext173:
 34149                           	callstack 0
 34150  009A94                     _rd2RegCompleteHandler:
 34151                           	callstack 14
 34152                           
 34153                           ; BSR set to: 2
 34154                           ;mcc_generated_files/drivers/i2c_simple_master.c: 93: static i2c1_operations_t rd2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 94: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 95:     I2C1_SetBuffer(p,2);
 34155                           
 34156                           ;incstack = 0
 34157  009A94  C019  F010         	movff	rd2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 34158  009A98  C01A  F011         	movff	rd2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 34159  009A9C  0E00               	movlw	0
 34160  009A9E  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 34161  009AA0  0E02               	movlw	2
 34162  009AA2  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 34163  009AA4  EC01  F04F         	call	_I2C1_SetBuffer	;wreg free
 34164                           
 34165                           ; BSR set to: 2
 34166                           ;mcc_generated_files/drivers/i2c_simple_master.c: 96:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 34167  009AA8  0E00               	movlw	0
 34168  009AAA  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 34169  009AAC  0E00               	movlw	0
 34170  009AAE  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 34171  009AB0  0E00               	movlw	0
 34172  009AB2  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 34173  009AB4  0E00               	movlw	0
 34174  009AB6  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 34175  009AB8  EC4A  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 34176                           
 34177                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97:     return I2C1_RESTART_READ;
 34178  009ABC  0E02               	movlw	2
 34179  009ABE  0012               	return		;funcret
 34180  009AC0                     __end_of_rd2RegCompleteHandler:
 34181                           	callstack 0
 34182                           
 34183 ;; *************** function _rd1RegCompleteHandler *****************
 34184 ;; Defined at:
 34185 ;;		line 64 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 34186 ;; Parameters:    Size  Location     Type
 34187 ;;  p               2   24[COMRAM] PTR void 
 34188 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34189 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34190 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34191 ;; Auto vars:     Size  Location     Type
 34192 ;;		None
 34193 ;; Return value:  Size  Location     Type
 34194 ;;                  1    wreg      enum E360
 34195 ;; Registers used:
 34196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34197 ;; Tracked objects:
 34198 ;;		On entry : 3F/2
 34199 ;;		On exit  : 0/0
 34200 ;;		Unchanged: 0/0
 34201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34202 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34205 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34206 ;;Total ram usage:        2 bytes
 34207 ;; Hardware stack levels used: 1
 34208 ;; Hardware stack levels required when called: 6
 34209 ;; This function calls:
 34210 ;;		_I2C1_SetBuffer
 34211 ;;		_I2C1_SetDataCompleteCallback
 34212 ;; This function is called by:
 34213 ;;		_I2C1_DO_TX
 34214 ;;		_I2C1_DO_RX
 34215 ;;		_I2C1_DO_TX_EMPTY
 34216 ;;		_I2C1_DO_ADDRESS_NACK
 34217 ;; This function uses a non-reentrant model
 34218 ;;
 34219                           
 34220                           	psect	text174
 34221  009AC0                     __ptext174:
 34222                           	callstack 0
 34223  009AC0                     _rd1RegCompleteHandler:
 34224                           	callstack 14
 34225                           
 34226                           ; BSR set to: 2
 34227                           ;mcc_generated_files/drivers/i2c_simple_master.c: 64: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 65: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 66:     I2C1_SetBuffer(p,1);
 34228                           
 34229                           ;incstack = 0
 34230  009AC0  C019  F010         	movff	rd1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 34231  009AC4  C01A  F011         	movff	rd1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 34232  009AC8  0E00               	movlw	0
 34233  009ACA  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 34234  009ACC  0E01               	movlw	1
 34235  009ACE  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 34236  009AD0  EC01  F04F         	call	_I2C1_SetBuffer	;wreg free
 34237                           
 34238                           ; BSR set to: 2
 34239                           ;mcc_generated_files/drivers/i2c_simple_master.c: 67:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 34240  009AD4  0E00               	movlw	0
 34241  009AD6  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 34242  009AD8  0E00               	movlw	0
 34243  009ADA  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 34244  009ADC  0E00               	movlw	0
 34245  009ADE  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 34246  009AE0  0E00               	movlw	0
 34247  009AE2  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 34248  009AE4  EC4A  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 34249                           
 34250                           ;mcc_generated_files/drivers/i2c_simple_master.c: 68:     return I2C1_RESTART_READ;
 34251  009AE8  0E02               	movlw	2
 34252  009AEA  0012               	return		;funcret
 34253  009AEC                     __end_of_rd1RegCompleteHandler:
 34254                           	callstack 0
 34255                           
 34256 ;; *************** function _wr1RegCompleteHandler *****************
 34257 ;; Defined at:
 34258 ;;		line 33 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 34259 ;; Parameters:    Size  Location     Type
 34260 ;;  p               2   24[COMRAM] PTR void 
 34261 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34262 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34263 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34264 ;; Auto vars:     Size  Location     Type
 34265 ;;		None
 34266 ;; Return value:  Size  Location     Type
 34267 ;;                  1    wreg      enum E360
 34268 ;; Registers used:
 34269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34270 ;; Tracked objects:
 34271 ;;		On entry : 3F/2
 34272 ;;		On exit  : 0/0
 34273 ;;		Unchanged: 0/0
 34274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34275 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34278 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34279 ;;Total ram usage:        2 bytes
 34280 ;; Hardware stack levels used: 1
 34281 ;; Hardware stack levels required when called: 6
 34282 ;; This function calls:
 34283 ;;		_I2C1_SetBuffer
 34284 ;;		_I2C1_SetDataCompleteCallback
 34285 ;; This function is called by:
 34286 ;;		_I2C1_DO_TX
 34287 ;;		_I2C1_DO_RX
 34288 ;;		_I2C1_DO_TX_EMPTY
 34289 ;;		_I2C1_DO_ADDRESS_NACK
 34290 ;; This function uses a non-reentrant model
 34291 ;;
 34292                           
 34293                           	psect	text175
 34294  009AEC                     __ptext175:
 34295                           	callstack 0
 34296  009AEC                     _wr1RegCompleteHandler:
 34297                           	callstack 14
 34298                           
 34299                           ; BSR set to: 2
 34300                           ;mcc_generated_files/drivers/i2c_simple_master.c: 33: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 34: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 35:     I2C1_SetBuffer(p,1);
 34301                           
 34302                           ;incstack = 0
 34303  009AEC  C019  F010         	movff	wr1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 34304  009AF0  C01A  F011         	movff	wr1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 34305  009AF4  0E00               	movlw	0
 34306  009AF6  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 34307  009AF8  0E01               	movlw	1
 34308  009AFA  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 34309  009AFC  EC01  F04F         	call	_I2C1_SetBuffer	;wreg free
 34310                           
 34311                           ; BSR set to: 2
 34312                           ;mcc_generated_files/drivers/i2c_simple_master.c: 36:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 34313  009B00  0E00               	movlw	0
 34314  009B02  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 34315  009B04  0E00               	movlw	0
 34316  009B06  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 34317  009B08  0E00               	movlw	0
 34318  009B0A  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 34319  009B0C  0E00               	movlw	0
 34320  009B0E  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 34321  009B10  EC4A  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 34322                           
 34323                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     return I2C1_CONTINUE;
 34324  009B14  0E04               	movlw	4
 34325  009B16  0012               	return		;funcret
 34326  009B18                     __end_of_wr1RegCompleteHandler:
 34327                           	callstack 0
 34328                           
 34329 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F523 *****************
 34330 ;; Defined at:
 34331 ;;		line 169 in file "mcc_generated_files/examples/i2c1_master_example.c"
 34332 ;; Parameters:    Size  Location     Type
 34333 ;;  ptr             2   24[COMRAM] PTR void 
 34334 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34335 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34336 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34337 ;; Auto vars:     Size  Location     Type
 34338 ;;		None
 34339 ;; Return value:  Size  Location     Type
 34340 ;;                  1    wreg      enum E527
 34341 ;; Registers used:
 34342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34343 ;; Tracked objects:
 34344 ;;		On entry : 3F/2
 34345 ;;		On exit  : 0/0
 34346 ;;		Unchanged: 0/0
 34347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34348 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34351 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34352 ;;Total ram usage:        2 bytes
 34353 ;; Hardware stack levels used: 1
 34354 ;; Hardware stack levels required when called: 6
 34355 ;; This function calls:
 34356 ;;		_I2C1_SetBuffer
 34357 ;;		_I2C1_SetDataCompleteCallback
 34358 ;; This function is called by:
 34359 ;;		_I2C1_DO_TX
 34360 ;;		_I2C1_DO_RX
 34361 ;;		_I2C1_DO_TX_EMPTY
 34362 ;;		_I2C1_DO_ADDRESS_NACK
 34363 ;; This function uses a non-reentrant model
 34364 ;;
 34365                           
 34366                           	psect	text176
 34367  009B18                     __ptext176:
 34368                           	callstack 0
 34369  009B18                     _wr2RegCompleteHandler@i2c1_master_example$F523:
 34370                           	callstack 14
 34371                           
 34372                           ; BSR set to: 2
 34373                           ;mcc_generated_files/examples/i2c1_master_example.c: 169: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 170: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 171:     I2C1_SetBuffer(ptr,2);
 34374                           
 34375                           ;incstack = 0
 34376  009B18  C019  F010         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr,I2C1_SetBuffer@buffer
 34377  009B1C  C01A  F011         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr+1,I2C1_SetBuffer@buffer+1
 34378  009B20  0E00               	movlw	0
 34379  009B22  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 34380  009B24  0E02               	movlw	2
 34381  009B26  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 34382  009B28  EC01  F04F         	call	_I2C1_SetBuffer	;wreg free
 34383                           
 34384                           ; BSR set to: 2
 34385                           ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 34386  009B2C  0E00               	movlw	0
 34387  009B2E  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 34388  009B30  0E00               	movlw	0
 34389  009B32  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 34390  009B34  0E00               	movlw	0
 34391  009B36  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 34392  009B38  0E00               	movlw	0
 34393  009B3A  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 34394  009B3C  EC4A  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 34395                           
 34396                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     return I2C1_CONTINUE;
 34397  009B40  0E04               	movlw	4
 34398  009B42  0012               	return		;funcret
 34399  009B44                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F523:
 34400                           	callstack 0
 34401                           
 34402 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 34403 ;; Defined at:
 34404 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 34405 ;; Parameters:    Size  Location     Type
 34406 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 34407 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 34408 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 34409 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 34410 ;;  ptr             2   22[COMRAM] PTR void 
 34411 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34412 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34413 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34414 ;; Auto vars:     Size  Location     Type
 34415 ;;		None
 34416 ;; Return value:  Size  Location     Type
 34417 ;;                  1    wreg      void 
 34418 ;; Registers used:
 34419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34420 ;; Tracked objects:
 34421 ;;		On entry : 33/2
 34422 ;;		On exit  : 0/0
 34423 ;;		Unchanged: 0/0
 34424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34425 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34428 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34429 ;;Total ram usage:        4 bytes
 34430 ;; Hardware stack levels used: 1
 34431 ;; Hardware stack levels required when called: 5
 34432 ;; This function calls:
 34433 ;;		_I2C1_SetCallback
 34434 ;; This function is called by:
 34435 ;;		_wr1RegCompleteHandler
 34436 ;;		_rd1RegCompleteHandler
 34437 ;;		_rd2RegCompleteHandler
 34438 ;;		_wr2RegCompleteHandler
 34439 ;;		_rdBlkRegCompleteHandler
 34440 ;;		_i2c_readDataBlock
 34441 ;;		_I2C1_Read1ByteRegister
 34442 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 34443 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 34444 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 34445 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 34446 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 34447 ;; This function uses a non-reentrant model
 34448 ;;
 34449                           
 34450                           	psect	text177
 34451  009E94                     __ptext177:
 34452                           	callstack 0
 34453  009E94                     _I2C1_SetDataCompleteCallback:
 34454                           	callstack 20
 34455                           
 34456                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 34457                           
 34458                           ;incstack = 0
 34459  009E94  C015  F010         	movff	I2C1_SetDataCompleteCallback@cb,I2C1_SetCallback@cb
 34460  009E98  C016  F011         	movff	I2C1_SetDataCompleteCallback@cb+1,I2C1_SetCallback@cb+1
 34461  009E9C  C017  F012         	movff	I2C1_SetDataCompleteCallback@ptr,I2C1_SetCallback@ptr
 34462  009EA0  C018  F013         	movff	I2C1_SetDataCompleteCallback@ptr+1,I2C1_SetCallback@ptr+1
 34463  009EA4  0E00               	movlw	0
 34464  009EA6  ECA8  F046         	call	_I2C1_SetCallback
 34465  009EAA  0012               	return		;funcret
 34466  009EAC                     __end_of_I2C1_SetDataCompleteCallback:
 34467                           	callstack 0
 34468                           
 34469 ;; *************** function _I2C1_SetCallback *****************
 34470 ;; Defined at:
 34471 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 34472 ;; Parameters:    Size  Location     Type
 34473 ;;  idx             1    wreg     enum E10460
 34474 ;;  cb              2   15[COMRAM] PTR FTN(PTR void ,)enum 
 34475 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 34476 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 34477 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 34478 ;;  ptr             2   17[COMRAM] PTR void 
 34479 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34480 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34481 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34482 ;; Auto vars:     Size  Location     Type
 34483 ;;  idx             1   19[COMRAM] enum E10460
 34484 ;; Return value:  Size  Location     Type
 34485 ;;                  1    wreg      void 
 34486 ;; Registers used:
 34487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34488 ;; Tracked objects:
 34489 ;;		On entry : 33/2
 34490 ;;		On exit  : 0/0
 34491 ;;		Unchanged: 0/0
 34492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34493 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34494 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34496 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34497 ;;Total ram usage:        5 bytes
 34498 ;; Hardware stack levels used: 1
 34499 ;; Hardware stack levels required when called: 4
 34500 ;; This function calls:
 34501 ;;		Nothing
 34502 ;; This function is called by:
 34503 ;;		_I2C1_SetDataCompleteCallback
 34504 ;;		_I2C1_SetAddressNackCallback
 34505 ;; This function uses a non-reentrant model
 34506 ;;
 34507                           
 34508                           	psect	text178
 34509  008D50                     __ptext178:
 34510                           	callstack 0
 34511  008D50                     _I2C1_SetCallback:
 34512                           	callstack 20
 34513                           
 34514                           ;incstack = 0
 34515                           ;I2C1_SetCallback@idx stored from wreg
 34516  008D50  6E14               	movwf	I2C1_SetCallback@idx^0,c
 34517                           
 34518                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 34519  008D52  5010               	movf	I2C1_SetCallback@cb^0,w,c
 34520  008D54  1011               	iorwf	(I2C1_SetCallback@cb+1)^0,w,c
 34521  008D56  B4D8               	btfsc	status,2,c
 34522  008D58  D019               	goto	l20095
 34523                           
 34524                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 34525  008D5A  5014               	movf	I2C1_SetCallback@idx^0,w,c
 34526  008D5C  0D02               	mullw	2
 34527  008D5E  0E3C               	movlw	low _I2C1_Status
 34528  008D60  24F3               	addwf	243,w,c
 34529  008D62  6ED9               	movwf	fsr2l,c
 34530  008D64  0E02               	movlw	high _I2C1_Status
 34531  008D66  20F4               	addwfc	prodh,w,c
 34532  008D68  6EDA               	movwf	fsr2h,c
 34533  008D6A  C010  FFDE         	movff	I2C1_SetCallback@cb,postinc2
 34534  008D6E  C011  FFDD         	movff	I2C1_SetCallback@cb+1,postdec2
 34535                           
 34536                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 34537  008D72  5014               	movf	I2C1_SetCallback@idx^0,w,c
 34538  008D74  0D02               	mullw	2
 34539  008D76  0E48               	movlw	low (_I2C1_Status+12)
 34540  008D78  24F3               	addwf	243,w,c
 34541  008D7A  6ED9               	movwf	fsr2l,c
 34542  008D7C  0E02               	movlw	high (_I2C1_Status+12)
 34543  008D7E  20F4               	addwfc	prodh,w,c
 34544  008D80  6EDA               	movwf	fsr2h,c
 34545  008D82  C012  FFDE         	movff	I2C1_SetCallback@ptr,postinc2
 34546  008D86  C013  FFDD         	movff	I2C1_SetCallback@ptr+1,postdec2
 34547                           
 34548                           ;mcc_generated_files/i2c1_master.c: 304:     }
 34549  008D8A  0012               	return	
 34550  008D8C                     l20095:
 34551                           
 34552                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 34553  008D8C  5014               	movf	I2C1_SetCallback@idx^0,w,c
 34554  008D8E  0D02               	mullw	2
 34555  008D90  0E3C               	movlw	low _I2C1_Status
 34556  008D92  24F3               	addwf	243,w,c
 34557  008D94  6ED9               	movwf	fsr2l,c
 34558  008D96  0E02               	movlw	high _I2C1_Status
 34559  008D98  20F4               	addwfc	prodh,w,c
 34560  008D9A  6EDA               	movwf	fsr2h,c
 34561  008D9C  0E9A               	movlw	low _I2C1_CallbackReturnStop
 34562  008D9E  6EDE               	movwf	postinc2,c
 34563  008DA0  0EA0               	movlw	high _I2C1_CallbackReturnStop
 34564  008DA2  6EDD               	movwf	postdec2,c
 34565                           
 34566                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 34567  008DA4  5014               	movf	I2C1_SetCallback@idx^0,w,c
 34568  008DA6  0D02               	mullw	2
 34569  008DA8  0E48               	movlw	low (_I2C1_Status+12)
 34570  008DAA  24F3               	addwf	243,w,c
 34571  008DAC  6ED9               	movwf	fsr2l,c
 34572  008DAE  0E02               	movlw	high (_I2C1_Status+12)
 34573  008DB0  20F4               	addwfc	prodh,w,c
 34574  008DB2  6EDA               	movwf	fsr2h,c
 34575  008DB4  0E00               	movlw	0
 34576  008DB6  6EDE               	movwf	postinc2,c
 34577  008DB8  0E00               	movlw	0
 34578  008DBA  6EDD               	movwf	postdec2,c
 34579  008DBC  0012               	return		;funcret
 34580  008DBE                     __end_of_I2C1_SetCallback:
 34581                           	callstack 0
 34582                           
 34583 ;; *************** function _I2C1_SetBuffer *****************
 34584 ;; Defined at:
 34585 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 34586 ;; Parameters:    Size  Location     Type
 34587 ;;  buffer          2   15[COMRAM] PTR void 
 34588 ;;		 -> eusartparser@serial(4), cmdMemoryIsEmpty@tempSerial(4), memoryTEMP(16), var_sys_NVM(64), 
 34589 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_WriteNBytes@dat(17), I2C1_Write2ByteRegister@
      +reg(1), 
 34590 ;;		 -> I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2Byte
      +Register@reg(1), 
 34591 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), i2c
      +_readDataBlock@reg(2), 
 34592 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg
      +(1), 
 34593 ;;		 -> i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_writeNBytes@dat(
      +17), 
 34594 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34595 ;;  bufferSize      2   17[COMRAM] unsigned int 
 34596 ;; Auto vars:     Size  Location     Type
 34597 ;;		None
 34598 ;; Return value:  Size  Location     Type
 34599 ;;                  1    wreg      void 
 34600 ;; Registers used:
 34601 ;;		wreg, status,2, status,0
 34602 ;; Tracked objects:
 34603 ;;		On entry : 0/2
 34604 ;;		On exit  : 3F/2
 34605 ;;		Unchanged: 0/0
 34606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34607 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34610 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34611 ;;Total ram usage:        4 bytes
 34612 ;; Hardware stack levels used: 1
 34613 ;; Hardware stack levels required when called: 4
 34614 ;; This function calls:
 34615 ;;		Nothing
 34616 ;; This function is called by:
 34617 ;;		_wr1RegCompleteHandler
 34618 ;;		_i2c_writeNBytes
 34619 ;;		_rd1RegCompleteHandler
 34620 ;;		_rd2RegCompleteHandler
 34621 ;;		_wr2RegCompleteHandler
 34622 ;;		_rdBlkRegCompleteHandler
 34623 ;;		_i2c_readDataBlock
 34624 ;;		_I2C1_Read1ByteRegister
 34625 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 34626 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 34627 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 34628 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 34629 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 34630 ;; This function uses a non-reentrant model
 34631 ;;
 34632                           
 34633                           	psect	text179
 34634  009E02                     __ptext179:
 34635                           	callstack 0
 34636  009E02                     _I2C1_SetBuffer:
 34637                           	callstack 21
 34638                           
 34639                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 34640                           
 34641                           ;incstack = 0
 34642  009E02  0102               	movlb	2	; () banked
 34643  009E04  A75F               	btfss	(_I2C1_Status+35)& (0+255),3,b
 34644  009E06  0012               	return	
 34645                           
 34646                           ; BSR set to: 2
 34647                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 34648  009E08  C010  F259         	movff	I2C1_SetBuffer@buffer,_I2C1_Status+29
 34649  009E0C  C011  F25A         	movff	I2C1_SetBuffer@buffer+1,_I2C1_Status+30
 34650                           
 34651                           ; BSR set to: 2
 34652                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 34653  009E10  C012  F25B         	movff	I2C1_SetBuffer@bufferSize,_I2C1_Status+31
 34654  009E14  C013  F25C         	movff	I2C1_SetBuffer@bufferSize+1,_I2C1_Status+32
 34655                           
 34656                           ; BSR set to: 2
 34657                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 34658  009E18  975F               	bcf	(_I2C1_Status+35)& (0+255),3,b
 34659                           
 34660                           ; BSR set to: 2
 34661  009E1A  0012               	return		;funcret
 34662  009E1C                     __end_of_I2C1_SetBuffer:
 34663                           	callstack 0
 34664                           
 34665 ;; *************** function _I2C1_MasterStop *****************
 34666 ;; Defined at:
 34667 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 34668 ;; Parameters:    Size  Location     Type
 34669 ;;		None
 34670 ;; Auto vars:     Size  Location     Type
 34671 ;;		None
 34672 ;; Return value:  Size  Location     Type
 34673 ;;                  1    wreg      void 
 34674 ;; Registers used:
 34675 ;;		None
 34676 ;; Tracked objects:
 34677 ;;		On entry : 0/2
 34678 ;;		On exit  : 0/0
 34679 ;;		Unchanged: 0/0
 34680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34685 ;;Total ram usage:        0 bytes
 34686 ;; Hardware stack levels used: 1
 34687 ;; Hardware stack levels required when called: 4
 34688 ;; This function calls:
 34689 ;;		Nothing
 34690 ;; This function is called by:
 34691 ;;		_I2C1_DO_SEND_STOP
 34692 ;; This function uses a non-reentrant model
 34693 ;;
 34694                           
 34695                           	psect	text180
 34696  00A09E                     __ptext180:
 34697                           	callstack 0
 34698  00A09E                     _I2C1_MasterStop:
 34699                           	callstack 15
 34700                           
 34701                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 34702                           
 34703                           ; BSR set to: 2
 34704                           ;incstack = 0
 34705  00A09E  8497               	bsf	151,2,c	;volatile
 34706  00A0A0  0012               	return		;funcret
 34707  00A0A2                     __end_of_I2C1_MasterStop:
 34708                           	callstack 0
 34709                           
 34710 ;; *************** function _I2C1_MasterEnableRestart *****************
 34711 ;; Defined at:
 34712 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 34713 ;; Parameters:    Size  Location     Type
 34714 ;;		None
 34715 ;; Auto vars:     Size  Location     Type
 34716 ;;		None
 34717 ;; Return value:  Size  Location     Type
 34718 ;;                  1    wreg      void 
 34719 ;; Registers used:
 34720 ;;		None
 34721 ;; Tracked objects:
 34722 ;;		On entry : 0/2
 34723 ;;		On exit  : 0/0
 34724 ;;		Unchanged: 0/0
 34725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34730 ;;Total ram usage:        0 bytes
 34731 ;; Hardware stack levels used: 1
 34732 ;; Hardware stack levels required when called: 4
 34733 ;; This function calls:
 34734 ;;		Nothing
 34735 ;; This function is called by:
 34736 ;;		_I2C1_DO_SEND_RESTART_READ
 34737 ;;		_I2C1_DO_SEND_RESTART_WRITE
 34738 ;;		_I2C1_DO_SEND_RESTART
 34739 ;; This function uses a non-reentrant model
 34740 ;;
 34741                           
 34742                           	psect	text181
 34743  00A0A2                     __ptext181:
 34744                           	callstack 0
 34745  00A0A2                     _I2C1_MasterEnableRestart:
 34746                           	callstack 15
 34747                           
 34748                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 34749                           
 34750                           ;incstack = 0
 34751  00A0A2  8297               	bsf	151,1,c	;volatile
 34752  00A0A4  0012               	return		;funcret
 34753  00A0A6                     __end_of_I2C1_MasterEnableRestart:
 34754                           	callstack 0
 34755                           
 34756 ;; *************** function _I2C1_MasterStart *****************
 34757 ;; Defined at:
 34758 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 34759 ;; Parameters:    Size  Location     Type
 34760 ;;		None
 34761 ;; Auto vars:     Size  Location     Type
 34762 ;;		None
 34763 ;; Return value:  Size  Location     Type
 34764 ;;                  1    wreg      void 
 34765 ;; Registers used:
 34766 ;;		None
 34767 ;; Tracked objects:
 34768 ;;		On entry : 3F/2
 34769 ;;		On exit  : 3F/2
 34770 ;;		Unchanged: 3F/0
 34771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34776 ;;Total ram usage:        0 bytes
 34777 ;; Hardware stack levels used: 1
 34778 ;; Hardware stack levels required when called: 4
 34779 ;; This function calls:
 34780 ;;		Nothing
 34781 ;; This function is called by:
 34782 ;;		_I2C1_MasterOperation
 34783 ;; This function uses a non-reentrant model
 34784 ;;
 34785                           
 34786                           	psect	text182
 34787  00A0A6                     __ptext182:
 34788                           	callstack 0
 34789  00A0A6                     _I2C1_MasterStart:
 34790                           	callstack 19
 34791                           
 34792                           ; BSR set to: 2
 34793                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 34794                           
 34795                           ;incstack = 0
 34796  00A0A6  8097               	bsf	151,0,c	;volatile
 34797                           
 34798                           ; BSR set to: 2
 34799  00A0A8  0012               	return		;funcret
 34800  00A0AA                     __end_of_I2C1_MasterStart:
 34801                           	callstack 0
 34802                           
 34803 ;; *************** function _I2C1_Close *****************
 34804 ;; Defined at:
 34805 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 34806 ;; Parameters:    Size  Location     Type
 34807 ;;		None
 34808 ;; Auto vars:     Size  Location     Type
 34809 ;;  returnValue     1   15[COMRAM] enum E355
 34810 ;; Return value:  Size  Location     Type
 34811 ;;                  1    wreg      enum E355
 34812 ;; Registers used:
 34813 ;;		wreg, status,2, cstack
 34814 ;; Tracked objects:
 34815 ;;		On entry : 0/2
 34816 ;;		On exit  : 33/2
 34817 ;;		Unchanged: 0/0
 34818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34820 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34822 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34823 ;;Total ram usage:        1 bytes
 34824 ;; Hardware stack levels used: 1
 34825 ;; Hardware stack levels required when called: 5
 34826 ;; This function calls:
 34827 ;;		_I2C1_MasterClearIrq
 34828 ;;		_I2C1_MasterClose
 34829 ;;		_I2C1_MasterDisableIrq
 34830 ;; This function is called by:
 34831 ;;		_i2c_writeNBytes
 34832 ;;		_i2c_readDataBlock
 34833 ;;		_I2C1_Read1ByteRegister
 34834 ;; This function uses a non-reentrant model
 34835 ;;
 34836                           
 34837                           	psect	text183
 34838  009CE6                     __ptext183:
 34839                           	callstack 0
 34840  009CE6                     _I2C1_Close:
 34841                           	callstack 20
 34842                           
 34843                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 34844                           
 34845                           ; BSR set to: 2
 34846                           ;incstack = 0
 34847  009CE6  0E01               	movlw	1
 34848  009CE8  6E10               	movwf	I2C1_Close@returnValue^0,c
 34849                           
 34850                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 34851  009CEA  0102               	movlb	2	; () banked
 34852  009CEC  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 34853  009CEE  D00A               	goto	l20529
 34854                           
 34855                           ; BSR set to: 2
 34856                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 34857  009CF0  955F               	bcf	(_I2C1_Status+35)& (0+255),2,b
 34858                           
 34859                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 34860  009CF2  6958               	setf	(_I2C1_Status+28)& (0+255),b
 34861                           
 34862                           ; BSR set to: 2
 34863                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 34864  009CF4  EC3A  F050         	call	_I2C1_MasterClearIrq	;wreg free
 34865                           
 34866                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 34867  009CF8  EC55  F050         	call	_I2C1_MasterDisableIrq	;wreg free
 34868                           
 34869                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 34870  009CFC  EC57  F050         	call	_I2C1_MasterClose	;wreg free
 34871                           
 34872                           ; BSR set to: 14
 34873                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 34874  009D00  C25E  F010         	movff	_I2C1_Status+34,I2C1_Close@returnValue
 34875  009D04                     l20529:
 34876                           
 34877                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 34878  009D04  5010               	movf	I2C1_Close@returnValue^0,w,c
 34879  009D06  0012               	return		;funcret
 34880  009D08                     __end_of_I2C1_Close:
 34881                           	callstack 0
 34882                           
 34883 ;; *************** function _I2C1_MasterDisableIrq *****************
 34884 ;; Defined at:
 34885 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 34886 ;; Parameters:    Size  Location     Type
 34887 ;;		None
 34888 ;; Auto vars:     Size  Location     Type
 34889 ;;		None
 34890 ;; Return value:  Size  Location     Type
 34891 ;;                  1    wreg      void 
 34892 ;; Registers used:
 34893 ;;		None
 34894 ;; Tracked objects:
 34895 ;;		On entry : 3F/E
 34896 ;;		On exit  : 3F/E
 34897 ;;		Unchanged: 0/0
 34898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34903 ;;Total ram usage:        0 bytes
 34904 ;; Hardware stack levels used: 1
 34905 ;; Hardware stack levels required when called: 4
 34906 ;; This function calls:
 34907 ;;		Nothing
 34908 ;; This function is called by:
 34909 ;;		_I2C1_Close
 34910 ;; This function uses a non-reentrant model
 34911 ;;
 34912                           
 34913                           	psect	text184
 34914  00A0AA                     __ptext184:
 34915                           	callstack 0
 34916  00A0AA                     _I2C1_MasterDisableIrq:
 34917                           	callstack 20
 34918                           
 34919                           ; BSR set to: 14
 34920                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 34921                           
 34922                           ;incstack = 0
 34923  00A0AA  91C5               	bcf	197,0,b	;volatile
 34924                           
 34925                           ; BSR set to: 14
 34926  00A0AC  0012               	return		;funcret
 34927  00A0AE                     __end_of_I2C1_MasterDisableIrq:
 34928                           	callstack 0
 34929                           
 34930 ;; *************** function _I2C1_MasterClose *****************
 34931 ;; Defined at:
 34932 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 34933 ;; Parameters:    Size  Location     Type
 34934 ;;		None
 34935 ;; Auto vars:     Size  Location     Type
 34936 ;;		None
 34937 ;; Return value:  Size  Location     Type
 34938 ;;                  1    wreg      void 
 34939 ;; Registers used:
 34940 ;;		None
 34941 ;; Tracked objects:
 34942 ;;		On entry : 3F/E
 34943 ;;		On exit  : 3F/E
 34944 ;;		Unchanged: 3F/0
 34945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34950 ;;Total ram usage:        0 bytes
 34951 ;; Hardware stack levels used: 1
 34952 ;; Hardware stack levels required when called: 4
 34953 ;; This function calls:
 34954 ;;		Nothing
 34955 ;; This function is called by:
 34956 ;;		_I2C1_Close
 34957 ;; This function uses a non-reentrant model
 34958 ;;
 34959                           
 34960                           	psect	text185
 34961  00A0AE                     __ptext185:
 34962                           	callstack 0
 34963  00A0AE                     _I2C1_MasterClose:
 34964                           	callstack 20
 34965                           
 34966                           ; BSR set to: 14
 34967                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 34968                           
 34969                           ; BSR set to: 14
 34970                           ;incstack = 0
 34971  00A0AE  9A96               	bcf	150,5,c	;volatile
 34972                           
 34973                           ; BSR set to: 14
 34974  00A0B0  0012               	return		;funcret
 34975  00A0B2                     __end_of_I2C1_MasterClose:
 34976                           	callstack 0
 34977                           
 34978 ;; *************** function _I2C1_MasterClearIrq *****************
 34979 ;; Defined at:
 34980 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 34981 ;; Parameters:    Size  Location     Type
 34982 ;;		None
 34983 ;; Auto vars:     Size  Location     Type
 34984 ;;		None
 34985 ;; Return value:  Size  Location     Type
 34986 ;;                  1    wreg      void 
 34987 ;; Registers used:
 34988 ;;		None
 34989 ;; Tracked objects:
 34990 ;;		On entry : 33/2
 34991 ;;		On exit  : 3F/E
 34992 ;;		Unchanged: 0/0
 34993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34998 ;;Total ram usage:        0 bytes
 34999 ;; Hardware stack levels used: 1
 35000 ;; Hardware stack levels required when called: 4
 35001 ;; This function calls:
 35002 ;;		Nothing
 35003 ;; This function is called by:
 35004 ;;		_I2C1_Open
 35005 ;;		_I2C1_Close
 35006 ;;		_I2C1_MasterFsm
 35007 ;; This function uses a non-reentrant model
 35008 ;;
 35009                           
 35010                           	psect	text186
 35011  00A074                     __ptext186:
 35012                           	callstack 0
 35013  00A074                     _I2C1_MasterClearIrq:
 35014                           	callstack 20
 35015                           
 35016                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 35017                           
 35018                           ; BSR set to: 14
 35019                           ;incstack = 0
 35020  00A074  010E               	movlb	14	; () banked
 35021  00A076  91CD               	bcf	205,0,b	;volatile
 35022                           
 35023                           ; BSR set to: 14
 35024  00A078  0012               	return		;funcret
 35025  00A07A                     __end_of_I2C1_MasterClearIrq:
 35026                           	callstack 0
 35027                           
 35028 ;; *************** function _INTERRUPT_InterruptManager *****************
 35029 ;; Defined at:
 35030 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 35031 ;; Parameters:    Size  Location     Type
 35032 ;;		None
 35033 ;; Auto vars:     Size  Location     Type
 35034 ;;		None
 35035 ;; Return value:  Size  Location     Type
 35036 ;;                  1    wreg      void 
 35037 ;; Registers used:
 35038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 35039 ;; Tracked objects:
 35040 ;;		On entry : 0/0
 35041 ;;		On exit  : 0/0
 35042 ;;		Unchanged: 0/0
 35043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35046 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35047 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35048 ;;Total ram usage:        6 bytes
 35049 ;; Hardware stack levels used: 1
 35050 ;; Hardware stack levels required when called: 3
 35051 ;; This function calls:
 35052 ;;		Absolute function
 35053 ;;		_EUSART1_Receive_ISR
 35054 ;;		_EUSART1_Transmit_ISR
 35055 ;;		_TMR0_ISR
 35056 ;;		_TMR1_ISR
 35057 ;;		_TMR2_ISR
 35058 ;; This function is called by:
 35059 ;;		Interrupt level 2
 35060 ;; This function uses a non-reentrant model
 35061 ;;
 35062                           
 35063                           	psect	intcode
 35064  000008                     __pintcode:
 35065                           	callstack 0
 35066  000008                     _INTERRUPT_InterruptManager:
 35067                           	callstack 14
 35068                           
 35069                           ; BSR set to: 14
 35070                           ;incstack = 0
 35071  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 35072  00000A  CFFA F00A          	movff	pclath,??_INTERRUPT_InterruptManager
 35073  00000E  CFFB F00B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 35074  000012  CFD9 F00C          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 35075  000016  CFDA F00D          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 35076  00001A  CFF3 F00E          	movff	prodl,??_INTERRUPT_InterruptManager+4
 35077  00001E  CFF4 F00F          	movff	prodh,??_INTERRUPT_InterruptManager+5
 35078                           
 35079                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 35080  000022  010E               	movlb	14	; () banked
 35081  000024  BBC2               	btfsc	194,5,b	;volatile
 35082                           
 35083                           ; BSR set to: 14
 35084  000026  ABCA               	btfss	202,5,b	;volatile
 35085  000028  D003               	goto	i2l867
 35086                           
 35087                           ; BSR set to: 14
 35088                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 35089  00002A  EC19  F04E         	call	_TMR0_ISR	;wreg free
 35090                           
 35091                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 35092  00002E  D028               	goto	i2l873
 35093  000030                     i2l867:
 35094                           
 35095                           ; BSR set to: 14
 35096  000030  ACF2               	btfss	242,6,c	;volatile
 35097  000032  D026               	goto	i2l873
 35098                           
 35099                           ; BSR set to: 14
 35100                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
 35101  000034  B9C5               	btfsc	197,4,b	;volatile
 35102                           
 35103                           ; BSR set to: 14
 35104  000036  A9CD               	btfss	205,4,b	;volatile
 35105  000038  D009               	goto	i2l870
 35106                           
 35107                           ; BSR set to: 14
 35108                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_TxDefaultInterruptHandler();
 35109  00003A  D801               	call	i2u2318_48
 35110  00003C  D021               	goto	i2l873
 35111  00003E                     i2u2318_48:
 35112  00003E  0005               	push	
 35113  000040  6EFA               	movwf	pclath,c
 35114  000042  0102               	movlb	2	; () banked
 35115  000044  51ED               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 35116  000046  6EFD               	movwf	tosl,c
 35117  000048  51EE               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 35118  00004A  D00B               	goto	L114
 35119  00004C                     i2l870:
 35120                           
 35121                           ; BSR set to: 14
 35122  00004C  BBC5               	btfsc	197,5,b	;volatile
 35123                           
 35124                           ; BSR set to: 14
 35125  00004E  ABCD               	btfss	205,5,b	;volatile
 35126  000050  D00C               	goto	i2l872
 35127                           
 35128                           ; BSR set to: 14
 35129                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_RxDefaultInterruptHandler();
 35130  000052  D801               	call	i2u2321_48
 35131  000054  D015               	goto	i2l873
 35132  000056                     i2u2321_48:
 35133  000056  0005               	push	
 35134  000058  6EFA               	movwf	pclath,c
 35135  00005A  0102               	movlb	2	; () banked
 35136  00005C  51EB               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 35137  00005E  6EFD               	movwf	tosl,c
 35138  000060  51EC               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 35139  000062                     L114:
 35140  000062  6EFE               	movwf	tosh,c
 35141  000064  6AFF               	clrf	tosu,c
 35142  000066  50FA               	movf	pclath,w,c
 35143  000068  0012               	return		;indir
 35144  00006A                     i2l872:
 35145                           
 35146                           ; BSR set to: 14
 35147  00006A  B1C6               	btfsc	198,0,b	;volatile
 35148                           
 35149                           ; BSR set to: 14
 35150  00006C  A1CE               	btfss	206,0,b	;volatile
 35151  00006E  D003               	goto	i2l874
 35152                           
 35153                           ; BSR set to: 14
 35154                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR1_ISR();
 35155  000070  EC8F  F04B         	call	_TMR1_ISR	;wreg free
 35156                           
 35157                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 35158  000074  D005               	goto	i2l873
 35159  000076                     i2l874:
 35160                           
 35161                           ; BSR set to: 14
 35162  000076  B3C6               	btfsc	198,1,b	;volatile
 35163                           
 35164                           ; BSR set to: 14
 35165  000078  A3CE               	btfss	206,1,b	;volatile
 35166  00007A  D002               	goto	i2l873
 35167                           
 35168                           ; BSR set to: 14
 35169                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             TMR2_ISR();
 35170  00007C  EC9C  F036         	call	_TMR2_ISR	;wreg free
 35171  000080                     i2l873:
 35172                           
 35173                           ; BSR set to: 14
 35174  000080  C00F  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
 35175  000084  C00E  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
 35176  000088  C00D  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 35177  00008C  C00C  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 35178  000090  C00B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 35179  000094  C00A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 35180  000098  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 35181  00009A  0011               	retfie		f
 35182  00009C                     __end_of_INTERRUPT_InterruptManager:
 35183                           	callstack 0
 35184                           
 35185 ;; *************** function _TMR2_ISR *****************
 35186 ;; Defined at:
 35187 ;;		line 180 in file "mcc_generated_files/tmr2.c"
 35188 ;; Parameters:    Size  Location     Type
 35189 ;;		None
 35190 ;; Auto vars:     Size  Location     Type
 35191 ;;		None
 35192 ;; Return value:  Size  Location     Type
 35193 ;;                  1    wreg      void 
 35194 ;; Registers used:
 35195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 35196 ;; Tracked objects:
 35197 ;;		On entry : 3F/E
 35198 ;;		On exit  : 0/0
 35199 ;;		Unchanged: 0/0
 35200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35205 ;;Total ram usage:        0 bytes
 35206 ;; Hardware stack levels used: 1
 35207 ;; Hardware stack levels required when called: 2
 35208 ;; This function calls:
 35209 ;;		Absolute function
 35210 ;;		_ReadADC
 35211 ;;		_TMR2_DefaultInterruptHandler
 35212 ;;		_controlTimeslots
 35213 ;;		_refreshSegment
 35214 ;; This function is called by:
 35215 ;;		_INTERRUPT_InterruptManager
 35216 ;; This function uses a non-reentrant model
 35217 ;;
 35218                           
 35219                           	psect	text188
 35220  006D38                     __ptext188:
 35221                           	callstack 0
 35222  006D38                     _TMR2_ISR:
 35223                           	callstack 14
 35224                           
 35225                           ; BSR set to: 14
 35226                           ;mcc_generated_files/tmr2.c: 184:     PIR4bits.TMR2IF = 0;
 35227                           
 35228                           ;incstack = 0
 35229  006D38  93CE               	bcf	206,1,b	;volatile
 35230                           
 35231                           ; BSR set to: 14
 35232                           ;mcc_generated_files/tmr2.c: 188:                 ReadADC();
 35233  006D3A  EC42  F049         	call	_ReadADC	;wreg free
 35234                           
 35235                           ;mcc_generated_files/tmr2.c: 191:             refreshSegment();
 35236  006D3E  ECA0  F042         	call	_refreshSegment	;wreg free
 35237                           
 35238                           ;mcc_generated_files/tmr2.c: 193:             if(ts_system.ts_TimeSlotMain>0)
 35239  006D42  0101               	movlb	1	; () banked
 35240  006D44  51A1               	movf	(_ts_system+3)& (0+255),w,b	;volatile
 35241  006D46  A4D8               	btfss	status,2,c
 35242                           
 35243                           ; BSR set to: 1
 35244                           ;mcc_generated_files/tmr2.c: 194:                 {;mcc_generated_files/tmr2.c: 195:    
      +                                       ts_system.ts_TimeSlotMain--;
 35245  006D48  07A1               	decf	(_ts_system+3)& (0+255),f,b	;volatile
 35246                           
 35247                           ; BSR set to: 1
 35248                           ;mcc_generated_files/tmr2.c: 198:             if (ts_system.ts_TimeSlot50ms > 0)
 35249  006D4A  519F               	movf	(_ts_system+1)& (0+255),w,b	;volatile
 35250  006D4C  B4D8               	btfsc	status,2,c
 35251  006D4E  D002               	goto	i2l17049
 35252                           
 35253                           ; BSR set to: 1
 35254                           ;mcc_generated_files/tmr2.c: 199:                 {;mcc_generated_files/tmr2.c: 200:    
      +                                       ts_system.ts_TimeSlot50ms--;
 35255  006D50  079F               	decf	(_ts_system+1)& (0+255),f,b	;volatile
 35256                           
 35257                           ;mcc_generated_files/tmr2.c: 201:                 }
 35258  006D52  D089               	goto	i2l17121
 35259  006D54                     i2l17049:
 35260                           
 35261                           ; BSR set to: 1
 35262                           ;mcc_generated_files/tmr2.c: 203:                 {;mcc_generated_files/tmr2.c: 204:    
      +                                       ts_system.ts_TimeSlot50ms = 50;
 35263  006D54  0E32               	movlw	50
 35264  006D56  6F9F               	movwf	(_ts_system+1)& (0+255),b	;volatile
 35265                           
 35266                           ; BSR set to: 1
 35267                           ;mcc_generated_files/tmr2.c: 208:                     controlTimeslots();
 35268  006D58  ECC1  F032         	call	_controlTimeslots	;wreg free
 35269                           
 35270                           ; BSR set to: 1
 35271                           ;mcc_generated_files/tmr2.c: 210:                       if (Counterchoose == 0)
 35272  006D5C  0100               	movlb	0	; () banked
 35273  006D5E  5192               	movf	_Counterchoose& (0+255),w,b
 35274  006D60  A4D8               	btfss	status,2,c
 35275  006D62  D002               	goto	i2l17057
 35276                           
 35277                           ; BSR set to: 0
 35278                           ;mcc_generated_files/tmr2.c: 211:                                {;mcc_generated_files/t
      +                          mr2.c: 212:                                    Counterchoose = 1;
 35279  006D64  0E01               	movlw	1
 35280  006D66  D001               	goto	L115
 35281  006D68                     i2l17057:
 35282                           
 35283                           ; BSR set to: 0
 35284                           ;mcc_generated_files/tmr2.c: 215:                                {;mcc_generated_files/t
      +                          mr2.c: 216:                                    Counterchoose = 0;
 35285  006D68  0E00               	movlw	0
 35286  006D6A                     L115:
 35287  006D6A  6F92               	movwf	_Counterchoose& (0+255),b
 35288                           
 35289                           ; BSR set to: 0
 35290                           ;mcc_generated_files/tmr2.c: 218:                            if (var_sys.LearningIsEnabl
      +                          ed==NO)
 35291                           
 35292                           ;mcc_generated_files/tmr2.c: 217:                                }
 35293  006D6C  0101               	movlb	1	; () banked
 35294  006D6E  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 35295  006D70  A4D8               	btfss	status,2,c
 35296  006D72  D034               	goto	i2l17083
 35297                           
 35298                           ; BSR set to: 1
 35299                           ;mcc_generated_files/tmr2.c: 219:                            {;mcc_generated_files/tmr2.
      +                          c: 222:                                if (var_sys.TimeMaxMotorIsON > 0 && var_sys.Activ
      +                          atecounter != stoped)
 35300  006D74  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 35301  006D76  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 35302  006D78  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 35303  006D7A  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 35304  006D7C  B4D8               	btfsc	status,2,c
 35305  006D7E  D008               	goto	i2l1266
 35306                           
 35307                           ; BSR set to: 1
 35308  006D80  5116               	movf	(_var_sys+22)& (0+255),w,b	;volatile
 35309  006D82  B4D8               	btfsc	status,2,c
 35310  006D84  D005               	goto	i2l1266
 35311                           
 35312                           ; BSR set to: 1
 35313                           ;mcc_generated_files/tmr2.c: 223:                                {;mcc_generated_files/t
      +                          mr2.c: 225:                                     var_sys.TimeMaxMotorIsON--;
 35314  006D86  0718               	decf	(_var_sys+24)& (0+255),f,b	;volatile
 35315  006D88  0E00               	movlw	0
 35316  006D8A  5B19               	subwfb	(_var_sys+25)& (0+255),f,b	;volatile
 35317  006D8C  5B1A               	subwfb	(_var_sys+26)& (0+255),f,b	;volatile
 35318  006D8E  5B1B               	subwfb	(_var_sys+27)& (0+255),f,b	;volatile
 35319  006D90                     i2l1266:
 35320                           
 35321                           ; BSR set to: 1
 35322                           ;mcc_generated_files/tmr2.c: 230:                                if (var_sys.Activatecou
      +                          nter == open)
 35323  006D90  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 35324  006D92  A4D8               	btfss	status,2,c
 35325  006D94  D00E               	goto	i2l17073
 35326                           
 35327                           ; BSR set to: 1
 35328                           ;mcc_generated_files/tmr2.c: 231:                                {;mcc_generated_files/t
      +                          mr2.c: 232:                                    {;mcc_generated_files/tmr2.c: 234:       
      +                                                            if (powerControl_st.decelarationActive==YES)
 35329  006D96  057B               	decf	_powerControl_st& (0+255),w,b
 35330  006D98  A4D8               	btfss	status,2,c
 35331  006D9A  D004               	goto	i2u1931_40
 35332                           
 35333                           ; BSR set to: 1
 35334                           ;mcc_generated_files/tmr2.c: 235:                                         {;mcc_generate
      +                          d_files/tmr2.c: 236:                                             if(Counterchoose ==1){
 35335  006D9C  0100               	movlb	0	; () banked
 35336  006D9E  0592               	decf	_Counterchoose& (0+255),w,b
 35337  006DA0  A4D8               	btfss	status,2,c
 35338  006DA2  D061               	goto	i2l17121
 35339  006DA4                     i2u1931_40:
 35340                           
 35341                           ;mcc_generated_files/tmr2.c: 237:                                               var_sys.
      +                          PositionActual++;
 35342  006DA4  0E01               	movlw	1
 35343  006DA6  0101               	movlb	1	; () banked
 35344  006DA8  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 35345  006DAA  0E00               	movlw	0
 35346  006DAC  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 35347  006DAE  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 35348  006DB0  D013               	goto	L116
 35349  006DB2                     i2l17073:
 35350                           
 35351                           ; BSR set to: 1
 35352  006DB2  0E02               	movlw	2
 35353  006DB4  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 35354  006DB6  A4D8               	btfss	status,2,c
 35355  006DB8  D056               	goto	i2l17121
 35356                           
 35357                           ; BSR set to: 1
 35358                           ;mcc_generated_files/tmr2.c: 250:                                {;mcc_generated_files/t
      +                          mr2.c: 251:                                        if (powerControl_st.decelarationActiv
      +                          e==YES)
 35359  006DBA  057B               	decf	_powerControl_st& (0+255),w,b
 35360  006DBC  A4D8               	btfss	status,2,c
 35361  006DBE  D004               	goto	i2u1934_40
 35362                           
 35363                           ; BSR set to: 1
 35364                           ;mcc_generated_files/tmr2.c: 252:                                         {;mcc_generate
      +                          d_files/tmr2.c: 253:                                             if(Counterchoose ==1){
 35365  006DC0  0100               	movlb	0	; () banked
 35366  006DC2  0592               	decf	_Counterchoose& (0+255),w,b
 35367  006DC4  A4D8               	btfss	status,2,c
 35368  006DC6  D04F               	goto	i2l17121
 35369  006DC8                     i2u1934_40:
 35370                           
 35371                           ;mcc_generated_files/tmr2.c: 254:                                               var_sys.
      +                          PositionActual--;
 35372  006DC8  0EFF               	movlw	255
 35373  006DCA  0101               	movlb	1	; () banked
 35374  006DCC  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 35375  006DCE  0EFF               	movlw	255
 35376  006DD0  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 35377  006DD2  0EFF               	movlw	255
 35378  006DD4  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 35379  006DD6  0EFF               	movlw	255
 35380  006DD8                     L116:
 35381  006DD8  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 35382                           
 35383                           ;mcc_generated_files/tmr2.c: 263:                            }
 35384  006DDA  D045               	goto	i2l17121
 35385  006DDC                     i2l17083:
 35386                           
 35387                           ; BSR set to: 1
 35388                           ;mcc_generated_files/tmr2.c: 266:                            {;mcc_generated_files/tmr2.
      +                          c: 267:                                if (var_sys.Counter_Learning ==1)
 35389  006DDC  0517               	decf	(_var_sys+23)& (0+255),w,b	;volatile
 35390  006DDE  A4D8               	btfss	status,2,c
 35391  006DE0  D01C               	goto	i2l1277
 35392                           
 35393                           ; BSR set to: 1
 35394                           ;mcc_generated_files/tmr2.c: 268:                                {;mcc_generated_files/t
      +                          mr2.c: 270:                                     if (var_sys.Activatecounter == open)
 35395  006DE2  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 35396  006DE4  A4D8               	btfss	status,2,c
 35397  006DE6  D00B               	goto	i2l17093
 35398                           
 35399                           ; BSR set to: 1
 35400                           ;mcc_generated_files/tmr2.c: 271:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 273:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 35401  006DE8  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 35402  006DEA  B4D8               	btfsc	status,2,c
 35403  006DEC  D016               	goto	i2l1277
 35404                           
 35405                           ; BSR set to: 1
 35406                           ;mcc_generated_files/tmr2.c: 282:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 283:                                              learn_st.timeOpen++
      +                          ;
 35407  006DEE  0E01               	movlw	1
 35408  006DF0  0100               	movlb	0	; () banked
 35409  006DF2  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 35410  006DF4  0E00               	movlw	0
 35411  006DF6  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 35412  006DF8  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 35413  006DFA  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 35414  006DFC  D00E               	goto	i2l1277
 35415  006DFE                     i2l17093:
 35416                           
 35417                           ; BSR set to: 1
 35418  006DFE  0E02               	movlw	2
 35419  006E00  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 35420  006E02  A4D8               	btfss	status,2,c
 35421  006E04  D00A               	goto	i2l1277
 35422                           
 35423                           ; BSR set to: 1
 35424                           ;mcc_generated_files/tmr2.c: 287:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 289:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 35425  006E06  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 35426  006E08  B4D8               	btfsc	status,2,c
 35427  006E0A  D007               	goto	i2l1277
 35428                           
 35429                           ; BSR set to: 1
 35430                           ;mcc_generated_files/tmr2.c: 297:                                             {;mcc_gene
      +                          rated_files/tmr2.c: 298:                                                learn_st.timeClo
      +                          se++;
 35431  006E0C  0E01               	movlw	1
 35432  006E0E  0100               	movlb	0	; () banked
 35433  006E10  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 35434  006E12  0E00               	movlw	0
 35435  006E14  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 35436  006E16  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 35437  006E18  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 35438  006E1A                     i2l1277:
 35439                           
 35440                           ;mcc_generated_files/tmr2.c: 304:                                 if (var_sys.LearningDe
      +                          celaration ==1 && var_sys.programinAutomatic == 1)
 35441  006E1A  0101               	movlb	1	; () banked
 35442  006E1C  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 35443  006E1E  A4D8               	btfss	status,2,c
 35444  006E20  D022               	goto	i2l17121
 35445                           
 35446                           ; BSR set to: 1
 35447  006E22  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 35448  006E24  A4D8               	btfss	status,2,c
 35449  006E26  D01F               	goto	i2l17121
 35450                           
 35451                           ; BSR set to: 1
 35452                           ;mcc_generated_files/tmr2.c: 305:                                 {;mcc_generated_files/
      +                          tmr2.c: 308:                                        if ( ts_system.ts_TimeSlot500ms > 0)
 35453  006E28  519E               	movf	_ts_system& (0+255),w,b	;volatile
 35454  006E2A  B4D8               	btfsc	status,2,c
 35455  006E2C  D002               	goto	i2l17107
 35456                           
 35457                           ; BSR set to: 1
 35458                           ;mcc_generated_files/tmr2.c: 309:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 310:                                                ts_system.ts_Time
      +                          Slot500ms--;
 35459  006E2E  079E               	decf	_ts_system& (0+255),f,b	;volatile
 35460                           
 35461                           ;mcc_generated_files/tmr2.c: 311:                                            }
 35462  006E30  D01A               	goto	i2l17121
 35463  006E32                     i2l17107:
 35464                           
 35465                           ; BSR set to: 1
 35466                           ;mcc_generated_files/tmr2.c: 314:                                          {;mcc_generat
      +                          ed_files/tmr2.c: 315:                                             ts_system.ts_TimeSlot5
      +                          00ms = 10;
 35467  006E32  0E0A               	movlw	10
 35468  006E34  6F9E               	movwf	_ts_system& (0+255),b	;volatile
 35469                           
 35470                           ; BSR set to: 1
 35471                           ;mcc_generated_files/tmr2.c: 317:                                             if ( var_s
      +                          ys.Activatecounter ==open )
 35472  006E36  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 35473  006E38  A4D8               	btfss	status,2,c
 35474  006E3A  D009               	goto	i2l17115
 35475                           
 35476                           ; BSR set to: 1
 35477                           ;mcc_generated_files/tmr2.c: 318:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 319:                                                  learn_st.ti
      +                          meDecelerationOpen++;
 35478  006E3C  0100               	movlb	0	; () banked
 35479  006E3E  2B69               	incf	(_learn_st+9)& (0+255),f,b	;volatile
 35480                           
 35481                           ; BSR set to: 0
 35482                           ;mcc_generated_files/tmr2.c: 320:                                                  learn
      +                          _st.timeOpen++;
 35483  006E40  0E01               	movlw	1
 35484  006E42  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 35485  006E44  0E00               	movlw	0
 35486  006E46  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 35487  006E48  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 35488  006E4A  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 35489                           
 35490                           ;mcc_generated_files/tmr2.c: 322:                                                }
 35491  006E4C  D00C               	goto	i2l17121
 35492  006E4E                     i2l17115:
 35493                           
 35494                           ; BSR set to: 1
 35495  006E4E  0E02               	movlw	2
 35496  006E50  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 35497  006E52  A4D8               	btfss	status,2,c
 35498  006E54  D008               	goto	i2l17121
 35499                           
 35500                           ; BSR set to: 1
 35501                           ;mcc_generated_files/tmr2.c: 325:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 326:                                                  learn_st.ti
      +                          meDecelerationClose++;
 35502  006E56  0100               	movlb	0	; () banked
 35503  006E58  2B68               	incf	(_learn_st+8)& (0+255),f,b	;volatile
 35504                           
 35505                           ; BSR set to: 0
 35506                           ;mcc_generated_files/tmr2.c: 327:                                                  learn
      +                          _st.timeClose++;
 35507  006E5A  0E01               	movlw	1
 35508  006E5C  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 35509  006E5E  0E00               	movlw	0
 35510  006E60  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 35511  006E62  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 35512  006E64  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 35513  006E66                     i2l17121:
 35514                           
 35515                           ;mcc_generated_files/tmr2.c: 335:     if(TMR2_InterruptHandler)
 35516  006E66  0102               	movlb	2	; () banked
 35517  006E68  51DD               	movf	_TMR2_InterruptHandler& (0+255),w,b
 35518  006E6A  11DE               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 35519  006E6C  B4D8               	btfsc	status,2,c
 35520  006E6E  0012               	return	
 35521                           
 35522                           ; BSR set to: 2
 35523                           ;mcc_generated_files/tmr2.c: 336:     {;mcc_generated_files/tmr2.c: 337:         TMR2_In
      +                          terruptHandler();
 35524  006E70  D801               	call	i2u1946_48
 35525  006E72  0012               	return	
 35526  006E74                     i2u1946_48:
 35527  006E74  0005               	push	
 35528  006E76  6EFA               	movwf	pclath,c
 35529  006E78  51DD               	movf	_TMR2_InterruptHandler& (0+255),w,b
 35530  006E7A  6EFD               	movwf	tosl,c
 35531  006E7C  51DE               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 35532  006E7E  6EFE               	movwf	tosh,c
 35533  006E80  6AFF               	clrf	tosu,c
 35534  006E82  50FA               	movf	pclath,w,c
 35535  006E84  0012               	return		;indir
 35536  006E86                     __end_of_TMR2_ISR:
 35537                           	callstack 0
 35538                           
 35539 ;; *************** function _refreshSegment *****************
 35540 ;; Defined at:
 35541 ;;		line 50 in file "outputs_MC50.c"
 35542 ;; Parameters:    Size  Location     Type
 35543 ;;		None
 35544 ;; Auto vars:     Size  Location     Type
 35545 ;;		None
 35546 ;; Return value:  Size  Location     Type
 35547 ;;                  1    wreg      void 
 35548 ;; Registers used:
 35549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35550 ;; Tracked objects:
 35551 ;;		On entry : 31/E
 35552 ;;		On exit  : 3E/0
 35553 ;;		Unchanged: 0/0
 35554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35559 ;;Total ram usage:        0 bytes
 35560 ;; Hardware stack levels used: 1
 35561 ;; Hardware stack levels required when called: 1
 35562 ;; This function calls:
 35563 ;;		_Segments_Set
 35564 ;; This function is called by:
 35565 ;;		_TMR2_ISR
 35566 ;; This function uses a non-reentrant model
 35567 ;;
 35568                           
 35569                           	psect	text189
 35570  008540                     __ptext189:
 35571                           	callstack 0
 35572  008540                     _refreshSegment:
 35573                           	callstack 14
 35574                           
 35575                           ;outputs_MC50.c: 54:     if (dispStruct.intermitentFreq==0||dispStruct.upFase==1)
 35576                           
 35577                           ;incstack = 0
 35578  008540  0100               	movlb	0	; () banked
 35579  008542  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 35580  008544  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 35581  008546  B4D8               	btfsc	status,2,c
 35582  008548  D003               	goto	i2u1555_40
 35583                           
 35584                           ; BSR set to: 0
 35585  00854A  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 35586  00854C  A4D8               	btfss	status,2,c
 35587  00854E  D01F               	goto	i2l2133
 35588  008550                     i2u1555_40:
 35589                           
 35590                           ; BSR set to: 0
 35591                           ;outputs_MC50.c: 55:     {;outputs_MC50.c: 56:         if (dispStruct.lastDisplay==disp2
      +                          _e)
 35592  008550  0574               	decf	(_dispStruct+2)& (0+255),w,b	;volatile
 35593  008552  A4D8               	btfss	status,2,c
 35594  008554  D00D               	goto	i2l2128
 35595                           
 35596                           ; BSR set to: 0
 35597                           
 35598                           ;outputs_MC50.c: 57:         {;outputs_MC50.c: 58:             do { LATCbits.LATC0 = 0; 
      +                          } while(0);
 35599  008556  9085               	bcf	133,0,c	;volatile
 35600                           
 35601                           ; BSR set to: 0
 35602                           ;outputs_MC50.c: 59:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play1]);
 35603  008558  0ED2               	movlw	low _DispTable
 35604  00855A  2572               	addwf	_dispStruct& (0+255),w,b	;volatile
 35605  00855C  6ED9               	movwf	fsr2l,c
 35606  00855E  6ADA               	clrf	fsr2h,c
 35607  008560  0E03               	movlw	high _DispTable
 35608  008562  22DA               	addwfc	fsr2h,f,c
 35609  008564  50DF               	movf	indf2,w,c
 35610  008566  ECBE  F04F         	call	_Segments_Set
 35611  00856A  8285               	bsf	133,1,c	;volatile
 35612                           
 35613                           ;outputs_MC50.c: 61:             dispStruct.lastDisplay=disp1_e;
 35614  00856C  0E00               	movlw	0
 35615  00856E  D00C               	goto	L117
 35616  008570                     i2l2128:
 35617                           
 35618                           ; BSR set to: 0
 35619  008570  9285               	bcf	133,1,c	;volatile
 35620                           
 35621                           ; BSR set to: 0
 35622                           ;outputs_MC50.c: 66:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play2]);
 35623  008572  0ED2               	movlw	low _DispTable
 35624  008574  2573               	addwf	(_dispStruct+1)& (0+255),w,b	;volatile
 35625  008576  6ED9               	movwf	fsr2l,c
 35626  008578  6ADA               	clrf	fsr2h,c
 35627  00857A  0E03               	movlw	high _DispTable
 35628  00857C  22DA               	addwfc	fsr2h,f,c
 35629  00857E  50DF               	movf	indf2,w,c
 35630  008580  ECBE  F04F         	call	_Segments_Set
 35631  008584  8085               	bsf	133,0,c	;volatile
 35632                           
 35633                           ;outputs_MC50.c: 68:             dispStruct.lastDisplay=disp2_e;
 35634  008586  0E01               	movlw	1
 35635  008588                     L117:
 35636  008588  0100               	movlb	0	; () banked
 35637  00858A  6F74               	movwf	(_dispStruct+2)& (0+255),b	;volatile
 35638  00858C  D002               	goto	i2l15247
 35639  00858E                     i2l2133:
 35640                           
 35641                           ; BSR set to: 0
 35642  00858E  9085               	bcf	133,0,c	;volatile
 35643                           
 35644                           ; BSR set to: 0
 35645                           
 35646                           ;outputs_MC50.c: 75:         do { LATCbits.LATC1 = 0; } while(0);
 35647  008590  9285               	bcf	133,1,c	;volatile
 35648  008592                     i2l15247:
 35649                           
 35650                           ; BSR set to: 0
 35651                           ;outputs_MC50.c: 79:     if(ts_system.timeFreqDigit<=0 && dispStruct.intermitentFreq!=0)
 35652  008592  0101               	movlb	1	; () banked
 35653  008594  BFA9               	btfsc	(_ts_system+11)& (0+255),7,b	;volatile
 35654  008596  D005               	goto	i2u1557_40
 35655  008598  51A9               	movf	(_ts_system+11)& (0+255),w,b	;volatile
 35656  00859A  E114               	bnz	i2l2140
 35657  00859C  05A8               	decf	(_ts_system+10)& (0+255),w,b	;volatile
 35658  00859E  B0D8               	btfsc	status,0,c
 35659  0085A0  0012               	return	
 35660  0085A2                     i2u1557_40:
 35661                           
 35662                           ; BSR set to: 1
 35663  0085A2  0100               	movlb	0	; () banked
 35664  0085A4  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 35665  0085A6  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 35666  0085A8  B4D8               	btfsc	status,2,c
 35667  0085AA  0012               	return	
 35668                           
 35669                           ; BSR set to: 0
 35670                           ;outputs_MC50.c: 80:     {;outputs_MC50.c: 81:         ts_system.timeFreqDigit=dispStruc
      +                          t.intermitentFreq;
 35671  0085AC  C075  F1A8         	movff	_dispStruct+3,_ts_system+10	;volatile
 35672  0085B0  C076  F1A9         	movff	_dispStruct+4,_ts_system+11	;volatile
 35673                           
 35674                           ; BSR set to: 0
 35675                           ;outputs_MC50.c: 82:         if(dispStruct.upFase==1)
 35676  0085B4  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 35677  0085B6  A4D8               	btfss	status,2,c
 35678  0085B8  D003               	goto	i2l15257
 35679                           
 35680                           ; BSR set to: 0
 35681                           ;outputs_MC50.c: 83:         {;outputs_MC50.c: 84:             dispStruct.upFase = 0;
 35682  0085BA  0E00               	movlw	0
 35683  0085BC  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 35684                           
 35685                           ;outputs_MC50.c: 85:         }
 35686  0085BE  0012               	return	
 35687  0085C0                     i2l15257:
 35688                           
 35689                           ; BSR set to: 0
 35690                           ;outputs_MC50.c: 87:         {;outputs_MC50.c: 88:             dispStruct.upFase = 1;
 35691  0085C0  0E01               	movlw	1
 35692  0085C2  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 35693  0085C4                     i2l2140:
 35694  0085C4  0012               	return		;funcret
 35695  0085C6                     __end_of_refreshSegment:
 35696                           	callstack 0
 35697                           
 35698 ;; *************** function _Segments_Set *****************
 35699 ;; Defined at:
 35700 ;;		line 93 in file "outputs_MC50.c"
 35701 ;; Parameters:    Size  Location     Type
 35702 ;;  value           1    wreg     unsigned char 
 35703 ;; Auto vars:     Size  Location     Type
 35704 ;;  value           1    0[COMRAM] unsigned char 
 35705 ;; Return value:  Size  Location     Type
 35706 ;;                  1    wreg      void 
 35707 ;; Registers used:
 35708 ;;		wreg, status,2, status,0
 35709 ;; Tracked objects:
 35710 ;;		On entry : 3F/0
 35711 ;;		On exit  : 0/0
 35712 ;;		Unchanged: 0/0
 35713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35717 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35718 ;;Total ram usage:        1 bytes
 35719 ;; Hardware stack levels used: 1
 35720 ;; This function calls:
 35721 ;;		Nothing
 35722 ;; This function is called by:
 35723 ;;		_refreshSegment
 35724 ;; This function uses a non-reentrant model
 35725 ;;
 35726                           
 35727                           	psect	text190
 35728  009F7C                     __ptext190:
 35729                           	callstack 0
 35730  009F7C                     _Segments_Set:
 35731                           	callstack 14
 35732                           
 35733                           ;incstack = 0
 35734                           ;Segments_Set@value stored from wreg
 35735  009F7C  6E01               	movwf	Segments_Set@value^0,c
 35736                           
 35737                           ;outputs_MC50.c: 93: void Segments_Set(char value);outputs_MC50.c: 94: {;outputs_MC50.c:
      +                           95:    LATD &= 0x80;
 35738  009F7E  0E80               	movlw	128
 35739  009F80  1686               	andwf	134,f,c	;volatile
 35740                           
 35741                           ;outputs_MC50.c: 96:    LATD |= value;
 35742  009F82  5001               	movf	Segments_Set@value^0,w,c	;volatile
 35743  009F84  1286               	iorwf	134,f,c	;volatile
 35744  009F86  0012               	return		;funcret
 35745  009F88                     __end_of_Segments_Set:
 35746                           	callstack 0
 35747                           
 35748 ;; *************** function _controlTimeslots *****************
 35749 ;; Defined at:
 35750 ;;		line 190 in file "main_MC50.c"
 35751 ;; Parameters:    Size  Location     Type
 35752 ;;		None
 35753 ;; Auto vars:     Size  Location     Type
 35754 ;;		None
 35755 ;; Return value:  Size  Location     Type
 35756 ;;                  1    wreg      void 
 35757 ;; Registers used:
 35758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35759 ;; Tracked objects:
 35760 ;;		On entry : 3F/1
 35761 ;;		On exit  : 3F/1
 35762 ;;		Unchanged: 0/0
 35763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35768 ;;Total ram usage:        0 bytes
 35769 ;; Hardware stack levels used: 1
 35770 ;; Hardware stack levels required when called: 1
 35771 ;; This function calls:
 35772 ;;		_decrementTimeslot
 35773 ;; This function is called by:
 35774 ;;		_TMR2_ISR
 35775 ;; This function uses a non-reentrant model
 35776 ;;
 35777                           
 35778                           	psect	text191
 35779  006582                     __ptext191:
 35780                           	callstack 0
 35781  006582                     _controlTimeslots:
 35782                           	callstack 14
 35783                           
 35784                           ; BSR set to: 1
 35785                           ;main_MC50.c: 192:  decrementTimeslot((int*)&ts_system.Debug_TS);
 35786                           
 35787                           ;incstack = 0
 35788  006582  0EA6               	movlw	low (_ts_system+8)
 35789  006584  6E01               	movwf	decrementTimeslot@ts^0,c
 35790  006586  0E01               	movlw	high (_ts_system+8)
 35791  006588  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35792  00658A  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 35793                           
 35794                           ;main_MC50.c: 193:     decrementTimeslot((int*)&ts_system.timewaitFlashRGB);
 35795  00658E  0EE4               	movlw	low (_ts_system+70)
 35796  006590  6E01               	movwf	decrementTimeslot@ts^0,c
 35797  006592  0E01               	movlw	high (_ts_system+70)
 35798  006594  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35799  006596  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 35800                           
 35801                           ;main_MC50.c: 194:     decrementTimeslot((int*)&ts_system.timeFreqDigit);
 35802  00659A  0EA8               	movlw	low (_ts_system+10)
 35803  00659C  6E01               	movwf	decrementTimeslot@ts^0,c
 35804  00659E  0E01               	movlw	high (_ts_system+10)
 35805  0065A0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35806  0065A2  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 35807                           
 35808                           ;main_MC50.c: 195:     decrementTimeslot((int*)&ts_system.timeSinalizationDigit);
 35809  0065A6  0EAA               	movlw	low (_ts_system+12)
 35810  0065A8  6E01               	movwf	decrementTimeslot@ts^0,c
 35811  0065AA  0E01               	movlw	high (_ts_system+12)
 35812  0065AC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35813  0065AE  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 35814                           
 35815                           ;main_MC50.c: 196:     decrementTimeslot((int*)&ts_system.timeoutMenu);
 35816  0065B2  0EAC               	movlw	low (_ts_system+14)
 35817  0065B4  6E01               	movwf	decrementTimeslot@ts^0,c
 35818  0065B6  0E01               	movlw	high (_ts_system+14)
 35819  0065B8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35820  0065BA  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 35821                           
 35822                           ;main_MC50.c: 197:     decrementTimeslot((int*)&ts_system.timeOpenWalk);
 35823  0065BE  0EAE               	movlw	low (_ts_system+16)
 35824  0065C0  6E01               	movwf	decrementTimeslot@ts^0,c
 35825  0065C2  0E01               	movlw	high (_ts_system+16)
 35826  0065C4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35827  0065C6  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 35828                           
 35829                           ;main_MC50.c: 198:     decrementTimeslot((int*)&ts_system.timeWaitToClose);
 35830  0065CA  0EB0               	movlw	low (_ts_system+18)
 35831  0065CC  6E01               	movwf	decrementTimeslot@ts^0,c
 35832  0065CE  0E01               	movlw	high (_ts_system+18)
 35833  0065D0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35834  0065D2  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 35835                           
 35836                           ;main_MC50.c: 199:     decrementTimeslot((int*)&ts_system.TimeLastCommand);
 35837  0065D6  0EB2               	movlw	low (_ts_system+20)
 35838  0065D8  6E01               	movwf	decrementTimeslot@ts^0,c
 35839  0065DA  0E01               	movlw	high (_ts_system+20)
 35840  0065DC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35841  0065DE  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 35842                           
 35843                           ;main_MC50.c: 200:     decrementTimeslot((int*)&ts_system.timeSoftStart);
 35844  0065E2  0EB4               	movlw	low (_ts_system+22)
 35845  0065E4  6E01               	movwf	decrementTimeslot@ts^0,c
 35846  0065E6  0E01               	movlw	high (_ts_system+22)
 35847  0065E8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35848  0065EA  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 35849                           
 35850                           ;main_MC50.c: 201:     decrementTimeslot((int*)&ts_system.TimeChargeCondesador);
 35851  0065EE  0EB8               	movlw	low (_ts_system+26)
 35852  0065F0  6E01               	movwf	decrementTimeslot@ts^0,c
 35853  0065F2  0E01               	movlw	high (_ts_system+26)
 35854  0065F4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35855  0065F6  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 35856                           
 35857                           ;main_MC50.c: 203:     decrementTimeslot((int*)&ts_system.timeFreqRGB);
 35858  0065FA  0EBA               	movlw	low (_ts_system+28)
 35859  0065FC  6E01               	movwf	decrementTimeslot@ts^0,c
 35860  0065FE  0E01               	movlw	high (_ts_system+28)
 35861  006600  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35862  006602  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 35863                           
 35864                           ;main_MC50.c: 204:     decrementTimeslot((int*)&ts_system.timeFreqFlashligth);
 35865  006606  0EBC               	movlw	low (_ts_system+30)
 35866  006608  6E01               	movwf	decrementTimeslot@ts^0,c
 35867  00660A  0E01               	movlw	high (_ts_system+30)
 35868  00660C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35869  00660E  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 35870                           
 35871                           ;main_MC50.c: 206:     decrementTimeslot((int*)&ts_system.TimeWaitToNextState);
 35872  006612  0EC2               	movlw	low (_ts_system+36)
 35873  006614  6E01               	movwf	decrementTimeslot@ts^0,c
 35874  006616  0E01               	movlw	high (_ts_system+36)
 35875  006618  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35876  00661A  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 35877                           
 35878                           ;main_MC50.c: 208:     decrementTimeslot((int*)&ts_system.timeBetweenSaveCounters);
 35879  00661E  0EC4               	movlw	low (_ts_system+38)
 35880  006620  6E01               	movwf	decrementTimeslot@ts^0,c
 35881  006622  0E01               	movlw	high (_ts_system+38)
 35882  006624  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35883  006626  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 35884                           
 35885                           ;main_MC50.c: 209:     decrementTimeslot((int*)&ts_system.TimeElectricBrake);
 35886  00662A  0EC6               	movlw	low (_ts_system+40)
 35887  00662C  6E01               	movwf	decrementTimeslot@ts^0,c
 35888  00662E  0E01               	movlw	high (_ts_system+40)
 35889  006630  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35890  006632  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 35891                           
 35892                           ;main_MC50.c: 210:     decrementTimeslot((int*)&ts_system.TimeCurrentAlarm);
 35893  006636  0EC8               	movlw	low (_ts_system+42)
 35894  006638  6E01               	movwf	decrementTimeslot@ts^0,c
 35895  00663A  0E01               	movlw	high (_ts_system+42)
 35896  00663C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35897  00663E  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 35898                           
 35899                           ;main_MC50.c: 212:     decrementTimeslot((int*)&ts_system.TimeStopedBeforeDecelaration);
 35900  006642  0ECA               	movlw	low (_ts_system+44)
 35901  006644  6E01               	movwf	decrementTimeslot@ts^0,c
 35902  006646  0E01               	movlw	high (_ts_system+44)
 35903  006648  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35904  00664A  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 35905                           
 35906                           ;main_MC50.c: 213:     decrementTimeslot((int*)&ts_system.TimeCurrentWaitForAlarm);
 35907  00664E  0ECC               	movlw	low (_ts_system+46)
 35908  006650  6E01               	movwf	decrementTimeslot@ts^0,c
 35909  006652  0E01               	movlw	high (_ts_system+46)
 35910  006654  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35911  006656  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 35912                           
 35913                           ;main_MC50.c: 214:     decrementTimeslot((int*)&ts_system.TimeInversionStart);
 35914  00665A  0ECE               	movlw	low (_ts_system+48)
 35915  00665C  6E01               	movwf	decrementTimeslot@ts^0,c
 35916  00665E  0E01               	movlw	high (_ts_system+48)
 35917  006660  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35918  006662  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 35919                           
 35920                           ;main_MC50.c: 215:     decrementTimeslot((int*)&ts_system.TimeReleCapacitor);
 35921  006666  0EE0               	movlw	low (_ts_system+66)
 35922  006668  6E01               	movwf	decrementTimeslot@ts^0,c
 35923  00666A  0E01               	movlw	high (_ts_system+66)
 35924  00666C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35925  00666E  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 35926                           
 35927                           ;main_MC50.c: 216:     decrementTimeslot((int*)&ts_system.TimeWaitReleCapacitor);
 35928  006672  0EE2               	movlw	low (_ts_system+68)
 35929  006674  6E01               	movwf	decrementTimeslot@ts^0,c
 35930  006676  0E01               	movlw	high (_ts_system+68)
 35931  006678  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35932  00667A  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 35933                           
 35934                           ;main_MC50.c: 221:     if ( ( var_sys_NVM.electricBrake==0 ) || ( ts_system.TimeElectric
      +                          Brake<=0 ) )
 35935  00667E  0100               	movlb	0	; () banked
 35936  006680  51AF               	movf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 35937  006682  B4D8               	btfsc	status,2,c
 35938  006684  D008               	goto	i2u1561_40
 35939                           
 35940                           ; BSR set to: 0
 35941  006686  0101               	movlb	1	; () banked
 35942  006688  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35943  00668A  D005               	goto	i2u1561_40
 35944  00668C  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35945  00668E  E109               	bnz	i2l2024
 35946  006690  05C6               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 35947  006692  B0D8               	btfsc	status,0,c
 35948  006694  D006               	goto	i2l2024
 35949  006696                     i2u1561_40:
 35950                           
 35951                           ;main_MC50.c: 222:     {;main_MC50.c: 225:         decrementTimeslot((int*)&ts_system.In
      +                          vertionTimeClosingFromOpen);
 35952  006696  0ED0               	movlw	low (_ts_system+50)
 35953  006698  6E01               	movwf	decrementTimeslot@ts^0,c
 35954  00669A  0E01               	movlw	high (_ts_system+50)
 35955  00669C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35956  00669E  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 35957  0066A2                     i2l2024:
 35958                           
 35959                           ;main_MC50.c: 228:     decrementTimeslot((int*)&ts_system.TimeWaitToGetCurrent);
 35960  0066A2  0ED2               	movlw	low (_ts_system+52)
 35961  0066A4  6E01               	movwf	decrementTimeslot@ts^0,c
 35962  0066A6  0E01               	movlw	high (_ts_system+52)
 35963  0066A8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35964  0066AA  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 35965                           
 35966                           ;main_MC50.c: 229:     decrementTimeslot((int*)&ts_system.TimeLearningDecelaration);
 35967  0066AE  0ED4               	movlw	low (_ts_system+54)
 35968  0066B0  6E01               	movwf	decrementTimeslot@ts^0,c
 35969  0066B2  0E01               	movlw	high (_ts_system+54)
 35970  0066B4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35971  0066B6  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 35972                           
 35973                           ;main_MC50.c: 230:     decrementTimeslot((int*)&ts_system.TimeTransitionDecelaration);
 35974  0066BA  0ED6               	movlw	low (_ts_system+56)
 35975  0066BC  6E01               	movwf	decrementTimeslot@ts^0,c
 35976  0066BE  0E01               	movlw	high (_ts_system+56)
 35977  0066C0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35978  0066C2  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 35979                           
 35980                           ;main_MC50.c: 232:     decrementTimeslot((int*)&ts_system.timewaitBeforeSoftStart);
 35981  0066C6  0ED8               	movlw	low (_ts_system+58)
 35982  0066C8  6E01               	movwf	decrementTimeslot@ts^0,c
 35983  0066CA  0E01               	movlw	high (_ts_system+58)
 35984  0066CC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35985  0066CE  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 35986                           
 35987                           ;main_MC50.c: 233:     decrementTimeslot((int*)&ts_system.TimeShowVersion);
 35988  0066D2  0EDA               	movlw	low (_ts_system+60)
 35989  0066D4  6E01               	movwf	decrementTimeslot@ts^0,c
 35990  0066D6  0E01               	movlw	high (_ts_system+60)
 35991  0066D8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35992  0066DA  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 35993                           
 35994                           ;main_MC50.c: 235:     decrementTimeslot((int*)&ts_system.TimeStopADCZeroOffsetCalc);
 35995  0066DE  0EDC               	movlw	low (_ts_system+62)
 35996  0066E0  6E01               	movwf	decrementTimeslot@ts^0,c
 35997  0066E2  0E01               	movlw	high (_ts_system+62)
 35998  0066E4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35999  0066E6  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 36000                           
 36001                           ;main_MC50.c: 237:     decrementTimeslot((int*)&ts_system.TimeStopElectricBrake);
 36002  0066EA  0EDE               	movlw	low (_ts_system+64)
 36003  0066EC  6E01               	movwf	decrementTimeslot@ts^0,c
 36004  0066EE  0E01               	movlw	high (_ts_system+64)
 36005  0066F0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 36006  0066F2  ECB7  F04D         	call	_decrementTimeslot	;wreg free
 36007                           
 36008                           ;main_MC50.c: 240:     if (ts_system.TimeOnFlashLigth>0)
 36009  0066F6  0101               	movlb	1	; () banked
 36010  0066F8  BFC1               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 36011  0066FA  0012               	return	
 36012  0066FC  51C1               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 36013  0066FE  11C0               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 36014  006700  11BF               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 36015  006702  E103               	bnz	i2u1562_40
 36016  006704  05BE               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 36017  006706  A0D8               	btfss	status,0,c
 36018  006708  0012               	return	
 36019  00670A                     i2u1562_40:
 36020                           
 36021                           ; BSR set to: 1
 36022                           ;main_MC50.c: 241:     {;main_MC50.c: 242:         ts_system.TimeOnFlashLigth--;
 36023  00670A  0EFF               	movlw	255
 36024  00670C  27BE               	addwf	(_ts_system+32)& (0+255),f,b	;volatile
 36025  00670E  0EFF               	movlw	255
 36026  006710  23BF               	addwfc	(_ts_system+33)& (0+255),f,b	;volatile
 36027  006712  0EFF               	movlw	255
 36028  006714  23C0               	addwfc	(_ts_system+34)& (0+255),f,b	;volatile
 36029  006716  0EFF               	movlw	255
 36030  006718  23C1               	addwfc	(_ts_system+35)& (0+255),f,b	;volatile
 36031                           
 36032                           ; BSR set to: 1
 36033  00671A  0012               	return		;funcret
 36034  00671C                     __end_of_controlTimeslots:
 36035                           	callstack 0
 36036                           
 36037 ;; *************** function _decrementTimeslot *****************
 36038 ;; Defined at:
 36039 ;;		line 246 in file "main_MC50.c"
 36040 ;; Parameters:    Size  Location     Type
 36041 ;;  ts              2    0[COMRAM] PTR int 
 36042 ;;		 -> ts_system.TimeShowVersion(2), ts_system.TimeLearningDecelaration(2), ts_system.TimeWaitToGetCurrent(2), ts_syste
      +m.InvertionTimeClosingFromOpen(2), 
 36043 ;;		 -> ts_system.TimeWaitReleCapacitor(2), ts_system.TimeInversionStart(2), ts_system.TimeStopedBeforeDecelaration(2), 
      +ts_system.TimeWaitToNextState(2), 
 36044 ;;		 -> ts_system.timeFreqFlashligth(2), ts_system.timeFreqRGB(2), ts_system.timeWaitToClose(2), ts_system.timeOpenWalk(
      +2), 
 36045 ;;		 -> ts_system.timeoutMenu(2), ts_system.timeFreqDigit(2), ts_system.timewaitFlashRGB(2), ts_system.TimeStopElectricB
      +rake(2), 
 36046 ;;		 -> ts_system.Debug_TS(2), ts_system.timeSinalizationDigit(2), ts_system.TimeLastCommand(2), ts_system.timeBetweenSa
      +veCounters(2), 
 36047 ;;		 -> ts_system.TimeCurrentAlarm(2), ts_system.TimeCurrentWaitForAlarm(2), ts_system.TimeReleCapacitor(2), ts_system.T
      +imeChargeCondesador(2), 
 36048 ;;		 -> ts_system.TimeTransitionDecelaration(2), ts_system.timewaitBeforeSoftStart(2), ts_system.timeSoftStart(2), ts_sy
      +stem.TimeElectricBrake(2), 
 36049 ;;		 -> ts_system.TimeStopADCZeroOffsetCalc(2), ts_system(72), 
 36050 ;; Auto vars:     Size  Location     Type
 36051 ;;		None
 36052 ;; Return value:  Size  Location     Type
 36053 ;;                  1    wreg      void 
 36054 ;; Registers used:
 36055 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36056 ;; Tracked objects:
 36057 ;;		On entry : 0/1
 36058 ;;		On exit  : 0/0
 36059 ;;		Unchanged: 0/0
 36060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36061 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36063 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36064 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36065 ;;Total ram usage:        4 bytes
 36066 ;; Hardware stack levels used: 1
 36067 ;; This function calls:
 36068 ;;		Nothing
 36069 ;; This function is called by:
 36070 ;;		_controlTimeslots
 36071 ;; This function uses a non-reentrant model
 36072 ;;
 36073                           
 36074                           	psect	text192
 36075  009B6E                     __ptext192:
 36076                           	callstack 0
 36077  009B6E                     _decrementTimeslot:
 36078                           	callstack 14
 36079                           
 36080                           ;main_MC50.c: 246: void decrementTimeslot(int * ts);main_MC50.c: 247: {;main_MC50.c: 248
      +                          :     if (ts[0]>0)
 36081                           
 36082                           ; BSR set to: 1
 36083                           ;incstack = 0
 36084  009B6E  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 36085  009B72  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 36086  009B76  0E01               	movlw	1
 36087  009B78  BEDB               	btfsc	plusw2,7,c
 36088  009B7A  0012               	return	
 36089  009B7C  0E01               	movlw	1
 36090  009B7E  50DB               	movf	plusw2,w,c
 36091  009B80  E103               	bnz	i2u1379_40
 36092  009B82  04DE               	decf	postinc2,w,c
 36093  009B84  A0D8               	btfss	status,0,c
 36094  009B86  0012               	return	
 36095  009B88                     i2u1379_40:
 36096                           
 36097                           ;main_MC50.c: 249:     {;main_MC50.c: 250:         ts[0]--;
 36098  009B88  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 36099  009B8C  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 36100  009B90  06DE               	decf	postinc2,f,c
 36101  009B92  0E00               	movlw	0
 36102  009B94  5ADD               	subwfb	postdec2,f,c
 36103  009B96  0012               	return		;funcret
 36104  009B98                     __end_of_decrementTimeslot:
 36105                           	callstack 0
 36106                           
 36107 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 36108 ;; Defined at:
 36109 ;;		line 346 in file "mcc_generated_files/tmr2.c"
 36110 ;; Parameters:    Size  Location     Type
 36111 ;;		None
 36112 ;; Auto vars:     Size  Location     Type
 36113 ;;		None
 36114 ;; Return value:  Size  Location     Type
 36115 ;;                  1    wreg      void 
 36116 ;; Registers used:
 36117 ;;		None
 36118 ;; Tracked objects:
 36119 ;;		On entry : 3F/2
 36120 ;;		On exit  : 3F/2
 36121 ;;		Unchanged: 3F/0
 36122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36127 ;;Total ram usage:        0 bytes
 36128 ;; Hardware stack levels used: 1
 36129 ;; This function calls:
 36130 ;;		Nothing
 36131 ;; This function is called by:
 36132 ;;		_TMR2_Initialize
 36133 ;;		_TMR2_ISR
 36134 ;; This function uses a non-reentrant model
 36135 ;;
 36136                           
 36137                           	psect	text193
 36138  00A0B4                     __ptext193:
 36139                           	callstack 0
 36140  00A0B4                     _TMR2_DefaultInterruptHandler:
 36141                           	callstack 15
 36142                           
 36143                           ; BSR set to: 2
 36144                           
 36145                           ;incstack = 0
 36146  00A0B4  0012               	return		;funcret
 36147  00A0B6                     __end_of_TMR2_DefaultInterruptHandler:
 36148                           	callstack 0
 36149                           
 36150 ;; *************** function _ReadADC *****************
 36151 ;; Defined at:
 36152 ;;		line 38 in file "controlCurrent_MC50.c"
 36153 ;; Parameters:    Size  Location     Type
 36154 ;;		None
 36155 ;; Auto vars:     Size  Location     Type
 36156 ;;		None
 36157 ;; Return value:  Size  Location     Type
 36158 ;;                  1    wreg      void 
 36159 ;; Registers used:
 36160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36161 ;; Tracked objects:
 36162 ;;		On entry : 3F/E
 36163 ;;		On exit  : 31/0
 36164 ;;		Unchanged: 0/0
 36165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36168 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36169 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36170 ;;Total ram usage:        3 bytes
 36171 ;; Hardware stack levels used: 1
 36172 ;; Hardware stack levels required when called: 1
 36173 ;; This function calls:
 36174 ;;		_ADCC_GetSingleConversion
 36175 ;; This function is called by:
 36176 ;;		_TMR2_ISR
 36177 ;; This function uses a non-reentrant model
 36178 ;;
 36179                           
 36180                           	psect	text194
 36181  009284                     __ptext194:
 36182                           	callstack 0
 36183  009284                     _ReadADC:
 36184                           	callstack 14
 36185                           
 36186                           ; BSR set to: 14
 36187                           ;controlCurrent_MC50.c: 40:      if (!ADCON0bits.GO_nDONE)
 36188                           
 36189                           ; BSR set to: 2
 36190                           ;incstack = 0
 36191  009284  B060               	btfsc	96,0,c	;volatile
 36192  009286  0012               	return	
 36193                           
 36194                           ; BSR set to: 14
 36195                           ;controlCurrent_MC50.c: 41:      {;controlCurrent_MC50.c: 42:         if ( idxAdcAquisit
      +                          ion >= 30 )
 36196  009288  0E1D               	movlw	29
 36197  00928A  0100               	movlb	0	; () banked
 36198  00928C  6591               	cpfsgt	_idxAdcAquisition& (0+255),b	;volatile
 36199  00928E  D002               	goto	i2l15223
 36200                           
 36201                           ; BSR set to: 0
 36202                           ;controlCurrent_MC50.c: 43:         {;controlCurrent_MC50.c: 44:             idxAdcAquis
      +                          ition=0;
 36203  009290  0E00               	movlw	0
 36204  009292  6F91               	movwf	_idxAdcAquisition& (0+255),b	;volatile
 36205  009294                     i2l15223:
 36206                           
 36207                           ; BSR set to: 0
 36208                           ;controlCurrent_MC50.c: 47:         ADC_array[idxAdcAquisition] = ((unsigned int)((ADRES
      +                          H << 8) + ADRESL)>>6);
 36209  009294  5063               	movf	99,w,c	;volatile
 36210  009296  CF64 F002          	movff	3940,??_ReadADC	;volatile
 36211  00929A  6A03               	clrf	(??_ReadADC+1)^0,c
 36212  00929C  C002  F003         	movff	??_ReadADC,??_ReadADC+1
 36213  0092A0  6A02               	clrf	??_ReadADC^0,c
 36214  0092A2  2602               	addwf	??_ReadADC^0,f,c
 36215  0092A4  0E00               	movlw	0
 36216  0092A6  2203               	addwfc	(??_ReadADC+1)^0,f,c
 36217  0092A8  0E06               	movlw	6
 36218  0092AA  6E04               	movwf	(??_ReadADC+2)^0,c
 36219  0092AC                     i2u1553_45:
 36220  0092AC  90D8               	bcf	status,0,c
 36221  0092AE  3203               	rrcf	(??_ReadADC+1)^0,f,c
 36222  0092B0  3202               	rrcf	??_ReadADC^0,f,c
 36223  0092B2  2E04               	decfsz	(??_ReadADC+2)^0,f,c
 36224  0092B4  D7FB               	goto	i2u1553_45
 36225  0092B6  5191               	movf	_idxAdcAquisition& (0+255),w,b	;volatile
 36226  0092B8  0D02               	mullw	2
 36227  0092BA  0E00               	movlw	low _ADC_array
 36228  0092BC  24F3               	addwf	243,w,c
 36229  0092BE  6ED9               	movwf	fsr2l,c
 36230  0092C0  0E02               	movlw	high _ADC_array
 36231  0092C2  20F4               	addwfc	prodh,w,c
 36232  0092C4  6EDA               	movwf	fsr2h,c
 36233  0092C6  C002  FFDE         	movff	??_ReadADC,postinc2
 36234  0092CA  C003  FFDD         	movff	??_ReadADC+1,postdec2
 36235                           
 36236                           ; BSR set to: 0
 36237                           ;controlCurrent_MC50.c: 48:         ADCC_GetSingleConversion(0x00);
 36238  0092CE  0E00               	movlw	0
 36239  0092D0  EC61  F04F         	call	_ADCC_GetSingleConversion
 36240                           
 36241                           ;controlCurrent_MC50.c: 49:         idxAdcAquisition++;
 36242  0092D4  0100               	movlb	0	; () banked
 36243  0092D6  2B91               	incf	_idxAdcAquisition& (0+255),f,b	;volatile
 36244  0092D8  0012               	return		;funcret
 36245  0092DA                     __end_of_ReadADC:
 36246                           	callstack 0
 36247                           
 36248 ;; *************** function _ADCC_GetSingleConversion *****************
 36249 ;; Defined at:
 36250 ;;		line 131 in file "mcc_generated_files/adcc.c"
 36251 ;; Parameters:    Size  Location     Type
 36252 ;;  channel         1    wreg     enum E10053
 36253 ;; Auto vars:     Size  Location     Type
 36254 ;;  channel         1    0[COMRAM] enum E10053
 36255 ;; Return value:  Size  Location     Type
 36256 ;;                  2  433[None  ] int 
 36257 ;; Registers used:
 36258 ;;		wreg, status,2, cstack
 36259 ;; Tracked objects:
 36260 ;;		On entry : 3F/0
 36261 ;;		On exit  : 0/0
 36262 ;;		Unchanged: 0/0
 36263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36265 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36267 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36268 ;;Total ram usage:        1 bytes
 36269 ;; Hardware stack levels used: 1
 36270 ;; This function calls:
 36271 ;;		Nothing
 36272 ;; This function is called by:
 36273 ;;		_ReadADC
 36274 ;; This function uses a non-reentrant model
 36275 ;;
 36276                           
 36277                           	psect	text195
 36278  009EC2                     __ptext195:
 36279                           	callstack 0
 36280  009EC2                     _ADCC_GetSingleConversion:
 36281                           	callstack 14
 36282                           
 36283                           ;incstack = 0
 36284                           ;ADCC_GetSingleConversion@channel stored from wreg
 36285  009EC2  6E01               	movwf	ADCC_GetSingleConversion@channel^0,c
 36286                           
 36287                           ;mcc_generated_files/adcc.c: 131: ADCC_GetSingleConversion(adcc_channel_t channel);mcc_g
      +                          enerated_files/adcc.c: 132: {;mcc_generated_files/adcc.c: 134:     ADPCH = channel;
 36288  009EC4  C001  FF5F         	movff	ADCC_GetSingleConversion@channel,3935	;volatile
 36289                           
 36290                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADON = 1;
 36291  009EC8  8E60               	bsf	96,7,c	;volatile
 36292                           
 36293                           ;mcc_generated_files/adcc.c: 139:       _delay((unsigned long)((5)*(64000000/4000000.0))
      +                          );
 36294  009ECA  0E1A               	movlw	26
 36295  009ECC                     i2u3447_47:
 36296  009ECC  2EE8               	decfsz	wreg,f,c
 36297  009ECE  D7FE               	bra	i2u3447_47
 36298  009ED0  D000               	nop2	
 36299                           
 36300                           ;mcc_generated_files/adcc.c: 142:     ADCON0bits.ADCONT = 0;
 36301  009ED2  9C60               	bcf	96,6,c	;volatile
 36302                           
 36303                           ;mcc_generated_files/adcc.c: 145:     ADCON0bits.ADGO = 1;
 36304  009ED4  8060               	bsf	96,0,c	;volatile
 36305  009ED6  0012               	return		;funcret
 36306  009ED8                     __end_of_ADCC_GetSingleConversion:
 36307                           	callstack 0
 36308                           
 36309 ;; *************** function _TMR1_ISR *****************
 36310 ;; Defined at:
 36311 ;;		line 166 in file "mcc_generated_files/tmr1.c"
 36312 ;; Parameters:    Size  Location     Type
 36313 ;;		None
 36314 ;; Auto vars:     Size  Location     Type
 36315 ;;		None
 36316 ;; Return value:  Size  Location     Type
 36317 ;;                  1    wreg      void 
 36318 ;; Registers used:
 36319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 36320 ;; Tracked objects:
 36321 ;;		On entry : 3F/E
 36322 ;;		On exit  : 0/0
 36323 ;;		Unchanged: 0/0
 36324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36329 ;;Total ram usage:        0 bytes
 36330 ;; Hardware stack levels used: 1
 36331 ;; Hardware stack levels required when called: 2
 36332 ;; This function calls:
 36333 ;;		Absolute function
 36334 ;;		_TMR1_DefaultInterruptHandler
 36335 ;;		_TMR1_WriteTimer
 36336 ;;		_controlMotorForce
 36337 ;; This function is called by:
 36338 ;;		_INTERRUPT_InterruptManager
 36339 ;; This function uses a non-reentrant model
 36340 ;;
 36341                           
 36342                           	psect	text196
 36343  00971E                     __ptext196:
 36344                           	callstack 0
 36345  00971E                     _TMR1_ISR:
 36346                           	callstack 14
 36347                           
 36348                           ; BSR set to: 14
 36349                           ;mcc_generated_files/tmr1.c: 170:     PIR4bits.TMR1IF = 0;
 36350                           
 36351                           ;incstack = 0
 36352  00971E  91CE               	bcf	206,0,b	;volatile
 36353                           
 36354                           ; BSR set to: 14
 36355                           ;mcc_generated_files/tmr1.c: 172:             controlMotorForce();
 36356  009720  EC72  F02B         	call	_controlMotorForce	;wreg free
 36357                           
 36358                           ;mcc_generated_files/tmr1.c: 173:             if(ts_system.ts_TimeSlotTRIAC>0)
 36359  009724  0101               	movlb	1	; () banked
 36360  009726  51A3               	movf	(_ts_system+5)& (0+255),w,b	;volatile
 36361  009728  A4D8               	btfss	status,2,c
 36362                           
 36363                           ; BSR set to: 1
 36364                           ;mcc_generated_files/tmr1.c: 174:             {;mcc_generated_files/tmr1.c: 176:        
      +                                   ts_system.ts_TimeSlotTRIAC--;
 36365  00972A  07A3               	decf	(_ts_system+5)& (0+255),f,b	;volatile
 36366                           
 36367                           ; BSR set to: 1
 36368                           ;mcc_generated_files/tmr1.c: 178:             if (ts_system.ts_TimeSlot1ms > 0 )
 36369  00972C  51A0               	movf	(_ts_system+2)& (0+255),w,b	;volatile
 36370  00972E  A4D8               	btfss	status,2,c
 36371                           
 36372                           ; BSR set to: 1
 36373                           ;mcc_generated_files/tmr1.c: 179:             {;mcc_generated_files/tmr1.c: 180:        
      +                               ts_system.ts_TimeSlot1ms--;
 36374  009730  07A0               	decf	(_ts_system+2)& (0+255),f,b	;volatile
 36375                           
 36376                           ; BSR set to: 1
 36377                           ;mcc_generated_files/tmr1.c: 183:     TMR1_WriteTimer(timer1ReloadVal);
 36378  009732  C2E1  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 36379  009736  C2E2  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 36380  00973A  ECBF  F04E         	call	_TMR1_WriteTimer	;wreg free
 36381                           
 36382                           ; BSR set to: 1
 36383                           ;mcc_generated_files/tmr1.c: 185:     if(TMR1_InterruptHandler)
 36384  00973E  0102               	movlb	2	; () banked
 36385  009740  51DF               	movf	_TMR1_InterruptHandler& (0+255),w,b
 36386  009742  11E0               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 36387  009744  B4D8               	btfsc	status,2,c
 36388  009746  0012               	return	
 36389                           
 36390                           ; BSR set to: 2
 36391                           ;mcc_generated_files/tmr1.c: 186:     {;mcc_generated_files/tmr1.c: 187:         TMR1_In
      +                          terruptHandler();
 36392  009748  D801               	call	i2u1922_48
 36393  00974A  0012               	return	
 36394  00974C                     i2u1922_48:
 36395  00974C  0005               	push	
 36396  00974E  6EFA               	movwf	pclath,c
 36397  009750  51DF               	movf	_TMR1_InterruptHandler& (0+255),w,b
 36398  009752  6EFD               	movwf	tosl,c
 36399  009754  51E0               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 36400  009756  6EFE               	movwf	tosh,c
 36401  009758  6AFF               	clrf	tosu,c
 36402  00975A  50FA               	movf	pclath,w,c
 36403  00975C  0012               	return		;indir
 36404  00975E                     __end_of_TMR1_ISR:
 36405                           	callstack 0
 36406                           
 36407 ;; *************** function _controlMotorForce *****************
 36408 ;; Defined at:
 36409 ;;		line 213 in file "outputs_MC50.c"
 36410 ;; Parameters:    Size  Location     Type
 36411 ;;		None
 36412 ;; Auto vars:     Size  Location     Type
 36413 ;;		None
 36414 ;; Return value:  Size  Location     Type
 36415 ;;                  1    wreg      void 
 36416 ;; Registers used:
 36417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36418 ;; Tracked objects:
 36419 ;;		On entry : 3F/E
 36420 ;;		On exit  : 3E/0
 36421 ;;		Unchanged: 0/0
 36422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36425 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36426 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36427 ;;Total ram usage:        5 bytes
 36428 ;; Hardware stack levels used: 1
 36429 ;; Hardware stack levels required when called: 1
 36430 ;; This function calls:
 36431 ;;		i2_GetMotorPower
 36432 ;;		i2_VerifyElectricalBrake
 36433 ;; This function is called by:
 36434 ;;		_TMR1_ISR
 36435 ;; This function uses a non-reentrant model
 36436 ;;
 36437                           
 36438                           	psect	text197
 36439  0056E4                     __ptext197:
 36440                           	callstack 0
 36441  0056E4                     _controlMotorForce:
 36442                           	callstack 14
 36443                           
 36444                           ; BSR set to: 14
 36445                           ;outputs_MC50.c: 217:     difTime=GetMotorPower();
 36446                           
 36447                           ;incstack = 0
 36448  0056E4  EC4F  F03E         	call	i2_GetMotorPower	;wreg free
 36449  0056E8  6F93               	movwf	_difTime& (0+255),b
 36450                           
 36451                           ; BSR set to: 1
 36452                           ;outputs_MC50.c: 218:     if(powerControl_st.decelarationActive==YES)
 36453  0056EA  057B               	decf	_powerControl_st& (0+255),w,b
 36454  0056EC  A4D8               	btfss	status,2,c
 36455  0056EE  D00F               	goto	i2l2191
 36456                           
 36457                           ; BSR set to: 1
 36458                           ;outputs_MC50.c: 219:     {;outputs_MC50.c: 220:         if(ts_system.TimeStopedBeforeDe
      +                          celaration>0)
 36459  0056F0  BFCB               	btfsc	(_ts_system+45)& (0+255),7,b	;volatile
 36460  0056F2  D008               	goto	i2l15111
 36461  0056F4  51CB               	movf	(_ts_system+45)& (0+255),w,b	;volatile
 36462  0056F6  E103               	bnz	i2u1513_40
 36463  0056F8  05CA               	decf	(_ts_system+44)& (0+255),w,b	;volatile
 36464  0056FA  A0D8               	btfss	status,0,c
 36465  0056FC  D003               	goto	i2l15111
 36466  0056FE                     i2u1513_40:
 36467                           
 36468                           ; BSR set to: 1
 36469                           ;outputs_MC50.c: 221:         {;outputs_MC50.c: 222:             StateTRIAC=0;
 36470  0056FE  0E00               	movlw	0
 36471  005700  6F94               	movwf	_StateTRIAC& (0+255),b
 36472                           
 36473                           ;outputs_MC50.c: 223:         }
 36474  005702  D005               	goto	i2l2191
 36475  005704                     i2l15111:
 36476                           
 36477                           ; BSR set to: 1
 36478  005704  517D               	movf	(_powerControl_st+2)& (0+255),w,b
 36479  005706  5D7F               	subwf	(_powerControl_st+4)& (0+255),w,b
 36480  005708  A0D8               	btfss	status,0,c
 36481                           
 36482                           ; BSR set to: 1
 36483                           ;outputs_MC50.c: 225:         {;outputs_MC50.c: 227:             difTime=powerControl_st
      +                          .decelarationPower;
 36484  00570A  C17E  F193         	movff	_powerControl_st+3,_difTime
 36485  00570E                     i2l2191:
 36486                           
 36487                           ; BSR set to: 1
 36488                           ;outputs_MC50.c: 242:     if(PORTAbits.RA3==1 && zeroCrossing==0)
 36489  00570E  A68D               	btfss	141,3,c	;volatile
 36490  005710  D071               	goto	i2l2195
 36491                           
 36492                           ; BSR set to: 1
 36493  005712  5196               	movf	_zeroCrossing& (0+255),w,b
 36494  005714  A4D8               	btfss	status,2,c
 36495  005716  D06E               	goto	i2l2195
 36496                           
 36497                           ; BSR set to: 1
 36498                           ;outputs_MC50.c: 243:     {;outputs_MC50.c: 257:         if ( waitZeroPeak == 0 )
 36499  005718  5195               	movf	_waitZeroPeak& (0+255),w,b
 36500  00571A  A4D8               	btfss	status,2,c
 36501  00571C  D016               	goto	i2l15127
 36502                           
 36503                           ; BSR set to: 1
 36504                           ;outputs_MC50.c: 258:         {;outputs_MC50.c: 260:             zeroCrossingWaitTime[ze
      +                          roCrossingWaitTimeIdx] = (zeroCrossingLength>>1);
 36505  00571E  0EFA               	movlw	low _zeroCrossingWaitTime
 36506  005720  0100               	movlb	0	; () banked
 36507  005722  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 36508  005724  6ED9               	movwf	fsr2l,c
 36509  005726  6ADA               	clrf	fsr2h,c
 36510  005728  0E02               	movlw	high _zeroCrossingWaitTime
 36511  00572A  22DA               	addwfc	fsr2h,f,c
 36512  00572C  0101               	movlb	1	; () banked
 36513  00572E  90D8               	bcf	status,0,c
 36514  005730  3197               	rrcf	_zeroCrossingLength& (0+255),w,b
 36515  005732  6EDF               	movwf	indf2,c
 36516                           
 36517                           ; BSR set to: 1
 36518                           ;outputs_MC50.c: 261:             if ( zeroCrossingWaitTimeIdx == 0 )
 36519  005734  0100               	movlb	0	; () banked
 36520  005736  5184               	movf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 36521  005738  A4D8               	btfss	status,2,c
 36522  00573A  D002               	goto	i2l15125
 36523                           
 36524                           ; BSR set to: 0
 36525                           ;outputs_MC50.c: 262:             {;outputs_MC50.c: 263:                 zeroCrossingWai
      +                          tTimeIdx = 1;
 36526  00573C  0E01               	movlw	1
 36527  00573E  D001               	goto	L118
 36528  005740                     i2l15125:
 36529                           
 36530                           ; BSR set to: 0
 36531                           ;outputs_MC50.c: 266:             {;outputs_MC50.c: 267:                 zeroCrossingWai
      +                          tTimeIdx = 0;
 36532  005740  0E00               	movlw	0
 36533  005742                     L118:
 36534  005742  6F84               	movwf	_zeroCrossingWaitTimeIdx& (0+255),b
 36535                           
 36536                           ; BSR set to: 0
 36537                           ;outputs_MC50.c: 270:             zeroCrossingLength = 0;
 36538                           
 36539                           ;outputs_MC50.c: 268:             }
 36540  005744  0E00               	movlw	0
 36541  005746  0101               	movlb	1	; () banked
 36542  005748  6F97               	movwf	_zeroCrossingLength& (0+255),b
 36543  00574A                     i2l15127:
 36544                           
 36545                           ; BSR set to: 1
 36546                           ;outputs_MC50.c: 273:         if ( (difTime<=80) || (ts_system.TimeElectricBrake>0) )
 36547  00574A  0E50               	movlw	80
 36548  00574C  6593               	cpfsgt	_difTime& (0+255),b
 36549  00574E  D007               	goto	i2u1520_40
 36550                           
 36551                           ; BSR set to: 1
 36552  005750  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36553  005752  D008               	goto	i2l15133
 36554  005754  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36555  005756  E103               	bnz	i2u1520_40
 36556  005758  05C6               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 36557  00575A  A0D8               	btfss	status,0,c
 36558  00575C  D003               	goto	i2l15133
 36559  00575E                     i2u1520_40:
 36560                           
 36561                           ; BSR set to: 1
 36562                           
 36563                           ;outputs_MC50.c: 274:         {;outputs_MC50.c: 275:             do { LATDbits.LATD7 = 0
      +                          ; } while(0);
 36564  00575E  9E86               	bcf	134,7,c	;volatile
 36565                           
 36566                           ; BSR set to: 1
 36567                           ;outputs_MC50.c: 276:             var_sys.TriacON=NO;
 36568  005760  0E00               	movlw	0
 36569  005762  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 36570  005764                     i2l15133:
 36571                           
 36572                           ; BSR set to: 1
 36573                           ;outputs_MC50.c: 280:         waitZeroPeak++;
 36574  005764  2B95               	incf	_waitZeroPeak& (0+255),f,b
 36575                           
 36576                           ; BSR set to: 1
 36577                           ;outputs_MC50.c: 282:         if ( waitZeroPeak > zeroCrossingWaitTime[zeroCrossingWaitT
      +                          imeIdx] )
 36578  005766  0EFA               	movlw	low _zeroCrossingWaitTime
 36579  005768  0100               	movlb	0	; () banked
 36580  00576A  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 36581  00576C  6ED9               	movwf	fsr2l,c
 36582  00576E  6ADA               	clrf	fsr2h,c
 36583  005770  0E02               	movlw	high _zeroCrossingWaitTime
 36584  005772  22DA               	addwfc	fsr2h,f,c
 36585  005774  0101               	movlb	1	; () banked
 36586  005776  5195               	movf	_waitZeroPeak& (0+255),w,b
 36587  005778  5CDE               	subwf	postinc2,w,c
 36588  00577A  B0D8               	btfsc	status,0,c
 36589  00577C  D044               	goto	i2l15163
 36590                           
 36591                           ; BSR set to: 1
 36592                           ;outputs_MC50.c: 284:         {;outputs_MC50.c: 286:             if ((var_sys.Control50o
      +                          r60hz >= 90)&&(var_sys.Control50or60hz <= 105)){
 36593  00577E  0E59               	movlw	89
 36594  005780  654D               	cpfsgt	(_var_sys+77)& (0+255),b	;volatile
 36595  005782  D005               	goto	i2l15143
 36596                           
 36597                           ; BSR set to: 1
 36598  005784  0E6A               	movlw	106
 36599  005786  614D               	cpfslt	(_var_sys+77)& (0+255),b	;volatile
 36600  005788  D002               	goto	i2l15143
 36601                           
 36602                           ; BSR set to: 1
 36603                           ;outputs_MC50.c: 287:                 var_sys.Torquerelanty = 1;
 36604  00578A  0E01               	movlw	1
 36605  00578C  D001               	goto	L119
 36606  00578E                     i2l15143:
 36607                           
 36608                           ; BSR set to: 1
 36609                           ;outputs_MC50.c: 290:             {;outputs_MC50.c: 291:                var_sys.Torquere
      +                          lanty = 0;
 36610  00578E  0E00               	movlw	0
 36611  005790                     L119:
 36612  005790  6F15               	movwf	(_var_sys+21)& (0+255),b	;volatile
 36613                           
 36614                           ; BSR set to: 1
 36615                           ;outputs_MC50.c: 294:             ts_system.ts_TimeSlotTRIAC=80;
 36616                           
 36617                           ;outputs_MC50.c: 292:             }
 36618  005792  0E50               	movlw	80
 36619  005794  6FA3               	movwf	(_ts_system+5)& (0+255),b	;volatile
 36620                           
 36621                           ;outputs_MC50.c: 295:             var_sys.Control50or60hz = 0;
 36622  005796  0E00               	movlw	0
 36623  005798  6F4D               	movwf	(_var_sys+77)& (0+255),b	;volatile
 36624                           
 36625                           ;outputs_MC50.c: 296:             StateTRIAC=1;
 36626  00579A  0E01               	movlw	1
 36627  00579C  6F94               	movwf	_StateTRIAC& (0+255),b
 36628                           
 36629                           ;outputs_MC50.c: 297:             zeroCrossing=1;
 36630  00579E  0E01               	movlw	1
 36631  0057A0  6F96               	movwf	_zeroCrossing& (0+255),b
 36632                           
 36633                           ; BSR set to: 1
 36634                           ;outputs_MC50.c: 298:             powerControl_st.actualCycle++;
 36635  0057A2  2B7F               	incf	(_powerControl_st+4)& (0+255),f,b
 36636                           
 36637                           ; BSR set to: 1
 36638                           ;outputs_MC50.c: 304:             if ( var_sys_NVM.electricBrake==1 && ts_system.TimeEle
      +                          ctricBrake>0 )
 36639  0057A4  0100               	movlb	0	; () banked
 36640  0057A6  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 36641  0057A8  A4D8               	btfss	status,2,c
 36642  0057AA  D00E               	goto	i2l15155
 36643                           
 36644                           ; BSR set to: 0
 36645  0057AC  0101               	movlb	1	; () banked
 36646  0057AE  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36647  0057B0  D00B               	goto	i2l15155
 36648  0057B2  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36649  0057B4  E103               	bnz	i2u1525_40
 36650  0057B6  05C6               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 36651  0057B8  A0D8               	btfss	status,0,c
 36652  0057BA  D006               	goto	i2l15155
 36653  0057BC                     i2u1525_40:
 36654                           
 36655                           ; BSR set to: 1
 36656                           ;outputs_MC50.c: 305:             {;outputs_MC50.c: 307:                 if ( powerContr
      +                          ol_st.actualCycle>=2 )
 36657  0057BC  0E01               	movlw	1
 36658  0057BE  657F               	cpfsgt	(_powerControl_st+4)& (0+255),b
 36659  0057C0  D022               	goto	i2l15163
 36660  0057C2                     i2u1526_40:
 36661                           
 36662                           ; BSR set to: 1
 36663                           ;outputs_MC50.c: 308:                 {;outputs_MC50.c: 309:                     powerCo
      +                          ntrol_st.actualCycle=0;
 36664  0057C2  0E00               	movlw	0
 36665  0057C4  6F7F               	movwf	(_powerControl_st+4)& (0+255),b
 36666  0057C6  D01F               	goto	i2l15163
 36667  0057C8                     i2l15155:
 36668                           
 36669                           ;outputs_MC50.c: 313:             {;outputs_MC50.c: 314:                 if ( powerContr
      +                          ol_st.actualCycle>=(powerControl_st.decelarationCyclesOff+powerControl_st.decelarationCy
      +                          clesOn) )
 36670  0057C8  0101               	movlb	1	; () banked
 36671  0057CA  517C               	movf	(_powerControl_st+1)& (0+255),w,b
 36672  0057CC  C17D  F005         	movff	_powerControl_st+2,??_controlMotorForce
 36673  0057D0  6A06               	clrf	(??_controlMotorForce+1)^0,c
 36674  0057D2  2605               	addwf	??_controlMotorForce^0,f,c
 36675  0057D4  0E00               	movlw	0
 36676  0057D6  2206               	addwfc	(??_controlMotorForce+1)^0,f,c
 36677  0057D8  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 36678  0057DA  6E07               	movwf	(??_controlMotorForce+2)^0,c
 36679  0057DC  6A08               	clrf	(??_controlMotorForce+3)^0,c
 36680  0057DE  5005               	movf	??_controlMotorForce^0,w,c
 36681  0057E0  5C07               	subwf	(??_controlMotorForce+2)^0,w,c
 36682  0057E2  5008               	movf	(??_controlMotorForce+3)^0,w,c
 36683  0057E4  0A80               	xorlw	128
 36684  0057E6  6E09               	movwf	(??_controlMotorForce+4)^0,c
 36685  0057E8  5006               	movf	(??_controlMotorForce+1)^0,w,c
 36686  0057EA  0A80               	xorlw	128
 36687  0057EC  5809               	subwfb	(??_controlMotorForce+4)^0,w,c
 36688  0057EE  B0D8               	btfsc	status,0,c
 36689  0057F0  D7E8               	goto	i2u1526_40
 36690  0057F2  D009               	goto	i2l15163
 36691  0057F4                     i2l2195:
 36692                           
 36693                           ; BSR set to: 1
 36694  0057F4  B68D               	btfsc	141,3,c	;volatile
 36695  0057F6  D007               	goto	i2l15163
 36696                           
 36697                           ; BSR set to: 1
 36698  0057F8  5196               	movf	_zeroCrossing& (0+255),w,b
 36699  0057FA  B4D8               	btfsc	status,2,c
 36700  0057FC  D004               	goto	i2l15163
 36701                           
 36702                           ; BSR set to: 1
 36703                           ;outputs_MC50.c: 328:     {;outputs_MC50.c: 330:         zeroCrossing=0;
 36704  0057FE  0E00               	movlw	0
 36705  005800  6F96               	movwf	_zeroCrossing& (0+255),b
 36706                           
 36707                           ;outputs_MC50.c: 331:         waitZeroPeak=0;
 36708  005802  0E00               	movlw	0
 36709  005804  6F95               	movwf	_waitZeroPeak& (0+255),b
 36710  005806                     i2l15163:
 36711                           
 36712                           ; BSR set to: 1
 36713                           ;outputs_MC50.c: 336:     if ( PORTAbits.RA3!=0 )
 36714  005806  B68D               	btfsc	141,3,c	;volatile
 36715                           
 36716                           ; BSR set to: 1
 36717                           ;outputs_MC50.c: 337:     {;outputs_MC50.c: 339:         zeroCrossingLength++;
 36718  005808  2B97               	incf	_zeroCrossingLength& (0+255),f,b
 36719                           
 36720                           ; BSR set to: 1
 36721                           ;outputs_MC50.c: 342:    var_sys.Control50or60hz ++;
 36722                           
 36723                           ;outputs_MC50.c: 340:     }
 36724  00580A  2B4D               	incf	(_var_sys+77)& (0+255),f,b	;volatile
 36725                           
 36726                           ; BSR set to: 1
 36727                           ;outputs_MC50.c: 352:     stateMotor = VerifyElectricalBrake(var_sys.StateMotor);
 36728  00580C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 36729  00580E  ECDE  F044         	call	i2_VerifyElectricalBrake
 36730  005812  0100               	movlb	0	; () banked
 36731  005814  6F83               	movwf	_stateMotor& (0+255),b
 36732                           
 36733                           ; BSR set to: 0
 36734                           ;outputs_MC50.c: 354:     if ( var_sys_NVM.electricBrake==1 && ts_system.TimeElectricBra
      +                          ke>0 && ts_system.TimeStopElectricBrake<=0 )
 36735  005816  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 36736  005818  A4D8               	btfss	status,2,c
 36737  00581A  D02E               	goto	i2l15187
 36738                           
 36739                           ; BSR set to: 0
 36740  00581C  0101               	movlb	1	; () banked
 36741  00581E  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36742  005820  D02B               	goto	i2l15187
 36743  005822  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36744  005824  E103               	bnz	i2u1532_40
 36745  005826  05C6               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 36746  005828  A0D8               	btfss	status,0,c
 36747  00582A  D026               	goto	i2l15187
 36748  00582C                     i2u1532_40:
 36749                           
 36750                           ; BSR set to: 1
 36751  00582C  BFDF               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 36752  00582E  D005               	goto	i2u1533_40
 36753  005830  51DF               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 36754  005832  E122               	bnz	i2l15187
 36755  005834  05DE               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 36756  005836  B0D8               	btfsc	status,0,c
 36757  005838  D01F               	goto	i2l15187
 36758  00583A                     i2u1533_40:
 36759                           
 36760                           ; BSR set to: 1
 36761                           ;outputs_MC50.c: 355:     {;outputs_MC50.c: 357:         if(stateMotor !=0 && StateTRIAC
      +                          ==1 && ts_system.ts_TRIACWait<=0 && powerControl_st.actualCycle==0 && ts_system.TimeElec
      +                          tricBrake<(((5+6)*( 100/50))-(5*( 100/50))) )
 36762  00583A  0100               	movlb	0	; () banked
 36763  00583C  5183               	movf	_stateMotor& (0+255),w,b
 36764  00583E  B4D8               	btfsc	status,2,c
 36765  005840  D03A               	goto	i2l15199
 36766                           
 36767                           ; BSR set to: 0
 36768  005842  0101               	movlb	1	; () banked
 36769  005844  0594               	decf	_StateTRIAC& (0+255),w,b
 36770  005846  A4D8               	btfss	status,2,c
 36771  005848  D036               	goto	i2l15199
 36772                           
 36773                           ; BSR set to: 1
 36774  00584A  BFA5               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 36775  00584C  D005               	goto	i2u1536_40
 36776  00584E  51A5               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 36777  005850  E132               	bnz	i2l15199
 36778  005852  05A4               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 36779  005854  B0D8               	btfsc	status,0,c
 36780  005856  D02F               	goto	i2l15199
 36781  005858                     i2u1536_40:
 36782                           
 36783                           ; BSR set to: 1
 36784  005858  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 36785  00585A  A4D8               	btfss	status,2,c
 36786  00585C  D02C               	goto	i2l15199
 36787                           
 36788                           ; BSR set to: 1
 36789  00585E  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36790  005860  D006               	goto	i2u1538_40
 36791  005862  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36792  005864  E128               	bnz	i2l15199
 36793  005866  0E0C               	movlw	12
 36794  005868  5DC6               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 36795  00586A  B0D8               	btfsc	status,0,c
 36796  00586C  D024               	goto	i2l15199
 36797  00586E                     i2u1538_40:
 36798                           
 36799                           ; BSR set to: 1
 36800                           
 36801                           ;outputs_MC50.c: 358:         {;outputs_MC50.c: 359:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 36802  00586E  8E86               	bsf	134,7,c	;volatile
 36803                           
 36804                           ; BSR set to: 1
 36805                           ;outputs_MC50.c: 360:            ts_system.ts_TRIACWait=-(25*200);
 36806  005870  0EEC               	movlw	236
 36807  005872  6FA5               	movwf	(_ts_system+7)& (0+255),b	;volatile
 36808  005874  0E78               	movlw	120
 36809  005876  D01A               	goto	L120
 36810  005878                     i2l15187:
 36811                           
 36812                           ;outputs_MC50.c: 366:     {;outputs_MC50.c: 368:         if(stateMotor !=0 && ts_system.
      +                          ts_TimeSlotTRIAC<difTime && StateTRIAC==1 && ts_system.ts_TRIACWait<=0 && var_sys.InStop
      +                          ing==NO)
 36813  005878  0100               	movlb	0	; () banked
 36814  00587A  5183               	movf	_stateMotor& (0+255),w,b
 36815  00587C  B4D8               	btfsc	status,2,c
 36816  00587E  D01B               	goto	i2l15199
 36817                           
 36818                           ; BSR set to: 0
 36819  005880  0101               	movlb	1	; () banked
 36820  005882  5193               	movf	_difTime& (0+255),w,b
 36821  005884  5DA3               	subwf	(_ts_system+5)& (0+255),w,b	;volatile
 36822  005886  B0D8               	btfsc	status,0,c
 36823  005888  D016               	goto	i2l15199
 36824                           
 36825                           ; BSR set to: 1
 36826  00588A  0594               	decf	_StateTRIAC& (0+255),w,b
 36827  00588C  A4D8               	btfss	status,2,c
 36828  00588E  D013               	goto	i2l15199
 36829                           
 36830                           ; BSR set to: 1
 36831  005890  BFA5               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 36832  005892  D005               	goto	i2u1542_40
 36833  005894  51A5               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 36834  005896  E10F               	bnz	i2l15199
 36835  005898  05A4               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 36836  00589A  B0D8               	btfsc	status,0,c
 36837  00589C  D00C               	goto	i2l15199
 36838  00589E                     i2u1542_40:
 36839                           
 36840                           ; BSR set to: 1
 36841  00589E  510D               	movf	(_var_sys+13)& (0+255),w,b	;volatile
 36842  0058A0  A4D8               	btfss	status,2,c
 36843  0058A2  D009               	goto	i2l15199
 36844                           
 36845                           ; BSR set to: 1
 36846                           
 36847                           ;outputs_MC50.c: 369:         {;outputs_MC50.c: 370:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 36848  0058A4  8E86               	bsf	134,7,c	;volatile
 36849                           
 36850                           ; BSR set to: 1
 36851                           ;outputs_MC50.c: 371:            ts_system.ts_TRIACWait=-200;
 36852  0058A6  0EFF               	movlw	255
 36853  0058A8  6FA5               	movwf	(_ts_system+7)& (0+255),b	;volatile
 36854  0058AA  0E38               	movlw	56
 36855  0058AC                     L120:
 36856  0058AC  6FA4               	movwf	(_ts_system+6)& (0+255),b	;volatile
 36857                           
 36858                           ;outputs_MC50.c: 372:            var_sys.TriacON=YES;
 36859  0058AE  0E01               	movlw	1
 36860  0058B0  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 36861                           
 36862                           ;outputs_MC50.c: 373:            StateTRIAC=0;
 36863  0058B2  0E00               	movlw	0
 36864  0058B4  6F94               	movwf	_StateTRIAC& (0+255),b
 36865  0058B6                     i2l15199:
 36866                           
 36867                           ;outputs_MC50.c: 377:     if (((ts_system.ts_TimeSlotTRIAC <= 20 )&& ts_system.TimeElect
      +                          ricBrake<0) || (stateMotor==0))
 36868  0058B6  0E15               	movlw	21
 36869  0058B8  0101               	movlb	1	; () banked
 36870  0058BA  61A3               	cpfslt	(_ts_system+5)& (0+255),b	;volatile
 36871  0058BC  D002               	goto	i2u1545_40
 36872                           
 36873                           ; BSR set to: 1
 36874  0058BE  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36875  0058C0  D004               	goto	i2u1546_40
 36876  0058C2                     i2u1545_40:
 36877                           
 36878                           ; BSR set to: 1
 36879  0058C2  0100               	movlb	0	; () banked
 36880  0058C4  5183               	movf	_stateMotor& (0+255),w,b
 36881  0058C6  A4D8               	btfss	status,2,c
 36882  0058C8  D004               	goto	i2l2222
 36883  0058CA                     i2u1546_40:
 36884                           
 36885                           ;outputs_MC50.c: 378:     {;outputs_MC50.c: 384:             do { LATDbits.LATD7 = 0; } 
      +                          while(0);
 36886  0058CA  9E86               	bcf	134,7,c	;volatile
 36887                           
 36888                           ;outputs_MC50.c: 385:             var_sys.TriacON=NO;
 36889  0058CC  0E00               	movlw	0
 36890  0058CE  0101               	movlb	1	; () banked
 36891  0058D0  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 36892  0058D2                     i2l2222:
 36893                           
 36894                           ;outputs_MC50.c: 396:     if(stateMotor !=0 && ts_system.ts_TRIACWait>0)
 36895  0058D2  0100               	movlb	0	; () banked
 36896  0058D4  5183               	movf	_stateMotor& (0+255),w,b
 36897  0058D6  B4D8               	btfsc	status,2,c
 36898  0058D8  D00C               	goto	i2l15211
 36899                           
 36900                           ; BSR set to: 0
 36901  0058DA  0101               	movlb	1	; () banked
 36902  0058DC  BFA5               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 36903  0058DE  D009               	goto	i2l15211
 36904  0058E0  51A5               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 36905  0058E2  E103               	bnz	i2u1548_40
 36906  0058E4  05A4               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 36907  0058E6  A0D8               	btfss	status,0,c
 36908  0058E8  D004               	goto	i2l15211
 36909  0058EA                     i2u1548_40:
 36910                           
 36911                           ; BSR set to: 1
 36912                           ;outputs_MC50.c: 397:     {;outputs_MC50.c: 398:         ts_system.ts_TRIACWait--;
 36913  0058EA  07A4               	decf	(_ts_system+6)& (0+255),f,b	;volatile
 36914  0058EC  A0D8               	btfss	status,0,c
 36915  0058EE  07A5               	decf	(_ts_system+7)& (0+255),f,b	;volatile
 36916                           
 36917                           ;outputs_MC50.c: 399:     }
 36918  0058F0  0012               	return	
 36919  0058F2                     i2l15211:
 36920  0058F2  0100               	movlb	0	; () banked
 36921  0058F4  5183               	movf	_stateMotor& (0+255),w,b
 36922  0058F6  A4D8               	btfss	status,2,c
 36923  0058F8  0012               	return	
 36924                           
 36925                           ; BSR set to: 0
 36926  0058FA  0101               	movlb	1	; () banked
 36927  0058FC  AFA5               	btfss	(_ts_system+7)& (0+255),7,b	;volatile
 36928  0058FE  0012               	return	
 36929                           
 36930                           ; BSR set to: 1
 36931                           ;outputs_MC50.c: 401:     {;outputs_MC50.c: 402:         ts_system.ts_TRIACWait++;
 36932  005900  4BA4               	infsnz	(_ts_system+6)& (0+255),f,b	;volatile
 36933  005902  2BA5               	incf	(_ts_system+7)& (0+255),f,b	;volatile
 36934  005904  0012               	return		;funcret
 36935  005906                     __end_of_controlMotorForce:
 36936                           	callstack 0
 36937                           
 36938 ;; *************** function i2_VerifyElectricalBrake *****************
 36939 ;; Defined at:
 36940 ;;		line 658 in file "outputs_MC50.c"
 36941 ;; Parameters:    Size  Location     Type
 36942 ;;  actualState     1    wreg     enum E10381
 36943 ;; Auto vars:     Size  Location     Type
 36944 ;;  actualState     1    1[COMRAM] enum E10381
 36945 ;;  tempState       1    0[COMRAM] enum E10381
 36946 ;; Return value:  Size  Location     Type
 36947 ;;                  1    wreg      enum E10381
 36948 ;; Registers used:
 36949 ;;		wreg, status,2, status,0
 36950 ;; Tracked objects:
 36951 ;;		On entry : 3F/1
 36952 ;;		On exit  : 3E/0
 36953 ;;		Unchanged: 0/0
 36954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36956 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36958 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36959 ;;Total ram usage:        2 bytes
 36960 ;; Hardware stack levels used: 1
 36961 ;; This function calls:
 36962 ;;		Nothing
 36963 ;; This function is called by:
 36964 ;;		_controlMotorForce
 36965 ;; This function uses a non-reentrant model
 36966 ;;
 36967                           
 36968                           	psect	text198
 36969  0089BC                     __ptext198:
 36970                           	callstack 0
 36971  0089BC                     i2_VerifyElectricalBrake:
 36972                           	callstack 14
 36973                           
 36974                           ;incstack = 0
 36975                           ;i2VerifyElectricalBrake@actualState stored from wreg
 36976  0089BC  6E02               	movwf	i2VerifyElectricalBrake@actualState^0,c
 36977                           
 36978                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 36979  0089BE  C002  F001         	movff	i2VerifyElectricalBrake@actualState,i2VerifyElectricalBrake@tempState
 36980                           
 36981                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 36982  0089C2  0100               	movlb	0	; () banked
 36983  0089C4  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 36984  0089C6  A4D8               	btfss	status,2,c
 36985  0089C8  D02E               	goto	i2l2323
 36986                           
 36987                           ; BSR set to: 0
 36988  0089CA  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 36989  0089CC  A4D8               	btfss	status,2,c
 36990  0089CE  D02B               	goto	i2l2323
 36991                           
 36992                           ; BSR set to: 0
 36993  0089D0  0101               	movlb	1	; () banked
 36994  0089D2  BFDF               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 36995  0089D4  D005               	goto	i2u1479_40
 36996  0089D6  51DF               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 36997  0089D8  E126               	bnz	i2l2323
 36998  0089DA  05DE               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 36999  0089DC  B0D8               	btfsc	status,0,c
 37000  0089DE  D023               	goto	i2l2323
 37001  0089E0                     i2u1479_40:
 37002                           
 37003                           ; BSR set to: 1
 37004                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 37005  0089E0  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 37006  0089E2  0100               	movlb	0	; () banked
 37007  0089E4  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 37008  0089E6  B4D8               	btfsc	status,2,c
 37009  0089E8  D00B               	goto	i2l14829
 37010                           
 37011                           ; BSR set to: 0
 37012  0089EA  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 37013  0089EC  A4D8               	btfss	status,2,c
 37014  0089EE  D008               	goto	i2l14829
 37015                           
 37016                           ; BSR set to: 0
 37017                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 37018  0089F0  0E01               	movlw	1
 37019  0089F2  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 37020                           
 37021                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 37022  0089F4  0E00               	movlw	0
 37023  0089F6  0101               	movlb	1	; () banked
 37024  0089F8  6FC7               	movwf	(_ts_system+41)& (0+255),b	;volatile
 37025  0089FA  0E16               	movlw	22
 37026  0089FC  6FC6               	movwf	(_ts_system+40)& (0+255),b	;volatile
 37027                           
 37028                           ;outputs_MC50.c: 670:         }
 37029  0089FE  D018               	goto	i2l2328
 37030  008A00                     i2l14829:
 37031                           
 37032                           ; BSR set to: 0
 37033  008A00  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 37034  008A02  A4D8               	btfss	status,2,c
 37035  008A04  D00B               	goto	i2l14835
 37036                           
 37037                           ; BSR set to: 0
 37038  008A06  0101               	movlb	1	; () banked
 37039  008A08  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 37040  008A0A  D008               	goto	i2l14835
 37041  008A0C  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 37042  008A0E  E103               	bnz	i2u1483_40
 37043  008A10  05C6               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 37044  008A12  A0D8               	btfss	status,0,c
 37045  008A14  D003               	goto	i2l14835
 37046  008A16                     i2u1483_40:
 37047                           
 37048                           ; BSR set to: 1
 37049                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 37050  008A16  0E01               	movlw	1
 37051  008A18  6E01               	movwf	i2VerifyElectricalBrake@tempState^0,c
 37052                           
 37053                           ;outputs_MC50.c: 686:         }
 37054  008A1A  D00A               	goto	i2l2328
 37055  008A1C                     i2l14835:
 37056                           
 37057                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 37058  008A1C  0E00               	movlw	0
 37059  008A1E  0100               	movlb	0	; () banked
 37060  008A20  6F78               	movwf	_brakeElectric_st& (0+255),b
 37061                           
 37062                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 37063  008A22  0E00               	movlw	0
 37064  008A24  D004               	goto	L121
 37065  008A26                     i2l2323:
 37066                           
 37067                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 37068  008A26  C002  F078         	movff	i2VerifyElectricalBrake@actualState,_brakeElectric_st
 37069                           
 37070                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 37071  008A2A  0E00               	movlw	0
 37072  008A2C  0100               	movlb	0	; () banked
 37073  008A2E                     L121:
 37074  008A2E  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 37075  008A30                     i2l2328:
 37076                           
 37077                           ;outputs_MC50.c: 700:     return tempState;
 37078  008A30  5001               	movf	i2VerifyElectricalBrake@tempState^0,w,c
 37079  008A32  0012               	return		;funcret
 37080  008A34                     __end_ofi2_VerifyElectricalBrake:
 37081                           	callstack 0
 37082                           
 37083 ;; *************** function i2_GetMotorPower *****************
 37084 ;; Defined at:
 37085 ;;		line 405 in file "outputs_MC50.c"
 37086 ;; Parameters:    Size  Location     Type
 37087 ;;		None
 37088 ;; Auto vars:     Size  Location     Type
 37089 ;;  defineatraso    1    3[COMRAM] unsigned char 
 37090 ;; Return value:  Size  Location     Type
 37091 ;;                  1    wreg      unsigned char 
 37092 ;; Registers used:
 37093 ;;		wreg, status,2, status,0, prodl, prodh
 37094 ;; Tracked objects:
 37095 ;;		On entry : 3F/E
 37096 ;;		On exit  : 3F/1
 37097 ;;		Unchanged: 0/0
 37098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37100 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37101 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37102 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37103 ;;Total ram usage:        4 bytes
 37104 ;; Hardware stack levels used: 1
 37105 ;; This function calls:
 37106 ;;		Nothing
 37107 ;; This function is called by:
 37108 ;;		_controlMotorForce
 37109 ;; This function uses a non-reentrant model
 37110 ;;
 37111                           
 37112                           	psect	text199
 37113  007C9E                     __ptext199:
 37114                           	callstack 0
 37115  007C9E                     i2_GetMotorPower:
 37116                           	callstack 14
 37117                           
 37118                           ; BSR set to: 14
 37119                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 37120                           
 37121                           ;incstack = 0
 37122  007C9E  0101               	movlb	1	; () banked
 37123  007CA0  057B               	decf	_powerControl_st& (0+255),w,b
 37124  007CA2  A4D8               	btfss	status,2,c
 37125  007CA4  D006               	goto	i2l14779
 37126                           
 37127                           ; BSR set to: 1
 37128                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 37129  007CA6  0100               	movlb	0	; () banked
 37130  007CA8  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 37131  007CAA  0D06               	mullw	6
 37132  007CAC  CFF3 F192          	movff	prodl,_temppower
 37133                           
 37134                           ;outputs_MC50.c: 416:     }
 37135  007CB0  D043               	goto	i2l2240
 37136  007CB2                     i2l14779:
 37137                           
 37138                           ; BSR set to: 1
 37139                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 37140  007CB2  0100               	movlb	0	; () banked
 37141  007CB4  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 37142  007CB6  0D06               	mullw	6
 37143  007CB8  CFF3 F082          	movff	prodl,_fullmotorPower
 37144                           
 37145                           ; BSR set to: 0
 37146                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 37147  007CBC  0101               	movlb	1	; () banked
 37148  007CBE  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 37149  007CC0  D01C               	goto	i2l14789
 37150  007CC2  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 37151  007CC4  E103               	bnz	i2u1469_40
 37152  007CC6  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 37153  007CC8  A0D8               	btfss	status,0,c
 37154  007CCA  D017               	goto	i2l14789
 37155  007CCC                     i2u1469_40:
 37156                           
 37157                           ; BSR set to: 1
 37158                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 37159  007CCC  0100               	movlb	0	; () banked
 37160  007CCE  5182               	movf	_fullmotorPower& (0+255),w,b
 37161  007CD0  6E01               	movwf	??i2_GetMotorPower^0,c
 37162  007CD2  6A02               	clrf	(??i2_GetMotorPower+1)^0,c
 37163  007CD4  0101               	movlb	1	; () banked
 37164  007CD6  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 37165  007CD8  5C01               	subwf	??i2_GetMotorPower^0,w,c
 37166  007CDA  5002               	movf	(??i2_GetMotorPower+1)^0,w,c
 37167  007CDC  0A80               	xorlw	128
 37168  007CDE  6E03               	movwf	(??i2_GetMotorPower+2)^0,c
 37169  007CE0  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 37170  007CE2  0A80               	xorlw	128
 37171  007CE4  5803               	subwfb	(??i2_GetMotorPower+2)^0,w,c
 37172  007CE6  B0D8               	btfsc	status,0,c
 37173  007CE8  D002               	goto	i2l14787
 37174                           
 37175                           ; BSR set to: 1
 37176                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 37177  007CEA  0E01               	movlw	1
 37178  007CEC  D004               	goto	L123
 37179  007CEE                     i2l14787:
 37180                           
 37181                           ; BSR set to: 1
 37182                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 37183  007CEE  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 37184  007CF0  0100               	movlb	0	; () banked
 37185  007CF2  5D82               	subwf	_fullmotorPower& (0+255),w,b
 37186  007CF4  D017               	goto	L124
 37187  007CF6                     L123:
 37188  007CF6  6F92               	movwf	_temppower& (0+255),b
 37189  007CF8  D01F               	goto	i2l2240
 37190  007CFA                     i2l14789:
 37191                           
 37192                           ; BSR set to: 1
 37193  007CFA  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 37194  007CFC  D005               	goto	i2u1471_40
 37195  007CFE  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 37196  007D00  E113               	bnz	i2l14799
 37197  007D02  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 37198  007D04  B0D8               	btfsc	status,0,c
 37199  007D06  D010               	goto	i2l14799
 37200  007D08                     i2u1471_40:
 37201                           
 37202                           ; BSR set to: 1
 37203  007D08  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 37204  007D0A  D005               	goto	i2u1472_40
 37205  007D0C  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 37206  007D0E  E10C               	bnz	i2l14799
 37207  007D10  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 37208  007D12  B0D8               	btfsc	status,0,c
 37209  007D14  D009               	goto	i2l14799
 37210  007D16                     i2u1472_40:
 37211                           
 37212                           ; BSR set to: 1
 37213                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 37214  007D16  C082  F192         	movff	_fullmotorPower,_temppower
 37215                           
 37216                           ; BSR set to: 1
 37217                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 37218  007D1A  0E08               	movlw	8
 37219  007D1C  0100               	movlb	0	; () banked
 37220  007D1E  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 37221  007D20  D00B               	goto	i2l2240
 37222                           
 37223                           ; BSR set to: 0
 37224                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 37225  007D22  0E3A               	movlw	58
 37226  007D24                     L124:
 37227  007D24  0101               	movlb	1	; () banked
 37228  007D26  D7E7               	goto	L123
 37229  007D28                     i2l14799:
 37230                           
 37231                           ; BSR set to: 1
 37232  007D28  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 37233  007D2A  D006               	goto	i2l2240
 37234  007D2C  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 37235  007D2E  E102               	bnz	i2u1474_40
 37236  007D30  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 37237  007D32  B0D8               	btfsc	status,0,c
 37238  007D34                     i2u1474_40:
 37239                           
 37240                           ; BSR set to: 1
 37241                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 37242  007D34  C110  F192         	movff	_var_sys+16,_temppower	;volatile
 37243  007D38                     i2l2240:
 37244                           
 37245                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 37246  007D38  0101               	movlb	1	; () banked
 37247  007D3A  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 37248  007D3C  D00E               	goto	i2l14809
 37249  007D3E  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 37250  007D40  E103               	bnz	i2u1475_40
 37251  007D42  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 37252  007D44  A0D8               	btfss	status,0,c
 37253  007D46  D009               	goto	i2l14809
 37254  007D48                     i2u1475_40:
 37255                           
 37256                           ; BSR set to: 1
 37257  007D48  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 37258  007D4A  D005               	goto	i2u1476_40
 37259  007D4C  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 37260  007D4E  E105               	bnz	i2l14809
 37261  007D50  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 37262  007D52  B0D8               	btfsc	status,0,c
 37263  007D54  D002               	goto	i2l14809
 37264  007D56                     i2u1476_40:
 37265                           
 37266                           ; BSR set to: 1
 37267                           ;outputs_MC50.c: 452:     defineatraso = 5;
 37268  007D56  0E05               	movlw	5
 37269  007D58  D001               	goto	L122
 37270  007D5A                     i2l14809:
 37271                           
 37272                           ; BSR set to: 1
 37273                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 37274  007D5A  0E17               	movlw	23
 37275  007D5C                     L122:
 37276  007D5C  6E04               	movwf	i2GetMotorPower@defineatraso^0,c
 37277                           
 37278                           ; BSR set to: 1
 37279                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 37280  007D5E  5192               	movf	_temppower& (0+255),w,b
 37281  007D60  2404               	addwf	i2GetMotorPower@defineatraso^0,w,c
 37282                           
 37283                           ; BSR set to: 1
 37284  007D62  0012               	return		;funcret
 37285  007D64                     __end_ofi2_GetMotorPower:
 37286                           	callstack 0
 37287                           
 37288 ;; *************** function _TMR1_WriteTimer *****************
 37289 ;; Defined at:
 37290 ;;		line 129 in file "mcc_generated_files/tmr1.c"
 37291 ;; Parameters:    Size  Location     Type
 37292 ;;  timerVal        2    0[COMRAM] unsigned short 
 37293 ;; Auto vars:     Size  Location     Type
 37294 ;;		None
 37295 ;; Return value:  Size  Location     Type
 37296 ;;                  1    wreg      void 
 37297 ;; Registers used:
 37298 ;;		None
 37299 ;; Tracked objects:
 37300 ;;		On entry : 3F/1
 37301 ;;		On exit  : 3F/1
 37302 ;;		Unchanged: 3F/0
 37303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37304 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37307 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37308 ;;Total ram usage:        2 bytes
 37309 ;; Hardware stack levels used: 1
 37310 ;; This function calls:
 37311 ;;		Nothing
 37312 ;; This function is called by:
 37313 ;;		_TMR1_ISR
 37314 ;; This function uses a non-reentrant model
 37315 ;;
 37316                           
 37317                           	psect	text200
 37318  009D7E                     __ptext200:
 37319                           	callstack 0
 37320  009D7E                     _TMR1_WriteTimer:
 37321                           	callstack 15
 37322                           
 37323                           ; BSR set to: 1
 37324                           ;mcc_generated_files/tmr1.c: 129: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 130: {;mcc_generated_files/tmr1.c: 131:     if (T1CONbits.nT1SYNC == 1)
 37325                           
 37326                           ; BSR set to: 1
 37327                           ;incstack = 0
 37328  009D7E  A4CF               	btfss	207,2,c	;volatile
 37329  009D80  D007               	goto	i2l1147
 37330                           
 37331                           ; BSR set to: 1
 37332                           ;mcc_generated_files/tmr1.c: 132:     {;mcc_generated_files/tmr1.c: 134:         T1CONbi
      +                          ts.TMR1ON = 0;
 37333  009D82  90CF               	bcf	207,0,c	;volatile
 37334                           
 37335                           ;mcc_generated_files/tmr1.c: 137:         TMR1H = (uint8_t)(timerVal >> 8);
 37336  009D84  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 37337                           
 37338                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 37339  009D88  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 37340                           
 37341                           ;mcc_generated_files/tmr1.c: 141:         T1CONbits.TMR1ON =1;
 37342  009D8C  80CF               	bsf	207,0,c	;volatile
 37343                           
 37344                           ;mcc_generated_files/tmr1.c: 142:     }
 37345  009D8E  0012               	return	
 37346  009D90                     i2l1147:
 37347                           
 37348                           ; BSR set to: 1
 37349                           ;mcc_generated_files/tmr1.c: 144:     {;mcc_generated_files/tmr1.c: 146:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 37350  009D90  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 37351                           
 37352                           ;mcc_generated_files/tmr1.c: 147:         TMR1L = (uint8_t)timerVal;
 37353  009D94  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 37354                           
 37355                           ; BSR set to: 1
 37356  009D98  0012               	return		;funcret
 37357  009D9A                     __end_of_TMR1_WriteTimer:
 37358                           	callstack 0
 37359                           
 37360 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 37361 ;; Defined at:
 37362 ;;		line 196 in file "mcc_generated_files/tmr1.c"
 37363 ;; Parameters:    Size  Location     Type
 37364 ;;		None
 37365 ;; Auto vars:     Size  Location     Type
 37366 ;;		None
 37367 ;; Return value:  Size  Location     Type
 37368 ;;                  1    wreg      void 
 37369 ;; Registers used:
 37370 ;;		None
 37371 ;; Tracked objects:
 37372 ;;		On entry : 3F/2
 37373 ;;		On exit  : 3F/2
 37374 ;;		Unchanged: 3F/0
 37375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37380 ;;Total ram usage:        0 bytes
 37381 ;; Hardware stack levels used: 1
 37382 ;; This function calls:
 37383 ;;		Nothing
 37384 ;; This function is called by:
 37385 ;;		_TMR1_Initialize
 37386 ;;		_TMR1_ISR
 37387 ;; This function uses a non-reentrant model
 37388 ;;
 37389                           
 37390                           	psect	text201
 37391  00A0B6                     __ptext201:
 37392                           	callstack 0
 37393  00A0B6                     _TMR1_DefaultInterruptHandler:
 37394                           	callstack 15
 37395                           
 37396                           ; BSR set to: 2
 37397                           
 37398                           ; BSR set to: 1
 37399                           ;incstack = 0
 37400  00A0B6  0012               	return		;funcret
 37401  00A0B8                     __end_of_TMR1_DefaultInterruptHandler:
 37402                           	callstack 0
 37403                           
 37404 ;; *************** function _TMR0_ISR *****************
 37405 ;; Defined at:
 37406 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 37407 ;; Parameters:    Size  Location     Type
 37408 ;;		None
 37409 ;; Auto vars:     Size  Location     Type
 37410 ;;		None
 37411 ;; Return value:  Size  Location     Type
 37412 ;;                  1    wreg      void 
 37413 ;; Registers used:
 37414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 37415 ;; Tracked objects:
 37416 ;;		On entry : 3F/E
 37417 ;;		On exit  : 0/0
 37418 ;;		Unchanged: 0/0
 37419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37424 ;;Total ram usage:        0 bytes
 37425 ;; Hardware stack levels used: 1
 37426 ;; Hardware stack levels required when called: 1
 37427 ;; This function calls:
 37428 ;;		Absolute function
 37429 ;;		_TMR0_DefaultInterruptHandler
 37430 ;;		_rxi
 37431 ;; This function is called by:
 37432 ;;		_INTERRUPT_InterruptManager
 37433 ;; This function uses a non-reentrant model
 37434 ;;
 37435                           
 37436                           	psect	text202
 37437  009C32                     __ptext202:
 37438                           	callstack 0
 37439  009C32                     _TMR0_ISR:
 37440                           	callstack 15
 37441                           
 37442                           ; BSR set to: 14
 37443                           ;mcc_generated_files/tmr0.c: 130:     PIR0bits.TMR0IF = 0;
 37444                           
 37445                           ; BSR set to: 2
 37446                           ;incstack = 0
 37447  009C32  9BCA               	bcf	202,5,b	;volatile
 37448                           
 37449                           ; BSR set to: 14
 37450                           ;mcc_generated_files/tmr0.c: 132:     rxi();
 37451  009C34  ECE8  F027         	call	_rxi	;wreg free
 37452                           
 37453                           ;mcc_generated_files/tmr0.c: 134:     if(TMR0_InterruptHandler)
 37454  009C38  0102               	movlb	2	; () banked
 37455  009C3A  51E3               	movf	_TMR0_InterruptHandler& (0+255),w,b
 37456  009C3C  11E4               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 37457  009C3E  B4D8               	btfsc	status,2,c
 37458  009C40  0012               	return	
 37459                           
 37460                           ; BSR set to: 2
 37461                           ;mcc_generated_files/tmr0.c: 135:     {;mcc_generated_files/tmr0.c: 136:         TMR0_In
      +                          terruptHandler();
 37462  009C42  D801               	call	i2u1918_48
 37463  009C44  0012               	return	
 37464  009C46                     i2u1918_48:
 37465  009C46  0005               	push	
 37466  009C48  6EFA               	movwf	pclath,c
 37467  009C4A  51E3               	movf	_TMR0_InterruptHandler& (0+255),w,b
 37468  009C4C  6EFD               	movwf	tosl,c
 37469  009C4E  51E4               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 37470  009C50  6EFE               	movwf	tosh,c
 37471  009C52  6AFF               	clrf	tosu,c
 37472  009C54  50FA               	movf	pclath,w,c
 37473  009C56  0012               	return		;indir
 37474  009C58                     __end_of_TMR0_ISR:
 37475                           	callstack 0
 37476                           
 37477 ;; *************** function _rxi *****************
 37478 ;; Defined at:
 37479 ;;		line 41 in file "inputs_MC50.c"
 37480 ;; Parameters:    Size  Location     Type
 37481 ;;		None
 37482 ;; Auto vars:     Size  Location     Type
 37483 ;;		None
 37484 ;; Return value:  Size  Location     Type
 37485 ;;                  1    wreg      void 
 37486 ;; Registers used:
 37487 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37488 ;; Tracked objects:
 37489 ;;		On entry : 3F/E
 37490 ;;		On exit  : 3C/0
 37491 ;;		Unchanged: 0/0
 37492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37495 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37496 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37497 ;;Total ram usage:        2 bytes
 37498 ;; Hardware stack levels used: 1
 37499 ;; This function calls:
 37500 ;;		Nothing
 37501 ;; This function is called by:
 37502 ;;		_TMR0_ISR
 37503 ;; This function uses a non-reentrant model
 37504 ;;
 37505                           
 37506                           	psect	text203
 37507  004FD0                     __ptext203:
 37508                           	callstack 0
 37509  004FD0                     _rxi:
 37510                           	callstack 15
 37511                           
 37512                           ; BSR set to: 14
 37513                           ;inputs_MC50.c: 43:     RFBit = PORTBbits.RB3;
 37514                           
 37515                           ;incstack = 0
 37516  004FD0  0E00               	movlw	0
 37517  004FD2  B68E               	btfsc	142,3,c	;volatile
 37518  004FD4  0E01               	movlw	1
 37519  004FD6  0100               	movlb	0	; () banked
 37520  004FD8  6F89               	movwf	_RFBit& (0+255),b	;volatile
 37521                           
 37522                           ; BSR set to: 0
 37523                           ;inputs_MC50.c: 47:     if (RFFull)
 37524  004FDA  518B               	movf	_RFFull& (0+255),w,b	;volatile
 37525  004FDC  A4D8               	btfss	status,2,c
 37526  004FDE  0012               	return	
 37527  004FE0  D116               	goto	i2l15093
 37528  004FE2                     i2l14983:
 37529                           
 37530                           ; BSR set to: 1
 37531                           ;inputs_MC50.c: 53:             if (RFBit == 0) {
 37532  004FE2  0100               	movlb	0	; () banked
 37533  004FE4  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37534  004FE6  A4D8               	btfss	status,2,c
 37535  004FE8  D004               	goto	i2l14987
 37536                           
 37537                           ; BSR set to: 0
 37538                           ;inputs_MC50.c: 56:                 RFstate = 3;
 37539  004FEA  0E03               	movlw	3
 37540  004FEC  0101               	movlb	1	; () banked
 37541  004FEE  6F9C               	movwf	_RFstate& (0+255),b
 37542                           
 37543                           ;inputs_MC50.c: 57:             } else {
 37544  004FF0  0012               	return	
 37545  004FF2                     i2l14987:
 37546                           
 37547                           ; BSR set to: 0
 37548                           ;inputs_MC50.c: 58:                 RFcount--;
 37549  004FF2  077E               	decf	_RFcount& (0+255),f,b
 37550  004FF4  A0D8               	btfss	status,0,c
 37551  004FF6  077F               	decf	(_RFcount+1)& (0+255),f,b
 37552                           
 37553                           ; BSR set to: 0
 37554                           ;inputs_MC50.c: 59:                 if (RFcount < -10)
 37555  004FF8  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 37556  004FFA  0012               	return	
 37557  004FFC  0EF6               	movlw	246
 37558  004FFE  5D7E               	subwf	_RFcount& (0+255),w,b
 37559  005000  0EFF               	movlw	255
 37560  005002  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 37561  005004  B0D8               	btfsc	status,0,c
 37562  005006  0012               	return	
 37563  005008                     i2u1490_40:
 37564  005008                     i2l14991:
 37565                           
 37566                           ; BSR set to: 0
 37567                           ;inputs_MC50.c: 60:                 {;inputs_MC50.c: 62:                     RFstate = 0
      +                          ;
 37568  005008  0E00               	movlw	0
 37569  00500A  0101               	movlb	1	; () banked
 37570  00500C  6F9C               	movwf	_RFstate& (0+255),b
 37571  00500E  0012               	return	
 37572  005010                     i2l14993:
 37573                           
 37574                           ; BSR set to: 1
 37575                           ;inputs_MC50.c: 67:             if (RFBit) {
 37576  005010  0100               	movlb	0	; () banked
 37577  005012  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37578  005014  B4D8               	btfsc	status,2,c
 37579  005016  D02C               	goto	i2l15013
 37580                           
 37581                           ; BSR set to: 0
 37582                           ;inputs_MC50.c: 71:                 RFstate = 2;
 37583  005018  0E02               	movlw	2
 37584  00501A  0101               	movlb	1	; () banked
 37585  00501C  6F9C               	movwf	_RFstate& (0+255),b
 37586                           
 37587                           ; BSR set to: 1
 37588                           ;inputs_MC50.c: 72:                 BufferRF[Bptr] >>= 1;
 37589  00501E  0EC8               	movlw	low _BufferRF
 37590  005020  0100               	movlb	0	; () banked
 37591  005022  258D               	addwf	_Bptr& (0+255),w,b
 37592  005024  6ED9               	movwf	fsr2l,c
 37593  005026  6ADA               	clrf	fsr2h,c
 37594  005028  0E02               	movlw	high _BufferRF
 37595  00502A  22DA               	addwfc	fsr2h,f,c
 37596  00502C  90D8               	bcf	status,0,c
 37597  00502E  32DF               	rrcf	indf2,f,c
 37598                           
 37599                           ; BSR set to: 0
 37600                           ;inputs_MC50.c: 73:                 if (RFcount >= 0) {
 37601  005030  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37602  005032  D008               	goto	i2l15003
 37603                           
 37604                           ; BSR set to: 0
 37605                           ;inputs_MC50.c: 74:                     BufferRF[Bptr] += 0x80;
 37606  005034  0EC8               	movlw	low _BufferRF
 37607  005036  258D               	addwf	_Bptr& (0+255),w,b
 37608  005038  6ED9               	movwf	fsr2l,c
 37609  00503A  6ADA               	clrf	fsr2h,c
 37610  00503C  0E02               	movlw	high _BufferRF
 37611  00503E  22DA               	addwfc	fsr2h,f,c
 37612  005040  0E80               	movlw	128
 37613  005042  26DF               	addwf	indf2,f,c
 37614  005044                     i2l15003:
 37615                           
 37616                           ; BSR set to: 0
 37617                           ;inputs_MC50.c: 81:                 RFcount = 0;
 37618  005044  0E00               	movlw	0
 37619  005046  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37620  005048  0E00               	movlw	0
 37621  00504A  6F7E               	movwf	_RFcount& (0+255),b
 37622                           
 37623                           ; BSR set to: 0
 37624                           ;inputs_MC50.c: 83:                 if ((++BitCount & 7) == 0)
 37625  00504C  2B8C               	incf	_BitCount& (0+255),f,b
 37626  00504E  C08C  F001         	movff	_BitCount,??_rxi
 37627  005052  0E07               	movlw	7
 37628  005054  1601               	andwf	??_rxi^0,f,c
 37629  005056  B4D8               	btfsc	status,2,c
 37630                           
 37631                           ; BSR set to: 0
 37632                           ;inputs_MC50.c: 84:                     Bptr++;
 37633  005058  2B8D               	incf	_Bptr& (0+255),f,b
 37634                           
 37635                           ; BSR set to: 0
 37636                           ;inputs_MC50.c: 85:                 if (BitCount == 65) {
 37637  00505A  0E41               	movlw	65
 37638  00505C  198C               	xorwf	_BitCount& (0+255),w,b
 37639  00505E  A4D8               	btfss	status,2,c
 37640  005060  0012               	return	
 37641                           
 37642                           ; BSR set to: 0
 37643                           ;inputs_MC50.c: 86:                     RFstate = 0;
 37644  005062  0E00               	movlw	0
 37645  005064  0101               	movlb	1	; () banked
 37646  005066  6F9C               	movwf	_RFstate& (0+255),b
 37647                           
 37648                           ;inputs_MC50.c: 87:                     RFFull = 1;
 37649  005068  0E01               	movlw	1
 37650  00506A  0100               	movlb	0	; () banked
 37651  00506C  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 37652  00506E  0012               	return	
 37653  005070                     i2l15013:
 37654                           
 37655                           ; BSR set to: 0
 37656                           ;inputs_MC50.c: 92:                 RFcount++;
 37657  005070  4B7E               	infsnz	_RFcount& (0+255),f,b
 37658  005072  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 37659                           
 37660                           ; BSR set to: 0
 37661                           ;inputs_MC50.c: 93:                 if (RFcount >= 10)
 37662  005074  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37663  005076  0012               	return	
 37664  005078  517F               	movf	(_RFcount+1)& (0+255),w,b
 37665  00507A  E104               	bnz	i2u1495_40
 37666  00507C  0E0A               	movlw	10
 37667  00507E  5D7E               	subwf	_RFcount& (0+255),w,b
 37668  005080  A0D8               	btfss	status,0,c
 37669  005082  0012               	return	
 37670  005084                     i2u1495_40:
 37671                           
 37672                           ; BSR set to: 0
 37673                           ;inputs_MC50.c: 94:                 {;inputs_MC50.c: 96:                     RFstate = 1
      +                          ;
 37674  005084  0E01               	movlw	1
 37675  005086  0101               	movlb	1	; () banked
 37676  005088  6F9C               	movwf	_RFstate& (0+255),b
 37677                           
 37678                           ;inputs_MC50.c: 97:                     Bptr = 0;
 37679  00508A  0E00               	movlw	0
 37680  00508C  0100               	movlb	0	; () banked
 37681  00508E  6F8D               	movwf	_Bptr& (0+255),b
 37682                           
 37683                           ;inputs_MC50.c: 98:                     BitCount = 0;
 37684  005090  0E00               	movlw	0
 37685  005092  6F8C               	movwf	_BitCount& (0+255),b
 37686  005094  0012               	return	
 37687  005096                     i2l15019:
 37688                           
 37689                           ; BSR set to: 1
 37690                           ;inputs_MC50.c: 103:             if (RFBit) {
 37691  005096  0100               	movlb	0	; () banked
 37692  005098  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37693  00509A  B4D8               	btfsc	status,2,c
 37694  00509C  D030               	goto	i2l15035
 37695                           
 37696                           ; BSR set to: 0
 37697                           ;inputs_MC50.c: 106:                 if ((RFcount < 20) || (RFcount >= 45)) {
 37698  00509E  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37699  0050A0  D00E               	goto	i2u1498_40
 37700  0050A2  517F               	movf	(_RFcount+1)& (0+255),w,b
 37701  0050A4  E104               	bnz	i2u1497_40
 37702  0050A6  0E14               	movlw	20
 37703  0050A8  5D7E               	subwf	_RFcount& (0+255),w,b
 37704  0050AA  A0D8               	btfss	status,0,c
 37705  0050AC  D008               	goto	i2u1498_40
 37706  0050AE                     i2u1497_40:
 37707                           
 37708                           ; BSR set to: 0
 37709  0050AE  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37710  0050B0  D01E               	goto	i2l15033
 37711  0050B2  517F               	movf	(_RFcount+1)& (0+255),w,b
 37712  0050B4  E104               	bnz	i2u1498_40
 37713  0050B6  0E2D               	movlw	45
 37714  0050B8  5D7E               	subwf	_RFcount& (0+255),w,b
 37715  0050BA  A0D8               	btfss	status,0,c
 37716  0050BC  D018               	goto	i2l15033
 37717  0050BE                     i2u1498_40:
 37718                           
 37719                           ; BSR set to: 0
 37720                           ;inputs_MC50.c: 107:                     if((RFcount < 80) || RFcount>=100)
 37721  0050BE  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37722  0050C0  D7A3               	goto	i2u1490_40
 37723  0050C2  517F               	movf	(_RFcount+1)& (0+255),w,b
 37724  0050C4  E104               	bnz	i2u1499_40
 37725  0050C6  0E50               	movlw	80
 37726  0050C8  5D7E               	subwf	_RFcount& (0+255),w,b
 37727  0050CA  A0D8               	btfss	status,0,c
 37728  0050CC  D79D               	goto	i2u1490_40
 37729  0050CE                     i2u1499_40:
 37730                           
 37731                           ; BSR set to: 0
 37732  0050CE  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37733  0050D0  D006               	goto	i2l15031
 37734  0050D2  517F               	movf	(_RFcount+1)& (0+255),w,b
 37735  0050D4  E199               	bnz	i2l14991
 37736  0050D6  0E64               	movlw	100
 37737  0050D8  5D7E               	subwf	_RFcount& (0+255),w,b
 37738  0050DA  B0D8               	btfsc	status,0,c
 37739  0050DC  D795               	goto	i2u1490_40
 37740  0050DE                     i2l15031:
 37741                           
 37742                           ; BSR set to: 0
 37743                           ;inputs_MC50.c: 112:                     {;inputs_MC50.c: 113:                         R
      +                          Fcount = -10;
 37744  0050DE  0EFF               	movlw	255
 37745  0050E0  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37746  0050E2  0EF6               	movlw	246
 37747  0050E4  6F7E               	movwf	_RFcount& (0+255),b
 37748                           
 37749                           ;inputs_MC50.c: 114:                         RFstate = 4;
 37750  0050E6  0E04               	movlw	4
 37751  0050E8  0101               	movlb	1	; () banked
 37752  0050EA  6F9C               	movwf	_RFstate& (0+255),b
 37753  0050EC  0012               	return	
 37754  0050EE                     i2l15033:
 37755                           
 37756                           ; BSR set to: 0
 37757                           ;inputs_MC50.c: 118:                     RFcount = 0;
 37758  0050EE  0E00               	movlw	0
 37759  0050F0  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37760  0050F2  0E00               	movlw	0
 37761  0050F4  6F7E               	movwf	_RFcount& (0+255),b
 37762                           
 37763                           ;inputs_MC50.c: 119:                     RFstate = 2;
 37764  0050F6  0E02               	movlw	2
 37765  0050F8  0101               	movlb	1	; () banked
 37766  0050FA  6F9C               	movwf	_RFstate& (0+255),b
 37767  0050FC  0012               	return	
 37768  0050FE                     i2l15035:
 37769                           
 37770                           ; BSR set to: 0
 37771                           ;inputs_MC50.c: 122:                 RFcount++;
 37772  0050FE  4B7E               	infsnz	_RFcount& (0+255),f,b
 37773  005100  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 37774  005102  0012               	return	
 37775  005104                     i2l15037:
 37776                           
 37777                           ; BSR set to: 1
 37778                           ;inputs_MC50.c: 127:             if (RFBit == 0) {
 37779  005104  0100               	movlb	0	; () banked
 37780  005106  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37781  005108  A4D8               	btfss	status,2,c
 37782  00510A  D056               	goto	i2l15073
 37783                           
 37784                           ; BSR set to: 0
 37785                           ;inputs_MC50.c: 130:                 RFstate = 5;
 37786  00510C  0E05               	movlw	5
 37787  00510E  0101               	movlb	1	; () banked
 37788  005110  6F9C               	movwf	_RFstate& (0+255),b
 37789                           
 37790                           ; BSR set to: 1
 37791                           ;inputs_MC50.c: 131:                 BufferRF[Bptr] >>= 1;
 37792  005112  0EC8               	movlw	low _BufferRF
 37793  005114  0100               	movlb	0	; () banked
 37794  005116  258D               	addwf	_Bptr& (0+255),w,b
 37795  005118  6ED9               	movwf	fsr2l,c
 37796  00511A  6ADA               	clrf	fsr2h,c
 37797  00511C  0E02               	movlw	high _BufferRF
 37798  00511E  22DA               	addwfc	fsr2h,f,c
 37799  005120  90D8               	bcf	status,0,c
 37800  005122  32DF               	rrcf	indf2,f,c
 37801                           
 37802                           ; BSR set to: 0
 37803                           ;inputs_MC50.c: 132:                 if (RFcount >= 0) {
 37804  005124  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37805  005126  D008               	goto	i2l15047
 37806                           
 37807                           ; BSR set to: 0
 37808                           ;inputs_MC50.c: 133:                     BufferRF[Bptr] += 0x80;
 37809  005128  0EC8               	movlw	low _BufferRF
 37810  00512A  258D               	addwf	_Bptr& (0+255),w,b
 37811  00512C  6ED9               	movwf	fsr2l,c
 37812  00512E  6ADA               	clrf	fsr2h,c
 37813  005130  0E02               	movlw	high _BufferRF
 37814  005132  22DA               	addwfc	fsr2h,f,c
 37815  005134  0E80               	movlw	128
 37816  005136  26DF               	addwf	indf2,f,c
 37817  005138                     i2l15047:
 37818                           
 37819                           ; BSR set to: 0
 37820                           ;inputs_MC50.c: 136:                 RFcount = 0;
 37821  005138  0E00               	movlw	0
 37822  00513A  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37823  00513C  0E00               	movlw	0
 37824  00513E  6F7E               	movwf	_RFcount& (0+255),b
 37825                           
 37826                           ; BSR set to: 0
 37827                           ;inputs_MC50.c: 138:                 if ((++BitCount & 7) == 0)
 37828  005140  2B8C               	incf	_BitCount& (0+255),f,b
 37829  005142  C08C  F001         	movff	_BitCount,??_rxi
 37830  005146  0E07               	movlw	7
 37831  005148  1601               	andwf	??_rxi^0,f,c
 37832  00514A  A4D8               	btfss	status,2,c
 37833  00514C  D009               	goto	i2l15055
 37834                           
 37835                           ; BSR set to: 0
 37836                           ;inputs_MC50.c: 139:                 {;inputs_MC50.c: 140:                     Bptr++;
 37837  00514E  2B8D               	incf	_Bptr& (0+255),f,b
 37838                           
 37839                           ; BSR set to: 0
 37840                           ;inputs_MC50.c: 141:                     BufferRF[Bptr]=0;
 37841  005150  0EC8               	movlw	low _BufferRF
 37842  005152  258D               	addwf	_Bptr& (0+255),w,b
 37843  005154  6ED9               	movwf	fsr2l,c
 37844  005156  6ADA               	clrf	fsr2h,c
 37845  005158  0E02               	movlw	high _BufferRF
 37846  00515A  22DA               	addwfc	fsr2h,f,c
 37847  00515C  0E00               	movlw	0
 37848  00515E  6EDF               	movwf	indf2,c
 37849  005160                     i2l15055:
 37850                           
 37851                           ; BSR set to: 0
 37852                           ;inputs_MC50.c: 143:                 if (BitCount == 13) {
 37853  005160  0E0D               	movlw	13
 37854  005162  198C               	xorwf	_BitCount& (0+255),w,b
 37855  005164  A4D8               	btfss	status,2,c
 37856  005166  0012               	return	
 37857                           
 37858                           ; BSR set to: 0
 37859                           ;inputs_MC50.c: 144:                     RFstate = 0;
 37860  005168  0E00               	movlw	0
 37861  00516A  0101               	movlb	1	; () banked
 37862  00516C  6F9C               	movwf	_RFstate& (0+255),b
 37863                           
 37864                           ; BSR set to: 1
 37865                           ;inputs_MC50.c: 145:                     if(RFFull_12BIT==1)
 37866  00516E  0100               	movlb	0	; () banked
 37867  005170  058A               	decf	_RFFull_12BIT& (0+255),w,b	;volatile
 37868  005172  A4D8               	btfss	status,2,c
 37869  005174  D01A               	goto	i2l15067
 37870                           
 37871                           ; BSR set to: 0
 37872                           ;inputs_MC50.c: 146:                     {;inputs_MC50.c: 147:                         i
      +                          f(BufferRF_12BIT[0]==BufferRF[0] && BufferRF_12BIT[1]==BufferRF[1])
 37873  005176  0102               	movlb	2	; () banked
 37874  005178  51C8               	movf	_BufferRF& (0+255),w,b
 37875  00517A  0101               	movlb	1	; () banked
 37876  00517C  1989               	xorwf	_BufferRF_12BIT& (0+255),w,b
 37877  00517E  A4D8               	btfss	status,2,c
 37878  005180  D00F               	goto	i2l1620
 37879                           
 37880                           ; BSR set to: 1
 37881  005182  0102               	movlb	2	; () banked
 37882  005184  51C9               	movf	(_BufferRF+1)& (0+255),w,b
 37883  005186  0101               	movlb	1	; () banked
 37884  005188  198A               	xorwf	(_BufferRF_12BIT+1)& (0+255),w,b
 37885  00518A  A4D8               	btfss	status,2,c
 37886  00518C  D009               	goto	i2l1620
 37887                           
 37888                           ; BSR set to: 1
 37889                           ;inputs_MC50.c: 148:                         {;inputs_MC50.c: 149:                      
      +                                 RFFull = 1;
 37890  00518E  0E01               	movlw	1
 37891  005190  0100               	movlb	0	; () banked
 37892  005192  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 37893                           
 37894                           ;inputs_MC50.c: 150:                             BufferRF[2]=0;
 37895  005194  0E00               	movlw	0
 37896  005196  0102               	movlb	2	; () banked
 37897  005198  6FCA               	movwf	(_BufferRF+2)& (0+255),b
 37898                           
 37899                           ;inputs_MC50.c: 151:                             BufferRF[3]=0;
 37900  00519A  0E00               	movlw	0
 37901  00519C  6FCB               	movwf	(_BufferRF+3)& (0+255),b
 37902                           
 37903                           ;inputs_MC50.c: 152:                         }
 37904  00519E  0012               	return	
 37905  0051A0                     i2l1620:
 37906                           
 37907                           ; BSR set to: 1
 37908                           ;inputs_MC50.c: 154:                         {;inputs_MC50.c: 155:                      
      +                                 BufferRF_12BIT[0]=BufferRF[0];
 37909  0051A0  C2C8  F189         	movff	_BufferRF,_BufferRF_12BIT
 37910                           
 37911                           ;inputs_MC50.c: 156:                             BufferRF_12BIT[1]=BufferRF[1];
 37912  0051A4  C2C9  F18A         	movff	_BufferRF+1,_BufferRF_12BIT+1
 37913  0051A8  0012               	return	
 37914  0051AA                     i2l15067:
 37915                           
 37916                           ; BSR set to: 0
 37917                           ;inputs_MC50.c: 161:                     {;inputs_MC50.c: 162:                         R
      +                          FFull_12BIT=1;
 37918  0051AA  0E01               	movlw	1
 37919  0051AC  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
 37920                           
 37921                           ; BSR set to: 0
 37922                           ;inputs_MC50.c: 163:                         BufferRF_12BIT[0]=BufferRF[0];
 37923  0051AE  C2C8  F189         	movff	_BufferRF,_BufferRF_12BIT
 37924                           
 37925                           ; BSR set to: 0
 37926                           ;inputs_MC50.c: 164:                         BufferRF_12BIT[1]=BufferRF[1];
 37927  0051B2  C2C9  F18A         	movff	_BufferRF+1,_BufferRF_12BIT+1
 37928  0051B6  0012               	return	
 37929  0051B8                     i2l15073:
 37930                           
 37931                           ; BSR set to: 0
 37932                           ;inputs_MC50.c: 168:                 RFcount++;
 37933  0051B8  4B7E               	infsnz	_RFcount& (0+255),f,b
 37934  0051BA  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 37935                           
 37936                           ; BSR set to: 0
 37937                           ;inputs_MC50.c: 169:                 if (RFcount >= 10)
 37938  0051BC  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37939  0051BE  0012               	return	
 37940  0051C0  517F               	movf	(_RFcount+1)& (0+255),w,b
 37941  0051C2  E104               	bnz	i2u1508_40
 37942  0051C4  0E0A               	movlw	10
 37943  0051C6  5D7E               	subwf	_RFcount& (0+255),w,b
 37944  0051C8  A0D8               	btfss	status,0,c
 37945  0051CA  0012               	return	
 37946  0051CC                     i2u1508_40:
 37947  0051CC  D71D               	goto	i2u1490_40
 37948  0051CE                     i2l15079:
 37949                           
 37950                           ; BSR set to: 1
 37951                           ;inputs_MC50.c: 177:             if (RFBit) {
 37952  0051CE  0100               	movlb	0	; () banked
 37953  0051D0  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37954  0051D2  B4D8               	btfsc	status,2,c
 37955  0051D4  D004               	goto	i2l15083
 37956                           
 37957                           ; BSR set to: 0
 37958                           ;inputs_MC50.c: 181:                 RFstate = 4;
 37959  0051D6  0E04               	movlw	4
 37960  0051D8  0101               	movlb	1	; () banked
 37961  0051DA  6F9C               	movwf	_RFstate& (0+255),b
 37962                           
 37963                           ;inputs_MC50.c: 183:             } else {
 37964  0051DC  0012               	return	
 37965  0051DE                     i2l15083:
 37966                           
 37967                           ; BSR set to: 0
 37968                           ;inputs_MC50.c: 184:                 RFcount--;
 37969  0051DE  077E               	decf	_RFcount& (0+255),f,b
 37970  0051E0  A0D8               	btfss	status,0,c
 37971  0051E2  077F               	decf	(_RFcount+1)& (0+255),f,b
 37972                           
 37973                           ; BSR set to: 0
 37974                           ;inputs_MC50.c: 185:                 if (RFcount < -10)
 37975  0051E4  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 37976  0051E6  0012               	return	
 37977  0051E8  0EF6               	movlw	246
 37978  0051EA  5D7E               	subwf	_RFcount& (0+255),w,b
 37979  0051EC  0EFF               	movlw	255
 37980  0051EE  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 37981  0051F0  B0D8               	btfsc	status,0,c
 37982  0051F2  0012               	return	
 37983  0051F4  D747               	goto	i2u1495_40
 37984  0051F6                     i2l15089:
 37985                           
 37986                           ; BSR set to: 1
 37987                           ;inputs_MC50.c: 197:             RFstate = 1;
 37988  0051F6  0E01               	movlw	1
 37989  0051F8  6F9C               	movwf	_RFstate& (0+255),b
 37990                           
 37991                           ;inputs_MC50.c: 198:             RFcount = 0;
 37992  0051FA  0E00               	movlw	0
 37993  0051FC  0100               	movlb	0	; () banked
 37994  0051FE  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37995  005200  0E00               	movlw	0
 37996  005202  6F7E               	movwf	_RFcount& (0+255),b
 37997                           
 37998                           ;inputs_MC50.c: 199:             Bptr = 0;
 37999  005204  0E00               	movlw	0
 38000  005206  6F8D               	movwf	_Bptr& (0+255),b
 38001                           
 38002                           ;inputs_MC50.c: 200:             BitCount = 0;
 38003  005208  0E00               	movlw	0
 38004  00520A  6F8C               	movwf	_BitCount& (0+255),b
 38005                           
 38006                           ;inputs_MC50.c: 201:             break;
 38007  00520C  0012               	return	
 38008  00520E                     i2l15093:
 38009                           
 38010                           ; BSR set to: 0
 38011  00520E  0101               	movlb	1	; () banked
 38012  005210  519C               	movf	_RFstate& (0+255),w,b
 38013  005212  6E01               	movwf	??_rxi^0,c
 38014  005214  6A02               	clrf	(??_rxi+1)^0,c
 38015                           
 38016                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 38017                           ; Switch size 1, requested type "simple"
 38018                           ; Number of cases is 1, Range of values is 0 to 0
 38019                           ; switch strategies available:
 38020                           ; Name         Instructions Cycles
 38021                           ; simple_byte            4     3 (average)
 38022                           ;	Chosen strategy is simple_byte
 38023  005216  5002               	movf	(??_rxi+1)^0,w,c
 38024  005218  0A00               	xorlw	0	; case 0
 38025  00521A  A4D8               	btfss	status,2,c
 38026  00521C  D7EC               	goto	i2l15089
 38027                           
 38028                           ; BSR set to: 1
 38029                           ; Switch size 1, requested type "simple"
 38030                           ; Number of cases is 6, Range of values is 0 to 5
 38031                           ; switch strategies available:
 38032                           ; Name         Instructions Cycles
 38033                           ; simple_byte           19    10 (average)
 38034                           ;	Chosen strategy is simple_byte
 38035  00521E  5001               	movf	??_rxi^0,w,c
 38036  005220  0A00               	xorlw	0	; case 0
 38037  005222  B4D8               	btfsc	status,2,c
 38038  005224  D7E8               	goto	i2l15089
 38039  005226  0A01               	xorlw	1	; case 1
 38040  005228  B4D8               	btfsc	status,2,c
 38041  00522A  D735               	goto	i2l15019
 38042  00522C  0A03               	xorlw	3	; case 2
 38043  00522E  B4D8               	btfsc	status,2,c
 38044  005230  D6D8               	goto	i2l14983
 38045  005232  0A01               	xorlw	1	; case 3
 38046  005234  B4D8               	btfsc	status,2,c
 38047  005236  D6EC               	goto	i2l14993
 38048  005238  0A07               	xorlw	7	; case 4
 38049  00523A  B4D8               	btfsc	status,2,c
 38050  00523C  D763               	goto	i2l15037
 38051  00523E  0A01               	xorlw	1	; case 5
 38052  005240  B4D8               	btfsc	status,2,c
 38053  005242  D7C5               	goto	i2l15079
 38054  005244  D7D8               	goto	i2l15089
 38055  005246                     __end_of_rxi:
 38056                           	callstack 0
 38057                           
 38058 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 38059 ;; Defined at:
 38060 ;;		line 147 in file "mcc_generated_files/tmr0.c"
 38061 ;; Parameters:    Size  Location     Type
 38062 ;;		None
 38063 ;; Auto vars:     Size  Location     Type
 38064 ;;		None
 38065 ;; Return value:  Size  Location     Type
 38066 ;;                  1    wreg      void 
 38067 ;; Registers used:
 38068 ;;		None
 38069 ;; Tracked objects:
 38070 ;;		On entry : 3F/2
 38071 ;;		On exit  : 3F/2
 38072 ;;		Unchanged: 3F/0
 38073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38078 ;;Total ram usage:        0 bytes
 38079 ;; Hardware stack levels used: 1
 38080 ;; This function calls:
 38081 ;;		Nothing
 38082 ;; This function is called by:
 38083 ;;		_TMR0_Initialize
 38084 ;;		_TMR0_ISR
 38085 ;; This function uses a non-reentrant model
 38086 ;;
 38087                           
 38088                           	psect	text204
 38089  00A0B8                     __ptext204:
 38090                           	callstack 0
 38091  00A0B8                     _TMR0_DefaultInterruptHandler:
 38092                           	callstack 15
 38093                           
 38094                           ; BSR set to: 2
 38095                           
 38096                           ;incstack = 0
 38097  00A0B8  0012               	return		;funcret
 38098  00A0BA                     __end_of_TMR0_DefaultInterruptHandler:
 38099                           	callstack 0
 38100                           
 38101 ;; *************** function _EUSART1_Transmit_ISR *****************
 38102 ;; Defined at:
 38103 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 38104 ;; Parameters:    Size  Location     Type
 38105 ;;		None
 38106 ;; Auto vars:     Size  Location     Type
 38107 ;;		None
 38108 ;; Return value:  Size  Location     Type
 38109 ;;                  1    wreg      void 
 38110 ;; Registers used:
 38111 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38112 ;; Tracked objects:
 38113 ;;		On entry : 3F/2
 38114 ;;		On exit  : 30/0
 38115 ;;		Unchanged: 0/0
 38116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38121 ;;Total ram usage:        0 bytes
 38122 ;; Hardware stack levels used: 1
 38123 ;; This function calls:
 38124 ;;		Nothing
 38125 ;; This function is called by:
 38126 ;;		_EUSART1_Initialize
 38127 ;;		_INTERRUPT_InterruptManager
 38128 ;; This function uses a non-reentrant model
 38129 ;;
 38130                           
 38131                           	psect	text205
 38132  0098A4                     __ptext205:
 38133                           	callstack 0
 38134  0098A4                     _EUSART1_Transmit_ISR:
 38135                           	callstack 16
 38136                           
 38137                           ; BSR set to: 2
 38138                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 38139                           
 38140                           ; BSR set to: 2
 38141                           ;incstack = 0
 38142  0098A4  0E08               	movlw	8
 38143  0098A6  0101               	movlb	1	; () banked
 38144  0098A8  61FD               	cpfslt	_eusart1TxBufferRemaining& (0+255),b
 38145  0098AA  D012               	goto	i2l106
 38146                           
 38147                           ; BSR set to: 1
 38148                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 38149  0098AC  0E84               	movlw	low _eusart1TxBuffer
 38150  0098AE  0100               	movlb	0	; () banked
 38151  0098B0  2596               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 38152  0098B2  6ED9               	movwf	fsr2l,c
 38153  0098B4  6ADA               	clrf	fsr2h,c
 38154  0098B6  0E02               	movlw	high _eusart1TxBuffer
 38155  0098B8  22DA               	addwfc	fsr2h,f,c
 38156  0098BA  50DF               	movf	indf2,w,c
 38157  0098BC  6E9A               	movwf	154,c	;volatile
 38158                           
 38159                           ; BSR set to: 0
 38160  0098BE  2B96               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 38161                           
 38162                           ; BSR set to: 0
 38163                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 38164  0098C0  0E07               	movlw	7
 38165  0098C2  6596               	cpfsgt	_eusart1TxTail& (0+255),b
 38166  0098C4  D002               	goto	i2l16987
 38167                           
 38168                           ; BSR set to: 0
 38169                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 38170  0098C6  0E00               	movlw	0
 38171  0098C8  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 38172  0098CA                     i2l16987:
 38173                           
 38174                           ; BSR set to: 0
 38175                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 38176  0098CA  0101               	movlb	1	; () banked
 38177  0098CC  2BFD               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 38178                           
 38179                           ;mcc_generated_files/eusart1.c: 209:     }
 38180  0098CE  0012               	return	
 38181  0098D0                     i2l106:
 38182                           
 38183                           ; BSR set to: 1
 38184                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 38185  0098D0  010E               	movlb	14	; () banked
 38186  0098D2  99C5               	bcf	197,4,b	;volatile
 38187  0098D4  0012               	return		;funcret
 38188  0098D6                     __end_of_EUSART1_Transmit_ISR:
 38189                           	callstack 0
 38190                           
 38191 ;; *************** function _EUSART1_Receive_ISR *****************
 38192 ;; Defined at:
 38193 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 38194 ;; Parameters:    Size  Location     Type
 38195 ;;		None
 38196 ;; Auto vars:     Size  Location     Type
 38197 ;;		None
 38198 ;; Return value:  Size  Location     Type
 38199 ;;                  1    wreg      void 
 38200 ;; Registers used:
 38201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 38202 ;; Tracked objects:
 38203 ;;		On entry : 3F/2
 38204 ;;		On exit  : 0/0
 38205 ;;		Unchanged: 0/0
 38206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38211 ;;Total ram usage:        0 bytes
 38212 ;; Hardware stack levels used: 1
 38213 ;; Hardware stack levels required when called: 2
 38214 ;; This function calls:
 38215 ;;		Absolute function
 38216 ;;		_EUSART1_DefaultErrorHandler
 38217 ;;		_EUSART1_DefaultFramingErrorHandler
 38218 ;;		_EUSART1_DefaultOverrunErrorHandler
 38219 ;;		_EUSART1_RxDataHandler
 38220 ;; This function is called by:
 38221 ;;		_EUSART1_Initialize
 38222 ;;		_INTERRUPT_InterruptManager
 38223 ;; This function uses a non-reentrant model
 38224 ;;
 38225                           
 38226                           	psect	text206
 38227  0080BE                     __ptext206:
 38228                           	callstack 0
 38229  0080BE                     _EUSART1_Receive_ISR:
 38230                           	callstack 14
 38231                           
 38232                           ; BSR set to: 2
 38233                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 38234                           
 38235                           ;incstack = 0
 38236  0080BE  0E74               	movlw	low _eusart1RxStatusBuffer
 38237  0080C0  0100               	movlb	0	; () banked
 38238  0080C2  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 38239  0080C4  6ED9               	movwf	fsr2l,c
 38240  0080C6  6ADA               	clrf	fsr2h,c
 38241  0080C8  0E02               	movlw	high _eusart1RxStatusBuffer
 38242  0080CA  22DA               	addwfc	fsr2h,f,c
 38243  0080CC  0E00               	movlw	0
 38244  0080CE  6EDF               	movwf	indf2,c
 38245                           
 38246                           ; BSR set to: 0
 38247                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 38248  0080D0  A49D               	btfss	157,2,c	;volatile
 38249  0080D2  D013               	goto	i2u1912_49
 38250                           
 38251                           ; BSR set to: 0
 38252                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 38253  0080D4  0E74               	movlw	low _eusart1RxStatusBuffer
 38254  0080D6  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 38255  0080D8  6ED9               	movwf	fsr2l,c
 38256  0080DA  6ADA               	clrf	fsr2h,c
 38257  0080DC  0E02               	movlw	high _eusart1RxStatusBuffer
 38258  0080DE  22DA               	addwfc	fsr2h,f,c
 38259  0080E0  0102               	movlb	2	; () banked
 38260  0080E2  82DF               	bsf	indf2,1,c
 38261                           
 38262                           ; BSR set to: 2
 38263                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 38264  0080E4  D801               	call	i2u1912_48
 38265  0080E6  D009               	goto	i2u1912_49
 38266  0080E8                     i2u1912_48:
 38267  0080E8  0005               	push	
 38268  0080EA  6EFA               	movwf	pclath,c
 38269  0080EC  51E9               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 38270  0080EE  6EFD               	movwf	tosl,c
 38271  0080F0  51EA               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 38272  0080F2  6EFE               	movwf	tosh,c
 38273  0080F4  6AFF               	clrf	tosu,c
 38274  0080F6  50FA               	movf	pclath,w,c
 38275  0080F8  0012               	return		;indir
 38276  0080FA                     i2u1912_49:
 38277                           
 38278                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 38279  0080FA  A29D               	btfss	157,1,c	;volatile
 38280  0080FC  D014               	goto	i2u1914_49
 38281                           
 38282                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 38283  0080FE  0E74               	movlw	low _eusart1RxStatusBuffer
 38284  008100  0100               	movlb	0	; () banked
 38285  008102  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 38286  008104  6ED9               	movwf	fsr2l,c
 38287  008106  6ADA               	clrf	fsr2h,c
 38288  008108  0E02               	movlw	high _eusart1RxStatusBuffer
 38289  00810A  22DA               	addwfc	fsr2h,f,c
 38290  00810C  0102               	movlb	2	; () banked
 38291  00810E  84DF               	bsf	indf2,2,c
 38292                           
 38293                           ; BSR set to: 2
 38294                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 38295  008110  D801               	call	i2u1914_48
 38296  008112  D009               	goto	i2u1914_49
 38297  008114                     i2u1914_48:
 38298  008114  0005               	push	
 38299  008116  6EFA               	movwf	pclath,c
 38300  008118  51E7               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 38301  00811A  6EFD               	movwf	tosl,c
 38302  00811C  51E8               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 38303  00811E  6EFE               	movwf	tosh,c
 38304  008120  6AFF               	clrf	tosu,c
 38305  008122  50FA               	movf	pclath,w,c
 38306  008124  0012               	return		;indir
 38307  008126                     i2u1914_49:
 38308                           
 38309                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 38310  008126  0E74               	movlw	low _eusart1RxStatusBuffer
 38311  008128  0100               	movlb	0	; () banked
 38312  00812A  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 38313  00812C  6ED9               	movwf	fsr2l,c
 38314  00812E  6ADA               	clrf	fsr2h,c
 38315  008130  0E02               	movlw	high _eusart1RxStatusBuffer
 38316  008132  22DA               	addwfc	fsr2h,f,c
 38317  008134  50DF               	movf	indf2,w,c
 38318  008136  B4D8               	btfsc	status,2,c
 38319  008138  D00C               	goto	i2l17007
 38320                           
 38321                           ; BSR set to: 0
 38322                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 38323  00813A  D801               	call	i2u1916_48
 38324  00813C  0012               	return	
 38325  00813E                     i2u1916_48:
 38326  00813E  0005               	push	
 38327  008140  6EFA               	movwf	pclath,c
 38328  008142  0102               	movlb	2	; () banked
 38329  008144  51E5               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 38330  008146  6EFD               	movwf	tosl,c
 38331  008148  51E6               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 38332  00814A  6EFE               	movwf	tosh,c
 38333  00814C  6AFF               	clrf	tosu,c
 38334  00814E  50FA               	movf	pclath,w,c
 38335  008150  0012               	return		;indir
 38336  008152                     i2l17007:
 38337                           
 38338                           ; BSR set to: 0
 38339                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 38340  008152  EC84  F04E         	call	_EUSART1_RxDataHandler	;wreg free
 38341  008156  0012               	return		;funcret
 38342  008158                     __end_of_EUSART1_Receive_ISR:
 38343                           	callstack 0
 38344                           
 38345 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 38346 ;; Defined at:
 38347 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 38348 ;; Parameters:    Size  Location     Type
 38349 ;;		None
 38350 ;; Auto vars:     Size  Location     Type
 38351 ;;		None
 38352 ;; Return value:  Size  Location     Type
 38353 ;;                  1    wreg      void 
 38354 ;; Registers used:
 38355 ;;		None
 38356 ;; Tracked objects:
 38357 ;;		On entry : 3F/2
 38358 ;;		On exit  : 3F/2
 38359 ;;		Unchanged: 3F/0
 38360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38365 ;;Total ram usage:        0 bytes
 38366 ;; Hardware stack levels used: 1
 38367 ;; This function calls:
 38368 ;;		Nothing
 38369 ;; This function is called by:
 38370 ;;		_EUSART1_Initialize
 38371 ;;		_EUSART1_Receive_ISR
 38372 ;; This function uses a non-reentrant model
 38373 ;;
 38374                           
 38375                           	psect	text207
 38376  00A07A                     __ptext207:
 38377                           	callstack 0
 38378  00A07A                     _EUSART1_DefaultOverrunErrorHandler:
 38379                           	callstack 15
 38380                           
 38381                           ; BSR set to: 2
 38382                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 38383                           
 38384                           ;incstack = 0
 38385  00A07A  989D               	bcf	157,4,c	;volatile
 38386                           
 38387                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 38388  00A07C  889D               	bsf	157,4,c	;volatile
 38389                           
 38390                           ; BSR set to: 2
 38391  00A07E  0012               	return		;funcret
 38392  00A080                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 38393                           	callstack 0
 38394                           
 38395 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 38396 ;; Defined at:
 38397 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 38398 ;; Parameters:    Size  Location     Type
 38399 ;;		None
 38400 ;; Auto vars:     Size  Location     Type
 38401 ;;		None
 38402 ;; Return value:  Size  Location     Type
 38403 ;;                  1    wreg      void 
 38404 ;; Registers used:
 38405 ;;		None
 38406 ;; Tracked objects:
 38407 ;;		On entry : 3F/2
 38408 ;;		On exit  : 3F/2
 38409 ;;		Unchanged: 3F/0
 38410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38415 ;;Total ram usage:        0 bytes
 38416 ;; Hardware stack levels used: 1
 38417 ;; This function calls:
 38418 ;;		Nothing
 38419 ;; This function is called by:
 38420 ;;		_EUSART1_Initialize
 38421 ;;		_EUSART1_Receive_ISR
 38422 ;; This function uses a non-reentrant model
 38423 ;;
 38424                           
 38425                           	psect	text208
 38426  00A0BA                     __ptext208:
 38427                           	callstack 0
 38428  00A0BA                     _EUSART1_DefaultFramingErrorHandler:
 38429                           	callstack 15
 38430                           
 38431                           ; BSR set to: 2
 38432                           
 38433                           ; BSR set to: 2
 38434                           ;incstack = 0
 38435  00A0BA  0012               	return		;funcret
 38436  00A0BC                     __end_of_EUSART1_DefaultFramingErrorHandler:
 38437                           	callstack 0
 38438                           
 38439 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 38440 ;; Defined at:
 38441 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 38442 ;; Parameters:    Size  Location     Type
 38443 ;;		None
 38444 ;; Auto vars:     Size  Location     Type
 38445 ;;		None
 38446 ;; Return value:  Size  Location     Type
 38447 ;;                  1    wreg      void 
 38448 ;; Registers used:
 38449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38450 ;; Tracked objects:
 38451 ;;		On entry : 3F/2
 38452 ;;		On exit  : 3F/0
 38453 ;;		Unchanged: 0/0
 38454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38459 ;;Total ram usage:        0 bytes
 38460 ;; Hardware stack levels used: 1
 38461 ;; Hardware stack levels required when called: 1
 38462 ;; This function calls:
 38463 ;;		_EUSART1_RxDataHandler
 38464 ;; This function is called by:
 38465 ;;		_EUSART1_Initialize
 38466 ;;		_EUSART1_Receive_ISR
 38467 ;; This function uses a non-reentrant model
 38468 ;;
 38469                           
 38470                           	psect	text209
 38471  00A080                     __ptext209:
 38472                           	callstack 0
 38473  00A080                     _EUSART1_DefaultErrorHandler:
 38474                           	callstack 14
 38475                           
 38476                           ; BSR set to: 2
 38477                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 38478                           
 38479                           ; BSR set to: 2
 38480                           ;incstack = 0
 38481  00A080  EC84  F04E         	call	_EUSART1_RxDataHandler	;wreg free
 38482                           
 38483                           ; BSR set to: 0
 38484  00A084  0012               	return		;funcret
 38485  00A086                     __end_of_EUSART1_DefaultErrorHandler:
 38486                           	callstack 0
 38487                           
 38488 ;; *************** function _EUSART1_RxDataHandler *****************
 38489 ;; Defined at:
 38490 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 38491 ;; Parameters:    Size  Location     Type
 38492 ;;		None
 38493 ;; Auto vars:     Size  Location     Type
 38494 ;;		None
 38495 ;; Return value:  Size  Location     Type
 38496 ;;                  1    wreg      void 
 38497 ;; Registers used:
 38498 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38499 ;; Tracked objects:
 38500 ;;		On entry : 3D/0
 38501 ;;		On exit  : 3F/0
 38502 ;;		Unchanged: 0/0
 38503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38508 ;;Total ram usage:        0 bytes
 38509 ;; Hardware stack levels used: 1
 38510 ;; This function calls:
 38511 ;;		Nothing
 38512 ;; This function is called by:
 38513 ;;		_EUSART1_Receive_ISR
 38514 ;;		_EUSART1_DefaultErrorHandler
 38515 ;; This function uses a non-reentrant model
 38516 ;;
 38517                           
 38518                           	psect	text210
 38519  009D08                     __ptext210:
 38520                           	callstack 0
 38521  009D08                     _EUSART1_RxDataHandler:
 38522                           	callstack 15
 38523                           
 38524                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 38525                           
 38526                           ; BSR set to: 0
 38527                           ;incstack = 0
 38528  009D08  0E7C               	movlw	low _eusart1RxBuffer
 38529  009D0A  0100               	movlb	0	; () banked
 38530  009D0C  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 38531  009D0E  6ED9               	movwf	fsr2l,c
 38532  009D10  6ADA               	clrf	fsr2h,c
 38533  009D12  0E02               	movlw	high _eusart1RxBuffer
 38534  009D14  22DA               	addwfc	fsr2h,f,c
 38535  009D16  CF99 FFDF          	movff	3993,indf2	;volatile
 38536                           
 38537                           ; BSR set to: 0
 38538  009D1A  2B95               	incf	_eusart1RxHead& (0+255),f,b	;volatile
 38539                           
 38540                           ; BSR set to: 0
 38541                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 38542  009D1C  0E07               	movlw	7
 38543  009D1E  6595               	cpfsgt	_eusart1RxHead& (0+255),b
 38544  009D20  D002               	goto	i2l13237
 38545                           
 38546                           ; BSR set to: 0
 38547                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 38548  009D22  0E00               	movlw	0
 38549  009D24  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 38550  009D26                     i2l13237:
 38551                           
 38552                           ; BSR set to: 0
 38553                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 38554  009D26  2B93               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 38555                           
 38556                           ; BSR set to: 0
 38557  009D28  0012               	return		;funcret
 38558  009D2A                     __end_of_EUSART1_RxDataHandler:
 38559                           	callstack 0
 38560                           
 38561                           	psect	text211
 38562  000000                     __ptext211:
 38563                           	callstack 0
 38564                           
 38565                           	psect	rparam
 38566  0000                     
 38567                           	psect	temp
 38568  000050                     btemp:
 38569                           	callstack 0
 38570  000050                     	ds	1
 38571  0000                     int$flags	set	btemp
 38572  0000                     wtemp8	set	btemp+1
 38573  0000                     ttemp5	set	btemp+1
 38574  0000                     ttemp6	set	btemp+4
 38575  0000                     ttemp7	set	btemp+8
 38576                           
 38577                           	psect	idloc
 38578                           
 38579                           ;Config register IDLOC0 @ 0x200000
 38580                           ;	unspecified, using default values
 38581  200000                     	org	2097152
 38582  200000  0FFF               	dw	4095
 38583                           
 38584                           ;Config register IDLOC1 @ 0x200002
 38585                           ;	unspecified, using default values
 38586  200002                     	org	2097154
 38587  200002  0FFF               	dw	4095
 38588                           
 38589                           ;Config register IDLOC2 @ 0x200004
 38590                           ;	unspecified, using default values
 38591  200004                     	org	2097156
 38592  200004  0FFF               	dw	4095
 38593                           
 38594                           ;Config register IDLOC3 @ 0x200006
 38595                           ;	unspecified, using default values
 38596  200006                     	org	2097158
 38597  200006  0FFF               	dw	4095
 38598                           
 38599                           ;Config register IDLOC4 @ 0x200008
 38600                           ;	unspecified, using default values
 38601  200008                     	org	2097160
 38602  200008  0FFF               	dw	4095
 38603                           
 38604                           ;Config register IDLOC5 @ 0x20000A
 38605                           ;	unspecified, using default values
 38606  20000A                     	org	2097162
 38607  20000A  0FFF               	dw	4095
 38608                           
 38609                           ;Config register IDLOC6 @ 0x20000C
 38610                           ;	unspecified, using default values
 38611  20000C                     	org	2097164
 38612  20000C  0FFF               	dw	4095
 38613                           
 38614                           ;Config register IDLOC7 @ 0x20000E
 38615                           ;	unspecified, using default values
 38616  20000E                     	org	2097166
 38617  20000E  0FFF               	dw	4095
 38618                           
 38619                           	psect	config
 38620                           
 38621                           ;Config register CONFIG1L @ 0x300000
 38622                           ;	External Oscillator mode Selection bits
 38623                           ;	FEXTOSC = OFF, Oscillator not enabled
 38624                           ;	Power-up default value for COSC bits
 38625                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 38626  300000                     	org	3145728
 38627  300000  8C                 	db	140
 38628                           
 38629                           ;Config register CONFIG1H @ 0x300001
 38630                           ;	Clock Out Enable bit
 38631                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 38632                           ;	Clock Switch Enable bit
 38633                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 38634                           ;	Fail-Safe Clock Monitor Enable bit
 38635                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 38636  300001                     	org	3145729
 38637  300001  FF                 	db	255
 38638                           
 38639                           ;Config register CONFIG2L @ 0x300002
 38640                           ;	Master Clear Enable bit
 38641                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 38642                           ;	Power-up Timer Enable bit
 38643                           ;	PWRTE = ON, Power up timer enabled
 38644                           ;	Low-power BOR enable bit
 38645                           ;	LPBOREN = OFF, ULPBOR disabled
 38646                           ;	Brown-out Reset Enable bits
 38647                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 38648  300002                     	org	3145730
 38649  300002  FD                 	db	253
 38650                           
 38651                           ;Config register CONFIG2H @ 0x300003
 38652                           ;	Brown Out Reset Voltage selection bits
 38653                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 38654                           ;	ZCD Disable bit
 38655                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 38656                           ;	PPSLOCK bit One-Way Set Enable bit
 38657                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 38658                           ;	Stack Full/Underflow Reset Enable bit
 38659                           ;	STVREN = ON, Stack full/underflow will cause Reset
 38660                           ;	Debugger Enable bit
 38661                           ;	DEBUG = OFF, Background debugger disabled
 38662                           ;	Extended Instruction Set Enable bit
 38663                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 38664  300003                     	org	3145731
 38665  300003  FF                 	db	255
 38666                           
 38667                           ;Config register CONFIG3L @ 0x300004
 38668                           ;	WDT Period Select bits
 38669                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 38670                           ;	WDT operating mode
 38671                           ;	WDTE = SWDTEN, WDT enabled/disabled by SWDTEN bit
 38672  300004                     	org	3145732
 38673  300004  BF                 	db	191
 38674                           
 38675                           ;Config register CONFIG3H @ 0x300005
 38676                           ;	WDT Window Select bits
 38677                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 38678                           ;	WDT input clock selector
 38679                           ;	WDTCCS = SC, Software Control
 38680  300005                     	org	3145733
 38681  300005  FF                 	db	255
 38682                           
 38683                           ;Config register CONFIG4L @ 0x300006
 38684                           ;	Write Protection Block 0
 38685                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 38686                           ;	Write Protection Block 1
 38687                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 38688                           ;	Write Protection Block 2
 38689                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 38690                           ;	Write Protection Block 3
 38691                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 38692  300006                     	org	3145734
 38693  300006  FF                 	db	255
 38694                           
 38695                           ;Config register CONFIG4H @ 0x300007
 38696                           ;	Configuration Register Write Protection bit
 38697                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 38698                           ;	Boot Block Write Protection bit
 38699                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 38700                           ;	Data EEPROM Write Protection bit
 38701                           ;	WRTD = OFF, Data EEPROM not write-protected
 38702                           ;	Scanner Enable bit
 38703                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
 38704                           ;	Low Voltage Programming Enable bit
 38705                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
 38706  300007                     	org	3145735
 38707  300007  DF                 	db	223
 38708                           
 38709                           ;Config register CONFIG5L @ 0x300008
 38710                           ;	UserNVM Program Memory Code Protection bit
 38711                           ;	CP = ON, UserNVM code protection enabled
 38712                           ;	DataNVM Memory Code Protection bit
 38713                           ;	CPD = ON, DataNVM code protection enabled
 38714  300008                     	org	3145736
 38715  300008  FC                 	db	252
 38716                           
 38717                           ;Config register CONFIG5H @ 0x300009
 38718                           ;	unspecified, using default values
 38719  300009                     	org	3145737
 38720  300009  FF                 	db	255
 38721                           
 38722                           ;Config register CONFIG6L @ 0x30000A
 38723                           ;	Table Read Protection Block 0
 38724                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 38725                           ;	Table Read Protection Block 1
 38726                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 38727                           ;	Table Read Protection Block 2
 38728                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 38729                           ;	Table Read Protection Block 3
 38730                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 38731  30000A                     	org	3145738
 38732  30000A  FF                 	db	255
 38733                           
 38734                           ;Config register CONFIG6H @ 0x30000B
 38735                           ;	Boot Block Table Read Protection bit
 38736                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 38737  30000B                     	org	3145739
 38738  30000B  FF                 	db	255
 38739                           tosu	equ	0xFFF
 38740                           tosh	equ	0xFFE
 38741                           tosl	equ	0xFFD
 38742                           stkptr	equ	0xFFC
 38743                           pclatu	equ	0xFFB
 38744                           pclath	equ	0xFFA
 38745                           pcl	equ	0xFF9
 38746                           tblptru	equ	0xFF8
 38747                           tblptrh	equ	0xFF7
 38748                           tblptrl	equ	0xFF6
 38749                           tablat	equ	0xFF5
 38750                           prodh	equ	0xFF4
 38751                           prodl	equ	0xFF3
 38752                           indf0	equ	0xFEF
 38753                           postinc0	equ	0xFEE
 38754                           postdec0	equ	0xFED
 38755                           preinc0	equ	0xFEC
 38756                           plusw0	equ	0xFEB
 38757                           fsr0h	equ	0xFEA
 38758                           fsr0l	equ	0xFE9
 38759                           wreg	equ	0xFE8
 38760                           indf1	equ	0xFE7
 38761                           postinc1	equ	0xFE6
 38762                           postdec1	equ	0xFE5
 38763                           preinc1	equ	0xFE4
 38764                           plusw1	equ	0xFE3
 38765                           fsr1h	equ	0xFE2
 38766                           fsr1l	equ	0xFE1
 38767                           bsr	equ	0xFE0
 38768                           indf2	equ	0xFDF
 38769                           postinc2	equ	0xFDE
 38770                           postdec2	equ	0xFDD
 38771                           preinc2	equ	0xFDC
 38772                           plusw2	equ	0xFDB
 38773                           fsr2h	equ	0xFDA
 38774                           fsr2l	equ	0xFD9
 38775                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    32
    Data        46
    BSS         825
    Persistent  19
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      79
    BANK0           160     36     158
    BANK1           256      0     255
    BANK2           256      7     252
    BANK3           256      0     247
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_DO_TX$8409$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8415$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8421$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX_EMPTY$8427$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8426	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8421	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_RX$8420	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8415	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_TX$8414	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX$8409	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_MasterFsm$8408	const PTR FTN()enum E10442 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$0$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    eusartparser@package	PTR struct package_t size(2) Largest target is 7
		 -> main@package(BANK2[7]), 

    confirmpackage@package	PTR struct package_t size(2) Largest target is 7
		 -> updateChangesToUart@package(COMRAM[7]), main@package(BANK2[7]), 

    read_eusartparser@package	PTR struct package_t size(2) Largest target is 7
		 -> updateChangesToUart@package(COMRAM[7]), main@package(BANK2[7]), 

    init_package@package	PTR struct package_t size(2) Largest target is 7
		 -> updateChangesToUart@package(COMRAM[7]), main@package(BANK2[7]), 

    sm_send_event@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_send_event@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_get_current_state@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_get_current_state@psm	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_init@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_init@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_execute_menuConfiguration@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_menuConfiguration@psm	PTR struct . size(2) Largest target is 12
		 -> menuConfiguration_stateMachine(BANK2[11]), 

    S6625$Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    edit_Param.Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM.walkTime(BANK0[1]), var_sys_NVM.softStart(BANK0[1]), var_sys_NVM.softstop(BANK0[1]), 
		 -> var_sys_NVM.flashRGBMode(BANK0[1]), var_sys_NVM.velocityDecelaration(BANK0[1]), var_sys_NVM.operationMode(BANK0[1]), var_sys_NVM.autoTimeFullClose(BANK0[1]), 
		 -> var_sys_NVM.Stopboton(BANK0[1]), var_sys_NVM.logicDigital(BANK0[1]), var_sys_NVM.Direction_motor(BANK0[1]), var_sys_NVM.folow_me(BANK0[1]), 
		 -> var_sys_NVM.ligthTime(BANK0[1]), var_sys_NVM.autoTimeWalkClose(BANK0[1]), var_sys_NVM.programmingDistance(BANK0[1]), var_sys_NVM.flashLightMode(BANK0[1]), 
		 -> var_sys_NVM.securityBandInOpen(BANK0[1]), var_sys_NVM.securityBandType(BANK0[1]), var_sys_NVM.securityBandIsON(BANK0[1]), var_sys_NVM.photoCellInOpen(BANK0[1]), 
		 -> var_sys_NVM.photoCellIsON(BANK0[1]), var_sys_NVM.decelarationClose(BANK0[1]), var_sys_NVM.motorPower(BANK0[1]), var_sys_NVM.decelarationOpen(BANK0[1]), 
		 -> var_sys_NVM.homemPresente(BANK0[1]), var_sys_NVM.TypeofMotor(BANK0[1]), var_sys_NVM.decelarationSensivity(BANK0[1]), var_sys_NVM.motorSensitivity(BANK0[1]), 
		 -> var_sys_NVM.electricBrake(BANK0[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    sm_execute_main@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_main@psm	PTR struct . size(2) Largest target is 12
		 -> main_stateMachine(BANK1[11]), 

    sm_execute_ControlLearning@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlLearning@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), 

    sm_execute_ControlGate@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlGate@psm	PTR struct . size(2) Largest target is 12
		 -> controlGate_stateMachine(BANK1[11]), 

    decrementTimeslot@ts	PTR int  size(2) Largest target is 72
		 -> ts_system.TimeShowVersion(BANK1[2]), ts_system.TimeLearningDecelaration(BANK1[2]), ts_system.TimeWaitToGetCurrent(BANK1[2]), ts_system.InvertionTimeClosingFromOpen(BANK1[2]), 
		 -> ts_system.TimeWaitReleCapacitor(BANK1[2]), ts_system.TimeInversionStart(BANK1[2]), ts_system.TimeStopedBeforeDecelaration(BANK1[2]), ts_system.TimeWaitToNextState(BANK1[2]), 
		 -> ts_system.timeFreqFlashligth(BANK1[2]), ts_system.timeFreqRGB(BANK1[2]), ts_system.timeWaitToClose(BANK1[2]), ts_system.timeOpenWalk(BANK1[2]), 
		 -> ts_system.timeoutMenu(BANK1[2]), ts_system.timeFreqDigit(BANK1[2]), ts_system.timewaitFlashRGB(BANK1[2]), ts_system.TimeStopElectricBrake(BANK1[2]), 
		 -> ts_system.Debug_TS(BANK1[2]), ts_system.timeSinalizationDigit(BANK1[2]), ts_system.TimeLastCommand(BANK1[2]), ts_system.timeBetweenSaveCounters(BANK1[2]), 
		 -> ts_system.TimeCurrentAlarm(BANK1[2]), ts_system.TimeCurrentWaitForAlarm(BANK1[2]), ts_system.TimeReleCapacitor(BANK1[2]), ts_system.TimeChargeCondesador(BANK1[2]), 
		 -> ts_system.TimeTransitionDecelaration(BANK1[2]), ts_system.timewaitBeforeSoftStart(BANK1[2]), ts_system.timeSoftStart(BANK1[2]), ts_system.TimeElectricBrake(BANK1[2]), 
		 -> ts_system.TimeStopADCZeroOffsetCalc(BANK1[2]), ts_system(BANK1[72]), 

    controlLearning_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    controlGate_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    main_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S4647$parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    menuConfiguration_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    verifyProgramingMode@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloq_classic_decrypt_packet@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecryptPacket_12BIT@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    DecryptPacket_12BIT@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloqDecryptPacket@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    keeloqDecryptPacket@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    getHopCode@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    HopCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    Decrypt@packet	PTR unsigned char  size(2) Largest target is 16
		 -> SecureKeyGen@HOPtemp(COMRAM[4]), NormalKeyGen@Buffer(COMRAM[8]), classic_data(BANK2[16]), 

    NormalKeyGen@serial	PTR unsigned long  size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    sp__getClassicManufCode	PTR void  size(2) Largest target is 8
		 -> DKEY(BANK2[8]), 

    getSerialCmd@serial	PTR unsigned long  size(1) Largest target is 4
		 -> controlSelectRemote@tempSerial(BANK0[4]), 

    SaveNVM_VarSystem@point	PTR unsigned char  size(1) Largest target is 64
		 -> var_sys_NVM(BANK0[64]), 

    ReadSerial@tempSerial	PTR unsigned long  size(1) Largest target is 4
		 -> eusartparser@serial(BANK0[4]), 

    validateRemoteSerialNumber@position	PTR unsigned char  size(2) Largest target is 16
		 -> eusartparser@pos(BANK0[1]), controlSelectRemote@pos(BANK0[1]), classic_data(BANK2[16]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    I2C1_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E10442[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F523@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@i2c1_master_example$F517@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F511@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@i2c1_master_example$F500@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_readDataBlock@data	PTR void  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), 
		 -> memoryTEMP(BANK2[16]), var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    d.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), 
		 -> memoryTEMP(BANK2[16]), var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    S429$data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    i2c_writeNBytes@data	PTR void  size(1) Largest target is 64
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _sm_execute_menuConfiguration->_ResetDefaultMemory
    _sm_execute_menuConfiguration->_setValueToEdit
    _load_New_Menu->_SetSegmentValueIntermitentMain
    _controlSelectRemote->_RemoveSerial
    _controlSelectRemote->_saveNewSerial
    _controlSelectRemote->_validateRemoteSerialNumber
    _getSerialCmd->_memcpy
    _controlSaveRemote->_SetSegmentValueIntermitentMain
    ___awdiv->___lbmod
    _SetSegmentValueMain->___awdiv
    _controlLearnDigit->_SetSegmentValueLearn
    _sm_execute_ControlGate->_sm_execute_ControlLearning
    _generateErrorLearnig->_sm_init
    _sm_init->_sm_restart
    _setPositionInvertionInOpening->_getTimeDecelaration
    _controlVelocity->_getStateOpenPosition
    _getStateOpenPosition->_getTimeDecelaration
    _InitSoftStop->_GetMotorPower
    _CloseOrder->_sm_send_event
    _setPositionInvertionInClosing->_getTimeDecelaration
    _getTimeDecelaration->___lmul
    ___lmul->___lldiv
    _StopOrder->_sm_send_event
    _GetSecurityStateInClosing->_SetSegmentValueIntermitent
    _WaitPreFlash->_sm_send_event
    _OpenFullOrder->_sm_send_event
    _OpenWalkOrder->_sm_send_event
    _sm_send_event->_sm_get_current_state
    _InitSoftStart->_GetMotorPower
    _GetSecurityStateInOpening->_SetSegmentValueIntermitent
    _GetOpenOrder->_SetSegmentValueIntermitentMain
    _SetSegmentValueIntermitentMain->___awdiv
    _read_package->_EUSART1_Read
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _keeloq_classic_decrypt_packet->_NormalKeyGen
    _NormalKeyGen->_Decrypt
    _Decrypt->_memcpy
    _HopCHK->_getHopCode
    _getHopCode->___wmul
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _loadNVM_VarSystem->_ResetDefaultMemory
    _loadNVM_VarSystem->_checkNVM_VarSystem
    _eusartparser->_RemoveSerial
    _eusartparser->_saveNewSerial
    _eusartparser->_validateRemoteSerialNumber
    _validateRemoteSerialNumber->_i2c_readDataBlock
    _updateChangesToUart->_read_eusartparser
    _read_eusartparser->_write_package
    _write_package->_EUSART1_Write
    _confirmpackage->_init_package
    _saveNewSerial->_i2c_writeNBytes
    _cmdMemoryIsEmpty->_i2c_readDataBlock
    _RemoveSerial->_i2c_writeNBytes
    _ReadSerial->_i2c_readDataBlock
    _ShowVersion->_SetSegmentValue
    _SetSegmentValue->___awdiv
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ControlMotor->_VerifyElectricalBrake
    _ControlLights->_setRGB_ON
    _setRGB_ON->_RGB_Set
    _ControlCurrent->_getCurrentComparator
    _refreshCurrent->_sumHIST
    _refreshADCZeroOffset->___lwdiv
    _getCurrentComparator->___wmul
    _SaveNVM_VarSystem->_i2c_writeNBytes
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F523
    _wr2RegCompleteHandler@i2c1_master_example$F523->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F517->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F535->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F511->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F500->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR2_ISR->_ReadADC
    _refreshSegment->_Segments_Set
    _controlTimeslots->_decrementTimeslot
    _ReadADC->_ADCC_GetSingleConversion
    _TMR1_ISR->_controlMotorForce
    _controlMotorForce->i2_GetMotorPower
    _TMR0_ISR->_rxi

Critical Paths under _main in BANK0

    _main->_eusartparser
    _sm_execute_main->_sm_execute_menuConfiguration
    _sm_execute_menuConfiguration->_controlSelectRemote
    _setValueToEdit->_SaveNVM_VarSystem
    _controlSelectRemote->_validateRemoteSerialNumber
    _sm_execute_ControlGate->_actionZone_Opening
    _sm_execute_ControlLearning->_SaveNVM_VarSystem
    _actionZone_Opening->_setPositionInvertionInClosing
    _controlVelocity->_getStateOpenPosition
    _actionZone_Closing->_setPositionInvertionInClosing
    _readRFButtons->_keeloqDecryptPacket
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _loadNVM_VarSystem->_SaveNVM_VarSystem
    _checkNVM_VarSystem->_SaveNVM_VarSystem
    _ResetDefaultMemory->_SaveNVM_VarSystem
    _eusartparser->_validateRemoteSerialNumber
    _ControlCounterMoves->_SaveNVM_VarSystem

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0 8935328
                                              0 BANK2      7     7      0
                _ControlCounterMoves
                     _ControlCurrent
                      _ControlInputs
                      _ControlLights
                       _ControlMotor
                _EUSART1_is_rx_ready
                       _InitReceiver
                  _SYSTEM_Initialize
                    _SetSegmentValue
                        _ShowVersion
                    _WWDT_SoftEnable
                    _WWDT_TimerClear
                    _controlVelocity
                       _eusartparser
                      _getKeyPressed
                  _loadNVM_VarSystem
                         _readInputs
                      _readRFButtons
                       _read_package
                         _readbutton
             _sm_execute_ControlGate
                    _sm_execute_main
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_execute_main                                      4     2      2 3276122
                                             21 BANK0      4     2      2
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                      _load_New_Menu
       _sm_execute_menuConfiguration
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_menuConfiguration                         4     2      2 3249934
                                             17 BANK0      4     2      2
                    _ClearFlag_rfCMD
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___lbdiv
                            ___lldiv
                             ___lmul
                            ___lwdiv
                  _controlLearnDigit
                  _controlSaveRemote
                _controlSelectRemote
                      _load_New_Menu
                     _setValueToEdit
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setValueToEdit                                       7     6      1  719702
                                             57 COMRAM     1     0      1
                                              4 BANK0      6     6      0
                       _InitReceiver
                  _SaveNVM_VarSystem
                   _cmdMemoryIsEmpty
                      _load_New_Menu
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) _load_New_Menu                                        4     4      0    7475
                                             31 COMRAM     4     4      0
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
 ---------------------------------------------------------------------------------
 (4) _InitReceiver                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlSelectRemote                                  9     9      0 1778943
                                              8 BANK0      9     9      0
                    _ClearFlag_rfCMD
                       _RemoveSerial
                  _SaveNVM_VarSystem
                    _SetSegmentValue
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                   _cmdMemoryIsEmpty
                       _getSerialCmd
                      _getTypeRemote
                      _saveNewSerial
                      _sm_send_event
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (4) _getTypeRemote                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _getSerialCmd                                         2     1      1    6667
                                             26 COMRAM     2     1      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _controlSaveRemote                                    1     1      0   21448
                                             31 COMRAM     1     1      0
                    _ClearFlag_rfCMD
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1    1492
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1705
                                             19 COMRAM     8     4      4
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueMain                                  2     1      1    2402
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _ClearFlag_rfCMD                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlLearnDigit                                    0     0      0      31
               _SetSegmentValueLearn
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValueLearn                                 3     3      0      31
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     601
                                             15 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _sm_execute_ControlGate                               5     3      2  633789
                                             15 BANK0      5     3      2
                       _GetOpenOrder
         _SetSegmentValueIntermitent
                       _WaitPreFlash
                  _actionZone_Closed
                 _actionZone_Closing
                  _actionZone_Opened
                 _actionZone_Opening
         _sm_execute_ControlLearning
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_ControlLearning                           5     3      2  372027
                                             57 COMRAM     1     1      0
                                              4 BANK0      4     2      2
                       _GetOpenOrder
                  _SaveNVM_VarSystem
                      _calculateMean
                 _clearLearningValue
               _generateErrorLearnig
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _generateErrorLearnig                                 0     0      0    2622
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_init                                              5     0      5    2622
                                             17 COMRAM     5     0      5
                         _sm_restart
 ---------------------------------------------------------------------------------
 (2) _sm_restart                                           2     0      2     214
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _clearLearningValue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _calculateMean                                       12     4      8    1241
                                             15 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opening                                   3     3      0   52477
                                             12 BANK0      3     3      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
         _SetSegmentValueIntermitent
                          _StopOrder
                     _VerifyFollowMe
                    _controlVelocity
      _setPositionInvertionInClosing
      _setPositionInvertionInOpening
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInOpening                        8     8      0    1207
                                             49 COMRAM     8     8      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (3) _controlVelocity                                      1     1      0    3806
                                              2 BANK0      1     1      0
          _ControlDecelarationFactor
                       _InitSoftStop
               _getStateOpenPosition
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getStateOpenPosition                                11    11      0    2562
                                             49 COMRAM     9     9      0
                                              0 BANK0      2     2      0
                             ___lmul
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _InitSoftStop                                         1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (4) _ControlDecelarationFactor                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opened                                    2     2      0   42796
                                             31 COMRAM     2     2      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                     _VerifyFollowMe
 ---------------------------------------------------------------------------------
 (3) _VerifyFollowMe                                       1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _CloseOrder                                           0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closing                                   2     2      0   58040
                                             49 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
         _SetSegmentValueIntermitent
                          _StopOrder
                             ___lmul
      _setPositionInvertionInClosing
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInClosing                       12    12      0    1207
                                              0 BANK0     12    12      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getTimeDecelaration                                  9     5      4    1207
                                             40 COMRAM     9     5      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8    1176
                                             28 COMRAM    12     4      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _StopOrder                                            0     0      0   11256
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInClosing                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closed                                    2     2      0   65057
                                             31 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                       _WaitPreFlash
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _WaitPreFlash                                         0     0      0   22549
                   _InitFullAutoTime
                      _OpenFullOrder
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _OpenFullOrder                                        0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _InitFullAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OpenWalkOrder                                        4     4      0   11389
                                             23 COMRAM     4     4      0
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_send_event                                        6     2      4   11256
                                             17 COMRAM     6     2      4
               _sm_get_current_state
 ---------------------------------------------------------------------------------
 (3) _sm_get_current_state                                 2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _InitSoftStart                                        1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (3) _InitWalkAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInOpening                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (3) _SetSegmentValueIntermitent                           4     1      3    1893
                                             15 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _GetOpenOrder                                         0     0      0    6454
     _SetSegmentValueIntermitentMain
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1    1861
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueIntermitentMain                       4     1      3    4593
                                             27 COMRAM     4     1      3
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _readbutton                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_package                                        14     7      7     429
                                             16 COMRAM    14     7      7
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      37
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readRFButtons                                        0     0      0  743020
                _DecryptPacket_12BIT
                _keeloqDecryptPacket
 ---------------------------------------------------------------------------------
 (2) _keeloqDecryptPacket                                 10     6      4  385615
                                              8 BANK0     10     6      4
                             _DecCHK
                             _HopCHK
      _keeloq_classic_decrypt_packet
                             _memcpy
         _validateRemoteSerialNumber
               _verifyProgramingMode
 ---------------------------------------------------------------------------------
 (3) _verifyProgramingMode                                 3     1      2     152
                                             15 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _keeloq_classic_decrypt_packet                        5     3      2   23218
                                             55 COMRAM     2     0      2
                                              0 BANK0      3     3      0
                            _Decrypt
                       _NormalKeyGen
 ---------------------------------------------------------------------------------
 (4) _NormalKeyGen                                        18    16      2   15069
                                             37 COMRAM    18    16      2
                            _Decrypt
                      _LoadManufCode
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _LoadManufCode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Decrypt                                             11     9      2    7935
                                             26 COMRAM    11     9      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _HopCHK                                               4     2      2    3969
                                             35 COMRAM     4     2      2
                          _ReqResync
                         _getHopCode
 ---------------------------------------------------------------------------------
 (4) _getHopCode                                          14    12      2    3541
                                             21 COMRAM    14    12      2
                          _ReqResync
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _ReqResync                                            2     0      2     211
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _DecCHK                                               4     2      2     242
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DecryptPacket_12BIT                                  5     1      4  357405
                                              8 BANK0      5     1      4
                             _memcpy
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (1) _readInputs                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loadNVM_VarSystem                                    0     0      0 1742040
             _I2C1_Read1ByteRegister
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
                 _checkNVM_VarSystem
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (2) _checkNVM_VarSystem                                   1     1      0  349391
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (3) _ResetDefaultMemory                                   1     1      0  349369
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (2) _I2C1_Read1ByteRegister                               3     2      1  345691
                                             33 COMRAM     3     2      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _getKeyPressed                                        1     1      0      37
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _eusartparser                                        35    33      2 2172628
                                              8 BANK0     28    26      2
                         _ReadSerial
                       _RemoveSerial
                  _SaveNVM_VarSystem
                   _cmdMemoryIsEmpty
                     _confirmpackage
                  _read_eusartparser
                      _saveNewSerial
                _updateChangesToUart
         _validateRemoteSerialNumber
                 _write_eusartparser
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_eusartparser                                  19    12      7    1966
                                             15 COMRAM    19    12      7
 ---------------------------------------------------------------------------------
 (4) _validateRemoteSerialNumber                          21    14      7  350496
                                             45 COMRAM    13     6      7
                                              0 BANK0      8     8      0
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (2) _updateChangesToUart                                  8     8      0   32892
                                             27 COMRAM     8     8      0
                     _confirmpackage
                       _init_package
                  _read_eusartparser
                      _write_package
 ---------------------------------------------------------------------------------
 (3) _read_eusartparser                                    4     2      2   13841
                                             23 COMRAM     4     2      2
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_package                                        7     0      7    8757
                                             16 COMRAM     7     0      7
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      62
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _confirmpackage                                       3     0      3    8222
                                             17 COMRAM     3     0      3
                       _init_package
 ---------------------------------------------------------------------------------
 (3) _init_package                                         2     0      2     338
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _saveNewSerial                                        8     3      5  349810
                                             57 COMRAM     1     1      0
                                              0 BANK0      7     2      5
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (4) _cmdMemoryIsEmpty                                     8     7      1  350671
                                             45 COMRAM     8     7      1
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (4) _RemoveSerial                                         8     7      1  349543
                                             57 COMRAM     1     0      1
                                              0 BANK0      7     7      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (2) _ReadSerial                                           5     3      2  348828
                                             45 COMRAM     5     3      2
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (5) _i2c_readDataBlock                                   12     6      6  348313
                                             33 COMRAM    12     6      6
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _WWDT_TimerClear                                      2     2      0      40
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WWDT_SoftEnable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ShowVersion                                          0     0      0     602
                    _SetSegmentValue
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValue                                      2     1      1     602
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     968
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _WWDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WWDT_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     121
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     121
                                             17 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlMotor                                         7     7      0     319
                                             17 COMRAM     7     7      0
              _VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (2) _VerifyElectricalBrake                                2     2      0     161
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ControlLights                                        0     0      0    1958
                   _setFlashLigth_ON
                          _setRGB_ON
 ---------------------------------------------------------------------------------
 (2) _setRGB_ON                                            5     3      2    1235
                                             16 COMRAM     5     3      2
                            _RGB_Set
 ---------------------------------------------------------------------------------
 (3) _RGB_Set                                              1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setFlashLigth_ON                                     2     0      2     723
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ControlInputs                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlCurrent                                       4     4      0    5060
                                             34 COMRAM     4     4      0
                      _GetMotorPower
               _getCurrentComparator
               _refreshADCZeroOffset
                     _refreshCurrent
 ---------------------------------------------------------------------------------
 (2) _refreshCurrent                                       0     0      0     820
                  _saveEnergyADCHist
                       _sumEnergyADC
                            _sumHIST
 ---------------------------------------------------------------------------------
 (3) _sumHIST                                             17    13      4     461
                                             15 COMRAM    17    13      4
 ---------------------------------------------------------------------------------
 (3) _sumEnergyADC                                         9     7      2     238
                                             15 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _saveEnergyADCHist                                    2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _refreshADCZeroOffset                                 3     3      0    1186
                                             22 COMRAM     3     3      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     781
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _getCurrentComparator                                13     9      4    3017
                                             21 COMRAM    13     9      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2878
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _GetMotorPower                                        4     4      0      37
                                             15 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ControlCounterMoves                                  0     0      0  349276
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (4) _SaveNVM_VarSystem                                    4     4      0  349276
                                              0 BANK0      4     4      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (5) _i2c_writeNBytes                                     24    19      5  349112
                                             33 COMRAM    24    19      5
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6    6478
                                             15 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetAddressNackCallback                          4     0      4    2859
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_Open                                            2     2      0      68
                                             15 COMRAM     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWrite                                     0     0      0  334109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOperation                                 2     2      0  334109
                                             31 COMRAM     2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (8) _I2C1_Poller                                          0     0      0  334041
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterFsm                                       3     3      0  334041
                                             28 COMRAM     3     3      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX_EMPTY                                    2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX                                          2     2      0   83518
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_WRITE                              0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_READ                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendTxData                               1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_ACK                                      0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX                                          2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_STOP                                0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RESET                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RCEN                                        0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_ADDRESS_NACK                                2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler@i2c1_master_example$F523      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler@i2c1_master_example$F517      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler@i2c1_master_example$F535    2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler@i2c1_master_example$F511      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler@i2c1_master_example$F500      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetDataCompleteCallback                         4     0      4    4339
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (7) _I2C1_SetCallback                                     5     1      4     997
                                             15 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetBuffer                                       4     0      4    3942
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnStop                             2     0      2       0
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnReset                            2     0      2     305
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Close                                           1     1      0      37
                                             15 COMRAM     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          6     6      0    2657
                                              9 COMRAM     6     6      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR2_ISR                                            0     0      0    2292
                   Absolute function *
                            _ReadADC
       _TMR2_DefaultInterruptHandler *
                   _controlTimeslots
                     _refreshSegment
 ---------------------------------------------------------------------------------
 (16) _refreshSegment                                      0     0      0      22
                       _Segments_Set
 ---------------------------------------------------------------------------------
 (17) _Segments_Set                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _controlTimeslots                                    0     0      0    2248
                  _decrementTimeslot
 ---------------------------------------------------------------------------------
 (17) _decrementTimeslot                                   4     2      2    2248
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ReadADC                                             3     3      0      22
                                              1 COMRAM     3     3      0
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetSingleConversion                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0     365
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _controlMotorForce
 ---------------------------------------------------------------------------------
 (16) _controlMotorForce                                   5     5      0     136
                                              4 COMRAM     5     5      0
                    i2_GetMotorPower
            i2_VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (17) i2_VerifyElectricalBrake                             2     2      0     112
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (17) i2_GetMotorPower                                     4     4      0      24
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (16) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                                _rxi
 ---------------------------------------------------------------------------------
 (16) _rxi                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ControlCounterMoves
     _SaveNVM_VarSystem
       _i2c_writeNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
             _I2C1_Poller
               _I2C1_MasterFsm
                 _I2C1_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                     _I2C1_MasterEnableRestart
                   _I2C1_DO_SEND_STOP *
                     _I2C1_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                       _I2C1_SetCallback
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                 _I2C1_DO_IDLE *
                 _I2C1_DO_RCEN *
                   _I2C1_MasterStartRx
                 _I2C1_DO_RESET *
                 _I2C1_DO_RX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_MasterSendNack
                   _I2C1_DO_RX_NACK_STOP *
                     _I2C1_MasterSendNack
                   _I2C1_MasterGetRxData *
                   _I2C1_MasterSendAck *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_RX_ACK *
                   _I2C1_MasterSendAck
                 _I2C1_DO_RX_NACK_RESTART *
                 _I2C1_DO_RX_NACK_STOP *
                 _I2C1_DO_SEND_ADR_READ *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_ADR_WRITE *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_RESTART *
                 _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                 _I2C1_DO_TX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterIsNack *
                   _I2C1_MasterSendTxData *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterSetIrq *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_MasterClearIrq *
                 _I2C1_MasterIsNack *
               _I2C1_MasterWaitForEvent
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterOpen
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
         _memcpy
   _ControlCurrent
     _GetMotorPower
     _getCurrentComparator
       ___wmul
     _refreshADCZeroOffset
       ___lwdiv
     _refreshCurrent
       _saveEnergyADCHist
       _sumEnergyADC
       _sumHIST
   _ControlInputs
   _ControlLights
     _setFlashLigth_ON
     _setRGB_ON
       _RGB_Set
   _ControlMotor
     _VerifyElectricalBrake
   _EUSART1_is_rx_ready
   _InitReceiver
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WWDT_Initialize
   _SetSegmentValue
     ___awdiv (ARG)
       ___lbmod (ARG)
     ___lbmod (ARG)
   _ShowVersion
     _SetSegmentValue
   _WWDT_SoftEnable
   _WWDT_TimerClear
   _controlVelocity
     _ControlDecelarationFactor
     _InitSoftStop
       _GetMotorPower
     _getStateOpenPosition
       ___lmul
         ___lldiv (ARG)
       _getTimeDecelaration
         ___lmul
     _getTimeDecelaration
   _eusartparser
     _ReadSerial
       _i2c_readDataBlock
         _I2C1_Close
         _I2C1_MasterWrite
         _I2C1_Open
         _I2C1_SetAddressNackCallback
         _I2C1_SetBuffer
         _I2C1_SetDataCompleteCallback
     _RemoveSerial
       _i2c_writeNBytes
     _SaveNVM_VarSystem
     _cmdMemoryIsEmpty
       _i2c_readDataBlock
     _confirmpackage
       _init_package
     _read_eusartparser
       _write_package
         _EUSART1_Write
     _saveNewSerial
       _i2c_writeNBytes
     _updateChangesToUart
       _confirmpackage
       _init_package
       _read_eusartparser
       _write_package
     _validateRemoteSerialNumber
       _i2c_readDataBlock
     _write_eusartparser
     _write_package
   _getKeyPressed
   _loadNVM_VarSystem
     _I2C1_Read1ByteRegister
       _I2C1_Close
       _I2C1_MasterWrite
       _I2C1_Open
       _I2C1_SetAddressNackCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
     _ResetDefaultMemory
       _SaveNVM_VarSystem
     _SaveNVM_VarSystem
     _checkNVM_VarSystem
       _SaveNVM_VarSystem
     _i2c_readDataBlock
   _readInputs
   _readRFButtons
     _DecryptPacket_12BIT
       _memcpy
       _validateRemoteSerialNumber
     _keeloqDecryptPacket
       _DecCHK
       _HopCHK
         _ReqResync
         _getHopCode
           _ReqResync
           ___wmul
       _keeloq_classic_decrypt_packet
         _Decrypt
           _memcpy
         _NormalKeyGen
           _Decrypt
           _LoadManufCode
           _memcpy
       _memcpy
       _validateRemoteSerialNumber
       _verifyProgramingMode
   _read_package
     _EUSART1_Read
   _readbutton
   _sm_execute_ControlGate
     _GetOpenOrder
       _SetSegmentValueIntermitentMain
         ___awdiv (ARG)
         ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbdiv
     _SetSegmentValueIntermitent
     _WaitPreFlash
       _InitFullAutoTime
       _OpenFullOrder
         _InitSoftStart
           _GetMotorPower
         _sm_send_event
           _sm_get_current_state
       _sm_send_event
     _actionZone_Closed
       _GetOpenOrder
       _GetSecurityStateInOpening
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
         _InitSoftStart
         _sm_send_event
       _WaitPreFlash
       _sm_send_event
     _actionZone_Closing
       _GetOpenOrder
       _GetSecurityStateInClosing
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _SetSegmentValueIntermitent
       _StopOrder
         _sm_send_event
       ___lmul
       _setPositionInvertionInClosing
         _getTimeDecelaration
       _sm_send_event
     _actionZone_Opened
       _CloseOrder
         _InitSoftStart
         _sm_send_event
       _GetOpenOrder
       _GetSecurityStateInClosing
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _VerifyFollowMe
     _actionZone_Opening
       _CloseOrder
       _GetOpenOrder
       _GetSecurityStateInClosing
       _GetSecurityStateInOpening
       _InitFullAutoTime
       _InitWalkAutoTime
       _SetSegmentValueIntermitent
       _StopOrder
       _VerifyFollowMe
       _controlVelocity
       _setPositionInvertionInClosing
       _setPositionInvertionInOpening
         _getTimeDecelaration
       _sm_send_event
     _sm_execute_ControlLearning
       _GetOpenOrder
       _SaveNVM_VarSystem
       _calculateMean
       _clearLearningValue
       _generateErrorLearnig
         _sm_init
           _sm_restart
       _sm_send_event
     _sm_send_event
   _sm_execute_main
     _SetSegmentValueIntermitentMain
     _SetSegmentValueMain
       ___awdiv (ARG)
       ___lbdiv (ARG)
       ___lbmod (ARG)
     _load_New_Menu
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
     _sm_execute_menuConfiguration
       _ClearFlag_rfCMD
       _ResetDefaultMemory
       _SaveNVM_VarSystem
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
       ___lbdiv
       ___lldiv
       ___lmul
       ___lwdiv
       _controlLearnDigit
         _SetSegmentValueLearn
       _controlSaveRemote
         _ClearFlag_rfCMD
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _sm_send_event
       _controlSelectRemote
         _ClearFlag_rfCMD
         _RemoveSerial
         _SaveNVM_VarSystem
         _SetSegmentValue
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _cmdMemoryIsEmpty
         _getSerialCmd
           _memcpy
         _getTypeRemote
         _saveNewSerial
         _sm_send_event
         _validateRemoteSerialNumber
       _load_New_Menu
       _setValueToEdit
         _InitReceiver
         _SaveNVM_VarSystem
         _cmdMemoryIsEmpty
         _load_New_Menu
         _sm_send_event
       _sm_send_event
     _sm_send_event
   _sm_init

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _rxi *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _controlMotorForce *
       i2_GetMotorPower
       i2_VerifyElectricalBrake
   _TMR2_ISR *
     Absolute function(Fake) *
     _ReadADC *
       _ADCC_GetSingleConversion
     _TMR2_DefaultInterruptHandler *
     _controlTimeslots *
       _decrementTimeslot
     _refreshSegment *
       _Segments_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      7      FC       9       98.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     24      9E       5       98.8%
BITBANK14           88      0       0      32        0.0%
BANK14              88      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4F       1       84.0%
BITBIGSFRllll       28      0       0      59        0.0%
BITBIGSFRhlllll     27      0       0      42        0.0%
BITBIGSFRhhllll     1B      0       0      37        0.0%
BITBIGSFRhhlh       1A      0       0      35        0.0%
BITBIGSFRhlllll     13      0       0      48        0.0%
BITBIGSFRhlllhh      F      0       0      41        0.0%
BITBIGSFRhlllll      E      0       0      46        0.0%
BITBIGSFRhhh         D      0       0      34        0.0%
BITBIGSFRhhllll      C      0       0      36        0.0%
BITBIGSFRllh         9      0       0      57        0.0%
BITBIGSFRhlllll      4      0       0      52        0.0%
BITBIGSFRhlllll      3      0       0      44        0.0%
BITBIGSFRhlllll      3      0       0      43        0.0%
BITBIGSFRhlllll      3      0       0      53        0.0%
BITBIGSFRhlllll      3      0       0      55        0.0%
BITBIGSFRhlllll      2      0       0      47        0.0%
BITBIGSFRhlllhh      2      0       0      40        0.0%
BITBIGSFRhlllll      2      0       0      49        0.0%
BITBIGSFRhlllll      2      0       0      54        0.0%
BITBIGSFRlh          2      0       0      56        0.0%
BITBIGSFRlllh        1      0       0      58        0.0%
BITBIGSFRhlllll      1      0       0      45        0.0%
BITBIGSFRhlllll      1      0       0      50        0.0%
BITBIGSFRhlllll      1      0       0      51        0.0%
BITBIGSFRhlllhh      1      0       0      39        0.0%
BITBIGSFRhlllhh      1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3DF      60        0.0%
DATA                 0      0     3DF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Jul 21 08:54:46 2022

                                        ?_ClearFlag_rfCMD 0001  
                              cmdMemoryIsEmpty@tempSerial 0032  
                                           _Counterchoose 0092  
                        __end_of_TMR2_SetInterruptHandler 9F9C  
                                _eusart1TxBufferRemaining 01FD  
                            SetSegmentValueIntermitent@d1 0013  
                            SetSegmentValueIntermitent@d2 0010  
                                    ??_checkNVM_VarSystem 003A  
                                            ___awdiv@sign 0019  
                                     ___wmul@multiplicand 0012  
                           __end_of_VerifyElectricalBrake 89BC  
                                           _LoadManufCode 9CA2  
                                        ?_SetSegmentValue 001C  
                                                     l100 9674  
                            ??_sm_execute_ControlLearning 00DE  
                                                     l674 848A  
                                                     l690 88F2  
                                                     _GIE 007F97  
                                                     _Hop 007C  
                                   ?_I2C1_MasterOperation 0001  
                                         _timer1ReloadVal 02E1  
                                 keeloqDecryptPacket@data 00E0  
                                                     _rxi 4FD0  
                                  ControlMotor@stateMotor 0018  
                                         _TMR2_Initialize 998C  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                  ?_I2C1_MasterSendTxData 0001  
                                       load_New_Menu@Menu 0022  
                                    _I2C1_DO_RX_NACK_STOP A018  
                               ?_I2C1_MasterEnableRestart 0001  
                                       _SaveNVM_VarSystem 97D4  
                        validateRemoteSerialNumber@serial 002E  
                                    I2C1_SetBuffer@buffer 0010  
                                       getKeyPressed@temp 0010  
                                     eusartparser@package 00E0  
                                   getCurrentComparator@x 0022  
                                      ?_SaveNVM_VarSystem 0001  
                                 ??_rd2RegCompleteHandler 001B  
                                                    l2044 8EF6  
                                                    l1405 6D36  
                                       readRFButtons@key1 0088  
                                                    l3102 3E44  
                                                    l2039 8EEA  
                                                    l2311 5B22  
                                                    l2240 7C72  
                                                    l2323 89AE  
                                                    l2403 56E0  
                                                    l1372 9572  
                                                    l1436 6268  
                                                    l1524 6238  
                                                    l1357 7750  
                                                    l1517 61EC  
                                                    l3053 3B90  
                                                    l1366 78D2  
                                                    l2254 743A  
                                                    l1383 646C  
                                                    l2415 475E  
                                                    l2328 89B8  
                                                    l2353 5604  
                                                    l3233 1A4C  
                                                    l3065 3D20  
                                                    l2370 55FC  
                                                    l1491 917E  
                                                    l2507 8310  
                                                    l2443 48D0  
                                                    l1731 7576  
                                                    l1388 64F4  
                                                    l2516 9772  
                                                    l2380 56D4  
                                                    l1740 75DC  
                                                    l1732 757E  
                                                    l1742 75F8  
                                                    l1654 67B4  
                                                    l2519 9798  
                                                    l1495 60CE  
                                                    l1743 7600  
                                                    l2376 5610  
                                                    l1736 75B0  
                                                    l3088 3D66  
                                                    l1745 761C  
                                                    l1737 75B8  
                                                    l1657 682A  
                                                    l1746 7624  
                                                    l2810 4FCE  
                                                    l2730 5C44  
                                                    l1739 75D4  
                                                    l1667 6872  
                                                    l2723 5498  
                                                    l1748 764E  
                                                    l3444 3A1E  
                                                    l3380 36BE  
                                                    l3372 3684  
                                                    l2477 49E6  
                                                    l2397 56CC  
                                                    l1861 7B5C  
                                                    l3517 9012  
                                                    l2653 4596  
                                                    l3630 3048  
                                                    l3438 39EC  
                                                    l3390 3802  
                                                    l3358 35C4  
                                                    l3631 3052  
                                                    l3623 3024  
                                                    l2727 5B4E  
                                                    l3391 3822  
                                                    l3640 3086  
                                                    l3632 305C  
                                                    l2912 23E6  
                                                    l3801 8AE2  
                                                    l3633 3062  
                                                    l3625 302E  
                                                    l2585 8C00  
                                                    l2729 5B84  
                                                    l3650 30B4  
                                                    l3642 3090  
                                                    l3634 3068  
                                                    l3626 3038  
                                                    l3651 30BA  
                                                    l3635 306E  
                                                    l1859 7B4C  
                                                    l3660 3310  
                                                    l3652 30C0  
                                                    l3644 3096  
                                                    l3636 3074  
                                                    l3628 303E  
                                                    l3661 331A  
                                                    l3645 309C  
                                                    l3637 307A  
                                                    l1869 7B80  
                                                    l2773 4DEA  
                                                    l3493 7E16  
                                                    l3646 30A2  
                                                    l3655 318A  
                                                    l3647 30A8  
                                                    l3639 3080  
                                                    l4297 9376  
                                                    l3649 30AE  
                                                    l3833 873E  
                                                    l3499 9904  
                                                    ?_rxi 0001  
                                                    _DKEY 02D1  
                                                    _LATA 000F83  
                                                    _LATB 000F84  
                                                    _LATC 000F85  
                                                    _LATD 000F86  
                                                    _LATE 000F87  
                                             main@package 02EF  
                                                    _T2PR 000FBC  
                                                    _PMD0 000EE1  
                                                    _PMD1 000EE2  
                                                    _PMD2 000EE3  
                                                    _PMD3 000EE4  
                                                    _PMD4 000EE5  
                                                    _PMD5 000EE6  
                                                    _EHop 028C  
                                           eusartparser@i 00E8  
                                                    _WPUA 000F10  
                                                    _WPUB 000F18  
                                                    _WPUC 000F20  
                                                    _WPUD 000F25  
                                                    _WPUE 000F2D  
                                         __end_of_RGB_Set 9F54  
                                 ??_wr2RegCompleteHandler 001B  
                                                    _Bptr 008D  
                                        ??_I2C1_MasterFsm 001D  
                                           _EUSART1_Write 965E  
                               ??_I2C1_CallbackReturnStop 001B  
                                __end_of_controlTimeslots 671C  
                                                    _main 6A3C  
                                           ?_EUSART1_Read 0001  
                                         ?_confirmpackage 0012  
                                                    _temp 0080  
                                                    fsr1h 000FE2  
                                                    fsr2h 000FDA  
                                                    indf1 000FE7  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                                                    btemp 0050  
                                    saveNewSerial@cmdType 003A  
                                     ??_SaveNVM_VarSystem 003A  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 009C  
                                        ??_I2C1_SetBuffer 0014  
                                          ??_ControlMotor 0012  
                                       ReadSerial@cmdType 0032  
                                         __end_of_Decrypt 7BD8  
                                ?i2_VerifyElectricalBrake 0001  
                                        getSerialCmd@temp 001C  
                                           ?_InitReceiver 0001  
                              ??_TMR1_SetInterruptHandler 0012  
                                            ___param_bank 000000  
                                         i2_GetMotorPower 7C9E  
                                         __end_of_ReadADC 92DA  
                           I2C1_CallbackReturnStop@funPtr 0019  
                                         ??_getTypeRemote 0010  
                                                   ??_rxi 0001  
                                    __end_of_GetOpenOrder 60AC  
                                 __end_of_TMR0_Initialize 9CE6  
                                          ?_LoadManufCode 0001  
                          ??_TMR0_DefaultInterruptHandler 0001  
                                           ?_InitSoftStop 0001  
                           sm_execute_ControlLearning@psm 00DC  
                           __end_of_OSCILLATOR_Initialize 9EC2  
                      SetSegmentValueIntermitentMain@time 001D  
                                                   l21011 7798  
                                                   l21005 777E  
                                                   l21031 77E6  
                                                   l21023 77C2  
                                                   l21015 77AA  
                                                   l20305 84B2  
                                                   l21041 780E  
                                                   l21025 77CC  
                                                   l21201 4D18  
                                                   l20331 88FC  
                                                   l20403 9482  
                                                   l21019 77B6  
                                                   l22011 362A  
                                                   l22003 361E  
                                                   l21045 781A  
                                                   l21037 7800  
                                                   l21053 7830  
                                                   l21141 4A7E  
                                                   l22021 3636  
                                                   l20095 8D8C  
                                                   l20327 88F6  
                                                   l21231 85EA  
                                                   l21135 4A6E  
                                                   l20353 8F5E  
                                                   l20337 8902  
                                                   l20425 9F38  
                                                   l21049 7826  
                                                   l21225 85DA  
                                                   l21153 4AC0  
                                                   l22121 386A  
                                                   l22025 3692  
                                                   l20363 8F6C  
                                                   l20291 8442  
                                                   l20283 8436  
                                                   l20419 92F2  
                                                   l23011 6416  
                                                   l21083 73D6  
                                                   l21171 4B6E  
                                                   l21147 4A8E  
                                                   l21139 4A78  
                                                   l22131 38A8  
                                                   l22027 369A  
                                                   l20357 8F64  
                                                   l20429 9F40  
                                                   l20461 99E0  
                                                   l20509 86CA  
                                                   l20621 8B3C  
                                                   l21341 9BA4  
                                                   l21325 83AA  
                                                   l20613 9694  
                                                   l23101 616E  
                                                   l21413 5F1E  
                                                   l21077 7382  
                                                   l21069 7344  
                                                   l21237 8600  
                                                   l21253 8632  
                                                   l21181 4C0C  
                                                   l21173 4B8A  
                                                   l21165 4B02  
                                                   l22213 39B2  
                                                   l22141 38C4  
                                                   l22133 38B2  
                                                   l22125 3872  
                                                   l22117 383C  
                                                   l22037 36AE  
                                                   l22029 36A2  
                                                   l20287 843C  
                                                   l20455 99D4  
                                                   l20535 95EA  
                                                   l20543 960A  
                                                   l23031 6504  
                                                   l23007 6400  
                                                   l20615 9698  
                                                   l21271 97B2  
                                                   l21511 601C  
                                                   l21431 5F5C  
                                                   l21239 8608  
                                                   l21183 4C24  
                                                   l21175 4BA6  
                                                   l21167 4B2E  
                                                   l21159 4AD0  
                                                   l21191 4C6A  
                                                   l22207 3994  
                                                   l22143 38C8  
                                                   l22127 388E  
                                                   l22119 3866  
                                                   l22063 371E  
                                                   l20529 9D04  
                                                   l20369 8F72  
                                                   l20297 8448  
                                                   l20393 9476  
                                                   l23017 6436  
                                                   l21329 83EC  
                                                   l21353 786E  
                                                   l20801 62BA  
                                                   l23121 61B4  
                                                   l23113 6198  
                                                   l23105 617C  
                                                   l23201 5E92  
                                                   l21257 8640  
                                                   l21249 8628  
                                                   l21185 4C3E  
                                                   l21177 4BD4  
                                                   l21169 4B4A  
                                                   l21193 4CCE  
                                                   l22233 39DE  
                                                   l22161 391C  
                                                   l22153 38F4  
                                                   l22137 38BC  
                                                   l22057 36D6  
                                                   l22049 36C6  
                                                   l23035 6526  
                                                   l23027 64DA  
                                                   l20635 8A46  
                                                   l20811 6322  
                                                   l21267 97AC  
                                                   l21283 97D0  
                                                   l21523 6068  
                                                   l21443 5F84  
                                                   l21419 5F22  
                                                   l21603 7FAC  
                                                   l21187 4C58  
                                                   l21179 4BF0  
                                                   l22243 3A06  
                                                   l22227 39C0  
                                                   l22219 39BC  
                                                   l22171 3928  
                                                   l22155 38F8  
                                                   l22147 38D0  
                                                   l22067 3730  
                                                   l20397 947C  
                                                   l20629 8B78  
                                                   l20557 7C28  
                                                   l20549 7BEC  
                                                   l20645 8A90  
                                                   l23045 8CAE  
                                                   l20821 6374  
                                                   l23141 6200  
                                                   l23133 61DE  
                                                   l23125 61C2  
                                                   l23117 61A6  
                                                   l23109 618A  
                                                   l23061 60E2  
                                                   l23053 60C0  
                                                   l21437 5F60  
                                                   l21453 5F88  
                                                   l24101 278E  
                                                   l24021 2626  
                                                   l21197 4CDC  
                                                   l22261 3A4E  
                                                   l22181 394E  
                                                   l22165 3920  
                                                   l22077 3740  
                                                   l20559 7C34  
                                                   l21359 7906  
                                                   l20815 6330  
                                                   l20831 63DC  
                                                   l21383 69A0  
                                                   l21375 692C  
                                                   l21703 983C  
                                                   l21279 97C8  
                                                   l21535 60A8  
                                                   l21527 606C  
                                                   l21551 8052  
                                                   l21623 7FDE  
                                                   l20591 923E  
                                                   l20751 79FC  
                                                   l20743 79B8  
                                                   l22431 4092  
                                                   l22255 3A38  
                                                   l22247 3A18  
                                                   l22263 3A6A  
                                                   l22183 3952  
                                                   l22167 3924  
                                                   l22159 3900  
                                                   l22087 37C8  
                                                   l22079 378E  
                                                   l20569 7C62  
                                                   l20841 8C3E  
                                                   l20809 631E  
                                                   l23153 622A  
                                                   l23145 620E  
                                                   l23129 61D0  
                                                   l23081 6128  
                                                   l23073 610C  
                                                   l23065 60F0  
                                                   l23217 5EBE  
                                                   l21609 7FB0  
                                                   l24041 2676  
                                                   l24009 25D0  
                                                   l21297 9B66  
                                                   l21289 9B4E  
                                                   l22513 42D0  
                                                   l22505 42B6  
                                                   l22441 412A  
                                                   l22193 3980  
                                                   l22177 3946  
                                                   l22273 3A92  
                                                   l20579 7C94  
                                                   l25011 72A6  
                                                   l21379 6968  
                                                   l20691 7B64  
                                                   l21491 5FEE  
                                                   l21475 5FBC  
                                                   l21571 8084  
                                                   l20595 9252  
                                                   l20739 798C  
                                                   l21731 5956  
                                                   l22419 406E  
                                                   l22187 3956  
                                                   l22179 394A  
                                                   l22275 3AE4  
                                                   l24211 196E  
                                                   l24203 192A  
                                                   l25021 72D2  
                                                   l23309 830C  
                                                   l20829 63D8  
                                                   l21397 6A2E  
                                                   l23149 621C  
                                                   l23093 6152  
                                                   l23085 6136  
                                                   l23077 611A  
                                                   l23069 60FE  
                                                   l20677 7B48  
                                                   l20669 7B2E  
                                                   l23173 5DC4  
                                                   l21469 5FB4  
                                                   l21557 8056  
                                                   l20773 9058  
                                                   l23333 7F00  
                                                   l21821 5AC0  
                                                   l21725 593C  
                                                   l24133 2868  
                                                   l24109 27DC  
                                                   l24053 26CC  
                                                   l22541 4372  
                                                   l22437 40EC  
                                                   l22429 4090  
                                                   l20599 9660  
                                                   l21663 8502  
                                                   l20687 7B58  
                                                   l23183 5E38  
                                                   l23191 5E4C  
                                                   l23335 7F16  
                                                   l21639 8014  
                                                   l21807 5AAE  
                                                   l21719 592A  
                                                   l23503 5430  
                                                   l24135 2872  
                                                   l22535 435C  
                                                   l22471 4206  
                                                   l22463 41E0  
                                                   l22439 4124  
                                                   l22199 398A  
                                                   l24303 1BE0  
                                                   l24215 1990  
                                                   l24207 194C  
                                                   l23265 89A4  
                                                   l20849 879E  
                                                   l20857 823C  
                                                   l20793 6270  
                                                   l23097 6160  
                                                   l23089 6144  
                                                   l21649 986E  
                                                   l23185 5E48  
                                                   l23169 5DBA  
                                                   l21497 5FF6  
                                                   l23513 544C  
                                                   l23505 5434  
                                                   l23433 5374  
                                                   l22473 421A  
                                                   l25035 7306  
                                                   l23275 9774  
                                                   l23291 82A8  
                                                   l23259 8988  
                                                   l20867 827E  
                                                   l20859 826E  
                                                   l20795 6276  
                                                   l20955 6EE6  
                                                   l21675 8522  
                                                   l21667 8506  
                                                   l20699 7B78  
                                                   l21587 80BA  
                                                   l23355 7F52  
                                                   l21827 5AE4  
                                                   l21755 59E2  
                                                   l21923 7A86  
                                                   l23507 543A  
                                                   l23451 53B0  
                                                   l23419 5334  
                                                   l20779 95C2  
                                                   l24155 28CA  
                                                   l22563 7DD6  
                                                   l20891 944C  
                                                   l22459 41A6  
                                                   l24411 1E46  
                                                   l24307 1C0C  
                                                   l24251 1A2A  
                                                   l24243 1A04  
                                                   l24235 19E2  
                                                   l24227 19CA  
                                                   l24219 19B2  
                                                   l22805 936C  
                                                   l23293 82B0  
                                                   l20949 6E94  
                                                   l21853 8BC4  
                                                   l23349 7F48  
                                                   l21941 7146  
                                                   l21933 70FA  
                                                   l21837 5B0E  
                                                   l21829 5AEA  
                                                   l21765 5A00  
                                                   l21917 7A4C  
                                                   l23525 5476  
                                                   l24173 28FA  
                                                   l24093 2770  
                                                   l20893 9466  
                                                   l24421 1E66  
                                                   l24325 1C9E  
                                                   l24261 1AA8  
                                                   l26005 3E00  
                                                   l23287 8298  
                                                   l20975 6F92  
                                                   l21695 9824  
                                                   l25055 93A2  
                                                   l23631 5C5E  
                                                   l23623 5C40  
                                                   l23607 5C18  
                                                   l21927 7AC0  
                                                   l23439 538C  
                                                   l23383 5280  
                                                   l24167 28E4  
                                                   l24079 273E  
                                                   l24183 2948  
                                                   l20895 946A  
                                                   l24431 1EDA  
                                                   l24271 1B10  
                                                   l26111 3FA2  
                                                   l23289 82A0  
                                                   l23297 82B8  
                                                   l24601 3324  
                                                   l20969 6F7C  
                                                   l23641 5C84  
                                                   l23617 5C2A  
                                                   l23545 5B3E  
                                                   l23385 5296  
                                                   l26201 4558  
                                                   l24505 2072  
                                                   l24329 1CC0  
                                                   l24281 1B76  
                                                   l24257 1A4E  
                                                   l26025 3E34  
                                                   l26017 3E16  
                                                   l26121 3FCE  
                                                   l23299 82E0  
                                                   l24603 3396  
                                                   l24611 34A4  
                                                   l21891 8D46  
                                                   l21947 718A  
                                                   l23707 4DD8  
                                                   l21779 5A2E  
                                                   l23467 53E4  
                                                   l26211 4598  
                                                   l22771 86F0  
                                                   l22579 98FE  
                                                   l24451 1F6C  
                                                   l24427 1EB8  
                                                   l24419 1E64  
                                                   l24355 1D2C  
                                                   l24347 1D10  
                                                   l24363 1D48  
                                                   l24291 1BBC  
                                                   l24259 1A92  
                                                   l26115 3FB6  
                                                   l26051 3E8E  
                                                   l24605 33E4  
                                                   l22845 953E  
                                                   l21885 8D32  
                                                   l23805 4F42  
                                                   l23653 5CB2  
                                                   l23469 53EA  
                                                   l21965 8F16  
                                                   l26213 45D8  
                                                   l26141 4402  
                                                   l22773 86FC  
                                                   l21981 35E6  
                                                   l24525 20B8  
                                                   l24509 207E  
                                                   l24293 1BC2  
                                                   l26117 3FC2  
                                                   l26061 3EB0  
                                                   l22951 767E  
                                                   l24711 6C86  
                                                   l24607 3456  
                                                   l21887 8D3E  
                                                   l23807 4F46  
                                                   l23727 4E50  
                                                   l23671 5CEE  
                                                   l23591 5BE6  
                                                   l21799 5A90  
                                                   l23399 52C4  
                                                   l21967 8F48  
                                                   l26215 45EE  
                                                   l22783 8730  
                                                   l20999 7764  
                                                   l21991 3602  
                                                   l21975 35CE  
                                                   l24551 21D8  
                                                   l24527 20C0  
                                                   l24519 20A6  
                                                   l24447 1F4A  
                                                   l24287 1B90  
                                                   l24199 190A  
                                                   l26047 3E7E  
                                                   l22793 9344  
                                                   l28001 1746  
                                                   l22857 9076  
                                                   l23809 4F4C  
                                                   l23577 5BB8  
                                                   l23489 5404  
                                                   l26145 4424  
                                                   l26137 43F4  
                                                   l21993 360A  
                                                   l21977 35D6  
                                                   l24553 21DE  
                                                   l24537 20FA  
                                                   l24393 1DFA  
                                                   l24289 1B92  
                                                   l22795 934C  
                                                   l22971 76E6  
                                                   l24723 6CBA  
                                                   l25603 5540  
                                                   l22867 90BE  
                                                   l23843 4FB6  
                                                   l23827 4F84  
                                                   l23819 4F6A  
                                                   l23747 4E9C  
                                                   l23667 5CE2  
                                                   l23587 5BDC  
                                                   l23915 23C4  
                                                   l23907 239C  
                                                   l23851 2278  
                                                   l21995 3612  
                                                   l21979 35DE  
                                                   l24555 21E4  
                                                   l24547 21C8  
                                                   l24491 2038  
                                                   l24467 1FBA  
                                                   l24395 1DFE  
                                                   l24379 1DB4  
                                                   l24571 222A  
                                                   l26067 3ED4  
                                                   l22965 76D2  
                                                   l24709 6C82  
                                                   l24725 6CD0  
                                                   l28005 1758  
                                                   l23765 4EDA  
                                                   l23693 4D6A  
                                                   l23597 5BFA  
                                                   l23925 23E8  
                                                   l26261 46C4  
                                                   l26237 465A  
                                                   l26173 44B8  
                                                   l26157 445E  
                                                   l26149 443C  
                                                   l21989 35FA  
                                                   l24397 1E0A  
                                                   l26093 3F42  
                                                   l22983 770C  
                                                   l22967 76DA  
                                                   l25711 4844  
                                                   l25631 55FE  
                                                   l24591 313C  
                                                   l28031 17B4  
                                                   l28023 17AA  
                                                   l24831 67BA  
                                                   l23791 4F28  
                                                   l23775 4EF6  
                                                   l23759 4EC0  
                                                   l23695 4D80  
                                                   l23599 5C02  
                                                   l23871 22FE  
                                                   l23927 2428  
                                                   l26271 46DC  
                                                   l26263 46D0  
                                                   l24479 1FF4  
                                                   l26095 3F56  
                                                   l25801 4A02  
                                                   l25705 4820  
                                                   l25713 4852  
                                                   l25633 5614  
                                                   l25553 8ED8  
                                                   l25545 8EB2  
                                                   l24593 3190  
                                                   l24921 75A4  
                                                   l24905 7560  
                                                   l24809 6740  
                                                   l23793 4F30  
                                                   l23769 4EE2  
                                                   l23777 4EFC  
                                                   l23953 24DA  
                                                   l23945 249C  
                                                   l23929 243E  
                                                   l26257 46BA  
                                                   l26185 44F4  
                                                   l26169 4496  
                                                   l24497 2050  
                                                   l24691 6C10  
                                                   l25803 4A10  
                                                   l25707 482E  
                                                   l25627 55EC  
                                                   l25571 54C2  
                                                   l24595 3202  
                                                   l28019 1788  
                                                   l24771 705C  
                                                   l24907 756A  
                                                   l24843 680E  
                                                   l23787 4F20  
                                                   l23947 24BA  
                                                   l23891 2362  
                                                   l23867 22DA  
                                                   l23859 22A8  
                                                   l26267 46D6  
                                                   l26259 46C0  
                                                   l28131 6B26  
                                                   l28107 6A82  
                                                   l25813 4A40  
                                                   l25733 48B2  
                                                   l25741 48DC  
                                                   l25629 55F0  
                                                   l25549 8EC4  
                                                   l27501 2B7E  
                                                   l27421 29C6  
                                                   l24597 3250  
                                                   l24589 30CA  
                                                   l28037 17B8  
                                                   l24861 688E  
                                                   l24845 6814  
                                                   l23981 2548  
                                                   l26277 46EA  
                                                   l26197 4536  
                                                   l28117 6A98  
                                                   l22999 9566  
                                                   l25807 4A26  
                                                   l25727 488C  
                                                   l25671 4760  
                                                   l25655 56BC  
                                                   l24599 32C2  
                                                   l28071 1868  
                                                   l28063 1858  
                                                   l28039 17BC  
                                                   l24919 759A  
                                                   l24839 67E8  
                                                   l24863 6896  
                                                   l23887 2348  
                                                   l23879 2322  
                                                   l25911 3C90  
                                                   l25831 3B56  
                                                   l25823 3B14  
                                                   l25729 489C  
                                                   l25665 4740  
                                                   l25657 56C0  
                                                   l25585 54EE  
                                                   l25577 54D2  
                                                   l27505 2B90  
                                                   l27441 2A60  
                                                   l27433 2A1C  
                                                   l27425 29E8  
                                                   l27417 298A  
                                                   l28049 181E  
                                                   l23985 2556  
                                                   l25921 3CBC  
                                                   l25905 3C78  
                                                   l25817 3AEC  
                                                   l25841 3B92  
                                                   l28137 6B50  
                                                   l25763 4940  
                                                   l25683 47AA  
                                                   l25659 56CE  
                                                   l25587 54F4  
                                                   l27531 2CF6  
                                                   l27515 2C18  
                                                   l27419 29AA  
                                                   l28059 1836  
                                                   l24867 68A2  
                                                   l23987 2560  
                                                   l23899 2384  
                                                   l25851 3BE8  
                                                   l25835 3B78  
                                                   l25827 3B36  
                                                   l25843 3BBE  
                                                   l28147 6B6E  
                                    write_package@package 0011  
                                   _eusart1RxStatusBuffer 0274  
                                                   l24981 7238  
                                                   l25781 4994  
                                                   l25765 494E  
                                                   l27525 2C90  
                                                   l27509 2BB2  
                                                   l27461 2ABA  
                                                   l27453 2A96  
                                                   l27445 2A72  
                                                   l27437 2A3E  
                                                   l27429 29FA  
                                                   l28069 1864  
                                                   l27701 10DE  
                                                   l28077 186E  
                                                   l24877 8DE2  
                                                   l25941 3D16  
                                                   l25917 3CAA  
                                                   l25845 3BD4  
                                                   l25759 4928  
                                                   l25775 4972  
                                                   l25695 47E4  
                                                   l27551 2DEE  
                                                   l27535 2D0C  
                                                   l27519 2C2A  
                                                   l27711 1130  
                                                   l27631 0F32  
                                                   l24799 9E60  
                                                   l24967 7648  
                                                   l24895 8E1A  
                                                   l24887 8E04  
                                                   l24879 8DE6  
                                                   l25943 3D22  
                                                   l25935 3CF6  
                                                   l25785 49A8  
                                                   l25769 4962  
                                                   l27545 2D88  
                                                   l27481 2B24  
                                                   l27473 2B00  
                                                   l27465 2ACC  
                                                   l27457 2AA8  
                                                   l27449 2A84  
                                                   l27801 139A  
                                                   l27721 1144  
                                                   l27705 1108  
                                                   l27633 0F42  
                                                   l24897 8E1E  
                                                   l25945 3D30  
                                                   l25865 3C26  
                                                   l25857 3C08  
                                                   l24995 726C  
                                                   l25699 47F8  
                                                   l27563 2E44  
                                                   l27555 2E00  
                                                   l27539 2D22  
                                                   l27811 13B4  
                                                   l27731 11A0  
                                                   l27643 0F88  
                                                   l27635 0F5E  
                                                   l25955 3D56  
                                                   l25875 3C34  
                                                   l25797 49EA  
                                                   l27573 2ECC  
                                                   l27493 2B5A  
                                                   l27485 2B36  
                                                   l27477 2B12  
                                                   l27469 2ADE  
                                                   l27581 2EEE  
                                                   l27709 112C  
                                                   l27653 0FB0  
                                                   l27629 0F26  
                                                   l27567 2E66  
                                                   l27559 2E22  
                                                   l27903 155C  
                                                   l27807 13A2  
                                                   l27719 113A  
                                                   l27647 0F9A  
                                                   l25991 3DDC  
                                                   l25983 3DC0  
                                                   l25895 3C68  
                                                   l25887 3C4A  
                                                   l27497 2B6C  
                                                   l27489 2B48  
                                                   l27913 156A  
                                                   l27905 1560  
                                                   l27825 13E4  
                                                   l27737 11AA  
                                                   l27729 119C  
                                                   l27657 0FC0  
                                                   l27665 0FF2  
                                                   l25977 3DA2  
                                                   l27931 15DA  
                                                   l27923 15CC  
                                                   l27915 1574  
                                                   l27843 1414  
                                                   l27755 121A  
                                                   l27747 120C  
                                                   l27739 11B4  
                                                   l27691 10B6  
                                                   l27683 1062  
                                                   l27597 9110  
                                                   l27941 163C  
                                                   l27933 15E4  
                                                   l27925 15D0  
                                                   l27845 1418  
                                                   l27837 1410  
                                                   l27829 1406  
                                                   l27781 133C  
                                                   l27773 12EE  
                                                   l27749 1210  
                                                   l27693 10BA  
                                                   l27943 1640  
                                                   l27767 1278  
                                                   l27687 1092  
                                                   l27881 14DC  
                                                   l27865 147C  
                                                   l27785 1358  
                                                   l27875 14A8  
                                                   l27795 1396  
                                                   l27779 132C  
                                                   l27949 164A  
                                                   l27885 1500  
                                                   l27877 14AC  
                                                   l27869 149E  
                                                   l27789 137A  
                                                   l27983 1738  
                                                   l27967 16D6  
                                                   l27895 150E  
                                                   l27887 1504  
                                                   l27979 1716  
                                                   l27899 1538  
                                                   l27989 1742  
                                                   _ADACQ 000F5C  
                                       __end_of_I2C1_Open 86CE  
                                                   _ADCAP 000F5D  
                                                   _ADACT 000F56  
                                   __end_of_saveNewSerial 8C72  
                                                   ?_main 0001  
                                                   _ADCLK 000F57  
                                                   _ADCNT 000F67  
                                                   _ADPCH 000F5F  
                                                   _ADREF 000F58  
                                         __end_of___awdiv 864A  
                          ?_keeloq_classic_decrypt_packet 0038  
                                         __end_of___lbdiv 97D4  
                                                   _ADPRE 000F5E  
                                                   _ADRPT 000F66  
                                         __end_of___lbmod 9B6E  
                                            _zeroCrossing 0196  
                                         __end_of___lldiv 8750  
                                                   _T1CLK 000FD2  
                                         ___awdiv@divisor 0016  
                                                   _T1CON 000FCF  
                                                   u30010 9136  
                                                   u30020 9168  
                                                   _T2CON 000FBD  
                                                   u30130 67DA  
                                                   u30220 6872  
                                                   u30140 67E8  
                                                   u30160 680E  
                                                   u30170 6822  
                                                   u30500 7220  
                                                   u32110 47F4  
                                                   u24110 6F74  
                                                   u30520 722C  
                                                   u32200 487C  
                                                   u32040 4772  
                                                   u32130 4810  
                                                   u32050 4780  
                                                   u30290 8DFC  
                                                   u33010 3E9C  
                                                   u30700 72C8  
                                                   u32060 4790  
                                                   _T2HLT 000FBE  
                                                   u23350 9F78  
                                                   u31510 8EA0  
                                                   u23408 890E  
                                                   u23600 7C6E  
                                                   u30800 731E  
                                                   u34000 1384  
                                                   u24320 73E4  
                                                   u25200 599C  
                                                   u33200 3F86  
                                                   u23409 8920  
                                                   u25105 91C6  
                                                   u23418 8F7E  
                                                   u23610 7C82  
                                                   u30810 7326  
                                                   u30730 72E0  
                                                   u30570 7254  
                                                   u25210 59AC  
                                                   u26010 4344  
                                                   u33130 3F20  
                                                   u23419 8F90  
                                                   u23428 948E  
                                                   u23620 7C90  
                                                   u30660 7298  
                                                   u32340 495E  
                                                   u32260 48F2  
                                                   u31700 553A  
                                                   u30820 938A  
                                                   u24260 7340  
                                                   u25220 59B4  
                                                   u33300 448A  
                                                   u26100 98E6  
                                                   u24500 860C  
                                                   u23429 94A0  
                                                   u31701 5538  
                                                   u23550 7C06  
                                                   u30590 7260  
                                                   u32430 49D0  
                                                   u25070 8532  
                                                   u25310 5A4A  
                                                   u25150 5948  
                                                   u32510 3B08  
                                                   u30831 9398  
                                                   u32440 49D8  
                                                   u27000 899E  
                                                   u31720 554E  
                                                   u24360 94C8  
                                                   u25400 5AD0  
                                                   u25320 5A5A  
                                                   u33320 44AC  
                                                   u23378 8454  
                                                   u23570 7C42  
                                                   u32290 490A  
                                                   u31810 5582  
                                                   u25330 5A62  
                                                   u33250 4418  
                                                   u33170 3F6E  
                                                   u33090 3F02  
                                                   u23379 8466  
                                                   u23468 9316  
                                                   u23580 7C50  
                                                   u26300 9350  
                                                   u27020 976E  
                                                   u24540 97B6  
                                                   u23900 9050  
                                                   u25500 8D0C  
                                                   u25420 5AF8  
                                                   u25260 5A10  
                                                   u25180 598C  
                                                   u32540 3B6C  
                                                   u23469 9328  
                                                   u25261 5A0E  
                                                   u30790 7316  
                                                   u27030 9784  
                                                   u32390 49A4  
                                                   u31910 563C  
                                                   u31830 55A4  
                                                   u31750 5562  
                                                   u24710 5EFA  
                                                   u33430 460A  
                                                   u33270 4452  
                                                   u32480 4A34  
                                                   u31680 551C  
                                                   u26080 7D74  
                                                   u32720 3CCC  
                                                   u33601 2CB6  
                                                   u34161 15C0  
                                                   u34081 146E  
                                                   u31930 5646  
                                                   u31770 556E  
                                                   u31690 552A  
                                                   u33611 2CE8  
                                                   u23835 7998  
                                                   u34411 6B3A  
                                                   u26500 6464  
                                                   u24740 5F58  
                                                   u25460 8BB2  
                                                   u28100 4EAA  
                                                   u28020 4D9E  
                                                   u27300 52EA  
                                                   u25700 4018  
                                                   u32740 3D04  
                                                   u33621 2D48  
                                                   u27070 82F0  
                                                   u31950 5650  
                                                   u31790 5578  
                                                   u23870 8FFE  
                                                   u33470 464A  
                                                   u26270 8700  
                                                   u25710 401E  
                                                   u32830 3D7E  
                                                   u33631 2D7A  
                                                   u33551 29B8  
                                                   u33711 8B10  
                                                   u34351 1812  
                                                   u34191 1630  
                                                   u23855 7A08  
                                                   u25480 8BD4  
                                                   u27160 7F24  
                                                   u28200 4F5A  
                                                   u28120 4EB6  
                                                   u27400 53BE  
                                                   u27320 534C  
                                                   u33641 2DAE  
                                                   u33561 2BD8  
                                                   u33721 0F50  
                                                   u26450 63F6  
                                                   u26370 7672  
                                                   u31970 5674  
                                                   u31890 5630  
                                                   u28130 4ECE  
                                                   u28050 4E64  
                                                   u27250 52AC  
                                                   u29010 28DE  
                                                   u25810 4164  
                                                   u32850 3D8E  
                                         __end_of___lwdiv 9380  
                                                   u33651 2DE0  
                                                   u33571 2C0A  
                                                   u26460 640E  
                                                   u33820 10C2  
                                                   u27340 5360  
                                                   u25900 4246  
                                                   u32780 3D50  
                                                   u33661 2E8C  
                                                   u33581 2C50  
                                                   u33901 1200  
                                                   u33741 0F7A  
                                                   u28230 4F7A  
                                                   u28070 4E78  
                                                   u25670 3A12  
                                                   u33671 2EBE  
                                                   u33591 2C82  
                                                   u33831 10D0  
                                                   u28160 4F14  
                                                   u27440 5418  
                                                   u29040 28F8  
                                                   u28320 229C  
                                                   u25760 40AA  
                                                   u29200 1A40  
                                                   u32960 3E54  
                                                   u34457 8AA0  
                                                   u32961 3E52  
                                                   u26490 6452  
                                                   u33930 1230  
                                                   u26570 60DA  
                                                   u27530 548E  
                                                   u27370 539A  
                                                   u29050 2914  
                                                   u25930 4280  
                                                   u25690 3A44  
                                                   u34467 8B88  
                                                   u33691 8ACE  
                                                   u33771 0FE4  
                                                   u29051 2912  
                                                   u29060 2922  
                                                   u33941 1264  
                                                   u33781 101A  
                                                   u28350 22CE  
                                                   u33871 1190  
                                                   u33791 1044  
                                                   u27720 5BD6  
                                                   u28600 251A  
                                                   u29400 1D3A  
                                                   u28601 2518  
                                                   u29401 1D38  
                                                   u26780 61F8  
                                                   u28700 25FC  
                                                   u28540 2478  
                                                   u29340 1C72  
                                                   _T2TMR 000FBB  
                                                   u33981 134A  
                                                   u27910 5CC2  
                                                   u27750 5BF6  
                                                   u28630 2550  
                                                   u29350 1CCE  
                                                   u29335 1C5C  
                                                   u26960 8968  
                                                   u27680 5BB2  
                                                   u28720 2636  
                                                   u29600 1FCA  
                                                   u29360 1CD4  
                                                   u29345 1C6E  
                                                   u26890 5E5C  
                                                   u28810 26F2  
                                                   u28730 2650  
                                                   u28650 2574  
                                                   u29610 1FD0  
                                                   u29530 1E8C  
                                                   _T2RST 000FC0  
                                                   u28731 264E  
                                                   u28900 278C  
                                                   u28820 26F8  
                                                   u28660 257C  
                                                   u28580 24F8  
                                                   u29620 2004  
                                                   u29380 1D1E  
                                                   u29621 2002  
                                                   u29525 1E76  
                                                   u27870 5C92  
                                                   u28910 27A8  
                                                   u28830 271C  
                                                   u28750 2694  
                                                   u28670 2596  
                                                   u28590 2500  
                                                   u29390 1D24  
                                                   u28911 27A6  
                                                   u28831 271A  
                                                   u28751 2692  
                                                   u28671 2594  
                                                   u29535 1E88  
                                                   u29800 9F32  
                                                   u28920 27B6  
                                                   u28760 26A2  
                                                   u29640 201A  
                                                   u29480 1E18  
                                                   i2l106 98D0  
                                                   u27970 5D0C  
                                                   u28690 25EE  
                                                   u29730 20D0  
                                                   u29650 202E  
                                                   u29570 1F1E  
                                                   u29490 1E1E  
                                                   u27971 5D0A  
                                                   u28691 25EC  
                                                   u29731 20CE  
                                                   u28860 2752  
                                                   u29565 1F08  
                                                   u29910 6C9E  
                                                   u29670 2048  
                                                   u29655 202A  
                                                   u29575 1F1A  
                                                   u28960 27F8  
                                                   u28880 275E  
                                                   u29825 9D5E  
                                                   u29826 9D60  
                                                   u28970 27FE  
                                                   u29940 6CF2  
                                                   u29860 6C4C  
                                                   u29950 6D00  
                                                   u29880 6C64  
                                                   u29970 6D1A  
                                                   i2l870 004C  
                                                   i2l872 006A  
                                                   i2l873 0080  
                                                   i2l874 0076  
                                                   i2l867 0030  
                                         ___awdiv@counter 0018  
                                              _CloseOrder 9BC0  
                              __end_of_i2c1_fsmStateTable 0F21  
                                                   _OSCEN 000EDC  
                                                   _TMR0H 000FD4  
                                                   _TMR1H 000FCE  
                                                   _TMR0L 000FD3  
                                                   _TMR1L 000FCD  
                                                   _RFBit 0089  
                                                   _PORTB 000F8E  
                               __end_of_SaveNVM_VarSystem 980C  
                          DecryptPacket_12BIT@commandType 00E4  
                                                   _TRISA 000F88  
                                                   _TRISB 000F89  
                                                   _TRISC 000F8A  
                                                   _TRISD 000F8B  
                                                   _TRISE 000F8C  
                                  ??_I2C1_MasterGetRxData 0010  
                                   ?_I2C1_DO_RX_NACK_STOP 0001  
                             validateRemoteSerialNumber@i 003A  
                             validateRemoteSerialNumber@j 0039  
                                     ___lmul@multiplicand 0021  
                               ?_TMR0_SetInterruptHandler 0010  
                                           _InitSoftStart 9014  
                              ??_I2C1_CallbackReturnReset 001B  
                                       ??_I2C1_MasterOpen 0010  
                                        _idxAdcAquisition 0091  
                                    _EUSART1_Transmit_ISR 98A4  
                                       ??_I2C1_MasterStop 0010  
                                       ??_I2C1_Initialize 0010  
                               GetMotorPower@defineatraso 0013  
                                        __end_of_TMR0_ISR 9C58  
                                        __end_of_TMR1_ISR 975E  
                                        __end_of_TMR2_ISR 6E86  
                                    _idxSaveEnergyADCHist 0090  
                                                   _rfCMD 003B  
                                                   _aux_i 0190  
                          actionZone_Closed@typeOpenOrder 0021  
                                        _setFlashLigth_ON 975E  
                                          ?_EUSART1_Write 0001  
                                          readbutton@key1 0086  
                                   SetSegmentValueMain@d1 001D  
                                          readbutton@key2 019A  
                                   SetSegmentValueMain@d2 001C  
                                 __end_of_TMR1_Initialize 965E  
                                    setFlashLigth_ON@Freq 0010  
                                                   pclath 000FFA  
       rd1RegCompleteHandler@i2c1_master_example$F500@ptr 0019  
                                                   pclatu 000FFB  
                                         __end_of_sumHIST 7948  
                                         __end_of_sm_init 922E  
                                                   tablat 000FF5  
       rd2RegCompleteHandler@i2c1_master_example$F511@ptr 0019  
       wr2RegCompleteHandler@i2c1_master_example$F523@ptr 0019  
       wr1RegCompleteHandler@i2c1_master_example$F517@ptr 0019  
     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr 0019  
                                          ??_EUSART1_Read 0010  
                                                   plusw0 000FEB  
                                                   plusw2 000FDB  
                                 __end_of_sm_execute_main 3FFC  
                                                   ttemp5 0051  
                                                   ttemp6 0054  
                                                   ttemp7 0058  
                                                   status 000FD8  
                                         ??_ControlLights 0016  
                                                   wtemp8 0051  
                                            ??_I2C1_DO_RX 001B  
                                            ??_I2C1_DO_TX 001B  
                                         ??_ControlInputs 0010  
                                         ___lbdiv@divisor 0010  
              __end_of_EUSART1_DefaultFramingErrorHandler A0BC  
                    ??_EUSART1_DefaultFramingErrorHandler 0001  
                     ?_EUSART1_DefaultFramingErrorHandler 0001  
                      _EUSART1_DefaultFramingErrorHandler A0BA  
                                         _TMR1_WriteTimer 9D7E  
                                  ??_I2C1_DO_ADDRESS_NACK 001B  
                                         ___lbdiv@counter 0012  
                            __end_of_getStateOpenPosition 743E  
                                            ??_I2C1_Close 0010  
                                          ??_InitReceiver 0010  
                        VerifyElectricalBrake@actualState 0011  
                      i2VerifyElectricalBrake@actualState 0002  
                                         __initialization 7E18  
                                 cmdMemoryIsEmpty@cmdType 0031  
                             ?_SetSegmentValueIntermitent 0010  
                              __end_of_EUSART1_Initialize 884E  
                                            __end_of_main 6BC4  
                                              _ReadSerial 8C72  
                         sm_execute_menuConfiguration@psm 00E9  
                             __end_of_DecryptPacket_12BIT 839E  
                                          _refreshCurrent 954E  
                                          ??_InitSoftStop 0014  
                      validateRemoteSerialNumber@position 0033  
                                 __end_of_TMR2_Initialize 99B8  
                             ?_INTERRUPT_InterruptManager 0001  
                                          _refreshSegment 8540  
                                  ??_I2C1_MasterOperation 0020  
                                _TMR2_SetInterruptHandler 9F92  
                                                  ??_main 003B  
                                       ??_WWDT_Initialize 0010  
                                           __activetblptr 000003  
                                       Segments_Set@value 0001  
                                   saveNewSerial@position 00DC  
                      __end_of_validateRemoteSerialNumber 63E8  
                              _validateRemoteSerialNumber 624C  
                                          ?_InitSoftStart 0001  
                                   ?_EUSART1_Transmit_ISR 0001  
                                           sumEnergyADC@i 0018  
                                      __end_of_I2C1_DO_RX 8944  
                                      __end_of_I2C1_DO_TX 84B6  
                                       ?_InitWalkAutoTime 0001  
                                       ??_controlVelocity 00DA  
                                               ??_RGB_Set 0010  
                              ?_ControlDecelarationFactor 0001  
                                    __end_of_getSerialCmd 946E  
                  __end_of_SetSegmentValueIntermitentMain 9F00  
                          _SetSegmentValueIntermitentMain 9EEC  
                                      ReadSerial@position 002F  
                                      __end_of_I2C1_Close 9D08  
                                                  _ADACCH 000F71  
                                                  _ADACCL 000F70  
                                 ?_I2C1_Read1ByteRegister 0022  
                                      ??_InitWalkAutoTime 0010  
                                                  _ADCON0 000F60  
                                                  _ADCON1 000F59  
                                                  _ADCON2 000F5A  
                                                  _ADCON3 000F5B  
                                                  _ADERRH 000F6F  
                                                  _ADERRL 000F6E  
                                                  _ADLTHH 000F6B  
                                                  _ADLTHL 000F6A  
                                                  _ADRESH 000F64  
                                                  _ADRESL 000F63  
                                                  _ADSTAT 000F65  
                                                  _ADUTHH 000F6D  
                                        ___awdiv@dividend 0014  
                                                  _ADUTHL 000F6C  
                                                  _ANSELA 000F11  
                                                  _ANSELB 000F19  
                                                  _ANSELC 000F21  
                                                  _ANSELD 000F26  
                                                  _ANSELE 000F2E  
                                                  _T0CON0 000FD5  
                                                  _T0CON1 000FD6  
                                                  _T1GATE 000FD1  
                                                  _T1GCON 000FD0  
                                     readRFButtons@serial 0181  
                                                  _IOCBN3 00789B  
                                                  _IOCBP3 0078A3  
                                                  _RC1REG 000F99  
                                           _readRFButtons 671C  
                                                  _RC1STA 000F9D  
                                                  _RC3PPS 000EFA  
                                 TMR1_WriteTimer@timerVal 0001  
                                                  _RC4PPS 000EFB  
                                                  _ODCONA 000F0F  
                                                  _ODCONB 000F17  
                                                  _ODCONC 000F1F  
                                                  _ODCOND 000F24  
                                                  _ODCONE 000F2C  
                                                  _RC7PPS 000EFE  
                                   __end_of_GetMotorPower 7C9E  
                                                  i2l2024 66A2  
                                                  i2l1147 9D90  
                                                  i2l2140 85C4  
                                                  i2l2133 858E  
                                                  i2l2222 58D2  
                                                  i2l2240 7D38  
                                                  i2l2128 8570  
                                                  i2l1266 6D90  
                                                  i2l2323 8A26  
                                                  i2l1620 51A0  
                                                  i2l1277 6E1A  
                                                  i2l2191 570E  
                                                  i2l2328 8A30  
                                                  i2l2195 57F4  
                                                  _INLVLA 000F0D  
                                                  _INLVLB 000F15  
                                                  _INLVLC 000F1D  
                                                  _INLVLD 000F22  
                                                  _INLVLE 000F2A  
                                               ??_Decrypt 001D  
                                  calculateMean@meanValue 0010  
                                                  _OSCFRQ 000EDE  
                         __end_ofi2_VerifyElectricalBrake 8A34  
                                                  _TMR0IE 007615  
                                                  _TMR0IF 007655  
                                                  _RX1PPS 000EB5  
                            __end_of_refreshADCZeroOffset 7752  
                                           ?_init_package 0010  
                                                  _TX1REG 000F9A  
                                                  _TX1STA 000F9E  
                                __end_of_cmdMemoryIsEmpty 8282  
                                       ?_I2C1_MasterClose 0001  
                                                  _DecCHK 9840  
                                 __end_ofi2_GetMotorPower 7D64  
                                                  _RFFull 008B  
                                rdBlkRegCompleteHandler@p 0019  
                                               ??_ReadADC 0002  
                                 ??_I2C1_MasterDisableIrq 0010  
                                       ?_I2C1_MasterStart 0001  
                                         eusartparser@pos 00EC  
                    __end_of_sm_execute_menuConfiguration 2270  
                            _sm_execute_menuConfiguration 1908  
                                       ?_I2C1_MasterWrite 0001  
                                                  _HopCHK 84B6  
                                ?_I2C1_MasterWaitForEvent 0001  
                                      ??_I2C1_MasterClose 0010  
                                        _I2C1_DO_TX_EMPTY 8F5A  
                                 controlSelectRemote@temp 00E8  
                                  _SumEnergyADCHist_array 0260  
                                      ??_I2C1_MasterStart 0010  
                                      ??_I2C1_MasterWrite 0022  
                                       _decrementTimeslot 9B6E  
                    __end_of_TMR1_DefaultInterruptHandler A0B8  
                            _TMR1_DefaultInterruptHandler A0B6  
                                  __end_of_refreshCurrent 9594  
                                           ?_read_package 0011  
                                                  ___lmul 922E  
                                         ??_LoadManufCode 0010  
                                                  ___wmul 9C0C  
                                  __end_of_refreshSegment 85C6  
                                               ??___awdiv 0018  
                                               ??___lbdiv 0011  
                                               ??___lbmod 0011  
                                               ??___lldiv 0018  
                                      ?_decrementTimeslot 0001  
                                               ??___lwdiv 0014  
                                       ??_i2c_writeNBytes 0027  
                                           _load_New_Menu 4A4E  
                             __end_of_keeloqDecryptPacket 5EE4  
                             setValueToEdit@posindex_6980 00E0  
                                ?_EUSART1_SetErrorHandler 0010  
                                                  _memcpy 95D8  
                                        ?_TMR0_Initialize 0001  
                                                  clear_0 7E88  
                                                  clear_1 7E94  
                                                  clear_2 7EA0  
                                                  clear_3 7EAC  
                                                  clear_4 7EB8  
                                        ___awdiv@quotient 001A  
                                       ??_WWDT_TimerClear 0010  
                      __end_of_sm_execute_ControlLearning 2988  
                              _sm_execute_ControlLearning 2270  
                                                  isa$std 000001  
                        ??_EUSART1_SetOverrunErrorHandler 0012  
                         ?_EUSART1_SetOverrunErrorHandler 0010  
                                       ??_WWDT_SoftEnable 0010  
                                ??_I2C1_DO_SEND_ADR_WRITE 0011  
                          SetSegmentValueIntermitent@time 0011  
                                  setValueToEdit@menuType 00DE  
                                       ?_I2C1_SetCallback 0010  
                                  ??_I2C1_DO_RX_NACK_STOP 0010  
                                           ??_ShowVersion 001E  
                                         _ADCC_Initialize 93D0  
                                     ??_decrementTimeslot 0003  
                                             ?_CloseOrder 0001  
                                   _I2C1_DO_SEND_ADR_READ 9F62  
                                          _PMD_Initialize 9D62  
                                              _StateTRIAC 0194  
                                           ?_eusartparser 00E0  
                           ?_I2C1_SetDataCompleteCallback 0015  
                                      ??_I2C1_SetCallback 0014  
                                            __mediumconst 0000  
                          __end_of_I2C1_Read1ByteRegister 90CC  
                                    __end_of_ControlMotor 56E4  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                           Decrypt@Buffer 0022  
                                                  tblptru 000FF8  
                                               ??_sumHIST 0014  
                                               ??_sm_init 0017  
                                   SaveNVM_VarSystem@page 00D8  
                              __end_of_actionZone_Closing 4FD0  
                               ?_ADCC_GetSingleConversion 0001  
                                         ??_EUSART1_Write 0010  
                       __end_of_ControlDecelarationFactor 9E34  
                TMR2_SetInterruptHandler@InterruptHandler 0010  
                TMR1_SetInterruptHandler@InterruptHandler 0010  
                TMR0_SetInterruptHandler@InterruptHandler 0010  
                                        ??_ControlCurrent 0023  
                                  setValueToEdit@posindex 00DF  
                                 __end_of_TMR1_WriteTimer 9D9A  
                                         _eusart1RxBuffer 027C  
                                          ?_readRFButtons 0001  
                                        ___lbdiv@dividend 0011  
                                 _I2C1_DO_RX_NACK_RESTART A010  
                                         _eusart1TxBuffer 0284  
                                     _SetSegmentValueMain 9DB4  
                                        ?_TMR1_Initialize 0001  
                                          ??_init_package 0012  
                                       _SYSTEM_Initialize 9906  
                              __end_of_actionZone_Opening 549A  
                          I2C1_SetDataCompleteCallback@cb 0015  
                                         ___lbmod@divisor 0010  
                                              __accesstop 0060  
                                 __end_of__initialization 7EBE  
                                         ___lbmod@counter 0012  
                                           Decrypt@packet 001B  
                           setValueToEdit@haveValueToEdit 00E1  
                                        ?_sm_execute_main 00ED  
                                          _setValueToEdit 35B8  
                                      getSerialCmd@serial 001B  
                         I2C1_MasterOperation@returnValue 0021  
                                      ?_SYSTEM_Initialize 0001  
                                           ___rparam_used 000001  
                               __end_of_decrementTimeslot 9B98  
                                           ??_I2C1_Poller 0020  
                                           ?_Segments_Set 0001  
                                          ??_read_package 0018  
                         ??_setPositionInvertionInClosing 00D8  
                           ?_sm_execute_menuConfiguration 00E9  
                           __end_of_EUSART1_RxDataHandler 9D2A  
                                 _rdBlkRegCompleteHandler 96DE  
                                          __pcstackCOMRAM 0001  
                                         ?_refreshCurrent 0001  
                                   __end_of_getKeyPressed 9E64  
                                            __pidataBANK0 A0B2  
                                            __pidataBANK1 A0BC  
                                            __pidataBANK2 A050  
                                            __pidataBANK3 9C58  
                                     ??_SYSTEM_Initialize 0014  
                                             ?_ReadSerial 002E  
                        __end_of_I2C1_MasterEnableRestart A0A6  
                                          ?_load_New_Menu 0001  
                               sm_execute_ControlGate@psm 00E7  
                                               ?_TMR0_ISR 0001  
                                         ?_refreshSegment 0001  
                                               ?_TMR1_ISR 0001  
                                               ?_TMR2_ISR 0001  
                           ?_TMR1_DefaultInterruptHandler 0001  
                         ??_setPositionInvertionInOpening 0032  
                                    ?_SetSegmentValueMain 001C  
                                        ?_TMR2_Initialize 0001  
                                        ___lbdiv@quotient 0013  
                                  __end_of_PMD_Initialize 9D7E  
                            ??_I2C1_DO_SEND_RESTART_WRITE 0010  
                                 ??_I2C1_MasterSendTxData 0010  
                                         ??_InitSoftStart 0014  
                                    __end_of_EUSART1_Read 954E  
                                          ??_eusartparser 00E2  
                                  ??_EUSART1_Transmit_ISR 0001  
                                    _getStateOpenPosition 732E  
                               write_eusartparser@package 0010  
                                           ?_RemoveSerial 003A  
                                    __end_of_InitReceiver 9DB4  
                         actionZone_Closing@typeOpenOrder 0033  
                             __end_of_EUSART1_Receive_ISR 8158  
                                   __end_of_I2C1_DO_RESET 9FEC  
                          keeloqDecryptPacket@commandType 00E9  
                                        sumEnergyADC@sumE 0014  
                        verifyProgramingMode@classic_data 0010  
                                       __end_of_ReqResync 9E4C  
                             VerifyFollowMe@securityClose 0010  
                                        ??_confirmpackage 0015  
                               __end_of_SYSTEM_Initialize 9934  
                                     __end_of_ShowVersion 8EF8  
                                           _eusart1RxHead 0095  
                                           _eusart1TxHead 0097  
                                           _eusart1RxTail 0094  
                                              __pbssBANK0 0060  
                                              __pbssBANK1 0100  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                  __end_of_setValueToEdit 3AEA  
                                           _eusart1TxTail 0096  
                         __end_of_I2C1_MasterWaitForEvent A010  
                       _EUSART1_TxDefaultInterruptHandler 02ED  
                                            _GetOpenOrder 5EE4  
                                    __end_of_InitSoftStop 9506  
                         ??_EUSART1_SetRxInterruptHandler 0012  
                          validateRemoteSerialNumber@mask 0035  
                                cmdMemoryIsEmpty@position 002E  
                           __end_of_rd2RegCompleteHandler 9AC0  
                                    I2C1_Open@returnValue 0011  
                                                 ?_DecCHK 0010  
                                           ?_WaitPreFlash 0001  
                                        ?i2_GetMotorPower 0001  
                            __end_of_SetSegmentValueLearn 784E  
                                       ?_controlTimeslots 0001  
                           __end_of_wr2RegCompleteHandler 9A94  
                                           ?_NormalKeyGen 0026  
                                   __end_of_sm_send_event 9014  
                                   _rd1RegCompleteHandler 9AC0  
                                                 ?_HopCHK 0024  
                                          ??_Segments_Set 0001  
              validateRemoteSerialNumber@VerifyOnlySerial 0032  
                                              _edit_Param 0046  
                                       _I2C1_DO_SEND_STOP A028  
                                      ??_controlTimeslots 0005  
                                           _button_struct 004C  
                                   _wr1RegCompleteHandler 9AEC  
                         __end_of_EUSART1_SetErrorHandler 9FE2  
                                       getHopCode@tempHop 0020  
                                       getHopCode@tempPos 0022  
                        __end_of_TMR0_SetInterruptHandler 9FB0  
                                                 ?___lmul 001D  
                                      ?_I2C1_DO_SEND_STOP 0001  
                                                 ?___wmul 0010  
                                              ??_TMR0_ISR 0003  
                                              _getHopCode 6E86  
                                              ??_TMR1_ISR 000A  
                                              ??_TMR2_ISR 0005  
                                 __end_of_ADCC_Initialize 9420  
                                         _I2C1_MasterOpen 9E7C  
                                   ??_SetSegmentValueMain 001D  
                                         _I2C1_MasterStop A09E  
                                         _I2C1_Initialize 9F00  
                                     __end_of_I2C1_Poller 9F46  
                                __end_of_setFlashLigth_ON 979A  
                                                 _ADFLTRH 000F73  
                                                 _ADFLTRL 000F72  
                                                 ?_memcpy 0010  
                                    readRFButtons@keyType 0087  
                                       __end_of_StopOrder 9D46  
                                          ___lmul@product 0025  
                                                 _ADPREVH 000F62  
                                                 _ADPREVL 000F61  
                                write_eusartparser@debug2 0021  
                              __end_of_ResetDefaultMemory 6A3C  
                                                 _ADSTPTH 000F69  
                                                 _ADSTPTL 000F68  
                          _menuConfiguration_stateMachine 02BD  
                                         ?_PMD_Initialize 0001  
                       keeloq_classic_decrypt_packet@data 0038  
                                  ?_I2C1_DO_SEND_ADR_READ 0001  
                                           _erroranterior 018B  
                                     ??_I2C1_DO_SEND_STOP 0010  
                  __end_of_EUSART1_SetFramingErrorHandler 9FD8  
                          _EUSART1_SetFramingErrorHandler 9FCE  
                                    _refreshADCZeroOffset 7654  
                                ??_sm_execute_ControlGate 00E9  
                                   i2c_readDataBlock@data 0024  
                                   _VerifyElectricalBrake 8944  
                                                 i2l15003 5044  
                                                 i2l13237 9D26  
                                                 i2l15013 5070  
                                                 i2l15031 50DE  
                                                 i2l15111 5704  
                                                 i2l15033 50EE  
                                                 i2l15035 50FE  
                                                 i2l15019 5096  
                                                 i2l15211 58F2  
                                                 i2l15037 5104  
                                                 i2l15133 5764  
                                                 i2l15125 5740  
                                                 i2l15055 5160  
                                                 i2l15047 5138  
                                                 i2l15143 578E  
                                                 i2l15127 574A  
                                                 i2l15223 9294  
                                                 i2l15073 51B8  
                                                 i2l15083 51DE  
                                                 i2l15067 51AA  
                                                 i2l15155 57C8  
                                                 i2l15163 5806  
                                                 i2l15093 520E  
                                                 i2l17007 8152  
                                                 i2l15079 51CE  
                                                 i2l15247 8592  
                                                 i2l15089 51F6  
                                                 i2l15257 85C0  
                                                 i2l17121 6E66  
                                                 i2l15187 5878  
                                                 i2l17115 6E4E  
                                                 i2l17107 6E32  
                                                 i2l15199 58B6  
                                                 i2l14809 7D5A  
                                                 i2l17073 6DB2  
                                                 i2l17057 6D68  
                                                 i2l17049 6D54  
                                                 i2l14835 8A1C  
                                                 i2l17083 6DDC  
                                                 i2l14829 8A00  
                                                 i2l17093 6DFE  
                                                 i2l14787 7CEE  
                                                 i2l14779 7CB2  
                                                 i2l14789 7CFA  
                                                 i2l14991 5008  
                                                 i2l14983 4FE2  
                                                 i2l14799 7D28  
                                                 i2l14993 5010  
                                                 i2l14987 4FF2  
                                                 i2l16987 98CA  
                          actionZone_Opened@typeOpenOrder 0021  
                                   ?_getStateOpenPosition 0001  
                                          ??_RemoveSerial 00D8  
                                              _fimdecurso 0175  
                            ?_EUSART1_DefaultErrorHandler 0001  
                                       _I2C1_MasterIsNack 9F70  
                                                 _SP1BRGH 000F9C  
                                                 _SP1BRGL 000F9B  
                                              _dispStruct 0072  
                                                 _OSCCON1 000ED8  
                                                 _OSCCON3 000EDA  
                                               _I2C1_Open 864A  
                               ??_I2C1_DO_RX_NACK_RESTART 0010  
                                                 _RGB_Set 9F46  
                                              _auxCounter 00FC  
                                         ??_readRFButtons 003B  
                                                 _OSCTUNE 000EDD  
                                       _I2C1_MasterSetIrq A062  
                                                 _SSP1ADD 000F93  
                                                 _SLRCONA 000F0E  
                                                 _SLRCONB 000F16  
                                                 _SLRCONC 000F1E  
                                                 _SLRCOND 000F23  
                                                 _SLRCONE 000F2B  
                                                 _WDTCON0 000ED2  
                                                 _SSP1BUF 000F92  
                                                 _WDTCON1 000ED3  
                                      ?_I2C1_MasterIsNack 0001  
                              ?_I2C1_DO_SEND_RESTART_READ 0001  
                          ??_I2C1_SetDataCompleteCallback 0019  
                                        ?_TMR1_WriteTimer 0001  
                                      ?_I2C1_MasterSetIrq 0001  
                            __end_of_generateErrorLearnig 8E92  
                                            _classic_data 0292  
                                          load_New_Menu@i 0023  
                                         ?_setValueToEdit 003A  
                                                 _RFcount 007E  
                         ??_keeloq_classic_decrypt_packet 00D8  
                                                 _Decrypt 7B0C  
                                  eusartparser@relcounter 00F7  
                                          ??_WaitPreFlash 0018  
                                                 _RFstate 019C  
                                      _i2c1_fsmStateTable 0F01  
                                          ??_NormalKeyGen 0028  
                                     ??_I2C1_MasterIsNack 0010  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F500 9A68  
          _rd1RegCompleteHandler@i2c1_master_example$F500 9A3C  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F511 9A3C  
          _rd2RegCompleteHandler@i2c1_master_example$F511 9A10  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F523 9B44  
          _wr2RegCompleteHandler@i2c1_master_example$F523 9B18  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F517 9A10  
                               __end_of_I2C1_DO_SEND_STOP A030  
          _wr1RegCompleteHandler@i2c1_master_example$F517 99E4  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535 96DE  
        _rdBlkRegCompleteHandler@i2c1_master_example$F535 969E  
                               ??_rdBlkRegCompleteHandler 001B  
                          getCurrentComparator@tempOffset 0020  
                                                 _ReadADC 9284  
                                      I2C1_SetCallback@cb 0010  
                                           _write_package 9960  
                                     ??_I2C1_MasterSetIrq 0010  
                                     _controlSelectRemote 3FFC  
                              __end_of_clearLearningValue 88CA  
                                                 _NextHop 028E  
                                                 __Hparam 0000  
                              __end_of_write_eusartparser 35B8  
                                                 __Lparam 0000  
                                         _WWDT_Initialize 9F88  
                                         ??_load_New_Menu 0020  
                              ??_TMR2_SetInterruptHandler 0012  
                                               _ADC_array 0200  
                                            _getSerialCmd 9420  
                                                 ___awdiv 85C6  
                                                 ___lbdiv 979A  
                                                 ___lbmod 9B44  
                                                 ___lldiv 86CE  
                                              _readInputs 754C  
                                         _controlVelocity 5906  
                                                 ___lwdiv 932E  
                                           _OpenFullOrder 9BE6  
                                            __psmallconst 0F00  
                                     RemoveSerial@cmdType 00DA  
                   __end_of_setPositionInvertionInClosing 720A  
                           _setPositionInvertionInClosing 70E2  
                          ??_sm_execute_menuConfiguration 00EB  
                                     _EUSART1_is_rx_ready 9F26  
                                          getHopCode@data 0016  
                                                 _difTime 0193  
                                                 __pcinit 7E18  
                                           ?_I2C1_DO_IDLE 0001  
                                           ?_I2C1_DO_RCEN 0001  
                                                 __ramtop 0F00  
                                  i2c_writeNBytes@address 0039  
                                   __end_of_getTypeRemote A05C  
                                    __end_of_init_package 98A4  
                                                 __ptext0 6A3C  
                                                 __ptext1 3AEA  
                                                 __ptext2 1908  
                                                 __ptext3 35B8  
                                                 __ptext4 4A4E  
                                                 __ptext5 9D9A  
                                                 __ptext6 3FFC  
                                                 __ptext7 A056  
                                                 __ptext8 9420  
                                                 __ptext9 7D64  
                                   ?_refreshADCZeroOffset 0001  
                                              _memoryTEMP 02A2  
                                      i2c_readDataBlock@d 002A  
                                _I2C1_MasterEnableRestart A0A2  
                          ??_TMR1_DefaultInterruptHandler 0001  
                               __end_of_I2C1_MasterIsNack 9F7C  
                            ?_I2C1_SetAddressNackCallback 0015  
                                               _T1CONbits 000FCF  
                   __end_of_setPositionInvertionInOpening 7B0C  
                           _setPositionInvertionInOpening 7A30  
                                                 _lastKey 0198  
                                              _readbutton 8DBE  
                                   _OSCILLATOR_Initialize 9EAC  
                                   OpenWalkOrder@diffTime 001A  
                                             _ShowVersion 8E92  
                                    ?_controlSelectRemote 0001  
                             ?_validateRemoteSerialNumber 002E  
                                        _InitFullAutoTime 9DCE  
                               __end_of_I2C1_MasterSetIrq A068  
                             checkNVM_VarSystem@saveParam 003A  
                                                 _menu_st 0151  
                                __end_of_I2C1_DO_TX_EMPTY 8FB8  
                                  RemoveSerial@tempSerial 00DB  
                                       __end_of_setRGB_ON 8312  
                                      _EUSART1_Initialize 87D0  
                                ??_PIN_MANAGER_Initialize 0010  
                               ?_TMR1_SetInterruptHandler 0010  
                                              ?_I2C1_Open 0001  
                                                 _sumHIST 784E  
                                                 _sm_init 91D8  
                                          _BufferRF_12BIT 0189  
                                             sumHIST@sumH 001C  
                                    __end_of_read_package 93D0  
                                                 _var_sys 0100  
                           ??_EUSART1_DefaultErrorHandler 0001  
                             ??_ControlDecelarationFactor 0010  
                                ?_I2C1_CallbackReturnStop 0019  
                                     init_package@package 0010  
                                           _OpenWalkOrder 8CE2  
                                    _zeroCrossingWaitTime 02FA  
                                       SetSegmentValue@d1 001D  
                                       SetSegmentValue@d2 001C  
                       __end_of_I2C1_DO_SEND_RESTART_READ A048  
                                    end_of_initialization 7EBE  
                              __end_of_I2C1_MasterSendAck A06E  
                                    ?_EUSART1_is_rx_ready 0001  
                                     _I2C1_MasterClearIrq A074  
                                     ?_EUSART1_Initialize 0001  
                                               _PCON0bits 000FD7  
                                                 memcpy@d 0017  
                                                 memcpy@n 0014  
                                                 memcpy@s 0019  
                              __end_of_I2C1_MasterStartRx A096  
                             _EUSART1_OverrunErrorHandler 02E7  
                                  ?_rd1RegCompleteHandler 0019  
                                         _i2c_writeNBytes 8B1E  
                              ?_GetSecurityStateInClosing 0001  
                                  _I2C1_DO_SEND_ADR_WRITE 9F54  
                                       ?_cmdMemoryIsEmpty 002E  
                                          ?_write_package 0011  
                                           _calculateMean 8EF8  
                            __end_of_sm_get_current_state 9F26  
                                               i2u1520_40 575E  
                                               i2u1513_40 56FE  
                                               i2u2321_48 0056  
                                               i2u1508_40 51CC  
                                               i2u1532_40 582C  
                                               i2u1533_40 583A  
                                               i2u1525_40 57BC  
                                               i2u1542_40 589E  
                                               i2u1526_40 57C2  
                                               i2u1471_40 7D08  
                                               i2u2318_48 003E  
                            __end_of_I2C1_DO_SEND_RESTART A038  
                                               i2u1472_40 7D16  
                                               i2u1536_40 5858  
                                               i2u1545_40 58C2  
                                               i2u1561_40 6696  
                                               i2u1553_45 92AC  
                                               i2u1490_40 5008  
                                               i2u1474_40 7D34  
                                               i2u1546_40 58CA  
                                               i2u1538_40 586E  
                                               i2u1562_40 670A  
                                               i2u1475_40 7D48  
                                               i2u1483_40 8A16  
                                               i2u1379_40 9B88  
                                               i2u1555_40 8550  
                                    __end_of_eusartparser 1908  
                                               i2u1476_40 7D56  
                                               i2u1548_40 58EA  
                                         _WWDT_TimerClear 9D46  
                                               i2u1469_40 7CCC  
                                               i2u1557_40 85A2  
                                 __end_of_I2C1_MasterOpen 9E94  
                                  ?_wr1RegCompleteHandler 0019  
                                               i2u1495_40 5084  
                                               i2u1479_40 89E0  
                                               i2u1912_48 80E8  
                                               i2u1497_40 50AE  
                                   __end_of_ControlLights 4A4E  
                                               i2u1912_49 80FA  
                                               i2u1498_40 50BE  
                                               i2u1914_48 8114  
                                               i2u1499_40 50CE  
                                               i2u1922_48 974C  
                                               i2u1931_40 6DA4  
                                               i2u1914_49 8126  
                                               i2u1916_48 813E  
                                 __end_of_I2C1_MasterStop A0A2  
                                               i2u1934_40 6DC8  
                                               i2u1918_48 9C46  
                                               i2u3447_47 9ECC  
                                 __end_of_I2C1_Initialize 9F14  
                                         ___lldiv@divisor 0014  
                                               i2u1946_48 6E74  
                                   __end_of_ControlInputs 732E  
                   __end_of_EUSART1_SetRxInterruptHandler 9FC4  
                           _EUSART1_SetRxInterruptHandler 9FBA  
                                             _I2C1_Poller 9F36  
                        ??_SetSegmentValueIntermitentMain 001F  
                         ?_SetSegmentValueIntermitentMain 001C  
                                         _WWDT_SoftEnable A086  
                                         ___lldiv@counter 001C  
                                      ??_cmdMemoryIsEmpty 002F  
                               ?_I2C1_CallbackReturnReset 0019  
                           __end_of_I2C1_MasterDisableIrq A0AE  
                                             _I2C1_Status 023C  
                              ?_GetSecurityStateInOpening 0001  
                                            _ControlMotor 549A  
                                            _done_changes 018E  
                                  SaveNVM_VarSystem@point 00DB  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                             ?_getHopCode 0016  
                                          ?_OpenFullOrder 0001  
                        SetSegmentValueIntermitentMain@d1 001F  
                        SetSegmentValueIntermitentMain@d2 001C  
                                     _I2C1_MasterSendNack A06E  
                                           HopCHK@hopDiff 0026  
                     __end_of_I2C1_SetAddressNackCallback 9E7C  
                             _I2C1_SetAddressNackCallback 9E64  
                                        ?_ADCC_Initialize 0001  
                                     _getTimeDecelaration 7948  
                                              _sm_restart 9594  
                        __end_of_ADCC_GetSingleConversion 9ED8  
                                    ?_I2C1_MasterClearIrq 0001  
                                          ??_I2C1_DO_IDLE 0010  
                                    ??_EUSART1_Initialize 0012  
                                        NormalKeyGen@SEED 02D9  
                                          ??_I2C1_DO_RCEN 0010  
                      __end_of_I2C1_DO_SEND_RESTART_WRITE A040  
                              _I2C1_DO_SEND_RESTART_WRITE A038  
                       actionZone_Closing@securityClosing 0032  
                             ?_sm_execute_ControlLearning 00DC  
                                _TMR0_SetInterruptHandler 9FA6  
                                               _PORTAbits 000F8D  
                                               _PORTBbits 000F8E  
                                  ?_VerifyElectricalBrake 0001  
                                               _PORTEbits 000F91  
                         __end_of_rdBlkRegCompleteHandler 971E  
                                  ??_getStateOpenPosition 0032  
                                            ??_CloseOrder 0018  
                                   ??_controlSelectRemote 00E0  
                                    _SetSegmentValueLearn 7752  
                           ??_I2C1_SetAddressNackCallback 0019  
                               I2C1_Read1ByteRegister@reg 0022  
                                        ___lbmod@dividend 0011  
                                    __end_of_Segments_Set 9F88  
                                     _ControlCounterMoves 9126  
                            _controlLearning_stateMachine 02B2  
                         I2C1_SetDataCompleteCallback@ptr 0017  
                                          ?_OpenWalkOrder 0001  
                                              _stateMotor 0083  
                                      eusartparser@i_7381 00E9  
                                      eusartparser@i_7390 00EF  
                                      eusartparser@i_7382 00ED  
                                      eusartparser@i_7391 00F0  
                                      eusartparser@i_7383 00EE  
                                      eusartparser@i_7392 00F4  
                                      eusartparser@i_7384 00F1  
                                      eusartparser@i_7393 00F5  
                                      eusartparser@i_7385 00F2  
                                      eusartparser@i_7394 00F6  
                                      eusartparser@i_7386 00F3  
                                      eusartparser@i_7388 00EA  
                                      eusartparser@i_7389 00EB  
                                           ?_sumEnergyADC 0010  
                          I2C1_CallbackReturnReset@funPtr 0019  
                       actionZone_Opening@securityClosing 00E4  
                                    ?_I2C1_MasterSendNack 0001  
                         keeloqDecryptPacket@classic_data 00E2  
                                     EUSART1_Write@txData 0010  
                                       ??_ClearFlag_rfCMD 0010  
                                    ?_getTimeDecelaration 0029  
                                   ??_EUSART1_is_rx_ready 0010  
                                       _saveEnergyADCHist 9B98  
                                 __end_of_WWDT_Initialize 9F92  
                                             ___lbmod@rem 0013  
                       actionZone_Opening@securityOpening 00E5  
                                      eusartparser@buffer 0185  
                                          ?_calculateMean 0010  
                                        ??_refreshCurrent 0021  
                                     _updateChangesToUart 8AAA  
                                       ??_SetSegmentValue 001D  
                                            _EUSART1_Read 9506  
                                      ?_saveEnergyADCHist 0010  
                                      eusartparser@save_f 018D  
                       __end_of_GetSecurityStateInClosing 8018  
                                      eusartparser@serial 00F8  
                                        ??_refreshSegment 0002  
                                          __end_of_DecCHK 9872  
                                       _controlLearnDigit 98D6  
                                 __end_of_controlVelocity 5B24  
                                    ?_ControlCounterMoves 0001  
                                     setValueToEdit@value 01FC  
                                      _actionZone_Closing 4D44  
                                    __end_of_RemoveSerial 87D0  
                                          __end_of_HopCHK 8540  
                                      __end_of_CloseOrder 9BE6  
                                 _zeroCrossingWaitTimeIdx 0084  
                                            _InitReceiver 9D9A  
                               _ControlDecelarationFactor 9E1C  
                                      ?_controlLearnDigit 0001  
                                    _timer0ReloadVal16bit 0290  
                       __end_of_GetSecurityStateInOpening 80BE  
                                       setRGB_ON@RGBLigth 0015  
                                            ??_ReadSerial 0030  
                                     ??_saveEnergyADCHist 0012  
                            __end_of_INTERRUPT_Initialize A08E  
                                      _actionZone_Opening 5246  
                                   ??_I2C1_MasterClearIrq 0010  
                    __end_of_TMR2_DefaultInterruptHandler A0B6  
                            _TMR2_DefaultInterruptHandler A0B4  
                                             ?_readInputs 0001  
                                               _DispTable 03D2  
                                          __end_of___lmul 9284  
                                   __end_of_LoadManufCode 9CC4  
                                     ?_actionZone_Closing 0001  
                                          __end_of___wmul 9C32  
                                          _I2C1_DO_RX_ACK A020  
                                  ??_refreshADCZeroOffset 0017  
                                    _generateErrorLearnig 8E2A  
                                            _InitSoftStop 94BC  
                                     ??_controlLearnDigit 0013  
                                 i2_VerifyElectricalBrake 89BC  
                                          __end_of_memcpy 961C  
                                    ?_updateChangesToUart 0001  
                                  ?_OSCILLATOR_Initialize 0001  
                                    __end_of_WaitPreFlash 8C02  
                            __end_of_getCurrentComparator 6582  
                                      sm_send_event@event 0014  
                                    __end_of_NormalKeyGen 754C  
                                           _saveNewSerial 8C02  
                                             ?_readbutton 0001  
                                     ?_actionZone_Opening 0001  
                                   ?_SetSegmentValueLearn 0001  
                         __end_of_I2C1_CallbackReturnStop A09E  
                          ?_setPositionInvertionInClosing 0001  
                           __end_of_I2C1_MasterSendTxData A050  
                                       _read_eusartparser 2988  
                                   refreshADCZeroOffset@i 0017  
                                     start_initialization 7E18  
                             i2GetMotorPower@defineatraso 0004  
                                             ??_I2C1_Open 0010  
                                          ??_sumEnergyADC 0012  
                                      ?_read_eusartparser 0018  
                                             __end_of_rxi 5246  
                                   ??_I2C1_MasterSendNack 0010  
                                 __end_of_i2c_writeNBytes 8B92  
                          ?_setPositionInvertionInOpening 0001  
                                   ??_getTimeDecelaration 002D  
           EUSART1_SetRxInterruptHandler@interruptHandler 0010  
           EUSART1_SetTxInterruptHandler@interruptHandler 0010  
                               __end_of_saveEnergyADCHist 9BC0  
                                 __end_of_WWDT_TimerClear 9D62  
                                    ??_actionZone_Closing 0032  
                                   __end_of_EUSART1_Write 969E  
                                 __end_of_WWDT_SoftEnable A08A  
                                      __end_of_ReadSerial 8CE2  
                                         ??_write_package 0018  
                                  rd1RegCompleteHandler@p 0019  
                            __end_of_verifyProgramingMode 9840  
                                               _ReqResync 9E34  
                               __end_of_controlLearnDigit 9906  
                                     ??_read_eusartparser 001A  
                                                ??_DecCHK 0012  
                                       _programmer_enable 0085  
                                    ??_actionZone_Opening 003B  
                                  _sm_execute_ControlGate 43DE  
                 sm_execute_ControlLearning@typeOpenOrder 003A  
                                                ??_HopCHK 0026  
                               refreshADCZeroOffset@media 0018  
                                I2C1_SetBuffer@bufferSize 0012  
                                   ??_ControlCounterMoves 003A  
                                       _controlSaveRemote 7D64  
                                        ?_I2C1_MasterOpen 0001  
                            keeloqDecryptPacket@hop_error 00E8  
                                        ?_I2C1_MasterStop 0001  
                                        ?_I2C1_Initialize 0001  
                                 saveNewSerial@tempSerial 00D8  
                                  controlSelectRemote@pos 00E2  
                                         ??_OpenFullOrder 0018  
                                   calculateMean@newValue 0014  
                                      ?_controlSaveRemote 0001  
                                 sm_get_current_state@psm 0010  
                                        ??_PMD_Initialize 0010  
                                                ??___lmul 0025  
                                  __end_of_I2C1_DO_RX_ACK A028  
                                                ??___wmul 0014  
                                      _zeroCrossingLength 0197  
                                          _VerifyFollowMe 9C7E  
                                  wr1RegCompleteHandler@p 0019  
                                   _EUSART1_RxDataHandler 9D08  
                                 ??_I2C1_DO_SEND_ADR_READ 0010  
                          ?_EUSART1_SetRxInterruptHandler 0010  
                                             ?_sm_restart 0010  
                                             __pdataBANK0 00FC  
                                             __pdataBANK1 01FE  
                                             __pdataBANK2 02F6  
                                             __pdataBANK3 03D2  
                                   ?_generateErrorLearnig 0001  
                                                ??_memcpy 0016  
                                       ?_setFlashLigth_ON 0010  
                           ?_TMR2_DefaultInterruptHandler 0001  
                                   ??_updateChangesToUart 001C  
                                       _controlMotorForce 56E4  
                                     ??_controlSaveRemote 0020  
                               __end_of_read_eusartparser 3014  
                                          ?_saveNewSerial 00D8  
                                        I2C1_Open@address 0010  
                                          _eusart1RxCount 0093  
                                      ??_setFlashLigth_ON 0012  
                                _ADCC_GetSingleConversion 9EC2  
                                      ?_controlMotorForce 0001  
                                   __end_of_InitSoftStart 9070  
                                               _StopOrder 9D2A  
                                    _sm_get_current_state 9F14  
                                             __pbssCOMRAM 003B  
                                         ??_OpenWalkOrder 0018  
                                    _I2C1_DO_SEND_RESTART A030  
                                getTimeDecelaration@state 0031  
                       _EUSART1_RxDefaultInterruptHandler 02EB  
                                           __pcstackBANK0 00D8  
                                        ??_setValueToEdit 00DC  
                                           __pcstackBANK2 02EF  
                                                ?_RGB_Set 0001  
                                        _brakeElectric_st 0078  
                             ??_I2C1_DO_SEND_RESTART_READ 0010  
                                     ??_controlMotorForce 0005  
                                      _ResetDefaultMemory 68B2  
                                    ReadSerial@tempSerial 002E  
                                         ??_calculateMean 0018  
                         ??_EUSART1_SetTxInterruptHandler 0012  
                                    __end_of_I2C1_DO_IDLE A000  
                        ??_EUSART1_SetFramingErrorHandler 0012  
                         ?_EUSART1_SetFramingErrorHandler 0010  
                                                ?_Decrypt 001B  
                                    __end_of_I2C1_DO_RCEN 9FF6  
                                           _GetMotorPower 7BD8  
                                        ?_WWDT_Initialize 0001  
                                              ?_ReqResync 0010  
                               __end_of_controlSaveRemote 7E18  
                                            _init_package 9872  
                           I2C1_SetAddressNackCallback@cb 0015  
                                    updateChangesToUart@i 001C  
                                      sm_execute_main@psm 00ED  
                                                ?_ReadADC 0001  
                                            RGB_Set@value 0010  
                                   _TMR0_InterruptHandler 02E3  
                                     ?_ResetDefaultMemory 0001  
                                               __pnvBANK1 01FD  
                                               __pnvBANK2 02DD  
                                   _rd2RegCompleteHandler 9A94  
                                        _InitWalkAutoTime 9ED8  
                                        ?_controlVelocity 0001  
                                __end_of_InitFullAutoTime 9DE8  
                             __end_of_SetSegmentValueMain 9DCE  
                          VerifyElectricalBrake@tempState 0010  
                        i2VerifyElectricalBrake@tempState 0001  
                                        ___lwdiv@dividend 0010  
                                  _PIN_MANAGER_Initialize 8158  
                                  __end_of_VerifyFollowMe 9CA2  
                                   _wr2RegCompleteHandler 9A68  
                              ??_I2C1_MasterEnableRestart 0010  
                                               __pintcode 0008  
                                            _read_package 9380  
                                          _I2C1_MasterFsm 92DA  
                              __end_of_checkNVM_VarSystem 624C  
                        __end_of_TMR1_SetInterruptHandler 9FA6  
                         ADCC_GetSingleConversion@channel 0001  
                                         ?_I2C1_DO_RX_ACK 0001  
                                                ?___awdiv 0014  
                                               __ptext100 9D62  
                                               __ptext101 8158  
                                                ?___lbdiv 0010  
                                               __ptext110 9FD8  
                                               __ptext102 9EAC  
                                               __ptext111 93D0  
                                               __ptext103 A08A  
                                               __ptext200 9D7E  
                                               __ptext120 6BC4  
                                               __ptext112 9F26  
                                               __ptext104 9F00  
                                               __ptext201 A0B6  
                                               __ptext121 954E  
                                               __ptext113 549A  
                                               __ptext105 87D0  
                                               __ptext210 9D08  
                                               __ptext202 9C32  
                                               __ptext130 9126  
                                               __ptext122 784E  
                                               __ptext114 8944  
                                               __ptext106 9FB0  
                                               __ptext211 0000  
                                               __ptext203 4FD0  
                                               __ptext131 97D4  
                                               __ptext123 839E  
                                               __ptext115 472A  
                                               __ptext107 9FBA  
                                               __ptext204 A0B8  
                                               __ptext140 A008  
                                               __ptext132 8B1E  
                                               __ptext124 9B98  
                                               __ptext116 8282  
                                               __ptext108 9FC4  
                                               __ptext205 98A4  
                                               __ptext141 92DA  
                                               __ptext133 95D8  
                                               __ptext125 7654  
                                               __ptext117 9F46  
                                               __ptext109 9FCE  
                                               __ptext206 80BE  
                                               __ptext150 A040  
                                               __ptext142 946E  
                                               __ptext134 9E64  
                                               __ptext126 932E  
                                               __ptext118 975E  
                                               __ptext207 A07A  
                                               __ptext151 9FEC  
                                               __ptext143 9FE2  
                                               __ptext135 864A  
                                               __ptext127 63E8  
                                               __ptext119 720A  
                                               __ptext208 A0BA  
                                               __ptext160 A048  
                                               __ptext152 88CA  
                                               __ptext144 A010  
                                               __ptext136 9E7C  
                                               __ptext128 9C0C  
                                               __ptext209 A080  
                                               __ptext161 A068  
                                               __ptext153 842A  
                                               __ptext145 A018  
                                               __ptext137 A000  
                                               __ptext129 7BD8  
                                               __ptext170 9A3C  
                                               __ptext162 A08E  
                                               __ptext154 9F54  
                                               __ptext146 A020  
                                               __ptext138 99B8  
                                               __ptext171 96DE  
                                               __ptext163 A06E  
                                               __ptext155 9F62  
                                               __ptext147 A028  
                                               __ptext139 9F36  
                                               __ptext180 A09E  
                                               __ptext172 9A68  
                                               __ptext164 A092  
                                               __ptext156 9FF6  
                                               __ptext148 A030  
                                               __ptext181 A0A2  
                                               __ptext173 9A94  
                                               __ptext165 A096  
                                               __ptext157 8F5A  
                                               __ptext149 A038  
                              updateChangesToUart@package 001D  
                                               __ptext190 9F7C  
                                               __ptext182 A0A6  
                                               __ptext174 9AC0  
                                               __ptext166 A09A  
                                               __ptext158 A062  
                                               __ptext191 6582  
                                               __ptext183 9CE6  
                                               __ptext175 9AEC  
                                               __ptext167 969E  
                                               __ptext159 9F70  
                                               __ptext192 9B6E  
                                               __ptext184 A0AA  
                                               __ptext176 9B18  
                                               __ptext168 99E4  
                                               __ptext193 A0B4  
                                               __ptext185 A0AE  
                                               __ptext177 9E94  
                                               __ptext169 9A10  
                                               __ptext194 9284  
                                               __ptext186 A074  
                                               __ptext178 8D50  
                                               __ptext195 9EC2  
                                               __ptext179 9E02  
                                               __ptext196 971E  
                                               __ptext188 6D38  
                                               __ptext197 56E4  
                                               __ptext189 8540  
                                               __ptext198 89BC  
                                               __ptext199 7C9E  
                                                ?___lbmod 0010  
                                 write_eusartparser@debug 001F  
                            ??_SetSegmentValueIntermitent 0013  
                                                ?___lldiv 0010  
                               ??i2_VerifyElectricalBrake 0001  
                               __end_of_controlMotorForce 5906  
                                                ?___lwdiv 0010  
                                   confirmpackage@confirm 0014  
                                    i2c_readDataBlock@len 0026  
                                    i2c_readDataBlock@reg 0022  
                                   confirmpackage@package 0012  
                                 _I2C1_MasterWaitForEvent A008  
                                        _I2C1_MasterClose A0AE  
                         DecryptPacket_12BIT@classic_data 00E2  
                                ??_I2C1_Read1ByteRegister 0023  
                                          _I2C1_SetBuffer 9E02  
                            ??_INTERRUPT_InterruptManager 000A  
                                  ??_SetSegmentValueLearn 0010  
                                        _I2C1_MasterStart A0A6  
                                    NormalKeyGen@SKEYtemp 002C  
                                        _I2C1_MasterWrite A000  
                                      _clearLearningValue 884E  
                                      _write_eusartparser 3014  
                                    ??_ResetDefaultMemory 003A  
                                                _BAUD1CON 000F9F  
                                             __smallconst 0F00  
                                   ?_sm_get_current_state 0010  
                                            ?_ShowVersion 0001  
                                                _F2Chance 0199  
                                              ?_StopOrder 0001  
              __end_of_EUSART1_DefaultOverrunErrorHandler A080  
                    ??_EUSART1_DefaultOverrunErrorHandler 0001  
                     ?_EUSART1_DefaultOverrunErrorHandler 0001  
                      _EUSART1_DefaultOverrunErrorHandler A07A  
                                   ?_I2C1_DO_SEND_RESTART 0001  
                                       _i2c_readDataBlock 8A34  
                                            _eusartparser 0F22  
                                    _EUSART1_ErrorHandler 02E5  
                                       ?_I2C1_DO_TX_EMPTY 0001  
                                                ?_sumHIST 0010  
                                                ?_sm_init 0012  
                                 _EUSART1_SetErrorHandler 9FD8  
                                      ?_i2c_readDataBlock 0022  
                                     ReqResync@CurrentHop 0010  
                        __end_of_I2C1_CallbackReturnReset A09A  
                                     ?_clearLearningValue 0001  
                                        ___lwdiv@quotient 0015  
                                     ?_write_eusartparser 0010  
                                        ?_i2c_writeNBytes 0022  
                                      ??_I2C1_DO_TX_EMPTY 001B  
                                                _T2CLKCON 000FBF  
                                   __end_of_readRFButtons 68B2  
                                 ??_rd1RegCompleteHandler 001B  
                                 ?_I2C1_DO_SEND_ADR_WRITE 0001  
                                               _setRGB_ON 8282  
                               I2C1_MasterSendTxData@data 0010  
                                        ?_WWDT_TimerClear 0001  
                                    _INTERRUPT_Initialize A08A  
                                          ?_GetMotorPower 0001  
                                 ??_wr1RegCompleteHandler 001B  
                                        ?_WWDT_SoftEnable 0001  
                                              sumHIST@max 0018  
                                              sumHIST@min 001A  
                                       ??_TMR0_Initialize 0012  
                                     ??_i2c_readDataBlock 0028  
                                        _I2C1_SetCallback 8D50  
                                              sm_init@psm 0012  
                                          ___wmul@product 0014  
                                                _LATAbits 000F83  
                 EUSART1_SetErrorHandler@interruptHandler 0010  
                                                _LATCbits 000F85  
                                read_eusartparser@package 0018  
                                                _LATDbits 000F86  
                                                _LATEbits 000F87  
                                              _I2C1_DO_RX 88CA  
                                              _I2C1_DO_TX 842A  
                             ??_GetSecurityStateInClosing 0014  
                                                _PIE0bits 000EC2  
                                    _getCurrentComparator 63E8  
                                                _PIE3bits 000EC5  
                                                _PIE4bits 000EC6  
                                              DecCHK@data 0010  
                                                Decrypt@i 001E  
                                                Decrypt@j 001F  
                                                Decrypt@p 0020  
                                         _firstselectflag 01FE  
                                     _DecryptPacket_12BIT 8312  
                                              _I2C1_Close 9CE6  
                         setValueToEdit@ParameterSelected 003A  
                                            ?_I2C1_Poller 0001  
                                  __end_of_I2C1_MasterFsm 932E  
                            __end_of_I2C1_MasterGetRxData A092  
                              ??_TMR0_SetInterruptHandler 0012  
                                                _PIR0bits 000ECA  
                                            _Segments_Set 9F7C  
                                                _PIR3bits 000ECD  
                                         ?_VerifyFollowMe 0001  
                                                _PIR4bits 000ECE  
                                readRFButtons@rollingCode 0187  
                             ??_GetSecurityStateInOpening 0014  
                                  ?_EUSART1_RxDataHandler 0001  
                                    ??_clearLearningValue 0010  
                                      _I2C1_MasterSendAck A068  
                                    ??_write_eusartparser 0017  
                                    __end_of_sumEnergyADC 842A  
                               _I2C1_DO_SEND_RESTART_READ A040  
                                            ??_getHopCode 0018  
                                               _pointSync 007A  
                                   __end_of_load_New_Menu 4D44  
                                                _SSP1CON1 000F96  
                                                _SSP1CON2 000F97  
                                  ??_generateErrorLearnig 0017  
                                                _TMR0_ISR 9C32  
                                                _TMR1_ISR 971E  
                                                _TMR2_ISR 6D38  
                                           _getKeyPressed 9E4C  
                                 ??_VerifyElectricalBrake 0010  
                                  __end_of_I2C1_SetBuffer 9E1C  
                                               _temppower 0192  
                                         _powerControl_st 017B  
                                                _SSP1STAT 000F95  
                    __end_of_I2C1_SetDataCompleteCallback 9EAC  
                            _I2C1_SetDataCompleteCallback 9E94  
                                      _I2C1_MasterStartRx A092  
                                         ??_saveNewSerial 00DD  
                             ?_I2C1_DO_SEND_RESTART_WRITE 0001  
                                       ??_TMR1_Initialize 0012  
                                         _ClearFlag_rfCMD A05C  
                                     ?_I2C1_MasterSendAck 0001  
                                              _ADCON0bits 000F60  
                               __end_of_i2c_readDataBlock 8AAA  
                                       ___wmul@multiplier 0010  
                                ?_I2C1_DO_RX_NACK_RESTART 0001  
                                    _verifyProgramingMode 980C  
                                       ??_sm_execute_main 00EF  
                                    _numberOfErrorCurrent 008E  
                                    ?_DecryptPacket_12BIT 00E0  
                                               _ts_system 019E  
                                                _BitCount 008C  
                                     ?_I2C1_MasterStartRx 0001  
                            __end_of_I2C1_DO_ADDRESS_NACK 94BC  
                          controlSelectRemote@validSerial 00E1  
                          ??_TMR2_DefaultInterruptHandler 0001  
                                       _actionZone_Closed 7EC8  
                               ?_TMR2_SetInterruptHandler 0010  
                                    _idxAdcZeroAquisition 008F  
                                         _SetSegmentValue 9DE8  
                                            _RemoveSerial 8750  
                          getStateOpenPosition@stateMotor 00D9  
                          __end_of_I2C1_DO_SEND_ADR_WRITE 9F62  
                                       _actionZone_Opened 5B24  
                                           _I2C1_DO_RESET 9FE2  
                                      ?_actionZone_Closed 0001  
                                                _BufferRF 02C8  
                                     read_package@package 0018  
                                       ___lmul@multiplier 001D  
                                               copy_data0 7E2C  
                                               copy_data1 7E4C  
                                   ?_INTERRUPT_Initialize 0001  
                                              ?_setRGB_ON 0011  
                                   I2C1_Close@returnValue 0010  
                                ?_rdBlkRegCompleteHandler 0019  
                                      ?_actionZone_Opened 0001  
                                        _Abertura_pedonal 0191  
                                     I2C1_SetCallback@idx 0014  
                                     I2C1_SetCallback@ptr 0012  
                                      __end_of_getHopCode 6FB4  
                                             ??_ReqResync 0012  
                                    ??_I2C1_MasterSendAck 0010  
                                       ??_TMR2_Initialize 0012  
                                   EUSART1_Read@readValue 0010  
                                  ?_rd2RegCompleteHandler 0019  
                                     ??_actionZone_Closed 0020  
                                            _WaitPreFlash 8B92  
                                   ?_getCurrentComparator 0016  
                            __end_of_I2C1_MasterOperation 99E4  
                                            _NormalKeyGen 743E  
                     sm_execute_ControlGate@typeOpenOrder 00EB  
                                  ?_wr2RegCompleteHandler 0019  
                                    ??_I2C1_MasterStartRx 0010  
                                     ??_actionZone_Opened 0020  
                            saveEnergyADCHist@valueToSave 0010  
                   __end_of_EUSART1_SetTxInterruptHandler 9FBA  
                           _EUSART1_SetTxInterruptHandler 9FB0  
                                           _sm_send_event 8FB8  
                                     _keeloqDecryptPacket 5D12  
                                                __Hrparam 0000  
                                         ?_I2C1_MasterFsm 0001  
                                               memcpy@tmp 0016  
                                                __Lrparam 0000  
                                    sumEnergyADC@auxValue 0016  
                                     i2c_writeNBytes@data 0024  
                         actionZone_Opening@typeOpenOrder 00E6  
                                          ?_getKeyPressed 0001  
                               ??_I2C1_MasterWaitForEvent 0010  
                                       _main_stateMachine 01F1  
                                   _I2C1_MasterDisableIrq A0AA  
                                            ??_readInputs 0010  
                                 ??_OSCILLATOR_Initialize 0010  
                             __end_of_controlSelectRemote 43DE  
                                         ?_I2C1_SetBuffer 0010  
                                          _fullmotorPower 0082  
                                  ResetDefaultMemory@type 003A  
                                        _controlTimeslots 6582  
                                _TMR1_SetInterruptHandler 9F9C  
                                  ??_sm_get_current_state 0012  
                                   ?_verifyProgramingMode 0010  
                               _GetSecurityStateInClosing 7F72  
                       I2C1_Read1ByteRegister@returnValue 0024  
                                  ??_I2C1_DO_SEND_RESTART 0010  
                                            ??_readbutton 0010  
                               __end_of_actionZone_Closed 7F72  
                                   ??_DecryptPacket_12BIT 003B  
                                   _TMR1_InterruptHandler 02DF  
                               ??_EUSART1_SetErrorHandler 0012  
                                       ??i2_GetMotorPower 0001  
                     __end_of_EUSART1_DefaultErrorHandler A086  
                             _EUSART1_DefaultErrorHandler A080  
                                             ??_StopOrder 0018  
                             __end_of_EUSART1_is_rx_ready 9F36  
                                    ?_keeloqDecryptPacket 00E0  
                               __end_of_actionZone_Opened 5D12  
                               getStateOpenPosition@state 00D8  
                               _GetSecurityStateInOpening 8018  
                                         ___lwdiv@divisor 0012  
                                          ?_I2C1_DO_RESET 0001  
                                         ___lwdiv@counter 0014  
                                                __ptext10 9B44  
                                                __ptext11 85C6  
                                                __ptext20 91D8  
                                                __ptext12 9DB4  
                                                __ptext21 9594  
                                                __ptext13 A05C  
                                                __ptext30 5B24  
                                                __ptext22 884E  
                                                __ptext14 98D6  
                                                __ptext31 9C7E  
                                                __ptext23 8EF8  
                                                __ptext15 7752  
                                                __ptext40 8B92  
                                                __ptext32 9BC0  
                                                __ptext24 5246  
                                                __ptext16 86CE  
                                                __ptext41 9BE6  
                                                __ptext33 4D44  
                                                __ptext25 7A30  
                                                __ptext17 43DE  
                                                __ptext50 5EE4  
                                                __ptext42 9DCE  
                                                __ptext34 70E2  
                                                __ptext26 5906  
                                                __ptext18 2270  
                                                __ptext51 979A  
                                                __ptext43 8CE2  
                                                __ptext35 7948  
                                                __ptext27 732E  
                                                __ptext19 8E2A  
                                                __ptext60 743E  
                                                __ptext52 9EEC  
                                                __ptext44 8FB8  
                                                __ptext36 922E  
                                                __ptext28 94BC  
                                                __ptext61 9CA2  
                                                __ptext53 8DBE  
                                                __ptext45 9F14  
                                                __ptext37 9D2A  
                                                __ptext29 9E1C  
                                                __ptext70 60AC  
                                                __ptext62 7B0C  
                                                __ptext54 9380  
                                                __ptext46 9014  
                                                __ptext38 7F72  
                                                __ptext71 68B2  
                                                __ptext63 84B6  
                                                __ptext55 9506  
                                                __ptext47 9ED8  
                                                __ptext39 7EC8  
                                                __ptext80 965E  
                                                __ptext72 9070  
                                                __ptext64 6E86  
                                                __ptext56 671C  
                                                __ptext48 8018  
                                                __ptext81 90CC  
                                                __ptext73 9E4C  
                                                __ptext65 9E34  
                                                __ptext57 5D12  
                                                __ptext49 9934  
                                                __ptext90 8E92  
                                                __ptext82 9872  
                                                __ptext74 0F22  
                                                __ptext66 9840  
                                                __ptext58 980C  
                                                __ptext91 9DE8  
                                                __ptext83 8C02  
                                                __ptext75 3014  
                                                __ptext67 8312  
                                                __ptext59 9180  
                                                __ptext92 9906  
                                                __ptext84 81F0  
                                                __ptext76 624C  
                                                __ptext68 754C  
                                                __ptext93 9F88  
                                                __ptext85 8750  
                                                __ptext77 8AAA  
                                                __ptext69 6FB4  
                                                __ptext94 998C  
                                                __ptext86 8C72  
                                                __ptext78 2988  
                                                __ptext95 9F92  
                                                __ptext87 8A34  
                                                __ptext79 9960  
                                                __ptext96 961C  
                                                __ptext88 9D46  
                                                __ptext97 9F9C  
                                                __ptext89 A086  
                                                __ptext98 9CC4  
                                                __ptext99 9FA6  
                                            _SSP1CON1bits 000F96  
                                            _SSP1CON2bits 000F97  
                                     NormalKeyGen@HOPtemp 0028  
                                         ??_GetMotorPower 0010  
                                _controlGate_stateMachine 01E6  
                                           ?_GetOpenOrder 0001  
                                 ?_sm_execute_ControlGate 00E7  
                                 DecryptPacket_12BIT@data 00E0  
                                                _learn_st 0060  
                ?_rd2RegCompleteHandler@pic18f46k40$F7881 0019  
               ??_rd2RegCompleteHandler@pic18f46k40$F7883 001B  
                ?_rd1RegCompleteHandler@pic18f46k40$F7875 0019  
                ?_wr1RegCompleteHandler@pic18f46k40$F7867 0019  
               ??_rd1RegCompleteHandler@pic18f46k40$F7877 001B  
               ??_wr1RegCompleteHandler@pic18f46k40$F7869 001B  
              ?_rdBlkRegCompleteHandler@pic18f46k40$F7893 0019  
             ??_rdBlkRegCompleteHandler@pic18f46k40$F7895 001B  
                ?_wr2RegCompleteHandler@pic18f46k40$F7887 0019  
               ??_wr2RegCompleteHandler@pic18f46k40$F7889 001B  
                                      __end_of_readInputs 7654  
                                _I2C1_CallbackReturnReset A096  
                                             ?_I2C1_DO_RX 0001  
                                             ?_I2C1_DO_TX 0001  
                                          ?_sm_send_event 0012  
                    __end_of_TMR0_DefaultInterruptHandler A0BA  
                            _TMR0_DefaultInterruptHandler A0B8  
                                i2c_readDataBlock@address 0029  
                             __end_of_I2C1_MasterClearIrq A07A  
                            __end_of_I2C1_DO_RX_NACK_STOP A020  
                                             ?_I2C1_Close 0001  
                                          _ControlCurrent 6BC4  
                                                _security 016A  
                                    RemoveSerial@position 003A  
                                      __end_of_readbutton 8E2A  
                                              _RC1STAbits 000F9D  
          EUSART1_SetOverrunErrorHandler@interruptHandler 0010  
                                 __end_of_ClearFlag_rfCMD A062  
                                    sm_init@initial_state 0014  
                      __end_of_SetSegmentValueIntermitent 9960  
                              _SetSegmentValueIntermitent 9934  
                                                isa$xinst 000000  
                              ??_ADCC_GetSingleConversion 0001  
                                                int$flags 0050  
                         __end_of_I2C1_DO_RX_NACK_RESTART A018  
                           SetSegmentValueLearn@direction 0012  
                                            ??_sm_restart 0012  
                                I2C1_MasterOperation@read 0020  
                      __end_of_INTERRUPT_InterruptManager 009C  
                              _INTERRUPT_InterruptManager 0008  
                                       _loadNVM_VarSystem 6FB4  
                                SaveNVM_VarSystem@tempAdd 00D9  
                                       ??_TMR1_WriteTimer 0003  
                                 __end_of_SetSegmentValue 9E02  
                           __end_of_I2C1_DO_SEND_ADR_READ 9F70  
                             _EUSART1_FramingErrorHandler 02E9  
                                            _I2C1_DO_IDLE 9FF6  
                                     _EUSART1_Receive_ISR 80BE  
                                            _I2C1_DO_RCEN 9FEC  
                                     decrementTimeslot@ts 0001  
                                      ?_loadNVM_VarSystem 0001  
                           controlSelectRemote@tempSerial 00E4  
                                           _getTypeRemote A056  
                             __end_of_I2C1_MasterSendNack A074  
                                        sm_send_event@psm 0012  
                             __end_of_getTimeDecelaration 7A30  
                                   ??_keeloqDecryptPacket 00E4  
                                            _waitZeroPeak 0195  
                                __end_of_InitWalkAutoTime 9EEC  
                                              _INTCONbits 000FF2  
                                       _aux_in_auto_close 018F  
                                                memcpy@d1 0010  
                                                memcpy@s1 0012  
                          I2C1_SetAddressNackCallback@ptr 0017  
                                      i2c_writeNBytes@dat 0028  
                                      i2c_writeNBytes@len 0025  
                                      i2c_writeNBytes@reg 0022  
                                    _I2C1_MasterGetRxData A08E  
                                   _I2C1_MasterSendTxData A048  
                                     ??_loadNVM_VarSystem 003B  
                                           sm_restart@psm 0010  
                                  ??_INTERRUPT_Initialize 0010  
                                            _RFFull_12BIT 008A  
                                    _control_limit_switch 0081  
                          __end_of_sm_execute_ControlGate 472A  
                                              Decrypt@aux 0021  
                                              Decrypt@key 001D  
                                          ??_GetOpenOrder 0020  
                                             ??_setRGB_ON 0013  
                             __end_of_ControlCounterMoves 9180  
                                                intlevel2 0000  
                        actionZone_Opened@securityClosing 0020  
                        actionZone_Closed@securityOpening 0020  
                                __end_of_I2C1_MasterClose A0B2  
                                    ?_EUSART1_Receive_ISR 0001  
                                  _I2C1_Read1ByteRegister 9070  
                                 readRFButtons@typeRemote 019B  
                                  ??_getCurrentComparator 001A  
                                  rd2RegCompleteHandler@p 0019  
                                      __end_of_sm_restart 95D8  
                                        ___lldiv@dividend 0010  
                                 ?_PIN_MANAGER_Initialize 0001  
                                  __end_of_ControlCurrent 6D38  
                           I2C1_Read1ByteRegister@address 0023  
                                __end_of_I2C1_MasterStart A0AA  
                                __end_of_I2C1_MasterWrite A008  
                                   __end_of_write_package 998C  
                                             _tempCounter 02F6  
                  __end_of_EUSART1_SetOverrunErrorHandler 9FCE  
                          _EUSART1_SetOverrunErrorHandler 9FC4  
                                        ??_I2C1_DO_RX_ACK 0010  
                                             _WDTCON0bits 000ED2  
                                             getHopCode@i 0023  
                                 _I2C1_CallbackReturnStop A09A  
                            __end_of_EUSART1_Transmit_ISR 98D6  
                                          _confirmpackage 90CC  
                                      NormalKeyGen@Buffer 0030  
                                                sumHIST@i 0020  
                                         ??_getKeyPressed 0010  
                                           _ControlLights 472A  
                                       ?_InitFullAutoTime 0001  
                                           _ControlInputs 720A  
                           ?_TMR0_DefaultInterruptHandler 0001  
                                    _I2C1_DO_ADDRESS_NACK 946E  
                                              HopCHK@data 0024  
                                  ?_I2C1_MasterDisableIrq 0001  
                                           ?_getSerialCmd 001B  
                             __end_of_updateChangesToUart 8B1E  
                                          _ADC_zero_array 0396  
                               __end_of_loadNVM_VarSystem 70E2  
                                      ??_InitFullAutoTime 0010  
                   __end_of_keeloq_classic_decrypt_packet 91D8  
                           _keeloq_classic_decrypt_packet 9180  
                                   __end_of_OpenFullOrder 9C0C  
                                  wr2RegCompleteHandler@p 0019  
          EUSART1_SetFramingErrorHandler@interruptHandler 0010  
                          ?_EUSART1_SetTxInterruptHandler 0010  
                                  ??_verifyProgramingMode 0012  
                                      _eusart1RxLastError 019D  
                                          ?_getTypeRemote 0001  
                                        _cmdMemoryIsEmpty 81F0  
                                      NormalKeyGen@serial 0026  
                                __end_of_I2C1_SetCallback 8DBE  
                                             _var_sys_NVM 0098  
                                              _SSP1DATPPS 000EB8  
                                              _SSP1CLKPPS 000EB7  
                                         ??_I2C1_DO_RESET 0010  
                                    WWDT_TimerClear@state 0010  
                                        ___lldiv@quotient 0018  
                                    _I2C1_MasterOperation 99B8  
                                         _TMR0_Initialize 9CC4  
                            ??_validateRemoteSerialNumber 00D8  
                                      _checkNVM_VarSystem 60AC  
                                   ?_I2C1_MasterGetRxData 0001  
                           controlSelectRemote@typeRemote 00E3  
                                   __end_of_OpenWalkOrder 8D50  
                                            _sumEnergyADC 839E  
                                          _listSyncValues 0300  
                                           setRGB_ON@Freq 0011  
                                     ?_checkNVM_VarSystem 0001  
                                   ??_EUSART1_Receive_ISR 0001  
                          __end_of_PIN_MANAGER_Initialize 81F0  
                                       ??_ADCC_Initialize 0010  
                           __end_of_rd1RegCompleteHandler 9AEC  
                                         ??_sm_send_event 0016  
                                        ??_VerifyFollowMe 0010  
                                   __end_of_calculateMean 8F5A  
                                        sm_init@hist_mode 0016  
                                  __end_of_confirmpackage 9126  
                                         ?_ControlCurrent 0001  
                           __end_of_wr1RegCompleteHandler 9B18  
                                   _TMR2_InterruptHandler 02DD  
                                 ??_EUSART1_RxDataHandler 0001  
                                          ?_ControlLights 0001  
                                         _TMR1_Initialize 961C  
                                          ?_ControlInputs 0001  
                                   ?_I2C1_DO_ADDRESS_NACK 0001  
                                          ??_getSerialCmd 001C  
                                           ?_ControlMotor 0001  
                                         _sm_execute_main 3AEA  
